

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Sep 27 15:37:42 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	idataCOMRAM
    42  001F9C                     __pidataCOMRAM:
    43                           	opt stack 0
    44                           
    45                           ;initializer for _anio
    46  001F9C  000F               	dw	15
    47                           
    48                           ;initializer for _dia
    49  001F9E  0008               	dw	8
    50                           
    51                           ;initializer for _diasem
    52  001FA0  0003               	dw	3
    53                           
    54                           ;initializer for _hora
    55  001FA2  0012               	dw	18
    56                           
    57                           ;initializer for _mes
    58  001FA4  0009               	dw	9
    59                           
    60                           ;initializer for _minuto
    61  001FA6  001E               	dw	30
    62                           
    63                           	psect	smallconst
    64  000F00                     __psmallconst:
    65                           	opt stack 0
    66  000F00  00                 	db	0
    67  000F01                     _dpowers:
    68                           	opt stack 0
    69  000F01  0001               	dw	1
    70  000F03  000A               	dw	10
    71  000F05  0064               	dw	100
    72  000F07  03E8               	dw	1000
    73  000F09  2710               	dw	10000
    74  000F0B                     __end_of_dpowers:
    75                           	opt stack 0
    76  000F0B                     _LCD_INIT_STRING:
    77                           	opt stack 0
    78  000F0B  28                 	db	40
    79  000F0C  0C                 	db	12
    80  000F0D  01                 	db	1
    81  000F0E  06                 	db	6
    82  000F0F                     __end_of_LCD_INIT_STRING:
    83                           	opt stack 0
    84  0000                     _ALRMCFGbits	set	3985
    85  0000                     _ANCON0	set	3912
    86  0000                     _ANCON1	set	3913
    87  0000                     _EECON2	set	4007
    88  0000                     _INTCONbits	set	4082
    89  0000                     _LATAbits	set	3977
    90  0000                     _LATBbits	set	3978
    91  0000                     _OSCCONbits	set	4051
    92  0000                     _OSCTUNEbits	set	3995
    93  0000                     _PIE3bits	set	4003
    94  0000                     _PORTAbits	set	3968
    95  0000                     _PORTCbits	set	3970
    96  0000                     _RTCCFG	set	3903
    97  0000                     _RTCCFGbits	set	3903
    98  0000                     _RTCVALH	set	3993
    99  0000                     _RTCVALL	set	3992
   100  0000                     _T1CONbits	set	4045
   101  0000                     _TRISA	set	3986
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISBbits	set	3987
   104  0000                     _TRISC	set	3988
   105  000F0F                     __stringdata:
   106                           	opt stack 0
   107  000F0F                     STR_17:
   108                           
   109                           ; BSR set to: 15
   110  000F0F  25                 	db	37
   111  000F10  30                 	db	48	;'0'
   112  000F11  32                 	db	50	;'2'
   113  000F12  75                 	db	117	;'u'
   114  000F13  3A                 	db	58	;':'
   115  000F14  25                 	db	37
   116  000F15  30                 	db	48	;'0'
   117  000F16  32                 	db	50	;'2'
   118  000F17  75                 	db	117	;'u'
   119  000F18  3A                 	db	58	;':'
   120  000F19  25                 	db	37
   121  000F1A  30                 	db	48	;'0'
   122  000F1B  32                 	db	50	;'2'
   123  000F1C  75                 	db	117	;'u'
   124  000F1D  00                 	db	0
   125  000F1E                     STR_1:
   126                           
   127                           ; BSR set to: 15
   128  000F1E  25                 	db	37
   129  000F1F  30                 	db	48	;'0'
   130  000F20  31                 	db	49	;'1'
   131  000F21  75                 	db	117	;'u'
   132  000F22  00                 	db	0
   133  000F23                     STR_15:
   134                           
   135                           ; BSR set to: 15
   136  000F23  23                 	db	35
   137  000F24  00                 	db	0
   138  000F25                     STR_13:
   139                           
   140                           ; BSR set to: 15
   141  000F25  2A                 	db	42
   142  000F26  00                 	db	0
   143  000F27                     STR_4:
   144                           
   145                           ; BSR set to: 15
   146  000F27  41                 	db	65	;'A'
   147  000F28  00                 	db	0
   148  000F29                     STR_8:
   149                           
   150                           ; BSR set to: 15
   151  000F29  42                 	db	66	;'B'
   152  000F2A  00                 	db	0
   153  000F2B                     STR_12:
   154                           
   155                           ; BSR set to: 15
   156  000F2B  43                 	db	67	;'C'
   157  000F2C  00                 	db	0
   158  000F2D                     STR_16:
   159                           
   160                           ; BSR set to: 15
   161  000F2D  44                 	db	68	;'D'
   162  000F2E  00                 	db	0
   163  000F2F                     __end_of__stringdata:
   164                           	opt stack 0
   165                           
   166                           ; #config settings
   167  000F2F  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           	psect	nvCOMRAM
   170  00003F                     __pnvCOMRAM:
   171                           	opt stack 0
   172  00003F                     _anio_d:
   173                           	opt stack 0
   174  00003F                     	ds	1
   175  000040                     _anio_u:
   176                           	opt stack 0
   177  000040                     	ds	1
   178  000041                     _dia_semana:
   179                           	opt stack 0
   180  000041                     	ds	1
   181  000042                     _fecha_d:
   182                           	opt stack 0
   183  000042                     	ds	1
   184  000043                     _fecha_u:
   185                           	opt stack 0
   186  000043                     	ds	1
   187  000044                     _hora_d:
   188                           	opt stack 0
   189  000044                     	ds	1
   190  000045                     _hora_u:
   191                           	opt stack 0
   192  000045                     	ds	1
   193  000046                     _mes_d:
   194                           	opt stack 0
   195  000046                     	ds	1
   196  000047                     _mes_u:
   197                           	opt stack 0
   198  000047                     	ds	1
   199  000048                     _minuto_d:
   200                           	opt stack 0
   201  000048                     	ds	1
   202  000049                     _minuto_u:
   203                           	opt stack 0
   204  000049                     	ds	1
   205  00004A                     _segundo_d:
   206                           	opt stack 0
   207  00004A                     	ds	1
   208  00004B                     _segundo_u:
   209                           	opt stack 0
   210  00004B                     	ds	1
   211  00004C                     _RtccDate:
   212                           	opt stack 0
   213  00004C                     	ds	4
   214                           
   215                           	psect	cinit
   216  001DFA                     __pcinit:
   217                           	opt stack 0
   218  001DFA                     start_initialization:
   219                           	opt stack 0
   220  001DFA                     __initialization:
   221                           	opt stack 0
   222                           
   223                           ; Clear objects allocated to BANK0 (44 bytes)
   224  001DFA  EE00  F060         	lfsr	0,__pbssBANK0
   225  001DFE  0E2C               	movlw	44
   226  001E00                     clear_0:
   227  001E00  6AEE               	clrf	postinc0,c
   228  001E02  06E8               	decf	wreg,f,c
   229  001E04  E1FD               	bnz	clear_0
   230                           
   231                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   232  001E06  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   233                           
   234                           ; Clear objects allocated to COMRAM (23 bytes)
   235  001E08  EE00  F028         	lfsr	0,__pbssCOMRAM
   236  001E0C  0E17               	movlw	23
   237  001E0E                     clear_1:
   238  001E0E  6AEE               	clrf	postinc0,c
   239  001E10  06E8               	decf	wreg,f,c
   240  001E12  E1FD               	bnz	clear_1
   241                           
   242                           ; Initialize objects allocated to COMRAM (12 bytes)
   243                           ; load TBLPTR registers with __pidataCOMRAM
   244  001E14  0E9C               	movlw	low __pidataCOMRAM
   245  001E16  6EF6               	movwf	tblptrl,c
   246  001E18  0E1F               	movlw	high __pidataCOMRAM
   247  001E1A  6EF7               	movwf	tblptrh,c
   248  001E1C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   249  001E1E  6EF8               	movwf	tblptru,c
   250  001E20  EE00  F050         	lfsr	0,__pdataCOMRAM
   251  001E24  EE10 F00C          	lfsr	1,12
   252  001E28                     copy_data0:
   253  001E28  0009               	tblrd		*+
   254  001E2A  CFF5 FFEE          	movff	tablat,postinc0
   255  001E2E  50E5               	movf	postdec1,w,c
   256  001E30  50E1               	movf	fsr1l,w,c
   257  001E32  E1FA               	bnz	copy_data0
   258  001E34                     end_of_initialization:
   259                           	opt stack 0
   260  001E34                     __end_of__initialization:
   261                           	opt stack 0
   262  001E34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   263  001E36  6EF8               	movwf	tblptru,c
   264  001E38  0100               	movlb	0
   265  001E3A  EF98  F007         	goto	_main	;jump to C main() function
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1l	equ	0xFE1
   274                           
   275                           	psect	bitbssCOMRAM
   276  0002E0                     __pbitbssCOMRAM:
   277                           	opt stack 0
   278  0002E0                     _flag:
   279                           	opt stack 0
   280  0002E0                     	ds	1
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290                           	psect	bssCOMRAM
   291  000028                     __pbssCOMRAM:
   292                           	opt stack 0
   293  000028                     _RtccTimeVal:
   294                           	opt stack 0
   295  000028                     	ds	4
   296  00002C                     _a:
   297                           	opt stack 0
   298  00002C                     	ds	2
   299  00002E                     _b:
   300                           	opt stack 0
   301  00002E                     	ds	2
   302  000030                     _c:
   303                           	opt stack 0
   304  000030                     	ds	2
   305  000032                     _i:
   306                           	opt stack 0
   307  000032                     	ds	2
   308  000034                     _j:
   309                           	opt stack 0
   310  000034                     	ds	2
   311  000036                     _k:
   312                           	opt stack 0
   313  000036                     	ds	2
   314  000038                     _segundo:
   315                           	opt stack 0
   316  000038                     	ds	2
   317  00003A                     _key:
   318                           	opt stack 0
   319  00003A                     	ds	1
   320  00003B                     _RtccTime:
   321                           	opt stack 0
   322  00003B                     	ds	4
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1l	equ	0xFE1
   331                           
   332                           	psect	dataCOMRAM
   333  000050                     __pdataCOMRAM:
   334                           	opt stack 0
   335  000050                     _anio:
   336                           	opt stack 0
   337  000050                     	ds	2
   338  000052                     _dia:
   339                           	opt stack 0
   340  000052                     	ds	2
   341  000054                     _diasem:
   342                           	opt stack 0
   343  000054                     	ds	2
   344  000056                     _hora:
   345                           	opt stack 0
   346  000056                     	ds	2
   347  000058                     _mes:
   348                           	opt stack 0
   349  000058                     	ds	2
   350  00005A                     _minuto:
   351                           	opt stack 0
   352  00005A                     	ds	2
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           postdec1	equ	0xFE5
   360                           fsr1l	equ	0xFE1
   361                           
   362                           	psect	bssBANK0
   363  000060                     __pbssBANK0:
   364                           	opt stack 0
   365  000060                     _RtccAlrmTimeDate:
   366                           	opt stack 0
   367  000060                     	ds	8
   368  000068                     _RtccTimeDate:
   369                           	opt stack 0
   370  000068                     	ds	8
   371  000070                     _Rtcc_read_TimeDate:
   372                           	opt stack 0
   373  000070                     	ds	8
   374  000078                     _buffer2:
   375                           	opt stack 0
   376  000078                     	ds	20
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	cstackCOMRAM
   387  000001                     __pcstackCOMRAM:
   388                           	opt stack 0
   389  000001                     ??_isdigit:
   390  000001                     ??_lcd_send_nibble:
   391  000001                     ?___wmul:
   392                           	opt stack 0
   393  000001                     ?___awdiv:
   394                           	opt stack 0
   395  000001                     ?___lwdiv:
   396                           	opt stack 0
   397  000001                     Delay100TCYx@unit:
   398                           	opt stack 0
   399  000001                     Delay1KTCYx@unit:
   400                           	opt stack 0
   401  000001                     RtccReadDate@pDt:
   402                           	opt stack 0
   403  000001                     RtccReadTime@pTm:
   404                           	opt stack 0
   405  000001                     RtccWriteDate@pDt:
   406                           	opt stack 0
   407  000001                     RtccWriteTime@pTm:
   408                           	opt stack 0
   409  000001                     ___wmul@multiplier:
   410                           	opt stack 0
   411  000001                     ___awdiv@dividend:
   412                           	opt stack 0
   413  000001                     ___lwdiv@dividend:
   414                           	opt stack 0
   415                           
   416                           ; 2 bytes @ 0x0
   417  000001                     	ds	1
   418  000002                     lcd_send_nibble@nibble:
   419                           	opt stack 0
   420  000002                     _isdigit$2038:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x1
   424  000002                     	ds	1
   425  000003                     lcd_send_byte@n:
   426                           	opt stack 0
   427  000003                     RtccWriteDate@di:
   428                           	opt stack 0
   429  000003                     RtccWriteTime@di:
   430                           	opt stack 0
   431  000003                     isdigit@c:
   432                           	opt stack 0
   433  000003                     ___wmul@multiplicand:
   434                           	opt stack 0
   435  000003                     ___awdiv@divisor:
   436                           	opt stack 0
   437  000003                     ___lwdiv@divisor:
   438                           	opt stack 0
   439  000003                     RtccReadDate@rTD1:
   440                           	opt stack 0
   441  000003                     RtccReadTime@rTD1:
   442                           	opt stack 0
   443                           
   444                           ; 8 bytes @ 0x2
   445  000003                     	ds	1
   446  000004                     ??_RtccWriteTime:
   447  000004                     ??_RtccWriteDate:
   448  000004                     lcd_send_byte@address:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x3
   452  000004                     	ds	1
   453  000005                     lcd_init@i:
   454                           	opt stack 0
   455  000005                     lcd_gotoxy@y:
   456                           	opt stack 0
   457  000005                     lcd_comand@d:
   458                           	opt stack 0
   459  000005                     RtccWriteDate@wasOn:
   460                           	opt stack 0
   461  000005                     RtccWriteTime@wasOn:
   462                           	opt stack 0
   463  000005                     ___awdiv@counter:
   464                           	opt stack 0
   465  000005                     ___wmul@product:
   466                           	opt stack 0
   467  000005                     ___lwdiv@quotient:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x4
   471  000005                     	ds	1
   472  000006                     lcd_gotoxy@x:
   473                           	opt stack 0
   474  000006                     RtccWriteDate@wasAlrm:
   475                           	opt stack 0
   476  000006                     RtccWriteTime@wasAlrm:
   477                           	opt stack 0
   478  000006                     ___awdiv@sign:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x5
   482  000006                     	ds	1
   483  000007                     lcd_gotoxy@address:
   484                           	opt stack 0
   485  000007                     RtccWriteTime@wasWrEn:
   486                           	opt stack 0
   487  000007                     ___lwdiv@counter:
   488                           	opt stack 0
   489  000007                     RtccWriteDate@tempYear:
   490                           	opt stack 0
   491  000007                     ___awdiv@quotient:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x6
   495  000007                     	ds	1
   496  000008                     ?___lwmod:
   497                           	opt stack 0
   498  000008                     lcd_putc@c:
   499                           	opt stack 0
   500  000008                     RtccWriteTime@tempMinSec:
   501                           	opt stack 0
   502  000008                     ___lwmod@dividend:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x7
   506  000008                     	ds	1
   507  000009                     RtccWriteDate@wasWrEn:
   508                           	opt stack 0
   509  000009                     lcd_putrs@ptr:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x8
   513  000009                     	ds	1
   514  00000A                     RtccWriteDate@tempDayMonth:
   515                           	opt stack 0
   516  00000A                     RtccWriteTime@tempHourWDay:
   517                           	opt stack 0
   518  00000A                     ___lwmod@divisor:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x9
   522  00000A                     	ds	1
   523  00000B                     RtccReadDate@rTD0:
   524                           	opt stack 0
   525  00000B                     RtccReadTime@rTD0:
   526                           	opt stack 0
   527                           
   528                           ; 8 bytes @ 0xA
   529  00000B                     	ds	1
   530  00000C                     ___lwmod@counter:
   531                           	opt stack 0
   532  00000C                     RtccWriteDate@tempHourWDay:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0xB
   536  00000C                     	ds	1
   537  00000D                     ?_sprintf:
   538                           	opt stack 0
   539  00000D                     sprintf@sp:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0xC
   543  00000D                     	ds	1
   544  00000E                     
   545                           ; 0 bytes @ 0xD
   546  00000E                     	ds	1
   547  00000F                     sprintf@f:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xE
   551  00000F                     	ds	4
   552  000013                     
   553                           ; 0 bytes @ 0x12
   554  000013                     	ds	4
   555  000017                     ??_sprintf:
   556                           
   557                           ; 0 bytes @ 0x16
   558  000017                     	ds	4
   559  00001B                     sprintf@ap:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x1A
   563  00001B                     	ds	2
   564  00001D                     sprintf@flag:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x1C
   568  00001D                     	ds	1
   569  00001E                     sprintf@_val:
   570                           	opt stack 0
   571                           
   572                           ; 5 bytes @ 0x1D
   573  00001E                     	ds	5
   574  000023                     sprintf@prec:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x22
   578  000023                     	ds	1
   579  000024                     sprintf@width:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x23
   583  000024                     	ds	2
   584  000026                     sprintf@c:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x25
   588  000026                     	ds	1
   589  000027                     ??_main:
   590                           
   591                           ; 0 bytes @ 0x26
   592  000027                     	ds	1
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1l	equ	0xFE1
   601                           
   602 ;;
   603 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   604 ;;
   605 ;; *************** function _main *****************
   606 ;; Defined at:
   607 ;;		line 72 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  2  141[COMRAM] int 
   614 ;; Registers used:
   615 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   625 ;;Total ram usage:        1 bytes
   626 ;; Hardware stack levels required when called:    5
   627 ;; This function calls:
   628 ;;		_Read_RTC
   629 ;;		_Setup
   630 ;;		_lcd_comand
   631 ;;		_lcd_gotoxy
   632 ;;		_lcd_putrs
   633 ;;		_sprintf
   634 ;; This function is called by:
   635 ;;		Startup code after reset
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text0
   640  000F30                     __ptext0:
   641                           	opt stack 0
   642  000F30                     _main:
   643                           	opt stack 26
   644                           
   645                           ;main.c: 74: Setup();
   646                           
   647                           ; BSR set to: 15
   648                           ;incstack = 0
   649  000F30  EC40  F00F         	call	_Setup	;wreg free
   650  000F34                     l2471:
   651                           
   652                           ;main.c: 76: { lcd_comand(0b00000010);
   653  000F34  0E02               	movlw	2
   654  000F36  ECC7  F00F         	call	_lcd_comand
   655                           
   656                           ;main.c: 77: LATBbits.LATB1 = !LATBbits.LATB1;;
   657  000F3A  B28A               	btfsc	3978,1,c	;volatile
   658  000F3C  D002               	goto	u1860
   659  000F3E  0E01               	movlw	1
   660  000F40  D001               	goto	u1866
   661  000F42                     u1860:
   662  000F42  0E00               	movlw	0
   663  000F44                     u1866:
   664  000F44  6E27               	movwf	??_main& (0+255),c
   665  000F46  4627               	rlncf	??_main,f,c
   666  000F48  508A               	movf	3978,w,c	;volatile
   667  000F4A  1827               	xorwf	??_main,w,c
   668  000F4C  0BFD               	andlw	-3
   669  000F4E  1827               	xorwf	??_main,w,c
   670  000F50  6E8A               	movwf	3978,c	;volatile
   671                           
   672                           ;main.c: 78: LATBbits.LATB0 = !LATBbits.LATB0;
   673  000F52  B08A               	btfsc	3978,0,c	;volatile
   674  000F54  D002               	goto	u1870
   675  000F56  0E01               	movlw	1
   676  000F58  D001               	goto	u1876
   677  000F5A                     u1870:
   678  000F5A  0E00               	movlw	0
   679  000F5C                     u1876:
   680  000F5C  6E27               	movwf	??_main& (0+255),c
   681  000F5E  508A               	movf	3978,w,c	;volatile
   682  000F60  1827               	xorwf	??_main,w,c
   683  000F62  0BFE               	andlw	-2
   684  000F64  1827               	xorwf	??_main,w,c
   685  000F66  6E8A               	movwf	3978,c	;volatile
   686                           
   687                           ;main.c: 79: _delay((unsigned long)((98)*(4000000/4000.0)));
   688  000F68  0E80               	movlw	128
   689  000F6A  6E27               	movwf	??_main& (0+255),c
   690  000F6C  0E44               	movlw	68
   691  000F6E                     u2377:
   692  000F6E  2EE8               	decfsz	wreg,f,c
   693  000F70  D7FE               	goto	u2377
   694  000F72  2E27               	decfsz	??_main& (0+255),f,c
   695  000F74  D7FC               	goto	u2377
   696  000F76  D000               	nop2	
   697                           
   698                           ;main.c: 80: LATAbits.LATA0=1;
   699  000F78  8089               	bsf	3977,0,c	;volatile
   700                           
   701                           ;main.c: 81: LATAbits.LATA1=0;
   702  000F7A  9289               	bcf	3977,1,c	;volatile
   703                           
   704                           ;main.c: 82: LATAbits.LATA2=0;
   705  000F7C  9489               	bcf	3977,2,c	;volatile
   706                           
   707                           ;main.c: 83: LATAbits.LATA3=0;
   708  000F7E  9689               	bcf	3977,3,c	;volatile
   709                           
   710                           ;main.c: 84: {
   711                           ;main.c: 85: if (PORTAbits.RA5==1&&LATAbits.LATA0==1){key=1;sprintf(buffer2,"%01u",key);
      +                          lcd_putrs(buffer2);while(PORTAbits.RA5==1){_delay((unsigned long)((40)*(4000000/4000.0))
      +                          );}}
   712  000F80  BA80               	btfsc	3968,5,c	;volatile
   713  000F82  A089               	btfss	3977,0,c	;volatile
   714  000F84  D023               	goto	l143
   715  000F86  0E01               	movlw	1
   716  000F88  6E3A               	movwf	_key,c
   717  000F8A  0100               	movlb	0	; () banked
   718  000F8C  0E00               	movlw	high _buffer2
   719  000F8E  6E0E               	movwf	sprintf@sp+1,c
   720  000F90  0100               	movlb	0	; () banked
   721  000F92  0E78               	movlw	low _buffer2
   722  000F94  6E0D               	movwf	sprintf@sp,c
   723  000F96  0E0F               	movlw	high STR_1
   724  000F98  6E10               	movwf	sprintf@f+1,c
   725  000F9A  0E1E               	movlw	low STR_1
   726  000F9C  6E0F               	movwf	sprintf@f,c
   727  000F9E  C03A  F011         	movff	_key,?_sprintf+4
   728  000FA2  6A12               	clrf	?_sprintf+5,c
   729  000FA4  ECEE  F009         	call	_sprintf	;wreg free
   730  000FA8  0100               	movlb	0	; () banked
   731  000FAA  0E00               	movlw	high _buffer2
   732  000FAC  6E0A               	movwf	lcd_putrs@ptr+1,c
   733  000FAE  0100               	movlb	0	; () banked
   734  000FB0  0E78               	movlw	low _buffer2
   735  000FB2  6E09               	movwf	lcd_putrs@ptr,c
   736  000FB4  ECAF  F00E         	call	_lcd_putrs	;wreg free
   737  000FB8  D007               	goto	l2499
   738  000FBA                     l2497:
   739  000FBA  0E34               	movlw	52
   740  000FBC  6E27               	movwf	??_main& (0+255),c
   741  000FBE  0EF2               	movlw	242
   742  000FC0                     u2387:
   743  000FC0  2EE8               	decfsz	wreg,f,c
   744  000FC2  D7FE               	goto	u2387
   745  000FC4  2E27               	decfsz	??_main& (0+255),f,c
   746  000FC6  D7FC               	goto	u2387
   747  000FC8                     l2499:
   748  000FC8  BA80               	btfsc	3968,5,c	;volatile
   749  000FCA  D7F7               	goto	l2497
   750  000FCC                     l143:
   751                           
   752                           ;main.c: 86: if (PORTAbits.RA7==1&&LATAbits.LATA0==1){key=2;sprintf(buffer2,"%01u",key);
      +                          lcd_putrs(buffer2);while(PORTAbits.RA7==1){_delay((unsigned long)((40)*(4000000/4000.0))
      +                          );}}
   753  000FCC  BE80               	btfsc	3968,7,c	;volatile
   754  000FCE  A089               	btfss	3977,0,c	;volatile
   755  000FD0  D023               	goto	l147
   756  000FD2  0E02               	movlw	2
   757  000FD4  6E3A               	movwf	_key,c
   758  000FD6  0100               	movlb	0	; () banked
   759  000FD8  0E00               	movlw	high _buffer2
   760  000FDA  6E0E               	movwf	sprintf@sp+1,c
   761  000FDC  0100               	movlb	0	; () banked
   762  000FDE  0E78               	movlw	low _buffer2
   763  000FE0  6E0D               	movwf	sprintf@sp,c
   764  000FE2  0E0F               	movlw	high STR_1
   765  000FE4  6E10               	movwf	sprintf@f+1,c
   766  000FE6  0E1E               	movlw	low STR_1
   767  000FE8  6E0F               	movwf	sprintf@f,c
   768  000FEA  C03A  F011         	movff	_key,?_sprintf+4
   769  000FEE  6A12               	clrf	?_sprintf+5,c
   770  000FF0  ECEE  F009         	call	_sprintf	;wreg free
   771  000FF4  0100               	movlb	0	; () banked
   772  000FF6  0E00               	movlw	high _buffer2
   773  000FF8  6E0A               	movwf	lcd_putrs@ptr+1,c
   774  000FFA  0100               	movlb	0	; () banked
   775  000FFC  0E78               	movlw	low _buffer2
   776  000FFE  6E09               	movwf	lcd_putrs@ptr,c
   777  001000  ECAF  F00E         	call	_lcd_putrs	;wreg free
   778  001004  D007               	goto	l2511
   779  001006                     l2509:
   780  001006  0E34               	movlw	52
   781  001008  6E27               	movwf	??_main& (0+255),c
   782  00100A  0EF2               	movlw	242
   783  00100C                     u2397:
   784  00100C  2EE8               	decfsz	wreg,f,c
   785  00100E  D7FE               	goto	u2397
   786  001010  2E27               	decfsz	??_main& (0+255),f,c
   787  001012  D7FC               	goto	u2397
   788  001014                     l2511:
   789  001014  BE80               	btfsc	3968,7,c	;volatile
   790  001016  D7F7               	goto	l2509
   791  001018                     l147:
   792                           
   793                           ;main.c: 87: if (PORTAbits.RA6==1&&LATAbits.LATA0==1){key=3;sprintf(buffer2,"%01u",key);
      +                          lcd_putrs(buffer2);while(PORTAbits.RA6==1){_delay((unsigned long)((40)*(4000000/4000.0))
      +                          );}}
   794  001018  BC80               	btfsc	3968,6,c	;volatile
   795  00101A  A089               	btfss	3977,0,c	;volatile
   796  00101C  D023               	goto	l151
   797  00101E  0E03               	movlw	3
   798  001020  6E3A               	movwf	_key,c
   799  001022  0100               	movlb	0	; () banked
   800  001024  0E00               	movlw	high _buffer2
   801  001026  6E0E               	movwf	sprintf@sp+1,c
   802  001028  0100               	movlb	0	; () banked
   803  00102A  0E78               	movlw	low _buffer2
   804  00102C  6E0D               	movwf	sprintf@sp,c
   805  00102E  0E0F               	movlw	high STR_1
   806  001030  6E10               	movwf	sprintf@f+1,c
   807  001032  0E1E               	movlw	low STR_1
   808  001034  6E0F               	movwf	sprintf@f,c
   809  001036  C03A  F011         	movff	_key,?_sprintf+4
   810  00103A  6A12               	clrf	?_sprintf+5,c
   811  00103C  ECEE  F009         	call	_sprintf	;wreg free
   812  001040  0100               	movlb	0	; () banked
   813  001042  0E00               	movlw	high _buffer2
   814  001044  6E0A               	movwf	lcd_putrs@ptr+1,c
   815  001046  0100               	movlb	0	; () banked
   816  001048  0E78               	movlw	low _buffer2
   817  00104A  6E09               	movwf	lcd_putrs@ptr,c
   818  00104C  ECAF  F00E         	call	_lcd_putrs	;wreg free
   819  001050  D007               	goto	l2523
   820  001052                     l2521:
   821  001052  0E34               	movlw	52
   822  001054  6E27               	movwf	??_main& (0+255),c
   823  001056  0EF2               	movlw	242
   824  001058                     u2407:
   825  001058  2EE8               	decfsz	wreg,f,c
   826  00105A  D7FE               	goto	u2407
   827  00105C  2E27               	decfsz	??_main& (0+255),f,c
   828  00105E  D7FC               	goto	u2407
   829  001060                     l2523:
   830  001060  BC80               	btfsc	3968,6,c	;volatile
   831  001062  D7F7               	goto	l2521
   832  001064                     l151:
   833                           
   834                           ;main.c: 88: if (PORTCbits.RC2==1&&LATAbits.LATA0==1){key=10;lcd_putrs("A");while(PORTCb
      +                          its.RC2==1){_delay((unsigned long)((40)*(4000000/4000.0)));}}
   835  001064  B482               	btfsc	3970,2,c	;volatile
   836  001066  A089               	btfss	3977,0,c	;volatile
   837  001068  D012               	goto	l155
   838  00106A  0E0A               	movlw	10
   839  00106C  6E3A               	movwf	_key,c
   840  00106E  0E0F               	movlw	high STR_4
   841  001070  6E0A               	movwf	lcd_putrs@ptr+1,c
   842  001072  0E27               	movlw	low STR_4
   843  001074  6E09               	movwf	lcd_putrs@ptr,c
   844  001076  ECAF  F00E         	call	_lcd_putrs	;wreg free
   845  00107A  D007               	goto	l2533
   846  00107C                     l2531:
   847  00107C  0E34               	movlw	52
   848  00107E  6E27               	movwf	??_main& (0+255),c
   849  001080  0EF2               	movlw	242
   850  001082                     u2417:
   851  001082  2EE8               	decfsz	wreg,f,c
   852  001084  D7FE               	goto	u2417
   853  001086  2E27               	decfsz	??_main& (0+255),f,c
   854  001088  D7FC               	goto	u2417
   855  00108A                     l2533:
   856  00108A  B482               	btfsc	3970,2,c	;volatile
   857  00108C  D7F7               	goto	l2531
   858  00108E                     l155:
   859                           
   860                           ;main.c: 89: }
   861                           ;main.c: 90: LATAbits.LATA0=0;
   862  00108E  9089               	bcf	3977,0,c	;volatile
   863                           
   864                           ;main.c: 91: LATAbits.LATA1=1;
   865  001090  8289               	bsf	3977,1,c	;volatile
   866                           
   867                           ;main.c: 92: LATAbits.LATA2=0;
   868  001092  9489               	bcf	3977,2,c	;volatile
   869                           
   870                           ;main.c: 93: LATAbits.LATA3=0;
   871  001094  9689               	bcf	3977,3,c	;volatile
   872                           
   873                           ;main.c: 94: {
   874                           ;main.c: 95: if (PORTAbits.RA5==1&&LATAbits.LATA1==1){key=4;sprintf(buffer2,"%01u",key);
      +                          lcd_putrs(buffer2);while(PORTAbits.RA5==1){_delay((unsigned long)((40)*(4000000/4000.0))
      +                          );}}
   875  001096  BA80               	btfsc	3968,5,c	;volatile
   876  001098  A289               	btfss	3977,1,c	;volatile
   877  00109A  D023               	goto	l159
   878  00109C  0E04               	movlw	4
   879  00109E  6E3A               	movwf	_key,c
   880  0010A0  0100               	movlb	0	; () banked
   881  0010A2  0E00               	movlw	high _buffer2
   882  0010A4  6E0E               	movwf	sprintf@sp+1,c
   883  0010A6  0100               	movlb	0	; () banked
   884  0010A8  0E78               	movlw	low _buffer2
   885  0010AA  6E0D               	movwf	sprintf@sp,c
   886  0010AC  0E0F               	movlw	high STR_1
   887  0010AE  6E10               	movwf	sprintf@f+1,c
   888  0010B0  0E1E               	movlw	low STR_1
   889  0010B2  6E0F               	movwf	sprintf@f,c
   890  0010B4  C03A  F011         	movff	_key,?_sprintf+4
   891  0010B8  6A12               	clrf	?_sprintf+5,c
   892  0010BA  ECEE  F009         	call	_sprintf	;wreg free
   893  0010BE  0100               	movlb	0	; () banked
   894  0010C0  0E00               	movlw	high _buffer2
   895  0010C2  6E0A               	movwf	lcd_putrs@ptr+1,c
   896  0010C4  0100               	movlb	0	; () banked
   897  0010C6  0E78               	movlw	low _buffer2
   898  0010C8  6E09               	movwf	lcd_putrs@ptr,c
   899  0010CA  ECAF  F00E         	call	_lcd_putrs	;wreg free
   900  0010CE  D007               	goto	l2545
   901  0010D0                     l2543:
   902  0010D0  0E34               	movlw	52
   903  0010D2  6E27               	movwf	??_main& (0+255),c
   904  0010D4  0EF2               	movlw	242
   905  0010D6                     u2427:
   906  0010D6  2EE8               	decfsz	wreg,f,c
   907  0010D8  D7FE               	goto	u2427
   908  0010DA  2E27               	decfsz	??_main& (0+255),f,c
   909  0010DC  D7FC               	goto	u2427
   910  0010DE                     l2545:
   911  0010DE  BA80               	btfsc	3968,5,c	;volatile
   912  0010E0  D7F7               	goto	l2543
   913  0010E2                     l159:
   914                           
   915                           ;main.c: 96: if (PORTAbits.RA7==1&&LATAbits.LATA1==1){key=5;sprintf(buffer2,"%01u",key);
      +                          lcd_putrs(buffer2);while(PORTAbits.RA7==1){_delay((unsigned long)((40)*(4000000/4000.0))
      +                          );}}
   916  0010E2  BE80               	btfsc	3968,7,c	;volatile
   917  0010E4  A289               	btfss	3977,1,c	;volatile
   918  0010E6  D023               	goto	l163
   919  0010E8  0E05               	movlw	5
   920  0010EA  6E3A               	movwf	_key,c
   921  0010EC  0100               	movlb	0	; () banked
   922  0010EE  0E00               	movlw	high _buffer2
   923  0010F0  6E0E               	movwf	sprintf@sp+1,c
   924  0010F2  0100               	movlb	0	; () banked
   925  0010F4  0E78               	movlw	low _buffer2
   926  0010F6  6E0D               	movwf	sprintf@sp,c
   927  0010F8  0E0F               	movlw	high STR_1
   928  0010FA  6E10               	movwf	sprintf@f+1,c
   929  0010FC  0E1E               	movlw	low STR_1
   930  0010FE  6E0F               	movwf	sprintf@f,c
   931  001100  C03A  F011         	movff	_key,?_sprintf+4
   932  001104  6A12               	clrf	?_sprintf+5,c
   933  001106  ECEE  F009         	call	_sprintf	;wreg free
   934  00110A  0100               	movlb	0	; () banked
   935  00110C  0E00               	movlw	high _buffer2
   936  00110E  6E0A               	movwf	lcd_putrs@ptr+1,c
   937  001110  0100               	movlb	0	; () banked
   938  001112  0E78               	movlw	low _buffer2
   939  001114  6E09               	movwf	lcd_putrs@ptr,c
   940  001116  ECAF  F00E         	call	_lcd_putrs	;wreg free
   941  00111A  D007               	goto	l2557
   942  00111C                     l2555:
   943  00111C  0E34               	movlw	52
   944  00111E  6E27               	movwf	??_main& (0+255),c
   945  001120  0EF2               	movlw	242
   946  001122                     u2437:
   947  001122  2EE8               	decfsz	wreg,f,c
   948  001124  D7FE               	goto	u2437
   949  001126  2E27               	decfsz	??_main& (0+255),f,c
   950  001128  D7FC               	goto	u2437
   951  00112A                     l2557:
   952  00112A  BE80               	btfsc	3968,7,c	;volatile
   953  00112C  D7F7               	goto	l2555
   954  00112E                     l163:
   955                           
   956                           ;main.c: 97: if (PORTAbits.RA6==1&&LATAbits.LATA1==1){key=6;sprintf(buffer2,"%01u",key);
      +                          lcd_putrs(buffer2);while(PORTAbits.RA6==1){_delay((unsigned long)((40)*(4000000/4000.0))
      +                          );}}
   957  00112E  BC80               	btfsc	3968,6,c	;volatile
   958  001130  A289               	btfss	3977,1,c	;volatile
   959  001132  D023               	goto	l167
   960  001134  0E06               	movlw	6
   961  001136  6E3A               	movwf	_key,c
   962  001138  0100               	movlb	0	; () banked
   963  00113A  0E00               	movlw	high _buffer2
   964  00113C  6E0E               	movwf	sprintf@sp+1,c
   965  00113E  0100               	movlb	0	; () banked
   966  001140  0E78               	movlw	low _buffer2
   967  001142  6E0D               	movwf	sprintf@sp,c
   968  001144  0E0F               	movlw	high STR_1
   969  001146  6E10               	movwf	sprintf@f+1,c
   970  001148  0E1E               	movlw	low STR_1
   971  00114A  6E0F               	movwf	sprintf@f,c
   972  00114C  C03A  F011         	movff	_key,?_sprintf+4
   973  001150  6A12               	clrf	?_sprintf+5,c
   974  001152  ECEE  F009         	call	_sprintf	;wreg free
   975  001156  0100               	movlb	0	; () banked
   976  001158  0E00               	movlw	high _buffer2
   977  00115A  6E0A               	movwf	lcd_putrs@ptr+1,c
   978  00115C  0100               	movlb	0	; () banked
   979  00115E  0E78               	movlw	low _buffer2
   980  001160  6E09               	movwf	lcd_putrs@ptr,c
   981  001162  ECAF  F00E         	call	_lcd_putrs	;wreg free
   982  001166  D007               	goto	l2569
   983  001168                     l2567:
   984  001168  0E34               	movlw	52
   985  00116A  6E27               	movwf	??_main& (0+255),c
   986  00116C  0EF2               	movlw	242
   987  00116E                     u2447:
   988  00116E  2EE8               	decfsz	wreg,f,c
   989  001170  D7FE               	goto	u2447
   990  001172  2E27               	decfsz	??_main& (0+255),f,c
   991  001174  D7FC               	goto	u2447
   992  001176                     l2569:
   993  001176  BC80               	btfsc	3968,6,c	;volatile
   994  001178  D7F7               	goto	l2567
   995  00117A                     l167:
   996                           
   997                           ;main.c: 98: if (PORTCbits.RC2==1&&LATAbits.LATA1==1){key=11;lcd_putrs("B");while(PORTCb
      +                          its.RC2==1){_delay((unsigned long)((40)*(4000000/4000.0)));}}
   998  00117A  B482               	btfsc	3970,2,c	;volatile
   999  00117C  A289               	btfss	3977,1,c	;volatile
  1000  00117E  D012               	goto	l171
  1001  001180  0E0B               	movlw	11
  1002  001182  6E3A               	movwf	_key,c
  1003  001184  0E0F               	movlw	high STR_8
  1004  001186  6E0A               	movwf	lcd_putrs@ptr+1,c
  1005  001188  0E29               	movlw	low STR_8
  1006  00118A  6E09               	movwf	lcd_putrs@ptr,c
  1007  00118C  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1008  001190  D007               	goto	l2579
  1009  001192                     l2577:
  1010  001192  0E34               	movlw	52
  1011  001194  6E27               	movwf	??_main& (0+255),c
  1012  001196  0EF2               	movlw	242
  1013  001198                     u2457:
  1014  001198  2EE8               	decfsz	wreg,f,c
  1015  00119A  D7FE               	goto	u2457
  1016  00119C  2E27               	decfsz	??_main& (0+255),f,c
  1017  00119E  D7FC               	goto	u2457
  1018  0011A0                     l2579:
  1019  0011A0  B482               	btfsc	3970,2,c	;volatile
  1020  0011A2  D7F7               	goto	l2577
  1021  0011A4                     l171:
  1022                           
  1023                           ;main.c: 99: }
  1024                           ;main.c: 100: LATAbits.LATA0=0;
  1025  0011A4  9089               	bcf	3977,0,c	;volatile
  1026                           
  1027                           ;main.c: 101: LATAbits.LATA1=0;
  1028  0011A6  9289               	bcf	3977,1,c	;volatile
  1029                           
  1030                           ;main.c: 102: LATAbits.LATA2=1;
  1031  0011A8  8489               	bsf	3977,2,c	;volatile
  1032                           
  1033                           ;main.c: 103: LATAbits.LATA3=0;
  1034  0011AA  9689               	bcf	3977,3,c	;volatile
  1035                           
  1036                           ;main.c: 104: {
  1037                           ;main.c: 105: if (PORTAbits.RA5==1&&LATAbits.LATA2==1){key=7;sprintf(buffer2,"%01u",key)
      +                          ;lcd_putrs(buffer2);while(PORTAbits.RA5==1){_delay((unsigned long)((40)*(4000000/4000.0)
      +                          ));}}
  1038  0011AC  BA80               	btfsc	3968,5,c	;volatile
  1039  0011AE  A489               	btfss	3977,2,c	;volatile
  1040  0011B0  D023               	goto	l175
  1041  0011B2  0E07               	movlw	7
  1042  0011B4  6E3A               	movwf	_key,c
  1043  0011B6  0100               	movlb	0	; () banked
  1044  0011B8  0E00               	movlw	high _buffer2
  1045  0011BA  6E0E               	movwf	sprintf@sp+1,c
  1046  0011BC  0100               	movlb	0	; () banked
  1047  0011BE  0E78               	movlw	low _buffer2
  1048  0011C0  6E0D               	movwf	sprintf@sp,c
  1049  0011C2  0E0F               	movlw	high STR_1
  1050  0011C4  6E10               	movwf	sprintf@f+1,c
  1051  0011C6  0E1E               	movlw	low STR_1
  1052  0011C8  6E0F               	movwf	sprintf@f,c
  1053  0011CA  C03A  F011         	movff	_key,?_sprintf+4
  1054  0011CE  6A12               	clrf	?_sprintf+5,c
  1055  0011D0  ECEE  F009         	call	_sprintf	;wreg free
  1056  0011D4  0100               	movlb	0	; () banked
  1057  0011D6  0E00               	movlw	high _buffer2
  1058  0011D8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1059  0011DA  0100               	movlb	0	; () banked
  1060  0011DC  0E78               	movlw	low _buffer2
  1061  0011DE  6E09               	movwf	lcd_putrs@ptr,c
  1062  0011E0  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1063  0011E4  D007               	goto	l2591
  1064  0011E6                     l2589:
  1065  0011E6  0E34               	movlw	52
  1066  0011E8  6E27               	movwf	??_main& (0+255),c
  1067  0011EA  0EF2               	movlw	242
  1068  0011EC                     u2467:
  1069  0011EC  2EE8               	decfsz	wreg,f,c
  1070  0011EE  D7FE               	goto	u2467
  1071  0011F0  2E27               	decfsz	??_main& (0+255),f,c
  1072  0011F2  D7FC               	goto	u2467
  1073  0011F4                     l2591:
  1074  0011F4  BA80               	btfsc	3968,5,c	;volatile
  1075  0011F6  D7F7               	goto	l2589
  1076  0011F8                     l175:
  1077                           
  1078                           ;main.c: 106: if (PORTAbits.RA7==1&&LATAbits.LATA2==1){key=8;sprintf(buffer2,"%01u",key)
      +                          ;lcd_putrs(buffer2);while(PORTAbits.RA7==1){_delay((unsigned long)((40)*(4000000/4000.0)
      +                          ));}}
  1079  0011F8  BE80               	btfsc	3968,7,c	;volatile
  1080  0011FA  A489               	btfss	3977,2,c	;volatile
  1081  0011FC  D023               	goto	l179
  1082  0011FE  0E08               	movlw	8
  1083  001200  6E3A               	movwf	_key,c
  1084  001202  0100               	movlb	0	; () banked
  1085  001204  0E00               	movlw	high _buffer2
  1086  001206  6E0E               	movwf	sprintf@sp+1,c
  1087  001208  0100               	movlb	0	; () banked
  1088  00120A  0E78               	movlw	low _buffer2
  1089  00120C  6E0D               	movwf	sprintf@sp,c
  1090  00120E  0E0F               	movlw	high STR_1
  1091  001210  6E10               	movwf	sprintf@f+1,c
  1092  001212  0E1E               	movlw	low STR_1
  1093  001214  6E0F               	movwf	sprintf@f,c
  1094  001216  C03A  F011         	movff	_key,?_sprintf+4
  1095  00121A  6A12               	clrf	?_sprintf+5,c
  1096  00121C  ECEE  F009         	call	_sprintf	;wreg free
  1097  001220  0100               	movlb	0	; () banked
  1098  001222  0E00               	movlw	high _buffer2
  1099  001224  6E0A               	movwf	lcd_putrs@ptr+1,c
  1100  001226  0100               	movlb	0	; () banked
  1101  001228  0E78               	movlw	low _buffer2
  1102  00122A  6E09               	movwf	lcd_putrs@ptr,c
  1103  00122C  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1104  001230  D007               	goto	l2603
  1105  001232                     l2601:
  1106  001232  0E34               	movlw	52
  1107  001234  6E27               	movwf	??_main& (0+255),c
  1108  001236  0EF2               	movlw	242
  1109  001238                     u2477:
  1110  001238  2EE8               	decfsz	wreg,f,c
  1111  00123A  D7FE               	goto	u2477
  1112  00123C  2E27               	decfsz	??_main& (0+255),f,c
  1113  00123E  D7FC               	goto	u2477
  1114  001240                     l2603:
  1115  001240  BE80               	btfsc	3968,7,c	;volatile
  1116  001242  D7F7               	goto	l2601
  1117  001244                     l179:
  1118                           
  1119                           ;main.c: 107: if (PORTAbits.RA6==1&&LATAbits.LATA2==1){key=9;sprintf(buffer2,"%01u",key)
      +                          ;lcd_putrs(buffer2);while(PORTAbits.RA6==1){_delay((unsigned long)((40)*(4000000/4000.0)
      +                          ));}}
  1120  001244  BC80               	btfsc	3968,6,c	;volatile
  1121  001246  A489               	btfss	3977,2,c	;volatile
  1122  001248  D023               	goto	l183
  1123  00124A  0E09               	movlw	9
  1124  00124C  6E3A               	movwf	_key,c
  1125  00124E  0100               	movlb	0	; () banked
  1126  001250  0E00               	movlw	high _buffer2
  1127  001252  6E0E               	movwf	sprintf@sp+1,c
  1128  001254  0100               	movlb	0	; () banked
  1129  001256  0E78               	movlw	low _buffer2
  1130  001258  6E0D               	movwf	sprintf@sp,c
  1131  00125A  0E0F               	movlw	high STR_1
  1132  00125C  6E10               	movwf	sprintf@f+1,c
  1133  00125E  0E1E               	movlw	low STR_1
  1134  001260  6E0F               	movwf	sprintf@f,c
  1135  001262  C03A  F011         	movff	_key,?_sprintf+4
  1136  001266  6A12               	clrf	?_sprintf+5,c
  1137  001268  ECEE  F009         	call	_sprintf	;wreg free
  1138  00126C  0100               	movlb	0	; () banked
  1139  00126E  0E00               	movlw	high _buffer2
  1140  001270  6E0A               	movwf	lcd_putrs@ptr+1,c
  1141  001272  0100               	movlb	0	; () banked
  1142  001274  0E78               	movlw	low _buffer2
  1143  001276  6E09               	movwf	lcd_putrs@ptr,c
  1144  001278  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1145  00127C  D007               	goto	l2615
  1146  00127E                     l2613:
  1147  00127E  0E34               	movlw	52
  1148  001280  6E27               	movwf	??_main& (0+255),c
  1149  001282  0EF2               	movlw	242
  1150  001284                     u2487:
  1151  001284  2EE8               	decfsz	wreg,f,c
  1152  001286  D7FE               	goto	u2487
  1153  001288  2E27               	decfsz	??_main& (0+255),f,c
  1154  00128A  D7FC               	goto	u2487
  1155  00128C                     l2615:
  1156  00128C  BC80               	btfsc	3968,6,c	;volatile
  1157  00128E  D7F7               	goto	l2613
  1158  001290                     l183:
  1159                           
  1160                           ;main.c: 108: if (PORTCbits.RC2==1&&LATAbits.LATA2==1){key=12;lcd_putrs("C");while(PORTC
      +                          bits.RC2==1){_delay((unsigned long)((40)*(4000000/4000.0)));}}
  1161  001290  B482               	btfsc	3970,2,c	;volatile
  1162  001292  A489               	btfss	3977,2,c	;volatile
  1163  001294  D012               	goto	l187
  1164  001296  0E0C               	movlw	12
  1165  001298  6E3A               	movwf	_key,c
  1166  00129A  0E0F               	movlw	high STR_12
  1167  00129C  6E0A               	movwf	lcd_putrs@ptr+1,c
  1168  00129E  0E2B               	movlw	low STR_12
  1169  0012A0  6E09               	movwf	lcd_putrs@ptr,c
  1170  0012A2  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1171  0012A6  D007               	goto	l2625
  1172  0012A8                     l2623:
  1173  0012A8  0E34               	movlw	52
  1174  0012AA  6E27               	movwf	??_main& (0+255),c
  1175  0012AC  0EF2               	movlw	242
  1176  0012AE                     u2497:
  1177  0012AE  2EE8               	decfsz	wreg,f,c
  1178  0012B0  D7FE               	goto	u2497
  1179  0012B2  2E27               	decfsz	??_main& (0+255),f,c
  1180  0012B4  D7FC               	goto	u2497
  1181  0012B6                     l2625:
  1182  0012B6  B482               	btfsc	3970,2,c	;volatile
  1183  0012B8  D7F7               	goto	l2623
  1184  0012BA                     l187:
  1185                           
  1186                           ;main.c: 109: }
  1187                           ;main.c: 110: LATAbits.LATA0=0;
  1188  0012BA  9089               	bcf	3977,0,c	;volatile
  1189                           
  1190                           ;main.c: 111: LATAbits.LATA1=0;
  1191  0012BC  9289               	bcf	3977,1,c	;volatile
  1192                           
  1193                           ;main.c: 112: LATAbits.LATA2=0;
  1194  0012BE  9489               	bcf	3977,2,c	;volatile
  1195                           
  1196                           ;main.c: 113: LATAbits.LATA3=1;
  1197  0012C0  8689               	bsf	3977,3,c	;volatile
  1198                           
  1199                           ;main.c: 114: {
  1200                           ;main.c: 115: if (PORTAbits.RA5==1&&LATAbits.LATA3==1){key=13;lcd_putrs("*");while(PORTA
      +                          bits.RA5==1){_delay((unsigned long)((40)*(4000000/4000.0)));}}
  1201  0012C2  BA80               	btfsc	3968,5,c	;volatile
  1202  0012C4  A689               	btfss	3977,3,c	;volatile
  1203  0012C6  D012               	goto	l191
  1204  0012C8  0E0D               	movlw	13
  1205  0012CA  6E3A               	movwf	_key,c
  1206  0012CC  0E0F               	movlw	high STR_13
  1207  0012CE  6E0A               	movwf	lcd_putrs@ptr+1,c
  1208  0012D0  0E25               	movlw	low STR_13
  1209  0012D2  6E09               	movwf	lcd_putrs@ptr,c
  1210  0012D4  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1211  0012D8  D007               	goto	l2635
  1212  0012DA                     l2633:
  1213  0012DA  0E34               	movlw	52
  1214  0012DC  6E27               	movwf	??_main& (0+255),c
  1215  0012DE  0EF2               	movlw	242
  1216  0012E0                     u2507:
  1217  0012E0  2EE8               	decfsz	wreg,f,c
  1218  0012E2  D7FE               	goto	u2507
  1219  0012E4  2E27               	decfsz	??_main& (0+255),f,c
  1220  0012E6  D7FC               	goto	u2507
  1221  0012E8                     l2635:
  1222  0012E8  BA80               	btfsc	3968,5,c	;volatile
  1223  0012EA  D7F7               	goto	l2633
  1224  0012EC                     l191:
  1225                           
  1226                           ;main.c: 116: if (PORTAbits.RA7==1&&LATAbits.LATA3==1){key=0;sprintf(buffer2,"%01u",key)
      +                          ;lcd_putrs(buffer2);while(PORTAbits.RA7==1){_delay((unsigned long)((40)*(4000000/4000.0)
      +                          ));}}
  1227  0012EC  BE80               	btfsc	3968,7,c	;volatile
  1228  0012EE  A689               	btfss	3977,3,c	;volatile
  1229  0012F0  D023               	goto	l195
  1230  0012F2  0E00               	movlw	0
  1231  0012F4  6E3A               	movwf	_key,c
  1232  0012F6  0100               	movlb	0	; () banked
  1233  0012F8  0E00               	movlw	high _buffer2
  1234  0012FA  6E0E               	movwf	sprintf@sp+1,c
  1235  0012FC  0100               	movlb	0	; () banked
  1236  0012FE  0E78               	movlw	low _buffer2
  1237  001300  6E0D               	movwf	sprintf@sp,c
  1238  001302  0E0F               	movlw	high STR_1
  1239  001304  6E10               	movwf	sprintf@f+1,c
  1240  001306  0E1E               	movlw	low STR_1
  1241  001308  6E0F               	movwf	sprintf@f,c
  1242  00130A  C03A  F011         	movff	_key,?_sprintf+4
  1243  00130E  6A12               	clrf	?_sprintf+5,c
  1244  001310  ECEE  F009         	call	_sprintf	;wreg free
  1245  001314  0100               	movlb	0	; () banked
  1246  001316  0E00               	movlw	high _buffer2
  1247  001318  6E0A               	movwf	lcd_putrs@ptr+1,c
  1248  00131A  0100               	movlb	0	; () banked
  1249  00131C  0E78               	movlw	low _buffer2
  1250  00131E  6E09               	movwf	lcd_putrs@ptr,c
  1251  001320  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1252  001324  D007               	goto	l2647
  1253  001326                     l2645:
  1254  001326  0E34               	movlw	52
  1255  001328  6E27               	movwf	??_main& (0+255),c
  1256  00132A  0EF2               	movlw	242
  1257  00132C                     u2517:
  1258  00132C  2EE8               	decfsz	wreg,f,c
  1259  00132E  D7FE               	goto	u2517
  1260  001330  2E27               	decfsz	??_main& (0+255),f,c
  1261  001332  D7FC               	goto	u2517
  1262  001334                     l2647:
  1263  001334  BE80               	btfsc	3968,7,c	;volatile
  1264  001336  D7F7               	goto	l2645
  1265  001338                     l195:
  1266                           
  1267                           ;main.c: 117: if (PORTAbits.RA6==1&&LATAbits.LATA3==1){key=14;lcd_putrs("#");while(PORTA
      +                          bits.RA6==1){_delay((unsigned long)((40)*(4000000/4000.0)));}}
  1268  001338  BC80               	btfsc	3968,6,c	;volatile
  1269  00133A  A689               	btfss	3977,3,c	;volatile
  1270  00133C  D012               	goto	l199
  1271  00133E  0E0E               	movlw	14
  1272  001340  6E3A               	movwf	_key,c
  1273  001342  0E0F               	movlw	high STR_15
  1274  001344  6E0A               	movwf	lcd_putrs@ptr+1,c
  1275  001346  0E23               	movlw	low STR_15
  1276  001348  6E09               	movwf	lcd_putrs@ptr,c
  1277  00134A  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1278  00134E  D007               	goto	l2657
  1279  001350                     l2655:
  1280  001350  0E34               	movlw	52
  1281  001352  6E27               	movwf	??_main& (0+255),c
  1282  001354  0EF2               	movlw	242
  1283  001356                     u2527:
  1284  001356  2EE8               	decfsz	wreg,f,c
  1285  001358  D7FE               	goto	u2527
  1286  00135A  2E27               	decfsz	??_main& (0+255),f,c
  1287  00135C  D7FC               	goto	u2527
  1288  00135E                     l2657:
  1289  00135E  BC80               	btfsc	3968,6,c	;volatile
  1290  001360  D7F7               	goto	l2655
  1291  001362                     l199:
  1292                           
  1293                           ;main.c: 118: if (PORTCbits.RC2==1&&LATAbits.LATA3==1){key=15;lcd_putrs("D");while(PORTC
      +                          bits.RC2==1){_delay((unsigned long)((40)*(4000000/4000.0)));}}
  1294  001362  B482               	btfsc	3970,2,c	;volatile
  1295  001364  A689               	btfss	3977,3,c	;volatile
  1296  001366  D012               	goto	l2669
  1297  001368  0E0F               	movlw	15
  1298  00136A  6E3A               	movwf	_key,c
  1299  00136C  0E0F               	movlw	high STR_16
  1300  00136E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1301  001370  0E2D               	movlw	low STR_16
  1302  001372  6E09               	movwf	lcd_putrs@ptr,c
  1303  001374  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1304  001378  D007               	goto	l2667
  1305  00137A                     l2665:
  1306  00137A  0E34               	movlw	52
  1307  00137C  6E27               	movwf	??_main& (0+255),c
  1308  00137E  0EF2               	movlw	242
  1309  001380                     u2537:
  1310  001380  2EE8               	decfsz	wreg,f,c
  1311  001382  D7FE               	goto	u2537
  1312  001384  2E27               	decfsz	??_main& (0+255),f,c
  1313  001386  D7FC               	goto	u2537
  1314  001388                     l2667:
  1315  001388  B482               	btfsc	3970,2,c	;volatile
  1316  00138A  D7F7               	goto	l2665
  1317  00138C                     l2669:
  1318                           
  1319                           ;main.c: 119: }
  1320                           ;main.c: 120: Read_RTC();
  1321  00138C  ECD0  F00C         	call	_Read_RTC	;wreg free
  1322                           
  1323                           ;main.c: 121: sprintf(buffer2,"%02u:%02u:%02u",hora,minuto,segundo);
  1324  001390  0100               	movlb	0	; () banked
  1325  001392  0E00               	movlw	high _buffer2
  1326  001394  6E0E               	movwf	sprintf@sp+1,c
  1327  001396  0100               	movlb	0	; () banked
  1328  001398  0E78               	movlw	low _buffer2
  1329  00139A  6E0D               	movwf	sprintf@sp,c
  1330  00139C  0E0F               	movlw	high STR_17
  1331  00139E  6E10               	movwf	sprintf@f+1,c
  1332  0013A0  0E0F               	movlw	low STR_17
  1333  0013A2  6E0F               	movwf	sprintf@f,c
  1334  0013A4  C056  F011         	movff	_hora,?_sprintf+4
  1335  0013A8  C057  F012         	movff	_hora+1,?_sprintf+5
  1336  0013AC  C05A  F013         	movff	_minuto,?_sprintf+6
  1337  0013B0  C05B  F014         	movff	_minuto+1,?_sprintf+7
  1338  0013B4  C038  F015         	movff	_segundo,?_sprintf+8
  1339  0013B8  C039  F016         	movff	_segundo+1,?_sprintf+9
  1340  0013BC  ECEE  F009         	call	_sprintf	;wreg free
  1341                           
  1342                           ;main.c: 122: lcd_gotoxy(1,2);
  1343  0013C0  0E02               	movlw	2
  1344  0013C2  6E05               	movwf	lcd_gotoxy@y,c
  1345  0013C4  0E01               	movlw	1
  1346  0013C6  EC8D  F00F         	call	_lcd_gotoxy
  1347                           
  1348                           ;main.c: 123: lcd_putrs(buffer2);
  1349  0013CA  0100               	movlb	0	; () banked
  1350  0013CC  0E00               	movlw	high _buffer2
  1351  0013CE  6E0A               	movwf	lcd_putrs@ptr+1,c
  1352  0013D0  0100               	movlb	0	; () banked
  1353  0013D2  0E78               	movlw	low _buffer2
  1354  0013D4  6E09               	movwf	lcd_putrs@ptr,c
  1355  0013D6  ECAF  F00E         	call	_lcd_putrs	;wreg free
  1356  0013DA  D5AC               	goto	l2471
  1357  0013DC                     __end_of_main:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           postdec1	equ	0xFE5
  1366                           fsr1l	equ	0xFE1
  1367                           
  1368 ;; *************** function _sprintf *****************
  1369 ;; Defined at:
  1370 ;;		line 492 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\common\doprnt.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1373 ;;		 -> buffer2(20), 
  1374 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1375 ;;		 -> STR_17(15), STR_14(5), STR_11(5), STR_10(5), 
  1376 ;;		 -> STR_9(5), STR_7(5), STR_6(5), STR_5(5), 
  1377 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  _val            5   29[COMRAM] struct .
  1380 ;;  width           2   35[COMRAM] int 
  1381 ;;  ap              2   26[COMRAM] PTR void [1]
  1382 ;;		 -> ?_sprintf(2), 
  1383 ;;  c               1   37[COMRAM] char 
  1384 ;;  prec            1   34[COMRAM] char 
  1385 ;;  flag            1   28[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  2   12[COMRAM] int 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1395 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1398 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1399 ;;Total ram usage:       26 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		___lwdiv
  1404 ;;		___lwmod
  1405 ;;		___wmul
  1406 ;;		_isdigit
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text1
  1413  0013DC                     __ptext1:
  1414                           	opt stack 0
  1415  0013DC                     _sprintf:
  1416                           	opt stack 29
  1417                           
  1418                           ;doprnt.c: 494: va_list ap;
  1419                           ;doprnt.c: 499: signed char c;
  1420                           ;doprnt.c: 501: int width;
  1421                           ;doprnt.c: 506: signed char prec;
  1422                           ;doprnt.c: 508: unsigned char flag;
  1423                           ;doprnt.c: 527: union {
  1424                           ;doprnt.c: 528: unsigned int _val;
  1425                           ;doprnt.c: 529: struct {
  1426                           ;doprnt.c: 530: const char * _cp;
  1427                           ;doprnt.c: 531: unsigned _len;
  1428                           ;doprnt.c: 532: } _str;
  1429                           ;doprnt.c: 533: } _val;
  1430                           ;doprnt.c: 542: *ap = __va_start();
  1431                           
  1432                           ;incstack = 0
  1433  0013DC  0E00               	movlw	high (?_sprintf+4)
  1434  0013DE  6E1C               	movwf	sprintf@ap+1,c
  1435  0013E0  0E11               	movlw	low (?_sprintf+4)
  1436  0013E2  6E1B               	movwf	sprintf@ap,c
  1437                           
  1438                           ;doprnt.c: 545: while(c = *f++) {
  1439  0013E4  D104               	goto	l2453
  1440  0013E6                     l2371:
  1441                           
  1442                           ;doprnt.c: 547: if(c != '%')
  1443  0013E6  5026               	movf	sprintf@c,w,c
  1444  0013E8  0A25               	xorlw	37
  1445  0013EA  B4D8               	btfsc	status,2,c
  1446  0013EC  D009               	goto	l2377
  1447                           
  1448                           ;doprnt.c: 549: {
  1449                           ;doprnt.c: 550: ((*sp++ = (c)));
  1450  0013EE  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1451  0013F2  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1452  0013F6  C026  FFDF         	movff	sprintf@c,indf2
  1453  0013FA  4A0D               	infsnz	sprintf@sp,f,c
  1454  0013FC  2A0E               	incf	sprintf@sp+1,f,c
  1455                           
  1456                           ;doprnt.c: 551: continue;
  1457  0013FE  D0F7               	goto	l2453
  1458  001400                     l2377:
  1459                           
  1460                           ;doprnt.c: 552: }
  1461                           ;doprnt.c: 555: width = 0;
  1462  001400  0E00               	movlw	0
  1463  001402  6E25               	movwf	sprintf@width+1,c
  1464  001404  0E00               	movlw	0
  1465  001406  6E24               	movwf	sprintf@width,c
  1466                           
  1467                           ;doprnt.c: 557: flag = 0;
  1468  001408  0E00               	movlw	0
  1469  00140A  6E1D               	movwf	sprintf@flag,c
  1470  00140C  D003               	goto	l2383
  1471  00140E                     l2379:
  1472                           
  1473                           ;doprnt.c: 589: flag |= 0x04;
  1474  00140E  841D               	bsf	sprintf@flag,2,c
  1475                           
  1476                           ;doprnt.c: 590: f++;
  1477  001410  4A0F               	infsnz	sprintf@f,f,c
  1478  001412  2A10               	incf	sprintf@f+1,f,c
  1479  001414                     l2383:
  1480  001414  C00F  FFF6         	movff	sprintf@f,tblptrl
  1481  001418  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1482  00141C                     	if	0	;tblptru may be non-zero
  1483  00141C                     	endif
  1484  00141C                     	if	0	;tblptru may be non-zero
  1485  00141C                     	endif
  1486  00141C  0008               	tblrd		*
  1487  00141E  50F5               	movf	tablat,w,c
  1488                           
  1489                           ; Switch size 1, requested type "space"
  1490                           ; Number of cases is 1, Range of values is 48 to 48
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte            4     3 (average)
  1494                           ;	Chosen strategy is simple_byte
  1495  001420  0A30               	xorlw	48	; case 48
  1496  001422  B4D8               	btfsc	status,2,c
  1497  001424  D7F4               	goto	l2379
  1498                           
  1499                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1500                           
  1501                           ;doprnt.c: 595: }
  1502                           
  1503                           ;doprnt.c: 594: break;
  1504  001426  C00F  FFF6         	movff	sprintf@f,tblptrl
  1505  00142A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1506  00142E                     	if	0	;tblptru may be non-zero
  1507  00142E                     	endif
  1508  00142E                     	if	0	;tblptru may be non-zero
  1509  00142E                     	endif
  1510  00142E  0008               	tblrd		*
  1511  001430  50F5               	movf	tablat,w,c
  1512  001432  EC9E  F00F         	call	_isdigit
  1513  001436  A0D8               	btfss	status,0,c
  1514  001438  D036               	goto	l2401
  1515                           
  1516                           ;doprnt.c: 607: width = 0;
  1517  00143A  0E00               	movlw	0
  1518  00143C  6E25               	movwf	sprintf@width+1,c
  1519  00143E  0E00               	movlw	0
  1520  001440  6E24               	movwf	sprintf@width,c
  1521  001442                     l2389:
  1522                           
  1523                           ;doprnt.c: 609: width *= 10;
  1524  001442  C024  F001         	movff	sprintf@width,___wmul@multiplier
  1525  001446  C025  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1526  00144A  0E00               	movlw	0
  1527  00144C  6E04               	movwf	___wmul@multiplicand+1,c
  1528  00144E  0E0A               	movlw	10
  1529  001450  6E03               	movwf	___wmul@multiplicand,c
  1530  001452  EC7A  F00F         	call	___wmul	;wreg free
  1531  001456  C001  F024         	movff	?___wmul,sprintf@width
  1532  00145A  C002  F025         	movff	?___wmul+1,sprintf@width+1
  1533                           
  1534                           ;doprnt.c: 610: width += *f++ - '0';
  1535  00145E  0ED0               	movlw	208
  1536  001460  6E17               	movwf	??_sprintf& (0+255),c
  1537  001462  0EFF               	movlw	255
  1538  001464  6E18               	movwf	(??_sprintf+1)& (0+255),c
  1539  001466  C00F  FFF6         	movff	sprintf@f,tblptrl
  1540  00146A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1541  00146E                     	if	0	;tblptru may be non-zero
  1542  00146E                     	endif
  1543  00146E                     	if	0	;tblptru may be non-zero
  1544  00146E                     	endif
  1545  00146E  0008               	tblrd		*
  1546  001470  50F5               	movf	tablat,w,c
  1547  001472  6E19               	movwf	(??_sprintf+2)& (0+255),c
  1548  001474  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  1549  001476  5017               	movf	??_sprintf,w,c
  1550  001478  2619               	addwf	??_sprintf+2,f,c
  1551  00147A  5018               	movf	??_sprintf+1,w,c
  1552  00147C  221A               	addwfc	??_sprintf+3,f,c
  1553  00147E  5019               	movf	??_sprintf+2,w,c
  1554  001480  2624               	addwf	sprintf@width,f,c
  1555  001482  501A               	movf	??_sprintf+3,w,c
  1556  001484  2225               	addwfc	sprintf@width+1,f,c
  1557  001486  4A0F               	infsnz	sprintf@f,f,c
  1558  001488  2A10               	incf	sprintf@f+1,f,c
  1559                           
  1560                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1561  00148A  C00F  FFF6         	movff	sprintf@f,tblptrl
  1562  00148E  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1563  001492                     	if	0	;tblptru may be non-zero
  1564  001492                     	endif
  1565  001492                     	if	0	;tblptru may be non-zero
  1566  001492                     	endif
  1567  001492  0008               	tblrd		*
  1568  001494  50F5               	movf	tablat,w,c
  1569  001496  EC9E  F00F         	call	_isdigit
  1570  00149A  A0D8               	btfss	status,0,c
  1571  00149C  D004               	goto	l2401
  1572  00149E  D7D1               	goto	l2389
  1573  0014A0                     l2397:
  1574                           
  1575                           ;doprnt.c: 827: flag |= 0xC0;
  1576  0014A0  0EC0               	movlw	192
  1577  0014A2  121D               	iorwf	sprintf@flag,f,c
  1578                           
  1579                           ;doprnt.c: 828: break;
  1580  0014A4  D011               	goto	l2403
  1581  0014A6                     l2401:
  1582  0014A6  C00F  FFF6         	movff	sprintf@f,tblptrl
  1583  0014AA  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1584  0014AE  4A0F               	infsnz	sprintf@f,f,c
  1585  0014B0  2A10               	incf	sprintf@f+1,f,c
  1586  0014B2                     	if	0	;tblptru may be non-zero
  1587  0014B2                     	endif
  1588  0014B2                     	if	0	;tblptru may be non-zero
  1589  0014B2                     	endif
  1590  0014B2  0008               	tblrd		*
  1591  0014B4  CFF5 F026          	movff	tablat,sprintf@c
  1592  0014B8  5026               	movf	sprintf@c& (0+255),w,c
  1593                           
  1594                           ; Switch size 1, requested type "space"
  1595                           ; Number of cases is 2, Range of values is 0 to 117
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte            7     4 (average)
  1599                           ;	Chosen strategy is simple_byte
  1600  0014BA  0A00               	xorlw	0	; case 0
  1601  0014BC  B4D8               	btfsc	status,2,c
  1602  0014BE  D0A2               	goto	l2455
  1603  0014C0  0A75               	xorlw	117	; case 117
  1604  0014C2  B4D8               	btfsc	status,2,c
  1605  0014C4  D7ED               	goto	l2397
  1606  0014C6  D093               	goto	l2453
  1607  0014C8                     l2403:
  1608                           
  1609                           ;doprnt.c: 1282: {
  1610                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1611  0014C8  C01B  FFD9         	movff	sprintf@ap,fsr2l
  1612  0014CC  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  1613  0014D0  CFDE F01E          	movff	postinc2,sprintf@_val
  1614  0014D4  CFDD F01F          	movff	postdec2,sprintf@_val+1
  1615  0014D8  0E02               	movlw	2
  1616  0014DA  261B               	addwf	sprintf@ap,f,c
  1617  0014DC  0E00               	movlw	0
  1618  0014DE  221C               	addwfc	sprintf@ap+1,f,c
  1619                           
  1620                           ;doprnt.c: 1296: }
  1621                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1622  0014E0  0E01               	movlw	1
  1623  0014E2  6E26               	movwf	sprintf@c,c
  1624  0014E4  5026               	movf	sprintf@c,w,c
  1625  0014E6  0A05               	xorlw	5
  1626  0014E8  B4D8               	btfsc	status,2,c
  1627  0014EA  D016               	goto	l2421
  1628                           
  1629                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1630  0014EC  5026               	movf	sprintf@c,w,c
  1631  0014EE  0D02               	mullw	2
  1632  0014F0  0E01               	movlw	low _dpowers
  1633  0014F2  24F3               	addwf	prodl,w,c
  1634  0014F4  6EF6               	movwf	tblptrl,c
  1635  0014F6  0E0F               	movlw	high _dpowers
  1636  0014F8  20F4               	addwfc	prodh,w,c
  1637  0014FA  6EF7               	movwf	tblptrh,c
  1638  0014FC                     	if	0	;There are less than 3 active tblptr bytes
  1639  0014FC                     	endif
  1640  0014FC  0009               	tblrd		*+
  1641  0014FE  CFF5 F017          	movff	tablat,??_sprintf
  1642  001502  0009               	tblrd		*+
  1643  001504  CFF5 F018          	movff	tablat,??_sprintf+1
  1644  001508  5017               	movf	??_sprintf,w,c
  1645  00150A  5C1E               	subwf	sprintf@_val,w,c
  1646  00150C  5018               	movf	??_sprintf+1,w,c
  1647  00150E  581F               	subwfb	sprintf@_val+1,w,c
  1648  001510  A0D8               	btfss	status,0,c
  1649  001512  D002               	goto	l2421
  1650                           
  1651                           ;doprnt.c: 1316: break;
  1652  001514  2A26               	incf	sprintf@c,f,c
  1653  001516  D7E6               	goto	L1
  1654  001518                     l2421:
  1655                           
  1656                           ;doprnt.c: 1390: if(width > c)
  1657  001518  0E80               	movlw	128
  1658  00151A  BE26               	btfsc	sprintf@c,7,c
  1659  00151C  0E7F               	movlw	127
  1660  00151E  6E17               	movwf	??_sprintf& (0+255),c
  1661  001520  5024               	movf	sprintf@width,w,c
  1662  001522  5C26               	subwf	sprintf@c,w,c
  1663  001524  5025               	movf	sprintf@width+1,w,c
  1664  001526  0A80               	xorlw	128
  1665  001528  5817               	subwfb	??_sprintf& (0+255),w,c
  1666  00152A  B0D8               	btfsc	status,0,c
  1667  00152C  D007               	goto	l2425
  1668                           
  1669                           ;doprnt.c: 1391: width -= c;
  1670  00152E  5026               	movf	sprintf@c,w,c
  1671  001530  5E24               	subwf	sprintf@width,f,c
  1672  001532  0E00               	movlw	0
  1673  001534  BE26               	btfsc	sprintf@c,7,c
  1674  001536  0EFF               	movlw	255
  1675  001538  5A25               	subwfb	sprintf@width+1,f,c
  1676  00153A  D004               	goto	l2427
  1677  00153C                     l2425:
  1678                           
  1679                           ;doprnt.c: 1392: else
  1680                           ;doprnt.c: 1393: width = 0;
  1681  00153C  0E00               	movlw	0
  1682  00153E  6E25               	movwf	sprintf@width+1,c
  1683  001540  0E00               	movlw	0
  1684  001542  6E24               	movwf	sprintf@width,c
  1685  001544                     l2427:
  1686                           
  1687                           ;doprnt.c: 1396: if(flag & 0x04) {
  1688  001544  A41D               	btfss	sprintf@flag,2,c
  1689  001546  D010               	goto	l2437
  1690  001548                     
  1691                           ;doprnt.c: 1424: if(width)
  1692  001548  5025               	movf	sprintf@width+1,w,c
  1693  00154A  1024               	iorwf	sprintf@width,w,c
  1694  00154C  B4D8               	btfsc	status,2,c
  1695  00154E  D01F               	goto	l306
  1696                           
  1697                           ;doprnt.c: 1426: ((*sp++ = ('0')));
  1698                           
  1699                           ;doprnt.c: 1425: do
  1700  001550  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1701  001554  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1702  001558  0E30               	movlw	48
  1703  00155A  6EDF               	movwf	indf2,c
  1704  00155C  4A0D               	infsnz	sprintf@sp,f,c
  1705  00155E  2A0E               	incf	sprintf@sp+1,f,c
  1706                           
  1707                           ;doprnt.c: 1427: while(--width);
  1708  001560  0624               	decf	sprintf@width,f,c
  1709  001562  A0D8               	btfss	status,0,c
  1710  001564  0625               	decf	sprintf@width+1,f,c
  1711  001566  D7F0               	goto	L2
  1712  001568                     l2437:
  1713                           
  1714                           ;doprnt.c: 1431: {
  1715                           ;doprnt.c: 1433: if(width
  1716                           ;doprnt.c: 1437: )
  1717  001568  5025               	movf	sprintf@width+1,w,c
  1718  00156A  1024               	iorwf	sprintf@width,w,c
  1719  00156C  B4D8               	btfsc	status,2,c
  1720  00156E  D00F               	goto	l306
  1721  001570                     l2439:
  1722                           
  1723                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  1724  001570  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1725  001574  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1726  001578  0E20               	movlw	32
  1727  00157A  6EDF               	movwf	indf2,c
  1728  00157C  4A0D               	infsnz	sprintf@sp,f,c
  1729  00157E  2A0E               	incf	sprintf@sp+1,f,c
  1730                           
  1731                           ;doprnt.c: 1440: while(--width);
  1732  001580  0624               	decf	sprintf@width,f,c
  1733  001582  A0D8               	btfss	status,0,c
  1734  001584  0625               	decf	sprintf@width+1,f,c
  1735  001586  5025               	movf	(sprintf@width+1)& (0+255),w,c
  1736  001588  1024               	iorwf	sprintf@width& (0+255),w,c
  1737  00158A  A4D8               	btfss	status,2,c
  1738  00158C  D7F1               	goto	l2439
  1739  00158E                     l306:
  1740                           
  1741                           ;doprnt.c: 1478: }
  1742                           ;doprnt.c: 1481: prec = c;
  1743  00158E  C026  F023         	movff	sprintf@c,sprintf@prec
  1744                           
  1745                           ;doprnt.c: 1483: while(prec--) {
  1746  001592  D029               	goto	l2451
  1747  001594                     l2445:
  1748                           
  1749                           ;doprnt.c: 1487: {
  1750                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  1751  001594  5023               	movf	sprintf@prec,w,c
  1752  001596  0D02               	mullw	2
  1753  001598  0E01               	movlw	low _dpowers
  1754  00159A  24F3               	addwf	prodl,w,c
  1755  00159C  6EF6               	movwf	tblptrl,c
  1756  00159E  0E0F               	movlw	high _dpowers
  1757  0015A0  20F4               	addwfc	prodh,w,c
  1758  0015A2  6EF7               	movwf	tblptrh,c
  1759  0015A4                     	if	0	;There are less than 3 active tblptr bytes
  1760  0015A4                     	endif
  1761  0015A4  0009               	tblrd		*+
  1762  0015A6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1763  0015AA  000A               	tblrd		*-
  1764  0015AC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1765  0015B0  C01E  F001         	movff	sprintf@_val,___lwdiv@dividend
  1766  0015B4  C01F  F002         	movff	sprintf@_val+1,___lwdiv@dividend+1
  1767  0015B8  EC86  F00E         	call	___lwdiv	;wreg free
  1768  0015BC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1769  0015C0  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1770  0015C4  0E00               	movlw	0
  1771  0015C6  6E0B               	movwf	___lwmod@divisor+1,c
  1772  0015C8  0E0A               	movlw	10
  1773  0015CA  6E0A               	movwf	___lwmod@divisor,c
  1774  0015CC  EC1F  F00F         	call	___lwmod	;wreg free
  1775  0015D0  5008               	movf	?___lwmod,w,c
  1776  0015D2  0F30               	addlw	48
  1777  0015D4  6E26               	movwf	sprintf@c,c
  1778                           
  1779                           ;doprnt.c: 1532: }
  1780                           ;doprnt.c: 1533: ((*sp++ = (c)));
  1781  0015D6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1782  0015DA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1783  0015DE  C026  FFDF         	movff	sprintf@c,indf2
  1784  0015E2  4A0D               	infsnz	sprintf@sp,f,c
  1785  0015E4  2A0E               	incf	sprintf@sp+1,f,c
  1786  0015E6                     l2451:
  1787  0015E6  0623               	decf	sprintf@prec,f,c
  1788  0015E8  2823               	incf	sprintf@prec& (0+255),w,c
  1789  0015EA  A4D8               	btfss	status,2,c
  1790  0015EC  D7D3               	goto	l2445
  1791  0015EE                     l2453:
  1792  0015EE  C00F  FFF6         	movff	sprintf@f,tblptrl
  1793  0015F2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1794  0015F6  4A0F               	infsnz	sprintf@f,f,c
  1795  0015F8  2A10               	incf	sprintf@f+1,f,c
  1796  0015FA                     	if	0	;tblptru may be non-zero
  1797  0015FA                     	endif
  1798  0015FA                     	if	0	;tblptru may be non-zero
  1799  0015FA                     	endif
  1800  0015FA  0008               	tblrd		*
  1801  0015FC  CFF5 F026          	movff	tablat,sprintf@c
  1802  001600  6626               	tstfsz	sprintf@c& (0+255),c
  1803  001602  D6F1               	goto	l2371
  1804  001604                     l2455:
  1805                           
  1806                           ;doprnt.c: 1547: *sp = 0;
  1807  001604  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1808  001608  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1809  00160C  0E00               	movlw	0
  1810  00160E  6EDF               	movwf	indf2,c
  1811  001610  0012               	return	
  1812  001612                     __end_of_sprintf:
  1813                           	opt stack 0
  1814                           tblptru	equ	0xFF8
  1815                           tblptrh	equ	0xFF7
  1816                           tblptrl	equ	0xFF6
  1817                           tablat	equ	0xFF5
  1818                           prodh	equ	0xFF4
  1819                           prodl	equ	0xFF3
  1820                           postinc0	equ	0xFEE
  1821                           wreg	equ	0xFE8
  1822                           postdec1	equ	0xFE5
  1823                           fsr1l	equ	0xFE1
  1824                           indf2	equ	0xFDF
  1825                           postinc2	equ	0xFDE
  1826                           postdec2	equ	0xFDD
  1827                           fsr2h	equ	0xFDA
  1828                           fsr2l	equ	0xFD9
  1829                           status	equ	0xFD8
  1830                           
  1831 ;; *************** function _isdigit *****************
  1832 ;; Defined at:
  1833 ;;		line 8 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\common\isdigit.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;  c               1    wreg     unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  c               1    2[COMRAM] unsigned char 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;		None               void
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1849 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;Total ram usage:        3 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_sprintf
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text2
  1861  001F3C                     __ptext2:
  1862                           	opt stack 0
  1863  001F3C                     _isdigit:
  1864                           	opt stack 29
  1865                           
  1866                           ;incstack = 0
  1867                           ;isdigit@c stored from wreg
  1868  001F3C  6E03               	movwf	isdigit@c,c
  1869  001F3E  0E00               	movlw	0
  1870  001F40  6E02               	movwf	_isdigit$2038,c
  1871  001F42  0E3A               	movlw	58
  1872  001F44  5C03               	subwf	isdigit@c,w,c
  1873  001F46  B0D8               	btfsc	status,0,c
  1874  001F48  D005               	goto	l2253
  1875  001F4A  0E2F               	movlw	47
  1876  001F4C  6403               	cpfsgt	isdigit@c,c
  1877  001F4E  D002               	goto	l2253
  1878  001F50  0E01               	movlw	1
  1879  001F52  6E02               	movwf	_isdigit$2038,c
  1880  001F54                     l2253:
  1881  001F54  C002  F001         	movff	_isdigit$2038,??_isdigit
  1882  001F58  3001               	rrcf	??_isdigit,w,c
  1883  001F5A  0012               	return	
  1884  001F5C                     __end_of_isdigit:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           prodh	equ	0xFF4
  1891                           prodl	equ	0xFF3
  1892                           postinc0	equ	0xFEE
  1893                           wreg	equ	0xFE8
  1894                           postdec1	equ	0xFE5
  1895                           fsr1l	equ	0xFE1
  1896                           indf2	equ	0xFDF
  1897                           postinc2	equ	0xFDE
  1898                           postdec2	equ	0xFDD
  1899                           fsr2h	equ	0xFDA
  1900                           fsr2l	equ	0xFD9
  1901                           status	equ	0xFD8
  1902                           
  1903 ;; *************** function ___wmul *****************
  1904 ;; Defined at:
  1905 ;;		line 15 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\common\Umul16.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  multiplier      2    0[COMRAM] unsigned int 
  1908 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  product         2    4[COMRAM] unsigned int 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2    0[COMRAM] unsigned int 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0, prodl, prodh
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1924 ;;Total ram usage:        6 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_sprintf
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text3
  1934  001EF4                     __ptext3:
  1935                           	opt stack 0
  1936  001EF4                     ___wmul:
  1937                           	opt stack 29
  1938                           
  1939                           ;incstack = 0
  1940  001EF4  5001               	movf	___wmul@multiplier,w,c
  1941  001EF6  0203               	mulwf	___wmul@multiplicand,c
  1942  001EF8  CFF3 F005          	movff	prodl,___wmul@product
  1943  001EFC  CFF4 F006          	movff	prodh,___wmul@product+1
  1944  001F00  5001               	movf	___wmul@multiplier,w,c
  1945  001F02  0204               	mulwf	___wmul@multiplicand+1,c
  1946  001F04  50F3               	movf	prodl,w,c
  1947  001F06  2606               	addwf	___wmul@product+1,f,c
  1948  001F08  5002               	movf	___wmul@multiplier+1,w,c
  1949  001F0A  0203               	mulwf	___wmul@multiplicand,c
  1950  001F0C  50F3               	movf	prodl,w,c
  1951  001F0E  2606               	addwf	___wmul@product+1,f,c
  1952  001F10  C005  F001         	movff	___wmul@product,?___wmul
  1953  001F14  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1954  001F18  0012               	return	
  1955  001F1A                     __end_of___wmul:
  1956                           	opt stack 0
  1957                           tblptru	equ	0xFF8
  1958                           tblptrh	equ	0xFF7
  1959                           tblptrl	equ	0xFF6
  1960                           tablat	equ	0xFF5
  1961                           prodh	equ	0xFF4
  1962                           prodl	equ	0xFF3
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1l	equ	0xFE1
  1967                           indf2	equ	0xFDF
  1968                           postinc2	equ	0xFDE
  1969                           postdec2	equ	0xFDD
  1970                           fsr2h	equ	0xFDA
  1971                           fsr2l	equ	0xFD9
  1972                           status	equ	0xFD8
  1973                           
  1974 ;; *************** function ___lwmod *****************
  1975 ;; Defined at:
  1976 ;;		line 8 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\common\lwmod.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  dividend        2    7[COMRAM] unsigned int 
  1979 ;;  divisor         2    9[COMRAM] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  counter         1   11[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    7[COMRAM] unsigned int 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1994 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1995 ;;Total ram usage:        5 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_sprintf
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text4
  2005  001E3E                     __ptext4:
  2006                           	opt stack 0
  2007  001E3E                     ___lwmod:
  2008                           	opt stack 29
  2009                           
  2010                           ;incstack = 0
  2011  001E3E  500B               	movf	___lwmod@divisor+1,w,c
  2012  001E40  100A               	iorwf	___lwmod@divisor,w,c
  2013  001E42  B4D8               	btfsc	status,2,c
  2014  001E44  D018               	goto	l954
  2015  001E46  0E01               	movlw	1
  2016  001E48  6E0C               	movwf	___lwmod@counter,c
  2017  001E4A  D004               	goto	l2291
  2018  001E4C                     l2289:
  2019  001E4C  90D8               	bcf	status,0,c
  2020  001E4E  360A               	rlcf	___lwmod@divisor,f,c
  2021  001E50  360B               	rlcf	___lwmod@divisor+1,f,c
  2022  001E52  2A0C               	incf	___lwmod@counter,f,c
  2023  001E54                     l2291:
  2024  001E54  AE0B               	btfss	___lwmod@divisor+1,7,c
  2025  001E56  D7FA               	goto	l2289
  2026  001E58                     l2293:
  2027  001E58  500A               	movf	___lwmod@divisor,w,c
  2028  001E5A  5C08               	subwf	___lwmod@dividend,w,c
  2029  001E5C  500B               	movf	___lwmod@divisor+1,w,c
  2030  001E5E  5809               	subwfb	___lwmod@dividend+1,w,c
  2031  001E60  A0D8               	btfss	status,0,c
  2032  001E62  D004               	goto	l2297
  2033  001E64  500A               	movf	___lwmod@divisor,w,c
  2034  001E66  5E08               	subwf	___lwmod@dividend,f,c
  2035  001E68  500B               	movf	___lwmod@divisor+1,w,c
  2036  001E6A  5A09               	subwfb	___lwmod@dividend+1,f,c
  2037  001E6C                     l2297:
  2038  001E6C  90D8               	bcf	status,0,c
  2039  001E6E  320B               	rrcf	___lwmod@divisor+1,f,c
  2040  001E70  320A               	rrcf	___lwmod@divisor,f,c
  2041  001E72  2E0C               	decfsz	___lwmod@counter,f,c
  2042  001E74  D7F1               	goto	l2293
  2043  001E76                     l954:
  2044  001E76  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2045  001E7A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2046  001E7E  0012               	return	
  2047  001E80                     __end_of___lwmod:
  2048                           	opt stack 0
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           prodh	equ	0xFF4
  2054                           prodl	equ	0xFF3
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           postdec1	equ	0xFE5
  2058                           fsr1l	equ	0xFE1
  2059                           indf2	equ	0xFDF
  2060                           postinc2	equ	0xFDE
  2061                           postdec2	equ	0xFDD
  2062                           fsr2h	equ	0xFDA
  2063                           fsr2l	equ	0xFD9
  2064                           status	equ	0xFD8
  2065                           
  2066 ;; *************** function ___lwdiv *****************
  2067 ;; Defined at:
  2068 ;;		line 8 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  dividend        2    0[COMRAM] unsigned int 
  2071 ;;  divisor         2    2[COMRAM] unsigned int 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  quotient        2    4[COMRAM] unsigned int 
  2074 ;;  counter         1    6[COMRAM] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  2    0[COMRAM] unsigned int 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2085 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2087 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2088 ;;Total ram usage:        7 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		_sprintf
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text5
  2098  001D0C                     __ptext5:
  2099                           	opt stack 0
  2100  001D0C                     ___lwdiv:
  2101                           	opt stack 29
  2102                           
  2103                           ;incstack = 0
  2104  001D0C  0E00               	movlw	0
  2105  001D0E  6E06               	movwf	___lwdiv@quotient+1,c
  2106  001D10  0E00               	movlw	0
  2107  001D12  6E05               	movwf	___lwdiv@quotient,c
  2108  001D14  5004               	movf	___lwdiv@divisor+1,w,c
  2109  001D16  1003               	iorwf	___lwdiv@divisor,w,c
  2110  001D18  B4D8               	btfsc	status,2,c
  2111  001D1A  D01C               	goto	l944
  2112  001D1C  0E01               	movlw	1
  2113  001D1E  6E07               	movwf	___lwdiv@counter,c
  2114  001D20  D004               	goto	l2271
  2115  001D22                     l2269:
  2116  001D22  90D8               	bcf	status,0,c
  2117  001D24  3603               	rlcf	___lwdiv@divisor,f,c
  2118  001D26  3604               	rlcf	___lwdiv@divisor+1,f,c
  2119  001D28  2A07               	incf	___lwdiv@counter,f,c
  2120  001D2A                     l2271:
  2121  001D2A  AE04               	btfss	___lwdiv@divisor+1,7,c
  2122  001D2C  D7FA               	goto	l2269
  2123  001D2E                     l2273:
  2124  001D2E  90D8               	bcf	status,0,c
  2125  001D30  3605               	rlcf	___lwdiv@quotient,f,c
  2126  001D32  3606               	rlcf	___lwdiv@quotient+1,f,c
  2127  001D34  5003               	movf	___lwdiv@divisor,w,c
  2128  001D36  5C01               	subwf	___lwdiv@dividend,w,c
  2129  001D38  5004               	movf	___lwdiv@divisor+1,w,c
  2130  001D3A  5802               	subwfb	___lwdiv@dividend+1,w,c
  2131  001D3C  A0D8               	btfss	status,0,c
  2132  001D3E  D005               	goto	l2281
  2133  001D40  5003               	movf	___lwdiv@divisor,w,c
  2134  001D42  5E01               	subwf	___lwdiv@dividend,f,c
  2135  001D44  5004               	movf	___lwdiv@divisor+1,w,c
  2136  001D46  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2137  001D48  8005               	bsf	___lwdiv@quotient,0,c
  2138  001D4A                     l2281:
  2139  001D4A  90D8               	bcf	status,0,c
  2140  001D4C  3204               	rrcf	___lwdiv@divisor+1,f,c
  2141  001D4E  3203               	rrcf	___lwdiv@divisor,f,c
  2142  001D50  2E07               	decfsz	___lwdiv@counter,f,c
  2143  001D52  D7ED               	goto	l2273
  2144  001D54                     l944:
  2145  001D54  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2146  001D58  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2147  001D5C  0012               	return	
  2148  001D5E                     __end_of___lwdiv:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           postinc0	equ	0xFEE
  2157                           wreg	equ	0xFE8
  2158                           postdec1	equ	0xFE5
  2159                           fsr1l	equ	0xFE1
  2160                           indf2	equ	0xFDF
  2161                           postinc2	equ	0xFDE
  2162                           postdec2	equ	0xFDD
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _lcd_putrs *****************
  2168 ;; Defined at:
  2169 ;;		line 221 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2172 ;;		 -> STR_16(2), STR_15(2), STR_13(2), STR_12(2), 
  2173 ;;		 -> STR_8(2), STR_4(2), buffer2(20), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;		None               void
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2189 ;;Total ram usage:        2 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    4
  2192 ;; This function calls:
  2193 ;;		_lcd_putc
  2194 ;; This function is called by:
  2195 ;;		_main
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text6
  2200  001D5E                     __ptext6:
  2201                           	opt stack 0
  2202  001D5E                     _lcd_putrs:
  2203                           	opt stack 26
  2204                           
  2205                           ;unmc_lcd_216.c: 223: while(*ptr){
  2206                           
  2207                           ;incstack = 0
  2208  001D5E  D014               	goto	l2465
  2209  001D60                     l2461:
  2210                           
  2211                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2212  001D60  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2213  001D64  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2214  001D68  6AF8               	clrf	tblptru,c
  2215  001D6A  0E0E               	movlw	(high __ramtop+-1)
  2216  001D6C  64F7               	cpfsgt	tblptrh,c
  2217  001D6E  D003               	bra	u1837
  2218  001D70  0008               	tblrd		*
  2219  001D72  50F5               	movf	tablat,w,c
  2220  001D74  D005               	bra	u1830
  2221  001D76                     u1837:
  2222  001D76  CFF6 FFE9          	movff	tblptrl,fsr0l
  2223  001D7A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2224  001D7E  50EF               	movf	indf0,w,c
  2225  001D80                     u1830:
  2226  001D80  ECD8  F00E         	call	_lcd_putc
  2227  001D84  4A09               	infsnz	lcd_putrs@ptr,f,c
  2228  001D86  2A0A               	incf	lcd_putrs@ptr+1,f,c
  2229  001D88                     l2465:
  2230  001D88  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2231  001D8C  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2232  001D90  6AF8               	clrf	tblptru,c
  2233  001D92  0E0E               	movlw	(high __ramtop+-1)
  2234  001D94  64F7               	cpfsgt	tblptrh,c
  2235  001D96  D003               	bra	u1847
  2236  001D98  0008               	tblrd		*
  2237  001D9A  50F5               	movf	tablat,w,c
  2238  001D9C  D005               	bra	u1840
  2239  001D9E                     u1847:
  2240  001D9E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2241  001DA2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2242  001DA6  50EF               	movf	indf0,w,c
  2243  001DA8                     u1840:
  2244  001DA8  0900               	iorlw	0
  2245  001DAA  B4D8               	btfsc	status,2,c
  2246  001DAC  0012               	return	
  2247  001DAE  D7D8               	goto	l2461
  2248  001DB0                     __end_of_lcd_putrs:
  2249                           	opt stack 0
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           prodh	equ	0xFF4
  2255                           prodl	equ	0xFF3
  2256                           indf0	equ	0xFEF
  2257                           postinc0	equ	0xFEE
  2258                           fsr0h	equ	0xFEA
  2259                           fsr0l	equ	0xFE9
  2260                           wreg	equ	0xFE8
  2261                           postdec1	equ	0xFE5
  2262                           fsr1l	equ	0xFE1
  2263                           indf2	equ	0xFDF
  2264                           postinc2	equ	0xFDE
  2265                           postdec2	equ	0xFDD
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _lcd_putc *****************
  2271 ;; Defined at:
  2272 ;;		line 172 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  c               1    wreg     unsigned char 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  c               1    7[COMRAM] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;		None               void
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0, cstack
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;Total ram usage:        1 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    3
  2293 ;; This function calls:
  2294 ;;		_lcd_gotoxy
  2295 ;;		_lcd_send_byte
  2296 ;; This function is called by:
  2297 ;;		_lcd_putrs
  2298 ;;		_lcd_puts
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text7
  2303  001DB0                     __ptext7:
  2304                           	opt stack 0
  2305  001DB0                     _lcd_putc:
  2306                           	opt stack 26
  2307                           
  2308                           ;incstack = 0
  2309                           ;lcd_putc@c stored from wreg
  2310  001DB0  6E08               	movwf	lcd_putc@c,c
  2311                           
  2312                           ;unmc_lcd_216.c: 173: switch(c){
  2313  001DB2  D018               	goto	l2243
  2314  001DB4                     l2233:
  2315                           
  2316                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2317  001DB4  0E01               	movlw	1
  2318  001DB6  6E03               	movwf	lcd_send_byte@n,c
  2319  001DB8  0E00               	movlw	0
  2320  001DBA  EC61  F00F         	call	_lcd_send_byte
  2321                           
  2322                           ;unmc_lcd_216.c: 176: break;
  2323  001DBE  0012               	return	
  2324  001DC0                     l2235:
  2325                           
  2326                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2327  001DC0  0E02               	movlw	2
  2328  001DC2  6E05               	movwf	lcd_gotoxy@y,c
  2329  001DC4  0E01               	movlw	1
  2330  001DC6  EC8D  F00F         	call	_lcd_gotoxy
  2331                           
  2332                           ;unmc_lcd_216.c: 179: break;
  2333  001DCA  0012               	return	
  2334  001DCC                     l2237:
  2335                           
  2336                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2337  001DCC  0E10               	movlw	16
  2338  001DCE  6E03               	movwf	lcd_send_byte@n,c
  2339  001DD0  0E00               	movlw	0
  2340  001DD2  EC61  F00F         	call	_lcd_send_byte
  2341                           
  2342                           ;unmc_lcd_216.c: 182: break;
  2343  001DD6  0012               	return	
  2344  001DD8                     l2239:
  2345                           
  2346                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2347  001DD8  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  2348  001DDC  0E01               	movlw	1
  2349  001DDE  EC61  F00F         	call	_lcd_send_byte
  2350                           
  2351                           ;unmc_lcd_216.c: 185: break;
  2352  001DE2  0012               	return	
  2353  001DE4                     l2243:
  2354  001DE4  5008               	movf	lcd_putc@c,w,c
  2355                           
  2356                           ; Switch size 1, requested type "space"
  2357                           ; Number of cases is 3, Range of values is 8 to 12
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte           10     6 (average)
  2361                           ;	Chosen strategy is simple_byte
  2362  001DE6  0A08               	xorlw	8	; case 8
  2363  001DE8  B4D8               	btfsc	status,2,c
  2364  001DEA  D7F0               	goto	l2237
  2365  001DEC  0A02               	xorlw	2	; case 10
  2366  001DEE  B4D8               	btfsc	status,2,c
  2367  001DF0  D7E7               	goto	l2235
  2368  001DF2  0A06               	xorlw	6	; case 12
  2369  001DF4  B4D8               	btfsc	status,2,c
  2370  001DF6  D7DE               	goto	l2233
  2371  001DF8  D7EF               	goto	l2239
  2372  001DFA                     __end_of_lcd_putc:
  2373                           	opt stack 0
  2374                           tblptru	equ	0xFF8
  2375                           tblptrh	equ	0xFF7
  2376                           tblptrl	equ	0xFF6
  2377                           tablat	equ	0xFF5
  2378                           prodh	equ	0xFF4
  2379                           prodl	equ	0xFF3
  2380                           indf0	equ	0xFEF
  2381                           postinc0	equ	0xFEE
  2382                           fsr0h	equ	0xFEA
  2383                           fsr0l	equ	0xFE9
  2384                           wreg	equ	0xFE8
  2385                           postdec1	equ	0xFE5
  2386                           fsr1l	equ	0xFE1
  2387                           indf2	equ	0xFDF
  2388                           postinc2	equ	0xFDE
  2389                           postdec2	equ	0xFDD
  2390                           fsr2h	equ	0xFDA
  2391                           fsr2l	equ	0xFD9
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function _lcd_gotoxy *****************
  2395 ;; Defined at:
  2396 ;;		line 158 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  x               1    wreg     unsigned char 
  2399 ;;  y               1    4[COMRAM] unsigned char 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  x               1    5[COMRAM] unsigned char 
  2402 ;;  address         1    6[COMRAM] unsigned char 
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2412 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2415 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;Total ram usage:        3 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		_lcd_send_byte
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;;		_lcd_putc
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text8
  2428  001F1A                     __ptext8:
  2429                           	opt stack 0
  2430  001F1A                     _lcd_gotoxy:
  2431                           	opt stack 26
  2432                           
  2433                           ;incstack = 0
  2434                           ;lcd_gotoxy@x stored from wreg
  2435  001F1A  6E06               	movwf	lcd_gotoxy@x,c
  2436                           
  2437                           ;unmc_lcd_216.c: 159: int8 address;
  2438                           ;unmc_lcd_216.c: 161: if(y != 1)
  2439  001F1C  0405               	decf	lcd_gotoxy@y,w,c
  2440  001F1E  B4D8               	btfsc	status,2,c
  2441  001F20  D002               	goto	l2037
  2442                           
  2443                           ;unmc_lcd_216.c: 162: address = 0x40;
  2444  001F22  0E40               	movlw	64
  2445  001F24  D001               	goto	L3
  2446  001F26                     l2037:
  2447                           
  2448                           ;unmc_lcd_216.c: 163: else
  2449                           ;unmc_lcd_216.c: 164: address=0;
  2450  001F26  0E00               	movlw	0
  2451  001F28                     L3:
  2452  001F28  6E07               	movwf	lcd_gotoxy@address,c
  2453                           
  2454                           ;unmc_lcd_216.c: 166: address += x-1;
  2455  001F2A  0406               	decf	lcd_gotoxy@x,w,c
  2456  001F2C  2607               	addwf	lcd_gotoxy@address,f,c
  2457                           
  2458                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2459  001F2E  5007               	movf	lcd_gotoxy@address,w,c
  2460  001F30  0980               	iorlw	128
  2461  001F32  6E03               	movwf	lcd_send_byte@n,c
  2462  001F34  0E00               	movlw	0
  2463  001F36  EC61  F00F         	call	_lcd_send_byte
  2464  001F3A  0012               	return	
  2465  001F3C                     __end_of_lcd_gotoxy:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           indf0	equ	0xFEF
  2474                           postinc0	equ	0xFEE
  2475                           fsr0h	equ	0xFEA
  2476                           fsr0l	equ	0xFE9
  2477                           wreg	equ	0xFE8
  2478                           postdec1	equ	0xFE5
  2479                           fsr1l	equ	0xFE1
  2480                           indf2	equ	0xFDF
  2481                           postinc2	equ	0xFDE
  2482                           postdec2	equ	0xFDD
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _Setup *****************
  2488 ;; Defined at:
  2489 ;;		line 36 in file "main.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;		None               void
  2496 ;; Registers used:
  2497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    3
  2510 ;; This function calls:
  2511 ;;		_Write_RTC
  2512 ;;		_lcd_comand
  2513 ;;		_lcd_init
  2514 ;; This function is called by:
  2515 ;;		_main
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text9
  2520  001E80                     __ptext9:
  2521                           	opt stack 0
  2522  001E80                     _Setup:
  2523                           	opt stack 27
  2524                           
  2525                           ;main.c: 38: OSCTUNEbits.INTSRC=1;
  2526                           
  2527                           ;incstack = 0
  2528  001E80  8E9B               	bsf	3995,7,c	;volatile
  2529                           
  2530                           ;main.c: 39: OSCTUNEbits.PLLEN=0;
  2531  001E82  9C9B               	bcf	3995,6,c	;volatile
  2532                           
  2533                           ;main.c: 40: OSCCONbits.IRCF0=1;
  2534  001E84  88D3               	bsf	4051,4,c	;volatile
  2535                           
  2536                           ;main.c: 41: OSCCONbits.IRCF1=1;
  2537  001E86  8AD3               	bsf	4051,5,c	;volatile
  2538                           
  2539                           ;main.c: 42: OSCCONbits.IRCF2=1;
  2540  001E88  8CD3               	bsf	4051,6,c	;volatile
  2541                           
  2542                           ;main.c: 43: OSCCONbits.SCS0=0;
  2543  001E8A  90D3               	bcf	4051,0,c	;volatile
  2544                           
  2545                           ;main.c: 44: OSCCONbits.SCS1=0;
  2546  001E8C  92D3               	bcf	4051,1,c	;volatile
  2547                           
  2548                           ;main.c: 45: TRISA = 0b11110000;
  2549  001E8E  0EF0               	movlw	240
  2550  001E90  6E92               	movwf	3986,c	;volatile
  2551                           
  2552                           ;main.c: 46: TRISB = 0;
  2553  001E92  0E00               	movlw	0
  2554  001E94  6E93               	movwf	3987,c	;volatile
  2555                           
  2556                           ;main.c: 47: TRISC = 0b00000111;
  2557  001E96  0E07               	movlw	7
  2558  001E98  6E94               	movwf	3988,c	;volatile
  2559                           
  2560                           ;main.c: 51: ANCON0=0b11111111;
  2561  001E9A  010F               	movlb	15	; () banked
  2562  001E9C  6948               	setf	72,b	;volatile
  2563                           
  2564                           ; BSR set to: 15
  2565                           ;main.c: 53: ANCON1=0b11111111;
  2566  001E9E  010F               	movlb	15	; () banked
  2567  001EA0  6949               	setf	73,b	;volatile
  2568                           
  2569                           ; BSR set to: 15
  2570                           ;main.c: 56: RTCCFGbits.RTCEN=1;
  2571  001EA2  010F               	movlb	15	; () banked
  2572  001EA4  8F3F               	bsf	63,7,b	;volatile
  2573                           
  2574                           ; BSR set to: 15
  2575                           ;main.c: 57: RTCCFGbits.RTCWREN=1;
  2576  001EA6  010F               	movlb	15	; () banked
  2577  001EA8  8B3F               	bsf	63,5,b	;volatile
  2578                           
  2579                           ; BSR set to: 15
  2580                           ;main.c: 58: T1CONbits.T1OSCEN=1;
  2581  001EAA  86CD               	bsf	4045,3,c	;volatile
  2582                           
  2583                           ; BSR set to: 15
  2584                           ;main.c: 59: Write_RTC();
  2585  001EAC  EC09  F00B         	call	_Write_RTC	;wreg free
  2586                           
  2587                           ;main.c: 60: lcd_init();
  2588  001EB0  ECD6  F00D         	call	_lcd_init	;wreg free
  2589                           
  2590                           ;main.c: 61: lcd_comand(0b00001100);
  2591  001EB4  0E0C               	movlw	12
  2592  001EB6  ECC7  F00F         	call	_lcd_comand
  2593                           
  2594                           ;main.c: 62: LATBbits.LATB2 = 0;;
  2595  001EBA  948A               	bcf	3978,2,c	;volatile
  2596                           
  2597                           ;main.c: 63: LATBbits.LATB1 = 0;;
  2598  001EBC  928A               	bcf	3978,1,c	;volatile
  2599                           
  2600                           ;main.c: 64: LATBbits.LATB0 = 0;;
  2601  001EBE  908A               	bcf	3978,0,c	;volatile
  2602  001EC0  0012               	return	
  2603  001EC2                     __end_of_Setup:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           indf0	equ	0xFEF
  2612                           postinc0	equ	0xFEE
  2613                           fsr0h	equ	0xFEA
  2614                           fsr0l	equ	0xFE9
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           postdec2	equ	0xFDD
  2621                           fsr2h	equ	0xFDA
  2622                           fsr2l	equ	0xFD9
  2623                           status	equ	0xFD8
  2624                           
  2625 ;; *************** function _lcd_init *****************
  2626 ;; Defined at:
  2627 ;;		line 119 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  i               1    4[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;		None               void
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;Total ram usage:        1 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    2
  2648 ;; This function calls:
  2649 ;;		_Delay1KTCYx
  2650 ;;		_lcd_send_byte
  2651 ;;		_lcd_send_nibble
  2652 ;; This function is called by:
  2653 ;;		_Setup
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text10
  2658  001BAC                     __ptext10:
  2659                           	opt stack 0
  2660  001BAC                     _lcd_init:
  2661                           	opt stack 27
  2662                           
  2663                           ;unmc_lcd_216.c: 120: int8 i;
  2664                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  2665                           
  2666                           ;incstack = 0
  2667  001BAC  9693               	bcf	3987,3,c	;volatile
  2668                           
  2669                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  2670  001BAE  9493               	bcf	3987,2,c	;volatile
  2671                           
  2672                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  2673  001BB0  968A               	bcf	3978,3,c	;volatile
  2674                           
  2675                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  2676  001BB2  948A               	bcf	3978,2,c	;volatile
  2677                           
  2678                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  2679  001BB4  9893               	bcf	3987,4,c	;volatile
  2680                           
  2681                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  2682  001BB6  9A93               	bcf	3987,5,c	;volatile
  2683                           
  2684                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  2685  001BB8  9C93               	bcf	3987,6,c	;volatile
  2686                           
  2687                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  2688  001BBA  9E93               	bcf	3987,7,c	;volatile
  2689                           
  2690                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  2691  001BBC  0E0A               	movlw	10
  2692  001BBE  ECB7  F00F         	call	_Delay1KTCYx
  2693                           
  2694                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  2695  001BC2  0E0A               	movlw	10
  2696  001BC4  ECB7  F00F         	call	_Delay1KTCYx
  2697                           
  2698                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  2699  001BC8  0E0A               	movlw	10
  2700  001BCA  ECB7  F00F         	call	_Delay1KTCYx
  2701                           
  2702                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  2703  001BCE  0E00               	movlw	0
  2704  001BD0  6E05               	movwf	lcd_init@i,c
  2705  001BD2  D007               	goto	L4
  2706  001BD4                     l2207:
  2707                           
  2708                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  2709  001BD4  0E03               	movlw	3
  2710  001BD6  EC13  F00E         	call	_lcd_send_nibble
  2711                           
  2712                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  2713  001BDA  0E0A               	movlw	10
  2714  001BDC  ECB7  F00F         	call	_Delay1KTCYx
  2715  001BE0  2A05               	incf	lcd_init@i,f,c
  2716  001BE2                     L4:
  2717  001BE2  0E02               	movlw	2
  2718  001BE4  6405               	cpfsgt	lcd_init@i,c
  2719  001BE6  D7F6               	goto	l2207
  2720                           
  2721                           ;unmc_lcd_216.c: 146: }
  2722                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  2723  001BE8  0E02               	movlw	2
  2724  001BEA  EC13  F00E         	call	_lcd_send_nibble
  2725                           
  2726                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  2727  001BEE  0E00               	movlw	0
  2728  001BF0  6E05               	movwf	lcd_init@i,c
  2729  001BF2  0E03               	movlw	3
  2730  001BF4  6405               	cpfsgt	lcd_init@i,c
  2731  001BF6  D001               	goto	l2221
  2732  001BF8  0012               	return	
  2733  001BFA                     l2221:
  2734                           
  2735                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2736  001BFA  5005               	movf	lcd_init@i,w,c
  2737  001BFC  0D01               	mullw	1
  2738  001BFE  0E0B               	movlw	low _LCD_INIT_STRING
  2739  001C00  24F3               	addwf	prodl,w,c
  2740  001C02  6EF6               	movwf	tblptrl,c
  2741  001C04  0E0F               	movlw	high _LCD_INIT_STRING
  2742  001C06  20F4               	addwfc	prodh,w,c
  2743  001C08  6EF7               	movwf	tblptrh,c
  2744  001C0A                     	if	0	;There are less than 3 active tblptr bytes
  2745  001C0A                     	endif
  2746  001C0A  0008               	tblrd		*
  2747  001C0C  CFF5 F003          	movff	tablat,lcd_send_byte@n
  2748  001C10  0E00               	movlw	0
  2749  001C12  EC61  F00F         	call	_lcd_send_byte
  2750                           
  2751                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  2752  001C16  0E0A               	movlw	10
  2753  001C18  ECB7  F00F         	call	_Delay1KTCYx
  2754  001C1C  2A05               	incf	lcd_init@i,f,c
  2755  001C1E  0E03               	movlw	3
  2756  001C20  6405               	cpfsgt	lcd_init@i,c
  2757  001C22  D7EB               	goto	l2221
  2758  001C24  0012               	return	
  2759  001C26                     __end_of_lcd_init:
  2760                           	opt stack 0
  2761                           tblptru	equ	0xFF8
  2762                           tblptrh	equ	0xFF7
  2763                           tblptrl	equ	0xFF6
  2764                           tablat	equ	0xFF5
  2765                           prodh	equ	0xFF4
  2766                           prodl	equ	0xFF3
  2767                           indf0	equ	0xFEF
  2768                           postinc0	equ	0xFEE
  2769                           fsr0h	equ	0xFEA
  2770                           fsr0l	equ	0xFE9
  2771                           wreg	equ	0xFE8
  2772                           postdec1	equ	0xFE5
  2773                           fsr1l	equ	0xFE1
  2774                           indf2	equ	0xFDF
  2775                           postinc2	equ	0xFDE
  2776                           postdec2	equ	0xFDD
  2777                           fsr2h	equ	0xFDA
  2778                           fsr2l	equ	0xFD9
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function _Delay1KTCYx *****************
  2782 ;; Defined at:
  2783 ;;		line 8 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  unit            1    wreg     unsigned char 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  unit            1    0[COMRAM] unsigned char 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;Total ram usage:        1 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_lcd_init
  2807 ;;		_DelayPORXLCD
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text11
  2812  001F6E                     __ptext11:
  2813                           	opt stack 0
  2814  001F6E                     _Delay1KTCYx:
  2815                           	opt stack 28
  2816                           
  2817                           ;incstack = 0
  2818                           ;Delay1KTCYx@unit stored from wreg
  2819  001F6E  6E01               	movwf	Delay1KTCYx@unit,c
  2820  001F70                     l643:
  2821  001F70  0EFA               	movlw	250
  2822  001F72                     u2547:
  2823  001F72  F000               	nop	
  2824  001F74  2EE8               	decfsz	wreg,f,c
  2825  001F76  D7FD               	goto	u2547
  2826  001F78  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2827  001F7A  D7FA               	goto	l643
  2828  001F7C  0012               	return	
  2829  001F7E                     __end_of_Delay1KTCYx:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           prodh	equ	0xFF4
  2836                           prodl	equ	0xFF3
  2837                           indf0	equ	0xFEF
  2838                           postinc0	equ	0xFEE
  2839                           fsr0h	equ	0xFEA
  2840                           fsr0l	equ	0xFE9
  2841                           wreg	equ	0xFE8
  2842                           postdec1	equ	0xFE5
  2843                           fsr1l	equ	0xFE1
  2844                           indf2	equ	0xFDF
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _lcd_comand *****************
  2852 ;; Defined at:
  2853 ;;		line 189 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  d               1    wreg     unsigned char 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  d               1    4[COMRAM] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;		None               void
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;Total ram usage:        1 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    2
  2874 ;; This function calls:
  2875 ;;		_lcd_send_byte
  2876 ;; This function is called by:
  2877 ;;		_Setup
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text12
  2883  001F8E                     __ptext12:
  2884                           	opt stack 0
  2885  001F8E                     _lcd_comand:
  2886                           	opt stack 28
  2887                           
  2888                           ;incstack = 0
  2889                           ;lcd_comand@d stored from wreg
  2890  001F8E  6E05               	movwf	lcd_comand@d,c
  2891                           
  2892                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2893  001F90  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2894  001F94  0E00               	movlw	0
  2895  001F96  EC61  F00F         	call	_lcd_send_byte
  2896  001F9A  0012               	return	
  2897  001F9C                     __end_of_lcd_comand:
  2898                           	opt stack 0
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           prodh	equ	0xFF4
  2904                           prodl	equ	0xFF3
  2905                           indf0	equ	0xFEF
  2906                           postinc0	equ	0xFEE
  2907                           fsr0h	equ	0xFEA
  2908                           fsr0l	equ	0xFE9
  2909                           wreg	equ	0xFE8
  2910                           postdec1	equ	0xFE5
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           postinc2	equ	0xFDE
  2914                           postdec2	equ	0xFDD
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function _lcd_send_byte *****************
  2920 ;; Defined at:
  2921 ;;		line 86 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  address         1    wreg     unsigned char 
  2924 ;;  n               1    2[COMRAM] unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  address         1    3[COMRAM] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;		None               void
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0, cstack
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2936 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;Total ram usage:        2 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		_Delay100TCYx
  2945 ;;		_lcd_send_nibble
  2946 ;; This function is called by:
  2947 ;;		_lcd_init
  2948 ;;		_lcd_gotoxy
  2949 ;;		_lcd_putc
  2950 ;;		_lcd_comand
  2951 ;;		_lcd_setcursor_vb
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text13
  2956  001EC2                     __ptext13:
  2957                           	opt stack 0
  2958  001EC2                     _lcd_send_byte:
  2959                           	opt stack 27
  2960                           
  2961                           ;incstack = 0
  2962                           ;lcd_send_byte@address stored from wreg
  2963  001EC2  6E04               	movwf	lcd_send_byte@address,c
  2964                           
  2965                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  2966  001EC4  968A               	bcf	3978,3,c	;volatile
  2967                           
  2968                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  2969  001EC6  0E02               	movlw	2
  2970  001EC8  ECBF  F00F         	call	_Delay100TCYx
  2971                           
  2972                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  2973  001ECC  9893               	bcf	3987,4,c	;volatile
  2974                           
  2975                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  2976  001ECE  9A93               	bcf	3987,5,c	;volatile
  2977                           
  2978                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  2979  001ED0  9C93               	bcf	3987,6,c	;volatile
  2980                           
  2981                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  2982  001ED2  9E93               	bcf	3987,7,c	;volatile
  2983                           
  2984                           ;unmc_lcd_216.c: 101: if(address)
  2985  001ED4  5004               	movf	lcd_send_byte@address,w,c
  2986  001ED6  B4D8               	btfsc	status,2,c
  2987  001ED8  D002               	goto	l227
  2988                           
  2989                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  2990  001EDA  868A               	bsf	3978,3,c	;volatile
  2991  001EDC  D001               	goto	l228
  2992  001EDE                     l227:
  2993                           
  2994                           ;unmc_lcd_216.c: 103: else
  2995                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  2996  001EDE  968A               	bcf	3978,3,c	;volatile
  2997  001EE0                     l228:
  2998                           
  2999                           ;unmc_lcd_216.c: 106: __nop();
  3000  001EE0  F000               	nop	
  3001                           
  3002                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3003  001EE2  3803               	swapf	lcd_send_byte@n,w,c
  3004  001EE4  0B0F               	andlw	15
  3005  001EE6  EC13  F00E         	call	_lcd_send_nibble
  3006                           
  3007                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3008  001EEA  5003               	movf	lcd_send_byte@n,w,c
  3009  001EEC  0B0F               	andlw	15
  3010  001EEE  EC13  F00E         	call	_lcd_send_nibble
  3011  001EF2  0012               	return	
  3012  001EF4                     __end_of_lcd_send_byte:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           prodh	equ	0xFF4
  3019                           prodl	equ	0xFF3
  3020                           indf0	equ	0xFEF
  3021                           postinc0	equ	0xFEE
  3022                           fsr0h	equ	0xFEA
  3023                           fsr0l	equ	0xFE9
  3024                           wreg	equ	0xFE8
  3025                           postdec1	equ	0xFE5
  3026                           fsr1l	equ	0xFE1
  3027                           indf2	equ	0xFDF
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _lcd_send_nibble *****************
  3035 ;; Defined at:
  3036 ;;		line 25 in file "C:/Archivos de programa/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  nibble          1    wreg     unsigned char 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  nibble          1    1[COMRAM] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;		None               void
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;Total ram usage:        2 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_lcd_send_byte
  3060 ;;		_lcd_init
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text14
  3065  001C26                     __ptext14:
  3066                           	opt stack 0
  3067  001C26                     _lcd_send_nibble:
  3068                           	opt stack 27
  3069                           
  3070                           ;incstack = 0
  3071                           ;lcd_send_nibble@nibble stored from wreg
  3072  001C26  6E02               	movwf	lcd_send_nibble@nibble,c
  3073                           
  3074                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3075  001C28  A002               	btfss	lcd_send_nibble@nibble,0,c
  3076  001C2A  D002               	goto	u1190
  3077  001C2C  0E01               	movlw	1
  3078  001C2E  D001               	goto	u1196
  3079  001C30                     u1190:
  3080  001C30  0E00               	movlw	0
  3081  001C32                     u1196:
  3082  001C32  6E01               	movwf	??_lcd_send_nibble& (0+255),c
  3083  001C34  3A01               	swapf	??_lcd_send_nibble,f,c
  3084  001C36  508A               	movf	3978,w,c	;volatile
  3085  001C38  1801               	xorwf	??_lcd_send_nibble,w,c
  3086  001C3A  0BEF               	andlw	-17
  3087  001C3C  1801               	xorwf	??_lcd_send_nibble,w,c
  3088  001C3E  6E8A               	movwf	3978,c	;volatile
  3089                           
  3090                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3091  001C40  A202               	btfss	lcd_send_nibble@nibble,1,c
  3092  001C42  D002               	goto	u1200
  3093  001C44  0E01               	movlw	1
  3094  001C46  D001               	goto	u1206
  3095  001C48                     u1200:
  3096  001C48  0E00               	movlw	0
  3097  001C4A                     u1206:
  3098  001C4A  6E01               	movwf	??_lcd_send_nibble& (0+255),c
  3099  001C4C  3A01               	swapf	??_lcd_send_nibble,f,c
  3100  001C4E  4601               	rlncf	??_lcd_send_nibble,f,c
  3101  001C50  508A               	movf	3978,w,c	;volatile
  3102  001C52  1801               	xorwf	??_lcd_send_nibble,w,c
  3103  001C54  0BDF               	andlw	-33
  3104  001C56  1801               	xorwf	??_lcd_send_nibble,w,c
  3105  001C58  6E8A               	movwf	3978,c	;volatile
  3106                           
  3107                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3108  001C5A  A402               	btfss	lcd_send_nibble@nibble,2,c
  3109  001C5C  D002               	goto	u1210
  3110  001C5E  0E01               	movlw	1
  3111  001C60  D001               	goto	u1216
  3112  001C62                     u1210:
  3113  001C62  0E00               	movlw	0
  3114  001C64                     u1216:
  3115  001C64  6E01               	movwf	??_lcd_send_nibble& (0+255),c
  3116  001C66  3A01               	swapf	??_lcd_send_nibble,f,c
  3117  001C68  4601               	rlncf	??_lcd_send_nibble,f,c
  3118  001C6A  4601               	rlncf	??_lcd_send_nibble,f,c
  3119  001C6C  508A               	movf	3978,w,c	;volatile
  3120  001C6E  1801               	xorwf	??_lcd_send_nibble,w,c
  3121  001C70  0BBF               	andlw	-65
  3122  001C72  1801               	xorwf	??_lcd_send_nibble,w,c
  3123  001C74  6E8A               	movwf	3978,c	;volatile
  3124                           
  3125                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3126  001C76  A602               	btfss	lcd_send_nibble@nibble,3,c
  3127  001C78  D002               	goto	u1220
  3128  001C7A  0E01               	movlw	1
  3129  001C7C  D001               	goto	u1226
  3130  001C7E                     u1220:
  3131  001C7E  0E00               	movlw	0
  3132  001C80                     u1226:
  3133  001C80  6E01               	movwf	??_lcd_send_nibble& (0+255),c
  3134  001C82  3201               	rrcf	??_lcd_send_nibble,f,c
  3135  001C84  3201               	rrcf	??_lcd_send_nibble,f,c
  3136  001C86  508A               	movf	3978,w,c	;volatile
  3137  001C88  1801               	xorwf	??_lcd_send_nibble,w,c
  3138  001C8A  0B7F               	andlw	-129
  3139  001C8C  1801               	xorwf	??_lcd_send_nibble,w,c
  3140  001C8E  6E8A               	movwf	3978,c	;volatile
  3141                           
  3142                           ;unmc_lcd_216.c: 32: __nop();
  3143  001C90  F000               	nop	
  3144                           
  3145                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3146  001C92  848A               	bsf	3978,2,c	;volatile
  3147                           
  3148                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3149  001C94  F000               	nop	
  3150  001C96  F000               	nop	
  3151                           
  3152                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3153  001C98  948A               	bcf	3978,2,c	;volatile
  3154  001C9A  0012               	return	
  3155  001C9C                     __end_of_lcd_send_nibble:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           tblptrh	equ	0xFF7
  3159                           tblptrl	equ	0xFF6
  3160                           tablat	equ	0xFF5
  3161                           prodh	equ	0xFF4
  3162                           prodl	equ	0xFF3
  3163                           indf0	equ	0xFEF
  3164                           postinc0	equ	0xFEE
  3165                           fsr0h	equ	0xFEA
  3166                           fsr0l	equ	0xFE9
  3167                           wreg	equ	0xFE8
  3168                           postdec1	equ	0xFE5
  3169                           fsr1l	equ	0xFE1
  3170                           indf2	equ	0xFDF
  3171                           postinc2	equ	0xFDE
  3172                           postdec2	equ	0xFDD
  3173                           fsr2h	equ	0xFDA
  3174                           fsr2l	equ	0xFD9
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _Delay100TCYx *****************
  3178 ;; Defined at:
  3179 ;;		line 8 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\pic18\d100tcyx.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  unit            1    wreg     unsigned char 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  unit            1    0[COMRAM] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;		None               void
  3186 ;; Registers used:
  3187 ;;		wreg
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;Total ram usage:        1 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_lcd_send_byte
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text15
  3207  001F7E                     __ptext15:
  3208                           	opt stack 0
  3209  001F7E                     _Delay100TCYx:
  3210                           	opt stack 27
  3211                           
  3212                           ;incstack = 0
  3213                           ;Delay100TCYx@unit stored from wreg
  3214  001F7E  6E01               	movwf	Delay100TCYx@unit,c
  3215  001F80                     l629:
  3216  001F80  0E21               	movlw	33
  3217  001F82                     u2557:
  3218  001F82  2EE8               	decfsz	wreg,f,c
  3219  001F84  D7FE               	goto	u2557
  3220  001F86  F000               	nop	
  3221  001F88  2E01               	decfsz	Delay100TCYx@unit,f,c
  3222  001F8A  D7FA               	goto	l629
  3223  001F8C  0012               	return	
  3224  001F8E                     __end_of_Delay100TCYx:
  3225                           	opt stack 0
  3226                           tblptru	equ	0xFF8
  3227                           tblptrh	equ	0xFF7
  3228                           tblptrl	equ	0xFF6
  3229                           tablat	equ	0xFF5
  3230                           prodh	equ	0xFF4
  3231                           prodl	equ	0xFF3
  3232                           indf0	equ	0xFEF
  3233                           postinc0	equ	0xFEE
  3234                           fsr0h	equ	0xFEA
  3235                           fsr0l	equ	0xFE9
  3236                           wreg	equ	0xFE8
  3237                           postdec1	equ	0xFE5
  3238                           fsr1l	equ	0xFE1
  3239                           indf2	equ	0xFDF
  3240                           postinc2	equ	0xFDE
  3241                           postdec2	equ	0xFDD
  3242                           fsr2h	equ	0xFDA
  3243                           fsr2l	equ	0xFD9
  3244                           status	equ	0xFD8
  3245                           
  3246 ;; *************** function _Write_RTC *****************
  3247 ;; Defined at:
  3248 ;;		line 74 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;		None
  3253 ;; Return value:  Size  Location     Type
  3254 ;;		None               void
  3255 ;; Registers used:
  3256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used:    1
  3268 ;; Hardware stack levels required when called:    2
  3269 ;; This function calls:
  3270 ;;		_RtccWrOn
  3271 ;;		_RtccWriteDate
  3272 ;;		_RtccWriteTime
  3273 ;;		___awdiv
  3274 ;; This function is called by:
  3275 ;;		_Setup
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text16
  3280  001612                     __ptext16:
  3281                           	opt stack 0
  3282  001612                     _Write_RTC:
  3283                           	opt stack 27
  3284                           
  3285                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3286                           
  3287                           ;incstack = 0
  3288  001612  ECAE  F00F         	call	_RtccWrOn	;wreg free
  3289                           
  3290                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3291  001616  80A3               	bsf	4003,0,c	;volatile
  3292                           
  3293                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3294  001618  C038  F001         	movff	_segundo,___awdiv@dividend
  3295  00161C  C039  F002         	movff	_segundo+1,___awdiv@dividend+1
  3296  001620  0E00               	movlw	0
  3297  001622  6E04               	movwf	___awdiv@divisor+1,c
  3298  001624  0E0A               	movlw	10
  3299  001626  6E03               	movwf	___awdiv@divisor,c
  3300  001628  EC3C  F00D         	call	___awdiv	;wreg free
  3301  00162C  5001               	movf	?___awdiv,w,c
  3302  00162E  6E4A               	movwf	_segundo_d,c
  3303                           
  3304                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3305  001630  504A               	movf	_segundo_d,w,c
  3306  001632  0D0A               	mullw	10
  3307  001634  50F3               	movf	prodl,w,c
  3308  001636  0800               	sublw	0
  3309  001638  2438               	addwf	_segundo,w,c
  3310  00163A  6E4B               	movwf	_segundo_u,c
  3311                           
  3312                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3313  00163C  504A               	movf	_segundo_d,w,c
  3314  00163E  0D10               	mullw	16
  3315  001640  50F3               	movf	prodl,w,c
  3316  001642  244B               	addwf	_segundo_u,w,c
  3317  001644  6E3C               	movwf	_RtccTime+1,c
  3318                           
  3319                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3320  001646  C05A  F001         	movff	_minuto,___awdiv@dividend
  3321  00164A  C05B  F002         	movff	_minuto+1,___awdiv@dividend+1
  3322  00164E  0E00               	movlw	0
  3323  001650  6E04               	movwf	___awdiv@divisor+1,c
  3324  001652  0E0A               	movlw	10
  3325  001654  6E03               	movwf	___awdiv@divisor,c
  3326  001656  EC3C  F00D         	call	___awdiv	;wreg free
  3327  00165A  5001               	movf	?___awdiv,w,c
  3328  00165C  6E48               	movwf	_minuto_d,c
  3329                           
  3330                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3331  00165E  5048               	movf	_minuto_d,w,c
  3332  001660  0D0A               	mullw	10
  3333  001662  50F3               	movf	prodl,w,c
  3334  001664  0800               	sublw	0
  3335  001666  245A               	addwf	_minuto,w,c
  3336  001668  6E49               	movwf	_minuto_u,c
  3337                           
  3338                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  3339  00166A  5048               	movf	_minuto_d,w,c
  3340  00166C  0D10               	mullw	16
  3341  00166E  50F3               	movf	prodl,w,c
  3342  001670  2449               	addwf	_minuto_u,w,c
  3343  001672  6E3D               	movwf	_RtccTime+2,c
  3344                           
  3345                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  3346  001674  C056  F001         	movff	_hora,___awdiv@dividend
  3347  001678  C057  F002         	movff	_hora+1,___awdiv@dividend+1
  3348  00167C  0E00               	movlw	0
  3349  00167E  6E04               	movwf	___awdiv@divisor+1,c
  3350  001680  0E0A               	movlw	10
  3351  001682  6E03               	movwf	___awdiv@divisor,c
  3352  001684  EC3C  F00D         	call	___awdiv	;wreg free
  3353  001688  5001               	movf	?___awdiv,w,c
  3354  00168A  6E44               	movwf	_hora_d,c
  3355                           
  3356                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  3357  00168C  5044               	movf	_hora_d,w,c
  3358  00168E  0D0A               	mullw	10
  3359  001690  50F3               	movf	prodl,w,c
  3360  001692  0800               	sublw	0
  3361  001694  2456               	addwf	_hora,w,c
  3362  001696  6E45               	movwf	_hora_u,c
  3363                           
  3364                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  3365  001698  5044               	movf	_hora_d,w,c
  3366  00169A  0D10               	mullw	16
  3367  00169C  50F3               	movf	prodl,w,c
  3368  00169E  2445               	addwf	_hora_u,w,c
  3369  0016A0  6E3E               	movwf	_RtccTime+3,c
  3370                           
  3371                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  3372  0016A2  C050  F001         	movff	_anio,___awdiv@dividend
  3373  0016A6  C051  F002         	movff	_anio+1,___awdiv@dividend+1
  3374  0016AA  0E00               	movlw	0
  3375  0016AC  6E04               	movwf	___awdiv@divisor+1,c
  3376  0016AE  0E0A               	movlw	10
  3377  0016B0  6E03               	movwf	___awdiv@divisor,c
  3378  0016B2  EC3C  F00D         	call	___awdiv	;wreg free
  3379  0016B6  5001               	movf	?___awdiv,w,c
  3380  0016B8  6E3F               	movwf	_anio_d,c
  3381                           
  3382                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  3383  0016BA  503F               	movf	_anio_d,w,c
  3384  0016BC  0D0A               	mullw	10
  3385  0016BE  50F3               	movf	prodl,w,c
  3386  0016C0  0800               	sublw	0
  3387  0016C2  2450               	addwf	_anio,w,c
  3388  0016C4  6E40               	movwf	_anio_u,c
  3389                           
  3390                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  3391  0016C6  503F               	movf	_anio_d,w,c
  3392  0016C8  0D10               	mullw	16
  3393  0016CA  50F3               	movf	prodl,w,c
  3394  0016CC  2440               	addwf	_anio_u,w,c
  3395  0016CE  6E4F               	movwf	_RtccDate+3,c
  3396                           
  3397                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  3398  0016D0  C058  F001         	movff	_mes,___awdiv@dividend
  3399  0016D4  C059  F002         	movff	_mes+1,___awdiv@dividend+1
  3400  0016D8  0E00               	movlw	0
  3401  0016DA  6E04               	movwf	___awdiv@divisor+1,c
  3402  0016DC  0E0A               	movlw	10
  3403  0016DE  6E03               	movwf	___awdiv@divisor,c
  3404  0016E0  EC3C  F00D         	call	___awdiv	;wreg free
  3405  0016E4  5001               	movf	?___awdiv,w,c
  3406  0016E6  6E46               	movwf	_mes_d,c
  3407                           
  3408                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  3409  0016E8  5046               	movf	_mes_d,w,c
  3410  0016EA  0D0A               	mullw	10
  3411  0016EC  50F3               	movf	prodl,w,c
  3412  0016EE  0800               	sublw	0
  3413  0016F0  2458               	addwf	_mes,w,c
  3414  0016F2  6E47               	movwf	_mes_u,c
  3415                           
  3416                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  3417  0016F4  5046               	movf	_mes_d,w,c
  3418  0016F6  0D10               	mullw	16
  3419  0016F8  50F3               	movf	prodl,w,c
  3420  0016FA  2447               	addwf	_mes_u,w,c
  3421  0016FC  6E4E               	movwf	_RtccDate+2,c
  3422                           
  3423                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  3424  0016FE  C052  F001         	movff	_dia,___awdiv@dividend
  3425  001702  C053  F002         	movff	_dia+1,___awdiv@dividend+1
  3426  001706  0E00               	movlw	0
  3427  001708  6E04               	movwf	___awdiv@divisor+1,c
  3428  00170A  0E0A               	movlw	10
  3429  00170C  6E03               	movwf	___awdiv@divisor,c
  3430  00170E  EC3C  F00D         	call	___awdiv	;wreg free
  3431  001712  5001               	movf	?___awdiv,w,c
  3432  001714  6E42               	movwf	_fecha_d,c
  3433                           
  3434                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  3435  001716  5042               	movf	_fecha_d,w,c
  3436  001718  0D0A               	mullw	10
  3437  00171A  50F3               	movf	prodl,w,c
  3438  00171C  0800               	sublw	0
  3439  00171E  2452               	addwf	_dia,w,c
  3440  001720  6E43               	movwf	_fecha_u,c
  3441                           
  3442                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  3443  001722  5042               	movf	_fecha_d,w,c
  3444  001724  0D10               	mullw	16
  3445  001726  50F3               	movf	prodl,w,c
  3446  001728  2443               	addwf	_fecha_u,w,c
  3447  00172A  6E4D               	movwf	_RtccDate+1,c
  3448                           
  3449                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  3450  00172C  C054  F041         	movff	_diasem,_dia_semana
  3451                           
  3452                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  3453  001730  C054  F04C         	movff	_diasem,_RtccDate
  3454                           
  3455                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  3456  001734  0E00               	movlw	high _RtccTime
  3457  001736  6E02               	movwf	RtccWriteTime@pTm+1,c
  3458  001738  0E3B               	movlw	low _RtccTime
  3459  00173A  6E01               	movwf	RtccWriteTime@pTm,c
  3460  00173C  0E01               	movlw	1
  3461  00173E  6E03               	movwf	RtccWriteTime@di,c
  3462  001740  EC4D  F00C         	call	_RtccWriteTime	;wreg free
  3463                           
  3464                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  3465  001744  0E00               	movlw	high _RtccDate
  3466  001746  6E02               	movwf	RtccWriteDate@pDt+1,c
  3467  001748  0E4C               	movlw	low _RtccDate
  3468  00174A  6E01               	movwf	RtccWriteDate@pDt,c
  3469  00174C  0E01               	movlw	1
  3470  00174E  6E03               	movwf	RtccWriteDate@di,c
  3471  001750  ECAD  F00B         	call	_RtccWriteDate	;wreg free
  3472                           
  3473                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  3474  001754  010F               	movlb	15	; () banked
  3475  001756  8F3F               	bsf	63,7,b	;volatile
  3476                           
  3477                           ; BSR set to: 15
  3478  001758  0012               	return	
  3479  00175A                     __end_of_Write_RTC:
  3480                           	opt stack 0
  3481                           tblptru	equ	0xFF8
  3482                           tblptrh	equ	0xFF7
  3483                           tblptrl	equ	0xFF6
  3484                           tablat	equ	0xFF5
  3485                           prodh	equ	0xFF4
  3486                           prodl	equ	0xFF3
  3487                           indf0	equ	0xFEF
  3488                           postinc0	equ	0xFEE
  3489                           fsr0h	equ	0xFEA
  3490                           fsr0l	equ	0xFE9
  3491                           wreg	equ	0xFE8
  3492                           postdec1	equ	0xFE5
  3493                           fsr1l	equ	0xFE1
  3494                           indf2	equ	0xFDF
  3495                           postinc2	equ	0xFDE
  3496                           postdec2	equ	0xFDD
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function ___awdiv *****************
  3502 ;; Defined at:
  3503 ;;		line 8 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\common\awdiv.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  dividend        2    0[COMRAM] int 
  3506 ;;  divisor         2    2[COMRAM] int 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  quotient        2    6[COMRAM] int 
  3509 ;;  sign            1    5[COMRAM] unsigned char 
  3510 ;;  counter         1    4[COMRAM] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  2    0[COMRAM] int 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, prodl
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;Total ram usage:        8 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_Write_RTC
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text17
  3534  001A78                     __ptext17:
  3535                           	opt stack 0
  3536  001A78                     ___awdiv:
  3537                           	opt stack 28
  3538                           
  3539                           ; BSR set to: 15
  3540                           ;incstack = 0
  3541  001A78  0E00               	movlw	0
  3542  001A7A  6E06               	movwf	___awdiv@sign,c
  3543  001A7C  5004               	movf	___awdiv@divisor+1,w,c
  3544  001A7E  0A80               	xorlw	128
  3545  001A80  6EF3               	movwf	prodl,c
  3546  001A82  0E80               	movlw	128
  3547  001A84  5CF3               	subwf	prodl,w,c
  3548  001A86  0E00               	movlw	0
  3549  001A88  B4D8               	btfsc	status,2,c
  3550  001A8A  5C03               	subwf	___awdiv@divisor,w,c
  3551  001A8C  B0D8               	btfsc	status,0,c
  3552  001A8E  D006               	goto	l2051
  3553  001A90  6C03               	negf	___awdiv@divisor,c
  3554  001A92  1E04               	comf	___awdiv@divisor+1,f,c
  3555  001A94  B0D8               	btfsc	status,0,c
  3556  001A96  2A04               	incf	___awdiv@divisor+1,f,c
  3557  001A98  0E01               	movlw	1
  3558  001A9A  6E06               	movwf	___awdiv@sign,c
  3559  001A9C                     l2051:
  3560  001A9C  5002               	movf	___awdiv@dividend+1,w,c
  3561  001A9E  0A80               	xorlw	128
  3562  001AA0  6EF3               	movwf	prodl,c
  3563  001AA2  0E80               	movlw	128
  3564  001AA4  5CF3               	subwf	prodl,w,c
  3565  001AA6  0E00               	movlw	0
  3566  001AA8  B4D8               	btfsc	status,2,c
  3567  001AAA  5C01               	subwf	___awdiv@dividend,w,c
  3568  001AAC  B0D8               	btfsc	status,0,c
  3569  001AAE  D006               	goto	l2057
  3570  001AB0  6C01               	negf	___awdiv@dividend,c
  3571  001AB2  1E02               	comf	___awdiv@dividend+1,f,c
  3572  001AB4  B0D8               	btfsc	status,0,c
  3573  001AB6  2A02               	incf	___awdiv@dividend+1,f,c
  3574  001AB8  0E01               	movlw	1
  3575  001ABA  1A06               	xorwf	___awdiv@sign,f,c
  3576  001ABC                     l2057:
  3577  001ABC  0E00               	movlw	0
  3578  001ABE  6E08               	movwf	___awdiv@quotient+1,c
  3579  001AC0  0E00               	movlw	0
  3580  001AC2  6E07               	movwf	___awdiv@quotient,c
  3581  001AC4  5004               	movf	___awdiv@divisor+1,w,c
  3582  001AC6  1003               	iorwf	___awdiv@divisor,w,c
  3583  001AC8  B4D8               	btfsc	status,2,c
  3584  001ACA  D01C               	goto	l2079
  3585  001ACC  0E01               	movlw	1
  3586  001ACE  6E05               	movwf	___awdiv@counter,c
  3587  001AD0  D004               	goto	l2065
  3588  001AD2                     l2063:
  3589  001AD2  90D8               	bcf	status,0,c
  3590  001AD4  3603               	rlcf	___awdiv@divisor,f,c
  3591  001AD6  3604               	rlcf	___awdiv@divisor+1,f,c
  3592  001AD8  2A05               	incf	___awdiv@counter,f,c
  3593  001ADA                     l2065:
  3594  001ADA  AE04               	btfss	___awdiv@divisor+1,7,c
  3595  001ADC  D7FA               	goto	l2063
  3596  001ADE                     l2067:
  3597  001ADE  90D8               	bcf	status,0,c
  3598  001AE0  3607               	rlcf	___awdiv@quotient,f,c
  3599  001AE2  3608               	rlcf	___awdiv@quotient+1,f,c
  3600  001AE4  5003               	movf	___awdiv@divisor,w,c
  3601  001AE6  5C01               	subwf	___awdiv@dividend,w,c
  3602  001AE8  5004               	movf	___awdiv@divisor+1,w,c
  3603  001AEA  5802               	subwfb	___awdiv@dividend+1,w,c
  3604  001AEC  A0D8               	btfss	status,0,c
  3605  001AEE  D005               	goto	l2075
  3606  001AF0  5003               	movf	___awdiv@divisor,w,c
  3607  001AF2  5E01               	subwf	___awdiv@dividend,f,c
  3608  001AF4  5004               	movf	___awdiv@divisor+1,w,c
  3609  001AF6  5A02               	subwfb	___awdiv@dividend+1,f,c
  3610  001AF8  8007               	bsf	___awdiv@quotient,0,c
  3611  001AFA                     l2075:
  3612  001AFA  90D8               	bcf	status,0,c
  3613  001AFC  3204               	rrcf	___awdiv@divisor+1,f,c
  3614  001AFE  3203               	rrcf	___awdiv@divisor,f,c
  3615  001B00  2E05               	decfsz	___awdiv@counter,f,c
  3616  001B02  D7ED               	goto	l2067
  3617  001B04                     l2079:
  3618  001B04  5006               	movf	___awdiv@sign,w,c
  3619  001B06  B4D8               	btfsc	status,2,c
  3620  001B08  D004               	goto	l2083
  3621  001B0A  6C07               	negf	___awdiv@quotient,c
  3622  001B0C  1E08               	comf	___awdiv@quotient+1,f,c
  3623  001B0E  B0D8               	btfsc	status,0,c
  3624  001B10  2A08               	incf	___awdiv@quotient+1,f,c
  3625  001B12                     l2083:
  3626  001B12  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3627  001B16  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3628  001B1A  0012               	return	
  3629  001B1C                     __end_of___awdiv:
  3630                           	opt stack 0
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           prodh	equ	0xFF4
  3636                           prodl	equ	0xFF3
  3637                           indf0	equ	0xFEF
  3638                           postinc0	equ	0xFEE
  3639                           fsr0h	equ	0xFEA
  3640                           fsr0l	equ	0xFE9
  3641                           wreg	equ	0xFE8
  3642                           postdec1	equ	0xFE5
  3643                           fsr1l	equ	0xFE1
  3644                           indf2	equ	0xFDF
  3645                           postinc2	equ	0xFDE
  3646                           postdec2	equ	0xFDD
  3647                           fsr2h	equ	0xFDA
  3648                           fsr2l	equ	0xFD9
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _RtccWriteTime *****************
  3652 ;; Defined at:
  3653 ;;		line 34 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  pTm             2    0[COMRAM] PTR const struct .
  3656 ;;		 -> RtccTime(4), 
  3657 ;;  di              1    2[COMRAM] enum E7121
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  tempHourWDay    2    9[COMRAM] struct .
  3660 ;;  tempMinSec      2    7[COMRAM] struct .
  3661 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3662 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3663 ;;  wasOn           1    4[COMRAM] enum E7121
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      enum E7337
  3666 ;; Registers used:
  3667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3673 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3674 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;Total ram usage:       11 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    1
  3680 ;; This function calls:
  3681 ;;		_RtccWrOn
  3682 ;; This function is called by:
  3683 ;;		_Write_RTC
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text18
  3688  00189A                     __ptext18:
  3689                           	opt stack 0
  3690  00189A                     _RtccWriteTime:
  3691                           	opt stack 27
  3692                           
  3693                           ;incstack = 0
  3694  00189A  0E00               	movlw	0
  3695  00189C  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3696  00189E  EE20 F002          	lfsr	2,2
  3697  0018A2  5001               	movf	RtccWriteTime@pTm,w,c
  3698  0018A4  26D9               	addwf	fsr2l,f,c
  3699  0018A6  5002               	movf	RtccWriteTime@pTm+1,w,c
  3700  0018A8  22DA               	addwfc	fsr2h,f,c
  3701  0018AA  50DF               	movf	indf2,w,c
  3702  0018AC  6E04               	movwf	??_RtccWriteTime& (0+255),c
  3703  0018AE  0E5A               	movlw	90
  3704  0018B0  5C04               	subwf	??_RtccWriteTime,w,c
  3705  0018B2  B0D8               	btfsc	status,0,c
  3706  0018B4  0012               	return	
  3707  0018B6  EE20 F001          	lfsr	2,1
  3708  0018BA  5001               	movf	RtccWriteTime@pTm,w,c
  3709  0018BC  26D9               	addwf	fsr2l,f,c
  3710  0018BE  5002               	movf	RtccWriteTime@pTm+1,w,c
  3711  0018C0  22DA               	addwfc	fsr2h,f,c
  3712  0018C2  50DF               	movf	indf2,w,c
  3713  0018C4  6E04               	movwf	??_RtccWriteTime& (0+255),c
  3714  0018C6  0E5A               	movlw	90
  3715  0018C8  5C04               	subwf	??_RtccWriteTime,w,c
  3716  0018CA  B0D8               	btfsc	status,0,c
  3717  0018CC  0012               	return	
  3718  0018CE  EE20 F003          	lfsr	2,3
  3719  0018D2  5001               	movf	RtccWriteTime@pTm,w,c
  3720  0018D4  26D9               	addwf	fsr2l,f,c
  3721  0018D6  5002               	movf	RtccWriteTime@pTm+1,w,c
  3722  0018D8  22DA               	addwfc	fsr2h,f,c
  3723  0018DA  0E24               	movlw	36
  3724  0018DC  64DF               	cpfsgt	indf2,c
  3725  0018DE  D001               	goto	l1909
  3726  0018E0  0012               	return	
  3727  0018E2                     l1909:
  3728  0018E2  EE20 F002          	lfsr	2,2
  3729  0018E6  5001               	movf	RtccWriteTime@pTm,w,c
  3730  0018E8  26D9               	addwf	fsr2l,f,c
  3731  0018EA  5002               	movf	RtccWriteTime@pTm+1,w,c
  3732  0018EC  22DA               	addwfc	fsr2h,f,c
  3733  0018EE  50DF               	movf	indf2,w,c
  3734  0018F0  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3735  0018F2  EE20 F001          	lfsr	2,1
  3736  0018F6  5001               	movf	RtccWriteTime@pTm,w,c
  3737  0018F8  26D9               	addwf	fsr2l,f,c
  3738  0018FA  5002               	movf	RtccWriteTime@pTm+1,w,c
  3739  0018FC  22DA               	addwfc	fsr2h,f,c
  3740  0018FE  50DF               	movf	indf2,w,c
  3741  001900  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3742  001902  5003               	movf	RtccWriteTime@di,w,c
  3743  001904  A4D8               	btfss	status,2,c
  3744  001906  9CF2               	bcf	intcon,6,c	;volatile
  3745  001908  0E00               	movlw	0
  3746  00190A  010F               	movlb	15	; () banked
  3747  00190C  BB3F               	btfsc	63,5,b	;volatile
  3748  00190E  0E01               	movlw	1
  3749  001910  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3750  001912  6607               	tstfsz	RtccWriteTime@wasWrEn& (0+255),c
  3751  001914  D002               	goto	l1919
  3752  001916  ECAE  F00F         	call	_RtccWrOn	;wreg free
  3753  00191A                     l1919:
  3754  00191A  0E00               	movlw	0
  3755  00191C  010F               	movlb	15	; () banked
  3756  00191E  BF3F               	btfsc	63,7,b	;volatile
  3757  001920  0E01               	movlw	1
  3758  001922  6E05               	movwf	RtccWriteTime@wasOn,c
  3759  001924  5005               	movf	RtccWriteTime@wasOn& (0+255),w,c
  3760  001926  B4D8               	btfsc	status,2,c
  3761  001928  D006               	goto	l1925
  3762  00192A  0E00               	movlw	0
  3763  00192C  BE91               	btfsc	3985,7,c	;volatile
  3764  00192E  0E01               	movlw	1
  3765  001930  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3766  001932  010F               	movlb	15	; () banked
  3767  001934  9F3F               	bcf	63,7,b	;volatile
  3768  001936                     l1925:
  3769  001936  0EFC               	movlw	252
  3770  001938  010F               	movlb	15	; () banked
  3771  00193A  173F               	andwf	63,f,b	;volatile
  3772  00193C  010F               	movlb	15	; () banked
  3773  00193E  813F               	bsf	63,0,b	;volatile
  3774                           
  3775                           ; BSR set to: 15
  3776  001940  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3777                           
  3778                           ; BSR set to: 15
  3779  001944  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3780                           
  3781                           ; BSR set to: 15
  3782  001948  EE20 F003          	lfsr	2,3
  3783  00194C  5001               	movf	RtccWriteTime@pTm,w,c
  3784  00194E  26D9               	addwf	fsr2l,f,c
  3785  001950  5002               	movf	RtccWriteTime@pTm+1,w,c
  3786  001952  22DA               	addwfc	fsr2h,f,c
  3787  001954  50DF               	movf	indf2,w,c
  3788  001956  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3789                           
  3790                           ; BSR set to: 15
  3791  001958  0EFC               	movlw	252
  3792  00195A  010F               	movlb	15	; () banked
  3793  00195C  173F               	andwf	63,f,b	;volatile
  3794                           
  3795                           ; BSR set to: 15
  3796  00195E  010F               	movlb	15	; () banked
  3797  001960  813F               	bsf	63,0,b	;volatile
  3798                           
  3799                           ; BSR set to: 15
  3800  001962  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3801                           
  3802                           ; BSR set to: 15
  3803  001966  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3804                           
  3805                           ; BSR set to: 15
  3806  00196A  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3807                           
  3808                           ; BSR set to: 15
  3809  00196E  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3810                           
  3811                           ; BSR set to: 15
  3812  001972  5005               	movf	RtccWriteTime@wasOn,w,c
  3813  001974  B4D8               	btfsc	status,2,c
  3814  001976  D00B               	goto	l398
  3815                           
  3816                           ; BSR set to: 15
  3817  001978  010F               	movlb	15	; () banked
  3818  00197A  8F3F               	bsf	63,7,b	;volatile
  3819                           
  3820                           ; BSR set to: 15
  3821  00197C  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3822  00197E  A4D8               	btfss	status,2,c
  3823                           
  3824                           ; BSR set to: 15
  3825  001980  8E91               	bsf	3985,7,c	;volatile
  3826                           
  3827                           ; BSR set to: 15
  3828                           
  3829                           ; BSR set to: 15
  3830  001982  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3831  001984  B4D8               	btfsc	status,2,c
  3832  001986  D007               	goto	l1959
  3833                           
  3834                           ; BSR set to: 15
  3835  001988  ECAE  F00F         	call	_RtccWrOn	;wreg free
  3836  00198C  D004               	goto	l1959
  3837  00198E                     l398:
  3838                           
  3839                           ; BSR set to: 15
  3840  00198E  6607               	tstfsz	RtccWriteTime@wasWrEn,c
  3841  001990  D002               	goto	l1959
  3842                           
  3843                           ; BSR set to: 15
  3844  001992  010F               	movlb	15	; () banked
  3845  001994  9B3F               	bcf	63,5,b	;volatile
  3846  001996                     l1959:
  3847  001996  5003               	movf	RtccWriteTime@di,w,c
  3848  001998  B4D8               	btfsc	status,2,c
  3849  00199A  0012               	return	
  3850  00199C  8CF2               	bsf	intcon,6,c	;volatile
  3851  00199E  0012               	return	
  3852  0019A0                     __end_of_RtccWriteTime:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           prodh	equ	0xFF4
  3859                           prodl	equ	0xFF3
  3860                           intcon	equ	0xFF2
  3861                           indf0	equ	0xFEF
  3862                           postinc0	equ	0xFEE
  3863                           fsr0h	equ	0xFEA
  3864                           fsr0l	equ	0xFE9
  3865                           wreg	equ	0xFE8
  3866                           postdec1	equ	0xFE5
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           postinc2	equ	0xFDE
  3870                           postdec2	equ	0xFDD
  3871                           fsr2h	equ	0xFDA
  3872                           fsr2l	equ	0xFD9
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _RtccWriteDate *****************
  3876 ;; Defined at:
  3877 ;;		line 35 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  pDt             2    0[COMRAM] PTR const struct .
  3880 ;;		 -> RtccDate(4), 
  3881 ;;  di              1    2[COMRAM] enum E7121
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  tempHourWDay    2   11[COMRAM] struct .
  3884 ;;  tempDayMonth    2    9[COMRAM] struct .
  3885 ;;  tempYear        2    6[COMRAM] struct .
  3886 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3887 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3888 ;;  wasOn           1    4[COMRAM] enum E7121
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      enum E7337
  3891 ;; Registers used:
  3892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3898 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3899 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;Total ram usage:       13 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    1
  3905 ;; This function calls:
  3906 ;;		_RtccWrOn
  3907 ;; This function is called by:
  3908 ;;		_Write_RTC
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text19
  3913  00175A                     __ptext19:
  3914                           	opt stack 0
  3915  00175A                     _RtccWriteDate:
  3916                           	opt stack 27
  3917                           
  3918                           ;incstack = 0
  3919  00175A  0E00               	movlw	0
  3920  00175C  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3921  00175E  EE20 F002          	lfsr	2,2
  3922  001762  5001               	movf	RtccWriteDate@pDt,w,c
  3923  001764  26D9               	addwf	fsr2l,f,c
  3924  001766  5002               	movf	RtccWriteDate@pDt+1,w,c
  3925  001768  22DA               	addwfc	fsr2h,f,c
  3926  00176A  50DF               	movf	indf2,w,c
  3927  00176C  6E04               	movwf	??_RtccWriteDate& (0+255),c
  3928  00176E  0E13               	movlw	19
  3929  001770  5C04               	subwf	??_RtccWriteDate,w,c
  3930  001772  B0D8               	btfsc	status,0,c
  3931  001774  0012               	return	
  3932  001776  EE20 F002          	lfsr	2,2
  3933  00177A  5001               	movf	RtccWriteDate@pDt,w,c
  3934  00177C  26D9               	addwf	fsr2l,f,c
  3935  00177E  5002               	movf	RtccWriteDate@pDt+1,w,c
  3936  001780  22DA               	addwfc	fsr2h,f,c
  3937  001782  50DF               	movf	indf2,w,c
  3938  001784  B4D8               	btfsc	status,2,c
  3939  001786  0012               	return	
  3940  001788  EE20 F001          	lfsr	2,1
  3941  00178C  5001               	movf	RtccWriteDate@pDt,w,c
  3942  00178E  26D9               	addwf	fsr2l,f,c
  3943  001790  5002               	movf	RtccWriteDate@pDt+1,w,c
  3944  001792  22DA               	addwfc	fsr2h,f,c
  3945  001794  50DF               	movf	indf2,w,c
  3946  001796  6E04               	movwf	??_RtccWriteDate& (0+255),c
  3947  001798  0E32               	movlw	50
  3948  00179A  5C04               	subwf	??_RtccWriteDate,w,c
  3949  00179C  B0D8               	btfsc	status,0,c
  3950  00179E  0012               	return	
  3951  0017A0  EE20 F001          	lfsr	2,1
  3952  0017A4  5001               	movf	RtccWriteDate@pDt,w,c
  3953  0017A6  26D9               	addwf	fsr2l,f,c
  3954  0017A8  5002               	movf	RtccWriteDate@pDt+1,w,c
  3955  0017AA  22DA               	addwfc	fsr2h,f,c
  3956  0017AC  50DF               	movf	indf2,w,c
  3957  0017AE  B4D8               	btfsc	status,2,c
  3958  0017B0  0012               	return	
  3959  0017B2  EE20 F003          	lfsr	2,3
  3960  0017B6  5001               	movf	RtccWriteDate@pDt,w,c
  3961  0017B8  26D9               	addwf	fsr2l,f,c
  3962  0017BA  5002               	movf	RtccWriteDate@pDt+1,w,c
  3963  0017BC  22DA               	addwfc	fsr2h,f,c
  3964  0017BE  0E99               	movlw	153
  3965  0017C0  64DF               	cpfsgt	indf2,c
  3966  0017C2  D001               	goto	l1975
  3967  0017C4  0012               	return	
  3968  0017C6                     l1975:
  3969  0017C6  EE20 F003          	lfsr	2,3
  3970  0017CA  5001               	movf	RtccWriteDate@pDt,w,c
  3971  0017CC  26D9               	addwf	fsr2l,f,c
  3972  0017CE  5002               	movf	RtccWriteDate@pDt+1,w,c
  3973  0017D0  22DA               	addwfc	fsr2h,f,c
  3974  0017D2  50DF               	movf	indf2,w,c
  3975  0017D4  6E07               	movwf	RtccWriteDate@tempYear,c
  3976  0017D6  EE20 F001          	lfsr	2,1
  3977  0017DA  5001               	movf	RtccWriteDate@pDt,w,c
  3978  0017DC  26D9               	addwf	fsr2l,f,c
  3979  0017DE  5002               	movf	RtccWriteDate@pDt+1,w,c
  3980  0017E0  22DA               	addwfc	fsr2h,f,c
  3981  0017E2  50DF               	movf	indf2,w,c
  3982  0017E4  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3983  0017E6  EE20 F002          	lfsr	2,2
  3984  0017EA  5001               	movf	RtccWriteDate@pDt,w,c
  3985  0017EC  26D9               	addwf	fsr2l,f,c
  3986  0017EE  5002               	movf	RtccWriteDate@pDt+1,w,c
  3987  0017F0  22DA               	addwfc	fsr2h,f,c
  3988  0017F2  50DF               	movf	indf2,w,c
  3989  0017F4  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3990  0017F6  5003               	movf	RtccWriteDate@di,w,c
  3991  0017F8  A4D8               	btfss	status,2,c
  3992  0017FA  9CF2               	bcf	intcon,6,c	;volatile
  3993  0017FC  0E00               	movlw	0
  3994  0017FE  010F               	movlb	15	; () banked
  3995  001800  BB3F               	btfsc	63,5,b	;volatile
  3996  001802  0E01               	movlw	1
  3997  001804  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3998  001806  6609               	tstfsz	RtccWriteDate@wasWrEn& (0+255),c
  3999  001808  D002               	goto	l1985
  4000  00180A  ECAE  F00F         	call	_RtccWrOn	;wreg free
  4001  00180E                     l1985:
  4002  00180E  0E00               	movlw	0
  4003  001810  010F               	movlb	15	; () banked
  4004  001812  BF3F               	btfsc	63,7,b	;volatile
  4005  001814  0E01               	movlw	1
  4006  001816  6E05               	movwf	RtccWriteDate@wasOn,c
  4007  001818  5005               	movf	RtccWriteDate@wasOn& (0+255),w,c
  4008  00181A  B4D8               	btfsc	status,2,c
  4009  00181C  D006               	goto	l1991
  4010  00181E  0E00               	movlw	0
  4011  001820  BE91               	btfsc	3985,7,c	;volatile
  4012  001822  0E01               	movlw	1
  4013  001824  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4014  001826  010F               	movlb	15	; () banked
  4015  001828  9F3F               	bcf	63,7,b	;volatile
  4016  00182A                     l1991:
  4017  00182A  0EFC               	movlw	252
  4018  00182C  010F               	movlb	15	; () banked
  4019  00182E  173F               	andwf	63,f,b	;volatile
  4020  001830  010F               	movlb	15	; () banked
  4021  001832  813F               	bsf	63,0,b	;volatile
  4022                           
  4023                           ; BSR set to: 15
  4024  001834  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  4025                           
  4026                           ; BSR set to: 15
  4027  001838  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  4028                           
  4029                           ; BSR set to: 15
  4030  00183C  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  4031  001840  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  4032  001844  50DF               	movf	indf2,w,c
  4033  001846  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  4034                           
  4035                           ; BSR set to: 15
  4036  001848  0EFC               	movlw	252
  4037  00184A  010F               	movlb	15	; () banked
  4038  00184C  173F               	andwf	63,f,b	;volatile
  4039                           
  4040                           ; BSR set to: 15
  4041  00184E  0E03               	movlw	3
  4042  001850  010F               	movlb	15	; () banked
  4043  001852  133F               	iorwf	63,f,b	;volatile
  4044                           
  4045                           ; BSR set to: 15
  4046  001854  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  4047                           
  4048                           ; BSR set to: 15
  4049  001858  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  4050                           
  4051                           ; BSR set to: 15
  4052  00185C  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  4053                           
  4054                           ; BSR set to: 15
  4055  001860  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  4056                           
  4057                           ; BSR set to: 15
  4058  001864  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  4059                           
  4060                           ; BSR set to: 15
  4061  001868  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  4062                           
  4063                           ; BSR set to: 15
  4064  00186C  5005               	movf	RtccWriteDate@wasOn,w,c
  4065  00186E  B4D8               	btfsc	status,2,c
  4066  001870  D00B               	goto	l369
  4067                           
  4068                           ; BSR set to: 15
  4069  001872  010F               	movlb	15	; () banked
  4070  001874  8F3F               	bsf	63,7,b	;volatile
  4071                           
  4072                           ; BSR set to: 15
  4073  001876  5006               	movf	RtccWriteDate@wasAlrm,w,c
  4074  001878  A4D8               	btfss	status,2,c
  4075                           
  4076                           ; BSR set to: 15
  4077  00187A  8E91               	bsf	3985,7,c	;volatile
  4078                           
  4079                           ; BSR set to: 15
  4080                           
  4081                           ; BSR set to: 15
  4082  00187C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4083  00187E  B4D8               	btfsc	status,2,c
  4084  001880  D007               	goto	l2029
  4085                           
  4086                           ; BSR set to: 15
  4087  001882  ECAE  F00F         	call	_RtccWrOn	;wreg free
  4088  001886  D004               	goto	l2029
  4089  001888                     l369:
  4090                           
  4091                           ; BSR set to: 15
  4092  001888  6609               	tstfsz	RtccWriteDate@wasWrEn,c
  4093  00188A  D002               	goto	l2029
  4094                           
  4095                           ; BSR set to: 15
  4096  00188C  010F               	movlb	15	; () banked
  4097  00188E  9B3F               	bcf	63,5,b	;volatile
  4098  001890                     l2029:
  4099  001890  5003               	movf	RtccWriteDate@di,w,c
  4100  001892  B4D8               	btfsc	status,2,c
  4101  001894  0012               	return	
  4102  001896  9CF2               	bcf	intcon,6,c	;volatile
  4103  001898  0012               	return	
  4104  00189A                     __end_of_RtccWriteDate:
  4105                           	opt stack 0
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           intcon	equ	0xFF2
  4113                           indf0	equ	0xFEF
  4114                           postinc0	equ	0xFEE
  4115                           fsr0h	equ	0xFEA
  4116                           fsr0l	equ	0xFE9
  4117                           wreg	equ	0xFE8
  4118                           postdec1	equ	0xFE5
  4119                           fsr1l	equ	0xFE1
  4120                           indf2	equ	0xFDF
  4121                           postinc2	equ	0xFDE
  4122                           postdec2	equ	0xFDD
  4123                           fsr2h	equ	0xFDA
  4124                           fsr2l	equ	0xFD9
  4125                           status	equ	0xFD8
  4126                           
  4127 ;; *************** function _RtccWrOn *****************
  4128 ;; Defined at:
  4129 ;;		line 21 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\pic18\plib\rtcc\RtccWrOn.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  data            2    0        unsigned int 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;		None               void
  4136 ;; Registers used:
  4137 ;;		wreg, status,2
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; This function calls:
  4150 ;;		Nothing
  4151 ;; This function is called by:
  4152 ;;		_Write_RTC
  4153 ;;		_RtccWriteDate
  4154 ;;		_RtccWriteTime
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text20
  4159  001F5C                     __ptext20:
  4160                           	opt stack 0
  4161  001F5C                     _RtccWrOn:
  4162                           	opt stack 27
  4163                           
  4164                           ;incstack = 0
  4165  001F5C  9CF2               	bcf	intcon,6,c	;volatile
  4166  001F5E  0E55               	movlw	85
  4167  001F60  6EA7               	movwf	4007,c	;volatile
  4168  001F62  0EAA               	movlw	170
  4169  001F64  6EA7               	movwf	4007,c	;volatile
  4170  001F66  010F               	movlb	15	; () banked
  4171  001F68  8B3F               	bsf	63,5,b	;volatile
  4172                           
  4173                           ; BSR set to: 15
  4174  001F6A  8CF2               	bsf	intcon,6,c	;volatile
  4175                           
  4176                           ; BSR set to: 15
  4177  001F6C  0012               	return	
  4178  001F6E                     __end_of_RtccWrOn:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           prodh	equ	0xFF4
  4185                           prodl	equ	0xFF3
  4186                           intcon	equ	0xFF2
  4187                           indf0	equ	0xFEF
  4188                           postinc0	equ	0xFEE
  4189                           fsr0h	equ	0xFEA
  4190                           fsr0l	equ	0xFE9
  4191                           wreg	equ	0xFE8
  4192                           postdec1	equ	0xFE5
  4193                           fsr1l	equ	0xFE1
  4194                           indf2	equ	0xFDF
  4195                           postinc2	equ	0xFDE
  4196                           postdec2	equ	0xFDD
  4197                           fsr2h	equ	0xFDA
  4198                           fsr2l	equ	0xFD9
  4199                           status	equ	0xFD8
  4200                           
  4201 ;; *************** function _Read_RTC *****************
  4202 ;; Defined at:
  4203 ;;		line 111 in file "C:/Archivos de programa/Unimic/unmc_01/headers\unmc_rtcc_01.h"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;		None               void
  4210 ;; Registers used:
  4211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    1
  4224 ;; This function calls:
  4225 ;;		_RtccReadDate
  4226 ;;		_RtccReadTime
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text21
  4233  0019A0                     __ptext21:
  4234                           	opt stack 0
  4235  0019A0                     _Read_RTC:
  4236                           	opt stack 29
  4237                           
  4238                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  4239                           
  4240                           ; BSR set to: 15
  4241                           ;incstack = 0
  4242  0019A0  0E00               	movlw	high _RtccTime
  4243  0019A2  6E02               	movwf	RtccReadTime@pTm+1,c
  4244  0019A4  0E3B               	movlw	low _RtccTime
  4245  0019A6  6E01               	movwf	RtccReadTime@pTm,c
  4246  0019A8  EC4E  F00E         	call	_RtccReadTime	;wreg free
  4247                           
  4248                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  4249  0019AC  503C               	movf	_RtccTime+1,w,c
  4250  0019AE  0B0F               	andlw	15
  4251  0019B0  6E4B               	movwf	_segundo_u,c
  4252                           
  4253                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  4254  0019B2  383C               	swapf	_RtccTime+1,w,c
  4255  0019B4  0B0F               	andlw	15
  4256  0019B6  0B0F               	andlw	15
  4257  0019B8  6E4A               	movwf	_segundo_d,c
  4258                           
  4259                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  4260  0019BA  503D               	movf	_RtccTime+2,w,c
  4261  0019BC  0B0F               	andlw	15
  4262  0019BE  6E49               	movwf	_minuto_u,c
  4263                           
  4264                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  4265  0019C0  383D               	swapf	_RtccTime+2,w,c
  4266  0019C2  0B0F               	andlw	15
  4267  0019C4  0B0F               	andlw	15
  4268  0019C6  6E48               	movwf	_minuto_d,c
  4269                           
  4270                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  4271  0019C8  503E               	movf	_RtccTime+3,w,c
  4272  0019CA  0B0F               	andlw	15
  4273  0019CC  6E45               	movwf	_hora_u,c
  4274                           
  4275                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  4276  0019CE  383E               	swapf	_RtccTime+3,w,c
  4277  0019D0  0B0F               	andlw	15
  4278  0019D2  0B0F               	andlw	15
  4279  0019D4  6E44               	movwf	_hora_d,c
  4280                           
  4281                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  4282  0019D6  0E00               	movlw	high _RtccDate
  4283  0019D8  6E02               	movwf	RtccReadDate@pDt+1,c
  4284  0019DA  0E4C               	movlw	low _RtccDate
  4285  0019DC  6E01               	movwf	RtccReadDate@pDt,c
  4286  0019DE  EC8E  F00D         	call	_RtccReadDate	;wreg free
  4287                           
  4288                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  4289  0019E2  504D               	movf	_RtccDate+1,w,c
  4290  0019E4  0B0F               	andlw	15
  4291  0019E6  6E43               	movwf	_fecha_u,c
  4292                           
  4293                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  4294  0019E8  384D               	swapf	_RtccDate+1,w,c
  4295  0019EA  0B0F               	andlw	15
  4296  0019EC  0B0F               	andlw	15
  4297  0019EE  6E42               	movwf	_fecha_d,c
  4298                           
  4299                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  4300  0019F0  504E               	movf	_RtccDate+2,w,c
  4301  0019F2  0B0F               	andlw	15
  4302  0019F4  6E47               	movwf	_mes_u,c
  4303                           
  4304                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  4305  0019F6  384E               	swapf	_RtccDate+2,w,c
  4306  0019F8  0B0F               	andlw	15
  4307  0019FA  0B0F               	andlw	15
  4308  0019FC  6E46               	movwf	_mes_d,c
  4309                           
  4310                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  4311  0019FE  C04C  F041         	movff	_RtccDate,_dia_semana
  4312                           
  4313                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  4314  001A02  504F               	movf	_RtccDate+3,w,c
  4315  001A04  0B0F               	andlw	15
  4316  001A06  6E40               	movwf	_anio_u,c
  4317                           
  4318                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  4319  001A08  384F               	swapf	_RtccDate+3,w,c
  4320  001A0A  0B0F               	andlw	15
  4321  001A0C  0B0F               	andlw	15
  4322  001A0E  6E3F               	movwf	_anio_d,c
  4323                           
  4324                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  4325  001A10  504A               	movf	_segundo_d,w,c
  4326  001A12  0D0A               	mullw	10
  4327  001A14  504B               	movf	_segundo_u,w,c
  4328  001A16  24F3               	addwf	prodl,w,c
  4329  001A18  6E38               	movwf	_segundo,c
  4330  001A1A  0E00               	movlw	0
  4331  001A1C  20F4               	addwfc	prodh,w,c
  4332  001A1E  6E39               	movwf	_segundo+1,c
  4333                           
  4334                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  4335  001A20  5048               	movf	_minuto_d,w,c
  4336  001A22  0D0A               	mullw	10
  4337  001A24  5049               	movf	_minuto_u,w,c
  4338  001A26  24F3               	addwf	prodl,w,c
  4339  001A28  6E5A               	movwf	_minuto,c
  4340  001A2A  0E00               	movlw	0
  4341  001A2C  20F4               	addwfc	prodh,w,c
  4342  001A2E  6E5B               	movwf	_minuto+1,c
  4343                           
  4344                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  4345  001A30  5044               	movf	_hora_d,w,c
  4346  001A32  0D0A               	mullw	10
  4347  001A34  5045               	movf	_hora_u,w,c
  4348  001A36  24F3               	addwf	prodl,w,c
  4349  001A38  6E56               	movwf	_hora,c
  4350  001A3A  0E00               	movlw	0
  4351  001A3C  20F4               	addwfc	prodh,w,c
  4352  001A3E  6E57               	movwf	_hora+1,c
  4353                           
  4354                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  4355  001A40  5042               	movf	_fecha_d,w,c
  4356  001A42  0D0A               	mullw	10
  4357  001A44  5043               	movf	_fecha_u,w,c
  4358  001A46  24F3               	addwf	prodl,w,c
  4359  001A48  6E52               	movwf	_dia,c
  4360  001A4A  0E00               	movlw	0
  4361  001A4C  20F4               	addwfc	prodh,w,c
  4362  001A4E  6E53               	movwf	_dia+1,c
  4363                           
  4364                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  4365  001A50  C041  F054         	movff	_dia_semana,_diasem
  4366  001A54  6A55               	clrf	_diasem+1,c
  4367                           
  4368                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  4369  001A56  5046               	movf	_mes_d,w,c
  4370  001A58  0D0A               	mullw	10
  4371  001A5A  5047               	movf	_mes_u,w,c
  4372  001A5C  24F3               	addwf	prodl,w,c
  4373  001A5E  6E58               	movwf	_mes,c
  4374  001A60  0E00               	movlw	0
  4375  001A62  20F4               	addwfc	prodh,w,c
  4376  001A64  6E59               	movwf	_mes+1,c
  4377                           
  4378                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  4379  001A66  503F               	movf	_anio_d,w,c
  4380  001A68  0D0A               	mullw	10
  4381  001A6A  5040               	movf	_anio_u,w,c
  4382  001A6C  24F3               	addwf	prodl,w,c
  4383  001A6E  6E50               	movwf	_anio,c
  4384  001A70  0E00               	movlw	0
  4385  001A72  20F4               	addwfc	prodh,w,c
  4386  001A74  6E51               	movwf	_anio+1,c
  4387  001A76  0012               	return	
  4388  001A78                     __end_of_Read_RTC:
  4389                           	opt stack 0
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           indf0	equ	0xFEF
  4398                           postinc0	equ	0xFEE
  4399                           fsr0h	equ	0xFEA
  4400                           fsr0l	equ	0xFE9
  4401                           wreg	equ	0xFE8
  4402                           postdec1	equ	0xFE5
  4403                           fsr1l	equ	0xFE1
  4404                           indf2	equ	0xFDF
  4405                           postinc2	equ	0xFDE
  4406                           postdec2	equ	0xFDD
  4407                           fsr2h	equ	0xFDA
  4408                           fsr2l	equ	0xFD9
  4409                           status	equ	0xFD8
  4410                           
  4411 ;; *************** function _RtccReadTime *****************
  4412 ;; Defined at:
  4413 ;;		line 23 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\pic18\plib\rtcc\RtccReadTime.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  pTm             2    0[COMRAM] PTR struct .
  4416 ;;		 -> RtccTime(4), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  rTD0            8   10[COMRAM] struct .
  4419 ;;  rTD1            8    2[COMRAM] struct .
  4420 ;; Return value:  Size  Location     Type
  4421 ;;		None               void
  4422 ;; Registers used:
  4423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4433 ;;Total ram usage:       18 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_Read_RTC
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text22
  4443  001C9C                     __ptext22:
  4444                           	opt stack 0
  4445  001C9C                     _RtccReadTime:
  4446                           	opt stack 29
  4447  001C9C                     l334:
  4448  001C9C  0EFC               	movlw	252
  4449  001C9E  010F               	movlb	15	; () banked
  4450  001CA0  173F               	andwf	63,f,b	;volatile
  4451                           
  4452                           ; BSR set to: 15
  4453  001CA2  010F               	movlb	15	; () banked
  4454  001CA4  813F               	bsf	63,0,b	;volatile
  4455                           
  4456                           ; BSR set to: 15
  4457  001CA6  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  4458                           
  4459                           ; BSR set to: 15
  4460  001CAA  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  4461                           
  4462                           ; BSR set to: 15
  4463  001CAE  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  4464                           
  4465                           ; BSR set to: 15
  4466  001CB2  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  4467                           
  4468                           ; BSR set to: 15
  4469  001CB6  0EFC               	movlw	252
  4470  001CB8  010F               	movlb	15	; () banked
  4471  001CBA  173F               	andwf	63,f,b	;volatile
  4472  001CBC  010F               	movlb	15	; () banked
  4473  001CBE  813F               	bsf	63,0,b	;volatile
  4474                           
  4475                           ; BSR set to: 15
  4476  001CC0  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  4477                           
  4478                           ; BSR set to: 15
  4479  001CC4  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  4480                           
  4481                           ; BSR set to: 15
  4482  001CC8  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485  001CCC  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  4486                           
  4487                           ; BSR set to: 15
  4488  001CD0  5009               	movf	RtccReadTime@rTD1+6,w,c
  4489  001CD2  EE20  F011         	lfsr	2,RtccReadTime@rTD0+6
  4490  001CD6  62DF               	cpfseq	indf2,c
  4491  001CD8  D7E1               	goto	l334
  4492                           
  4493                           ; BSR set to: 15
  4494                           
  4495                           ; BSR set to: 15
  4496  001CDA  EE20 F003          	lfsr	2,3
  4497  001CDE  5001               	movf	RtccReadTime@pTm,w,c
  4498  001CE0  26D9               	addwf	fsr2l,f,c
  4499  001CE2  5002               	movf	RtccReadTime@pTm+1,w,c
  4500  001CE4  22DA               	addwfc	fsr2h,f,c
  4501  001CE6  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  4502  001CEA  EE20 F002          	lfsr	2,2
  4503  001CEE  5001               	movf	RtccReadTime@pTm,w,c
  4504  001CF0  26D9               	addwf	fsr2l,f,c
  4505  001CF2  5002               	movf	RtccReadTime@pTm+1,w,c
  4506  001CF4  22DA               	addwfc	fsr2h,f,c
  4507  001CF6  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  4508  001CFA  EE20 F001          	lfsr	2,1
  4509  001CFE  5001               	movf	RtccReadTime@pTm,w,c
  4510  001D00  26D9               	addwf	fsr2l,f,c
  4511  001D02  5002               	movf	RtccReadTime@pTm+1,w,c
  4512  001D04  22DA               	addwfc	fsr2h,f,c
  4513  001D06  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  4514                           
  4515                           ; BSR set to: 15
  4516  001D0A  0012               	return	
  4517  001D0C                     __end_of_RtccReadTime:
  4518                           	opt stack 0
  4519                           tblptru	equ	0xFF8
  4520                           tblptrh	equ	0xFF7
  4521                           tblptrl	equ	0xFF6
  4522                           tablat	equ	0xFF5
  4523                           prodh	equ	0xFF4
  4524                           prodl	equ	0xFF3
  4525                           intcon	equ	0xFF2
  4526                           indf0	equ	0xFEF
  4527                           postinc0	equ	0xFEE
  4528                           fsr0h	equ	0xFEA
  4529                           fsr0l	equ	0xFE9
  4530                           wreg	equ	0xFE8
  4531                           postdec1	equ	0xFE5
  4532                           fsr1l	equ	0xFE1
  4533                           indf2	equ	0xFDF
  4534                           postinc2	equ	0xFDE
  4535                           postdec2	equ	0xFDD
  4536                           fsr2h	equ	0xFDA
  4537                           fsr2l	equ	0xFD9
  4538                           status	equ	0xFD8
  4539                           
  4540 ;; *************** function _RtccReadDate *****************
  4541 ;; Defined at:
  4542 ;;		line 23 in file "C:\Archivos de programa\Microchip\xc8\v1.32\sources\pic18\plib\rtcc\RtccReadDate.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  pDt             2    0[COMRAM] PTR struct .
  4545 ;;		 -> RtccDate(4), 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  rTD0            8   10[COMRAM] struct .
  4548 ;;  rTD1            8    2[COMRAM] struct .
  4549 ;; Return value:  Size  Location     Type
  4550 ;;		None               void
  4551 ;; Registers used:
  4552 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4559 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4561 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4562 ;;Total ram usage:       18 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_Read_RTC
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text23
  4572  001B1C                     __ptext23:
  4573                           	opt stack 0
  4574  001B1C                     _RtccReadDate:
  4575                           	opt stack 29
  4576  001B1C                     l323:
  4577  001B1C  0EFC               	movlw	252
  4578  001B1E  010F               	movlb	15	; () banked
  4579  001B20  173F               	andwf	63,f,b	;volatile
  4580  001B22  0E03               	movlw	3
  4581  001B24  010F               	movlb	15	; () banked
  4582  001B26  133F               	iorwf	63,f,b	;volatile
  4583                           
  4584                           ; BSR set to: 15
  4585  001B28  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  4586                           
  4587                           ; BSR set to: 15
  4588  001B2C  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  4589                           
  4590                           ; BSR set to: 15
  4591  001B30  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  4592                           
  4593                           ; BSR set to: 15
  4594  001B34  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  4595                           
  4596                           ; BSR set to: 15
  4597  001B38  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  4598                           
  4599                           ; BSR set to: 15
  4600  001B3C  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  4601  001B40  0EFC               	movlw	252
  4602  001B42  010F               	movlb	15	; () banked
  4603  001B44  173F               	andwf	63,f,b	;volatile
  4604  001B46  0E03               	movlw	3
  4605  001B48  010F               	movlb	15	; () banked
  4606  001B4A  133F               	iorwf	63,f,b	;volatile
  4607                           
  4608                           ; BSR set to: 15
  4609  001B4C  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  4610                           
  4611                           ; BSR set to: 15
  4612  001B50  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  4613                           
  4614                           ; BSR set to: 15
  4615  001B54  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  4616                           
  4617                           ; BSR set to: 15
  4618  001B58  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  4619                           
  4620                           ; BSR set to: 15
  4621  001B5C  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  4622                           
  4623                           ; BSR set to: 15
  4624  001B60  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  4625                           
  4626                           ; BSR set to: 15
  4627  001B64  5005               	movf	RtccReadDate@rTD1+2,w,c
  4628  001B66  EE20  F00D         	lfsr	2,RtccReadDate@rTD0+2
  4629  001B6A  62DF               	cpfseq	indf2,c
  4630  001B6C  D7D7               	goto	l323
  4631                           
  4632                           ; BSR set to: 15
  4633                           
  4634                           ; BSR set to: 15
  4635  001B6E  EE20 F001          	lfsr	2,1
  4636  001B72  5001               	movf	RtccReadDate@pDt,w,c
  4637  001B74  26D9               	addwf	fsr2l,f,c
  4638  001B76  5002               	movf	RtccReadDate@pDt+1,w,c
  4639  001B78  22DA               	addwfc	fsr2h,f,c
  4640  001B7A  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  4641  001B7E  EE20 F002          	lfsr	2,2
  4642  001B82  5001               	movf	RtccReadDate@pDt,w,c
  4643  001B84  26D9               	addwf	fsr2l,f,c
  4644  001B86  5002               	movf	RtccReadDate@pDt+1,w,c
  4645  001B88  22DA               	addwfc	fsr2h,f,c
  4646  001B8A  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  4647                           
  4648                           ; BSR set to: 15
  4649  001B8E  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  4650  001B92  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  4651  001B96  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  4652                           
  4653                           ; BSR set to: 15
  4654  001B9A  EE20 F003          	lfsr	2,3
  4655  001B9E  5001               	movf	RtccReadDate@pDt,w,c
  4656  001BA0  26D9               	addwf	fsr2l,f,c
  4657  001BA2  5002               	movf	RtccReadDate@pDt+1,w,c
  4658  001BA4  22DA               	addwfc	fsr2h,f,c
  4659  001BA6  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  4660                           
  4661                           ; BSR set to: 15
  4662  001BAA  0012               	return	
  4663  001BAC                     __end_of_RtccReadDate:
  4664                           	opt stack 0
  4665                           tblptru	equ	0xFF8
  4666                           tblptrh	equ	0xFF7
  4667                           tblptrl	equ	0xFF6
  4668                           tablat	equ	0xFF5
  4669                           prodh	equ	0xFF4
  4670                           prodl	equ	0xFF3
  4671                           intcon	equ	0xFF2
  4672                           indf0	equ	0xFEF
  4673                           postinc0	equ	0xFEE
  4674                           fsr0h	equ	0xFEA
  4675                           fsr0l	equ	0xFE9
  4676                           wreg	equ	0xFE8
  4677                           postdec1	equ	0xFE5
  4678                           fsr1l	equ	0xFE1
  4679                           indf2	equ	0xFDF
  4680                           postinc2	equ	0xFDE
  4681                           postdec2	equ	0xFDD
  4682                           fsr2h	equ	0xFDA
  4683                           fsr2l	equ	0xFD9
  4684                           status	equ	0xFD8
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           indf0	equ	0xFEF
  4693                           postinc0	equ	0xFEE
  4694                           fsr0h	equ	0xFEA
  4695                           fsr0l	equ	0xFE9
  4696                           wreg	equ	0xFE8
  4697                           postdec1	equ	0xFE5
  4698                           fsr1l	equ	0xFE1
  4699                           indf2	equ	0xFDF
  4700                           postinc2	equ	0xFDE
  4701                           postdec2	equ	0xFDD
  4702                           fsr2h	equ	0xFDA
  4703                           fsr2l	equ	0xFD9
  4704                           status	equ	0xFD8
  4705                           
  4706                           	psect	rparam
  4707  0000                     tblptru	equ	0xFF8
  4708                           tblptrh	equ	0xFF7
  4709                           tblptrl	equ	0xFF6
  4710                           tablat	equ	0xFF5
  4711                           prodh	equ	0xFF4
  4712                           prodl	equ	0xFF3
  4713                           intcon	equ	0xFF2
  4714                           indf0	equ	0xFEF
  4715                           postinc0	equ	0xFEE
  4716                           fsr0h	equ	0xFEA
  4717                           fsr0l	equ	0xFE9
  4718                           wreg	equ	0xFE8
  4719                           postdec1	equ	0xFE5
  4720                           fsr1l	equ	0xFE1
  4721                           indf2	equ	0xFDF
  4722                           postinc2	equ	0xFDE
  4723                           postdec2	equ	0xFDD
  4724                           fsr2h	equ	0xFDA
  4725                           fsr2l	equ	0xFD9
  4726                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    14
    Data        12
    BSS         67
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      92
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_17(CODE[15]), STR_14(CODE[5]), STR_11(CODE[5]), STR_10(CODE[5]), 
		 -> STR_9(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1060$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_8(CODE[2]), STR_4(CODE[2]), buffer2(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   11896
                                             38 COMRAM     1     1      0
                           _Read_RTC
                              _Setup
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    16     10    3068
                                             12 COMRAM    26    16     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     287
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_putrs                                            2     0      2    2622
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    1489
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1     821
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    3771
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     848
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_comand                                           1     1      0     646
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     624
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Write_RTC                                            0     0      0    2277
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1068
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _RtccWriteTime                                       11     8      3     537
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWriteDate                                       13    10      3     672
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (4) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     968
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     437
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     531
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _lcd_comand
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     27      5C       1       96.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88       6        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Sep 27 15:37:42 2017

                        _a 002C                          _b 002E                          _c 0030  
                        _i 0032                          _j 0034                          _k 0036  
           ?_lcd_send_byte 0003               ___awdiv@sign 0006        ___wmul@multiplicand 0003  
              lcd_comand@d 0005               __CFG_CP0$OFF 000000                        l151 1064  
                      l143 0FCC                        l306 158E                        l323 1B1C  
                      l227 1EDE                        l171 11A4                        l163 112E  
                      l155 108E                        l147 1018                        l228 1EE0  
                      l334 1C9C                        l191 12EC                        l183 1290  
                      l175 11F8                        l167 117A                        l159 10E2  
                      l195 1338                        l187 12BA                        l179 1244  
                      l199 1362                        l369 1888                        l643 1F70  
                      l629 1F80                        l398 198E                        l944 1D54  
                      l954 1E76                        _dia 0052                        _key 003A  
                      _mes 0058                        wreg 000FE8            RtccReadDate@pDt 0001  
              lcd_gotoxy@x 0006                lcd_gotoxy@y 0005                       l2051 1A9C  
                     l2029 1890                       l2221 1BFA                       l2037 1F26  
                     l2063 1AD2                       l2207 1BD4                       l2065 1ADA  
                     l2057 1ABC                       l2233 1DB4                       l2401 14A6  
                     l2083 1B12                       l2075 1AFA                       l2067 1ADE  
                     l2235 1DC0                       l2243 1DE4                       l2403 14C8  
                     l2237 1DCC                       l2253 1F54                       l2421 1518  
                     l2079 1B04                       l2239 1DD8                       l2271 1D2A  
                     l2511 1014                       l2281 1D4A                       l2273 1D2E  
                     l2425 153C                       l2601 1232                       l2521 1052  
                     l2291 1E54                       l2451 15E6                       l2427 1544  
                     l2371 13E6                       l2603 1240                       l2531 107C  
                     l2523 1060                       l2461 1D60                       l2269 1D22  
                     l2293 1E58                       l2445 1594                       l2437 1568  
                     l2453 15EE                       l2613 127E                       l2533 108A  
                     l2509 1006                       l2439 1570                       l2455 1604  
                     l2383 1414                       l2623 12A8                       l2615 128C  
                     l2543 10D0                       l2471 0F34                       l2465 1D88  
                     l2297 1E6C                       l2289 1E4C                       l2377 1400  
                     l2633 12DA                       l2625 12B6                       l2545 10DE  
                     l2379 140E                       l2635 12E8                       l2555 111C  
                     l1925 1936                       l1909 18E2                       l2397 14A0  
                     l2389 1442                       l2645 1326                       l2557 112A  
                     l1919 191A                       l2655 1350                       l2647 1334  
                     l2591 11F4                       l2567 1168                       l2665 137A  
                     l2657 135E                       l2577 1192                       l2569 1176  
                     l2497 0FBA                       l2667 1388                       l2579 11A0  
                     l2499 0FC8                       l2669 138C                       l2589 11E6  
                     l1991 182A                       l1975 17C6                       l1959 1996  
                     l1985 180E                       STR_1 0F1E                       STR_2 0F1E  
                     STR_3 0F1E                       STR_4 0F27                       STR_5 0F1E  
                     STR_6 0F1E                       STR_7 0F1E                       STR_8 0F29  
                     STR_9 0F1E                       u1200 1C48                       u1210 1C62  
                     u1220 1C7E                       u1206 1C4A                       u1216 1C64  
                     u1226 1C80                       u1190 1C30                       u1196 1C32  
                     u2407 1058                       u2417 1082                       u2507 12E0  
                     u2427 10D6                       u2517 132C                       u2437 1122  
                     u1830 1D80                       u2527 1356                       u2447 116E  
                     u1840 1DA8                       u2537 1380                       u2457 1198  
                     u2377 0F6E                       u2547 1F72                       u2467 11EC  
                     u2387 0FC0                       u1860 0F42                       u2557 1F82  
                     u1837 1D76                       u2477 1238                       u2397 100C  
                     u1870 0F5A                       u1847 1D9E                       u2487 1284  
                     u2497 12AE                       u1866 0F44                       u1876 0F5C  
         ?_lcd_send_nibble 0001                       _anio 0050                       _flag 02E0  
                     _main 0F30                       _hora 0056                       fsr0h 000FEA  
                     indf0 000FEF                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
            __CFG_T1DIG$ON 000000                       prodh 000FF4                       prodl 000FF3  
                     start 0000              __CFG_IESO$OFF 000000           RtccReadDate@rTD0 000B  
         RtccReadDate@rTD1 0003            RtccReadTime@pTm 0001                _Delay1KTCYx 1F6E  
            __CFG_PLLDIV$1 000000                      ?_main 0001            __end_of___awdiv 1B1C  
                    STR_10 0F1E                      STR_11 0F1E                      STR_12 0F2B  
                    STR_13 0F25                      STR_14 0F1E                      STR_15 0F23  
                    STR_16 0F2D                      STR_17 0F0F      __size_of_Delay100TCYx 0010  
          ___awdiv@divisor 0003            __end_of___lwdiv 1D5E            __end_of___lwmod 1E80  
          ___awdiv@counter 0005                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94             __CFG_FCMEN$OFF 000000                      _Setup 1E80  
          __end_of_dpowers 0F0B                      _mes_d 0046                      _mes_u 0047  
          __end_of_isdigit 1F5C             __pbitbssCOMRAM 02E0                      tablat 000FF5  
             lcd_putrs@ptr 0009                      status 000FD8            __end_of_sprintf 1612  
  __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1DFA               _Delay100TCYx 1F7E  
             __end_of_main 13DC            ??_lcd_send_byte 0004           RtccReadTime@rTD0 000B  
         RtccReadTime@rTD1 0003           __end_of_Read_RTC 1A78                     ??_main 0027  
            __activetblptr 000002           __end_of_RtccWrOn 1F6E                     ?_Setup 0001  
                   _EECON2 000FA7                     _ANCON0 000F48                     _ANCON1 000F49  
         ___awdiv@dividend 0001             __CFG_WDTEN$OFF 000000           RtccWriteDate@pDt 0001  
                   _RTCCFG 000F3F             __CFG_WPCFG$OFF 000000             __CFG_WPDIS$OFF 000000  
           __CFG_XINST$OFF 000000           __end_of_lcd_init 1C26           __end_of_lcd_putc 1DFA  
                   ___wmul 1EF4                  ??___awdiv 0005             __CFG_STVREN$ON 000000  
                   _diasem 0054                     _anio_d 003F                     _anio_u 0040  
                ??___lwdiv 0005                  ??___lwmod 000C                     _hora_d 0044  
                   _hora_u 0045                     clear_0 1E00                     clear_1 1E0E  
         ___awdiv@quotient 0007                     _minuto 005A      __end_of_RtccWriteDate 189A  
    __end_of_RtccWriteTime 19A0           RtccWriteTime@pTm 0001               __pdataCOMRAM 0050  
                ??_isdigit 0001               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_sprintf 0017  
               __accesstop 0060    __end_of__initialization 1E34         __size_of_Write_RTC 0148  
           __pcstackCOMRAM 0001              __end_of_Setup 1EC2            __CFG_DSWDTPS$G2 000000  
          __CFG_OSC$INTOSC 000000                    ??_Setup 000E          lcd_gotoxy@address 0007  
       __size_of_lcd_putrs 0052               sprintf@width 0024                 __pbssBANK0 0060  
                ?_Read_RTC 0001                 _dia_semana 0041  RtccWriteTime@tempHourWDay 000A  
               __pnvCOMRAM 003F                  ?_RtccWrOn 0001             lcd_send_byte@n 0003  
                  ?___wmul 0001              ?_RtccReadDate 0001              ?_RtccReadTime 0001  
             ?_Delay1KTCYx 0001          __end_of_Write_RTC 175A                 _lcd_comand 1F8E  
               _lcd_gotoxy 1F1A                    _RTCVALH 000F99                    _RTCVALL 000F98  
                ?_lcd_init 0001                  ?_lcd_putc 0001                 ??_Read_RTC 0013  
                  __Hparam 0000                    __Lparam 0000   __size_of_lcd_send_nibble 0076  
               ??_RtccWrOn 0001             ??_RtccReadDate 0003             ??_RtccReadTime 0003  
                  ___awdiv 1A78          __end_of_lcd_putrs 1DB0            __size_of___wmul 0026  
                  ___lwdiv 1D0C                    ___lwmod 1E3E               __psmallconst 0F00  
              _RtccTimeVal 0028                    __pcinit 1DFA                    _fecha_d 0042  
                  _fecha_u 0043                    __ramtop 0F00                    __ptext0 0F30  
                  __ptext1 13DC                    __ptext2 1F3C                    __ptext3 1EF4  
                  __ptext4 1E3E                    __ptext5 1D0C                    __ptext6 1D5E  
                  __ptext7 1DB0                    __ptext8 1F1A                    __ptext9 1E80  
                  _buffer2 0078                  _T1CONbits 000FCD                    _dpowers 0F01  
                  _isdigit 1F3C                    _segundo 0038                    _sprintf 13DC  
               ??_lcd_init 0005                 ??_lcd_putc 0008       end_of_initialization 1E34  
     lcd_send_byte@address 0004              __Lmediumconst 0000                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
    __end_of_lcd_send_byte 1EF4                  _PORTAbits 000F80                  _PORTCbits 000F82  
         __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0001           __CFG_CPUDIV$OSC1 000000  
                _TRISBbits 000F93                ?_lcd_gotoxy 0005            _LCD_INIT_STRING 0F0B  
         __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 000A        __CFG_MSSP7B_EN$MSK7 000000  
         Delay100TCYx@unit 0001             __end_of___wmul 1F1A              __pidataCOMRAM 1F9C  
RtccWriteDate@tempHourWDay 000C          ??_lcd_send_nibble 0001       __size_of_Delay1KTCYx 0010  
         __CFG_DSWDTEN$OFF 000000        start_initialization 1DFA       __end_of_RtccReadDate 1BAC  
     __end_of_RtccReadTime 1D0C       RtccWriteTime@wasAlrm 0006       RtccWriteTime@wasWrEn 0007  
   __size_of_RtccWriteDate 0140            RtccWriteDate@di 0003     __size_of_RtccWriteTime 0106  
        __size_of_Read_RTC 00D8        __size_of_lcd_comand 000E        __size_of_lcd_gotoxy 0022  
                 ??___wmul 0005          __size_of_RtccWrOn 0012            RtccWriteTime@di 0003  
         __CFG_LPT1OSC$OFF 000000                _ALRMCFGbits 000F91    __end_of_LCD_INIT_STRING 0F0F  
              __pbssCOMRAM 0028        __end_of__stringdata 0F2F                  _Write_RTC 1612  
             _isdigit$2038 0002            Delay1KTCYx@unit 0001          __size_of_lcd_init 007A  
              sprintf@_val 001E                sprintf@flag 001D          __size_of_lcd_putc 004A  
              sprintf@prec 0023           ___lwdiv@dividend 0001              ?_Delay100TCYx 0001  
                 ?___awdiv 0001                   ?___lwdiv 0001                   ?___lwmod 0008  
  RtccWriteTime@tempMinSec 0008                  _lcd_putrs 1D5E              _RtccWriteDate 175A  
              __smallconst 0F00              _RtccWriteTime 189A                   ?_isdigit 0001  
     __CFG_RTCOSC$T1OSCREF 000000             __size_of_Setup 0042                 ?_Write_RTC 0001  
         ___lwdiv@quotient 0005                   ?_sprintf 000D           _RtccAlrmTimeDate 0060  
           ___wmul@product 0005                   _LATAbits 000F89                   _LATBbits 000F8A  
                 _PIE3bits 000FA3                  _segundo_d 004A             ??_Delay100TCYx 0001  
                _segundo_u 004B           __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 0005  
       _Rtcc_read_TimeDate 0070             ?_RtccWriteDate 0001                __stringdata 0F0F  
               ?_lcd_putrs 0009          ___wmul@multiplier 0001             ?_RtccWriteTime 0001  
                lcd_init@i 0005      __size_of_RtccReadDate 0090               ??_lcd_comand 0005  
                lcd_putc@c 0008      __size_of_RtccReadTime 0070               ??_lcd_gotoxy 0006  
                copy_data0 1E28                   _Read_RTC 19A0            _lcd_send_nibble 1C26  
                 __Hrparam 0000                   _RtccDate 004C                   __Lrparam 0000  
                 _RtccTime 003B                   _RtccWrOn 1F5C         __end_of_lcd_comand 1F9C  
       __end_of_lcd_gotoxy 1F3C               _RtccReadDate 1B1C           __size_of___awdiv 00A4  
             _RtccReadTime 1C9C           __size_of___lwdiv 0052           __size_of___lwmod 0042  
             _RtccTimeDate 0068           __size_of_isdigit 0020            ___lwdiv@divisor 0003  
              ??_Write_RTC 000E            ___lwdiv@counter 0007                   __ptext10 1BAC  
                 __ptext11 1F6E                   __ptext20 1F5C                   __ptext12 1F8E  
                 __ptext21 19A0                   __ptext13 1EC2                   __ptext22 1C9C  
                 __ptext14 1C26                   __ptext23 1B1C                   __ptext15 1F7E  
                 __ptext16 1612                   __ptext17 1A78                   __ptext18 189A  
                 __ptext19 175A                   _lcd_init 1BAC                   _lcd_putc 1DB0  
         __size_of_sprintf 0236     __size_of_lcd_send_byte 0032              __size_of_main 04AC  
                 _minuto_d 0048                   _minuto_u 0049              ??_Delay1KTCYx 0001  
          ??_RtccWriteDate 0004            ??_RtccWriteTime 0004                ??_lcd_putrs 000B  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2         RtccWriteTime@wasOn 0005  
     __end_of_Delay100TCYx 1F8E                   isdigit@c 0003                  sprintf@ap 001B  
  __end_of_lcd_send_nibble 1C9C                  sprintf@sp 000D           ___lwmod@dividend 0008  
               _OSCCONbits 000FD3      RtccWriteDate@tempYear 0007              _lcd_send_byte 1EC2  
               _RTCCFGbits 000F3F                   sprintf@c 0026                   sprintf@f 000F  
          ___lwmod@divisor 000A        __end_of_Delay1KTCYx 1F7E            ___lwmod@counter 000C  
     RtccWriteDate@wasAlrm 0006       RtccWriteDate@wasWrEn 0009      lcd_send_nibble@nibble 0002  
