

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Nov 17 12:46:09 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86  0000                     
    87                           ; Version 1.43
    88                           ; Generated 25/07/2017 GMT
    89                           ; 
    90                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F26J50 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	idataBANK0
   123  00CDA6                     __pidataBANK0:
   124                           	opt stack 0
   125                           
   126                           ;initializer for _array_contrasenia
   127  00CDA6  0001               	dw	1
   128  00CDA8  0002               	dw	2
   129  00CDAA  0003               	dw	3
   130  00CDAC  0004               	dw	4
   131                           
   132                           ;initializer for _causa_reporte
   133  00CDAE  CD                 	db	low STR_7
   134  00CDAF  FF                 	db	high STR_7
   135                           
   136                           ;initializer for _minuto
   137  00CDB0  001E               	dw	30
   138                           
   139                           ;initializer for _hora
   140  00CDB2  0012               	dw	18
   141                           
   142                           ;initializer for _dia
   143  00CDB4  0008               	dw	8
   144                           
   145                           ;initializer for _diasem
   146  00CDB6  0003               	dw	3
   147                           
   148                           ;initializer for _mes
   149  00CDB8  0009               	dw	9
   150                           
   151                           ;initializer for _anio
   152  00CDBA  000F               	dw	15
   153                           
   154                           	psect	idataBANK1
   155  00CD4C                     __pidataBANK1:
   156                           	opt stack 0
   157                           
   158                           ;initializer for _array_seleccionar
   159  00CD4C  D3                 	db	low STR_1
   160  00CD4D  FF                 	db	high STR_1
   161  00CD4E  EC                 	db	low STR_2
   162  00CD4F  FF                 	db	high STR_2
   163  00CD50  E7                 	db	low STR_3
   164  00CD51  FF                 	db	high STR_3
   165  00CD52  D8                 	db	low STR_4
   166  00CD53  FF                 	db	high STR_4
   167  00CD54  E2                 	db	low STR_5
   168  00CD55  FF                 	db	high STR_5
   169  00CD56  DD                 	db	low STR_6
   170  00CD57  FF                 	db	high STR_6
   171                           
   172                           	psect	mediumconst
   173  00FE4C                     __pmediumconst:
   174                           	opt stack 0
   175  00FE4C  00                 	db	0
   176  00FE4D                     _dpowers:
   177                           	opt stack 0
   178  00FE4D  0001               	dw	1
   179  00FE4F  000A               	dw	10
   180  00FE51  0064               	dw	100
   181  00FE53  03E8               	dw	1000
   182  00FE55  2710               	dw	10000
   183  00FE57                     __end_of_dpowers:
   184                           	opt stack 0
   185  00FE57                     _LCD_INIT_STRING:
   186                           	opt stack 0
   187  00FE57  28                 	db	40
   188  00FE58  0C                 	db	12
   189  00FE59  01                 	db	1
   190  00FE5A  06                 	db	6
   191  00FE5B                     __end_of_LCD_INIT_STRING:
   192                           	opt stack 0
   193  00FE5B                     exp@coeff:
   194                           	opt stack 0
   195  00FE5B  00                 	db	0
   196  00FE5C  80                 	db	128
   197  00FE5D  3F                 	db	63
   198  00FE5E  72                 	db	114
   199  00FE5F  31                 	db	49
   200  00FE60  3F                 	db	63
   201  00FE61  FE                 	db	254
   202  00FE62  75                 	db	117
   203  00FE63  3E                 	db	62
   204  00FE64  58                 	db	88
   205  00FE65  63                 	db	99
   206  00FE66  3D                 	db	61
   207  00FE67  95                 	db	149
   208  00FE68  1D                 	db	29
   209  00FE69  3C                 	db	60
   210  00FE6A  C5                 	db	197
   211  00FE6B  AE                 	db	174
   212  00FE6C  3A                 	db	58
   213  00FE6D  79                 	db	121
   214  00FE6E  21                 	db	33
   215  00FE6F  39                 	db	57
   216  00FE70  94                 	db	148
   217  00FE71  80                 	db	128
   218  00FE72  37                 	db	55
   219  00FE73  93                 	db	147
   220  00FE74  A7                 	db	167
   221  00FE75  35                 	db	53
   222  00FE76  56                 	db	86
   223  00FE77  15                 	db	21
   224  00FE78  34                 	db	52
   225  00FE79                     __end_ofexp@coeff:
   226                           	opt stack 0
   227  00FE79                     log@coeff:
   228                           	opt stack 0
   229  00FE79  00                 	db	0
   230  00FE7A  00                 	db	0
   231  00FE7B  00                 	db	0
   232  00FE7C  00                 	db	0
   233  00FE7D  80                 	db	128
   234  00FE7E  3F                 	db	63
   235  00FE7F  F0                 	db	240
   236  00FE80  FF                 	db	255
   237  00FE81  BE                 	db	190
   238  00FE82  E2                 	db	226
   239  00FE83  A9                 	db	169
   240  00FE84  3E                 	db	62
   241  00FE85  83                 	db	131
   242  00FE86  76                 	db	118
   243  00FE87  BE                 	db	190
   244  00FE88  AE                 	db	174
   245  00FE89  2B                 	db	43
   246  00FE8A  3E                 	db	62
   247  00FE8B  3C                 	db	60
   248  00FE8C  C3                 	db	195
   249  00FE8D  BD                 	db	189
   250  00FE8E  D2                 	db	210
   251  00FE8F  13                 	db	19
   252  00FE90  3D                 	db	61
   253  00FE91  78                 	db	120
   254  00FE92  D3                 	db	211
   255  00FE93  BB                 	db	187
   256  00FE94                     __end_oflog@coeff:
   257                           	opt stack 0
   258  00FE94                     STR_26:
   259                           
   260                           ; BSR set to: 15
   261  00FE94  52                 	db	82	;'R'
   262  00FE95  65                 	db	101	;'e'
   263  00FE96  70                 	db	112	;'p'
   264  00FE97  6F                 	db	111	;'o'
   265  00FE98  72                 	db	114	;'r'
   266  00FE99  74                 	db	116	;'t'
   267  00FE9A  20                 	db	32
   268  00FE9B  20                 	db	32
   269  00FE9C  25                 	db	37
   270  00FE9D  30                 	db	48	;'0'
   271  00FE9E  32                 	db	50	;'2'
   272  00FE9F  69                 	db	105	;'i'
   273  00FEA0  2F                 	db	47
   274  00FEA1  25                 	db	37
   275  00FEA2  30                 	db	48	;'0'
   276  00FEA3  32                 	db	50	;'2'
   277  00FEA4  69                 	db	105	;'i'
   278  00FEA5  2F                 	db	47
   279  00FEA6  25                 	db	37
   280  00FEA7  30                 	db	48	;'0'
   281  00FEA8  32                 	db	50	;'2'
   282  00FEA9  69                 	db	105	;'i'
   283  00FEAA  00                 	db	0
   284  00FEAB                     STR_41:
   285                           
   286                           ; BSR set to: 15
   287  00FEAB  49                 	db	73	;'I'
   288  00FEAC  6E                 	db	110	;'n'
   289  00FEAD  73                 	db	115	;'s'
   290  00FEAE  65                 	db	101	;'e'
   291  00FEAF  72                 	db	114	;'r'
   292  00FEB0  74                 	db	116	;'t'
   293  00FEB1  20                 	db	32
   294  00FEB2  6E                 	db	110	;'n'
   295  00FEB3  65                 	db	101	;'e'
   296  00FEB4  77                 	db	119	;'w'
   297  00FEB5  20                 	db	32
   298  00FEB6  50                 	db	80	;'P'
   299  00FEB7  61                 	db	97	;'a'
   300  00FEB8  73                 	db	115	;'s'
   301  00FEB9  73                 	db	115	;'s'
   302  00FEBA  77                 	db	119	;'w'
   303  00FEBB  6F                 	db	111	;'o'
   304  00FEBC  72                 	db	114	;'r'
   305  00FEBD  64                 	db	100	;'d'
   306  00FEBE  20                 	db	32
   307  00FEBF  00                 	db	0
   308  00FEC0                     STR_27:
   309                           
   310                           ; BSR set to: 15
   311  00FEC0  25                 	db	37
   312  00FEC1  73                 	db	115	;'s'
   313  00FEC2  20                 	db	32
   314  00FEC3  25                 	db	37
   315  00FEC4  30                 	db	48	;'0'
   316  00FEC5  32                 	db	50	;'2'
   317  00FEC6  69                 	db	105	;'i'
   318  00FEC7  3A                 	db	58	;':'
   319  00FEC8  25                 	db	37
   320  00FEC9  30                 	db	48	;'0'
   321  00FECA  32                 	db	50	;'2'
   322  00FECB  69                 	db	105	;'i'
   323  00FECC  3A                 	db	58	;':'
   324  00FECD  25                 	db	37
   325  00FECE  30                 	db	48	;'0'
   326  00FECF  32                 	db	50	;'2'
   327  00FED0  69                 	db	105	;'i'
   328  00FED1  00                 	db	0
   329  00FED2                     STR_18:
   330                           
   331                           ; BSR set to: 15
   332  00FED2  20                 	db	32
   333  00FED3  20                 	db	32
   334  00FED4  20                 	db	32
   335  00FED5  20                 	db	32
   336  00FED6  20                 	db	32
   337  00FED7  20                 	db	32
   338  00FED8  20                 	db	32
   339  00FED9  20                 	db	32
   340  00FEDA  20                 	db	32
   341  00FEDB  20                 	db	32
   342  00FEDC  20                 	db	32
   343  00FEDD  20                 	db	32
   344  00FEDE  20                 	db	32
   345  00FEDF  20                 	db	32
   346  00FEE0  20                 	db	32
   347  00FEE1  20                 	db	32
   348  00FEE2  00                 	db	0
   349  00FEE3                     STR_17:
   350                           
   351                           ; BSR set to: 15
   352  00FEE3  41                 	db	65	;'A'
   353  00FEE4  6C                 	db	108	;'l'
   354  00FEE5  61                 	db	97	;'a'
   355  00FEE6  72                 	db	114	;'r'
   356  00FEE7  6D                 	db	109	;'m'
   357  00FEE8  20                 	db	32
   358  00FEE9  61                 	db	97	;'a'
   359  00FEEA  63                 	db	99	;'c'
   360  00FEEB  74                 	db	116	;'t'
   361  00FEEC  69                 	db	105	;'i'
   362  00FEED  76                 	db	118	;'v'
   363  00FEEE  61                 	db	97	;'a'
   364  00FEEF  74                 	db	116	;'t'
   365  00FEF0  65                 	db	101	;'e'
   366  00FEF1  64                 	db	100	;'d'
   367  00FEF2  20                 	db	32
   368  00FEF3  00                 	db	0
   369  00FEF4                     STR_38:
   370                           
   371                           ; BSR set to: 15
   372  00FEF4  49                 	db	73	;'I'
   373  00FEF5  6E                 	db	110	;'n'
   374  00FEF6  73                 	db	115	;'s'
   375  00FEF7  65                 	db	101	;'e'
   376  00FEF8  72                 	db	114	;'r'
   377  00FEF9  74                 	db	116	;'t'
   378  00FEFA  20                 	db	32
   379  00FEFB  50                 	db	80	;'P'
   380  00FEFC  61                 	db	97	;'a'
   381  00FEFD  73                 	db	115	;'s'
   382  00FEFE  73                 	db	115	;'s'
   383  00FEFF  77                 	db	119	;'w'
   384  00FF00  6F                 	db	111	;'o'
   385  00FF01  72                 	db	114	;'r'
   386  00FF02  64                 	db	100	;'d'
   387  00FF03  20                 	db	32
   388  00FF04  00                 	db	0
   389  00FF05                     STR_8:
   390                           
   391                           ; BSR set to: 15
   392  00FF05  25                 	db	37
   393  00FF06  30                 	db	48	;'0'
   394  00FF07  32                 	db	50	;'2'
   395  00FF08  75                 	db	117	;'u'
   396  00FF09  2F                 	db	47
   397  00FF0A  25                 	db	37
   398  00FF0B  30                 	db	48	;'0'
   399  00FF0C  32                 	db	50	;'2'
   400  00FF0D  75                 	db	117	;'u'
   401  00FF0E  2F                 	db	47
   402  00FF0F  25                 	db	37
   403  00FF10  30                 	db	48	;'0'
   404  00FF11  32                 	db	50	;'2'
   405  00FF12  75                 	db	117	;'u'
   406  00FF13  00                 	db	0
   407  00FF14                     STR_9:
   408                           
   409                           ; BSR set to: 15
   410  00FF14  25                 	db	37
   411  00FF15  30                 	db	48	;'0'
   412  00FF16  32                 	db	50	;'2'
   413  00FF17  75                 	db	117	;'u'
   414  00FF18  3A                 	db	58	;':'
   415  00FF19  25                 	db	37
   416  00FF1A  30                 	db	48	;'0'
   417  00FF1B  32                 	db	50	;'2'
   418  00FF1C  75                 	db	117	;'u'
   419  00FF1D  3A                 	db	58	;':'
   420  00FF1E  25                 	db	37
   421  00FF1F  30                 	db	48	;'0'
   422  00FF20  32                 	db	50	;'2'
   423  00FF21  75                 	db	117	;'u'
   424  00FF22  00                 	db	0
   425  00FF23                     STR_28:
   426                           
   427                           ; BSR set to: 15
   428  00FF23  41                 	db	65	;'A'
   429  00FF24  63                 	db	99	;'c'
   430  00FF25  74                 	db	116	;'t'
   431  00FF26  69                 	db	105	;'i'
   432  00FF27  76                 	db	118	;'v'
   433  00FF28  65                 	db	101	;'e'
   434  00FF29  20                 	db	32
   435  00FF2A  20                 	db	32
   436  00FF2B  00                 	db	0
   437  00FF2C                     STR_33:
   438                           
   439                           ; BSR set to: 15
   440  00FF2C  50                 	db	80	;'P'
   441  00FF2D  72                 	db	114	;'r'
   442  00FF2E  65                 	db	101	;'e'
   443  00FF2F  73                 	db	115	;'s'
   444  00FF30  73                 	db	115	;'s'
   445  00FF31  20                 	db	32
   446  00FF32  41                 	db	65	;'A'
   447  00FF33  20                 	db	32
   448  00FF34  00                 	db	0
   449  00FF35                     STR_44:
   450                           
   451                           ; BSR set to: 15
   452  00FF35  53                 	db	83	;'S'
   453  00FF36  65                 	db	101	;'e'
   454  00FF37  74                 	db	116	;'t'
   455  00FF38  20                 	db	32
   456  00FF39  4D                 	db	77	;'M'
   457  00FF3A  74                 	db	116	;'t'
   458  00FF3B  68                 	db	104	;'h'
   459  00FF3C  20                 	db	32
   460  00FF3D  00                 	db	0
   461  00FF3E                     STR_43:
   462                           
   463                           ; BSR set to: 15
   464  00FF3E  53                 	db	83	;'S'
   465  00FF3F  65                 	db	101	;'e'
   466  00FF40  74                 	db	116	;'t'
   467  00FF41  20                 	db	32
   468  00FF42  44                 	db	68	;'D'
   469  00FF43  61                 	db	97	;'a'
   470  00FF44  79                 	db	121	;'y'
   471  00FF45  20                 	db	32
   472  00FF46  00                 	db	0
   473  00FF47                     STR_11:
   474                           
   475                           ; BSR set to: 15
   476  00FF47  50                 	db	80	;'P'
   477  00FF48  61                 	db	97	;'a'
   478  00FF49  73                 	db	115	;'s'
   479  00FF4A  73                 	db	115	;'s'
   480  00FF4B  77                 	db	119	;'w'
   481  00FF4C  6F                 	db	111	;'o'
   482  00FF4D  72                 	db	114	;'r'
   483  00FF4E  64                 	db	100	;'d'
   484  00FF4F  00                 	db	0
   485  00FF50                     STR_32:
   486                           
   487                           ; BSR set to: 15
   488  00FF50  45                 	db	69	;'E'
   489  00FF51  64                 	db	100	;'d'
   490  00FF52  74                 	db	116	;'t'
   491  00FF53  20                 	db	32
   492  00FF54  44                 	db	68	;'D'
   493  00FF55  61                 	db	97	;'a'
   494  00FF56  74                 	db	116	;'t'
   495  00FF57  65                 	db	101	;'e'
   496  00FF58  00                 	db	0
   497  00FF59                     STR_45:
   498                           
   499                           ; BSR set to: 15
   500  00FF59  53                 	db	83	;'S'
   501  00FF5A  65                 	db	101	;'e'
   502  00FF5B  74                 	db	116	;'t'
   503  00FF5C  20                 	db	32
   504  00FF5D  59                 	db	89	;'Y'
   505  00FF5E  65                 	db	101	;'e'
   506  00FF5F  61                 	db	97	;'a'
   507  00FF60  72                 	db	114	;'r'
   508  00FF61  00                 	db	0
   509  00FF62                     STR_34:
   510                           
   511                           ; BSR set to: 15
   512  00FF62  45                 	db	69	;'E'
   513  00FF63  64                 	db	100	;'d'
   514  00FF64  74                 	db	116	;'t'
   515  00FF65  20                 	db	32
   516  00FF66  48                 	db	72	;'H'
   517  00FF67  6F                 	db	111	;'o'
   518  00FF68  75                 	db	117	;'u'
   519  00FF69  72                 	db	114	;'r'
   520  00FF6A  00                 	db	0
   521  00FF6B                     STR_46:
   522                           
   523                           ; BSR set to: 15
   524  00FF6B  53                 	db	83	;'S'
   525  00FF6C  65                 	db	101	;'e'
   526  00FF6D  74                 	db	116	;'t'
   527  00FF6E  20                 	db	32
   528  00FF6F  48                 	db	72	;'H'
   529  00FF70  6F                 	db	111	;'o'
   530  00FF71  75                 	db	117	;'u'
   531  00FF72  72                 	db	114	;'r'
   532  00FF73  00                 	db	0
   533  00FF74                     STR_48:
   534                           
   535                           ; BSR set to: 15
   536  00FF74  53                 	db	83	;'S'
   537  00FF75  65                 	db	101	;'e'
   538  00FF76  74                 	db	116	;'t'
   539  00FF77  20                 	db	32
   540  00FF78  53                 	db	83	;'S'
   541  00FF79  65                 	db	101	;'e'
   542  00FF7A  63                 	db	99	;'c'
   543  00FF7B  73                 	db	115	;'s'
   544  00FF7C  00                 	db	0
   545  00FF7D                     STR_47:
   546                           
   547                           ; BSR set to: 15
   548  00FF7D  53                 	db	83	;'S'
   549  00FF7E  65                 	db	101	;'e'
   550  00FF7F  74                 	db	116	;'t'
   551  00FF80  20                 	db	32
   552  00FF81  4D                 	db	77	;'M'
   553  00FF82  69                 	db	105	;'i'
   554  00FF83  6E                 	db	110	;'n'
   555  00FF84  73                 	db	115	;'s'
   556  00FF85  00                 	db	0
   557  00FF86                     STR_29:
   558                           
   559                           ; BSR set to: 15
   560  00FF86  45                 	db	69	;'E'
   561  00FF87  64                 	db	100	;'d'
   562  00FF88  74                 	db	116	;'t'
   563  00FF89  20                 	db	32
   564  00FF8A  50                 	db	80	;'P'
   565  00FF8B  61                 	db	97	;'a'
   566  00FF8C  73                 	db	115	;'s'
   567  00FF8D  73                 	db	115	;'s'
   568  00FF8E  00                 	db	0
   569  00FF8F                     STR_36:
   570                           
   571                           ; BSR set to: 15
   572  00FF8F  41                 	db	65	;'A'
   573  00FF90  63                 	db	99	;'c'
   574  00FF91  74                 	db	116	;'t'
   575  00FF92  69                 	db	105	;'i'
   576  00FF93  76                 	db	118	;'v'
   577  00FF94  65                 	db	101	;'e'
   578  00FF95  20                 	db	32
   579  00FF96  00                 	db	0
   580  00FF97                     STR_23:
   581                           
   582                           ; BSR set to: 15
   583  00FF97  73                 	db	115	;'s'
   584  00FF98  65                 	db	101	;'e'
   585  00FF99  6E                 	db	110	;'n'
   586  00FF9A  73                 	db	115	;'s'
   587  00FF9B  6F                 	db	111	;'o'
   588  00FF9C  72                 	db	114	;'r'
   589  00FF9D  31                 	db	49	;'1'
   590  00FF9E  00                 	db	0
   591  00FF9F                     STR_24:
   592                           
   593                           ; BSR set to: 15
   594  00FF9F  73                 	db	115	;'s'
   595  00FFA0  65                 	db	101	;'e'
   596  00FFA1  6E                 	db	110	;'n'
   597  00FFA2  73                 	db	115	;'s'
   598  00FFA3  6F                 	db	111	;'o'
   599  00FFA4  72                 	db	114	;'r'
   600  00FFA5  32                 	db	50	;'2'
   601  00FFA6  00                 	db	0
   602  00FFA7                     STR_25:
   603                           
   604                           ; BSR set to: 15
   605  00FFA7  73                 	db	115	;'s'
   606  00FFA8  65                 	db	101	;'e'
   607  00FFA9  6E                 	db	110	;'n'
   608  00FFAA  73                 	db	115	;'s'
   609  00FFAB  6F                 	db	111	;'o'
   610  00FFAC  72                 	db	114	;'r'
   611  00FFAD  33                 	db	51	;'3'
   612  00FFAE  00                 	db	0
   613  00FFAF                     STR_15:
   614                           
   615                           ; BSR set to: 15
   616  00FFAF  50                 	db	80	;'P'
   617  00FFB0  72                 	db	114	;'r'
   618  00FFB1  65                 	db	101	;'e'
   619  00FFB2  73                 	db	115	;'s'
   620  00FFB3  73                 	db	115	;'s'
   621  00FFB4  20                 	db	32
   622  00FFB5  41                 	db	65	;'A'
   623  00FFB6  00                 	db	0
   624  00FFB7                     STR_22:
   625                           
   626                           ; BSR set to: 15
   627  00FFB7  33                 	db	51	;'3'
   628  00FFB8  20                 	db	32
   629  00FFB9  74                 	db	116	;'t'
   630  00FFBA  72                 	db	114	;'r'
   631  00FFBB  69                 	db	105	;'i'
   632  00FFBC  65                 	db	101	;'e'
   633  00FFBD  73                 	db	115	;'s'
   634  00FFBE  00                 	db	0
   635  00FFBF                     STR_49:
   636                           
   637                           ; BSR set to: 15
   638  00FFBF  28                 	db	40
   639  00FFC0  6E                 	db	110	;'n'
   640  00FFC1  75                 	db	117	;'u'
   641  00FFC2  6C                 	db	108	;'l'
   642  00FFC3  6C                 	db	108	;'l'
   643  00FFC4  29                 	db	41
   644  00FFC5  00                 	db	0
   645  00FFC6                     STR_10:
   646                           
   647                           ; BSR set to: 15
   648  00FFC6  49                 	db	73	;'I'
   649  00FFC7  6E                 	db	110	;'n'
   650  00FFC8  73                 	db	115	;'s'
   651  00FFC9  65                 	db	101	;'e'
   652  00FFCA  72                 	db	114	;'r'
   653  00FFCB  74                 	db	116	;'t'
   654  00FFCC  00                 	db	0
   655  00FFCD                     STR_7:
   656                           
   657                           ; BSR set to: 15
   658  00FFCD  63                 	db	99	;'c'
   659  00FFCE  61                 	db	97	;'a'
   660  00FFCF  75                 	db	117	;'u'
   661  00FFD0  73                 	db	115	;'s'
   662  00FFD1  65                 	db	101	;'e'
   663  00FFD2  00                 	db	0
   664  00FFD3                     STR_1:
   665                           
   666                           ; BSR set to: 15
   667  00FFD3  20                 	db	32
   668  00FFD4  44                 	db	68	;'D'
   669  00FFD5  69                 	db	105	;'i'
   670  00FFD6  61                 	db	97	;'a'
   671  00FFD7  00                 	db	0
   672  00FFD8                     STR_4:
   673                           
   674                           ; BSR set to: 15
   675  00FFD8  48                 	db	72	;'H'
   676  00FFD9  6F                 	db	111	;'o'
   677  00FFDA  72                 	db	114	;'r'
   678  00FFDB  61                 	db	97	;'a'
   679  00FFDC  00                 	db	0
   680  00FFDD                     STR_6:
   681                           
   682                           ; BSR set to: 15
   683  00FFDD  20                 	db	32
   684  00FFDE  53                 	db	83	;'S'
   685  00FFDF  65                 	db	101	;'e'
   686  00FFE0  67                 	db	103	;'g'
   687  00FFE1  00                 	db	0
   688  00FFE2                     STR_5:
   689                           
   690                           ; BSR set to: 15
   691  00FFE2  20                 	db	32
   692  00FFE3  4D                 	db	77	;'M'
   693  00FFE4  69                 	db	105	;'i'
   694  00FFE5  6E                 	db	110	;'n'
   695  00FFE6  00                 	db	0
   696  00FFE7                     STR_3:
   697                           
   698                           ; BSR set to: 15
   699  00FFE7  41                 	db	65	;'A'
   700  00FFE8  6E                 	db	110	;'n'
   701  00FFE9  69                 	db	105	;'i'
   702  00FFEA  6F                 	db	111	;'o'
   703  00FFEB  00                 	db	0
   704  00FFEC                     STR_2:
   705                           
   706                           ; BSR set to: 15
   707  00FFEC  20                 	db	32
   708  00FFED  4D                 	db	77	;'M'
   709  00FFEE  65                 	db	101	;'e'
   710  00FFEF  73                 	db	115	;'s'
   711  00FFF0  00                 	db	0
   712  00FFF1                     STR_14:
   713                           
   714                           ; BSR set to: 15
   715  00FFF1  25                 	db	37
   716  00FFF2  30                 	db	48	;'0'
   717  00FFF3  31                 	db	49	;'1'
   718  00FFF4  75                 	db	117	;'u'
   719  00FFF5  00                 	db	0
   720  0000                     
   721                           ; #config settings
   722  00FFF6  00                 	db	0	; dummy byte at the end
   723  0000                     
   724                           	psect	nvBANK0
   725  0000E9                     __pnvBANK0:
   726                           	opt stack 0
   727  0000E9                     _anio_d:
   728                           	opt stack 0
   729  0000E9                     	ds	1
   730  0000EA                     _anio_u:
   731                           	opt stack 0
   732  0000EA                     	ds	1
   733  0000EB                     _dia_semana:
   734                           	opt stack 0
   735  0000EB                     	ds	1
   736  0000EC                     _mes_d:
   737                           	opt stack 0
   738  0000EC                     	ds	1
   739  0000ED                     _mes_u:
   740                           	opt stack 0
   741  0000ED                     	ds	1
   742  0000EE                     _fecha_d:
   743                           	opt stack 0
   744  0000EE                     	ds	1
   745  0000EF                     _fecha_u:
   746                           	opt stack 0
   747  0000EF                     	ds	1
   748  0000F0                     _hora_d:
   749                           	opt stack 0
   750  0000F0                     	ds	1
   751  0000F1                     _hora_u:
   752                           	opt stack 0
   753  0000F1                     	ds	1
   754  0000F2                     _minuto_d:
   755                           	opt stack 0
   756  0000F2                     	ds	1
   757  0000F3                     _minuto_u:
   758                           	opt stack 0
   759  0000F3                     	ds	1
   760  0000F4                     _segundo_d:
   761                           	opt stack 0
   762  0000F4                     	ds	1
   763  0000F5                     _segundo_u:
   764                           	opt stack 0
   765  0000F5                     	ds	1
   766  0000                     _RTCCFG	set	3903
   767  0000                     _ANCON1	set	3913
   768  0000                     _ANCON0	set	3912
   769  0000                     _RTCCFGbits	set	3903
   770  0000                     _ALRMCFGbits	set	3985
   771  0000                     _EECON2	set	4007
   772  0000                     _INTCONbits	set	4082
   773  0000                     _RTCVALH	set	3993
   774  0000                     _RTCVALL	set	3992
   775  0000                     _TRISBbits	set	3987
   776  0000                     _T1CONbits	set	4045
   777  0000                     _TRISC	set	3988
   778  0000                     _TRISB	set	3987
   779  0000                     _TRISA	set	3986
   780  0000                     _OSCCONbits	set	4051
   781  0000                     _OSCTUNEbits	set	3995
   782  0000                     _LATBbits	set	3978
   783  0000                     _PORTCbits	set	3970
   784  0000                     _PORTAbits	set	3968
   785  0000                     _LATAbits	set	3977
   786  0000                     _PIE3bits	set	4003
   787                           
   788                           	psect	cinit
   789  00D1D2                     __pcinit:
   790                           	opt stack 0
   791  00D1D2                     start_initialization:
   792                           	opt stack 0
   793  00D1D2                     __initialization:
   794                           	opt stack 0
   795                           
   796                           ; Initialize objects allocated to BANK1 (12 bytes)
   797                           ; load TBLPTR registers with __pidataBANK1
   798  00D1D2  0E4C               	movlw	low __pidataBANK1
   799  00D1D4  6EF6               	movwf	tblptrl,c
   800  00D1D6  0ECD               	movlw	high __pidataBANK1
   801  00D1D8  6EF7               	movwf	tblptrh,c
   802  00D1DA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   803  00D1DC  6EF8               	movwf	tblptru,c
   804  00D1DE  EE01  F028         	lfsr	0,__pdataBANK1
   805  00D1E2  EE10 F00C          	lfsr	1,12
   806  00D1E6                     copy_data0:
   807  00D1E6  0009               	tblrd		*+
   808  00D1E8  CFF5 FFEE          	movff	tablat,postinc0
   809  00D1EC  50E5               	movf	postdec1,w,c
   810  00D1EE  50E1               	movf	fsr1l,w,c
   811  00D1F0  E1FA               	bnz	copy_data0
   812                           
   813                           ; Initialize objects allocated to BANK0 (22 bytes)
   814                           ; load TBLPTR registers with __pidataBANK0
   815  00D1F2  0EA6               	movlw	low __pidataBANK0
   816  00D1F4  6EF6               	movwf	tblptrl,c
   817  00D1F6  0ECD               	movlw	high __pidataBANK0
   818  00D1F8  6EF7               	movwf	tblptrh,c
   819  00D1FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   820  00D1FC  6EF8               	movwf	tblptru,c
   821  00D1FE  EE00  F0BD         	lfsr	0,__pdataBANK0
   822  00D202  EE10 F016          	lfsr	1,22
   823  00D206                     copy_data1:
   824  00D206  0009               	tblrd		*+
   825  00D208  CFF5 FFEE          	movff	tablat,postinc0
   826  00D20C  50E5               	movf	postdec1,w,c
   827  00D20E  50E1               	movf	fsr1l,w,c
   828  00D210  E1FA               	bnz	copy_data1
   829                           
   830                           ; Clear objects allocated to BANK1 (40 bytes)
   831  00D212  EE01  F000         	lfsr	0,__pbssBANK1
   832  00D216  0E28               	movlw	40
   833  00D218                     clear_0:
   834  00D218  6AEE               	clrf	postinc0,c
   835  00D21A  06E8               	decf	wreg,f,c
   836  00D21C  E1FD               	bnz	clear_0
   837                           
   838                           ; Clear objects allocated to BITBANK0 (1 bytes)
   839  00D21E  0100               	movlb	0
   840  00D220  6BF6               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   841                           
   842                           ; Clear objects allocated to BANK0 (93 bytes)
   843  00D222  EE00  F060         	lfsr	0,__pbssBANK0
   844  00D226  0E5D               	movlw	93
   845  00D228                     clear_1:
   846  00D228  6AEE               	clrf	postinc0,c
   847  00D22A  06E8               	decf	wreg,f,c
   848  00D22C  E1FD               	bnz	clear_1
   849  00D22E                     end_of_initialization:
   850                           	opt stack 0
   851  00D22E                     __end_of__initialization:
   852                           	opt stack 0
   853  00D22E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   854  00D230  6EF8               	movwf	tblptru,c
   855  00D232  0100               	movlb	0
   856  00D234  EF1C  F067         	goto	_main	;jump to C main() function
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           
   866                           	psect	bitbssBANK0
   867  0007B0                     __pbitbssBANK0:
   868                           	opt stack 0
   869  0007B0                     _flag:
   870                           	opt stack 0
   871  0007B0                     	ds	1
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           tblptrl	equ	0xFF6
   875                           tablat	equ	0xFF5
   876                           postinc0	equ	0xFEE
   877                           wreg	equ	0xFE8
   878                           postdec1	equ	0xFE5
   879                           fsr1l	equ	0xFE1
   880                           
   881                           	psect	bssBANK0
   882  000060                     __pbssBANK0:
   883                           	opt stack 0
   884  000060                     _array_contrasenia_ingresada:
   885                           	opt stack 0
   886  000060                     	ds	8
   887  000068                     _Rtcc_read_TimeDate:
   888                           	opt stack 0
   889  000068                     	ds	8
   890  000070                     _RtccAlrmTimeDate:
   891                           	opt stack 0
   892  000070                     	ds	8
   893  000078                     _RtccTimeDate:
   894                           	opt stack 0
   895  000078                     	ds	8
   896  000080                     _numeros_para_fecha:
   897                           	opt stack 0
   898  000080                     	ds	4
   899  000084                     _RtccTimeVal:
   900                           	opt stack 0
   901  000084                     	ds	4
   902  000088                     _errno:
   903                           	opt stack 0
   904  000088                     	ds	2
   905  00008A                     _txt_pantalla_edicion:
   906                           	opt stack 0
   907  00008A                     	ds	2
   908  00008C                     _txt_alarma_activada:
   909                           	opt stack 0
   910  00008C                     	ds	2
   911  00008E                     _txt_insertar_contrasenia:
   912                           	opt stack 0
   913  00008E                     	ds	2
   914  000090                     _boton_seleccionar:
   915                           	opt stack 0
   916  000090                     	ds	2
   917  000092                     _segundos_ultimo_reporte:
   918                           	opt stack 0
   919  000092                     	ds	2
   920  000094                     _minutos_ultimo_reporte:
   921                           	opt stack 0
   922  000094                     	ds	2
   923  000096                     _hora_ultimo_reporte:
   924                           	opt stack 0
   925  000096                     	ds	2
   926  000098                     _anio_ultimo_reporte:
   927                           	opt stack 0
   928  000098                     	ds	2
   929  00009A                     _mes_ultimo_reporte:
   930                           	opt stack 0
   931  00009A                     	ds	2
   932  00009C                     _dia_ultimo_reporte:
   933                           	opt stack 0
   934  00009C                     	ds	2
   935  00009E                     _alarma_sonando:
   936                           	opt stack 0
   937  00009E                     	ds	2
   938  0000A0                     _alarma_activada:
   939                           	opt stack 0
   940  0000A0                     	ds	2
   941  0000A2                     _motivo_ingreso_de_numeros:
   942                           	opt stack 0
   943  0000A2                     	ds	2
   944  0000A4                     _numeros_ingresados:
   945                           	opt stack 0
   946  0000A4                     	ds	2
   947  0000A6                     _segundo:
   948                           	opt stack 0
   949  0000A6                     	ds	2
   950  0000A8                     _k:
   951                           	opt stack 0
   952  0000A8                     	ds	2
   953  0000AA                     _c:
   954                           	opt stack 0
   955  0000AA                     	ds	2
   956  0000AC                     _b:
   957                           	opt stack 0
   958  0000AC                     	ds	2
   959  0000AE                     _a:
   960                           	opt stack 0
   961  0000AE                     	ds	2
   962  0000B0                     _j:
   963                           	opt stack 0
   964  0000B0                     	ds	2
   965  0000B2                     _i:
   966                           	opt stack 0
   967  0000B2                     	ds	2
   968  0000B4                     _key:
   969                           	opt stack 0
   970  0000B4                     	ds	1
   971  0000B5                     _RtccDate:
   972                           	opt stack 0
   973  0000B5                     	ds	4
   974  0000B9                     _RtccTime:
   975                           	opt stack 0
   976  0000B9                     	ds	4
   977                           tblptru	equ	0xFF8
   978                           tblptrh	equ	0xFF7
   979                           tblptrl	equ	0xFF6
   980                           tablat	equ	0xFF5
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           
   986                           	psect	dataBANK0
   987  0000BD                     __pdataBANK0:
   988                           	opt stack 0
   989  0000BD                     _array_contrasenia:
   990                           	opt stack 0
   991  0000BD                     	ds	8
   992  0000C5                     _causa_reporte:
   993                           	opt stack 0
   994  0000C5                     	ds	2
   995  0000C7                     _minuto:
   996                           	opt stack 0
   997  0000C7                     	ds	2
   998  0000C9                     _hora:
   999                           	opt stack 0
  1000  0000C9                     	ds	2
  1001  0000CB                     _dia:
  1002                           	opt stack 0
  1003  0000CB                     	ds	2
  1004  0000CD                     _diasem:
  1005                           	opt stack 0
  1006  0000CD                     	ds	2
  1007  0000CF                     _mes:
  1008                           	opt stack 0
  1009  0000CF                     	ds	2
  1010  0000D1                     _anio:
  1011                           	opt stack 0
  1012  0000D1                     	ds	2
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           postdec1	equ	0xFE5
  1020                           fsr1l	equ	0xFE1
  1021                           
  1022                           	psect	bssBANK1
  1023  000100                     __pbssBANK1:
  1024                           	opt stack 0
  1025  000100                     _buffer3:
  1026                           	opt stack 0
  1027  000100                     	ds	20
  1028  000114                     _buffer2:
  1029                           	opt stack 0
  1030  000114                     	ds	20
  1031                           tblptru	equ	0xFF8
  1032                           tblptrh	equ	0xFF7
  1033                           tblptrl	equ	0xFF6
  1034                           tablat	equ	0xFF5
  1035                           postinc0	equ	0xFEE
  1036                           wreg	equ	0xFE8
  1037                           postdec1	equ	0xFE5
  1038                           fsr1l	equ	0xFE1
  1039                           
  1040                           	psect	dataBANK1
  1041  000128                     __pdataBANK1:
  1042                           	opt stack 0
  1043  000128                     _array_seleccionar:
  1044                           	opt stack 0
  1045  000128                     	ds	12
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1l	equ	0xFE1
  1054                           
  1055                           	psect	cstackBANK0
  1056  0000D3                     __pcstackBANK0:
  1057                           	opt stack 0
  1058  0000D3                     _covertir_valores_de_array_a_escala_decimal$2499:
  1059                           	opt stack 0
  1060                           
  1061                           ; 3 bytes @ 0x0
  1062  0000D3                     	ds	3
  1063  0000D6                     _covertir_valores_de_array_a_escala_decimal$2500:
  1064                           	opt stack 0
  1065                           
  1066                           ; 3 bytes @ 0x3
  1067  0000D6                     	ds	3
  1068  0000D9                     covertir_valores_de_array_a_escala_decimal@numero:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x6
  1072  0000D9                     	ds	2
  1073  0000DB                     covertir_valores_de_array_a_escala_decimal@i:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x8
  1077  0000DB                     	ds	2
  1078  0000DD                     editar_fecha_reloj_digital@dia_ingresado:
  1079                           	opt stack 0
  1080  0000DD                     editar_hora_reloj_digital@hora_ingresada:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0xA
  1084  0000DD                     	ds	2
  1085  0000DF                     editar_fecha_reloj_digital@mes_ingresado:
  1086                           	opt stack 0
  1087  0000DF                     editar_hora_reloj_digital@minuto_ingresado:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0xC
  1091  0000DF                     	ds	2
  1092  0000E1                     editar_fecha_reloj_digital@anio_ingresado:
  1093                           	opt stack 0
  1094  0000E1                     editar_hora_reloj_digital@segundo_ingresado:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0xE
  1098  0000E1                     	ds	2
  1099  0000E3                     editar_fecha_reloj_digital@posicion:
  1100                           	opt stack 0
  1101  0000E3                     editar_hora_reloj_digital@posicion:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0x10
  1105  0000E3                     	ds	2
  1106  0000E5                     ??_ir_a_pantalla_edicion:
  1107                           
  1108                           ; 1 bytes @ 0x12
  1109  0000E5                     	ds	1
  1110  0000E6                     ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x13
  1114  0000E6                     	ds	2
  1115  0000E8                     ??_main:
  1116                           
  1117                           ; 1 bytes @ 0x15
  1118  0000E8                     	ds	1
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           postinc0	equ	0xFEE
  1124                           wreg	equ	0xFE8
  1125                           postdec1	equ	0xFE5
  1126                           fsr1l	equ	0xFE1
  1127                           
  1128                           	psect	cstackCOMRAM
  1129  000001                     __pcstackCOMRAM:
  1130                           	opt stack 0
  1131  000001                     ??_isdigit:
  1132  000001                     ??_cambiar_opcion:
  1133  000001                     ??_lcd_send_nibble:
  1134  000001                     ?_verificar_contrasenia:
  1135                           	opt stack 0
  1136  000001                     ?___awdiv:
  1137                           	opt stack 0
  1138  000001                     ?___lwdiv:
  1139                           	opt stack 0
  1140  000001                     ?___ftpack:
  1141                           	opt stack 0
  1142  000001                     ?_frexp:
  1143                           	opt stack 0
  1144  000001                     ?___ftneg:
  1145                           	opt stack 0
  1146  000001                     Delay100TCYx@unit:
  1147                           	opt stack 0
  1148  000001                     Delay1KTCYx@unit:
  1149                           	opt stack 0
  1150  000001                     RtccReadDate@pDt:
  1151                           	opt stack 0
  1152  000001                     RtccReadTime@pTm:
  1153                           	opt stack 0
  1154  000001                     RtccWriteDate@pDt:
  1155                           	opt stack 0
  1156  000001                     RtccWriteTime@pTm:
  1157                           	opt stack 0
  1158  000001                     ___awdiv@dividend:
  1159                           	opt stack 0
  1160  000001                     ___lwdiv@dividend:
  1161                           	opt stack 0
  1162  000001                     ___ftpack@arg:
  1163                           	opt stack 0
  1164  000001                     ___ftge@ff1:
  1165                           	opt stack 0
  1166  000001                     ___ftneg@f1:
  1167                           	opt stack 0
  1168  000001                     frexp@value:
  1169                           	opt stack 0
  1170                           
  1171                           ; 3 bytes @ 0x0
  1172  000001                     	ds	1
  1173  000002                     lcd_send_nibble@nibble:
  1174                           	opt stack 0
  1175  000002                     _isdigit$2018:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0x1
  1179  000002                     	ds	1
  1180  000003                     lcd_send_byte@n:
  1181                           	opt stack 0
  1182  000003                     RtccWriteDate@di:
  1183                           	opt stack 0
  1184  000003                     RtccWriteTime@di:
  1185                           	opt stack 0
  1186  000003                     isdigit@c:
  1187                           	opt stack 0
  1188  000003                     ___awdiv@divisor:
  1189                           	opt stack 0
  1190  000003                     ___lwdiv@divisor:
  1191                           	opt stack 0
  1192  000003                     RtccReadDate@rTD1:
  1193                           	opt stack 0
  1194  000003                     RtccReadTime@rTD1:
  1195                           	opt stack 0
  1196                           
  1197                           ; 8 bytes @ 0x2
  1198  000003                     	ds	1
  1199  000004                     lcd_send_byte@address:
  1200                           	opt stack 0
  1201  000004                     ___ftpack@exp:
  1202                           	opt stack 0
  1203  000004                     frexp@eptr:
  1204                           	opt stack 0
  1205  000004                     ___ftge@ff2:
  1206                           	opt stack 0
  1207                           
  1208                           ; 3 bytes @ 0x3
  1209  000004                     	ds	1
  1210  000005                     lcd_init@i:
  1211                           	opt stack 0
  1212  000005                     lcd_gotoxy@y:
  1213                           	opt stack 0
  1214  000005                     lcd_comand@d:
  1215                           	opt stack 0
  1216  000005                     RtccWriteDate@wasOn:
  1217                           	opt stack 0
  1218  000005                     RtccWriteTime@wasOn:
  1219                           	opt stack 0
  1220  000005                     ___awdiv@counter:
  1221                           	opt stack 0
  1222  000005                     ___ftpack@sign:
  1223                           	opt stack 0
  1224  000005                     ___lwdiv@quotient:
  1225                           	opt stack 0
  1226                           
  1227                           ; 2 bytes @ 0x4
  1228  000005                     	ds	1
  1229  000006                     ??___ftpack:
  1230  000006                     ??_frexp:
  1231  000006                     lcd_gotoxy@x:
  1232                           	opt stack 0
  1233  000006                     RtccWriteDate@wasAlrm:
  1234                           	opt stack 0
  1235  000006                     RtccWriteTime@wasAlrm:
  1236                           	opt stack 0
  1237  000006                     ___awdiv@sign:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x5
  1241  000006                     	ds	1
  1242  000007                     ??___ftge:
  1243  000007                     lcd_gotoxy@address:
  1244                           	opt stack 0
  1245  000007                     RtccWriteTime@wasWrEn:
  1246                           	opt stack 0
  1247  000007                     ___lwdiv@counter:
  1248                           	opt stack 0
  1249  000007                     verificar_contrasenia@equals:
  1250                           	opt stack 0
  1251  000007                     RtccWriteDate@tempYear:
  1252                           	opt stack 0
  1253  000007                     ___awdiv@quotient:
  1254                           	opt stack 0
  1255                           
  1256                           ; 2 bytes @ 0x6
  1257  000007                     	ds	1
  1258  000008                     ?___lwmod:
  1259                           	opt stack 0
  1260  000008                     lcd_putc@c:
  1261                           	opt stack 0
  1262  000008                     RtccWriteTime@tempMinSec:
  1263                           	opt stack 0
  1264  000008                     ___lwmod@dividend:
  1265                           	opt stack 0
  1266                           
  1267                           ; 2 bytes @ 0x7
  1268  000008                     	ds	1
  1269  000009                     ?___ftdiv:
  1270                           	opt stack 0
  1271  000009                     ?___awtoft:
  1272                           	opt stack 0
  1273  000009                     ?___lltoft:
  1274                           	opt stack 0
  1275  000009                     RtccWriteDate@wasWrEn:
  1276                           	opt stack 0
  1277  000009                     verificar_contrasenia@i:
  1278                           	opt stack 0
  1279  000009                     lcd_putrs@ptr:
  1280                           	opt stack 0
  1281  000009                     ___awtoft@c:
  1282                           	opt stack 0
  1283  000009                     ___ftdiv@f1:
  1284                           	opt stack 0
  1285  000009                     ___lltoft@c:
  1286                           	opt stack 0
  1287                           
  1288                           ; 4 bytes @ 0x8
  1289  000009                     	ds	1
  1290  00000A                     RtccWriteDate@tempDayMonth:
  1291                           	opt stack 0
  1292  00000A                     RtccWriteTime@tempHourWDay:
  1293                           	opt stack 0
  1294  00000A                     ___lwmod@divisor:
  1295                           	opt stack 0
  1296                           
  1297                           ; 2 bytes @ 0x9
  1298  00000A                     	ds	1
  1299  00000B                     ??_titila_texto_insert_password:
  1300  00000B                     ??_titila_alarma_activada:
  1301  00000B                     ??_titila_opcion:
  1302  00000B                     ??_selecciona_opcion_fecha_hora:
  1303  00000B                     resetear_pantalla_ingresar_contrasenia@i:
  1304                           	opt stack 0
  1305  00000B                     RtccReadDate@rTD0:
  1306                           	opt stack 0
  1307  00000B                     RtccReadTime@rTD0:
  1308                           	opt stack 0
  1309                           
  1310                           ; 8 bytes @ 0xA
  1311  00000B                     	ds	1
  1312  00000C                     ___awtoft@sign:
  1313                           	opt stack 0
  1314  00000C                     ___lwmod@counter:
  1315                           	opt stack 0
  1316  00000C                     RtccWriteDate@tempHourWDay:
  1317                           	opt stack 0
  1318  00000C                     ___ftdiv@f2:
  1319                           	opt stack 0
  1320                           
  1321                           ; 3 bytes @ 0xB
  1322  00000C                     	ds	1
  1323  00000D                     ??___lltoft:
  1324  00000D                     ?___ftmul:
  1325                           	opt stack 0
  1326  00000D                     ?___fttol:
  1327                           	opt stack 0
  1328  00000D                     ___ftmul@f1:
  1329                           	opt stack 0
  1330  00000D                     ___fttol@f1:
  1331                           	opt stack 0
  1332                           
  1333                           ; 3 bytes @ 0xC
  1334  00000D                     	ds	1
  1335  00000E                     
  1336                           ; 1 bytes @ 0xD
  1337  00000E                     	ds	1
  1338  00000F                     ??___ftdiv:
  1339                           
  1340                           ; 1 bytes @ 0xE
  1341  00000F                     	ds	1
  1342  000010                     ___ftmul@f2:
  1343                           	opt stack 0
  1344                           
  1345                           ; 3 bytes @ 0xF
  1346  000010                     	ds	1
  1347  000011                     ??___fttol:
  1348  000011                     ___lltoft@exp:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x10
  1352  000011                     	ds	1
  1353  000012                     ___ftdiv@cntr:
  1354                           	opt stack 0
  1355                           
  1356                           ; 1 bytes @ 0x11
  1357  000012                     	ds	1
  1358  000013                     ??___ftmul:
  1359  000013                     ___ftdiv@f3:
  1360                           	opt stack 0
  1361                           
  1362                           ; 3 bytes @ 0x12
  1363  000013                     	ds	3
  1364  000016                     ___ftdiv@exp:
  1365                           	opt stack 0
  1366  000016                     ___ftmul@exp:
  1367                           	opt stack 0
  1368  000016                     ___fttol@sign1:
  1369                           	opt stack 0
  1370                           
  1371                           ; 1 bytes @ 0x15
  1372  000016                     	ds	1
  1373  000017                     ___ftdiv@sign:
  1374                           	opt stack 0
  1375  000017                     ___ftmul@f3_as_product:
  1376                           	opt stack 0
  1377  000017                     ___fttol@lval:
  1378                           	opt stack 0
  1379                           
  1380                           ; 4 bytes @ 0x16
  1381  000017                     	ds	3
  1382  00001A                     ___ftmul@cntr:
  1383                           	opt stack 0
  1384                           
  1385                           ; 1 bytes @ 0x19
  1386  00001A                     	ds	1
  1387  00001B                     ___ftmul@sign:
  1388                           	opt stack 0
  1389  00001B                     ___fttol@exp1:
  1390                           	opt stack 0
  1391                           
  1392                           ; 1 bytes @ 0x1A
  1393  00001B                     	ds	1
  1394  00001C                     ?___wmul:
  1395                           	opt stack 0
  1396  00001C                     ?___altoft:
  1397                           	opt stack 0
  1398  00001C                     ___wmul@multiplier:
  1399                           	opt stack 0
  1400  00001C                     ___altoft@c:
  1401                           	opt stack 0
  1402                           
  1403                           ; 4 bytes @ 0x1B
  1404  00001C                     	ds	2
  1405  00001E                     ___wmul@multiplicand:
  1406                           	opt stack 0
  1407                           
  1408                           ; 2 bytes @ 0x1D
  1409  00001E                     	ds	2
  1410  000020                     ??___altoft:
  1411  000020                     ___wmul@product:
  1412                           	opt stack 0
  1413                           
  1414                           ; 2 bytes @ 0x1F
  1415  000020                     	ds	2
  1416  000022                     ?_sprintf:
  1417                           	opt stack 0
  1418  000022                     ?___ftadd:
  1419                           	opt stack 0
  1420  000022                     sprintf@sp:
  1421                           	opt stack 0
  1422  000022                     ___ftadd@f1:
  1423                           	opt stack 0
  1424                           
  1425                           ; 3 bytes @ 0x21
  1426  000022                     	ds	2
  1427  000024                     ___altoft@exp:
  1428                           	opt stack 0
  1429  000024                     sprintf@f:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x23
  1433  000024                     	ds	1
  1434  000025                     ___altoft@sign:
  1435                           	opt stack 0
  1436  000025                     ___ftadd@f2:
  1437                           	opt stack 0
  1438                           
  1439                           ; 3 bytes @ 0x24
  1440  000025                     	ds	3
  1441  000028                     ??___ftadd:
  1442                           
  1443                           ; 1 bytes @ 0x27
  1444  000028                     	ds	3
  1445  00002B                     ___ftadd@sign:
  1446                           	opt stack 0
  1447                           
  1448                           ; 1 bytes @ 0x2A
  1449  00002B                     	ds	1
  1450  00002C                     ___ftadd@exp2:
  1451                           	opt stack 0
  1452                           
  1453                           ; 1 bytes @ 0x2B
  1454  00002C                     	ds	1
  1455  00002D                     ___ftadd@exp1:
  1456                           	opt stack 0
  1457                           
  1458                           ; 1 bytes @ 0x2C
  1459  00002D                     	ds	1
  1460  00002E                     ??_sprintf:
  1461  00002E                     ?___ftsub:
  1462                           	opt stack 0
  1463  00002E                     ?_floor:
  1464                           	opt stack 0
  1465  00002E                     ?_eval_poly:
  1466                           	opt stack 0
  1467  00002E                     ___ftsub@f1:
  1468                           	opt stack 0
  1469  00002E                     floor@x:
  1470                           	opt stack 0
  1471  00002E                     eval_poly@x:
  1472                           	opt stack 0
  1473                           
  1474                           ; 3 bytes @ 0x2D
  1475  00002E                     	ds	3
  1476  000031                     eval_poly@d:
  1477                           	opt stack 0
  1478  000031                     ___ftsub@f2:
  1479                           	opt stack 0
  1480  000031                     floor@i:
  1481                           	opt stack 0
  1482                           
  1483                           ; 3 bytes @ 0x30
  1484  000031                     	ds	1
  1485  000032                     sprintf@prec:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x31
  1489  000032                     	ds	1
  1490  000033                     sprintf@cp:
  1491                           	opt stack 0
  1492  000033                     eval_poly@n:
  1493                           	opt stack 0
  1494                           
  1495                           ; 2 bytes @ 0x32
  1496  000033                     	ds	1
  1497  000034                     floor@expon:
  1498                           	opt stack 0
  1499                           
  1500                           ; 2 bytes @ 0x33
  1501  000034                     	ds	1
  1502  000035                     ??_eval_poly:
  1503  000035                     sprintf@ap:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x34
  1507  000035                     	ds	2
  1508  000037                     sprintf@len:
  1509                           	opt stack 0
  1510  000037                     eval_poly@res:
  1511                           	opt stack 0
  1512                           
  1513                           ; 3 bytes @ 0x36
  1514  000037                     	ds	2
  1515  000039                     sprintf@val:
  1516                           	opt stack 0
  1517                           
  1518                           ; 2 bytes @ 0x38
  1519  000039                     	ds	1
  1520  00003A                     ?_log:
  1521                           	opt stack 0
  1522  00003A                     ?_ldexp:
  1523                           	opt stack 0
  1524  00003A                     ldexp@value:
  1525                           	opt stack 0
  1526  00003A                     log@x:
  1527                           	opt stack 0
  1528                           
  1529                           ; 3 bytes @ 0x39
  1530  00003A                     	ds	1
  1531  00003B                     sprintf@flag:
  1532                           	opt stack 0
  1533                           
  1534                           ; 1 bytes @ 0x3A
  1535  00003B                     	ds	1
  1536  00003C                     sprintf@c:
  1537                           	opt stack 0
  1538                           
  1539                           ; 1 bytes @ 0x3B
  1540  00003C                     	ds	1
  1541  00003D                     sprintf@width:
  1542                           	opt stack 0
  1543  00003D                     ldexp@newexp:
  1544                           	opt stack 0
  1545  00003D                     log@exponent:
  1546                           	opt stack 0
  1547                           
  1548                           ; 2 bytes @ 0x3C
  1549  00003D                     	ds	2
  1550  00003F                     ??_ldexp:
  1551  00003F                     guarda_numero_ingresado@num:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x3E
  1555  00003F                     	ds	2
  1556  000041                     ??_ingreso_numero:
  1557  000041                     ?_exp:
  1558                           	opt stack 0
  1559  000041                     exp@x:
  1560                           	opt stack 0
  1561                           
  1562                           ; 3 bytes @ 0x40
  1563  000041                     	ds	2
  1564  000043                     ??_activar_alarma:
  1565  000043                     ir_a_pantalla_editar_contrasenia@i:
  1566                           	opt stack 0
  1567                           
  1568                           ; 2 bytes @ 0x42
  1569  000043                     	ds	1
  1570  000044                     activar_alarma@intentos_de_contrasenia:
  1571                           	opt stack 0
  1572  000044                     _exp$2503:
  1573                           	opt stack 0
  1574                           
  1575                           ; 3 bytes @ 0x43
  1576  000044                     	ds	3
  1577  000047                     exp@exponent:
  1578                           	opt stack 0
  1579                           
  1580                           ; 2 bytes @ 0x46
  1581  000047                     	ds	2
  1582  000049                     exp@sign:
  1583                           	opt stack 0
  1584                           
  1585                           ; 1 bytes @ 0x48
  1586  000049                     	ds	1
  1587  00004A                     ?_pow:
  1588                           	opt stack 0
  1589  00004A                     pow@x:
  1590                           	opt stack 0
  1591                           
  1592                           ; 3 bytes @ 0x49
  1593  00004A                     	ds	3
  1594  00004D                     pow@y:
  1595                           	opt stack 0
  1596                           
  1597                           ; 3 bytes @ 0x4C
  1598  00004D                     	ds	3
  1599  000050                     _pow$2501:
  1600                           	opt stack 0
  1601                           
  1602                           ; 3 bytes @ 0x4F
  1603  000050                     	ds	3
  1604  000053                     _pow$2502:
  1605                           	opt stack 0
  1606                           
  1607                           ; 3 bytes @ 0x52
  1608  000053                     	ds	3
  1609  000056                     pow@sign:
  1610                           	opt stack 0
  1611                           
  1612                           ; 1 bytes @ 0x55
  1613  000056                     	ds	1
  1614  000057                     pow@yi:
  1615                           	opt stack 0
  1616                           
  1617                           ; 4 bytes @ 0x56
  1618  000057                     	ds	4
  1619  00005B                     ?_covertir_valores_de_array_a_escala_decimal:
  1620                           	opt stack 0
  1621                           
  1622                           ; 2 bytes @ 0x5A
  1623  00005B                     	ds	2
  1624  00005D                     ??_covertir_valores_de_array_a_escala_decimal:
  1625                           
  1626                           ; 1 bytes @ 0x5C
  1627  00005D                     	ds	2
  1628  00005F                     ??_editar_fecha_reloj_digital:
  1629  00005F                     ??_editar_hora_reloj_digital:
  1630                           
  1631                           ; 1 bytes @ 0x5E
  1632  00005F                     	ds	1
  1633  000060                     tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           tblptrl	equ	0xFF6
  1636                           tablat	equ	0xFF5
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           postdec1	equ	0xFE5
  1640                           fsr1l	equ	0xFE1
  1641                           
  1642                           ; 1 bytes @ 0x5F
  1643 ;;
  1644 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1645 ;;
  1646 ;; *************** function _main *****************
  1647 ;; Defined at:
  1648 ;;		line 849 in file "main.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  2  489[None  ] int 
  1655 ;; Registers used:
  1656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;Total ram usage:        1 bytes
  1667 ;; Hardware stack levels required when called:   13
  1668 ;; This function calls:
  1669 ;;		_Read_RTC
  1670 ;;		_ir_a_pantalla_inicial
  1671 ;;		_setup
  1672 ;; This function is called by:
  1673 ;;		Startup code after reset
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text0
  1678  00CE38                     __ptext0:
  1679                           	opt stack 0
  1680  00CE38                     _main:
  1681                           	opt stack 18
  1682                           
  1683                           ;main.c: 850: setup();
  1684                           
  1685                           ;incstack = 0
  1686  00CE38  ECF5  F067         	call	_setup	;wreg free
  1687  00CE3C                     
  1688                           ;main.c: 854: Read_RTC();
  1689  00CE3C  EC56  F074         	call	_Read_RTC	;wreg free
  1690                           
  1691                           ;main.c: 856: ir_a_pantalla_inicial();
  1692  00CE40  ECAC  F066         	call	_ir_a_pantalla_inicial	;wreg free
  1693  00CE44  D7FB               	goto	l490
  1694                           
  1695                           ;main.c: 857: }
  1696                           ;main.c: 859: _delay((unsigned long)((98)*(8000000/4000.0)));
  1697  00CE46  0EFF               	movlw	255
  1698  00CE48  0100               	movlb	0	; () banked
  1699  00CE4A  6FE8               	movwf	??_main& (0+255),b
  1700  00CE4C  0E8A               	movlw	138
  1701  00CE4E                     u6777:
  1702  00CE4E  2EE8               	decfsz	wreg,f,c
  1703  00CE50  D7FE               	bra	u6777
  1704  00CE52  2FE8               	decfsz	??_main& (0+255),f,b
  1705  00CE54  D7FC               	bra	u6777
  1706  00CE56  F000               	nop	
  1707                           
  1708                           ;main.c: 860: return 0;
  1709                           ;	Return value of _main is never used
  1710  00CE58  EF00  F000         	goto	start
  1711  00CE5C                     __end_of_main:
  1712                           	opt stack 0
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           postinc0	equ	0xFEE
  1718                           wreg	equ	0xFE8
  1719                           postdec1	equ	0xFE5
  1720                           fsr1l	equ	0xFE1
  1721                           
  1722 ;; *************** function _setup *****************
  1723 ;; Defined at:
  1724 ;;		line 811 in file "main.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    7
  1745 ;; This function calls:
  1746 ;;		_Write_RTC
  1747 ;;		_lcd_comand
  1748 ;;		_lcd_init
  1749 ;;		_set_reloj_digital
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text1
  1756  00CFEA                     __ptext1:
  1757                           	opt stack 0
  1758  00CFEA                     _setup:
  1759                           	opt stack 23
  1760                           
  1761                           ;main.c: 812: OSCTUNEbits.INTSRC = 1;
  1762                           
  1763                           ;incstack = 0
  1764  00CFEA  8E9B               	bsf	3995,7,c	;volatile
  1765                           
  1766                           ;main.c: 813: OSCTUNEbits.PLLEN = 0;
  1767  00CFEC  9C9B               	bcf	3995,6,c	;volatile
  1768                           
  1769                           ;main.c: 814: OSCCONbits.IRCF0 = 1;
  1770  00CFEE  88D3               	bsf	4051,4,c	;volatile
  1771                           
  1772                           ;main.c: 815: OSCCONbits.IRCF1 = 1;
  1773  00CFF0  8AD3               	bsf	4051,5,c	;volatile
  1774                           
  1775                           ;main.c: 816: OSCCONbits.IRCF2 = 1;
  1776  00CFF2  8CD3               	bsf	4051,6,c	;volatile
  1777                           
  1778                           ;main.c: 817: OSCCONbits.SCS0 = 0;
  1779  00CFF4  90D3               	bcf	4051,0,c	;volatile
  1780                           
  1781                           ;main.c: 818: OSCCONbits.SCS1 = 0;
  1782  00CFF6  92D3               	bcf	4051,1,c	;volatile
  1783                           
  1784                           ;main.c: 820: TRISA = 0b11110000;
  1785  00CFF8  0EF0               	movlw	240
  1786  00CFFA  6E92               	movwf	3986,c	;volatile
  1787                           
  1788                           ;main.c: 821: TRISB = 0;
  1789  00CFFC  0E00               	movlw	0
  1790  00CFFE  6E93               	movwf	3987,c	;volatile
  1791                           
  1792                           ;main.c: 822: TRISC = 0b11100111;
  1793  00D000  0EE7               	movlw	231
  1794  00D002  6E94               	movwf	3988,c	;volatile
  1795                           
  1796                           ;main.c: 830: ANCON0 = 0b11111111;
  1797  00D004  010F               	movlb	15	; () banked
  1798  00D006  6948               	setf	72,b	;volatile
  1799                           
  1800                           ; BSR set to: 15
  1801                           ;main.c: 832: ANCON1 = 0b11111111;
  1802  00D008  010F               	movlb	15	; () banked
  1803  00D00A  6949               	setf	73,b	;volatile
  1804                           
  1805                           ; BSR set to: 15
  1806                           ;main.c: 835: RTCCFGbits.RTCEN = 1;
  1807  00D00C  010F               	movlb	15	; () banked
  1808  00D00E  8F3F               	bsf	63,7,b	;volatile
  1809                           
  1810                           ; BSR set to: 15
  1811                           ;main.c: 836: RTCCFGbits.RTCWREN = 1;
  1812  00D010  010F               	movlb	15	; () banked
  1813  00D012  8B3F               	bsf	63,5,b	;volatile
  1814                           
  1815                           ; BSR set to: 15
  1816                           ;main.c: 837: T1CONbits.T1OSCEN = 1;
  1817  00D014  86CD               	bsf	4045,3,c	;volatile
  1818                           
  1819                           ; BSR set to: 15
  1820                           ;main.c: 838: Write_RTC();
  1821  00D016  ECB4  F075         	call	_Write_RTC	;wreg free
  1822                           
  1823                           ;main.c: 839: lcd_init();
  1824  00D01A  EC8E  F069         	call	_lcd_init	;wreg free
  1825                           
  1826                           ;main.c: 840: lcd_comand(0b00001100);
  1827  00D01E  0E0C               	movlw	12
  1828  00D020  ECB3  F066         	call	_lcd_comand
  1829                           
  1830                           ;main.c: 841: LATBbits.LATB2 = 0;;
  1831  00D024  948A               	bcf	3978,2,c	;volatile
  1832                           
  1833                           ;main.c: 842: LATBbits.LATB1 = 0;;
  1834  00D026  928A               	bcf	3978,1,c	;volatile
  1835                           
  1836                           ;main.c: 843: LATBbits.LATB0 = 0;;
  1837  00D028  908A               	bcf	3978,0,c	;volatile
  1838                           
  1839                           ;main.c: 845: set_reloj_digital();
  1840  00D02A  ECA1  F066         	call	_set_reloj_digital	;wreg free
  1841                           
  1842                           ;main.c: 846: Write_RTC();
  1843  00D02E  ECB4  F075         	call	_Write_RTC	;wreg free
  1844  00D032  0012               	return		;funcret
  1845  00D034                     __end_of_setup:
  1846                           	opt stack 0
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postdec1	equ	0xFE5
  1854                           fsr1l	equ	0xFE1
  1855                           
  1856 ;; *************** function _lcd_init *****************
  1857 ;; Defined at:
  1858 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  i               1    4[COMRAM] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		_Delay1KTCYx
  1881 ;;		_lcd_send_byte
  1882 ;;		_lcd_send_nibble
  1883 ;; This function is called by:
  1884 ;;		_setup
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text2
  1889  00D31C                     __ptext2:
  1890                           	opt stack 0
  1891  00D31C                     _lcd_init:
  1892                           	opt stack 27
  1893                           
  1894                           ;unmc_lcd_216.c: 120: int8 i;
  1895                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  1896                           
  1897                           ;incstack = 0
  1898  00D31C  9693               	bcf	3987,3,c	;volatile
  1899                           
  1900                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  1901  00D31E  9493               	bcf	3987,2,c	;volatile
  1902                           
  1903                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  1904  00D320  968A               	bcf	3978,3,c	;volatile
  1905                           
  1906                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  1907  00D322  948A               	bcf	3978,2,c	;volatile
  1908                           
  1909                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  1910  00D324  9893               	bcf	3987,4,c	;volatile
  1911                           
  1912                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  1913  00D326  9A93               	bcf	3987,5,c	;volatile
  1914                           
  1915                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  1916  00D328  9C93               	bcf	3987,6,c	;volatile
  1917                           
  1918                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  1919  00D32A  9E93               	bcf	3987,7,c	;volatile
  1920                           
  1921                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  1922  00D32C  0E0A               	movlw	10
  1923  00D32E  ECC2  F066         	call	_Delay1KTCYx
  1924                           
  1925                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  1926  00D332  0E0A               	movlw	10
  1927  00D334  ECC2  F066         	call	_Delay1KTCYx
  1928                           
  1929                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  1930  00D338  0E0A               	movlw	10
  1931  00D33A  ECC2  F066         	call	_Delay1KTCYx
  1932                           
  1933                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  1934  00D33E  0E00               	movlw	0
  1935  00D340  6E05               	movwf	lcd_init@i,c
  1936  00D342                     l5625:
  1937  00D342  0E02               	movlw	2
  1938  00D344  6405               	cpfsgt	lcd_init@i,c
  1939  00D346  D001               	goto	l516
  1940  00D348  D008               	goto	u6730
  1941  00D34A                     l516:
  1942                           
  1943                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  1944  00D34A  0E03               	movlw	3
  1945  00D34C  EC53  F069         	call	_lcd_send_nibble
  1946                           
  1947                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  1948  00D350  0E0A               	movlw	10
  1949  00D352  ECC2  F066         	call	_Delay1KTCYx
  1950  00D356  2A05               	incf	lcd_init@i,f,c
  1951  00D358  D7F4               	goto	l5625
  1952  00D35A                     u6730:
  1953                           
  1954                           ;unmc_lcd_216.c: 146: }
  1955                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  1956  00D35A  0E02               	movlw	2
  1957  00D35C  EC53  F069         	call	_lcd_send_nibble
  1958                           
  1959                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  1960  00D360  0E00               	movlw	0
  1961  00D362  6E05               	movwf	lcd_init@i,c
  1962  00D364                     l5639:
  1963  00D364  0E03               	movlw	3
  1964  00D366  6405               	cpfsgt	lcd_init@i,c
  1965  00D368  D001               	goto	l518
  1966  00D36A  0012               	return	
  1967  00D36C                     l518:
  1968                           
  1969                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1970  00D36C  5005               	movf	lcd_init@i,w,c
  1971  00D36E  0D01               	mullw	1
  1972  00D370  0E57               	movlw	low _LCD_INIT_STRING
  1973  00D372  24F3               	addwf	prodl,w,c
  1974  00D374  6EF6               	movwf	tblptrl,c
  1975  00D376  0EFE               	movlw	high _LCD_INIT_STRING
  1976  00D378  20F4               	addwfc	prodh,w,c
  1977  00D37A  6EF7               	movwf	tblptrh,c
  1978  00D37C                     	if	0	;There are less than 3 active tblptr bytes
  1979  00D37C                     	endif
  1980  00D37C  0008               	tblrd		*
  1981  00D37E  CFF5 F003          	movff	tablat,lcd_send_byte@n
  1982  00D382  0E00               	movlw	0
  1983  00D384  EC41  F067         	call	_lcd_send_byte
  1984                           
  1985                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  1986  00D388  0E0A               	movlw	10
  1987  00D38A  ECC2  F066         	call	_Delay1KTCYx
  1988  00D38E  2A05               	incf	lcd_init@i,f,c
  1989  00D390  D7E9               	goto	l5639
  1990  00D392                     __end_of_lcd_init:
  1991                           	opt stack 0
  1992                           tblptru	equ	0xFF8
  1993                           tblptrh	equ	0xFF7
  1994                           tblptrl	equ	0xFF6
  1995                           tablat	equ	0xFF5
  1996                           prodh	equ	0xFF4
  1997                           prodl	equ	0xFF3
  1998                           postinc0	equ	0xFEE
  1999                           wreg	equ	0xFE8
  2000                           postdec1	equ	0xFE5
  2001                           fsr1l	equ	0xFE1
  2002                           
  2003 ;; *************** function _Delay1KTCYx *****************
  2004 ;; Defined at:
  2005 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  unit            1    wreg     unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  unit            1    0[COMRAM] unsigned char 
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2023 ;;Total ram usage:        1 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_lcd_init
  2029 ;;		_DelayPORXLCD
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           	psect	text3
  2034  00CD84                     __ptext3:
  2035                           	opt stack 0
  2036  00CD84                     _Delay1KTCYx:
  2037                           	opt stack 28
  2038                           
  2039                           ;incstack = 0
  2040                           ;Delay1KTCYx@unit stored from wreg
  2041  00CD84  6E01               	movwf	Delay1KTCYx@unit,c
  2042  00CD86                     l924:
  2043  00CD86  0EC8               	movlw	200
  2044  00CD88                     u6787:
  2045  00CD88  D000               	nop2	
  2046  00CD8A  2EE8               	decfsz	wreg,f,c
  2047  00CD8C  D7FD               	bra	u6787
  2048  00CD8E  2E01               	decfsz	Delay1KTCYx@unit,f,c
  2049  00CD90  D7FA               	goto	l924
  2050  00CD92  0012               	return	
  2051  00CD94                     __end_of_Delay1KTCYx:
  2052                           	opt stack 0
  2053                           tblptru	equ	0xFF8
  2054                           tblptrh	equ	0xFF7
  2055                           tblptrl	equ	0xFF6
  2056                           tablat	equ	0xFF5
  2057                           prodh	equ	0xFF4
  2058                           prodl	equ	0xFF3
  2059                           postinc0	equ	0xFEE
  2060                           wreg	equ	0xFE8
  2061                           postdec1	equ	0xFE5
  2062                           fsr1l	equ	0xFE1
  2063                           
  2064 ;; *************** function _lcd_comand *****************
  2065 ;; Defined at:
  2066 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  d               1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  d               1    4[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, status,2, status,0, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2083 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used:    1
  2086 ;; Hardware stack levels required when called:    2
  2087 ;; This function calls:
  2088 ;;		_lcd_send_byte
  2089 ;; This function is called by:
  2090 ;;		_setup
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text4
  2095  00CD66                     __ptext4:
  2096                           	opt stack 0
  2097  00CD66                     _lcd_comand:
  2098                           	opt stack 27
  2099                           
  2100                           ;incstack = 0
  2101                           ;lcd_comand@d stored from wreg
  2102  00CD66  6E05               	movwf	lcd_comand@d,c
  2103                           
  2104                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  2105  00CD68  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  2106  00CD6C  0E00               	movlw	0
  2107  00CD6E  EC41  F067         	call	_lcd_send_byte
  2108  00CD72  0012               	return		;funcret
  2109  00CD74                     __end_of_lcd_comand:
  2110                           	opt stack 0
  2111                           tblptru	equ	0xFF8
  2112                           tblptrh	equ	0xFF7
  2113                           tblptrl	equ	0xFF6
  2114                           tablat	equ	0xFF5
  2115                           prodh	equ	0xFF4
  2116                           prodl	equ	0xFF3
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1l	equ	0xFE1
  2121                           
  2122 ;; *************** function _ir_a_pantalla_inicial *****************
  2123 ;; Defined at:
  2124 ;;		line 589 in file "main.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:   12
  2145 ;; This function calls:
  2146 ;;		_set_reloj_digital
  2147 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  2148 ;;		_titila_texto_insert_password
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text5
  2155  00CD58                     __ptext5:
  2156                           	opt stack 0
  2157  00CD58                     _ir_a_pantalla_inicial:
  2158                           	opt stack 18
  2159                           
  2160                           ;main.c: 590: set_reloj_digital();
  2161                           
  2162                           ;incstack = 0
  2163  00CD58  ECA1  F066         	call	_set_reloj_digital	;wreg free
  2164                           
  2165                           ;main.c: 591: titila_texto_insert_password();
  2166  00CD5C  ECD9  F06E         	call	_titila_texto_insert_password	;wreg free
  2167                           
  2168                           ;main.c: 592: si_apreta_numero_va_a_pantalla_contrasenia();
  2169  00CD60  ECCF  F06B         	call	_si_apreta_numero_va_a_pantalla_contrasenia	;wreg free
  2170  00CD64  0012               	return		;funcret
  2171  00CD66                     __end_of_ir_a_pantalla_inicial:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           prodh	equ	0xFF4
  2178                           prodl	equ	0xFF3
  2179                           postinc0	equ	0xFEE
  2180                           wreg	equ	0xFE8
  2181                           postdec1	equ	0xFE5
  2182                           fsr1l	equ	0xFE1
  2183                           
  2184 ;; *************** function _titila_texto_insert_password *****************
  2185 ;; Defined at:
  2186 ;;		line 109 in file "main.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2204 ;;Total ram usage:        1 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    5
  2207 ;; This function calls:
  2208 ;;		_lcd_gotoxy
  2209 ;;		_lcd_putrs
  2210 ;; This function is called by:
  2211 ;;		_ir_a_pantalla_inicial
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text6
  2216  00DDB2                     __ptext6:
  2217                           	opt stack 0
  2218  00DDB2                     _titila_texto_insert_password:
  2219                           	opt stack 24
  2220                           
  2221                           ;main.c: 110: if (txt_insertar_contrasenia == 0) {
  2222                           
  2223                           ;incstack = 0
  2224  00DDB2  0100               	movlb	0	; () banked
  2225  00DDB4  518E               	movf	_txt_insertar_contrasenia& (0+255),w,b
  2226  00DDB6  0100               	movlb	0	; () banked
  2227  00DDB8  118F               	iorwf	(_txt_insertar_contrasenia+1)& (0+255),w,b
  2228  00DDBA  A4D8               	btfss	status,2,c
  2229  00DDBC  D02B               	goto	l201
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;main.c: 111: txt_insertar_contrasenia = 1;
  2233  00DDBE  0E00               	movlw	0
  2234  00DDC0  0100               	movlb	0	; () banked
  2235  00DDC2  6F8F               	movwf	(_txt_insertar_contrasenia+1)& (0+255),b
  2236  00DDC4  0E01               	movlw	1
  2237  00DDC6  6F8E               	movwf	_txt_insertar_contrasenia& (0+255),b
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;main.c: 112: lcd_gotoxy(1, 1);
  2241  00DDC8  0E01               	movlw	1
  2242  00DDCA  6E05               	movwf	lcd_gotoxy@y,c
  2243  00DDCC  0E01               	movlw	1
  2244  00DDCE  ECF9  F066         	call	_lcd_gotoxy
  2245                           
  2246                           ;main.c: 113: lcd_putrs("Insert");
  2247  00DDD2  0EC6               	movlw	low STR_10
  2248  00DDD4  6E09               	movwf	lcd_putrs@ptr,c
  2249  00DDD6  0EFF               	movlw	high STR_10
  2250  00DDD8  6E0A               	movwf	lcd_putrs@ptr+1,c
  2251  00DDDA  EC69  F068         	call	_lcd_putrs	;wreg free
  2252                           
  2253                           ;main.c: 114: lcd_gotoxy(1, 2);
  2254  00DDDE  0E02               	movlw	2
  2255  00DDE0  6E05               	movwf	lcd_gotoxy@y,c
  2256  00DDE2  0E01               	movlw	1
  2257  00DDE4  ECF9  F066         	call	_lcd_gotoxy
  2258                           
  2259                           ;main.c: 115: lcd_putrs("Password");
  2260  00DDE8  0E47               	movlw	low STR_11
  2261  00DDEA  6E09               	movwf	lcd_putrs@ptr,c
  2262  00DDEC  0EFF               	movlw	high STR_11
  2263  00DDEE  6E0A               	movwf	lcd_putrs@ptr+1,c
  2264  00DDF0  EC69  F068         	call	_lcd_putrs	;wreg free
  2265                           
  2266                           ;main.c: 116: _delay((unsigned long)((98)*(8000000/4000.0)));
  2267  00DDF4  0EFF               	movlw	255
  2268  00DDF6  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  2269  00DDF8  0E8A               	movlw	138
  2270  00DDFA                     u6797:
  2271  00DDFA  2EE8               	decfsz	wreg,f,c
  2272  00DDFC  D7FE               	bra	u6797
  2273  00DDFE  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  2274  00DE00  D7FC               	bra	u6797
  2275  00DE02  D000               	nop2	
  2276                           
  2277                           ;main.c: 117: _delay((unsigned long)((98)*(8000000/4000.0)));
  2278  00DE04  0EFF               	movlw	255
  2279  00DE06  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  2280  00DE08  0E8A               	movlw	138
  2281  00DE0A                     u6807:
  2282  00DE0A  2EE8               	decfsz	wreg,f,c
  2283  00DE0C  D7FE               	bra	u6807
  2284  00DE0E  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  2285  00DE10  D7FC               	bra	u6807
  2286  00DE12  D000               	nop2	
  2287  00DE14                     l201:
  2288                           
  2289                           ;main.c: 118: }
  2290                           ;main.c: 120: if (txt_insertar_contrasenia == 1) {
  2291  00DE14  0100               	movlb	0	; () banked
  2292  00DE16  058E               	decf	_txt_insertar_contrasenia& (0+255),w,b
  2293  00DE18  0100               	movlb	0	; () banked
  2294  00DE1A  118F               	iorwf	(_txt_insertar_contrasenia+1)& (0+255),w,b
  2295  00DE1C  A4D8               	btfss	status,2,c
  2296  00DE1E  0012               	return	
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 121: txt_insertar_contrasenia = 0;
  2300  00DE20  0E00               	movlw	0
  2301  00DE22  0100               	movlb	0	; () banked
  2302  00DE24  6F8F               	movwf	(_txt_insertar_contrasenia+1)& (0+255),b
  2303  00DE26  0E00               	movlw	0
  2304  00DE28  6F8E               	movwf	_txt_insertar_contrasenia& (0+255),b
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;main.c: 122: lcd_gotoxy(1, 1);
  2308  00DE2A  0E01               	movlw	1
  2309  00DE2C  6E05               	movwf	lcd_gotoxy@y,c
  2310  00DE2E  0E01               	movlw	1
  2311  00DE30  ECF9  F066         	call	_lcd_gotoxy
  2312                           
  2313                           ;main.c: 123: lcd_putrs("        ");
  2314  00DE34  0EDA               	movlw	low (STR_18+8)
  2315  00DE36  6E09               	movwf	lcd_putrs@ptr,c
  2316  00DE38  0EFE               	movlw	high (STR_18+8)
  2317  00DE3A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2318  00DE3C  EC69  F068         	call	_lcd_putrs	;wreg free
  2319                           
  2320                           ;main.c: 124: lcd_gotoxy(1, 2);
  2321  00DE40  0E02               	movlw	2
  2322  00DE42  6E05               	movwf	lcd_gotoxy@y,c
  2323  00DE44  0E01               	movlw	1
  2324  00DE46  ECF9  F066         	call	_lcd_gotoxy
  2325                           
  2326                           ;main.c: 125: lcd_putrs("        ");
  2327  00DE4A  0EDA               	movlw	low (STR_18+8)
  2328  00DE4C  6E09               	movwf	lcd_putrs@ptr,c
  2329  00DE4E  0EFE               	movlw	high (STR_18+8)
  2330  00DE50  6E0A               	movwf	lcd_putrs@ptr+1,c
  2331  00DE52  EC69  F068         	call	_lcd_putrs	;wreg free
  2332                           
  2333                           ;main.c: 126: _delay((unsigned long)((60)*(8000000/4000.0)));
  2334  00DE56  0E9C               	movlw	156
  2335  00DE58  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  2336  00DE5A  0ED7               	movlw	215
  2337  00DE5C                     u6817:
  2338  00DE5C  2EE8               	decfsz	wreg,f,c
  2339  00DE5E  D7FE               	bra	u6817
  2340  00DE60  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  2341  00DE62  D7FC               	bra	u6817
  2342  00DE64  F000               	nop	
  2343  00DE66  0012               	return	
  2344  00DE68                     __end_of_titila_texto_insert_password:
  2345                           	opt stack 0
  2346                           tblptru	equ	0xFF8
  2347                           tblptrh	equ	0xFF7
  2348                           tblptrl	equ	0xFF6
  2349                           tablat	equ	0xFF5
  2350                           prodh	equ	0xFF4
  2351                           prodl	equ	0xFF3
  2352                           postinc0	equ	0xFEE
  2353                           wreg	equ	0xFE8
  2354                           postdec1	equ	0xFE5
  2355                           fsr1l	equ	0xFE1
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _si_apreta_numero_va_a_pantalla_contrasenia *****************
  2359 ;; Defined at:
  2360 ;;		line 538 in file "main.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:   11
  2381 ;; This function calls:
  2382 ;;		_ir_a_pantalla_ingresar_contrasenia
  2383 ;; This function is called by:
  2384 ;;		_ir_a_pantalla_inicial
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text7
  2389  00D79E                     __ptext7:
  2390                           	opt stack 0
  2391  00D79E                     _si_apreta_numero_va_a_pantalla_contrasenia:
  2392                           	opt stack 18
  2393                           
  2394                           ;main.c: 539: LATAbits.LATA0 = 1;
  2395                           
  2396                           ;incstack = 0
  2397  00D79E  8089               	bsf	3977,0,c	;volatile
  2398                           
  2399                           ;main.c: 540: LATAbits.LATA1 = 0;
  2400  00D7A0  9289               	bcf	3977,1,c	;volatile
  2401                           
  2402                           ;main.c: 541: LATAbits.LATA2 = 0;
  2403  00D7A2  9489               	bcf	3977,2,c	;volatile
  2404                           
  2405                           ;main.c: 542: LATAbits.LATA3 = 0;
  2406  00D7A4  9689               	bcf	3977,3,c	;volatile
  2407                           
  2408                           ;main.c: 543: {
  2409                           ;main.c: 544: if ((PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) ||
  2410                           ;main.c: 545: (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) ||
  2411                           ;main.c: 546: (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1)) {
  2412  00D7A6  AA80               	btfss	3968,5,c	;volatile
  2413  00D7A8  D002               	goto	u6490
  2414  00D7AA  B089               	btfsc	3977,0,c	;volatile
  2415  00D7AC  D007               	goto	u6530
  2416  00D7AE                     u6490:
  2417  00D7AE  AE80               	btfss	3968,7,c	;volatile
  2418  00D7B0  D002               	goto	u6510
  2419  00D7B2  B089               	btfsc	3977,0,c	;volatile
  2420  00D7B4  D003               	goto	u6530
  2421  00D7B6                     u6510:
  2422  00D7B6  BC80               	btfsc	3968,6,c	;volatile
  2423  00D7B8  A089               	btfss	3977,0,c	;volatile
  2424  00D7BA  D002               	goto	l381
  2425  00D7BC                     u6530:
  2426                           
  2427                           ;main.c: 548: ir_a_pantalla_ingresar_contrasenia();
  2428  00D7BC  EC82  F06E         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2429  00D7C0                     l381:
  2430                           
  2431                           ;main.c: 549: }
  2432                           ;main.c: 550: }
  2433                           ;main.c: 551: LATAbits.LATA0 = 0;
  2434  00D7C0  9089               	bcf	3977,0,c	;volatile
  2435                           
  2436                           ;main.c: 552: LATAbits.LATA1 = 1;
  2437  00D7C2  8289               	bsf	3977,1,c	;volatile
  2438                           
  2439                           ;main.c: 553: LATAbits.LATA2 = 0;
  2440  00D7C4  9489               	bcf	3977,2,c	;volatile
  2441                           
  2442                           ;main.c: 554: LATAbits.LATA3 = 0;
  2443  00D7C6  9689               	bcf	3977,3,c	;volatile
  2444                           
  2445                           ;main.c: 555: {
  2446                           ;main.c: 556: if ((PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) ||
  2447                           ;main.c: 557: (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) ||
  2448                           ;main.c: 558: (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1)) {
  2449  00D7C8  AA80               	btfss	3968,5,c	;volatile
  2450  00D7CA  D002               	goto	u6550
  2451  00D7CC  B289               	btfsc	3977,1,c	;volatile
  2452  00D7CE  D007               	goto	u6590
  2453  00D7D0                     u6550:
  2454  00D7D0  AE80               	btfss	3968,7,c	;volatile
  2455  00D7D2  D002               	goto	u6570
  2456  00D7D4  B289               	btfsc	3977,1,c	;volatile
  2457  00D7D6  D003               	goto	u6590
  2458  00D7D8                     u6570:
  2459  00D7D8  BC80               	btfsc	3968,6,c	;volatile
  2460  00D7DA  A289               	btfss	3977,1,c	;volatile
  2461  00D7DC  D002               	goto	l388
  2462  00D7DE                     u6590:
  2463                           
  2464                           ;main.c: 560: ir_a_pantalla_ingresar_contrasenia();
  2465  00D7DE  EC82  F06E         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2466  00D7E2                     l388:
  2467                           
  2468                           ;main.c: 561: }
  2469                           ;main.c: 562: }
  2470                           ;main.c: 563: LATAbits.LATA0 = 0;
  2471  00D7E2  9089               	bcf	3977,0,c	;volatile
  2472                           
  2473                           ;main.c: 564: LATAbits.LATA1 = 0;
  2474  00D7E4  9289               	bcf	3977,1,c	;volatile
  2475                           
  2476                           ;main.c: 565: LATAbits.LATA2 = 1;
  2477  00D7E6  8489               	bsf	3977,2,c	;volatile
  2478                           
  2479                           ;main.c: 566: LATAbits.LATA3 = 0;
  2480  00D7E8  9689               	bcf	3977,3,c	;volatile
  2481                           
  2482                           ;main.c: 567: {
  2483                           ;main.c: 568: if ((PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) ||
  2484                           ;main.c: 569: (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) ||
  2485                           ;main.c: 570: (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1)) {
  2486  00D7EA  AA80               	btfss	3968,5,c	;volatile
  2487  00D7EC  D002               	goto	u6610
  2488  00D7EE  B489               	btfsc	3977,2,c	;volatile
  2489  00D7F0  D007               	goto	u6650
  2490  00D7F2                     u6610:
  2491  00D7F2  AE80               	btfss	3968,7,c	;volatile
  2492  00D7F4  D002               	goto	u6630
  2493  00D7F6  B489               	btfsc	3977,2,c	;volatile
  2494  00D7F8  D003               	goto	u6650
  2495  00D7FA                     u6630:
  2496  00D7FA  BC80               	btfsc	3968,6,c	;volatile
  2497  00D7FC  A489               	btfss	3977,2,c	;volatile
  2498  00D7FE  D002               	goto	l395
  2499  00D800                     u6650:
  2500                           
  2501                           ;main.c: 572: ir_a_pantalla_ingresar_contrasenia();
  2502  00D800  EC82  F06E         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2503  00D804                     l395:
  2504                           
  2505                           ;main.c: 573: }
  2506                           ;main.c: 574: }
  2507                           ;main.c: 575: LATAbits.LATA0 = 0;
  2508  00D804  9089               	bcf	3977,0,c	;volatile
  2509                           
  2510                           ;main.c: 576: LATAbits.LATA1 = 0;
  2511  00D806  9289               	bcf	3977,1,c	;volatile
  2512                           
  2513                           ;main.c: 577: LATAbits.LATA2 = 0;
  2514  00D808  9489               	bcf	3977,2,c	;volatile
  2515                           
  2516                           ;main.c: 578: LATAbits.LATA3 = 1;
  2517  00D80A  8689               	bsf	3977,3,c	;volatile
  2518                           
  2519                           ;main.c: 579: {
  2520                           ;main.c: 580: if ((PORTAbits.RA5 == 1 && LATAbits.LATA3 == 1) ||
  2521                           ;main.c: 581: (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) ||
  2522                           ;main.c: 582: (PORTAbits.RA6 == 1 && LATAbits.LATA3 == 1)) {
  2523  00D80C  AA80               	btfss	3968,5,c	;volatile
  2524  00D80E  D002               	goto	u6670
  2525  00D810  B689               	btfsc	3977,3,c	;volatile
  2526  00D812  D008               	goto	u6710
  2527  00D814                     u6670:
  2528  00D814  AE80               	btfss	3968,7,c	;volatile
  2529  00D816  D002               	goto	u6690
  2530  00D818  B689               	btfsc	3977,3,c	;volatile
  2531  00D81A  D004               	goto	u6710
  2532  00D81C                     u6690:
  2533  00D81C  AC80               	btfss	3968,6,c	;volatile
  2534  00D81E  0012               	return	
  2535  00D820  A689               	btfss	3977,3,c	;volatile
  2536  00D822  0012               	return	
  2537  00D824                     u6710:
  2538                           
  2539                           ;main.c: 584: ir_a_pantalla_ingresar_contrasenia();
  2540  00D824  EC82  F06E         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2541  00D828  0012               	return	
  2542  00D82A                     __end_of_si_apreta_numero_va_a_pantalla_contrasenia:
  2543                           	opt stack 0
  2544                           tblptru	equ	0xFF8
  2545                           tblptrh	equ	0xFF7
  2546                           tblptrl	equ	0xFF6
  2547                           tablat	equ	0xFF5
  2548                           prodh	equ	0xFF4
  2549                           prodl	equ	0xFF3
  2550                           postinc0	equ	0xFEE
  2551                           wreg	equ	0xFE8
  2552                           postdec1	equ	0xFE5
  2553                           fsr1l	equ	0xFE1
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _ir_a_pantalla_ingresar_contrasenia *****************
  2557 ;; Defined at:
  2558 ;;		line 508 in file "main.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  intentos_de_    2   19[BANK0 ] int 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:   10
  2579 ;; This function calls:
  2580 ;;		_activar_alarma
  2581 ;;		_ingreso_numero
  2582 ;;		_ir_a_pantalla_edicion
  2583 ;;		_lcd_gotoxy
  2584 ;;		_lcd_putrs
  2585 ;;		_mostrar_presionar_a
  2586 ;;		_resetear_pantalla_ingresar_contrasenia
  2587 ;;		_verificar_contrasenia
  2588 ;; This function is called by:
  2589 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text8
  2594  00DD04                     __ptext8:
  2595                           	opt stack 0
  2596  00DD04                     _ir_a_pantalla_ingresar_contrasenia:
  2597                           	opt stack 18
  2598                           
  2599                           ;main.c: 510: int intentos_de_contrasenias = 0;
  2600                           
  2601                           ;incstack = 0
  2602  00DD04  0E00               	movlw	0
  2603  00DD06  0100               	movlb	0	; () banked
  2604  00DD08  6FE7               	movwf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),b
  2605  00DD0A  0E00               	movlw	0
  2606  00DD0C  6FE6               	movwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),b
  2607                           
  2608                           ;main.c: 511: numeros_ingresados = 0;
  2609  00DD0E  0E00               	movlw	0
  2610  00DD10  0100               	movlb	0	; () banked
  2611  00DD12  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  2612  00DD14  0E00               	movlw	0
  2613  00DD16  6FA4               	movwf	_numeros_ingresados& (0+255),b
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;main.c: 512: lcd_gotoxy(1, 1);
  2617  00DD18  0E01               	movlw	1
  2618  00DD1A  6E05               	movwf	lcd_gotoxy@y,c
  2619  00DD1C  0E01               	movlw	1
  2620  00DD1E  ECF9  F066         	call	_lcd_gotoxy
  2621                           
  2622                           ;main.c: 513: lcd_putrs("Insert Password ");
  2623  00DD22  0EF4               	movlw	low STR_38
  2624  00DD24  6E09               	movwf	lcd_putrs@ptr,c
  2625  00DD26  0EFE               	movlw	high STR_38
  2626  00DD28  6E0A               	movwf	lcd_putrs@ptr+1,c
  2627  00DD2A  EC69  F068         	call	_lcd_putrs	;wreg free
  2628                           
  2629                           ;main.c: 514: lcd_gotoxy(1, 2);
  2630  00DD2E  0E02               	movlw	2
  2631  00DD30  6E05               	movwf	lcd_gotoxy@y,c
  2632  00DD32  0E01               	movlw	1
  2633  00DD34  ECF9  F066         	call	_lcd_gotoxy
  2634                           
  2635                           ;main.c: 515: lcd_putrs("                ");
  2636  00DD38  0ED2               	movlw	low STR_18
  2637  00DD3A  6E09               	movwf	lcd_putrs@ptr,c
  2638  00DD3C  0EFE               	movlw	high STR_18
  2639  00DD3E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2640  00DD40  EC69  F068         	call	_lcd_putrs	;wreg free
  2641  00DD44                     
  2642                           ;main.c: 518: if (numeros_ingresados < 4) {
  2643  00DD44  0100               	movlb	0	; () banked
  2644  00DD46  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  2645  00DD48  D008               	goto	u6430
  2646  00DD4A  0100               	movlb	0	; () banked
  2647  00DD4C  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  2648  00DD4E  E108               	bnz	l5505
  2649  00DD50  0E04               	movlw	4
  2650  00DD52  0100               	movlb	0	; () banked
  2651  00DD54  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  2652  00DD56  B0D8               	btfsc	status,0,c
  2653  00DD58  D003               	goto	l371
  2654  00DD5A                     u6430:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;main.c: 519: ingreso_numero();
  2658  00DD5A  EC5B  F079         	call	_ingreso_numero	;wreg free
  2659                           
  2660                           ;main.c: 520: } else {
  2661  00DD5E  D010               	goto	l375
  2662  00DD60                     l371:
  2663  00DD60                     l5505:
  2664                           
  2665                           ;main.c: 521: mostrar_presionar_a();
  2666  00DD60  ECDE  F066         	call	_mostrar_presionar_a	;wreg free
  2667                           
  2668                           ;main.c: 522: if (verificar_contrasenia() == 1) {
  2669  00DD64  EC7F  F06A         	call	_verificar_contrasenia	;wreg free
  2670  00DD68  0401               	decf	?_verificar_contrasenia,w,c
  2671  00DD6A  1002               	iorwf	?_verificar_contrasenia+1,w,c
  2672  00DD6C  A4D8               	btfss	status,2,c
  2673  00DD6E  D003               	goto	l373
  2674                           
  2675                           ;main.c: 523: ir_a_pantalla_edicion();
  2676  00DD70  ECD6  F06D         	call	_ir_a_pantalla_edicion	;wreg free
  2677                           
  2678                           ;main.c: 524: break;
  2679  00DD74  0012               	return	
  2680  00DD76                     l373:
  2681                           
  2682                           ;main.c: 526: intentos_de_contrasenias++;
  2683  00DD76  0100               	movlb	0	; () banked
  2684  00DD78  4BE6               	infsnz	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),f,b
  2685  00DD7A  2BE7               	incf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),f,b
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;main.c: 527: resetear_pantalla_ingresar_contrasenia();
  2689  00DD7C  EC1A  F068         	call	_resetear_pantalla_ingresar_contrasenia	;wreg free
  2690  00DD80                     l375:
  2691                           
  2692                           ;main.c: 528: }
  2693                           ;main.c: 529: }
  2694                           ;main.c: 530: if (intentos_de_contrasenias >= 3) {
  2695  00DD80  0100               	movlb	0	; () banked
  2696  00DD82  BFE7               	btfsc	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),7,b
  2697  00DD84  D7DF               	goto	l370
  2698  00DD86  0100               	movlb	0	; () banked
  2699  00DD88  51E7               	movf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),w,b
  2700  00DD8A  E105               	bnz	u6450
  2701  00DD8C  0E03               	movlw	3
  2702  00DD8E  0100               	movlb	0	; () banked
  2703  00DD90  5DE6               	subwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),w,b
  2704  00DD92  A0D8               	btfss	status,0,c
  2705  00DD94  D7D7               	goto	l370
  2706  00DD96                     u6450:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;main.c: 531: alarma_sonando = 1;
  2710  00DD96  0E00               	movlw	0
  2711  00DD98  0100               	movlb	0	; () banked
  2712  00DD9A  6F9F               	movwf	(_alarma_sonando+1)& (0+255),b
  2713  00DD9C  0E01               	movlw	1
  2714  00DD9E  6F9E               	movwf	_alarma_sonando& (0+255),b
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;main.c: 532: causa_reporte = "3 tries";
  2718  00DDA0  0EB7               	movlw	low STR_22
  2719  00DDA2  0100               	movlb	0	; () banked
  2720  00DDA4  6FC5               	movwf	_causa_reporte& (0+255),b
  2721  00DDA6  0EFF               	movlw	high STR_22
  2722  00DDA8  0100               	movlb	0	; () banked
  2723  00DDAA  6FC6               	movwf	(_causa_reporte+1)& (0+255),b
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;main.c: 533: activar_alarma();
  2727  00DDAC  EC4C  F078         	call	_activar_alarma	;wreg free
  2728  00DDB0  D7C9               	goto	l370
  2729  00DDB2                     __end_of_ir_a_pantalla_ingresar_contrasenia:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           postinc0	equ	0xFEE
  2738                           wreg	equ	0xFE8
  2739                           postdec1	equ	0xFE5
  2740                           fsr1l	equ	0xFE1
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _resetear_pantalla_ingresar_contrasenia *****************
  2744 ;; Defined at:
  2745 ;;		line 244 in file "main.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  i               2   10[COMRAM] int 
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    5
  2766 ;; This function calls:
  2767 ;;		_lcd_gotoxy
  2768 ;;		_lcd_putrs
  2769 ;; This function is called by:
  2770 ;;		_ir_a_pantalla_ingresar_contrasenia
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text9
  2775  00D034                     __ptext9:
  2776                           	opt stack 0
  2777  00D034                     _resetear_pantalla_ingresar_contrasenia:
  2778                           	opt stack 22
  2779                           
  2780                           ;main.c: 245: lcd_gotoxy(1, 2);
  2781                           
  2782                           ;incstack = 0
  2783  00D034  0E02               	movlw	2
  2784  00D036  6E05               	movwf	lcd_gotoxy@y,c
  2785  00D038  0E01               	movlw	1
  2786  00D03A  ECF9  F066         	call	_lcd_gotoxy
  2787                           
  2788                           ;main.c: 246: lcd_putrs("              ");
  2789  00D03E  0ED4               	movlw	low (STR_18+2)
  2790  00D040  6E09               	movwf	lcd_putrs@ptr,c
  2791  00D042  0EFE               	movlw	high (STR_18+2)
  2792  00D044  6E0A               	movwf	lcd_putrs@ptr+1,c
  2793  00D046  EC69  F068         	call	_lcd_putrs	;wreg free
  2794                           
  2795                           ;main.c: 248: for (int i = 0; i < 0; i++) {
  2796  00D04A  0E00               	movlw	0
  2797  00D04C  6E0C               	movwf	resetear_pantalla_ingresar_contrasenia@i+1,c
  2798  00D04E  0E00               	movlw	0
  2799  00D050  6E0B               	movwf	resetear_pantalla_ingresar_contrasenia@i,c
  2800  00D052                     l5431:
  2801  00D052  AE0C               	btfss	resetear_pantalla_ingresar_contrasenia@i+1,7,c
  2802  00D054  D010               	goto	u6350
  2803                           
  2804                           ;main.c: 249: array_contrasenia_ingresada[i] = 0;
  2805  00D056  90D8               	bcf	status,0,c
  2806  00D058  340B               	rlcf	resetear_pantalla_ingresar_contrasenia@i,w,c
  2807  00D05A  6ED9               	movwf	fsr2l,c
  2808  00D05C  340C               	rlcf	resetear_pantalla_ingresar_contrasenia@i+1,w,c
  2809  00D05E  6EDA               	movwf	fsr2h,c
  2810  00D060  0E60               	movlw	low _array_contrasenia_ingresada
  2811  00D062  26D9               	addwf	fsr2l,f,c
  2812  00D064  0E00               	movlw	high _array_contrasenia_ingresada
  2813  00D066  22DA               	addwfc	fsr2h,f,c
  2814  00D068  0E00               	movlw	0
  2815  00D06A  6EDE               	movwf	postinc2,c
  2816  00D06C  0E00               	movlw	0
  2817  00D06E  6EDD               	movwf	postdec2,c
  2818  00D070  4A0B               	infsnz	resetear_pantalla_ingresar_contrasenia@i,f,c
  2819  00D072  2A0C               	incf	resetear_pantalla_ingresar_contrasenia@i+1,f,c
  2820  00D074  D7EE               	goto	l5431
  2821  00D076                     u6350:
  2822                           
  2823                           ;main.c: 250: }
  2824                           ;main.c: 252: numeros_ingresados = 0;
  2825  00D076  0E00               	movlw	0
  2826  00D078  0100               	movlb	0	; () banked
  2827  00D07A  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  2828  00D07C  0E00               	movlw	0
  2829  00D07E  6FA4               	movwf	_numeros_ingresados& (0+255),b
  2830                           
  2831                           ; BSR set to: 0
  2832  00D080  0012               	return		;funcret
  2833  00D082                     __end_of_resetear_pantalla_ingresar_contrasenia:
  2834                           	opt stack 0
  2835                           tblptru	equ	0xFF8
  2836                           tblptrh	equ	0xFF7
  2837                           tblptrl	equ	0xFF6
  2838                           tablat	equ	0xFF5
  2839                           prodh	equ	0xFF4
  2840                           prodl	equ	0xFF3
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           postdec1	equ	0xFE5
  2844                           fsr1l	equ	0xFE1
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _mostrar_presionar_a *****************
  2852 ;; Defined at:
  2853 ;;		line 239 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    5
  2874 ;; This function calls:
  2875 ;;		_lcd_gotoxy
  2876 ;;		_lcd_putrs
  2877 ;; This function is called by:
  2878 ;;		_ir_a_pantalla_ingresar_contrasenia
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text10
  2883  00CDBC                     __ptext10:
  2884                           	opt stack 0
  2885  00CDBC                     _mostrar_presionar_a:
  2886                           	opt stack 22
  2887                           
  2888                           ;main.c: 240: lcd_gotoxy(7, 2);
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;incstack = 0
  2892  00CDBC  0E02               	movlw	2
  2893  00CDBE  6E05               	movwf	lcd_gotoxy@y,c
  2894  00CDC0  0E07               	movlw	7
  2895  00CDC2  ECF9  F066         	call	_lcd_gotoxy
  2896                           
  2897                           ;main.c: 241: lcd_putrs("Press A");
  2898  00CDC6  0EAF               	movlw	low STR_15
  2899  00CDC8  6E09               	movwf	lcd_putrs@ptr,c
  2900  00CDCA  0EFF               	movlw	high STR_15
  2901  00CDCC  6E0A               	movwf	lcd_putrs@ptr+1,c
  2902  00CDCE  EC69  F068         	call	_lcd_putrs	;wreg free
  2903  00CDD2  0012               	return		;funcret
  2904  00CDD4                     __end_of_mostrar_presionar_a:
  2905                           	opt stack 0
  2906                           tblptru	equ	0xFF8
  2907                           tblptrh	equ	0xFF7
  2908                           tblptrl	equ	0xFF6
  2909                           tablat	equ	0xFF5
  2910                           prodh	equ	0xFF4
  2911                           prodl	equ	0xFF3
  2912                           postinc0	equ	0xFEE
  2913                           wreg	equ	0xFE8
  2914                           postdec1	equ	0xFE5
  2915                           fsr1l	equ	0xFE1
  2916                           postinc2	equ	0xFDE
  2917                           postdec2	equ	0xFDD
  2918                           fsr2h	equ	0xFDA
  2919                           fsr2l	equ	0xFD9
  2920                           status	equ	0xFD8
  2921                           
  2922 ;; *************** function _ir_a_pantalla_edicion *****************
  2923 ;; Defined at:
  2924 ;;		line 472 in file "main.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;		None
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    9
  2945 ;; This function calls:
  2946 ;;		_Read_RTC
  2947 ;;		_cambiar_opcion
  2948 ;;		_imprimir_reporte
  2949 ;;		_lcd_gotoxy
  2950 ;;		_lcd_putrs
  2951 ;;		_selecciona_opcion_fecha_hora
  2952 ;;		_seleccionar_opcion
  2953 ;;		_set_reloj_digital
  2954 ;;		_titila_opcion
  2955 ;; This function is called by:
  2956 ;;		_ir_a_pantalla_ingresar_contrasenia
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text11
  2961  00DBAC                     __ptext11:
  2962                           	opt stack 0
  2963  00DBAC                     _ir_a_pantalla_edicion:
  2964                           	opt stack 18
  2965                           
  2966                           ;main.c: 473: lcd_gotoxy(1, 1);
  2967                           
  2968                           ;incstack = 0
  2969  00DBAC  0E01               	movlw	1
  2970  00DBAE  6E05               	movwf	lcd_gotoxy@y,c
  2971  00DBB0  0E01               	movlw	1
  2972  00DBB2  ECF9  F066         	call	_lcd_gotoxy
  2973                           
  2974                           ;main.c: 474: lcd_putrs("Active ");
  2975  00DBB6  0E8F               	movlw	low STR_36
  2976  00DBB8  6E09               	movwf	lcd_putrs@ptr,c
  2977  00DBBA  0EFF               	movlw	high STR_36
  2978  00DBBC  6E0A               	movwf	lcd_putrs@ptr+1,c
  2979  00DBBE  EC69  F068         	call	_lcd_putrs	;wreg free
  2980                           
  2981                           ;main.c: 475: lcd_gotoxy(1, 2);
  2982  00DBC2  0E02               	movlw	2
  2983  00DBC4  6E05               	movwf	lcd_gotoxy@y,c
  2984  00DBC6  0E01               	movlw	1
  2985  00DBC8  ECF9  F066         	call	_lcd_gotoxy
  2986                           
  2987                           ;main.c: 476: lcd_putrs("Edt Pass");
  2988  00DBCC  0E86               	movlw	low STR_29
  2989  00DBCE  6E09               	movwf	lcd_putrs@ptr,c
  2990  00DBD0  0EFF               	movlw	high STR_29
  2991  00DBD2  6E0A               	movwf	lcd_putrs@ptr+1,c
  2992  00DBD4  EC69  F068         	call	_lcd_putrs	;wreg free
  2993  00DBD8                     
  2994                           ;main.c: 479: Read_RTC();
  2995  00DBD8  EC56  F074         	call	_Read_RTC	;wreg free
  2996                           
  2997                           ;main.c: 481: set_reloj_digital();
  2998  00DBDC  ECA1  F066         	call	_set_reloj_digital	;wreg free
  2999                           
  3000                           ;main.c: 482: if (boton_seleccionar == 0 || boton_seleccionar == 1) {
  3001  00DBE0  0100               	movlb	0	; () banked
  3002  00DBE2  5190               	movf	_boton_seleccionar& (0+255),w,b
  3003  00DBE4  0100               	movlb	0	; () banked
  3004  00DBE6  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3005  00DBE8  B4D8               	btfsc	status,2,c
  3006  00DBEA  D005               	goto	u6370
  3007                           
  3008                           ; BSR set to: 0
  3009  00DBEC  0100               	movlb	0	; () banked
  3010  00DBEE  0590               	decf	_boton_seleccionar& (0+255),w,b
  3011  00DBF0  0100               	movlb	0	; () banked
  3012  00DBF2  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3013  00DBF4  B4D8               	btfsc	status,2,c
  3014  00DBF6                     u6370:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;main.c: 483: titila_opcion();
  3018                           
  3019                           ; BSR set to: 0
  3020  00DBF6  EC6C  F070         	call	_titila_opcion	;wreg free
  3021                           
  3022                           ;main.c: 484: }
  3023                           ;main.c: 485: if (boton_seleccionar == 2 || boton_seleccionar == 3) {
  3024  00DBFA  0E02               	movlw	2
  3025  00DBFC  0100               	movlb	0	; () banked
  3026  00DBFE  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3027  00DC00  0100               	movlb	0	; () banked
  3028  00DC02  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3029  00DC04  B4D8               	btfsc	status,2,c
  3030  00DC06  D006               	goto	u6390
  3031                           
  3032                           ; BSR set to: 0
  3033  00DC08  0E03               	movlw	3
  3034  00DC0A  0100               	movlb	0	; () banked
  3035  00DC0C  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3036  00DC0E  0100               	movlb	0	; () banked
  3037  00DC10  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3038  00DC12  B4D8               	btfsc	status,2,c
  3039  00DC14                     u6390:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;main.c: 486: selecciona_opcion_fecha_hora();
  3043                           
  3044                           ; BSR set to: 0
  3045  00DC14  EC00  F06B         	call	_selecciona_opcion_fecha_hora	;wreg free
  3046                           
  3047                           ;main.c: 487: }
  3048                           ;main.c: 488: if(boton_seleccionar == 4) {
  3049  00DC18  0E04               	movlw	4
  3050  00DC1A  0100               	movlb	0	; () banked
  3051  00DC1C  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3052  00DC1E  0100               	movlb	0	; () banked
  3053  00DC20  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3054  00DC22  B4D8               	btfsc	status,2,c
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;main.c: 489: imprimir_reporte();
  3058  00DC24  EC85  F06D         	call	_imprimir_reporte	;wreg free
  3059                           
  3060                           ;main.c: 490: }
  3061                           ;main.c: 491: cambiar_opcion();
  3062  00DC28  ECEC  F06C         	call	_cambiar_opcion	;wreg free
  3063                           
  3064                           ;main.c: 492: seleccionar_opcion();
  3065  00DC2C  EC41  F068         	call	_seleccionar_opcion	;wreg free
  3066                           
  3067                           ;main.c: 495: LATAbits.LATA0 = 0;
  3068  00DC30  9089               	bcf	3977,0,c	;volatile
  3069                           
  3070                           ;main.c: 496: LATAbits.LATA1 = 1;
  3071  00DC32  8289               	bsf	3977,1,c	;volatile
  3072                           
  3073                           ;main.c: 497: LATAbits.LATA2 = 0;
  3074  00DC34  9489               	bcf	3977,2,c	;volatile
  3075                           
  3076                           ;main.c: 498: LATAbits.LATA3 = 0;
  3077  00DC36  9689               	bcf	3977,3,c	;volatile
  3078                           
  3079                           ;main.c: 499: if (PORTCbits.RC2 == 1) {
  3080  00DC38  B482               	btfsc	3970,2,c	;volatile
  3081  00DC3A  0012               	return	
  3082  00DC3C  D7CD               	goto	l353
  3083  00DC3E                     
  3084                           ;main.c: 502: _delay((unsigned long)((98)*(8000000/4000.0)));
  3085  00DC3E  0EFF               	movlw	255
  3086  00DC40  0100               	movlb	0	; () banked
  3087  00DC42  6FE5               	movwf	??_ir_a_pantalla_edicion& (0+255),b
  3088  00DC44  0E8A               	movlw	138
  3089  00DC46                     u6827:
  3090  00DC46  2EE8               	decfsz	wreg,f,c
  3091  00DC48  D7FE               	bra	u6827
  3092  00DC4A  2FE5               	decfsz	??_ir_a_pantalla_edicion& (0+255),f,b
  3093  00DC4C  D7FC               	bra	u6827
  3094  00DC4E  F000               	nop	
  3095  00DC50  A482               	btfss	3970,2,c	;volatile
  3096  00DC52  D7C2               	goto	l353
  3097  00DC54  D7F4               	goto	l364
  3098  00DC56                     __end_of_ir_a_pantalla_edicion:
  3099                           	opt stack 0
  3100                           tblptru	equ	0xFF8
  3101                           tblptrh	equ	0xFF7
  3102                           tblptrl	equ	0xFF6
  3103                           tablat	equ	0xFF5
  3104                           prodh	equ	0xFF4
  3105                           prodl	equ	0xFF3
  3106                           postinc0	equ	0xFEE
  3107                           wreg	equ	0xFE8
  3108                           postdec1	equ	0xFE5
  3109                           fsr1l	equ	0xFE1
  3110                           postinc2	equ	0xFDE
  3111                           postdec2	equ	0xFDD
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8
  3115                           
  3116 ;; *************** function _titila_opcion *****************
  3117 ;; Defined at:
  3118 ;;		line 428 in file "main.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;Total ram usage:        1 bytes
  3137 ;; Hardware stack levels used:    1
  3138 ;; Hardware stack levels required when called:    5
  3139 ;; This function calls:
  3140 ;;		_lcd_gotoxy
  3141 ;;		_lcd_putrs
  3142 ;; This function is called by:
  3143 ;;		_ir_a_pantalla_edicion
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text12
  3148  00E0D8                     __ptext12:
  3149                           	opt stack 0
  3150  00E0D8                     _titila_opcion:
  3151                           	opt stack 21
  3152                           
  3153                           ;main.c: 429: if (txt_pantalla_edicion == 0) {
  3154                           
  3155                           ;incstack = 0
  3156  00E0D8  0100               	movlb	0	; () banked
  3157  00E0DA  518A               	movf	_txt_pantalla_edicion& (0+255),w,b
  3158  00E0DC  0100               	movlb	0	; () banked
  3159  00E0DE  118B               	iorwf	(_txt_pantalla_edicion+1)& (0+255),w,b
  3160  00E0E0  A4D8               	btfss	status,2,c
  3161  00E0E2  D030               	goto	l341
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;main.c: 430: txt_pantalla_edicion = 1;
  3165  00E0E4  0E00               	movlw	0
  3166  00E0E6  0100               	movlb	0	; () banked
  3167  00E0E8  6F8B               	movwf	(_txt_pantalla_edicion+1)& (0+255),b
  3168  00E0EA  0E01               	movlw	1
  3169  00E0EC  6F8A               	movwf	_txt_pantalla_edicion& (0+255),b
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;main.c: 431: lcd_gotoxy(1, 1);
  3173  00E0EE  0E01               	movlw	1
  3174  00E0F0  6E05               	movwf	lcd_gotoxy@y,c
  3175  00E0F2  0E01               	movlw	1
  3176  00E0F4  ECF9  F066         	call	_lcd_gotoxy
  3177                           
  3178                           ;main.c: 432: lcd_putrs("Active  ");
  3179  00E0F8  0E23               	movlw	low STR_28
  3180  00E0FA  6E09               	movwf	lcd_putrs@ptr,c
  3181  00E0FC  0EFF               	movlw	high STR_28
  3182  00E0FE  6E0A               	movwf	lcd_putrs@ptr+1,c
  3183  00E100  EC69  F068         	call	_lcd_putrs	;wreg free
  3184                           
  3185                           ;main.c: 433: lcd_gotoxy(1, 2);
  3186  00E104  0E02               	movlw	2
  3187  00E106  6E05               	movwf	lcd_gotoxy@y,c
  3188  00E108  0E01               	movlw	1
  3189  00E10A  ECF9  F066         	call	_lcd_gotoxy
  3190                           
  3191                           ;main.c: 434: lcd_putrs("Edt Pass");
  3192  00E10E  0E86               	movlw	low STR_29
  3193  00E110  6E09               	movwf	lcd_putrs@ptr,c
  3194  00E112  0EFF               	movlw	high STR_29
  3195  00E114  6E0A               	movwf	lcd_putrs@ptr+1,c
  3196  00E116  EC69  F068         	call	_lcd_putrs	;wreg free
  3197                           
  3198                           ;main.c: 435: _delay((unsigned long)((80)*(8000000/4000.0)));
  3199  00E11A  0ED0               	movlw	208
  3200  00E11C  6E0B               	movwf	??_titila_opcion& (0+255),c
  3201  00E11E  0ECA               	movlw	202
  3202  00E120                     u6837:
  3203  00E120  2EE8               	decfsz	wreg,f,c
  3204  00E122  D7FE               	bra	u6837
  3205  00E124  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  3206  00E126  D7FC               	bra	u6837
  3207                           
  3208                           ;main.c: 436: _delay((unsigned long)((80)*(8000000/4000.0)));
  3209  00E128  0ED0               	movlw	208
  3210  00E12A  6E0B               	movwf	??_titila_opcion& (0+255),c
  3211  00E12C  0ECA               	movlw	202
  3212  00E12E                     u6847:
  3213  00E12E  2EE8               	decfsz	wreg,f,c
  3214  00E130  D7FE               	bra	u6847
  3215  00E132  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  3216  00E134  D7FC               	bra	u6847
  3217                           
  3218                           ;main.c: 437: _delay((unsigned long)((80)*(8000000/4000.0)));
  3219  00E136  0ED0               	movlw	208
  3220  00E138  6E0B               	movwf	??_titila_opcion& (0+255),c
  3221  00E13A  0ECA               	movlw	202
  3222  00E13C                     u6857:
  3223  00E13C  2EE8               	decfsz	wreg,f,c
  3224  00E13E  D7FE               	bra	u6857
  3225  00E140  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  3226  00E142  D7FC               	bra	u6857
  3227  00E144                     l341:
  3228                           
  3229                           ;main.c: 438: }
  3230                           ;main.c: 440: if (txt_pantalla_edicion == 1) {
  3231  00E144  0100               	movlb	0	; () banked
  3232  00E146  058A               	decf	_txt_pantalla_edicion& (0+255),w,b
  3233  00E148  0100               	movlb	0	; () banked
  3234  00E14A  118B               	iorwf	(_txt_pantalla_edicion+1)& (0+255),w,b
  3235  00E14C  A4D8               	btfss	status,2,c
  3236  00E14E  0012               	return	
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;main.c: 441: txt_pantalla_edicion = 0;
  3240  00E150  0E00               	movlw	0
  3241  00E152  0100               	movlb	0	; () banked
  3242  00E154  6F8B               	movwf	(_txt_pantalla_edicion+1)& (0+255),b
  3243  00E156  0E00               	movlw	0
  3244  00E158  6F8A               	movwf	_txt_pantalla_edicion& (0+255),b
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;main.c: 443: if (boton_seleccionar == 0) {
  3248  00E15A  0100               	movlb	0	; () banked
  3249  00E15C  5190               	movf	_boton_seleccionar& (0+255),w,b
  3250  00E15E  0100               	movlb	0	; () banked
  3251  00E160  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3252  00E162  A4D8               	btfss	status,2,c
  3253  00E164  D00B               	goto	l343
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;main.c: 444: lcd_gotoxy(1, 1);
  3257  00E166  0E01               	movlw	1
  3258  00E168  6E05               	movwf	lcd_gotoxy@y,c
  3259  00E16A  0E01               	movlw	1
  3260  00E16C  ECF9  F066         	call	_lcd_gotoxy
  3261                           
  3262                           ;main.c: 445: lcd_putrs("       ");
  3263  00E170  0EDB               	movlw	low (STR_18+9)
  3264  00E172  6E09               	movwf	lcd_putrs@ptr,c
  3265  00E174  0EFE               	movlw	high (STR_18+9)
  3266  00E176  6E0A               	movwf	lcd_putrs@ptr+1,c
  3267  00E178  EC69  F068         	call	_lcd_putrs	;wreg free
  3268  00E17C                     l343:
  3269                           
  3270                           ;main.c: 446: }
  3271                           ;main.c: 447: if (boton_seleccionar == 1) {
  3272  00E17C  0100               	movlb	0	; () banked
  3273  00E17E  0590               	decf	_boton_seleccionar& (0+255),w,b
  3274  00E180  0100               	movlb	0	; () banked
  3275  00E182  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3276  00E184  A4D8               	btfss	status,2,c
  3277  00E186  D00B               	goto	l344
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;main.c: 448: lcd_gotoxy(1, 2);
  3281  00E188  0E02               	movlw	2
  3282  00E18A  6E05               	movwf	lcd_gotoxy@y,c
  3283  00E18C  0E01               	movlw	1
  3284  00E18E  ECF9  F066         	call	_lcd_gotoxy
  3285                           
  3286                           ;main.c: 449: lcd_putrs("        ");
  3287  00E192  0EDA               	movlw	low (STR_18+8)
  3288  00E194  6E09               	movwf	lcd_putrs@ptr,c
  3289  00E196  0EFE               	movlw	high (STR_18+8)
  3290  00E198  6E0A               	movwf	lcd_putrs@ptr+1,c
  3291  00E19A  EC69  F068         	call	_lcd_putrs	;wreg free
  3292  00E19E                     l344:
  3293                           
  3294                           ;main.c: 450: }
  3295                           ;main.c: 451: _delay((unsigned long)((60)*(8000000/4000.0)));
  3296  00E19E  0E9C               	movlw	156
  3297  00E1A0  6E0B               	movwf	??_titila_opcion& (0+255),c
  3298  00E1A2  0ED7               	movlw	215
  3299  00E1A4                     u6867:
  3300  00E1A4  2EE8               	decfsz	wreg,f,c
  3301  00E1A6  D7FE               	bra	u6867
  3302  00E1A8  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  3303  00E1AA  D7FC               	bra	u6867
  3304  00E1AC  F000               	nop	
  3305  00E1AE  0012               	return	
  3306  00E1B0                     __end_of_titila_opcion:
  3307                           	opt stack 0
  3308                           tblptru	equ	0xFF8
  3309                           tblptrh	equ	0xFF7
  3310                           tblptrl	equ	0xFF6
  3311                           tablat	equ	0xFF5
  3312                           prodh	equ	0xFF4
  3313                           prodl	equ	0xFF3
  3314                           postinc0	equ	0xFEE
  3315                           wreg	equ	0xFE8
  3316                           postdec1	equ	0xFE5
  3317                           fsr1l	equ	0xFE1
  3318                           postinc2	equ	0xFDE
  3319                           postdec2	equ	0xFDD
  3320                           fsr2h	equ	0xFDA
  3321                           fsr2l	equ	0xFD9
  3322                           status	equ	0xFD8
  3323                           
  3324 ;; *************** function _set_reloj_digital *****************
  3325 ;; Defined at:
  3326 ;;		line 104 in file "main.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    6
  3347 ;; This function calls:
  3348 ;;		_setDiaMesAnio
  3349 ;;		_setHoraMinutoSegundo
  3350 ;; This function is called by:
  3351 ;;		_ir_a_pantalla_edicion
  3352 ;;		_ir_a_pantalla_inicial
  3353 ;;		_setup
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text13
  3358  00CD42                     __ptext13:
  3359                           	opt stack 0
  3360  00CD42                     _set_reloj_digital:
  3361                           	opt stack 23
  3362                           
  3363                           ;main.c: 105: setDiaMesAnio();
  3364                           
  3365                           ;incstack = 0
  3366  00CD42  EC89  F06B         	call	_setDiaMesAnio	;wreg free
  3367                           
  3368                           ;main.c: 106: setHoraMinutoSegundo();
  3369  00CD46  EC41  F06A         	call	_setHoraMinutoSegundo	;wreg free
  3370  00CD4A  0012               	return		;funcret
  3371  00CD4C                     __end_of_set_reloj_digital:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           postinc0	equ	0xFEE
  3380                           wreg	equ	0xFE8
  3381                           postdec1	equ	0xFE5
  3382                           fsr1l	equ	0xFE1
  3383                           postinc2	equ	0xFDE
  3384                           postdec2	equ	0xFDD
  3385                           fsr2h	equ	0xFDA
  3386                           fsr2l	equ	0xFD9
  3387                           status	equ	0xFD8
  3388                           
  3389 ;; *************** function _seleccionar_opcion *****************
  3390 ;; Defined at:
  3391 ;;		line 407 in file "main.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used:    1
  3411 ;; Hardware stack levels required when called:    8
  3412 ;; This function calls:
  3413 ;;		_activar_alarma
  3414 ;;		_editar_fecha_reloj_digital
  3415 ;;		_editar_hora_reloj_digital
  3416 ;;		_ir_a_pantalla_editar_contrasenia
  3417 ;; This function is called by:
  3418 ;;		_ir_a_pantalla_edicion
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text14
  3423  00D082                     __ptext14:
  3424                           	opt stack 0
  3425  00D082                     _seleccionar_opcion:
  3426                           	opt stack 18
  3427                           
  3428                           ;main.c: 408: LATAbits.LATA0 = 1;
  3429                           
  3430                           ;incstack = 0
  3431  00D082  8089               	bsf	3977,0,c	;volatile
  3432                           
  3433                           ;main.c: 409: LATAbits.LATA1 = 0;
  3434  00D084  9289               	bcf	3977,1,c	;volatile
  3435                           
  3436                           ;main.c: 410: LATAbits.LATA2 = 0;
  3437  00D086  9489               	bcf	3977,2,c	;volatile
  3438                           
  3439                           ;main.c: 411: LATAbits.LATA3 = 0;
  3440  00D088  9689               	bcf	3977,3,c	;volatile
  3441                           
  3442                           ;main.c: 412: if (PORTCbits.RC2 == 1 && LATAbits.LATA0 == 1) {
  3443  00D08A  A482               	btfss	3970,2,c	;volatile
  3444  00D08C  0012               	return	
  3445  00D08E  A089               	btfss	3977,0,c	;volatile
  3446  00D090  0012               	return	
  3447                           
  3448                           ;main.c: 413: if (boton_seleccionar == 0) {
  3449  00D092  0100               	movlb	0	; () banked
  3450  00D094  5190               	movf	_boton_seleccionar& (0+255),w,b
  3451  00D096  0100               	movlb	0	; () banked
  3452  00D098  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3453  00D09A  B4D8               	btfsc	status,2,c
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;main.c: 414: activar_alarma();
  3457  00D09C  EC4C  F078         	call	_activar_alarma	;wreg free
  3458                           
  3459                           ;main.c: 415: }
  3460                           ;main.c: 416: if (boton_seleccionar == 1) {
  3461  00D0A0  0100               	movlb	0	; () banked
  3462  00D0A2  0590               	decf	_boton_seleccionar& (0+255),w,b
  3463  00D0A4  0100               	movlb	0	; () banked
  3464  00D0A6  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3465  00D0A8  B4D8               	btfsc	status,2,c
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;main.c: 417: ir_a_pantalla_editar_contrasenia();
  3469  00D0AA  EC36  F06D         	call	_ir_a_pantalla_editar_contrasenia	;wreg free
  3470                           
  3471                           ;main.c: 418: }
  3472                           ;main.c: 419: if (boton_seleccionar == 2) {
  3473  00D0AE  0E02               	movlw	2
  3474  00D0B0  0100               	movlb	0	; () banked
  3475  00D0B2  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3476  00D0B4  0100               	movlb	0	; () banked
  3477  00D0B6  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3478  00D0B8  B4D8               	btfsc	status,2,c
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;main.c: 420: editar_fecha_reloj_digital();
  3482  00D0BA  ECE8  F07B         	call	_editar_fecha_reloj_digital	;wreg free
  3483                           
  3484                           ;main.c: 421: }
  3485                           ;main.c: 422: if (boton_seleccionar == 3) {
  3486  00D0BE  0E03               	movlw	3
  3487  00D0C0  0100               	movlb	0	; () banked
  3488  00D0C2  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3489  00D0C4  0100               	movlb	0	; () banked
  3490  00D0C6  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3491  00D0C8  A4D8               	btfss	status,2,c
  3492  00D0CA  0012               	return	
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;main.c: 423: editar_hora_reloj_digital();
  3496  00D0CC  EC8F  F07A         	call	_editar_hora_reloj_digital	;wreg free
  3497  00D0D0  0012               	return	
  3498  00D0D2                     __end_of_seleccionar_opcion:
  3499                           	opt stack 0
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           prodh	equ	0xFF4
  3505                           prodl	equ	0xFF3
  3506                           postinc0	equ	0xFEE
  3507                           wreg	equ	0xFE8
  3508                           postdec1	equ	0xFE5
  3509                           fsr1l	equ	0xFE1
  3510                           postinc2	equ	0xFDE
  3511                           postdec2	equ	0xFDD
  3512                           fsr2h	equ	0xFDA
  3513                           fsr2l	equ	0xFD9
  3514                           status	equ	0xFD8
  3515                           
  3516 ;; *************** function _ir_a_pantalla_editar_contrasenia *****************
  3517 ;; Defined at:
  3518 ;;		line 595 in file "main.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  i               2   66[COMRAM] int 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3536 ;;Total ram usage:        2 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    7
  3539 ;; This function calls:
  3540 ;;		_ingreso_numero
  3541 ;;		_lcd_gotoxy
  3542 ;;		_lcd_putrs
  3543 ;; This function is called by:
  3544 ;;		_seleccionar_opcion
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text15
  3549  00DA6C                     __ptext15:
  3550                           	opt stack 0
  3551  00DA6C                     _ir_a_pantalla_editar_contrasenia:
  3552                           	opt stack 18
  3553                           
  3554                           ;main.c: 596: numeros_ingresados = 0;
  3555                           
  3556                           ;incstack = 0
  3557  00DA6C  0E00               	movlw	0
  3558  00DA6E  0100               	movlb	0	; () banked
  3559  00DA70  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  3560  00DA72  0E00               	movlw	0
  3561  00DA74  6FA4               	movwf	_numeros_ingresados& (0+255),b
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;main.c: 597: lcd_gotoxy(1, 1);
  3565  00DA76  0E01               	movlw	1
  3566  00DA78  6E05               	movwf	lcd_gotoxy@y,c
  3567  00DA7A  0E01               	movlw	1
  3568  00DA7C  ECF9  F066         	call	_lcd_gotoxy
  3569                           
  3570                           ;main.c: 598: lcd_putrs("Insert new Password ");
  3571  00DA80  0EAB               	movlw	low STR_41
  3572  00DA82  6E09               	movwf	lcd_putrs@ptr,c
  3573  00DA84  0EFE               	movlw	high STR_41
  3574  00DA86  6E0A               	movwf	lcd_putrs@ptr+1,c
  3575  00DA88  EC69  F068         	call	_lcd_putrs	;wreg free
  3576                           
  3577                           ;main.c: 599: lcd_gotoxy(1, 2);
  3578  00DA8C  0E02               	movlw	2
  3579  00DA8E  6E05               	movwf	lcd_gotoxy@y,c
  3580  00DA90  0E01               	movlw	1
  3581  00DA92  ECF9  F066         	call	_lcd_gotoxy
  3582                           
  3583                           ;main.c: 600: lcd_putrs("                ");
  3584  00DA96  0ED2               	movlw	low STR_18
  3585  00DA98  6E09               	movwf	lcd_putrs@ptr,c
  3586  00DA9A  0EFE               	movlw	high STR_18
  3587  00DA9C  6E0A               	movwf	lcd_putrs@ptr+1,c
  3588  00DA9E  EC69  F068         	call	_lcd_putrs	;wreg free
  3589  00DAA2                     
  3590                           ;main.c: 602: if (numeros_ingresados < 4) {
  3591  00DAA2  0100               	movlb	0	; () banked
  3592  00DAA4  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3593  00DAA6  D008               	goto	u5880
  3594  00DAA8  0100               	movlb	0	; () banked
  3595  00DAAA  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3596  00DAAC  E108               	bnz	l5033
  3597  00DAAE  0E04               	movlw	4
  3598  00DAB0  0100               	movlb	0	; () banked
  3599  00DAB2  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  3600  00DAB4  B0D8               	btfsc	status,0,c
  3601  00DAB6  D003               	goto	l416
  3602  00DAB8                     u5880:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;main.c: 603: ingreso_numero();
  3606  00DAB8  EC5B  F079         	call	_ingreso_numero	;wreg free
  3607                           
  3608                           ;main.c: 604: } else {
  3609  00DABC  D7F2               	goto	l415
  3610  00DABE                     l416:
  3611  00DABE                     l5033:
  3612                           
  3613                           ;main.c: 605: for (int i = 0; i < 4; i++) {
  3614  00DABE  0E00               	movlw	0
  3615  00DAC0  6E44               	movwf	ir_a_pantalla_editar_contrasenia@i+1,c
  3616  00DAC2  0E00               	movlw	0
  3617  00DAC4  6E43               	movwf	ir_a_pantalla_editar_contrasenia@i,c
  3618  00DAC6                     l5035:
  3619  00DAC6  BE44               	btfsc	ir_a_pantalla_editar_contrasenia@i+1,7,c
  3620  00DAC8  D006               	goto	l418
  3621  00DACA  5044               	movf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3622  00DACC  E11D               	bnz	l422
  3623  00DACE  0E04               	movlw	4
  3624  00DAD0  5C43               	subwf	ir_a_pantalla_editar_contrasenia@i,w,c
  3625  00DAD2  B0D8               	btfsc	status,0,c
  3626  00DAD4  0012               	return	
  3627  00DAD6                     l418:
  3628                           
  3629                           ;main.c: 606: array_contrasenia[i] = array_contrasenia_ingresada[i];
  3630  00DAD6  90D8               	bcf	status,0,c
  3631  00DAD8  3443               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3632  00DADA  6ED9               	movwf	fsr2l,c
  3633  00DADC  3444               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3634  00DADE  6EDA               	movwf	fsr2h,c
  3635  00DAE0  0E60               	movlw	low _array_contrasenia_ingresada
  3636  00DAE2  26D9               	addwf	fsr2l,f,c
  3637  00DAE4  0E00               	movlw	high _array_contrasenia_ingresada
  3638  00DAE6  22DA               	addwfc	fsr2h,f,c
  3639  00DAE8  90D8               	bcf	status,0,c
  3640  00DAEA  3443               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3641  00DAEC  6EE1               	movwf	fsr1l,c
  3642  00DAEE  3444               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3643  00DAF0  6EE2               	movwf	fsr1h,c
  3644  00DAF2  0EBD               	movlw	low _array_contrasenia
  3645  00DAF4  26E1               	addwf	fsr1l,f,c
  3646  00DAF6  0E00               	movlw	high _array_contrasenia
  3647  00DAF8  22E2               	addwfc	fsr1h,f,c
  3648  00DAFA  CFDE FFE6          	movff	postinc2,postinc1
  3649  00DAFE  CFDD FFE5          	movff	postdec2,postdec1
  3650  00DB02  4A43               	infsnz	ir_a_pantalla_editar_contrasenia@i,f,c
  3651  00DB04  2A44               	incf	ir_a_pantalla_editar_contrasenia@i+1,f,c
  3652  00DB06  D7DF               	goto	l5035
  3653  00DB08                     l422:
  3654  00DB08  0012               	return		;funcret
  3655  00DB0A                     __end_of_ir_a_pantalla_editar_contrasenia:
  3656                           	opt stack 0
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           prodh	equ	0xFF4
  3662                           prodl	equ	0xFF3
  3663                           postinc0	equ	0xFEE
  3664                           wreg	equ	0xFE8
  3665                           postinc1	equ	0xFE6
  3666                           postdec1	equ	0xFE5
  3667                           fsr1h	equ	0xFE2
  3668                           fsr1l	equ	0xFE1
  3669                           postinc2	equ	0xFDE
  3670                           postdec2	equ	0xFDD
  3671                           fsr2h	equ	0xFDA
  3672                           fsr2l	equ	0xFD9
  3673                           status	equ	0xFD8
  3674                           
  3675 ;; *************** function _editar_hora_reloj_digital *****************
  3676 ;; Defined at:
  3677 ;;		line 726 in file "main.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;		None
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  segundo_ingr    2   14[BANK0 ] int 
  3682 ;;  minuto_ingre    2   12[BANK0 ] int 
  3683 ;;  hora_ingresa    2   10[BANK0 ] int 
  3684 ;;  posicion        2   16[BANK0 ] int 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3695 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;Total ram usage:        9 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    7
  3701 ;; This function calls:
  3702 ;;		_Write_RTC
  3703 ;;		_covertir_valores_de_array_a_escala_decimal
  3704 ;;		_ingreso_numero
  3705 ;;		_lcd_gotoxy
  3706 ;;		_lcd_putrs
  3707 ;;		_setHoraMinutoSegundo
  3708 ;; This function is called by:
  3709 ;;		_seleccionar_opcion
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text16
  3714  00F51E                     __ptext16:
  3715                           	opt stack 0
  3716  00F51E                     _editar_hora_reloj_digital:
  3717                           	opt stack 18
  3718                           
  3719                           ;main.c: 727: int posicion = 0;
  3720                           
  3721                           ;incstack = 0
  3722  00F51E  0E00               	movlw	0
  3723  00F520  0100               	movlb	0	; () banked
  3724  00F522  6FE4               	movwf	(editar_hora_reloj_digital@posicion+1)& (0+255),b
  3725  00F524  0E00               	movlw	0
  3726  00F526  6FE3               	movwf	editar_hora_reloj_digital@posicion& (0+255),b
  3727                           
  3728                           ;main.c: 728: motivo_ingreso_de_numeros = 1;
  3729  00F528  0E00               	movlw	0
  3730  00F52A  0100               	movlb	0	; () banked
  3731  00F52C  6FA3               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3732  00F52E  0E01               	movlw	1
  3733  00F530  6FA2               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;main.c: 730: if (posicion == 0) {
  3737  00F532  0100               	movlb	0	; () banked
  3738  00F534  51E3               	movf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3739  00F536  0100               	movlb	0	; () banked
  3740  00F538  11E4               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3741  00F53A  A4D8               	btfss	status,2,c
  3742  00F53C  D065               	goto	l461
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;main.c: 731: lcd_gotoxy(1, 2);
  3746  00F53E  0E02               	movlw	2
  3747  00F540  6E05               	movwf	lcd_gotoxy@y,c
  3748  00F542  0E01               	movlw	1
  3749  00F544  ECF9  F066         	call	_lcd_gotoxy
  3750                           
  3751                           ;main.c: 732: lcd_putrs("Set Hour");
  3752  00F548  0E6B               	movlw	low STR_46
  3753  00F54A  6E09               	movwf	lcd_putrs@ptr,c
  3754  00F54C  0EFF               	movlw	high STR_46
  3755  00F54E  6E0A               	movwf	lcd_putrs@ptr+1,c
  3756  00F550  EC69  F068         	call	_lcd_putrs	;wreg free
  3757                           
  3758                           ;main.c: 733: numeros_ingresados = 0;
  3759  00F554  0E00               	movlw	0
  3760  00F556  0100               	movlb	0	; () banked
  3761  00F558  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  3762  00F55A  0E00               	movlw	0
  3763  00F55C  6FA4               	movwf	_numeros_ingresados& (0+255),b
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;main.c: 734: int hora_ingresada = 0;
  3767  00F55E  0E00               	movlw	0
  3768  00F560  0100               	movlb	0	; () banked
  3769  00F562  6FDE               	movwf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),b
  3770  00F564  0E00               	movlw	0
  3771  00F566  6FDD               	movwf	editar_hora_reloj_digital@hora_ingresada& (0+255),b
  3772                           
  3773                           ;main.c: 735: while (numeros_ingresados < 3) {
  3774  00F568  D02A               	goto	l466
  3775  00F56A                     
  3776                           ; BSR set to: 0
  3777                           ;main.c: 736: ingreso_numero();
  3778                           
  3779                           ; BSR set to: 0
  3780  00F56A  EC5B  F079         	call	_ingreso_numero	;wreg free
  3781                           
  3782                           ;main.c: 737: if (numeros_ingresados == 2) {
  3783  00F56E  0E02               	movlw	2
  3784  00F570  0100               	movlb	0	; () banked
  3785  00F572  19A4               	xorwf	_numeros_ingresados& (0+255),w,b
  3786  00F574  0100               	movlb	0	; () banked
  3787  00F576  11A5               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3788  00F578  A4D8               	btfss	status,2,c
  3789  00F57A  D021               	goto	l466
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;main.c: 738: hora_ingresada = covertir_valores_de_array_a_escala_decimal();
  3793  00F57C  EC00  F070         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3794  00F580  C05B  F0DD         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@hora_ingre
      +                          sada
  3795  00F584  C05C  F0DE         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@hora_ing
      +                          resada+1
  3796                           
  3797                           ;main.c: 739: if ((0 <= hora_ingresada) && (hora_ingresada <= 23)) {
  3798  00F588  0100               	movlb	0	; () banked
  3799  00F58A  BFDE               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3800  00F58C  D013               	goto	l465
  3801                           
  3802                           ; BSR set to: 0
  3803  00F58E  0100               	movlb	0	; () banked
  3804  00F590  BFDE               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3805  00F592  D008               	goto	u6090
  3806  00F594  0100               	movlb	0	; () banked
  3807  00F596  51DE               	movf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),w,b
  3808  00F598  E10D               	bnz	l5193
  3809  00F59A  0E18               	movlw	24
  3810  00F59C  0100               	movlb	0	; () banked
  3811  00F59E  5DDD               	subwf	editar_hora_reloj_digital@hora_ingresada& (0+255),w,b
  3812  00F5A0  B0D8               	btfsc	status,0,c
  3813  00F5A2  D008               	goto	l465
  3814  00F5A4                     u6090:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;main.c: 740: hora = hora_ingresada;
  3818  00F5A4  C0DD  F0C9         	movff	editar_hora_reloj_digital@hora_ingresada,_hora
  3819  00F5A8  C0DE  F0CA         	movff	editar_hora_reloj_digital@hora_ingresada+1,_hora+1
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;main.c: 741: numeros_ingresados++;
  3823  00F5AC  0100               	movlb	0	; () banked
  3824  00F5AE  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
  3825  00F5B0  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3826                           
  3827                           ;main.c: 742: } else {
  3828  00F5B2  D005               	goto	l466
  3829  00F5B4                     l465:
  3830  00F5B4                     l5193:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;main.c: 743: numeros_ingresados = 0;
  3834  00F5B4  0E00               	movlw	0
  3835  00F5B6  0100               	movlb	0	; () banked
  3836  00F5B8  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  3837  00F5BA  0E00               	movlw	0
  3838  00F5BC  6FA4               	movwf	_numeros_ingresados& (0+255),b
  3839  00F5BE                     l466:
  3840                           
  3841                           ; BSR set to: 0
  3842                           
  3843                           ; BSR set to: 0
  3844                           
  3845                           ; BSR set to: 0
  3846                           
  3847                           ; BSR set to: 0
  3848  00F5BE  0100               	movlb	0	; () banked
  3849  00F5C0  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3850  00F5C2  D7D3               	goto	l463
  3851  00F5C4  0100               	movlb	0	; () banked
  3852  00F5C6  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3853  00F5C8  E105               	bnz	l5197
  3854  00F5CA  0E03               	movlw	3
  3855  00F5CC  0100               	movlb	0	; () banked
  3856  00F5CE  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  3857  00F5D0  A0D8               	btfss	status,0,c
  3858  00F5D2  D7CB               	goto	l463
  3859  00F5D4                     l5197:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;main.c: 744: }
  3863                           ;main.c: 745: }
  3864                           ;main.c: 746: }
  3865                           ;main.c: 748: _delay((unsigned long)((50)*(8000000/4000.0)));
  3866  00F5D4  0E82               	movlw	130
  3867  00F5D6  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3868  00F5D8  0EDE               	movlw	222
  3869  00F5DA                     u6877:
  3870  00F5DA  2EE8               	decfsz	wreg,f,c
  3871  00F5DC  D7FE               	bra	u6877
  3872  00F5DE  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3873  00F5E0  D7FC               	bra	u6877
  3874                           
  3875                           ;main.c: 749: setHoraMinutoSegundo();
  3876  00F5E2  EC41  F06A         	call	_setHoraMinutoSegundo	;wreg free
  3877                           
  3878                           ;main.c: 750: _delay((unsigned long)((50)*(8000000/4000.0)));
  3879  00F5E6  0E82               	movlw	130
  3880  00F5E8  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3881  00F5EA  0EDE               	movlw	222
  3882  00F5EC                     u6887:
  3883  00F5EC  2EE8               	decfsz	wreg,f,c
  3884  00F5EE  D7FE               	bra	u6887
  3885  00F5F0  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3886  00F5F2  D7FC               	bra	u6887
  3887                           
  3888                           ;main.c: 751: posicion++;
  3889  00F5F4  0100               	movlb	0	; () banked
  3890  00F5F6  4BE3               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3891  00F5F8  2BE4               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;main.c: 752: _delay((unsigned long)((50)*(8000000/4000.0)));
  3895  00F5FA  0E82               	movlw	130
  3896  00F5FC  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3897  00F5FE  0EDE               	movlw	222
  3898  00F600                     u6897:
  3899  00F600  2EE8               	decfsz	wreg,f,c
  3900  00F602  D7FE               	bra	u6897
  3901  00F604  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3902  00F606  D7FC               	bra	u6897
  3903  00F608                     l461:
  3904                           
  3905                           ;main.c: 753: }
  3906                           ;main.c: 756: if (posicion == 1) {
  3907  00F608  0100               	movlb	0	; () banked
  3908  00F60A  05E3               	decf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3909  00F60C  0100               	movlb	0	; () banked
  3910  00F60E  11E4               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3911  00F610  A4D8               	btfss	status,2,c
  3912  00F612  D065               	goto	l468
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;main.c: 757: lcd_gotoxy(1, 2);
  3916  00F614  0E02               	movlw	2
  3917  00F616  6E05               	movwf	lcd_gotoxy@y,c
  3918  00F618  0E01               	movlw	1
  3919  00F61A  ECF9  F066         	call	_lcd_gotoxy
  3920                           
  3921                           ;main.c: 758: lcd_putrs("Set Mins");
  3922  00F61E  0E7D               	movlw	low STR_47
  3923  00F620  6E09               	movwf	lcd_putrs@ptr,c
  3924  00F622  0EFF               	movlw	high STR_47
  3925  00F624  6E0A               	movwf	lcd_putrs@ptr+1,c
  3926  00F626  EC69  F068         	call	_lcd_putrs	;wreg free
  3927                           
  3928                           ;main.c: 759: numeros_ingresados = 0;
  3929  00F62A  0E00               	movlw	0
  3930  00F62C  0100               	movlb	0	; () banked
  3931  00F62E  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  3932  00F630  0E00               	movlw	0
  3933  00F632  6FA4               	movwf	_numeros_ingresados& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;main.c: 760: int minuto_ingresado = 0;
  3937  00F634  0E00               	movlw	0
  3938  00F636  0100               	movlb	0	; () banked
  3939  00F638  6FE0               	movwf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),b
  3940  00F63A  0E00               	movlw	0
  3941  00F63C  6FDF               	movwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),b
  3942                           
  3943                           ;main.c: 761: while (numeros_ingresados < 3) {
  3944  00F63E  D02A               	goto	l473
  3945  00F640                     
  3946                           ; BSR set to: 0
  3947                           ;main.c: 762: ingreso_numero();
  3948                           
  3949                           ; BSR set to: 0
  3950  00F640  EC5B  F079         	call	_ingreso_numero	;wreg free
  3951                           
  3952                           ;main.c: 763: if (numeros_ingresados == 2) {
  3953  00F644  0E02               	movlw	2
  3954  00F646  0100               	movlb	0	; () banked
  3955  00F648  19A4               	xorwf	_numeros_ingresados& (0+255),w,b
  3956  00F64A  0100               	movlb	0	; () banked
  3957  00F64C  11A5               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3958  00F64E  A4D8               	btfss	status,2,c
  3959  00F650  D021               	goto	l473
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 764: minuto_ingresado = covertir_valores_de_array_a_escala_decimal();
  3963  00F652  EC00  F070         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3964  00F656  C05B  F0DF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@minuto_ing
      +                          resado
  3965  00F65A  C05C  F0E0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@minuto_i
      +                          ngresado+1
  3966                           
  3967                           ;main.c: 765: if ((0 <= minuto_ingresado) && (minuto_ingresado <= 59)) {
  3968  00F65E  0100               	movlb	0	; () banked
  3969  00F660  BFE0               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3970  00F662  D013               	goto	l472
  3971                           
  3972                           ; BSR set to: 0
  3973  00F664  0100               	movlb	0	; () banked
  3974  00F666  BFE0               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3975  00F668  D008               	goto	u6140
  3976  00F66A  0100               	movlb	0	; () banked
  3977  00F66C  51E0               	movf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),w,b
  3978  00F66E  E10D               	bnz	l5231
  3979  00F670  0E3C               	movlw	60
  3980  00F672  0100               	movlb	0	; () banked
  3981  00F674  5DDF               	subwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),w,b
  3982  00F676  B0D8               	btfsc	status,0,c
  3983  00F678  D008               	goto	l472
  3984  00F67A                     u6140:
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;main.c: 766: minuto = minuto_ingresado;
  3988  00F67A  C0DF  F0C7         	movff	editar_hora_reloj_digital@minuto_ingresado,_minuto
  3989  00F67E  C0E0  F0C8         	movff	editar_hora_reloj_digital@minuto_ingresado+1,_minuto+1
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;main.c: 767: numeros_ingresados++;
  3993  00F682  0100               	movlb	0	; () banked
  3994  00F684  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
  3995  00F686  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3996                           
  3997                           ;main.c: 768: } else {
  3998  00F688  D005               	goto	l473
  3999  00F68A                     l472:
  4000  00F68A                     l5231:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;main.c: 769: numeros_ingresados = 0;
  4004  00F68A  0E00               	movlw	0
  4005  00F68C  0100               	movlb	0	; () banked
  4006  00F68E  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4007  00F690  0E00               	movlw	0
  4008  00F692  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4009  00F694                     l473:
  4010                           
  4011                           ; BSR set to: 0
  4012                           
  4013                           ; BSR set to: 0
  4014                           
  4015                           ; BSR set to: 0
  4016                           
  4017                           ; BSR set to: 0
  4018  00F694  0100               	movlb	0	; () banked
  4019  00F696  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4020  00F698  D7D3               	goto	l470
  4021  00F69A  0100               	movlb	0	; () banked
  4022  00F69C  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4023  00F69E  E105               	bnz	l5235
  4024  00F6A0  0E03               	movlw	3
  4025  00F6A2  0100               	movlb	0	; () banked
  4026  00F6A4  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  4027  00F6A6  A0D8               	btfss	status,0,c
  4028  00F6A8  D7CB               	goto	l470
  4029  00F6AA                     l5235:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 770: }
  4033                           ;main.c: 771: }
  4034                           ;main.c: 772: }
  4035                           ;main.c: 774: _delay((unsigned long)((50)*(8000000/4000.0)));
  4036  00F6AA  0E82               	movlw	130
  4037  00F6AC  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  4038  00F6AE  0EDE               	movlw	222
  4039  00F6B0                     u6907:
  4040  00F6B0  2EE8               	decfsz	wreg,f,c
  4041  00F6B2  D7FE               	bra	u6907
  4042  00F6B4  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  4043  00F6B6  D7FC               	bra	u6907
  4044                           
  4045                           ;main.c: 775: setHoraMinutoSegundo();
  4046  00F6B8  EC41  F06A         	call	_setHoraMinutoSegundo	;wreg free
  4047                           
  4048                           ;main.c: 776: _delay((unsigned long)((50)*(8000000/4000.0)));
  4049  00F6BC  0E82               	movlw	130
  4050  00F6BE  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  4051  00F6C0  0EDE               	movlw	222
  4052  00F6C2                     u6917:
  4053  00F6C2  2EE8               	decfsz	wreg,f,c
  4054  00F6C4  D7FE               	bra	u6917
  4055  00F6C6  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  4056  00F6C8  D7FC               	bra	u6917
  4057                           
  4058                           ;main.c: 777: posicion++;
  4059  00F6CA  0100               	movlb	0	; () banked
  4060  00F6CC  4BE3               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  4061  00F6CE  2BE4               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;main.c: 778: _delay((unsigned long)((50)*(8000000/4000.0)));
  4065  00F6D0  0E82               	movlw	130
  4066  00F6D2  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  4067  00F6D4  0EDE               	movlw	222
  4068  00F6D6                     u6927:
  4069  00F6D6  2EE8               	decfsz	wreg,f,c
  4070  00F6D8  D7FE               	bra	u6927
  4071  00F6DA  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  4072  00F6DC  D7FC               	bra	u6927
  4073  00F6DE                     l468:
  4074                           
  4075                           ;main.c: 779: }
  4076                           ;main.c: 782: if (posicion == 2) {
  4077  00F6DE  0E02               	movlw	2
  4078  00F6E0  0100               	movlb	0	; () banked
  4079  00F6E2  19E3               	xorwf	editar_hora_reloj_digital@posicion& (0+255),w,b
  4080  00F6E4  0100               	movlb	0	; () banked
  4081  00F6E6  11E4               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  4082  00F6E8  A4D8               	btfss	status,2,c
  4083  00F6EA  D065               	goto	l475
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;main.c: 783: lcd_gotoxy(1, 2);
  4087  00F6EC  0E02               	movlw	2
  4088  00F6EE  6E05               	movwf	lcd_gotoxy@y,c
  4089  00F6F0  0E01               	movlw	1
  4090  00F6F2  ECF9  F066         	call	_lcd_gotoxy
  4091                           
  4092                           ;main.c: 784: lcd_putrs("Set Secs");
  4093  00F6F6  0E74               	movlw	low STR_48
  4094  00F6F8  6E09               	movwf	lcd_putrs@ptr,c
  4095  00F6FA  0EFF               	movlw	high STR_48
  4096  00F6FC  6E0A               	movwf	lcd_putrs@ptr+1,c
  4097  00F6FE  EC69  F068         	call	_lcd_putrs	;wreg free
  4098                           
  4099                           ;main.c: 785: numeros_ingresados = 0;
  4100  00F702  0E00               	movlw	0
  4101  00F704  0100               	movlb	0	; () banked
  4102  00F706  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4103  00F708  0E00               	movlw	0
  4104  00F70A  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;main.c: 786: int segundo_ingresado = 0;
  4108  00F70C  0E00               	movlw	0
  4109  00F70E  0100               	movlb	0	; () banked
  4110  00F710  6FE2               	movwf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),b
  4111  00F712  0E00               	movlw	0
  4112  00F714  6FE1               	movwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),b
  4113                           
  4114                           ;main.c: 787: while (numeros_ingresados < 3) {
  4115  00F716  D02A               	goto	l480
  4116  00F718                     
  4117                           ; BSR set to: 0
  4118                           ;main.c: 788: ingreso_numero();
  4119                           
  4120                           ; BSR set to: 0
  4121  00F718  EC5B  F079         	call	_ingreso_numero	;wreg free
  4122                           
  4123                           ;main.c: 789: if (numeros_ingresados == 2) {
  4124  00F71C  0E02               	movlw	2
  4125  00F71E  0100               	movlb	0	; () banked
  4126  00F720  19A4               	xorwf	_numeros_ingresados& (0+255),w,b
  4127  00F722  0100               	movlb	0	; () banked
  4128  00F724  11A5               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4129  00F726  A4D8               	btfss	status,2,c
  4130  00F728  D021               	goto	l480
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;main.c: 790: segundo_ingresado = covertir_valores_de_array_a_escala_decimal();
  4134  00F72A  EC00  F070         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4135  00F72E  C05B  F0E1         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@segundo_in
      +                          gresado
  4136  00F732  C05C  F0E2         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@segundo_
      +                          ingresado+1
  4137                           
  4138                           ;main.c: 791: if ((0 <= segundo_ingresado) && (segundo_ingresado <= 59)) {
  4139  00F736  0100               	movlb	0	; () banked
  4140  00F738  BFE2               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  4141  00F73A  D013               	goto	l479
  4142                           
  4143                           ; BSR set to: 0
  4144  00F73C  0100               	movlb	0	; () banked
  4145  00F73E  BFE2               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  4146  00F740  D008               	goto	u6190
  4147  00F742  0100               	movlb	0	; () banked
  4148  00F744  51E2               	movf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),w,b
  4149  00F746  E10D               	bnz	l5269
  4150  00F748  0E3C               	movlw	60
  4151  00F74A  0100               	movlb	0	; () banked
  4152  00F74C  5DE1               	subwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),w,b
  4153  00F74E  B0D8               	btfsc	status,0,c
  4154  00F750  D008               	goto	l479
  4155  00F752                     u6190:
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;main.c: 792: segundo = segundo_ingresado;
  4159  00F752  C0E1  F0A6         	movff	editar_hora_reloj_digital@segundo_ingresado,_segundo
  4160  00F756  C0E2  F0A7         	movff	editar_hora_reloj_digital@segundo_ingresado+1,_segundo+1
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 793: numeros_ingresados++;
  4164  00F75A  0100               	movlb	0	; () banked
  4165  00F75C  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
  4166  00F75E  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4167                           
  4168                           ;main.c: 794: } else {
  4169  00F760  D005               	goto	l480
  4170  00F762                     l479:
  4171  00F762                     l5269:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;main.c: 795: numeros_ingresados = 0;
  4175  00F762  0E00               	movlw	0
  4176  00F764  0100               	movlb	0	; () banked
  4177  00F766  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4178  00F768  0E00               	movlw	0
  4179  00F76A  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4180  00F76C                     l480:
  4181                           
  4182                           ; BSR set to: 0
  4183                           
  4184                           ; BSR set to: 0
  4185                           
  4186                           ; BSR set to: 0
  4187                           
  4188                           ; BSR set to: 0
  4189  00F76C  0100               	movlb	0	; () banked
  4190  00F76E  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4191  00F770  D7D3               	goto	l477
  4192  00F772  0100               	movlb	0	; () banked
  4193  00F774  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4194  00F776  E105               	bnz	l5273
  4195  00F778  0E03               	movlw	3
  4196  00F77A  0100               	movlb	0	; () banked
  4197  00F77C  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  4198  00F77E  A0D8               	btfss	status,0,c
  4199  00F780  D7CB               	goto	l477
  4200  00F782                     l5273:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 796: }
  4204                           ;main.c: 797: }
  4205                           ;main.c: 798: }
  4206                           ;main.c: 800: _delay((unsigned long)((50)*(8000000/4000.0)));
  4207  00F782  0E82               	movlw	130
  4208  00F784  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  4209  00F786  0EDE               	movlw	222
  4210  00F788                     u6937:
  4211  00F788  2EE8               	decfsz	wreg,f,c
  4212  00F78A  D7FE               	bra	u6937
  4213  00F78C  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  4214  00F78E  D7FC               	bra	u6937
  4215                           
  4216                           ;main.c: 801: setHoraMinutoSegundo();
  4217  00F790  EC41  F06A         	call	_setHoraMinutoSegundo	;wreg free
  4218                           
  4219                           ;main.c: 802: _delay((unsigned long)((50)*(8000000/4000.0)));
  4220  00F794  0E82               	movlw	130
  4221  00F796  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  4222  00F798  0EDE               	movlw	222
  4223  00F79A                     u6947:
  4224  00F79A  2EE8               	decfsz	wreg,f,c
  4225  00F79C  D7FE               	bra	u6947
  4226  00F79E  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  4227  00F7A0  D7FC               	bra	u6947
  4228                           
  4229                           ;main.c: 803: posicion++;
  4230  00F7A2  0100               	movlb	0	; () banked
  4231  00F7A4  4BE3               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  4232  00F7A6  2BE4               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;main.c: 804: _delay((unsigned long)((50)*(8000000/4000.0)));
  4236  00F7A8  0E82               	movlw	130
  4237  00F7AA  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  4238  00F7AC  0EDE               	movlw	222
  4239  00F7AE                     u6957:
  4240  00F7AE  2EE8               	decfsz	wreg,f,c
  4241  00F7B0  D7FE               	bra	u6957
  4242  00F7B2  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  4243  00F7B4  D7FC               	bra	u6957
  4244  00F7B6                     l475:
  4245                           
  4246                           ;main.c: 805: }
  4247                           ;main.c: 806: Write_RTC();
  4248  00F7B6  ECB4  F075         	call	_Write_RTC	;wreg free
  4249                           
  4250                           ;main.c: 807: motivo_ingreso_de_numeros = 0;
  4251  00F7BA  0E00               	movlw	0
  4252  00F7BC  0100               	movlb	0	; () banked
  4253  00F7BE  6FA3               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  4254  00F7C0  0E00               	movlw	0
  4255  00F7C2  6FA2               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;main.c: 808: numeros_ingresados = 0;
  4259  00F7C4  0E00               	movlw	0
  4260  00F7C6  0100               	movlb	0	; () banked
  4261  00F7C8  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4262  00F7CA  0E00               	movlw	0
  4263  00F7CC  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4264                           
  4265                           ; BSR set to: 0
  4266  00F7CE  0012               	return		;funcret
  4267  00F7D0                     __end_of_editar_hora_reloj_digital:
  4268                           	opt stack 0
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           postinc1	equ	0xFE6
  4278                           postdec1	equ	0xFE5
  4279                           fsr1h	equ	0xFE2
  4280                           fsr1l	equ	0xFE1
  4281                           postinc2	equ	0xFDE
  4282                           postdec2	equ	0xFDD
  4283                           fsr2h	equ	0xFDA
  4284                           fsr2l	equ	0xFD9
  4285                           status	equ	0xFD8
  4286                           
  4287 ;; *************** function _setHoraMinutoSegundo *****************
  4288 ;; Defined at:
  4289 ;;		line 91 in file "main.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    5
  4310 ;; This function calls:
  4311 ;;		_Write_RTC
  4312 ;;		_lcd_gotoxy
  4313 ;;		_lcd_putrs
  4314 ;;		_sprintf
  4315 ;; This function is called by:
  4316 ;;		_set_reloj_digital
  4317 ;;		_editar_hora_reloj_digital
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text17
  4322  00D482                     __ptext17:
  4323                           	opt stack 0
  4324  00D482                     _setHoraMinutoSegundo:
  4325                           	opt stack 23
  4326                           
  4327                           ;main.c: 92: if (hora >= 24) {
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;incstack = 0
  4331  00D482  0100               	movlb	0	; () banked
  4332  00D484  BFCA               	btfsc	(_hora+1)& (0+255),7,b
  4333  00D486  D019               	goto	l194
  4334  00D488  0100               	movlb	0	; () banked
  4335  00D48A  51CA               	movf	(_hora+1)& (0+255),w,b
  4336  00D48C  E105               	bnz	u5050
  4337  00D48E  0E18               	movlw	24
  4338  00D490  0100               	movlb	0	; () banked
  4339  00D492  5DC9               	subwf	_hora& (0+255),w,b
  4340  00D494  A0D8               	btfss	status,0,c
  4341  00D496  D011               	goto	l194
  4342  00D498                     u5050:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;main.c: 93: hora = 0;
  4346  00D498  0E00               	movlw	0
  4347  00D49A  0100               	movlb	0	; () banked
  4348  00D49C  6FCA               	movwf	(_hora+1)& (0+255),b
  4349  00D49E  0E00               	movlw	0
  4350  00D4A0  6FC9               	movwf	_hora& (0+255),b
  4351                           
  4352                           ;main.c: 94: minuto = 0;
  4353  00D4A2  0E00               	movlw	0
  4354  00D4A4  0100               	movlb	0	; () banked
  4355  00D4A6  6FC8               	movwf	(_minuto+1)& (0+255),b
  4356  00D4A8  0E00               	movlw	0
  4357  00D4AA  6FC7               	movwf	_minuto& (0+255),b
  4358                           
  4359                           ;main.c: 95: segundo = 0;
  4360  00D4AC  0E00               	movlw	0
  4361  00D4AE  0100               	movlb	0	; () banked
  4362  00D4B0  6FA7               	movwf	(_segundo+1)& (0+255),b
  4363  00D4B2  0E00               	movlw	0
  4364  00D4B4  6FA6               	movwf	_segundo& (0+255),b
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;main.c: 96: Write_RTC();
  4368  00D4B6  ECB4  F075         	call	_Write_RTC	;wreg free
  4369  00D4BA                     l194:
  4370                           
  4371                           ;main.c: 97: }
  4372                           ;main.c: 99: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  4373  00D4BA  0E14               	movlw	low _buffer2
  4374  00D4BC  6E22               	movwf	sprintf@sp,c
  4375  00D4BE  0E01               	movlw	high _buffer2
  4376  00D4C0  6E23               	movwf	sprintf@sp+1,c
  4377  00D4C2  0E14               	movlw	low STR_9
  4378  00D4C4  6E24               	movwf	sprintf@f,c
  4379  00D4C6  0EFF               	movlw	high STR_9
  4380  00D4C8  6E25               	movwf	sprintf@f+1,c
  4381  00D4CA  C0C9  F026         	movff	_hora,?_sprintf+4
  4382  00D4CE  C0CA  F027         	movff	_hora+1,?_sprintf+5
  4383  00D4D2  C0C7  F028         	movff	_minuto,?_sprintf+6
  4384  00D4D6  C0C8  F029         	movff	_minuto+1,?_sprintf+7
  4385  00D4DA  C0A6  F02A         	movff	_segundo,?_sprintf+8
  4386  00D4DE  C0A7  F02B         	movff	_segundo+1,?_sprintf+9
  4387  00D4E2  EC4F  F07D         	call	_sprintf	;wreg free
  4388                           
  4389                           ;main.c: 100: lcd_gotoxy(9, 2);
  4390  00D4E6  0E02               	movlw	2
  4391  00D4E8  6E05               	movwf	lcd_gotoxy@y,c
  4392  00D4EA  0E09               	movlw	9
  4393  00D4EC  ECF9  F066         	call	_lcd_gotoxy
  4394                           
  4395                           ;main.c: 101: lcd_putrs(buffer2);
  4396  00D4F0  0E14               	movlw	low _buffer2
  4397  00D4F2  6E09               	movwf	lcd_putrs@ptr,c
  4398  00D4F4  0E01               	movlw	high _buffer2
  4399  00D4F6  6E0A               	movwf	lcd_putrs@ptr+1,c
  4400  00D4F8  EC69  F068         	call	_lcd_putrs	;wreg free
  4401  00D4FC  0012               	return		;funcret
  4402  00D4FE                     __end_of_setHoraMinutoSegundo:
  4403                           	opt stack 0
  4404                           tblptru	equ	0xFF8
  4405                           tblptrh	equ	0xFF7
  4406                           tblptrl	equ	0xFF6
  4407                           tablat	equ	0xFF5
  4408                           prodh	equ	0xFF4
  4409                           prodl	equ	0xFF3
  4410                           postinc0	equ	0xFEE
  4411                           wreg	equ	0xFE8
  4412                           postinc1	equ	0xFE6
  4413                           postdec1	equ	0xFE5
  4414                           fsr1h	equ	0xFE2
  4415                           fsr1l	equ	0xFE1
  4416                           postinc2	equ	0xFDE
  4417                           postdec2	equ	0xFDD
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _editar_fecha_reloj_digital *****************
  4423 ;; Defined at:
  4424 ;;		line 637 in file "main.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;  anio_ingresa    2   14[BANK0 ] int 
  4429 ;;  mes_ingresad    2   12[BANK0 ] int 
  4430 ;;  dia_ingresad    2   10[BANK0 ] int 
  4431 ;;  posicion        2   16[BANK0 ] int 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4442 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4444 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4445 ;;Total ram usage:        9 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    7
  4448 ;; This function calls:
  4449 ;;		_Write_RTC
  4450 ;;		_covertir_valores_de_array_a_escala_decimal
  4451 ;;		_ingreso_numero
  4452 ;;		_lcd_gotoxy
  4453 ;;		_lcd_putrs
  4454 ;;		_setDiaMesAnio
  4455 ;; This function is called by:
  4456 ;;		_seleccionar_opcion
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text18
  4461  00F7D0                     __ptext18:
  4462                           	opt stack 0
  4463  00F7D0                     _editar_fecha_reloj_digital:
  4464                           	opt stack 18
  4465                           
  4466                           ;main.c: 638: int posicion = 0;
  4467                           
  4468                           ;incstack = 0
  4469  00F7D0  0E00               	movlw	0
  4470  00F7D2  0100               	movlb	0	; () banked
  4471  00F7D4  6FE4               	movwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),b
  4472  00F7D6  0E00               	movlw	0
  4473  00F7D8  6FE3               	movwf	editar_fecha_reloj_digital@posicion& (0+255),b
  4474                           
  4475                           ;main.c: 640: motivo_ingreso_de_numeros = 1;
  4476  00F7DA  0E00               	movlw	0
  4477  00F7DC  0100               	movlb	0	; () banked
  4478  00F7DE  6FA3               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  4479  00F7E0  0E01               	movlw	1
  4480  00F7E2  6FA2               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;main.c: 643: if (posicion == 0) {
  4484  00F7E4  0100               	movlb	0	; () banked
  4485  00F7E6  51E3               	movf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4486  00F7E8  0100               	movlb	0	; () banked
  4487  00F7EA  11E4               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4488  00F7EC  A4D8               	btfss	status,2,c
  4489  00F7EE  D06C               	goto	l437
  4490                           
  4491                           ; BSR set to: 0
  4492                           ;main.c: 644: lcd_gotoxy(1, 2);
  4493  00F7F0  0E02               	movlw	2
  4494  00F7F2  6E05               	movwf	lcd_gotoxy@y,c
  4495  00F7F4  0E01               	movlw	1
  4496  00F7F6  ECF9  F066         	call	_lcd_gotoxy
  4497                           
  4498                           ;main.c: 645: lcd_putrs("Set Day ");
  4499  00F7FA  0E3E               	movlw	low STR_43
  4500  00F7FC  6E09               	movwf	lcd_putrs@ptr,c
  4501  00F7FE  0EFF               	movlw	high STR_43
  4502  00F800  6E0A               	movwf	lcd_putrs@ptr+1,c
  4503  00F802  EC69  F068         	call	_lcd_putrs	;wreg free
  4504                           
  4505                           ;main.c: 646: numeros_ingresados = 0;
  4506  00F806  0E00               	movlw	0
  4507  00F808  0100               	movlb	0	; () banked
  4508  00F80A  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4509  00F80C  0E00               	movlw	0
  4510  00F80E  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;main.c: 647: int dia_ingresado = 0;
  4514  00F810  0E00               	movlw	0
  4515  00F812  0100               	movlb	0	; () banked
  4516  00F814  6FDE               	movwf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),b
  4517  00F816  0E00               	movlw	0
  4518  00F818  6FDD               	movwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),b
  4519                           
  4520                           ;main.c: 648: while (numeros_ingresados < 3) {
  4521  00F81A  D031               	goto	l442
  4522  00F81C                     
  4523                           ; BSR set to: 0
  4524                           ;main.c: 650: ingreso_numero();
  4525                           
  4526                           ; BSR set to: 0
  4527  00F81C  EC5B  F079         	call	_ingreso_numero	;wreg free
  4528                           
  4529                           ;main.c: 652: if (numeros_ingresados == 2) {
  4530  00F820  0E02               	movlw	2
  4531  00F822  0100               	movlb	0	; () banked
  4532  00F824  19A4               	xorwf	_numeros_ingresados& (0+255),w,b
  4533  00F826  0100               	movlb	0	; () banked
  4534  00F828  11A5               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4535  00F82A  A4D8               	btfss	status,2,c
  4536  00F82C  D028               	goto	l442
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;main.c: 653: dia_ingresado = covertir_valores_de_array_a_escala_decimal();
  4540  00F82E  EC00  F070         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4541  00F832  C05B  F0DD         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@dia_ingre
      +                          sado
  4542  00F836  C05C  F0DE         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@dia_ing
      +                          resado+1
  4543                           
  4544                           ;main.c: 654: if ((0 < dia_ingresado) && (dia_ingresado <= 31)) {
  4545  00F83A  0100               	movlb	0	; () banked
  4546  00F83C  BFDE               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  4547  00F83E  D01A               	goto	l441
  4548  00F840  0100               	movlb	0	; () banked
  4549  00F842  51DE               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  4550  00F844  E104               	bnz	u5930
  4551  00F846  0100               	movlb	0	; () banked
  4552  00F848  05DD               	decf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  4553  00F84A  A0D8               	btfss	status,0,c
  4554  00F84C  D013               	goto	l441
  4555  00F84E                     u5930:
  4556                           
  4557                           ; BSR set to: 0
  4558  00F84E  0100               	movlb	0	; () banked
  4559  00F850  BFDE               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  4560  00F852  D008               	goto	u5940
  4561  00F854  0100               	movlb	0	; () banked
  4562  00F856  51DE               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  4563  00F858  E10D               	bnz	l5071
  4564  00F85A  0E20               	movlw	32
  4565  00F85C  0100               	movlb	0	; () banked
  4566  00F85E  5DDD               	subwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  4567  00F860  B0D8               	btfsc	status,0,c
  4568  00F862  D008               	goto	l441
  4569  00F864                     u5940:
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;main.c: 655: dia = dia_ingresado;
  4573  00F864  C0DD  F0CB         	movff	editar_fecha_reloj_digital@dia_ingresado,_dia
  4574  00F868  C0DE  F0CC         	movff	editar_fecha_reloj_digital@dia_ingresado+1,_dia+1
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;main.c: 656: numeros_ingresados++;
  4578  00F86C  0100               	movlb	0	; () banked
  4579  00F86E  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
  4580  00F870  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4581                           
  4582                           ;main.c: 657: } else {
  4583  00F872  D005               	goto	l442
  4584  00F874                     l441:
  4585  00F874                     l5071:
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;main.c: 658: numeros_ingresados = 0;
  4589  00F874  0E00               	movlw	0
  4590  00F876  0100               	movlb	0	; () banked
  4591  00F878  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4592  00F87A  0E00               	movlw	0
  4593  00F87C  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4594  00F87E                     l442:
  4595                           
  4596                           ; BSR set to: 0
  4597                           
  4598                           ; BSR set to: 0
  4599                           
  4600                           ; BSR set to: 0
  4601                           
  4602                           ; BSR set to: 0
  4603  00F87E  0100               	movlb	0	; () banked
  4604  00F880  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4605  00F882  D7CC               	goto	l439
  4606  00F884  0100               	movlb	0	; () banked
  4607  00F886  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4608  00F888  E105               	bnz	l5075
  4609  00F88A  0E03               	movlw	3
  4610  00F88C  0100               	movlb	0	; () banked
  4611  00F88E  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  4612  00F890  A0D8               	btfss	status,0,c
  4613  00F892  D7C4               	goto	l439
  4614  00F894                     l5075:
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;main.c: 659: }
  4618                           ;main.c: 660: }
  4619                           ;main.c: 661: }
  4620                           ;main.c: 663: _delay((unsigned long)((50)*(8000000/4000.0)));
  4621  00F894  0E82               	movlw	130
  4622  00F896  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4623  00F898  0EDE               	movlw	222
  4624  00F89A                     u6967:
  4625  00F89A  2EE8               	decfsz	wreg,f,c
  4626  00F89C  D7FE               	bra	u6967
  4627  00F89E  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4628  00F8A0  D7FC               	bra	u6967
  4629                           
  4630                           ;main.c: 664: setDiaMesAnio();
  4631  00F8A2  EC89  F06B         	call	_setDiaMesAnio	;wreg free
  4632                           
  4633                           ;main.c: 665: _delay((unsigned long)((50)*(8000000/4000.0)));
  4634  00F8A6  0E82               	movlw	130
  4635  00F8A8  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4636  00F8AA  0EDE               	movlw	222
  4637  00F8AC                     u6977:
  4638  00F8AC  2EE8               	decfsz	wreg,f,c
  4639  00F8AE  D7FE               	bra	u6977
  4640  00F8B0  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4641  00F8B2  D7FC               	bra	u6977
  4642                           
  4643                           ;main.c: 666: posicion++;
  4644  00F8B4  0100               	movlb	0	; () banked
  4645  00F8B6  4BE3               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4646  00F8B8  2BE4               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;main.c: 667: _delay((unsigned long)((50)*(8000000/4000.0)));
  4650  00F8BA  0E82               	movlw	130
  4651  00F8BC  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4652  00F8BE  0EDE               	movlw	222
  4653  00F8C0                     u6987:
  4654  00F8C0  2EE8               	decfsz	wreg,f,c
  4655  00F8C2  D7FE               	bra	u6987
  4656  00F8C4  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4657  00F8C6  D7FC               	bra	u6987
  4658  00F8C8                     l437:
  4659                           
  4660                           ;main.c: 668: }
  4661                           ;main.c: 671: if (posicion == 1) {
  4662  00F8C8  0100               	movlb	0	; () banked
  4663  00F8CA  05E3               	decf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4664  00F8CC  0100               	movlb	0	; () banked
  4665  00F8CE  11E4               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4666  00F8D0  A4D8               	btfss	status,2,c
  4667  00F8D2  D06C               	goto	l444
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;main.c: 672: lcd_gotoxy(1, 2);
  4671  00F8D4  0E02               	movlw	2
  4672  00F8D6  6E05               	movwf	lcd_gotoxy@y,c
  4673  00F8D8  0E01               	movlw	1
  4674  00F8DA  ECF9  F066         	call	_lcd_gotoxy
  4675                           
  4676                           ;main.c: 673: lcd_putrs("Set Mth ");
  4677  00F8DE  0E35               	movlw	low STR_44
  4678  00F8E0  6E09               	movwf	lcd_putrs@ptr,c
  4679  00F8E2  0EFF               	movlw	high STR_44
  4680  00F8E4  6E0A               	movwf	lcd_putrs@ptr+1,c
  4681  00F8E6  EC69  F068         	call	_lcd_putrs	;wreg free
  4682                           
  4683                           ;main.c: 674: numeros_ingresados = 0;
  4684  00F8EA  0E00               	movlw	0
  4685  00F8EC  0100               	movlb	0	; () banked
  4686  00F8EE  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4687  00F8F0  0E00               	movlw	0
  4688  00F8F2  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;main.c: 675: int mes_ingresado = 0;
  4692  00F8F4  0E00               	movlw	0
  4693  00F8F6  0100               	movlb	0	; () banked
  4694  00F8F8  6FE0               	movwf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),b
  4695  00F8FA  0E00               	movlw	0
  4696  00F8FC  6FDF               	movwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),b
  4697                           
  4698                           ;main.c: 676: while (numeros_ingresados < 3) {
  4699  00F8FE  D031               	goto	l449
  4700  00F900                     
  4701                           ; BSR set to: 0
  4702                           ;main.c: 677: ingreso_numero();
  4703                           
  4704                           ; BSR set to: 0
  4705  00F900  EC5B  F079         	call	_ingreso_numero	;wreg free
  4706                           
  4707                           ;main.c: 678: if (numeros_ingresados == 2) {
  4708  00F904  0E02               	movlw	2
  4709  00F906  0100               	movlb	0	; () banked
  4710  00F908  19A4               	xorwf	_numeros_ingresados& (0+255),w,b
  4711  00F90A  0100               	movlb	0	; () banked
  4712  00F90C  11A5               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4713  00F90E  A4D8               	btfss	status,2,c
  4714  00F910  D028               	goto	l449
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;main.c: 679: mes_ingresado = covertir_valores_de_array_a_escala_decimal();
  4718  00F912  EC00  F070         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4719  00F916  C05B  F0DF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@mes_ingre
      +                          sado
  4720  00F91A  C05C  F0E0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@mes_ing
      +                          resado+1
  4721                           
  4722                           ;main.c: 680: if ((0 < mes_ingresado) && (mes_ingresado <= 12)) {
  4723  00F91E  0100               	movlb	0	; () banked
  4724  00F920  BFE0               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  4725  00F922  D01A               	goto	l448
  4726  00F924  0100               	movlb	0	; () banked
  4727  00F926  51E0               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  4728  00F928  E104               	bnz	u5980
  4729  00F92A  0100               	movlb	0	; () banked
  4730  00F92C  05DF               	decf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  4731  00F92E  A0D8               	btfss	status,0,c
  4732  00F930  D013               	goto	l448
  4733  00F932                     u5980:
  4734                           
  4735                           ; BSR set to: 0
  4736  00F932  0100               	movlb	0	; () banked
  4737  00F934  BFE0               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  4738  00F936  D008               	goto	u5990
  4739  00F938  0100               	movlb	0	; () banked
  4740  00F93A  51E0               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  4741  00F93C  E10D               	bnz	l5109
  4742  00F93E  0E0D               	movlw	13
  4743  00F940  0100               	movlb	0	; () banked
  4744  00F942  5DDF               	subwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  4745  00F944  B0D8               	btfsc	status,0,c
  4746  00F946  D008               	goto	l448
  4747  00F948                     u5990:
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;main.c: 681: mes = mes_ingresado;
  4751  00F948  C0DF  F0CF         	movff	editar_fecha_reloj_digital@mes_ingresado,_mes
  4752  00F94C  C0E0  F0D0         	movff	editar_fecha_reloj_digital@mes_ingresado+1,_mes+1
  4753                           
  4754                           ; BSR set to: 0
  4755                           ;main.c: 682: numeros_ingresados++;
  4756  00F950  0100               	movlb	0	; () banked
  4757  00F952  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
  4758  00F954  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4759                           
  4760                           ;main.c: 683: } else {
  4761  00F956  D005               	goto	l449
  4762  00F958                     l448:
  4763  00F958                     l5109:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;main.c: 684: numeros_ingresados = 0;
  4767  00F958  0E00               	movlw	0
  4768  00F95A  0100               	movlb	0	; () banked
  4769  00F95C  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4770  00F95E  0E00               	movlw	0
  4771  00F960  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4772  00F962                     l449:
  4773                           
  4774                           ; BSR set to: 0
  4775                           
  4776                           ; BSR set to: 0
  4777                           
  4778                           ; BSR set to: 0
  4779                           
  4780                           ; BSR set to: 0
  4781  00F962  0100               	movlb	0	; () banked
  4782  00F964  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4783  00F966  D7CC               	goto	l446
  4784  00F968  0100               	movlb	0	; () banked
  4785  00F96A  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4786  00F96C  E105               	bnz	l5113
  4787  00F96E  0E03               	movlw	3
  4788  00F970  0100               	movlb	0	; () banked
  4789  00F972  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  4790  00F974  A0D8               	btfss	status,0,c
  4791  00F976  D7C4               	goto	l446
  4792  00F978                     l5113:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;main.c: 685: }
  4796                           ;main.c: 686: }
  4797                           ;main.c: 687: }
  4798                           ;main.c: 689: _delay((unsigned long)((50)*(8000000/4000.0)));
  4799  00F978  0E82               	movlw	130
  4800  00F97A  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4801  00F97C  0EDE               	movlw	222
  4802  00F97E                     u6997:
  4803  00F97E  2EE8               	decfsz	wreg,f,c
  4804  00F980  D7FE               	bra	u6997
  4805  00F982  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4806  00F984  D7FC               	bra	u6997
  4807                           
  4808                           ;main.c: 690: setDiaMesAnio();
  4809  00F986  EC89  F06B         	call	_setDiaMesAnio	;wreg free
  4810                           
  4811                           ;main.c: 691: _delay((unsigned long)((50)*(8000000/4000.0)));
  4812  00F98A  0E82               	movlw	130
  4813  00F98C  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4814  00F98E  0EDE               	movlw	222
  4815  00F990                     u7007:
  4816  00F990  2EE8               	decfsz	wreg,f,c
  4817  00F992  D7FE               	bra	u7007
  4818  00F994  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4819  00F996  D7FC               	bra	u7007
  4820                           
  4821                           ;main.c: 692: posicion++;
  4822  00F998  0100               	movlb	0	; () banked
  4823  00F99A  4BE3               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4824  00F99C  2BE4               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;main.c: 693: _delay((unsigned long)((50)*(8000000/4000.0)));
  4828  00F99E  0E82               	movlw	130
  4829  00F9A0  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4830  00F9A2  0EDE               	movlw	222
  4831  00F9A4                     u7017:
  4832  00F9A4  2EE8               	decfsz	wreg,f,c
  4833  00F9A6  D7FE               	bra	u7017
  4834  00F9A8  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4835  00F9AA  D7FC               	bra	u7017
  4836  00F9AC                     l444:
  4837                           
  4838                           ;main.c: 694: }
  4839                           ;main.c: 697: if (posicion == 2) {
  4840  00F9AC  0E02               	movlw	2
  4841  00F9AE  0100               	movlb	0	; () banked
  4842  00F9B0  19E3               	xorwf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4843  00F9B2  0100               	movlb	0	; () banked
  4844  00F9B4  11E4               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4845  00F9B6  A4D8               	btfss	status,2,c
  4846  00F9B8  D065               	goto	l451
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;main.c: 698: lcd_gotoxy(1, 2);
  4850  00F9BA  0E02               	movlw	2
  4851  00F9BC  6E05               	movwf	lcd_gotoxy@y,c
  4852  00F9BE  0E01               	movlw	1
  4853  00F9C0  ECF9  F066         	call	_lcd_gotoxy
  4854                           
  4855                           ;main.c: 699: lcd_putrs("Set Year");
  4856  00F9C4  0E59               	movlw	low STR_45
  4857  00F9C6  6E09               	movwf	lcd_putrs@ptr,c
  4858  00F9C8  0EFF               	movlw	high STR_45
  4859  00F9CA  6E0A               	movwf	lcd_putrs@ptr+1,c
  4860  00F9CC  EC69  F068         	call	_lcd_putrs	;wreg free
  4861                           
  4862                           ;main.c: 700: numeros_ingresados = 0;
  4863  00F9D0  0E00               	movlw	0
  4864  00F9D2  0100               	movlb	0	; () banked
  4865  00F9D4  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4866  00F9D6  0E00               	movlw	0
  4867  00F9D8  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;main.c: 701: int anio_ingresado = 0;
  4871  00F9DA  0E00               	movlw	0
  4872  00F9DC  0100               	movlb	0	; () banked
  4873  00F9DE  6FE2               	movwf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),b
  4874  00F9E0  0E00               	movlw	0
  4875  00F9E2  6FE1               	movwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),b
  4876                           
  4877                           ;main.c: 702: while (numeros_ingresados < 3) {
  4878  00F9E4  D02A               	goto	l456
  4879  00F9E6                     
  4880                           ; BSR set to: 0
  4881                           ;main.c: 703: ingreso_numero();
  4882                           
  4883                           ; BSR set to: 0
  4884  00F9E6  EC5B  F079         	call	_ingreso_numero	;wreg free
  4885                           
  4886                           ;main.c: 704: if (numeros_ingresados == 2) {
  4887  00F9EA  0E02               	movlw	2
  4888  00F9EC  0100               	movlb	0	; () banked
  4889  00F9EE  19A4               	xorwf	_numeros_ingresados& (0+255),w,b
  4890  00F9F0  0100               	movlb	0	; () banked
  4891  00F9F2  11A5               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4892  00F9F4  A4D8               	btfss	status,2,c
  4893  00F9F6  D021               	goto	l456
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;main.c: 705: anio_ingresado = covertir_valores_de_array_a_escala_decimal();
  4897  00F9F8  EC00  F070         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4898  00F9FC  C05B  F0E1         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@anio_ingr
      +                          esado
  4899  00FA00  C05C  F0E2         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@anio_in
      +                          gresado+1
  4900                           
  4901                           ;main.c: 706: if ((0 <= anio_ingresado) && (anio_ingresado <= 99)) {
  4902  00FA04  0100               	movlb	0	; () banked
  4903  00FA06  BFE2               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4904  00FA08  D013               	goto	l455
  4905                           
  4906                           ; BSR set to: 0
  4907  00FA0A  0100               	movlb	0	; () banked
  4908  00FA0C  BFE2               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4909  00FA0E  D008               	goto	u6040
  4910  00FA10  0100               	movlb	0	; () banked
  4911  00FA12  51E2               	movf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),w,b
  4912  00FA14  E10D               	bnz	l5147
  4913  00FA16  0E64               	movlw	100
  4914  00FA18  0100               	movlb	0	; () banked
  4915  00FA1A  5DE1               	subwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),w,b
  4916  00FA1C  B0D8               	btfsc	status,0,c
  4917  00FA1E  D008               	goto	l455
  4918  00FA20                     u6040:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;main.c: 707: anio = anio_ingresado;
  4922  00FA20  C0E1  F0D1         	movff	editar_fecha_reloj_digital@anio_ingresado,_anio
  4923  00FA24  C0E2  F0D2         	movff	editar_fecha_reloj_digital@anio_ingresado+1,_anio+1
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;main.c: 708: numeros_ingresados++;
  4927  00FA28  0100               	movlb	0	; () banked
  4928  00FA2A  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
  4929  00FA2C  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4930                           
  4931                           ;main.c: 709: } else {
  4932  00FA2E  D005               	goto	l456
  4933  00FA30                     l455:
  4934  00FA30                     l5147:
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;main.c: 710: numeros_ingresados = 0;
  4938  00FA30  0E00               	movlw	0
  4939  00FA32  0100               	movlb	0	; () banked
  4940  00FA34  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  4941  00FA36  0E00               	movlw	0
  4942  00FA38  6FA4               	movwf	_numeros_ingresados& (0+255),b
  4943  00FA3A                     l456:
  4944                           
  4945                           ; BSR set to: 0
  4946                           
  4947                           ; BSR set to: 0
  4948                           
  4949                           ; BSR set to: 0
  4950                           
  4951                           ; BSR set to: 0
  4952  00FA3A  0100               	movlb	0	; () banked
  4953  00FA3C  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4954  00FA3E  D7D3               	goto	l453
  4955  00FA40  0100               	movlb	0	; () banked
  4956  00FA42  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4957  00FA44  E105               	bnz	l5151
  4958  00FA46  0E03               	movlw	3
  4959  00FA48  0100               	movlb	0	; () banked
  4960  00FA4A  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  4961  00FA4C  A0D8               	btfss	status,0,c
  4962  00FA4E  D7CB               	goto	l453
  4963  00FA50                     l5151:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;main.c: 711: }
  4967                           ;main.c: 712: }
  4968                           ;main.c: 713: }
  4969                           ;main.c: 715: _delay((unsigned long)((50)*(8000000/4000.0)));
  4970  00FA50  0E82               	movlw	130
  4971  00FA52  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4972  00FA54  0EDE               	movlw	222
  4973  00FA56                     u7027:
  4974  00FA56  2EE8               	decfsz	wreg,f,c
  4975  00FA58  D7FE               	bra	u7027
  4976  00FA5A  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4977  00FA5C  D7FC               	bra	u7027
  4978                           
  4979                           ;main.c: 716: setDiaMesAnio();
  4980  00FA5E  EC89  F06B         	call	_setDiaMesAnio	;wreg free
  4981                           
  4982                           ;main.c: 717: _delay((unsigned long)((50)*(8000000/4000.0)));
  4983  00FA62  0E82               	movlw	130
  4984  00FA64  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4985  00FA66  0EDE               	movlw	222
  4986  00FA68                     u7037:
  4987  00FA68  2EE8               	decfsz	wreg,f,c
  4988  00FA6A  D7FE               	bra	u7037
  4989  00FA6C  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4990  00FA6E  D7FC               	bra	u7037
  4991                           
  4992                           ;main.c: 718: posicion++;
  4993  00FA70  0100               	movlb	0	; () banked
  4994  00FA72  4BE3               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4995  00FA74  2BE4               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;main.c: 719: _delay((unsigned long)((50)*(8000000/4000.0)));
  4999  00FA76  0E82               	movlw	130
  5000  00FA78  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  5001  00FA7A  0EDE               	movlw	222
  5002  00FA7C                     u7047:
  5003  00FA7C  2EE8               	decfsz	wreg,f,c
  5004  00FA7E  D7FE               	bra	u7047
  5005  00FA80  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  5006  00FA82  D7FC               	bra	u7047
  5007  00FA84                     l451:
  5008                           
  5009                           ;main.c: 720: }
  5010                           ;main.c: 721: Write_RTC();
  5011  00FA84  ECB4  F075         	call	_Write_RTC	;wreg free
  5012                           
  5013                           ;main.c: 722: motivo_ingreso_de_numeros = 0;
  5014  00FA88  0E00               	movlw	0
  5015  00FA8A  0100               	movlb	0	; () banked
  5016  00FA8C  6FA3               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  5017  00FA8E  0E00               	movlw	0
  5018  00FA90  6FA2               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;main.c: 723: numeros_ingresados = 0;
  5022  00FA92  0E00               	movlw	0
  5023  00FA94  0100               	movlb	0	; () banked
  5024  00FA96  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  5025  00FA98  0E00               	movlw	0
  5026  00FA9A  6FA4               	movwf	_numeros_ingresados& (0+255),b
  5027                           
  5028                           ; BSR set to: 0
  5029  00FA9C  0012               	return		;funcret
  5030  00FA9E                     __end_of_editar_fecha_reloj_digital:
  5031                           	opt stack 0
  5032                           tblptru	equ	0xFF8
  5033                           tblptrh	equ	0xFF7
  5034                           tblptrl	equ	0xFF6
  5035                           tablat	equ	0xFF5
  5036                           prodh	equ	0xFF4
  5037                           prodl	equ	0xFF3
  5038                           postinc0	equ	0xFEE
  5039                           wreg	equ	0xFE8
  5040                           postinc1	equ	0xFE6
  5041                           postdec1	equ	0xFE5
  5042                           fsr1h	equ	0xFE2
  5043                           fsr1l	equ	0xFE1
  5044                           postinc2	equ	0xFDE
  5045                           postdec2	equ	0xFDD
  5046                           fsr2h	equ	0xFDA
  5047                           fsr2l	equ	0xFD9
  5048                           status	equ	0xFD8
  5049                           
  5050 ;; *************** function _setDiaMesAnio *****************
  5051 ;; Defined at:
  5052 ;;		line 75 in file "main.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    5
  5073 ;; This function calls:
  5074 ;;		_Write_RTC
  5075 ;;		_lcd_gotoxy
  5076 ;;		_lcd_putrs
  5077 ;;		_sprintf
  5078 ;; This function is called by:
  5079 ;;		_set_reloj_digital
  5080 ;;		_editar_fecha_reloj_digital
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text19
  5085  00D712                     __ptext19:
  5086                           	opt stack 0
  5087  00D712                     _setDiaMesAnio:
  5088                           	opt stack 23
  5089                           
  5090                           ;main.c: 76: if (dia > 31) {
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;incstack = 0
  5094  00D712  0100               	movlb	0	; () banked
  5095  00D714  BFCC               	btfsc	(_dia+1)& (0+255),7,b
  5096  00D716  D00F               	goto	l189
  5097  00D718  0100               	movlb	0	; () banked
  5098  00D71A  51CC               	movf	(_dia+1)& (0+255),w,b
  5099  00D71C  E105               	bnz	u5030
  5100  00D71E  0E20               	movlw	32
  5101  00D720  0100               	movlb	0	; () banked
  5102  00D722  5DCB               	subwf	_dia& (0+255),w,b
  5103  00D724  A0D8               	btfss	status,0,c
  5104  00D726  D007               	goto	l189
  5105  00D728                     u5030:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;main.c: 77: dia = 1;
  5109  00D728  0E00               	movlw	0
  5110  00D72A  0100               	movlb	0	; () banked
  5111  00D72C  6FCC               	movwf	(_dia+1)& (0+255),b
  5112  00D72E  0E01               	movlw	1
  5113  00D730  6FCB               	movwf	_dia& (0+255),b
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;main.c: 78: Write_RTC();
  5117  00D732  ECB4  F075         	call	_Write_RTC	;wreg free
  5118  00D736                     l189:
  5119                           
  5120                           ;main.c: 79: }
  5121                           ;main.c: 81: if (mes > 12) {
  5122  00D736  0100               	movlb	0	; () banked
  5123  00D738  BFD0               	btfsc	(_mes+1)& (0+255),7,b
  5124  00D73A  D00F               	goto	l190
  5125  00D73C  0100               	movlb	0	; () banked
  5126  00D73E  51D0               	movf	(_mes+1)& (0+255),w,b
  5127  00D740  E105               	bnz	u5040
  5128  00D742  0E0D               	movlw	13
  5129  00D744  0100               	movlb	0	; () banked
  5130  00D746  5DCF               	subwf	_mes& (0+255),w,b
  5131  00D748  A0D8               	btfss	status,0,c
  5132  00D74A  D007               	goto	l190
  5133  00D74C                     u5040:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;main.c: 82: mes = 1;
  5137  00D74C  0E00               	movlw	0
  5138  00D74E  0100               	movlb	0	; () banked
  5139  00D750  6FD0               	movwf	(_mes+1)& (0+255),b
  5140  00D752  0E01               	movlw	1
  5141  00D754  6FCF               	movwf	_mes& (0+255),b
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;main.c: 83: Write_RTC();
  5145  00D756  ECB4  F075         	call	_Write_RTC	;wreg free
  5146  00D75A                     l190:
  5147                           
  5148                           ;main.c: 84: }
  5149                           ;main.c: 86: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  5150  00D75A  0E14               	movlw	low _buffer2
  5151  00D75C  6E22               	movwf	sprintf@sp,c
  5152  00D75E  0E01               	movlw	high _buffer2
  5153  00D760  6E23               	movwf	sprintf@sp+1,c
  5154  00D762  0E05               	movlw	low STR_8
  5155  00D764  6E24               	movwf	sprintf@f,c
  5156  00D766  0EFF               	movlw	high STR_8
  5157  00D768  6E25               	movwf	sprintf@f+1,c
  5158  00D76A  C0CB  F026         	movff	_dia,?_sprintf+4
  5159  00D76E  C0CC  F027         	movff	_dia+1,?_sprintf+5
  5160  00D772  C0CF  F028         	movff	_mes,?_sprintf+6
  5161  00D776  C0D0  F029         	movff	_mes+1,?_sprintf+7
  5162  00D77A  C0D1  F02A         	movff	_anio,?_sprintf+8
  5163  00D77E  C0D2  F02B         	movff	_anio+1,?_sprintf+9
  5164  00D782  EC4F  F07D         	call	_sprintf	;wreg free
  5165                           
  5166                           ;main.c: 87: lcd_gotoxy(9, 1);
  5167  00D786  0E01               	movlw	1
  5168  00D788  6E05               	movwf	lcd_gotoxy@y,c
  5169  00D78A  0E09               	movlw	9
  5170  00D78C  ECF9  F066         	call	_lcd_gotoxy
  5171                           
  5172                           ;main.c: 88: lcd_putrs(buffer2);
  5173  00D790  0E14               	movlw	low _buffer2
  5174  00D792  6E09               	movwf	lcd_putrs@ptr,c
  5175  00D794  0E01               	movlw	high _buffer2
  5176  00D796  6E0A               	movwf	lcd_putrs@ptr+1,c
  5177  00D798  EC69  F068         	call	_lcd_putrs	;wreg free
  5178  00D79C  0012               	return		;funcret
  5179  00D79E                     __end_of_setDiaMesAnio:
  5180                           	opt stack 0
  5181                           tblptru	equ	0xFF8
  5182                           tblptrh	equ	0xFF7
  5183                           tblptrl	equ	0xFF6
  5184                           tablat	equ	0xFF5
  5185                           prodh	equ	0xFF4
  5186                           prodl	equ	0xFF3
  5187                           postinc0	equ	0xFEE
  5188                           wreg	equ	0xFE8
  5189                           postinc1	equ	0xFE6
  5190                           postdec1	equ	0xFE5
  5191                           fsr1h	equ	0xFE2
  5192                           fsr1l	equ	0xFE1
  5193                           postinc2	equ	0xFDE
  5194                           postdec2	equ	0xFDD
  5195                           fsr2h	equ	0xFDA
  5196                           fsr2l	equ	0xFD9
  5197                           status	equ	0xFD8
  5198                           
  5199 ;; *************** function _Write_RTC *****************
  5200 ;; Defined at:
  5201 ;;		line 75 in file "../../headers\unmc_rtcc_01.h"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    2
  5222 ;; This function calls:
  5223 ;;		_RtccWrOn
  5224 ;;		_RtccWriteDate
  5225 ;;		_RtccWriteTime
  5226 ;;		___awdiv
  5227 ;; This function is called by:
  5228 ;;		_setDiaMesAnio
  5229 ;;		_setHoraMinutoSegundo
  5230 ;;		_editar_fecha_reloj_digital
  5231 ;;		_editar_hora_reloj_digital
  5232 ;;		_setup
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text20
  5237  00EB68                     __ptext20:
  5238                           	opt stack 0
  5239  00EB68                     _Write_RTC:
  5240                           	opt stack 25
  5241                           
  5242                           ;headers\unmc_rtcc_01.h: 77: RtccWrOn();
  5243                           
  5244                           ;incstack = 0
  5245  00EB68  ECCA  F066         	call	_RtccWrOn	;wreg free
  5246                           
  5247                           ;headers\unmc_rtcc_01.h: 79: PIE3bits.RTCCIE=1;
  5248  00EB6C  80A3               	bsf	4003,0,c	;volatile
  5249                           
  5250                           ;headers\unmc_rtcc_01.h: 80: segundo_d=segundo/10;
  5251  00EB6E  C0A6  F001         	movff	_segundo,___awdiv@dividend
  5252  00EB72  C0A7  F002         	movff	_segundo+1,___awdiv@dividend+1
  5253  00EB76  0E00               	movlw	0
  5254  00EB78  6E04               	movwf	___awdiv@divisor+1,c
  5255  00EB7A  0E0A               	movlw	10
  5256  00EB7C  6E03               	movwf	___awdiv@divisor,c
  5257  00EB7E  ECBE  F06A         	call	___awdiv	;wreg free
  5258  00EB82  5001               	movf	?___awdiv,w,c
  5259  00EB84  0100               	movlb	0	; () banked
  5260  00EB86  6FF4               	movwf	_segundo_d& (0+255),b
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;headers\unmc_rtcc_01.h: 81: segundo_u=segundo-segundo_d*10;
  5264  00EB88  0100               	movlb	0	; () banked
  5265  00EB8A  51F4               	movf	_segundo_d& (0+255),w,b
  5266  00EB8C  0D0A               	mullw	10
  5267  00EB8E  50F3               	movf	prodl,w,c
  5268  00EB90  0800               	sublw	0
  5269  00EB92  0100               	movlb	0	; () banked
  5270  00EB94  25A6               	addwf	_segundo& (0+255),w,b
  5271  00EB96  0100               	movlb	0	; () banked
  5272  00EB98  6FF5               	movwf	_segundo_u& (0+255),b
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;headers\unmc_rtcc_01.h: 82: RtccTime.f.sec =segundo_d*16+segundo_u;
  5276  00EB9A  0100               	movlb	0	; () banked
  5277  00EB9C  51F4               	movf	_segundo_d& (0+255),w,b
  5278  00EB9E  0D10               	mullw	16
  5279  00EBA0  50F3               	movf	prodl,w,c
  5280  00EBA2  0100               	movlb	0	; () banked
  5281  00EBA4  25F5               	addwf	_segundo_u& (0+255),w,b
  5282  00EBA6  0100               	movlb	0	; () banked
  5283  00EBA8  6FBA               	movwf	(_RtccTime+1)& (0+255),b
  5284                           
  5285                           ; BSR set to: 0
  5286                           ;headers\unmc_rtcc_01.h: 83: minuto_d=minuto/10;
  5287  00EBAA  C0C7  F001         	movff	_minuto,___awdiv@dividend
  5288  00EBAE  C0C8  F002         	movff	_minuto+1,___awdiv@dividend+1
  5289  00EBB2  0E00               	movlw	0
  5290  00EBB4  6E04               	movwf	___awdiv@divisor+1,c
  5291  00EBB6  0E0A               	movlw	10
  5292  00EBB8  6E03               	movwf	___awdiv@divisor,c
  5293  00EBBA  ECBE  F06A         	call	___awdiv	;wreg free
  5294  00EBBE  5001               	movf	?___awdiv,w,c
  5295  00EBC0  0100               	movlb	0	; () banked
  5296  00EBC2  6FF2               	movwf	_minuto_d& (0+255),b
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;headers\unmc_rtcc_01.h: 84: minuto_u=minuto-minuto_d*10;
  5300  00EBC4  0100               	movlb	0	; () banked
  5301  00EBC6  51F2               	movf	_minuto_d& (0+255),w,b
  5302  00EBC8  0D0A               	mullw	10
  5303  00EBCA  50F3               	movf	prodl,w,c
  5304  00EBCC  0800               	sublw	0
  5305  00EBCE  0100               	movlb	0	; () banked
  5306  00EBD0  25C7               	addwf	_minuto& (0+255),w,b
  5307  00EBD2  0100               	movlb	0	; () banked
  5308  00EBD4  6FF3               	movwf	_minuto_u& (0+255),b
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;headers\unmc_rtcc_01.h: 85: RtccTime.f.min =minuto_d*16+minuto_u;
  5312  00EBD6  0100               	movlb	0	; () banked
  5313  00EBD8  51F2               	movf	_minuto_d& (0+255),w,b
  5314  00EBDA  0D10               	mullw	16
  5315  00EBDC  50F3               	movf	prodl,w,c
  5316  00EBDE  0100               	movlb	0	; () banked
  5317  00EBE0  25F3               	addwf	_minuto_u& (0+255),w,b
  5318  00EBE2  0100               	movlb	0	; () banked
  5319  00EBE4  6FBB               	movwf	(_RtccTime+2)& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;headers\unmc_rtcc_01.h: 86: hora_d=hora/10;
  5323  00EBE6  C0C9  F001         	movff	_hora,___awdiv@dividend
  5324  00EBEA  C0CA  F002         	movff	_hora+1,___awdiv@dividend+1
  5325  00EBEE  0E00               	movlw	0
  5326  00EBF0  6E04               	movwf	___awdiv@divisor+1,c
  5327  00EBF2  0E0A               	movlw	10
  5328  00EBF4  6E03               	movwf	___awdiv@divisor,c
  5329  00EBF6  ECBE  F06A         	call	___awdiv	;wreg free
  5330  00EBFA  5001               	movf	?___awdiv,w,c
  5331  00EBFC  0100               	movlb	0	; () banked
  5332  00EBFE  6FF0               	movwf	_hora_d& (0+255),b
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;headers\unmc_rtcc_01.h: 87: hora_u=hora-hora_d*10;
  5336  00EC00  0100               	movlb	0	; () banked
  5337  00EC02  51F0               	movf	_hora_d& (0+255),w,b
  5338  00EC04  0D0A               	mullw	10
  5339  00EC06  50F3               	movf	prodl,w,c
  5340  00EC08  0800               	sublw	0
  5341  00EC0A  0100               	movlb	0	; () banked
  5342  00EC0C  25C9               	addwf	_hora& (0+255),w,b
  5343  00EC0E  0100               	movlb	0	; () banked
  5344  00EC10  6FF1               	movwf	_hora_u& (0+255),b
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;headers\unmc_rtcc_01.h: 88: RtccTime.f.hour=hora_d*16+hora_u;
  5348  00EC12  0100               	movlb	0	; () banked
  5349  00EC14  51F0               	movf	_hora_d& (0+255),w,b
  5350  00EC16  0D10               	mullw	16
  5351  00EC18  50F3               	movf	prodl,w,c
  5352  00EC1A  0100               	movlb	0	; () banked
  5353  00EC1C  25F1               	addwf	_hora_u& (0+255),w,b
  5354  00EC1E  0100               	movlb	0	; () banked
  5355  00EC20  6FBC               	movwf	(_RtccTime+3)& (0+255),b
  5356                           
  5357                           ; BSR set to: 0
  5358                           ;headers\unmc_rtcc_01.h: 89: anio_d=anio/10;
  5359  00EC22  C0D1  F001         	movff	_anio,___awdiv@dividend
  5360  00EC26  C0D2  F002         	movff	_anio+1,___awdiv@dividend+1
  5361  00EC2A  0E00               	movlw	0
  5362  00EC2C  6E04               	movwf	___awdiv@divisor+1,c
  5363  00EC2E  0E0A               	movlw	10
  5364  00EC30  6E03               	movwf	___awdiv@divisor,c
  5365  00EC32  ECBE  F06A         	call	___awdiv	;wreg free
  5366  00EC36  5001               	movf	?___awdiv,w,c
  5367  00EC38  0100               	movlb	0	; () banked
  5368  00EC3A  6FE9               	movwf	_anio_d& (0+255),b
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;headers\unmc_rtcc_01.h: 90: anio_u=anio-anio_d*10;
  5372  00EC3C  0100               	movlb	0	; () banked
  5373  00EC3E  51E9               	movf	_anio_d& (0+255),w,b
  5374  00EC40  0D0A               	mullw	10
  5375  00EC42  50F3               	movf	prodl,w,c
  5376  00EC44  0800               	sublw	0
  5377  00EC46  0100               	movlb	0	; () banked
  5378  00EC48  25D1               	addwf	_anio& (0+255),w,b
  5379  00EC4A  0100               	movlb	0	; () banked
  5380  00EC4C  6FEA               	movwf	_anio_u& (0+255),b
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;headers\unmc_rtcc_01.h: 91: RtccDate.f.year=anio_d*16+anio_u;
  5384  00EC4E  0100               	movlb	0	; () banked
  5385  00EC50  51E9               	movf	_anio_d& (0+255),w,b
  5386  00EC52  0D10               	mullw	16
  5387  00EC54  50F3               	movf	prodl,w,c
  5388  00EC56  0100               	movlb	0	; () banked
  5389  00EC58  25EA               	addwf	_anio_u& (0+255),w,b
  5390  00EC5A  0100               	movlb	0	; () banked
  5391  00EC5C  6FB8               	movwf	(_RtccDate+3)& (0+255),b
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;headers\unmc_rtcc_01.h: 92: mes_d=mes/10;
  5395  00EC5E  C0CF  F001         	movff	_mes,___awdiv@dividend
  5396  00EC62  C0D0  F002         	movff	_mes+1,___awdiv@dividend+1
  5397  00EC66  0E00               	movlw	0
  5398  00EC68  6E04               	movwf	___awdiv@divisor+1,c
  5399  00EC6A  0E0A               	movlw	10
  5400  00EC6C  6E03               	movwf	___awdiv@divisor,c
  5401  00EC6E  ECBE  F06A         	call	___awdiv	;wreg free
  5402  00EC72  5001               	movf	?___awdiv,w,c
  5403  00EC74  0100               	movlb	0	; () banked
  5404  00EC76  6FEC               	movwf	_mes_d& (0+255),b
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;headers\unmc_rtcc_01.h: 93: mes_u=mes-mes_d*10;
  5408  00EC78  0100               	movlb	0	; () banked
  5409  00EC7A  51EC               	movf	_mes_d& (0+255),w,b
  5410  00EC7C  0D0A               	mullw	10
  5411  00EC7E  50F3               	movf	prodl,w,c
  5412  00EC80  0800               	sublw	0
  5413  00EC82  0100               	movlb	0	; () banked
  5414  00EC84  25CF               	addwf	_mes& (0+255),w,b
  5415  00EC86  0100               	movlb	0	; () banked
  5416  00EC88  6FED               	movwf	_mes_u& (0+255),b
  5417                           
  5418                           ; BSR set to: 0
  5419                           ;headers\unmc_rtcc_01.h: 94: RtccDate.f.mon=mes_d*16+mes_u;
  5420  00EC8A  0100               	movlb	0	; () banked
  5421  00EC8C  51EC               	movf	_mes_d& (0+255),w,b
  5422  00EC8E  0D10               	mullw	16
  5423  00EC90  50F3               	movf	prodl,w,c
  5424  00EC92  0100               	movlb	0	; () banked
  5425  00EC94  25ED               	addwf	_mes_u& (0+255),w,b
  5426  00EC96  0100               	movlb	0	; () banked
  5427  00EC98  6FB7               	movwf	(_RtccDate+2)& (0+255),b
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;headers\unmc_rtcc_01.h: 95: fecha_d=dia/10;
  5431  00EC9A  C0CB  F001         	movff	_dia,___awdiv@dividend
  5432  00EC9E  C0CC  F002         	movff	_dia+1,___awdiv@dividend+1
  5433  00ECA2  0E00               	movlw	0
  5434  00ECA4  6E04               	movwf	___awdiv@divisor+1,c
  5435  00ECA6  0E0A               	movlw	10
  5436  00ECA8  6E03               	movwf	___awdiv@divisor,c
  5437  00ECAA  ECBE  F06A         	call	___awdiv	;wreg free
  5438  00ECAE  5001               	movf	?___awdiv,w,c
  5439  00ECB0  0100               	movlb	0	; () banked
  5440  00ECB2  6FEE               	movwf	_fecha_d& (0+255),b
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;headers\unmc_rtcc_01.h: 96: fecha_u=dia-fecha_d*10;
  5444  00ECB4  0100               	movlb	0	; () banked
  5445  00ECB6  51EE               	movf	_fecha_d& (0+255),w,b
  5446  00ECB8  0D0A               	mullw	10
  5447  00ECBA  50F3               	movf	prodl,w,c
  5448  00ECBC  0800               	sublw	0
  5449  00ECBE  0100               	movlb	0	; () banked
  5450  00ECC0  25CB               	addwf	_dia& (0+255),w,b
  5451  00ECC2  0100               	movlb	0	; () banked
  5452  00ECC4  6FEF               	movwf	_fecha_u& (0+255),b
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;headers\unmc_rtcc_01.h: 97: RtccDate.f.mday=fecha_d*16+fecha_u;
  5456  00ECC6  0100               	movlb	0	; () banked
  5457  00ECC8  51EE               	movf	_fecha_d& (0+255),w,b
  5458  00ECCA  0D10               	mullw	16
  5459  00ECCC  50F3               	movf	prodl,w,c
  5460  00ECCE  0100               	movlb	0	; () banked
  5461  00ECD0  25EF               	addwf	_fecha_u& (0+255),w,b
  5462  00ECD2  0100               	movlb	0	; () banked
  5463  00ECD4  6FB6               	movwf	(_RtccDate+1)& (0+255),b
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;headers\unmc_rtcc_01.h: 98: dia_semana=diasem;
  5467  00ECD6  C0CD  F0EB         	movff	_diasem,_dia_semana
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;headers\unmc_rtcc_01.h: 99: RtccDate.f.wday =diasem;
  5471  00ECDA  C0CD  F0B5         	movff	_diasem,_RtccDate
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;headers\unmc_rtcc_01.h: 100: RtccWriteTime(&RtccTime,1);
  5475  00ECDE  0EB9               	movlw	low _RtccTime
  5476  00ECE0  6E01               	movwf	RtccWriteTime@pTm,c
  5477  00ECE2  0E00               	movlw	high _RtccTime
  5478  00ECE4  6E02               	movwf	RtccWriteTime@pTm+1,c
  5479  00ECE6  0E01               	movlw	1
  5480  00ECE8  6E03               	movwf	RtccWriteTime@di,c
  5481  00ECEA  ECAE  F072         	call	_RtccWriteTime	;wreg free
  5482                           
  5483                           ;headers\unmc_rtcc_01.h: 101: RtccWriteDate(&RtccDate,1);
  5484  00ECEE  0EB5               	movlw	low _RtccDate
  5485  00ECF0  6E01               	movwf	RtccWriteDate@pDt,c
  5486  00ECF2  0E00               	movlw	high _RtccDate
  5487  00ECF4  6E02               	movwf	RtccWriteDate@pDt+1,c
  5488  00ECF6  0E01               	movlw	1
  5489  00ECF8  6E03               	movwf	RtccWriteDate@di,c
  5490  00ECFA  ECBB  F073         	call	_RtccWriteDate	;wreg free
  5491                           
  5492                           ;headers\unmc_rtcc_01.h: 102: (RTCCFGbits.RTCEN=1);
  5493  00ECFE  010F               	movlb	15	; () banked
  5494  00ED00  8F3F               	bsf	63,7,b	;volatile
  5495                           
  5496                           ; BSR set to: 15
  5497  00ED02  0012               	return		;funcret
  5498  00ED04                     __end_of_Write_RTC:
  5499                           	opt stack 0
  5500                           tblptru	equ	0xFF8
  5501                           tblptrh	equ	0xFF7
  5502                           tblptrl	equ	0xFF6
  5503                           tablat	equ	0xFF5
  5504                           prodh	equ	0xFF4
  5505                           prodl	equ	0xFF3
  5506                           postinc0	equ	0xFEE
  5507                           wreg	equ	0xFE8
  5508                           postinc1	equ	0xFE6
  5509                           postdec1	equ	0xFE5
  5510                           fsr1h	equ	0xFE2
  5511                           fsr1l	equ	0xFE1
  5512                           postinc2	equ	0xFDE
  5513                           postdec2	equ	0xFDD
  5514                           fsr2h	equ	0xFDA
  5515                           fsr2l	equ	0xFD9
  5516                           status	equ	0xFD8
  5517                           
  5518 ;; *************** function ___awdiv *****************
  5519 ;; Defined at:
  5520 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  dividend        2    0[COMRAM] int 
  5523 ;;  divisor         2    2[COMRAM] int 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  quotient        2    6[COMRAM] int 
  5526 ;;  sign            1    5[COMRAM] unsigned char 
  5527 ;;  counter         1    4[COMRAM] unsigned char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  2    0[COMRAM] int 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5541 ;;Total ram usage:        8 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; This function calls:
  5544 ;;		Nothing
  5545 ;; This function is called by:
  5546 ;;		_Write_RTC
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text21
  5551  00D57C                     __ptext21:
  5552                           	opt stack 0
  5553  00D57C                     ___awdiv:
  5554                           	opt stack 26
  5555                           
  5556                           ; BSR set to: 15
  5557                           ;incstack = 0
  5558  00D57C  0E00               	movlw	0
  5559  00D57E  6E06               	movwf	___awdiv@sign,c
  5560  00D580  AE04               	btfss	___awdiv@divisor+1,7,c
  5561  00D582  D006               	goto	l876
  5562  00D584  6C03               	negf	___awdiv@divisor,c
  5563  00D586  1E04               	comf	___awdiv@divisor+1,f,c
  5564  00D588  B0D8               	btfsc	status,0,c
  5565  00D58A  2A04               	incf	___awdiv@divisor+1,f,c
  5566  00D58C  0E01               	movlw	1
  5567  00D58E  6E06               	movwf	___awdiv@sign,c
  5568  00D590                     l876:
  5569  00D590  AE02               	btfss	___awdiv@dividend+1,7,c
  5570  00D592  D006               	goto	l877
  5571  00D594  6C01               	negf	___awdiv@dividend,c
  5572  00D596  1E02               	comf	___awdiv@dividend+1,f,c
  5573  00D598  B0D8               	btfsc	status,0,c
  5574  00D59A  2A02               	incf	___awdiv@dividend+1,f,c
  5575  00D59C  0E01               	movlw	1
  5576  00D59E  1A06               	xorwf	___awdiv@sign,f,c
  5577  00D5A0                     l877:
  5578  00D5A0  0E00               	movlw	0
  5579  00D5A2  6E08               	movwf	___awdiv@quotient+1,c
  5580  00D5A4  0E00               	movlw	0
  5581  00D5A6  6E07               	movwf	___awdiv@quotient,c
  5582  00D5A8  5003               	movf	___awdiv@divisor,w,c
  5583  00D5AA  1004               	iorwf	___awdiv@divisor+1,w,c
  5584  00D5AC  B4D8               	btfsc	status,2,c
  5585  00D5AE  D01C               	goto	l884
  5586  00D5B0  0E01               	movlw	1
  5587  00D5B2  6E05               	movwf	___awdiv@counter,c
  5588  00D5B4  D004               	goto	l879
  5589  00D5B6  90D8               	bcf	status,0,c
  5590  00D5B8  3603               	rlcf	___awdiv@divisor,f,c
  5591  00D5BA  3604               	rlcf	___awdiv@divisor+1,f,c
  5592  00D5BC  2A05               	incf	___awdiv@counter,f,c
  5593  00D5BE                     l879:
  5594  00D5BE  AE04               	btfss	___awdiv@divisor+1,7,c
  5595  00D5C0  D7FA               	goto	l880
  5596  00D5C2                     u4820:
  5597  00D5C2  90D8               	bcf	status,0,c
  5598  00D5C4  3607               	rlcf	___awdiv@quotient,f,c
  5599  00D5C6  3608               	rlcf	___awdiv@quotient+1,f,c
  5600  00D5C8  5003               	movf	___awdiv@divisor,w,c
  5601  00D5CA  5C01               	subwf	___awdiv@dividend,w,c
  5602  00D5CC  5004               	movf	___awdiv@divisor+1,w,c
  5603  00D5CE  5802               	subwfb	___awdiv@dividend+1,w,c
  5604  00D5D0  A0D8               	btfss	status,0,c
  5605  00D5D2  D005               	goto	l883
  5606  00D5D4  5003               	movf	___awdiv@divisor,w,c
  5607  00D5D6  5E01               	subwf	___awdiv@dividend,f,c
  5608  00D5D8  5004               	movf	___awdiv@divisor+1,w,c
  5609  00D5DA  5A02               	subwfb	___awdiv@dividend+1,f,c
  5610  00D5DC  8007               	bsf	___awdiv@quotient,0,c
  5611  00D5DE                     l883:
  5612  00D5DE  90D8               	bcf	status,0,c
  5613  00D5E0  3204               	rrcf	___awdiv@divisor+1,f,c
  5614  00D5E2  3203               	rrcf	___awdiv@divisor,f,c
  5615  00D5E4  2E05               	decfsz	___awdiv@counter,f,c
  5616  00D5E6  D7ED               	goto	u4820
  5617  00D5E8                     l884:
  5618  00D5E8  5006               	movf	___awdiv@sign,w,c
  5619  00D5EA  B4D8               	btfsc	status,2,c
  5620  00D5EC  D004               	goto	l885
  5621  00D5EE  6C07               	negf	___awdiv@quotient,c
  5622  00D5F0  1E08               	comf	___awdiv@quotient+1,f,c
  5623  00D5F2  B0D8               	btfsc	status,0,c
  5624  00D5F4  2A08               	incf	___awdiv@quotient+1,f,c
  5625  00D5F6                     l885:
  5626  00D5F6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5627  00D5FA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5628  00D5FE  0012               	return	
  5629  00D600                     __end_of___awdiv:
  5630                           	opt stack 0
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           postinc0	equ	0xFEE
  5638                           wreg	equ	0xFE8
  5639                           postinc1	equ	0xFE6
  5640                           postdec1	equ	0xFE5
  5641                           fsr1h	equ	0xFE2
  5642                           fsr1l	equ	0xFE1
  5643                           postinc2	equ	0xFDE
  5644                           postdec2	equ	0xFDD
  5645                           fsr2h	equ	0xFDA
  5646                           fsr2l	equ	0xFD9
  5647                           status	equ	0xFD8
  5648                           
  5649 ;; *************** function _RtccWriteTime *****************
  5650 ;; Defined at:
  5651 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  pTm             2    0[COMRAM] PTR const struct .
  5654 ;;		 -> RtccTime(4), 
  5655 ;;  di              1    2[COMRAM] enum E7121
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  tempHourWDay    2    9[COMRAM] struct .
  5658 ;;  tempMinSec      2    7[COMRAM] struct .
  5659 ;;  wasWrEn         1    6[COMRAM] enum E7121
  5660 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5661 ;;  wasOn           1    4[COMRAM] enum E7121
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      enum E6550
  5664 ;; Registers used:
  5665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5672 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5674 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5675 ;;Total ram usage:       11 bytes
  5676 ;; Hardware stack levels used:    1
  5677 ;; Hardware stack levels required when called:    1
  5678 ;; This function calls:
  5679 ;;		_RtccWrOn
  5680 ;; This function is called by:
  5681 ;;		_Write_RTC
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text22
  5686  00E55C                     __ptext22:
  5687                           	opt stack 0
  5688  00E55C                     _RtccWriteTime:
  5689                           	opt stack 25
  5690                           
  5691                           ;incstack = 0
  5692  00E55C  0E00               	movlw	0
  5693  00E55E  6E06               	movwf	RtccWriteTime@wasAlrm,c
  5694  00E560  EE20 F002          	lfsr	2,2
  5695  00E564  5001               	movf	RtccWriteTime@pTm,w,c
  5696  00E566  26D9               	addwf	fsr2l,f,c
  5697  00E568  5002               	movf	RtccWriteTime@pTm+1,w,c
  5698  00E56A  22DA               	addwfc	fsr2h,f,c
  5699  00E56C  0E5A               	movlw	90
  5700  00E56E  60DF               	cpfslt	indf2,c
  5701  00E570  0012               	return	
  5702  00E572  EE20 F001          	lfsr	2,1
  5703  00E576  5001               	movf	RtccWriteTime@pTm,w,c
  5704  00E578  26D9               	addwf	fsr2l,f,c
  5705  00E57A  5002               	movf	RtccWriteTime@pTm+1,w,c
  5706  00E57C  22DA               	addwfc	fsr2h,f,c
  5707  00E57E  0E5A               	movlw	90
  5708  00E580  60DF               	cpfslt	indf2,c
  5709  00E582  0012               	return	
  5710  00E584  EE20 F003          	lfsr	2,3
  5711  00E588  5001               	movf	RtccWriteTime@pTm,w,c
  5712  00E58A  26D9               	addwf	fsr2l,f,c
  5713  00E58C  5002               	movf	RtccWriteTime@pTm+1,w,c
  5714  00E58E  22DA               	addwfc	fsr2h,f,c
  5715  00E590  0E24               	movlw	36
  5716  00E592  64DF               	cpfsgt	indf2,c
  5717  00E594  D001               	goto	l696
  5718  00E596  0012               	return	
  5719  00E598                     l696:
  5720  00E598  EE20 F002          	lfsr	2,2
  5721  00E59C  5001               	movf	RtccWriteTime@pTm,w,c
  5722  00E59E  26D9               	addwf	fsr2l,f,c
  5723  00E5A0  5002               	movf	RtccWriteTime@pTm+1,w,c
  5724  00E5A2  22DA               	addwfc	fsr2h,f,c
  5725  00E5A4  50DF               	movf	indf2,w,c
  5726  00E5A6  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  5727  00E5A8  EE20 F001          	lfsr	2,1
  5728  00E5AC  5001               	movf	RtccWriteTime@pTm,w,c
  5729  00E5AE  26D9               	addwf	fsr2l,f,c
  5730  00E5B0  5002               	movf	RtccWriteTime@pTm+1,w,c
  5731  00E5B2  22DA               	addwfc	fsr2h,f,c
  5732  00E5B4  50DF               	movf	indf2,w,c
  5733  00E5B6  6E08               	movwf	RtccWriteTime@tempMinSec,c
  5734  00E5B8  5003               	movf	RtccWriteTime@di,w,c
  5735  00E5BA  A4D8               	btfss	status,2,c
  5736  00E5BC  9CF2               	bcf	intcon,6,c	;volatile
  5737  00E5BE  010F               	movlb	15	; () banked
  5738  00E5C0  0E00               	movlw	0
  5739  00E5C2  BB3F               	btfsc	63,5,b	;volatile
  5740  00E5C4  0E01               	movlw	1
  5741  00E5C6  6E07               	movwf	RtccWriteTime@wasWrEn,c
  5742  00E5C8  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5743  00E5CA  B4D8               	btfsc	status,2,c
  5744                           
  5745                           ; BSR set to: 15
  5746  00E5CC  ECCA  F066         	call	_RtccWrOn	;wreg free
  5747  00E5D0  010F               	movlb	15	; () banked
  5748  00E5D2  0E00               	movlw	0
  5749  00E5D4  BF3F               	btfsc	63,7,b	;volatile
  5750  00E5D6  0E01               	movlw	1
  5751  00E5D8  6E05               	movwf	RtccWriteTime@wasOn,c
  5752  00E5DA  5005               	movf	RtccWriteTime@wasOn,w,c
  5753  00E5DC  B4D8               	btfsc	status,2,c
  5754  00E5DE  D006               	goto	l702
  5755                           
  5756                           ; BSR set to: 15
  5757  00E5E0  0E00               	movlw	0
  5758  00E5E2  BE91               	btfsc	3985,7,c	;volatile
  5759  00E5E4  0E01               	movlw	1
  5760  00E5E6  6E06               	movwf	RtccWriteTime@wasAlrm,c
  5761                           
  5762                           ; BSR set to: 15
  5763  00E5E8  010F               	movlb	15	; () banked
  5764  00E5EA  9F3F               	bcf	63,7,b	;volatile
  5765  00E5EC                     l702:
  5766                           
  5767                           ; BSR set to: 15
  5768                           
  5769                           ; BSR set to: 15
  5770  00E5EC  0EFC               	movlw	252
  5771  00E5EE  010F               	movlb	15	; () banked
  5772  00E5F0  173F               	andwf	63,f,b	;volatile
  5773  00E5F2  010F               	movlb	15	; () banked
  5774  00E5F4  813F               	bsf	63,0,b	;volatile
  5775                           
  5776                           ; BSR set to: 15
  5777  00E5F6  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  5778                           
  5779                           ; BSR set to: 15
  5780  00E5FA  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  5781                           
  5782                           ; BSR set to: 15
  5783  00E5FE  EE20 F003          	lfsr	2,3
  5784  00E602  5001               	movf	RtccWriteTime@pTm,w,c
  5785  00E604  26D9               	addwf	fsr2l,f,c
  5786  00E606  5002               	movf	RtccWriteTime@pTm+1,w,c
  5787  00E608  22DA               	addwfc	fsr2h,f,c
  5788  00E60A  50DF               	movf	indf2,w,c
  5789  00E60C  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  5790                           
  5791                           ; BSR set to: 15
  5792  00E60E  0EFC               	movlw	252
  5793  00E610  010F               	movlb	15	; () banked
  5794  00E612  173F               	andwf	63,f,b	;volatile
  5795                           
  5796                           ; BSR set to: 15
  5797  00E614  010F               	movlb	15	; () banked
  5798  00E616  813F               	bsf	63,0,b	;volatile
  5799                           
  5800                           ; BSR set to: 15
  5801  00E618  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  5802                           
  5803                           ; BSR set to: 15
  5804  00E61C  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  5805                           
  5806                           ; BSR set to: 15
  5807  00E620  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  5808                           
  5809                           ; BSR set to: 15
  5810  00E624  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  5811                           
  5812                           ; BSR set to: 15
  5813  00E628  5005               	movf	RtccWriteTime@wasOn,w,c
  5814  00E62A  B4D8               	btfsc	status,2,c
  5815  00E62C  D00B               	goto	l703
  5816                           
  5817                           ; BSR set to: 15
  5818  00E62E  010F               	movlb	15	; () banked
  5819  00E630  8F3F               	bsf	63,7,b	;volatile
  5820                           
  5821                           ; BSR set to: 15
  5822  00E632  5006               	movf	RtccWriteTime@wasAlrm,w,c
  5823  00E634  A4D8               	btfss	status,2,c
  5824                           
  5825                           ; BSR set to: 15
  5826  00E636  8E91               	bsf	3985,7,c	;volatile
  5827                           
  5828                           ; BSR set to: 15
  5829                           
  5830                           ; BSR set to: 15
  5831  00E638  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5832  00E63A  B4D8               	btfsc	status,2,c
  5833  00E63C  D008               	goto	l707
  5834                           
  5835                           ; BSR set to: 15
  5836  00E63E  ECCA  F066         	call	_RtccWrOn	;wreg free
  5837  00E642  D005               	goto	l707
  5838  00E644                     l703:
  5839  00E644  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5840  00E646  A4D8               	btfss	status,2,c
  5841  00E648  D002               	goto	l707
  5842  00E64A  010F               	movlb	15	; () banked
  5843  00E64C  9B3F               	bcf	63,5,b	;volatile
  5844  00E64E                     l707:
  5845                           
  5846                           ; BSR set to: 15
  5847                           
  5848                           ; BSR set to: 15
  5849  00E64E  5003               	movf	RtccWriteTime@di,w,c
  5850  00E650  B4D8               	btfsc	status,2,c
  5851  00E652  0012               	return	
  5852  00E654  8CF2               	bsf	intcon,6,c	;volatile
  5853  00E656  0012               	return	
  5854  00E658                     __end_of_RtccWriteTime:
  5855                           	opt stack 0
  5856                           tblptru	equ	0xFF8
  5857                           tblptrh	equ	0xFF7
  5858                           tblptrl	equ	0xFF6
  5859                           tablat	equ	0xFF5
  5860                           prodh	equ	0xFF4
  5861                           prodl	equ	0xFF3
  5862                           intcon	equ	0xFF2
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           postinc1	equ	0xFE6
  5866                           postdec1	equ	0xFE5
  5867                           fsr1h	equ	0xFE2
  5868                           fsr1l	equ	0xFE1
  5869                           indf2	equ	0xFDF
  5870                           postinc2	equ	0xFDE
  5871                           postdec2	equ	0xFDD
  5872                           fsr2h	equ	0xFDA
  5873                           fsr2l	equ	0xFD9
  5874                           status	equ	0xFD8
  5875                           
  5876 ;; *************** function _RtccWriteDate *****************
  5877 ;; Defined at:
  5878 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  pDt             2    0[COMRAM] PTR const struct .
  5881 ;;		 -> RtccDate(4), 
  5882 ;;  di              1    2[COMRAM] enum E7121
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  tempHourWDay    2   11[COMRAM] struct .
  5885 ;;  tempDayMonth    2    9[COMRAM] struct .
  5886 ;;  tempYear        2    6[COMRAM] struct .
  5887 ;;  wasWrEn         1    8[COMRAM] enum E7121
  5888 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5889 ;;  wasOn           1    4[COMRAM] enum E7121
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      enum E6550
  5892 ;; Registers used:
  5893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5899 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5900 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5902 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5903 ;;Total ram usage:       13 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    1
  5906 ;; This function calls:
  5907 ;;		_RtccWrOn
  5908 ;; This function is called by:
  5909 ;;		_Write_RTC
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text23
  5914  00E776                     __ptext23:
  5915                           	opt stack 0
  5916  00E776                     _RtccWriteDate:
  5917                           	opt stack 25
  5918                           
  5919                           ;incstack = 0
  5920  00E776  0E00               	movlw	0
  5921  00E778  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5922  00E77A  EE20 F002          	lfsr	2,2
  5923  00E77E  5001               	movf	RtccWriteDate@pDt,w,c
  5924  00E780  26D9               	addwf	fsr2l,f,c
  5925  00E782  5002               	movf	RtccWriteDate@pDt+1,w,c
  5926  00E784  22DA               	addwfc	fsr2h,f,c
  5927  00E786  0E13               	movlw	19
  5928  00E788  60DF               	cpfslt	indf2,c
  5929  00E78A  0012               	return	
  5930  00E78C  EE20 F002          	lfsr	2,2
  5931  00E790  5001               	movf	RtccWriteDate@pDt,w,c
  5932  00E792  26D9               	addwf	fsr2l,f,c
  5933  00E794  5002               	movf	RtccWriteDate@pDt+1,w,c
  5934  00E796  22DA               	addwfc	fsr2h,f,c
  5935  00E798  50DF               	movf	indf2,w,c
  5936  00E79A  B4D8               	btfsc	status,2,c
  5937  00E79C  0012               	return	
  5938  00E79E  EE20 F001          	lfsr	2,1
  5939  00E7A2  5001               	movf	RtccWriteDate@pDt,w,c
  5940  00E7A4  26D9               	addwf	fsr2l,f,c
  5941  00E7A6  5002               	movf	RtccWriteDate@pDt+1,w,c
  5942  00E7A8  22DA               	addwfc	fsr2h,f,c
  5943  00E7AA  0E32               	movlw	50
  5944  00E7AC  60DF               	cpfslt	indf2,c
  5945  00E7AE  0012               	return	
  5946  00E7B0  EE20 F001          	lfsr	2,1
  5947  00E7B4  5001               	movf	RtccWriteDate@pDt,w,c
  5948  00E7B6  26D9               	addwf	fsr2l,f,c
  5949  00E7B8  5002               	movf	RtccWriteDate@pDt+1,w,c
  5950  00E7BA  22DA               	addwfc	fsr2h,f,c
  5951  00E7BC  50DF               	movf	indf2,w,c
  5952  00E7BE  B4D8               	btfsc	status,2,c
  5953  00E7C0  0012               	return	
  5954  00E7C2  EE20 F003          	lfsr	2,3
  5955  00E7C6  5001               	movf	RtccWriteDate@pDt,w,c
  5956  00E7C8  26D9               	addwf	fsr2l,f,c
  5957  00E7CA  5002               	movf	RtccWriteDate@pDt+1,w,c
  5958  00E7CC  22DA               	addwfc	fsr2h,f,c
  5959  00E7CE  0E99               	movlw	153
  5960  00E7D0  64DF               	cpfsgt	indf2,c
  5961  00E7D2  D001               	goto	l667
  5962  00E7D4  0012               	return	
  5963  00E7D6                     l667:
  5964  00E7D6  EE20 F003          	lfsr	2,3
  5965  00E7DA  5001               	movf	RtccWriteDate@pDt,w,c
  5966  00E7DC  26D9               	addwf	fsr2l,f,c
  5967  00E7DE  5002               	movf	RtccWriteDate@pDt+1,w,c
  5968  00E7E0  22DA               	addwfc	fsr2h,f,c
  5969  00E7E2  50DF               	movf	indf2,w,c
  5970  00E7E4  6E07               	movwf	RtccWriteDate@tempYear,c
  5971  00E7E6  EE20 F001          	lfsr	2,1
  5972  00E7EA  5001               	movf	RtccWriteDate@pDt,w,c
  5973  00E7EC  26D9               	addwf	fsr2l,f,c
  5974  00E7EE  5002               	movf	RtccWriteDate@pDt+1,w,c
  5975  00E7F0  22DA               	addwfc	fsr2h,f,c
  5976  00E7F2  50DF               	movf	indf2,w,c
  5977  00E7F4  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  5978  00E7F6  EE20 F002          	lfsr	2,2
  5979  00E7FA  5001               	movf	RtccWriteDate@pDt,w,c
  5980  00E7FC  26D9               	addwf	fsr2l,f,c
  5981  00E7FE  5002               	movf	RtccWriteDate@pDt+1,w,c
  5982  00E800  22DA               	addwfc	fsr2h,f,c
  5983  00E802  50DF               	movf	indf2,w,c
  5984  00E804  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  5985  00E806  5003               	movf	RtccWriteDate@di,w,c
  5986  00E808  A4D8               	btfss	status,2,c
  5987  00E80A  9CF2               	bcf	intcon,6,c	;volatile
  5988  00E80C  010F               	movlb	15	; () banked
  5989  00E80E  0E00               	movlw	0
  5990  00E810  BB3F               	btfsc	63,5,b	;volatile
  5991  00E812  0E01               	movlw	1
  5992  00E814  6E09               	movwf	RtccWriteDate@wasWrEn,c
  5993  00E816  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5994  00E818  B4D8               	btfsc	status,2,c
  5995                           
  5996                           ; BSR set to: 15
  5997  00E81A  ECCA  F066         	call	_RtccWrOn	;wreg free
  5998  00E81E  010F               	movlb	15	; () banked
  5999  00E820  0E00               	movlw	0
  6000  00E822  BF3F               	btfsc	63,7,b	;volatile
  6001  00E824  0E01               	movlw	1
  6002  00E826  6E05               	movwf	RtccWriteDate@wasOn,c
  6003  00E828  5005               	movf	RtccWriteDate@wasOn,w,c
  6004  00E82A  B4D8               	btfsc	status,2,c
  6005  00E82C  D006               	goto	l673
  6006                           
  6007                           ; BSR set to: 15
  6008  00E82E  0E00               	movlw	0
  6009  00E830  BE91               	btfsc	3985,7,c	;volatile
  6010  00E832  0E01               	movlw	1
  6011  00E834  6E06               	movwf	RtccWriteDate@wasAlrm,c
  6012                           
  6013                           ; BSR set to: 15
  6014  00E836  010F               	movlb	15	; () banked
  6015  00E838  9F3F               	bcf	63,7,b	;volatile
  6016  00E83A                     l673:
  6017                           
  6018                           ; BSR set to: 15
  6019                           
  6020                           ; BSR set to: 15
  6021  00E83A  0EFC               	movlw	252
  6022  00E83C  010F               	movlb	15	; () banked
  6023  00E83E  173F               	andwf	63,f,b	;volatile
  6024  00E840  010F               	movlb	15	; () banked
  6025  00E842  813F               	bsf	63,0,b	;volatile
  6026                           
  6027                           ; BSR set to: 15
  6028  00E844  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  6029                           
  6030                           ; BSR set to: 15
  6031  00E848  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  6032                           
  6033                           ; BSR set to: 15
  6034  00E84C  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  6035  00E850  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  6036  00E854  50DF               	movf	indf2,w,c
  6037  00E856  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  6038                           
  6039                           ; BSR set to: 15
  6040  00E858  0EFC               	movlw	252
  6041  00E85A  010F               	movlb	15	; () banked
  6042  00E85C  173F               	andwf	63,f,b	;volatile
  6043                           
  6044                           ; BSR set to: 15
  6045  00E85E  0E03               	movlw	3
  6046  00E860  010F               	movlb	15	; () banked
  6047  00E862  133F               	iorwf	63,f,b	;volatile
  6048                           
  6049                           ; BSR set to: 15
  6050  00E864  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  6051                           
  6052                           ; BSR set to: 15
  6053  00E868  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  6054                           
  6055                           ; BSR set to: 15
  6056  00E86C  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  6057                           
  6058                           ; BSR set to: 15
  6059  00E870  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  6060                           
  6061                           ; BSR set to: 15
  6062  00E874  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  6063                           
  6064                           ; BSR set to: 15
  6065  00E878  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  6066                           
  6067                           ; BSR set to: 15
  6068  00E87C  5005               	movf	RtccWriteDate@wasOn,w,c
  6069  00E87E  B4D8               	btfsc	status,2,c
  6070  00E880  D00B               	goto	l674
  6071                           
  6072                           ; BSR set to: 15
  6073  00E882  010F               	movlb	15	; () banked
  6074  00E884  8F3F               	bsf	63,7,b	;volatile
  6075                           
  6076                           ; BSR set to: 15
  6077  00E886  5006               	movf	RtccWriteDate@wasAlrm,w,c
  6078  00E888  A4D8               	btfss	status,2,c
  6079                           
  6080                           ; BSR set to: 15
  6081  00E88A  8E91               	bsf	3985,7,c	;volatile
  6082                           
  6083                           ; BSR set to: 15
  6084                           
  6085                           ; BSR set to: 15
  6086  00E88C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  6087  00E88E  B4D8               	btfsc	status,2,c
  6088  00E890  D008               	goto	l678
  6089                           
  6090                           ; BSR set to: 15
  6091  00E892  ECCA  F066         	call	_RtccWrOn	;wreg free
  6092  00E896  D005               	goto	l678
  6093  00E898                     l674:
  6094  00E898  5009               	movf	RtccWriteDate@wasWrEn,w,c
  6095  00E89A  A4D8               	btfss	status,2,c
  6096  00E89C  D002               	goto	l678
  6097  00E89E  010F               	movlb	15	; () banked
  6098  00E8A0  9B3F               	bcf	63,5,b	;volatile
  6099  00E8A2                     l678:
  6100                           
  6101                           ; BSR set to: 15
  6102                           
  6103                           ; BSR set to: 15
  6104  00E8A2  5003               	movf	RtccWriteDate@di,w,c
  6105  00E8A4  B4D8               	btfsc	status,2,c
  6106  00E8A6  0012               	return	
  6107  00E8A8  9CF2               	bcf	intcon,6,c	;volatile
  6108  00E8AA  0012               	return	
  6109  00E8AC                     __end_of_RtccWriteDate:
  6110                           	opt stack 0
  6111                           tblptru	equ	0xFF8
  6112                           tblptrh	equ	0xFF7
  6113                           tblptrl	equ	0xFF6
  6114                           tablat	equ	0xFF5
  6115                           prodh	equ	0xFF4
  6116                           prodl	equ	0xFF3
  6117                           intcon	equ	0xFF2
  6118                           postinc0	equ	0xFEE
  6119                           wreg	equ	0xFE8
  6120                           postinc1	equ	0xFE6
  6121                           postdec1	equ	0xFE5
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           fsr2h	equ	0xFDA
  6128                           fsr2l	equ	0xFD9
  6129                           status	equ	0xFD8
  6130                           
  6131 ;; *************** function _RtccWrOn *****************
  6132 ;; Defined at:
  6133 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  data            2    0        unsigned int 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6151 ;;Total ram usage:        0 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_Write_RTC
  6157 ;;		_RtccWriteDate
  6158 ;;		_RtccWriteTime
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text24
  6163  00CD94                     __ptext24:
  6164                           	opt stack 0
  6165  00CD94                     _RtccWrOn:
  6166                           	opt stack 25
  6167                           
  6168                           ;incstack = 0
  6169  00CD94  9CF2               	bcf	intcon,6,c	;volatile
  6170  00CD96  0E55               	movlw	85
  6171  00CD98  6EA7               	movwf	4007,c	;volatile
  6172  00CD9A  0EAA               	movlw	170
  6173  00CD9C  6EA7               	movwf	4007,c	;volatile
  6174  00CD9E  010F               	movlb	15	; () banked
  6175  00CDA0  8B3F               	bsf	63,5,b	;volatile
  6176                           
  6177                           ; BSR set to: 15
  6178  00CDA2  8CF2               	bsf	intcon,6,c	;volatile
  6179                           
  6180                           ; BSR set to: 15
  6181  00CDA4  0012               	return		;funcret
  6182  00CDA6                     __end_of_RtccWrOn:
  6183                           	opt stack 0
  6184                           tblptru	equ	0xFF8
  6185                           tblptrh	equ	0xFF7
  6186                           tblptrl	equ	0xFF6
  6187                           tablat	equ	0xFF5
  6188                           prodh	equ	0xFF4
  6189                           prodl	equ	0xFF3
  6190                           intcon	equ	0xFF2
  6191                           postinc0	equ	0xFEE
  6192                           wreg	equ	0xFE8
  6193                           postinc1	equ	0xFE6
  6194                           postdec1	equ	0xFE5
  6195                           fsr1h	equ	0xFE2
  6196                           fsr1l	equ	0xFE1
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           postdec2	equ	0xFDD
  6200                           fsr2h	equ	0xFDA
  6201                           fsr2l	equ	0xFD9
  6202                           status	equ	0xFD8
  6203                           
  6204 ;; *************** function _covertir_valores_de_array_a_escala_decimal *****************
  6205 ;; Defined at:
  6206 ;;		line 626 in file "main.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  i               2    8[BANK0 ] int 
  6211 ;;  numero          2    6[BANK0 ] int 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  2   90[COMRAM] int 
  6214 ;; Registers used:
  6215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6222 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;Total ram usage:       14 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    5
  6228 ;; This function calls:
  6229 ;;		___awtoft
  6230 ;;		___fttol
  6231 ;;		___wmul
  6232 ;;		_pow
  6233 ;; This function is called by:
  6234 ;;		_editar_fecha_reloj_digital
  6235 ;;		_editar_hora_reloj_digital
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text25
  6240  00E000                     __ptext25:
  6241                           	opt stack 0
  6242  00E000                     _covertir_valores_de_array_a_escala_decimal:
  6243                           	opt stack 19
  6244                           
  6245                           ;main.c: 627: int numero = 0;
  6246                           
  6247                           ; BSR set to: 15
  6248                           ;incstack = 0
  6249  00E000  0E00               	movlw	0
  6250  00E002  0100               	movlb	0	; () banked
  6251  00E004  6FDA               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  6252  00E006  0E00               	movlw	0
  6253  00E008  6FD9               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  6254                           
  6255                           ;main.c: 628: for (int i = 2 - 1; i >= 0; i--) {
  6256  00E00A  0E00               	movlw	0
  6257  00E00C  0100               	movlb	0	; () banked
  6258  00E00E  6FDC               	movwf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),b
  6259  00E010  0E01               	movlw	1
  6260  00E012  6FDB               	movwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),b
  6261  00E014                     l4821:
  6262                           
  6263                           ; BSR set to: 0
  6264  00E014  0100               	movlb	0	; () banked
  6265  00E016  BFDC               	btfsc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),7,b
  6266  00E018  D05A               	goto	u5520
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;main.c: 629: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  6270                           
  6271                           ; BSR set to: 0
  6272                           
  6273                           ; BSR set to: 0
  6274  00E01A  0E01               	movlw	1
  6275  00E01C  0100               	movlb	0	; () banked
  6276  00E01E  25DB               	addwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  6277  00E020  6E5D               	movwf	??_covertir_valores_de_array_a_escala_decimal& (0+255),c
  6278  00E022  0E00               	movlw	0
  6279  00E024  0100               	movlb	0	; () banked
  6280  00E026  21DC               	addwfc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  6281  00E028  6E5E               	movwf	(??_covertir_valores_de_array_a_escala_decimal+1)& (0+255),c
  6282  00E02A  1E5D               	comf	??_covertir_valores_de_array_a_escala_decimal,f,c
  6283  00E02C  1E5E               	comf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  6284  00E02E  4A5D               	infsnz	??_covertir_valores_de_array_a_escala_decimal,f,c
  6285  00E030  2A5E               	incf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  6286  00E032  0E02               	movlw	2
  6287  00E034  245D               	addwf	??_covertir_valores_de_array_a_escala_decimal,w,c
  6288  00E036  6E09               	movwf	___awtoft@c,c
  6289  00E038  0E00               	movlw	0
  6290  00E03A  205E               	addwfc	??_covertir_valores_de_array_a_escala_decimal+1,w,c
  6291  00E03C  6E0A               	movwf	___awtoft@c+1,c
  6292  00E03E  EC73  F067         	call	___awtoft	;wreg free
  6293  00E042  C009  F0D3         	movff	?___awtoft,_covertir_valores_de_array_a_escala_decimal$2499
  6294  00E046  C00A  F0D4         	movff	?___awtoft+1,_covertir_valores_de_array_a_escala_decimal$2499+1
  6295  00E04A  C00B  F0D5         	movff	?___awtoft+2,_covertir_valores_de_array_a_escala_decimal$2499+2
  6296                           
  6297                           ;main.c: 629: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  6298  00E04E  C0D3  F04D         	movff	_covertir_valores_de_array_a_escala_decimal$2499,pow@y
  6299  00E052  C0D4  F04E         	movff	_covertir_valores_de_array_a_escala_decimal$2499+1,pow@y+1
  6300  00E056  C0D5  F04F         	movff	_covertir_valores_de_array_a_escala_decimal$2499+2,pow@y+2
  6301  00E05A  0E00               	movlw	0
  6302  00E05C  6E4A               	movwf	pow@x,c
  6303  00E05E  0E20               	movlw	32
  6304  00E060  6E4B               	movwf	pow@x+1,c
  6305  00E062  0E41               	movlw	65
  6306  00E064  6E4C               	movwf	pow@x+2,c
  6307  00E066  ECF9  F074         	call	_pow	;wreg free
  6308  00E06A  C04A  F0D6         	movff	?_pow,_covertir_valores_de_array_a_escala_decimal$2500
  6309  00E06E  C04B  F0D7         	movff	?_pow+1,_covertir_valores_de_array_a_escala_decimal$2500+1
  6310  00E072  C04C  F0D8         	movff	?_pow+2,_covertir_valores_de_array_a_escala_decimal$2500+2
  6311                           
  6312                           ;main.c: 629: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  6313  00E076  C0D6  F00D         	movff	_covertir_valores_de_array_a_escala_decimal$2500,___fttol@f1
  6314  00E07A  C0D7  F00E         	movff	_covertir_valores_de_array_a_escala_decimal$2500+1,___fttol@f1+1
  6315  00E07E  C0D8  F00F         	movff	_covertir_valores_de_array_a_escala_decimal$2500+2,___fttol@f1+2
  6316  00E082  EC34  F072         	call	___fttol	;wreg free
  6317  00E086  C00D  F01C         	movff	?___fttol,___wmul@multiplier
  6318  00E08A  C00E  F01D         	movff	?___fttol+1,___wmul@multiplier+1
  6319  00E08E  90D8               	bcf	status,0,c
  6320  00E090  0100               	movlb	0	; () banked
  6321  00E092  35DB               	rlcf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  6322  00E094  6ED9               	movwf	fsr2l,c
  6323  00E096  0100               	movlb	0	; () banked
  6324  00E098  35DC               	rlcf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  6325  00E09A  6EDA               	movwf	fsr2h,c
  6326  00E09C  0E80               	movlw	low _numeros_para_fecha
  6327  00E09E  26D9               	addwf	fsr2l,f,c
  6328  00E0A0  0E00               	movlw	high _numeros_para_fecha
  6329  00E0A2  22DA               	addwfc	fsr2h,f,c
  6330  00E0A4  CFDE F01E          	movff	postinc2,___wmul@multiplicand
  6331  00E0A8  CFDD F01F          	movff	postdec2,___wmul@multiplicand+1
  6332  00E0AC  EC2E  F067         	call	___wmul	;wreg free
  6333  00E0B0  0100               	movlb	0	; () banked
  6334  00E0B2  51D9               	movf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),w,b
  6335  00E0B4  241C               	addwf	?___wmul,w,c
  6336  00E0B6  0100               	movlb	0	; () banked
  6337  00E0B8  6FD9               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  6338  00E0BA  0100               	movlb	0	; () banked
  6339  00E0BC  51DA               	movf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),w,b
  6340  00E0BE  201D               	addwfc	?___wmul+1,w,c
  6341  00E0C0  0100               	movlb	0	; () banked
  6342  00E0C2  6FDA               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  6343                           
  6344                           ; BSR set to: 0
  6345  00E0C4  0100               	movlb	0	; () banked
  6346  00E0C6  07DB               	decf	covertir_valores_de_array_a_escala_decimal@i& (0+255),f,b
  6347  00E0C8  A0D8               	btfss	status,0,c
  6348  00E0CA  07DC               	decf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),f,b
  6349  00E0CC  D7A3               	goto	l4821
  6350  00E0CE                     u5520:
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;main.c: 630: };
  6354                           ;main.c: 634: return numero;
  6355  00E0CE  C0D9  F05B         	movff	covertir_valores_de_array_a_escala_decimal@numero,?_covertir_valores_de_array_a_e
      +                          scala_decimal
  6356  00E0D2  C0DA  F05C         	movff	covertir_valores_de_array_a_escala_decimal@numero+1,?_covertir_valores_de_array_a
      +                          _escala_decimal+1
  6357                           
  6358                           ; BSR set to: 0
  6359  00E0D6  0012               	return		;funcret
  6360  00E0D8                     __end_of_covertir_valores_de_array_a_escala_decimal:
  6361                           	opt stack 0
  6362                           tblptru	equ	0xFF8
  6363                           tblptrh	equ	0xFF7
  6364                           tblptrl	equ	0xFF6
  6365                           tablat	equ	0xFF5
  6366                           prodh	equ	0xFF4
  6367                           prodl	equ	0xFF3
  6368                           intcon	equ	0xFF2
  6369                           postinc0	equ	0xFEE
  6370                           wreg	equ	0xFE8
  6371                           postinc1	equ	0xFE6
  6372                           postdec1	equ	0xFE5
  6373                           fsr1h	equ	0xFE2
  6374                           fsr1l	equ	0xFE1
  6375                           indf2	equ	0xFDF
  6376                           postinc2	equ	0xFDE
  6377                           postdec2	equ	0xFDD
  6378                           fsr2h	equ	0xFDA
  6379                           fsr2l	equ	0xFD9
  6380                           status	equ	0xFD8
  6381                           
  6382 ;; *************** function _pow *****************
  6383 ;; Defined at:
  6384 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  x               3   73[COMRAM] int 
  6387 ;;  y               3   76[COMRAM] int 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;  yi              4   86[COMRAM] unsigned long 
  6390 ;;  sign            1   85[COMRAM] unsigned char 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  3   73[COMRAM] unsigned char 
  6393 ;; Registers used:
  6394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6400 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6403 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6404 ;;Total ram usage:       17 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    4
  6407 ;; This function calls:
  6408 ;;		___ftge
  6409 ;;		___ftmul
  6410 ;;		___ftneg
  6411 ;;		___fttol
  6412 ;;		___lltoft
  6413 ;;		_exp
  6414 ;;		_log
  6415 ;; This function is called by:
  6416 ;;		_covertir_valores_de_array_a_escala_decimal
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text26
  6421  00E9F2                     __ptext26:
  6422                           	opt stack 0
  6423  00E9F2                     _pow:
  6424                           	opt stack 19
  6425                           
  6426                           ; BSR set to: 0
  6427                           ;incstack = 0
  6428  00E9F2  0E00               	movlw	0
  6429  00E9F4  6E56               	movwf	pow@sign,c
  6430  00E9F6  504A               	movf	pow@x,w,c
  6431  00E9F8  104B               	iorwf	pow@x+1,w,c
  6432  00E9FA  104C               	iorwf	pow@x+2,w,c
  6433  00E9FC  A4D8               	btfss	status,2,c
  6434  00E9FE  D01C               	goto	l1168
  6435  00EA00  0E00               	movlw	0
  6436  00EA02  6E01               	movwf	___ftge@ff1,c
  6437  00EA04  0E00               	movlw	0
  6438  00EA06  6E02               	movwf	___ftge@ff1+1,c
  6439  00EA08  0E00               	movlw	0
  6440  00EA0A  6E03               	movwf	___ftge@ff1+2,c
  6441  00EA0C  C04D  F004         	movff	pow@y,___ftge@ff2
  6442  00EA10  C04E  F005         	movff	pow@y+1,___ftge@ff2+1
  6443  00EA14  C04F  F006         	movff	pow@y+2,___ftge@ff2+2
  6444  00EA18  EC5C  F06C         	call	___ftge	;wreg free
  6445  00EA1C  A0D8               	btfss	status,0,c
  6446  00EA1E  D005               	goto	l1169
  6447  00EA20  0E00               	movlw	0
  6448  00EA22  0100               	movlb	0	; () banked
  6449  00EA24  6F89               	movwf	(_errno+1)& (0+255),b
  6450  00EA26  0E21               	movlw	33
  6451  00EA28  6F88               	movwf	_errno& (0+255),b
  6452  00EA2A                     l1169:
  6453  00EA2A  0E00               	movlw	0
  6454  00EA2C  6E4A               	movwf	?_pow,c
  6455  00EA2E  0E00               	movlw	0
  6456  00EA30  6E4B               	movwf	?_pow+1,c
  6457  00EA32  0E00               	movlw	0
  6458  00EA34  6E4C               	movwf	?_pow+2,c
  6459  00EA36  0012               	return	
  6460  00EA38                     l1168:
  6461  00EA38  504D               	movf	pow@y,w,c
  6462  00EA3A  104E               	iorwf	pow@y+1,w,c
  6463  00EA3C  104F               	iorwf	pow@y+2,w,c
  6464  00EA3E  A4D8               	btfss	status,2,c
  6465  00EA40  D007               	goto	l1171
  6466  00EA42  0E00               	movlw	0
  6467  00EA44  6E4A               	movwf	?_pow,c
  6468  00EA46  0E80               	movlw	128
  6469  00EA48  6E4B               	movwf	?_pow+1,c
  6470  00EA4A  0E3F               	movlw	63
  6471  00EA4C  6E4C               	movwf	?_pow+2,c
  6472  00EA4E  0012               	return	
  6473  00EA50                     l1171:
  6474  00EA50  AE4C               	btfss	pow@x+2,7,c
  6475  00EA52  D041               	goto	l1172
  6476  00EA54  C04D  F00D         	movff	pow@y,___fttol@f1
  6477  00EA58  C04E  F00E         	movff	pow@y+1,___fttol@f1+1
  6478  00EA5C  C04F  F00F         	movff	pow@y+2,___fttol@f1+2
  6479  00EA60  EC34  F072         	call	___fttol	;wreg free
  6480  00EA64  C00D  F057         	movff	?___fttol,pow@yi
  6481  00EA68  C00E  F058         	movff	?___fttol+1,pow@yi+1
  6482  00EA6C  C00F  F059         	movff	?___fttol+2,pow@yi+2
  6483  00EA70  C010  F05A         	movff	?___fttol+3,pow@yi+3
  6484  00EA74  C057  F009         	movff	pow@yi,___lltoft@c
  6485  00EA78  C058  F00A         	movff	pow@yi+1,___lltoft@c+1
  6486  00EA7C  C059  F00B         	movff	pow@yi+2,___lltoft@c+2
  6487  00EA80  C05A  F00C         	movff	pow@yi+3,___lltoft@c+3
  6488  00EA84  ECBB  F068         	call	___lltoft	;wreg free
  6489  00EA88  504D               	movf	pow@y,w,c
  6490  00EA8A  1809               	xorwf	?___lltoft,w,c
  6491  00EA8C  E107               	bnz	u5010
  6492  00EA8E  504E               	movf	pow@y+1,w,c
  6493  00EA90  180A               	xorwf	?___lltoft+1,w,c
  6494  00EA92  E104               	bnz	u5010
  6495  00EA94  504F               	movf	pow@y+2,w,c
  6496  00EA96  180B               	xorwf	?___lltoft+2,w,c
  6497  00EA98  B4D8               	btfsc	status,2,c
  6498  00EA9A  D00C               	goto	l1173
  6499  00EA9C                     u5010:
  6500  00EA9C  0E00               	movlw	0
  6501  00EA9E  0100               	movlb	0	; () banked
  6502  00EAA0  6F89               	movwf	(_errno+1)& (0+255),b
  6503  00EAA2  0E21               	movlw	33
  6504  00EAA4  6F88               	movwf	_errno& (0+255),b
  6505  00EAA6  0E00               	movlw	0
  6506  00EAA8  6E4A               	movwf	?_pow,c
  6507  00EAAA  0E00               	movlw	0
  6508  00EAAC  6E4B               	movwf	?_pow+1,c
  6509  00EAAE  0E00               	movlw	0
  6510  00EAB0  6E4C               	movwf	?_pow+2,c
  6511                           
  6512                           ; BSR set to: 0
  6513  00EAB2  0012               	return	
  6514  00EAB4                     l1173:
  6515                           
  6516                           ; BSR set to: 0
  6517  00EAB4  5057               	movf	pow@yi,w,c
  6518  00EAB6  0B01               	andlw	1
  6519  00EAB8  6E56               	movwf	pow@sign,c
  6520  00EABA  C04A  F001         	movff	pow@x,___ftneg@f1
  6521  00EABE  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  6522  00EAC2  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  6523  00EAC6  EC0A  F067         	call	___ftneg	;wreg free
  6524  00EACA  C001  F04A         	movff	?___ftneg,pow@x
  6525  00EACE  C002  F04B         	movff	?___ftneg+1,pow@x+1
  6526  00EAD2  C003  F04C         	movff	?___ftneg+2,pow@x+2
  6527  00EAD6                     l1172:
  6528  00EAD6  C04A  F03A         	movff	pow@x,log@x
  6529  00EADA  C04B  F03B         	movff	pow@x+1,log@x+1
  6530  00EADE  C04C  F03C         	movff	pow@x+2,log@x+2
  6531  00EAE2  EC2C  F073         	call	_log	;wreg free
  6532  00EAE6  C03A  F050         	movff	?_log,_pow$2501
  6533  00EAEA  C03B  F051         	movff	?_log+1,_pow$2501+1
  6534  00EAEE  C03C  F052         	movff	?_log+2,_pow$2501+2
  6535  00EAF2  C050  F00D         	movff	_pow$2501,___ftmul@f1
  6536  00EAF6  C051  F00E         	movff	_pow$2501+1,___ftmul@f1+1
  6537  00EAFA  C052  F00F         	movff	_pow$2501+2,___ftmul@f1+2
  6538  00EAFE  C04D  F010         	movff	pow@y,___ftmul@f2
  6539  00EB02  C04E  F011         	movff	pow@y+1,___ftmul@f2+1
  6540  00EB06  C04F  F012         	movff	pow@y+2,___ftmul@f2+2
  6541  00EB0A  ECBA  F071         	call	___ftmul	;wreg free
  6542  00EB0E  C00D  F053         	movff	?___ftmul,_pow$2502
  6543  00EB12  C00E  F054         	movff	?___ftmul+1,_pow$2502+1
  6544  00EB16  C00F  F055         	movff	?___ftmul+2,_pow$2502+2
  6545  00EB1A  C053  F041         	movff	_pow$2502,exp@x
  6546  00EB1E  C054  F042         	movff	_pow$2502+1,exp@x+1
  6547  00EB22  C055  F043         	movff	_pow$2502+2,exp@x+2
  6548  00EB26  EC58  F077         	call	_exp	;wreg free
  6549  00EB2A  C041  F04A         	movff	?_exp,pow@x
  6550  00EB2E  C042  F04B         	movff	?_exp+1,pow@x+1
  6551  00EB32  C043  F04C         	movff	?_exp+2,pow@x+2
  6552  00EB36  5056               	movf	pow@sign,w,c
  6553  00EB38  B4D8               	btfsc	status,2,c
  6554  00EB3A  D00F               	goto	l1174
  6555  00EB3C  C04A  F001         	movff	pow@x,___ftneg@f1
  6556  00EB40  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  6557  00EB44  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  6558  00EB48  EC0A  F067         	call	___ftneg	;wreg free
  6559  00EB4C  C001  F04A         	movff	?___ftneg,?_pow
  6560  00EB50  C002  F04B         	movff	?___ftneg+1,?_pow+1
  6561  00EB54  C003  F04C         	movff	?___ftneg+2,?_pow+2
  6562  00EB58  0012               	return	
  6563  00EB5A                     l1174:
  6564  00EB5A  C04A  F04A         	movff	pow@x,?_pow
  6565  00EB5E  C04B  F04B         	movff	pow@x+1,?_pow+1
  6566  00EB62  C04C  F04C         	movff	pow@x+2,?_pow+2
  6567  00EB66  0012               	return		;funcret
  6568  00EB68                     __end_of_pow:
  6569                           	opt stack 0
  6570                           tblptru	equ	0xFF8
  6571                           tblptrh	equ	0xFF7
  6572                           tblptrl	equ	0xFF6
  6573                           tablat	equ	0xFF5
  6574                           prodh	equ	0xFF4
  6575                           prodl	equ	0xFF3
  6576                           intcon	equ	0xFF2
  6577                           postinc0	equ	0xFEE
  6578                           wreg	equ	0xFE8
  6579                           postinc1	equ	0xFE6
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           indf2	equ	0xFDF
  6584                           postinc2	equ	0xFDE
  6585                           postdec2	equ	0xFDD
  6586                           fsr2h	equ	0xFDA
  6587                           fsr2l	equ	0xFD9
  6588                           status	equ	0xFD8
  6589                           
  6590 ;; *************** function _log *****************
  6591 ;; Defined at:
  6592 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  x               3   57[COMRAM] unsigned char 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  exponent        2   60[COMRAM] int 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  3   57[COMRAM] int 
  6599 ;; Registers used:
  6600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6606 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6609 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6610 ;;Total ram usage:        5 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    3
  6613 ;; This function calls:
  6614 ;;		___awtoft
  6615 ;;		___ftadd
  6616 ;;		___ftmul
  6617 ;;		_eval_poly
  6618 ;;		_frexp
  6619 ;; This function is called by:
  6620 ;;		_pow
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text27
  6625  00E658                     __ptext27:
  6626                           	opt stack 0
  6627  00E658                     _log:
  6628                           	opt stack 19
  6629                           
  6630                           ;incstack = 0
  6631  00E658  AE3C               	btfss	log@x+2,7,c
  6632  00E65A  D00C               	goto	l1370
  6633  00E65C  0E00               	movlw	0
  6634  00E65E  0100               	movlb	0	; () banked
  6635  00E660  6F89               	movwf	(_errno+1)& (0+255),b
  6636  00E662  0E21               	movlw	33
  6637  00E664  6F88               	movwf	_errno& (0+255),b
  6638  00E666  0E00               	movlw	0
  6639  00E668  6E3A               	movwf	?_log,c
  6640  00E66A  0E00               	movlw	0
  6641  00E66C  6E3B               	movwf	?_log+1,c
  6642  00E66E  0E00               	movlw	0
  6643  00E670  6E3C               	movwf	?_log+2,c
  6644                           
  6645                           ; BSR set to: 0
  6646  00E672  0012               	return	
  6647  00E674                     l1370:
  6648                           
  6649                           ; BSR set to: 0
  6650  00E674  503A               	movf	log@x,w,c
  6651  00E676  103B               	iorwf	log@x+1,w,c
  6652  00E678  103C               	iorwf	log@x+2,w,c
  6653  00E67A  A4D8               	btfss	status,2,c
  6654  00E67C  D00C               	goto	l1372
  6655  00E67E  0E00               	movlw	0
  6656  00E680  0100               	movlb	0	; () banked
  6657  00E682  6F89               	movwf	(_errno+1)& (0+255),b
  6658  00E684  0E22               	movlw	34
  6659  00E686  6F88               	movwf	_errno& (0+255),b
  6660  00E688  0E00               	movlw	0
  6661  00E68A  6E3A               	movwf	?_log,c
  6662  00E68C  0E00               	movlw	0
  6663  00E68E  6E3B               	movwf	?_log+1,c
  6664  00E690  0E00               	movlw	0
  6665  00E692  6E3C               	movwf	?_log+2,c
  6666                           
  6667                           ; BSR set to: 0
  6668  00E694  0012               	return	
  6669  00E696                     l1372:
  6670                           
  6671                           ; BSR set to: 0
  6672  00E696  0E00               	movlw	0
  6673  00E698  6E10               	movwf	___ftmul@f2,c
  6674  00E69A  0E00               	movlw	0
  6675  00E69C  6E11               	movwf	___ftmul@f2+1,c
  6676  00E69E  0E40               	movlw	64
  6677  00E6A0  6E12               	movwf	___ftmul@f2+2,c
  6678  00E6A2  0E3D               	movlw	low log@exponent
  6679  00E6A4  6E04               	movwf	frexp@eptr,c
  6680  00E6A6  0E00               	movlw	high log@exponent
  6681  00E6A8  6E05               	movwf	frexp@eptr+1,c
  6682  00E6AA  C03A  F001         	movff	log@x,frexp@value
  6683  00E6AE  C03B  F002         	movff	log@x+1,frexp@value+1
  6684  00E6B2  C03C  F003         	movff	log@x+2,frexp@value+2
  6685  00E6B6  ECA4  F06C         	call	_frexp	;wreg free
  6686  00E6BA  C001  F00D         	movff	?_frexp,___ftmul@f1
  6687  00E6BE  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  6688  00E6C2  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  6689  00E6C6  ECBA  F071         	call	___ftmul	;wreg free
  6690  00E6CA  C00D  F022         	movff	?___ftmul,___ftadd@f1
  6691  00E6CE  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  6692  00E6D2  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  6693  00E6D6  0E00               	movlw	0
  6694  00E6D8  6E25               	movwf	___ftadd@f2,c
  6695  00E6DA  0E80               	movlw	128
  6696  00E6DC  6E26               	movwf	___ftadd@f2+1,c
  6697  00E6DE  0EBF               	movlw	191
  6698  00E6E0  6E27               	movwf	___ftadd@f2+2,c
  6699  00E6E2  EC82  F076         	call	___ftadd	;wreg free
  6700  00E6E6  C022  F03A         	movff	?___ftadd,log@x
  6701  00E6EA  C023  F03B         	movff	?___ftadd+1,log@x+1
  6702  00E6EE  C024  F03C         	movff	?___ftadd+2,log@x+2
  6703  00E6F2  063D               	decf	log@exponent,f,c
  6704  00E6F4  A0D8               	btfss	status,0,c
  6705  00E6F6  063E               	decf	log@exponent+1,f,c
  6706  00E6F8  C03A  F02E         	movff	log@x,eval_poly@x
  6707  00E6FC  C03B  F02F         	movff	log@x+1,eval_poly@x+1
  6708  00E700  C03C  F030         	movff	log@x+2,eval_poly@x+2
  6709  00E704  0E79               	movlw	low log@coeff
  6710  00E706  6E31               	movwf	eval_poly@d,c
  6711  00E708  0EFE               	movlw	high log@coeff
  6712  00E70A  6E32               	movwf	eval_poly@d+1,c
  6713  00E70C  0E00               	movlw	0
  6714  00E70E  6E34               	movwf	eval_poly@n+1,c
  6715  00E710  0E08               	movlw	8
  6716  00E712  6E33               	movwf	eval_poly@n,c
  6717  00E714  EC97  F06F         	call	_eval_poly	;wreg free
  6718  00E718  C02E  F03A         	movff	?_eval_poly,log@x
  6719  00E71C  C02F  F03B         	movff	?_eval_poly+1,log@x+1
  6720  00E720  C030  F03C         	movff	?_eval_poly+2,log@x+2
  6721  00E724  0E72               	movlw	114
  6722  00E726  6E10               	movwf	___ftmul@f2,c
  6723  00E728  0E31               	movlw	49
  6724  00E72A  6E11               	movwf	___ftmul@f2+1,c
  6725  00E72C  0E3F               	movlw	63
  6726  00E72E  6E12               	movwf	___ftmul@f2+2,c
  6727  00E730  C03D  F009         	movff	log@exponent,___awtoft@c
  6728  00E734  C03E  F00A         	movff	log@exponent+1,___awtoft@c+1
  6729  00E738  EC73  F067         	call	___awtoft	;wreg free
  6730  00E73C  C009  F00D         	movff	?___awtoft,___ftmul@f1
  6731  00E740  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  6732  00E744  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  6733  00E748  ECBA  F071         	call	___ftmul	;wreg free
  6734  00E74C  C00D  F022         	movff	?___ftmul,___ftadd@f1
  6735  00E750  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  6736  00E754  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  6737  00E758  C03A  F025         	movff	log@x,___ftadd@f2
  6738  00E75C  C03B  F026         	movff	log@x+1,___ftadd@f2+1
  6739  00E760  C03C  F027         	movff	log@x+2,___ftadd@f2+2
  6740  00E764  EC82  F076         	call	___ftadd	;wreg free
  6741  00E768  C022  F03A         	movff	?___ftadd,?_log
  6742  00E76C  C023  F03B         	movff	?___ftadd+1,?_log+1
  6743  00E770  C024  F03C         	movff	?___ftadd+2,?_log+2
  6744  00E774  0012               	return	
  6745  00E776                     __end_of_log:
  6746                           	opt stack 0
  6747                           tblptru	equ	0xFF8
  6748                           tblptrh	equ	0xFF7
  6749                           tblptrl	equ	0xFF6
  6750                           tablat	equ	0xFF5
  6751                           prodh	equ	0xFF4
  6752                           prodl	equ	0xFF3
  6753                           intcon	equ	0xFF2
  6754                           postinc0	equ	0xFEE
  6755                           wreg	equ	0xFE8
  6756                           postinc1	equ	0xFE6
  6757                           postdec1	equ	0xFE5
  6758                           fsr1h	equ	0xFE2
  6759                           fsr1l	equ	0xFE1
  6760                           indf2	equ	0xFDF
  6761                           postinc2	equ	0xFDE
  6762                           postdec2	equ	0xFDD
  6763                           fsr2h	equ	0xFDA
  6764                           fsr2l	equ	0xFD9
  6765                           status	equ	0xFD8
  6766                           
  6767 ;; *************** function _exp *****************
  6768 ;; Defined at:
  6769 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  x               3   64[COMRAM] int 
  6772 ;; Auto vars:     Size  Location     Type
  6773 ;;  exponent        2   70[COMRAM] int 
  6774 ;;  sign            1   72[COMRAM] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  3   64[COMRAM] unsigned char 
  6777 ;; Registers used:
  6778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6784 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6785 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6787 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6788 ;;Total ram usage:        9 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; Hardware stack levels required when called:    3
  6791 ;; This function calls:
  6792 ;;		___awtoft
  6793 ;;		___ftdiv
  6794 ;;		___ftge
  6795 ;;		___ftmul
  6796 ;;		___ftneg
  6797 ;;		___ftsub
  6798 ;;		___fttol
  6799 ;;		_eval_poly
  6800 ;;		_floor
  6801 ;;		_ldexp
  6802 ;; This function is called by:
  6803 ;;		_pow
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text28
  6808  00EEB0                     __ptext28:
  6809                           	opt stack 0
  6810  00EEB0                     _exp:
  6811                           	opt stack 19
  6812                           
  6813                           ;incstack = 0
  6814  00EEB0  5041               	movf	exp@x,w,c
  6815  00EEB2  1042               	iorwf	exp@x+1,w,c
  6816  00EEB4  1043               	iorwf	exp@x+2,w,c
  6817  00EEB6  A4D8               	btfss	status,2,c
  6818  00EEB8  D007               	goto	l1328
  6819  00EEBA  0E00               	movlw	0
  6820  00EEBC  6E41               	movwf	?_exp,c
  6821  00EEBE  0E80               	movlw	128
  6822  00EEC0  6E42               	movwf	?_exp+1,c
  6823  00EEC2  0E3F               	movlw	63
  6824  00EEC4  6E43               	movwf	?_exp+2,c
  6825  00EEC6  0012               	return	
  6826  00EEC8                     l1328:
  6827  00EEC8  0E72               	movlw	114
  6828  00EECA  6E01               	movwf	___ftge@ff1,c
  6829  00EECC  0E31               	movlw	49
  6830  00EECE  6E02               	movwf	___ftge@ff1+1,c
  6831  00EED0  0E44               	movlw	68
  6832  00EED2  6E03               	movwf	___ftge@ff1+2,c
  6833  00EED4  C041  F004         	movff	exp@x,___ftge@ff2
  6834  00EED8  C042  F005         	movff	exp@x+1,___ftge@ff2+1
  6835  00EEDC  C043  F006         	movff	exp@x+2,___ftge@ff2+2
  6836  00EEE0  EC5C  F06C         	call	___ftge	;wreg free
  6837  00EEE4  B0D8               	btfsc	status,0,c
  6838  00EEE6  D00C               	goto	l1330
  6839  00EEE8  0E00               	movlw	0
  6840  00EEEA  0100               	movlb	0	; () banked
  6841  00EEEC  6F89               	movwf	(_errno+1)& (0+255),b
  6842  00EEEE  0E22               	movlw	34
  6843  00EEF0  6F88               	movwf	_errno& (0+255),b
  6844  00EEF2  0EFF               	movlw	255
  6845  00EEF4  6E41               	movwf	?_exp,c
  6846  00EEF6  0E7F               	movlw	127
  6847  00EEF8  6E42               	movwf	?_exp+1,c
  6848  00EEFA  0E7F               	movlw	127
  6849  00EEFC  6E43               	movwf	?_exp+2,c
  6850                           
  6851                           ; BSR set to: 0
  6852  00EEFE  0012               	return	
  6853  00EF00                     l1330:
  6854                           
  6855                           ; BSR set to: 0
  6856  00EF00  C041  F001         	movff	exp@x,___ftge@ff1
  6857  00EF04  C042  F002         	movff	exp@x+1,___ftge@ff1+1
  6858  00EF08  C043  F003         	movff	exp@x+2,___ftge@ff1+2
  6859  00EF0C  0E49               	movlw	73
  6860  00EF0E  6E04               	movwf	___ftge@ff2,c
  6861  00EF10  0E3A               	movlw	58
  6862  00EF12  6E05               	movwf	___ftge@ff2+1,c
  6863  00EF14  0EC4               	movlw	196
  6864  00EF16  6E06               	movwf	___ftge@ff2+2,c
  6865  00EF18  EC5C  F06C         	call	___ftge	;wreg free
  6866  00EF1C  B0D8               	btfsc	status,0,c
  6867  00EF1E  D00C               	goto	l1331
  6868  00EF20  0E00               	movlw	0
  6869  00EF22  0100               	movlb	0	; () banked
  6870  00EF24  6F89               	movwf	(_errno+1)& (0+255),b
  6871  00EF26  0E22               	movlw	34
  6872  00EF28  6F88               	movwf	_errno& (0+255),b
  6873  00EF2A  0E00               	movlw	0
  6874  00EF2C  6E41               	movwf	?_exp,c
  6875  00EF2E  0E00               	movlw	0
  6876  00EF30  6E42               	movwf	?_exp+1,c
  6877  00EF32  0E00               	movlw	0
  6878  00EF34  6E43               	movwf	?_exp+2,c
  6879                           
  6880                           ; BSR set to: 0
  6881  00EF36  0012               	return	
  6882  00EF38                     l1331:
  6883                           
  6884                           ; BSR set to: 0
  6885  00EF38  AE43               	btfss	exp@x+2,7,c
  6886  00EF3A  D002               	goto	u4910
  6887  00EF3C  0E01               	movlw	1
  6888  00EF3E  D001               	goto	u4920
  6889  00EF40                     u4910:
  6890  00EF40  0E00               	movlw	0
  6891  00EF42                     u4920:
  6892  00EF42  6E49               	movwf	exp@sign,c
  6893  00EF44  5049               	movf	exp@sign,w,c
  6894  00EF46  B4D8               	btfsc	status,2,c
  6895  00EF48  D00E               	goto	l1332
  6896  00EF4A  C041  F001         	movff	exp@x,___ftneg@f1
  6897  00EF4E  C042  F002         	movff	exp@x+1,___ftneg@f1+1
  6898  00EF52  C043  F003         	movff	exp@x+2,___ftneg@f1+2
  6899  00EF56  EC0A  F067         	call	___ftneg	;wreg free
  6900  00EF5A  C001  F041         	movff	?___ftneg,exp@x
  6901  00EF5E  C002  F042         	movff	?___ftneg+1,exp@x+1
  6902  00EF62  C003  F043         	movff	?___ftneg+2,exp@x+2
  6903  00EF66                     l1332:
  6904  00EF66  C041  F00D         	movff	exp@x,___ftmul@f1
  6905  00EF6A  C042  F00E         	movff	exp@x+1,___ftmul@f1+1
  6906  00EF6E  C043  F00F         	movff	exp@x+2,___ftmul@f1+2
  6907  00EF72  0EAA               	movlw	170
  6908  00EF74  6E10               	movwf	___ftmul@f2,c
  6909  00EF76  0EB8               	movlw	184
  6910  00EF78  6E11               	movwf	___ftmul@f2+1,c
  6911  00EF7A  0E3F               	movlw	63
  6912  00EF7C  6E12               	movwf	___ftmul@f2+2,c
  6913  00EF7E  ECBA  F071         	call	___ftmul	;wreg free
  6914  00EF82  C00D  F041         	movff	?___ftmul,exp@x
  6915  00EF86  C00E  F042         	movff	?___ftmul+1,exp@x+1
  6916  00EF8A  C00F  F043         	movff	?___ftmul+2,exp@x+2
  6917  00EF8E  C041  F02E         	movff	exp@x,floor@x
  6918  00EF92  C042  F02F         	movff	exp@x+1,floor@x+1
  6919  00EF96  C043  F030         	movff	exp@x+2,floor@x+2
  6920  00EF9A  ECD8  F070         	call	_floor	;wreg free
  6921  00EF9E  C02E  F044         	movff	?_floor,_exp$2503
  6922  00EFA2  C02F  F045         	movff	?_floor+1,_exp$2503+1
  6923  00EFA6  C030  F046         	movff	?_floor+2,_exp$2503+2
  6924  00EFAA  C044  F00D         	movff	_exp$2503,___fttol@f1
  6925  00EFAE  C045  F00E         	movff	_exp$2503+1,___fttol@f1+1
  6926  00EFB2  C046  F00F         	movff	_exp$2503+2,___fttol@f1+2
  6927  00EFB6  EC34  F072         	call	___fttol	;wreg free
  6928  00EFBA  C00D  F047         	movff	?___fttol,exp@exponent
  6929  00EFBE  C00E  F048         	movff	?___fttol+1,exp@exponent+1
  6930  00EFC2  C041  F02E         	movff	exp@x,___ftsub@f1
  6931  00EFC6  C042  F02F         	movff	exp@x+1,___ftsub@f1+1
  6932  00EFCA  C043  F030         	movff	exp@x+2,___ftsub@f1+2
  6933  00EFCE  C047  F009         	movff	exp@exponent,___awtoft@c
  6934  00EFD2  C048  F00A         	movff	exp@exponent+1,___awtoft@c+1
  6935  00EFD6  EC73  F067         	call	___awtoft	;wreg free
  6936  00EFDA  C009  F031         	movff	?___awtoft,___ftsub@f2
  6937  00EFDE  C00A  F032         	movff	?___awtoft+1,___ftsub@f2+1
  6938  00EFE2  C00B  F033         	movff	?___awtoft+2,___ftsub@f2+2
  6939  00EFE6  EC8F  F067         	call	___ftsub	;wreg free
  6940  00EFEA  C02E  F041         	movff	?___ftsub,exp@x
  6941  00EFEE  C02F  F042         	movff	?___ftsub+1,exp@x+1
  6942  00EFF2  C030  F043         	movff	?___ftsub+2,exp@x+2
  6943  00EFF6  C041  F02E         	movff	exp@x,eval_poly@x
  6944  00EFFA  C042  F02F         	movff	exp@x+1,eval_poly@x+1
  6945  00EFFE  C043  F030         	movff	exp@x+2,eval_poly@x+2
  6946  00F002  0E5B               	movlw	low exp@coeff
  6947  00F004  6E31               	movwf	eval_poly@d,c
  6948  00F006  0EFE               	movlw	high exp@coeff
  6949  00F008  6E32               	movwf	eval_poly@d+1,c
  6950  00F00A  0E00               	movlw	0
  6951  00F00C  6E34               	movwf	eval_poly@n+1,c
  6952  00F00E  0E09               	movlw	9
  6953  00F010  6E33               	movwf	eval_poly@n,c
  6954  00F012  EC97  F06F         	call	_eval_poly	;wreg free
  6955  00F016  C02E  F03A         	movff	?_eval_poly,ldexp@value
  6956  00F01A  C02F  F03B         	movff	?_eval_poly+1,ldexp@value+1
  6957  00F01E  C030  F03C         	movff	?_eval_poly+2,ldexp@value+2
  6958  00F022  C047  F03D         	movff	exp@exponent,ldexp@newexp
  6959  00F026  C048  F03E         	movff	exp@exponent+1,ldexp@newexp+1
  6960  00F02A  EC34  F06F         	call	_ldexp	;wreg free
  6961  00F02E  C03A  F041         	movff	?_ldexp,exp@x
  6962  00F032  C03B  F042         	movff	?_ldexp+1,exp@x+1
  6963  00F036  C03C  F043         	movff	?_ldexp+2,exp@x+2
  6964  00F03A  5049               	movf	exp@sign,w,c
  6965  00F03C  B4D8               	btfsc	status,2,c
  6966  00F03E  D025               	goto	l1333
  6967  00F040  2841               	incf	exp@x,w,c
  6968  00F042  E10E               	bnz	l4519
  6969  00F044  0E7F               	movlw	127
  6970  00F046  1842               	xorwf	exp@x+1,w,c
  6971  00F048  E10B               	bnz	l4519
  6972  00F04A  0E7F               	movlw	127
  6973  00F04C  1843               	xorwf	exp@x+2,w,c
  6974  00F04E  A4D8               	btfss	status,2,c
  6975  00F050  D007               	goto	l1334
  6976  00F052  0E00               	movlw	0
  6977  00F054  6E41               	movwf	?_exp,c
  6978  00F056  0E00               	movlw	0
  6979  00F058  6E42               	movwf	?_exp+1,c
  6980  00F05A  0E00               	movlw	0
  6981  00F05C  6E43               	movwf	?_exp+2,c
  6982  00F05E  0012               	return	
  6983  00F060                     l1334:
  6984  00F060                     l4519:
  6985  00F060  0E00               	movlw	0
  6986  00F062  6E09               	movwf	___ftdiv@f1,c
  6987  00F064  0E80               	movlw	128
  6988  00F066  6E0A               	movwf	___ftdiv@f1+1,c
  6989  00F068  0E3F               	movlw	63
  6990  00F06A  6E0B               	movwf	___ftdiv@f1+2,c
  6991  00F06C  C041  F00C         	movff	exp@x,___ftdiv@f2
  6992  00F070  C042  F00D         	movff	exp@x+1,___ftdiv@f2+1
  6993  00F074  C043  F00E         	movff	exp@x+2,___ftdiv@f2+2
  6994  00F078  EC47  F071         	call	___ftdiv	;wreg free
  6995  00F07C  C009  F041         	movff	?___ftdiv,?_exp
  6996  00F080  C00A  F042         	movff	?___ftdiv+1,?_exp+1
  6997  00F084  C00B  F043         	movff	?___ftdiv+2,?_exp+2
  6998  00F088  0012               	return	
  6999  00F08A                     l1333:
  7000  00F08A  C041  F041         	movff	exp@x,?_exp
  7001  00F08E  C042  F042         	movff	exp@x+1,?_exp+1
  7002  00F092  C043  F043         	movff	exp@x+2,?_exp+2
  7003  00F096  0012               	return		;funcret
  7004  00F098                     __end_of_exp:
  7005                           	opt stack 0
  7006                           tblptru	equ	0xFF8
  7007                           tblptrh	equ	0xFF7
  7008                           tblptrl	equ	0xFF6
  7009                           tablat	equ	0xFF5
  7010                           prodh	equ	0xFF4
  7011                           prodl	equ	0xFF3
  7012                           intcon	equ	0xFF2
  7013                           postinc0	equ	0xFEE
  7014                           wreg	equ	0xFE8
  7015                           postinc1	equ	0xFE6
  7016                           postdec1	equ	0xFE5
  7017                           fsr1h	equ	0xFE2
  7018                           fsr1l	equ	0xFE1
  7019                           indf2	equ	0xFDF
  7020                           postinc2	equ	0xFDE
  7021                           postdec2	equ	0xFDD
  7022                           fsr2h	equ	0xFDA
  7023                           fsr2l	equ	0xFD9
  7024                           status	equ	0xFD8
  7025                           
  7026 ;; *************** function _ldexp *****************
  7027 ;; Defined at:
  7028 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  value           3   57[COMRAM] unsigned char 
  7031 ;;  newexp          2   60[COMRAM] int 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  3   57[COMRAM] int 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7043 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;Total ram usage:        7 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_exp
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text29
  7057  00DE68                     __ptext29:
  7058                           	opt stack 0
  7059  00DE68                     _ldexp:
  7060                           	opt stack 21
  7061                           
  7062                           ;incstack = 0
  7063  00DE68  503A               	movf	ldexp@value,w,c
  7064  00DE6A  103B               	iorwf	ldexp@value+1,w,c
  7065  00DE6C  103C               	iorwf	ldexp@value+2,w,c
  7066  00DE6E  A4D8               	btfss	status,2,c
  7067  00DE70  D007               	goto	l1352
  7068  00DE72  0E00               	movlw	0
  7069  00DE74  6E3A               	movwf	?_ldexp,c
  7070  00DE76  0E00               	movlw	0
  7071  00DE78  6E3B               	movwf	?_ldexp+1,c
  7072  00DE7A  0E00               	movlw	0
  7073  00DE7C  6E3C               	movwf	?_ldexp+2,c
  7074  00DE7E  0012               	return	
  7075  00DE80                     l1352:
  7076  00DE80  503C               	movf	ldexp@value+2,w,c
  7077  00DE82  0B7F               	andlw	127
  7078  00DE84  6E3F               	movwf	??_ldexp& (0+255),c
  7079  00DE86  6A40               	clrf	(??_ldexp+1)& (0+255),c
  7080  00DE88  90D8               	bcf	status,0,c
  7081  00DE8A  363F               	rlcf	??_ldexp,f,c
  7082  00DE8C  3640               	rlcf	??_ldexp+1,f,c
  7083  00DE8E  503F               	movf	??_ldexp,w,c
  7084  00DE90  263D               	addwf	ldexp@newexp,f,c
  7085  00DE92  5040               	movf	??_ldexp+1,w,c
  7086  00DE94  223E               	addwfc	ldexp@newexp+1,f,c
  7087  00DE96  AE3B               	btfss	ldexp@value+1,7,c
  7088  00DE98  D003               	goto	u4210
  7089  00DE9A  6A3F               	clrf	??_ldexp& (0+255),c
  7090  00DE9C  2A3F               	incf	??_ldexp& (0+255),f,c
  7091  00DE9E  D001               	goto	u4218
  7092  00DEA0                     u4210:
  7093  00DEA0  6A3F               	clrf	??_ldexp& (0+255),c
  7094  00DEA2                     u4218:
  7095  00DEA2  503F               	movf	??_ldexp,w,c
  7096  00DEA4  263D               	addwf	ldexp@newexp,f,c
  7097  00DEA6  0E00               	movlw	0
  7098  00DEA8  223E               	addwfc	ldexp@newexp+1,f,c
  7099  00DEAA  AE3E               	btfss	ldexp@newexp+1,7,c
  7100  00DEAC  D00C               	goto	l1354
  7101  00DEAE  0E00               	movlw	0
  7102  00DEB0  0100               	movlb	0	; () banked
  7103  00DEB2  6F89               	movwf	(_errno+1)& (0+255),b
  7104  00DEB4  0E22               	movlw	34
  7105  00DEB6  6F88               	movwf	_errno& (0+255),b
  7106  00DEB8  0E00               	movlw	0
  7107  00DEBA  6E3A               	movwf	?_ldexp,c
  7108  00DEBC  0E00               	movlw	0
  7109  00DEBE  6E3B               	movwf	?_ldexp+1,c
  7110  00DEC0  0E00               	movlw	0
  7111  00DEC2                     L1:
  7112  00DEC2  6E3C               	movwf	?_ldexp+2,c
  7113                           
  7114                           ; BSR set to: 0
  7115  00DEC4  0012               	return	
  7116  00DEC6                     l1354:
  7117                           
  7118                           ; BSR set to: 0
  7119  00DEC6  BE3E               	btfsc	ldexp@newexp+1,7,c
  7120  00DEC8  D016               	goto	l1356
  7121  00DECA  043E               	decf	ldexp@newexp+1,w,c
  7122  00DECC  A0D8               	btfss	status,0,c
  7123  00DECE  D013               	goto	l1356
  7124  00DED0  0E00               	movlw	0
  7125  00DED2  0100               	movlb	0	; () banked
  7126  00DED4  6F89               	movwf	(_errno+1)& (0+255),b
  7127  00DED6  0E22               	movlw	34
  7128  00DED8  6F88               	movwf	_errno& (0+255),b
  7129                           
  7130                           ; BSR set to: 0
  7131  00DEDA  AE3C               	btfss	ldexp@value+2,7,c
  7132  00DEDC  D006               	goto	l1357
  7133                           
  7134                           ; BSR set to: 0
  7135  00DEDE  0EFF               	movlw	255
  7136  00DEE0  6E3A               	movwf	?_ldexp,c
  7137  00DEE2  0E7F               	movlw	127
  7138  00DEE4  6E3B               	movwf	?_ldexp+1,c
  7139  00DEE6  0EFF               	movlw	255
  7140  00DEE8  D7EC               	goto	L1
  7141  00DEEA                     l1357:
  7142                           
  7143                           ; BSR set to: 0
  7144                           
  7145                           ; BSR set to: 0
  7146  00DEEA  0EFF               	movlw	255
  7147  00DEEC  6E3A               	movwf	?_ldexp,c
  7148  00DEEE  0E7F               	movlw	127
  7149  00DEF0  6E3B               	movwf	?_ldexp+1,c
  7150  00DEF2  0E7F               	movlw	127
  7151  00DEF4  D7E6               	goto	L1
  7152  00DEF6                     l1356:
  7153                           
  7154                           ; BSR set to: 0
  7155  00DEF6  343E               	rlcf	ldexp@newexp+1,w,c
  7156  00DEF8  303E               	rrcf	ldexp@newexp+1,w,c
  7157  00DEFA  6E40               	movwf	(??_ldexp+1)& (0+255),c
  7158  00DEFC  303D               	rrcf	ldexp@newexp,w,c
  7159  00DEFE  6E3F               	movwf	??_ldexp& (0+255),c
  7160  00DF00  503C               	movf	ldexp@value+2,w,c
  7161  00DF02  183F               	xorwf	??_ldexp,w,c
  7162  00DF04  0B80               	andlw	-128
  7163  00DF06  183F               	xorwf	??_ldexp,w,c
  7164  00DF08  6E3C               	movwf	ldexp@value+2,c
  7165  00DF0A  C03D  F03F         	movff	ldexp@newexp,??_ldexp
  7166  00DF0E  0E01               	movlw	1
  7167  00DF10  163F               	andwf	??_ldexp,f,c
  7168  00DF12  323F               	rrcf	??_ldexp,f,c
  7169  00DF14  323F               	rrcf	??_ldexp,f,c
  7170  00DF16  503B               	movf	ldexp@value+1,w,c
  7171  00DF18  183F               	xorwf	??_ldexp,w,c
  7172  00DF1A  0B7F               	andlw	-129
  7173  00DF1C  183F               	xorwf	??_ldexp,w,c
  7174  00DF1E  6E3B               	movwf	ldexp@value+1,c
  7175  00DF20  C03A  F03A         	movff	ldexp@value,?_ldexp
  7176  00DF24  C03B  F03B         	movff	ldexp@value+1,?_ldexp+1
  7177  00DF28  C03C  F03C         	movff	ldexp@value+2,?_ldexp+2
  7178  00DF2C  0012               	return	
  7179  00DF2E                     __end_of_ldexp:
  7180                           	opt stack 0
  7181                           tblptru	equ	0xFF8
  7182                           tblptrh	equ	0xFF7
  7183                           tblptrl	equ	0xFF6
  7184                           tablat	equ	0xFF5
  7185                           prodh	equ	0xFF4
  7186                           prodl	equ	0xFF3
  7187                           intcon	equ	0xFF2
  7188                           postinc0	equ	0xFEE
  7189                           wreg	equ	0xFE8
  7190                           postinc1	equ	0xFE6
  7191                           postdec1	equ	0xFE5
  7192                           fsr1h	equ	0xFE2
  7193                           fsr1l	equ	0xFE1
  7194                           indf2	equ	0xFDF
  7195                           postinc2	equ	0xFDE
  7196                           postdec2	equ	0xFDD
  7197                           fsr2h	equ	0xFDA
  7198                           fsr2l	equ	0xFD9
  7199                           status	equ	0xFD8
  7200                           
  7201 ;; *************** function _floor *****************
  7202 ;; Defined at:
  7203 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  x               3   45[COMRAM] int 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  i               3   48[COMRAM] int 
  7208 ;;  expon           2   51[COMRAM] int 
  7209 ;; Return value:  Size  Location     Type
  7210 ;;                  3   45[COMRAM] int 
  7211 ;; Registers used:
  7212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7213 ;; Tracked objects:
  7214 ;;		On entry : 0/0
  7215 ;;		On exit  : 0/0
  7216 ;;		Unchanged: 0/0
  7217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7218 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;Total ram usage:        8 bytes
  7223 ;; Hardware stack levels used:    1
  7224 ;; Hardware stack levels required when called:    2
  7225 ;; This function calls:
  7226 ;;		___altoft
  7227 ;;		___ftadd
  7228 ;;		___ftge
  7229 ;;		___fttol
  7230 ;;		_frexp
  7231 ;; This function is called by:
  7232 ;;		_exp
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text30
  7237  00E1B0                     __ptext30:
  7238                           	opt stack 0
  7239  00E1B0                     _floor:
  7240                           	opt stack 19
  7241                           
  7242                           ;incstack = 0
  7243  00E1B0  C02E  F001         	movff	floor@x,frexp@value
  7244  00E1B4  C02F  F002         	movff	floor@x+1,frexp@value+1
  7245  00E1B8  C030  F003         	movff	floor@x+2,frexp@value+2
  7246  00E1BC  0E34               	movlw	low floor@expon
  7247  00E1BE  6E04               	movwf	frexp@eptr,c
  7248  00E1C0  0E00               	movlw	high floor@expon
  7249  00E1C2  6E05               	movwf	frexp@eptr+1,c
  7250  00E1C4  ECA4  F06C         	call	_frexp	;wreg free
  7251  00E1C8  AE35               	btfss	floor@expon+1,7,c
  7252  00E1CA  D010               	goto	l1339
  7253  00E1CC  AE30               	btfss	floor@x+2,7,c
  7254  00E1CE  D007               	goto	l1340
  7255  00E1D0  0E00               	movlw	0
  7256  00E1D2  6E2E               	movwf	?_floor,c
  7257  00E1D4  0E80               	movlw	128
  7258  00E1D6  6E2F               	movwf	?_floor+1,c
  7259  00E1D8  0EBF               	movlw	191
  7260  00E1DA  6E30               	movwf	?_floor+2,c
  7261  00E1DC  0012               	return	
  7262  00E1DE                     l1340:
  7263  00E1DE  0E00               	movlw	0
  7264  00E1E0  6E2E               	movwf	?_floor,c
  7265  00E1E2  0E00               	movlw	0
  7266  00E1E4  6E2F               	movwf	?_floor+1,c
  7267  00E1E6  0E00               	movlw	0
  7268  00E1E8  6E30               	movwf	?_floor+2,c
  7269  00E1EA  0012               	return	
  7270  00E1EC                     l1339:
  7271  00E1EC  5035               	movf	floor@expon+1,w,c
  7272  00E1EE  E104               	bnz	u4170
  7273  00E1F0  0E15               	movlw	21
  7274  00E1F2  5C34               	subwf	floor@expon,w,c
  7275  00E1F4  A0D8               	btfss	status,0,c
  7276  00E1F6  D007               	goto	l1342
  7277  00E1F8                     u4170:
  7278  00E1F8  C02E  F02E         	movff	floor@x,?_floor
  7279  00E1FC  C02F  F02F         	movff	floor@x+1,?_floor+1
  7280  00E200  C030  F030         	movff	floor@x+2,?_floor+2
  7281  00E204  0012               	return	
  7282  00E206                     l1342:
  7283  00E206  C02E  F00D         	movff	floor@x,___fttol@f1
  7284  00E20A  C02F  F00E         	movff	floor@x+1,___fttol@f1+1
  7285  00E20E  C030  F00F         	movff	floor@x+2,___fttol@f1+2
  7286  00E212  EC34  F072         	call	___fttol	;wreg free
  7287  00E216  C00D  F01C         	movff	?___fttol,___altoft@c
  7288  00E21A  C00E  F01D         	movff	?___fttol+1,___altoft@c+1
  7289  00E21E  C00F  F01E         	movff	?___fttol+2,___altoft@c+2
  7290  00E222  C010  F01F         	movff	?___fttol+3,___altoft@c+3
  7291  00E226  EC05  F06A         	call	___altoft	;wreg free
  7292  00E22A  C01C  F031         	movff	?___altoft,floor@i
  7293  00E22E  C01D  F032         	movff	?___altoft+1,floor@i+1
  7294  00E232  C01E  F033         	movff	?___altoft+2,floor@i+2
  7295  00E236  C02E  F001         	movff	floor@x,___ftge@ff1
  7296  00E23A  C02F  F002         	movff	floor@x+1,___ftge@ff1+1
  7297  00E23E  C030  F003         	movff	floor@x+2,___ftge@ff1+2
  7298  00E242  C031  F004         	movff	floor@i,___ftge@ff2
  7299  00E246  C032  F005         	movff	floor@i+1,___ftge@ff2+1
  7300  00E24A  C033  F006         	movff	floor@i+2,___ftge@ff2+2
  7301  00E24E  EC5C  F06C         	call	___ftge	;wreg free
  7302  00E252  B0D8               	btfsc	status,0,c
  7303  00E254  D015               	goto	l1343
  7304  00E256  C031  F022         	movff	floor@i,___ftadd@f1
  7305  00E25A  C032  F023         	movff	floor@i+1,___ftadd@f1+1
  7306  00E25E  C033  F024         	movff	floor@i+2,___ftadd@f1+2
  7307  00E262  0E00               	movlw	0
  7308  00E264  6E25               	movwf	___ftadd@f2,c
  7309  00E266  0E80               	movlw	128
  7310  00E268  6E26               	movwf	___ftadd@f2+1,c
  7311  00E26A  0EBF               	movlw	191
  7312  00E26C  6E27               	movwf	___ftadd@f2+2,c
  7313  00E26E  EC82  F076         	call	___ftadd	;wreg free
  7314  00E272  C022  F02E         	movff	?___ftadd,?_floor
  7315  00E276  C023  F02F         	movff	?___ftadd+1,?_floor+1
  7316  00E27A  C024  F030         	movff	?___ftadd+2,?_floor+2
  7317  00E27E  0012               	return	
  7318  00E280                     l1343:
  7319  00E280  C031  F02E         	movff	floor@i,?_floor
  7320  00E284  C032  F02F         	movff	floor@i+1,?_floor+1
  7321  00E288  C033  F030         	movff	floor@i+2,?_floor+2
  7322  00E28C  0012               	return		;funcret
  7323  00E28E                     __end_of_floor:
  7324                           	opt stack 0
  7325                           tblptru	equ	0xFF8
  7326                           tblptrh	equ	0xFF7
  7327                           tblptrl	equ	0xFF6
  7328                           tablat	equ	0xFF5
  7329                           prodh	equ	0xFF4
  7330                           prodl	equ	0xFF3
  7331                           intcon	equ	0xFF2
  7332                           postinc0	equ	0xFEE
  7333                           wreg	equ	0xFE8
  7334                           postinc1	equ	0xFE6
  7335                           postdec1	equ	0xFE5
  7336                           fsr1h	equ	0xFE2
  7337                           fsr1l	equ	0xFE1
  7338                           indf2	equ	0xFDF
  7339                           postinc2	equ	0xFDE
  7340                           postdec2	equ	0xFDD
  7341                           fsr2h	equ	0xFDA
  7342                           fsr2l	equ	0xFD9
  7343                           status	equ	0xFD8
  7344                           
  7345 ;; *************** function _frexp *****************
  7346 ;; Defined at:
  7347 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  value           3    0[COMRAM] int 
  7350 ;;  eptr            2    3[COMRAM] PTR int 
  7351 ;;		 -> log@exponent(2), floor@expon(2), 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  3    0[COMRAM] PTR int 
  7356 ;; Registers used:
  7357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7363 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;Total ram usage:        7 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_floor
  7373 ;;		_log
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text31
  7378  00D948                     __ptext31:
  7379                           	opt stack 0
  7380  00D948                     _frexp:
  7381                           	opt stack 21
  7382                           
  7383                           ;incstack = 0
  7384  00D948  5001               	movf	frexp@value,w,c
  7385  00D94A  1002               	iorwf	frexp@value+1,w,c
  7386  00D94C  1003               	iorwf	frexp@value+2,w,c
  7387  00D94E  A4D8               	btfss	status,2,c
  7388  00D950  D00F               	goto	l1348
  7389  00D952  C004  FFD9         	movff	frexp@eptr,fsr2l
  7390  00D956  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  7391  00D95A  0E00               	movlw	0
  7392  00D95C  6EDE               	movwf	postinc2,c
  7393  00D95E  0E00               	movlw	0
  7394  00D960  6EDD               	movwf	postdec2,c
  7395  00D962  0E00               	movlw	0
  7396  00D964  6E01               	movwf	?_frexp,c
  7397  00D966  0E00               	movlw	0
  7398  00D968  6E02               	movwf	?_frexp+1,c
  7399  00D96A  0E00               	movlw	0
  7400  00D96C  6E03               	movwf	?_frexp+2,c
  7401  00D96E  0012               	return	
  7402  00D970                     l1348:
  7403  00D970  5003               	movf	frexp@value+2,w,c
  7404  00D972  0B7F               	andlw	127
  7405  00D974  6E06               	movwf	??_frexp& (0+255),c
  7406  00D976  6A07               	clrf	(??_frexp+1)& (0+255),c
  7407  00D978  90D8               	bcf	status,0,c
  7408  00D97A  3606               	rlcf	??_frexp,f,c
  7409  00D97C  3607               	rlcf	??_frexp+1,f,c
  7410  00D97E  C004  FFD9         	movff	frexp@eptr,fsr2l
  7411  00D982  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  7412  00D986  C006  FFDE         	movff	??_frexp,postinc2
  7413  00D98A  C007  FFDD         	movff	??_frexp+1,postdec2
  7414  00D98E  AE02               	btfss	frexp@value+1,7,c
  7415  00D990  D003               	goto	u3980
  7416  00D992  6A06               	clrf	??_frexp& (0+255),c
  7417  00D994  2A06               	incf	??_frexp& (0+255),f,c
  7418  00D996  D001               	goto	u3988
  7419  00D998                     u3980:
  7420  00D998  6A06               	clrf	??_frexp& (0+255),c
  7421  00D99A                     u3988:
  7422  00D99A  5006               	movf	??_frexp,w,c
  7423  00D99C  C004  FFD9         	movff	frexp@eptr,fsr2l
  7424  00D9A0  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  7425  00D9A4  12DE               	iorwf	postinc2,f,c
  7426  00D9A6  0E00               	movlw	0
  7427  00D9A8  12DD               	iorwf	postdec2,f,c
  7428  00D9AA  C004  FFD9         	movff	frexp@eptr,fsr2l
  7429  00D9AE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  7430  00D9B2  0E82               	movlw	130
  7431  00D9B4  26DE               	addwf	postinc2,f,c
  7432  00D9B6  0EFF               	movlw	255
  7433  00D9B8  22DD               	addwfc	postdec2,f,c
  7434  00D9BA  8003               	bsf	frexp@value+2,0,c
  7435  00D9BC  8203               	bsf	frexp@value+2,1,c
  7436  00D9BE  8403               	bsf	frexp@value+2,2,c
  7437  00D9C0  8603               	bsf	frexp@value+2,3,c
  7438  00D9C2  8803               	bsf	frexp@value+2,4,c
  7439  00D9C4  8A03               	bsf	frexp@value+2,5,c
  7440  00D9C6  9C03               	bcf	frexp@value+2,6,c
  7441  00D9C8  9E02               	bcf	frexp@value+1,7,c
  7442  00D9CA  C001  F001         	movff	frexp@value,?_frexp
  7443  00D9CE  C002  F002         	movff	frexp@value+1,?_frexp+1
  7444  00D9D2  C003  F003         	movff	frexp@value+2,?_frexp+2
  7445  00D9D6  0012               	return	
  7446  00D9D8                     __end_of_frexp:
  7447                           	opt stack 0
  7448                           tblptru	equ	0xFF8
  7449                           tblptrh	equ	0xFF7
  7450                           tblptrl	equ	0xFF6
  7451                           tablat	equ	0xFF5
  7452                           prodh	equ	0xFF4
  7453                           prodl	equ	0xFF3
  7454                           intcon	equ	0xFF2
  7455                           postinc0	equ	0xFEE
  7456                           wreg	equ	0xFE8
  7457                           postinc1	equ	0xFE6
  7458                           postdec1	equ	0xFE5
  7459                           fsr1h	equ	0xFE2
  7460                           fsr1l	equ	0xFE1
  7461                           indf2	equ	0xFDF
  7462                           postinc2	equ	0xFDE
  7463                           postdec2	equ	0xFDD
  7464                           fsr2h	equ	0xFDA
  7465                           fsr2l	equ	0xFD9
  7466                           status	equ	0xFD8
  7467                           
  7468 ;; *************** function ___fttol *****************
  7469 ;; Defined at:
  7470 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  f1              3   12[COMRAM] float 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  lval            4   22[COMRAM] unsigned long 
  7475 ;;  exp1            1   26[COMRAM] unsigned char 
  7476 ;;  sign1           1   21[COMRAM] unsigned char 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  4   12[COMRAM] long 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7487 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7488 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7489 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7490 ;;Total ram usage:       15 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_covertir_valores_de_array_a_escala_decimal
  7496 ;;		_pow
  7497 ;;		_exp
  7498 ;;		_floor
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text32
  7503  00E468                     __ptext32:
  7504                           	opt stack 0
  7505  00E468                     ___fttol:
  7506                           	opt stack 20
  7507                           
  7508                           ;incstack = 0
  7509  00E468  C00F  F011         	movff	___fttol@f1+2,??___fttol
  7510  00E46C  6A12               	clrf	(??___fttol+1)& (0+255),c
  7511  00E46E  6A13               	clrf	(??___fttol+2)& (0+255),c
  7512  00E470  340E               	rlcf	___fttol@f1+1,w,c
  7513  00E472  3611               	rlcf	??___fttol& (0+255),f,c
  7514  00E474  E301               	bnc	u3891
  7515  00E476  8012               	bsf	(??___fttol+1)& (0+255),0,c
  7516  00E478                     u3891:
  7517  00E478  5011               	movf	??___fttol,w,c
  7518  00E47A  6E1B               	movwf	___fttol@exp1,c
  7519  00E47C  501B               	movf	___fttol@exp1,w,c
  7520  00E47E  A4D8               	btfss	status,2,c
  7521  00E480  D009               	goto	l1044
  7522  00E482  0E00               	movlw	0
  7523  00E484  6E0D               	movwf	?___fttol,c
  7524  00E486  0E00               	movlw	0
  7525  00E488  6E0E               	movwf	?___fttol+1,c
  7526  00E48A  0E00               	movlw	0
  7527  00E48C  6E0F               	movwf	?___fttol+2,c
  7528  00E48E  0E00               	movlw	0
  7529  00E490  6E10               	movwf	?___fttol+3,c
  7530  00E492  0012               	return	
  7531  00E494                     l1044:
  7532  00E494  0E17               	movlw	23
  7533  00E496  6E11               	movwf	??___fttol& (0+255),c
  7534  00E498  C00D  F012         	movff	___fttol@f1,??___fttol+1
  7535  00E49C  C00E  F013         	movff	___fttol@f1+1,??___fttol+2
  7536  00E4A0  C00F  F014         	movff	___fttol@f1+2,??___fttol+3
  7537  00E4A4  2811               	incf	??___fttol,w,c
  7538  00E4A6  6E15               	movwf	(??___fttol+4)& (0+255),c
  7539  00E4A8  D004               	goto	u3910
  7540  00E4AA                     u3915:
  7541  00E4AA  90D8               	bcf	status,0,c
  7542  00E4AC  3214               	rrcf	??___fttol+3,f,c
  7543  00E4AE  3213               	rrcf	??___fttol+2,f,c
  7544  00E4B0  3212               	rrcf	??___fttol+1,f,c
  7545  00E4B2                     u3910:
  7546  00E4B2  2E15               	decfsz	(??___fttol+4)& (0+255),f,c
  7547  00E4B4  D7FA               	goto	u3915
  7548  00E4B6  5012               	movf	??___fttol+1,w,c
  7549  00E4B8  6E16               	movwf	___fttol@sign1,c
  7550  00E4BA  8E0E               	bsf	___fttol@f1+1,7,c
  7551  00E4BC  0EFF               	movlw	255
  7552  00E4BE  160D               	andwf	___fttol@f1,f,c
  7553  00E4C0  0EFF               	movlw	255
  7554  00E4C2  160E               	andwf	___fttol@f1+1,f,c
  7555  00E4C4  0E00               	movlw	0
  7556  00E4C6  160F               	andwf	___fttol@f1+2,f,c
  7557  00E4C8  500D               	movf	___fttol@f1,w,c
  7558  00E4CA  6E17               	movwf	___fttol@lval,c
  7559  00E4CC  500E               	movf	___fttol@f1+1,w,c
  7560  00E4CE  6E18               	movwf	___fttol@lval+1,c
  7561  00E4D0  500F               	movf	___fttol@f1+2,w,c
  7562  00E4D2  6E19               	movwf	___fttol@lval+2,c
  7563  00E4D4  6A1A               	clrf	___fttol@lval+3,c
  7564  00E4D6  0E8E               	movlw	142
  7565  00E4D8  5E1B               	subwf	___fttol@exp1,f,c
  7566  00E4DA  AE1B               	btfss	___fttol@exp1,7,c
  7567  00E4DC  D016               	goto	l1046
  7568  00E4DE  501B               	movf	___fttol@exp1,w,c
  7569  00E4E0  0A80               	xorlw	128
  7570  00E4E2  0F8F               	addlw	143
  7571  00E4E4  B0D8               	btfsc	status,0,c
  7572  00E4E6  D009               	goto	l1047
  7573  00E4E8  0E00               	movlw	0
  7574  00E4EA  6E0D               	movwf	?___fttol,c
  7575  00E4EC  0E00               	movlw	0
  7576  00E4EE  6E0E               	movwf	?___fttol+1,c
  7577  00E4F0  0E00               	movlw	0
  7578  00E4F2  6E0F               	movwf	?___fttol+2,c
  7579  00E4F4  0E00               	movlw	0
  7580  00E4F6  6E10               	movwf	?___fttol+3,c
  7581  00E4F8  0012               	return	
  7582  00E4FA                     l1047:
  7583  00E4FA  90D8               	bcf	status,0,c
  7584  00E4FC  321A               	rrcf	___fttol@lval+3,f,c
  7585  00E4FE  3219               	rrcf	___fttol@lval+2,f,c
  7586  00E500  3218               	rrcf	___fttol@lval+1,f,c
  7587  00E502  3217               	rrcf	___fttol@lval,f,c
  7588  00E504  3E1B               	incfsz	___fttol@exp1,f,c
  7589  00E506  D7F9               	goto	l1047
  7590  00E508  D015               	goto	u3950
  7591  00E50A                     l1046:
  7592  00E50A  0E17               	movlw	23
  7593  00E50C  641B               	cpfsgt	___fttol@exp1,c
  7594  00E50E  D00F               	goto	l1052
  7595  00E510  0E00               	movlw	0
  7596  00E512  6E0D               	movwf	?___fttol,c
  7597  00E514  0E00               	movlw	0
  7598  00E516  6E0E               	movwf	?___fttol+1,c
  7599  00E518  0E00               	movlw	0
  7600  00E51A  6E0F               	movwf	?___fttol+2,c
  7601  00E51C  0E00               	movlw	0
  7602  00E51E  6E10               	movwf	?___fttol+3,c
  7603  00E520  0012               	return	
  7604  00E522  90D8               	bcf	status,0,c
  7605  00E524  3617               	rlcf	___fttol@lval,f,c
  7606  00E526  3618               	rlcf	___fttol@lval+1,f,c
  7607  00E528  3619               	rlcf	___fttol@lval+2,f,c
  7608  00E52A  361A               	rlcf	___fttol@lval+3,f,c
  7609  00E52C  061B               	decf	___fttol@exp1,f,c
  7610  00E52E                     l1052:
  7611  00E52E  501B               	movf	___fttol@exp1,w,c
  7612  00E530  A4D8               	btfss	status,2,c
  7613  00E532  D7F7               	goto	l1053
  7614  00E534                     u3950:
  7615  00E534  5016               	movf	___fttol@sign1,w,c
  7616  00E536  B4D8               	btfsc	status,2,c
  7617  00E538  D008               	goto	l1055
  7618  00E53A  1E1A               	comf	___fttol@lval+3,f,c
  7619  00E53C  1E19               	comf	___fttol@lval+2,f,c
  7620  00E53E  1E18               	comf	___fttol@lval+1,f,c
  7621  00E540  6C17               	negf	___fttol@lval,c
  7622  00E542  0E00               	movlw	0
  7623  00E544  2218               	addwfc	___fttol@lval+1,f,c
  7624  00E546  2219               	addwfc	___fttol@lval+2,f,c
  7625  00E548  221A               	addwfc	___fttol@lval+3,f,c
  7626  00E54A                     l1055:
  7627  00E54A  C017  F00D         	movff	___fttol@lval,?___fttol
  7628  00E54E  C018  F00E         	movff	___fttol@lval+1,?___fttol+1
  7629  00E552  C019  F00F         	movff	___fttol@lval+2,?___fttol+2
  7630  00E556  C01A  F010         	movff	___fttol@lval+3,?___fttol+3
  7631  00E55A  0012               	return	
  7632  00E55C                     __end_of___fttol:
  7633                           	opt stack 0
  7634                           tblptru	equ	0xFF8
  7635                           tblptrh	equ	0xFF7
  7636                           tblptrl	equ	0xFF6
  7637                           tablat	equ	0xFF5
  7638                           prodh	equ	0xFF4
  7639                           prodl	equ	0xFF3
  7640                           intcon	equ	0xFF2
  7641                           postinc0	equ	0xFEE
  7642                           wreg	equ	0xFE8
  7643                           postinc1	equ	0xFE6
  7644                           postdec1	equ	0xFE5
  7645                           fsr1h	equ	0xFE2
  7646                           fsr1l	equ	0xFE1
  7647                           indf2	equ	0xFDF
  7648                           postinc2	equ	0xFDE
  7649                           postdec2	equ	0xFDD
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function ___ftge *****************
  7655 ;; Defined at:
  7656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  ff1             3    0[COMRAM] float 
  7659 ;;  ff2             3    3[COMRAM] float 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;		None               void
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7671 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7673 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7674 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7675 ;;Total ram usage:        9 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_pow
  7681 ;;		_exp
  7682 ;;		_floor
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text33
  7687  00D8B8                     __ptext33:
  7688                           	opt stack 0
  7689  00D8B8                     ___ftge:
  7690                           	opt stack 20
  7691                           
  7692                           ;incstack = 0
  7693  00D8B8  AE03               	btfss	___ftge@ff1+2,7,c
  7694  00D8BA  D016               	goto	l1016
  7695  00D8BC  C001  F007         	movff	___ftge@ff1,??___ftge
  7696  00D8C0  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  7697  00D8C4  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  7698  00D8C8  1E07               	comf	??___ftge,f,c
  7699  00D8CA  1E08               	comf	??___ftge+1,f,c
  7700  00D8CC  1E09               	comf	??___ftge+2,f,c
  7701  00D8CE  2A07               	incf	??___ftge,f,c
  7702  00D8D0  0E00               	movlw	0
  7703  00D8D2  2208               	addwfc	??___ftge+1,f,c
  7704  00D8D4  2209               	addwfc	??___ftge+2,f,c
  7705  00D8D6  0E00               	movlw	0
  7706  00D8D8  2407               	addwf	??___ftge,w,c
  7707  00D8DA  6E01               	movwf	___ftge@ff1,c
  7708  00D8DC  0E00               	movlw	0
  7709  00D8DE  2008               	addwfc	??___ftge+1,w,c
  7710  00D8E0  6E02               	movwf	___ftge@ff1+1,c
  7711  00D8E2  0E80               	movlw	128
  7712  00D8E4  2009               	addwfc	??___ftge+2,w,c
  7713  00D8E6  6E03               	movwf	___ftge@ff1+2,c
  7714  00D8E8                     l1016:
  7715  00D8E8  AE06               	btfss	___ftge@ff2+2,7,c
  7716  00D8EA  D016               	goto	l1017
  7717  00D8EC  C004  F007         	movff	___ftge@ff2,??___ftge
  7718  00D8F0  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  7719  00D8F4  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  7720  00D8F8  1E07               	comf	??___ftge,f,c
  7721  00D8FA  1E08               	comf	??___ftge+1,f,c
  7722  00D8FC  1E09               	comf	??___ftge+2,f,c
  7723  00D8FE  2A07               	incf	??___ftge,f,c
  7724  00D900  0E00               	movlw	0
  7725  00D902  2208               	addwfc	??___ftge+1,f,c
  7726  00D904  2209               	addwfc	??___ftge+2,f,c
  7727  00D906  0E00               	movlw	0
  7728  00D908  2407               	addwf	??___ftge,w,c
  7729  00D90A  6E04               	movwf	___ftge@ff2,c
  7730  00D90C  0E00               	movlw	0
  7731  00D90E  2008               	addwfc	??___ftge+1,w,c
  7732  00D910  6E05               	movwf	___ftge@ff2+1,c
  7733  00D912  0E80               	movlw	128
  7734  00D914  2009               	addwfc	??___ftge+2,w,c
  7735  00D916  6E06               	movwf	___ftge@ff2+2,c
  7736  00D918                     l1017:
  7737  00D918  0E00               	movlw	0
  7738  00D91A  1A01               	xorwf	___ftge@ff1,f,c
  7739  00D91C  0E00               	movlw	0
  7740  00D91E  1A02               	xorwf	___ftge@ff1+1,f,c
  7741  00D920  0E80               	movlw	128
  7742  00D922  1A03               	xorwf	___ftge@ff1+2,f,c
  7743  00D924  0E00               	movlw	0
  7744  00D926  1A04               	xorwf	___ftge@ff2,f,c
  7745  00D928  0E00               	movlw	0
  7746  00D92A  1A05               	xorwf	___ftge@ff2+1,f,c
  7747  00D92C  0E80               	movlw	128
  7748  00D92E  1A06               	xorwf	___ftge@ff2+2,f,c
  7749  00D930  5004               	movf	___ftge@ff2,w,c
  7750  00D932  5C01               	subwf	___ftge@ff1,w,c
  7751  00D934  5005               	movf	___ftge@ff2+1,w,c
  7752  00D936  5802               	subwfb	___ftge@ff1+1,w,c
  7753  00D938  5006               	movf	___ftge@ff2+2,w,c
  7754  00D93A  5803               	subwfb	___ftge@ff1+2,w,c
  7755  00D93C  B0D8               	btfsc	status,0,c
  7756  00D93E  D002               	goto	l3589
  7757  00D940  90D8               	bcf	status,0,c
  7758  00D942  0012               	return	
  7759  00D944                     l3589:
  7760  00D944  80D8               	bsf	status,0,c
  7761  00D946  0012               	return	
  7762  00D948                     __end_of___ftge:
  7763                           	opt stack 0
  7764                           tblptru	equ	0xFF8
  7765                           tblptrh	equ	0xFF7
  7766                           tblptrl	equ	0xFF6
  7767                           tablat	equ	0xFF5
  7768                           prodh	equ	0xFF4
  7769                           prodl	equ	0xFF3
  7770                           intcon	equ	0xFF2
  7771                           postinc0	equ	0xFEE
  7772                           wreg	equ	0xFE8
  7773                           postinc1	equ	0xFE6
  7774                           postdec1	equ	0xFE5
  7775                           fsr1h	equ	0xFE2
  7776                           fsr1l	equ	0xFE1
  7777                           indf2	equ	0xFDF
  7778                           postinc2	equ	0xFDE
  7779                           postdec2	equ	0xFDD
  7780                           fsr2h	equ	0xFDA
  7781                           fsr2l	equ	0xFD9
  7782                           status	equ	0xFD8
  7783                           
  7784 ;; *************** function ___altoft *****************
  7785 ;; Defined at:
  7786 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;  c               4   27[COMRAM] long 
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;  sign            1   36[COMRAM] unsigned char 
  7791 ;;  exp             1   35[COMRAM] unsigned char 
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  3   27[COMRAM] float 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2, status,0, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7804 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7805 ;;Total ram usage:       10 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    1
  7808 ;; This function calls:
  7809 ;;		___ftpack
  7810 ;; This function is called by:
  7811 ;;		_floor
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text34
  7816  00D40A                     __ptext34:
  7817                           	opt stack 0
  7818  00D40A                     ___altoft:
  7819                           	opt stack 19
  7820                           
  7821                           ;incstack = 0
  7822  00D40A  0E00               	movlw	0
  7823  00D40C  6E25               	movwf	___altoft@sign,c
  7824  00D40E  0E8E               	movlw	142
  7825  00D410  6E24               	movwf	___altoft@exp,c
  7826  00D412  AE1F               	btfss	___altoft@c+3,7,c
  7827  00D414  D011               	goto	l793
  7828  00D416  1E1F               	comf	___altoft@c+3,f,c
  7829  00D418  1E1E               	comf	___altoft@c+2,f,c
  7830  00D41A  1E1D               	comf	___altoft@c+1,f,c
  7831  00D41C  6C1C               	negf	___altoft@c,c
  7832  00D41E  0E00               	movlw	0
  7833  00D420  221D               	addwfc	___altoft@c+1,f,c
  7834  00D422  221E               	addwfc	___altoft@c+2,f,c
  7835  00D424  221F               	addwfc	___altoft@c+3,f,c
  7836  00D426  0E01               	movlw	1
  7837  00D428  6E25               	movwf	___altoft@sign,c
  7838  00D42A  D006               	goto	l793
  7839  00D42C  90D8               	bcf	status,0,c
  7840  00D42E  321F               	rrcf	___altoft@c+3,f,c
  7841  00D430  321E               	rrcf	___altoft@c+2,f,c
  7842  00D432  321D               	rrcf	___altoft@c+1,f,c
  7843  00D434  321C               	rrcf	___altoft@c,f,c
  7844  00D436  2A24               	incf	___altoft@exp,f,c
  7845  00D438                     l793:
  7846  00D438  0E00               	movlw	0
  7847  00D43A  141C               	andwf	___altoft@c,w,c
  7848  00D43C  6E20               	movwf	??___altoft& (0+255),c
  7849  00D43E  0E00               	movlw	0
  7850  00D440  141D               	andwf	___altoft@c+1,w,c
  7851  00D442  6E21               	movwf	(??___altoft+1)& (0+255),c
  7852  00D444  0E00               	movlw	0
  7853  00D446  141E               	andwf	___altoft@c+2,w,c
  7854  00D448  6E22               	movwf	(??___altoft+2)& (0+255),c
  7855  00D44A  0EFF               	movlw	255
  7856  00D44C  141F               	andwf	___altoft@c+3,w,c
  7857  00D44E  6E23               	movwf	(??___altoft+3)& (0+255),c
  7858  00D450  5020               	movf	??___altoft,w,c
  7859  00D452  1021               	iorwf	??___altoft+1,w,c
  7860  00D454  1022               	iorwf	??___altoft+2,w,c
  7861  00D456  1023               	iorwf	??___altoft+3,w,c
  7862  00D458  A4D8               	btfss	status,2,c
  7863  00D45A  D7E8               	goto	l794
  7864  00D45C  C01C  F001         	movff	___altoft@c,___ftpack@arg
  7865  00D460  C01D  F002         	movff	___altoft@c+1,___ftpack@arg+1
  7866  00D464  C01E  F003         	movff	___altoft@c+2,___ftpack@arg+2
  7867  00D468  C024  F004         	movff	___altoft@exp,___ftpack@exp
  7868  00D46C  C025  F005         	movff	___altoft@sign,___ftpack@sign
  7869  00D470  EC2B  F06E         	call	___ftpack	;wreg free
  7870  00D474  C001  F01C         	movff	?___ftpack,?___altoft
  7871  00D478  C002  F01D         	movff	?___ftpack+1,?___altoft+1
  7872  00D47C  C003  F01E         	movff	?___ftpack+2,?___altoft+2
  7873  00D480  0012               	return	
  7874  00D482                     __end_of___altoft:
  7875                           	opt stack 0
  7876                           tblptru	equ	0xFF8
  7877                           tblptrh	equ	0xFF7
  7878                           tblptrl	equ	0xFF6
  7879                           tablat	equ	0xFF5
  7880                           prodh	equ	0xFF4
  7881                           prodl	equ	0xFF3
  7882                           intcon	equ	0xFF2
  7883                           postinc0	equ	0xFEE
  7884                           wreg	equ	0xFE8
  7885                           postinc1	equ	0xFE6
  7886                           postdec1	equ	0xFE5
  7887                           fsr1h	equ	0xFE2
  7888                           fsr1l	equ	0xFE1
  7889                           indf2	equ	0xFDF
  7890                           postinc2	equ	0xFDE
  7891                           postdec2	equ	0xFDD
  7892                           fsr2h	equ	0xFDA
  7893                           fsr2l	equ	0xFD9
  7894                           status	equ	0xFD8
  7895                           
  7896 ;; *************** function _eval_poly *****************
  7897 ;; Defined at:
  7898 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  x               3   45[COMRAM] float 
  7901 ;;  d               2   48[COMRAM] PTR const 
  7902 ;;		 -> log@coeff(27), exp@coeff(30), 
  7903 ;;  n               2   50[COMRAM] int 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  res             3   54[COMRAM] int 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  3   45[COMRAM] int 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7915 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;Total ram usage:       12 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    2
  7922 ;; This function calls:
  7923 ;;		___ftadd
  7924 ;;		___ftmul
  7925 ;;		___wmul
  7926 ;; This function is called by:
  7927 ;;		_exp
  7928 ;;		_log
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text35
  7933  00DF2E                     __ptext35:
  7934                           	opt stack 0
  7935  00DF2E                     _eval_poly:
  7936                           	opt stack 19
  7937                           
  7938                           ;incstack = 0
  7939  00DF2E  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7940  00DF32  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7941  00DF36  0E00               	movlw	0
  7942  00DF38  6E1F               	movwf	___wmul@multiplicand+1,c
  7943  00DF3A  0E03               	movlw	3
  7944  00DF3C  6E1E               	movwf	___wmul@multiplicand,c
  7945  00DF3E  EC2E  F067         	call	___wmul	;wreg free
  7946  00DF42  C031  F035         	movff	eval_poly@d,??_eval_poly
  7947  00DF46  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7948  00DF4A  501C               	movf	?___wmul,w,c
  7949  00DF4C  2635               	addwf	??_eval_poly,f,c
  7950  00DF4E  501D               	movf	?___wmul+1,w,c
  7951  00DF50  2236               	addwfc	??_eval_poly+1,f,c
  7952  00DF52  C035  FFF6         	movff	??_eval_poly,tblptrl
  7953  00DF56  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7954  00DF5A                     	if	0	;tblptru may be non-zero
  7955  00DF5A                     	endif
  7956  00DF5A                     	if	0	;tblptru may be non-zero
  7957  00DF5A                     	endif
  7958  00DF5A  0009               	tblrd		*+
  7959  00DF5C  CFF5 F037          	movff	tablat,eval_poly@res
  7960  00DF60  0009               	tblrd		*+
  7961  00DF62  CFF5 F038          	movff	tablat,eval_poly@res+1
  7962  00DF66  000A               	tblrd		*-
  7963  00DF68  CFF5 F039          	movff	tablat,eval_poly@res+2
  7964  00DF6C  D03E               	goto	l1378
  7965  00DF6E  C037  F010         	movff	eval_poly@res,___ftmul@f2
  7966  00DF72  C038  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  7967  00DF76  C039  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  7968  00DF7A  C02E  F00D         	movff	eval_poly@x,___ftmul@f1
  7969  00DF7E  C02F  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  7970  00DF82  C030  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  7971  00DF86  ECBA  F071         	call	___ftmul	;wreg free
  7972  00DF8A  C00D  F022         	movff	?___ftmul,___ftadd@f1
  7973  00DF8E  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  7974  00DF92  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  7975  00DF96  0E00               	movlw	0
  7976  00DF98  6E1F               	movwf	___wmul@multiplicand+1,c
  7977  00DF9A  0E03               	movlw	3
  7978  00DF9C  6E1E               	movwf	___wmul@multiplicand,c
  7979  00DF9E  0633               	decf	eval_poly@n,f,c
  7980  00DFA0  A0D8               	btfss	status,0,c
  7981  00DFA2  0634               	decf	eval_poly@n+1,f,c
  7982  00DFA4  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7983  00DFA8  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7984  00DFAC  EC2E  F067         	call	___wmul	;wreg free
  7985  00DFB0  C031  F035         	movff	eval_poly@d,??_eval_poly
  7986  00DFB4  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7987  00DFB8  501C               	movf	?___wmul,w,c
  7988  00DFBA  2635               	addwf	??_eval_poly,f,c
  7989  00DFBC  501D               	movf	?___wmul+1,w,c
  7990  00DFBE  2236               	addwfc	??_eval_poly+1,f,c
  7991  00DFC0  C035  FFF6         	movff	??_eval_poly,tblptrl
  7992  00DFC4  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7993  00DFC8                     	if	0	;tblptru may be non-zero
  7994  00DFC8                     	endif
  7995  00DFC8                     	if	0	;tblptru may be non-zero
  7996  00DFC8                     	endif
  7997  00DFC8  0009               	tblrd		*+
  7998  00DFCA  CFF5 F025          	movff	tablat,___ftadd@f2
  7999  00DFCE  0009               	tblrd		*+
  8000  00DFD0  CFF5 F026          	movff	tablat,___ftadd@f2+1
  8001  00DFD4  000A               	tblrd		*-
  8002  00DFD6  CFF5 F027          	movff	tablat,___ftadd@f2+2
  8003  00DFDA  EC82  F076         	call	___ftadd	;wreg free
  8004  00DFDE  C022  F037         	movff	?___ftadd,eval_poly@res
  8005  00DFE2  C023  F038         	movff	?___ftadd+1,eval_poly@res+1
  8006  00DFE6  C024  F039         	movff	?___ftadd+2,eval_poly@res+2
  8007  00DFEA                     l1378:
  8008  00DFEA  5033               	movf	eval_poly@n,w,c
  8009  00DFEC  1034               	iorwf	eval_poly@n+1,w,c
  8010  00DFEE  A4D8               	btfss	status,2,c
  8011  00DFF0  D7BE               	goto	l1379
  8012  00DFF2  C037  F02E         	movff	eval_poly@res,?_eval_poly
  8013  00DFF6  C038  F02F         	movff	eval_poly@res+1,?_eval_poly+1
  8014  00DFFA  C039  F030         	movff	eval_poly@res+2,?_eval_poly+2
  8015  00DFFE  0012               	return		;funcret
  8016  00E000                     __end_of_eval_poly:
  8017                           	opt stack 0
  8018                           tblptru	equ	0xFF8
  8019                           tblptrh	equ	0xFF7
  8020                           tblptrl	equ	0xFF6
  8021                           tablat	equ	0xFF5
  8022                           prodh	equ	0xFF4
  8023                           prodl	equ	0xFF3
  8024                           intcon	equ	0xFF2
  8025                           postinc0	equ	0xFEE
  8026                           wreg	equ	0xFE8
  8027                           postinc1	equ	0xFE6
  8028                           postdec1	equ	0xFE5
  8029                           fsr1h	equ	0xFE2
  8030                           fsr1l	equ	0xFE1
  8031                           indf2	equ	0xFDF
  8032                           postinc2	equ	0xFDE
  8033                           postdec2	equ	0xFDD
  8034                           fsr2h	equ	0xFDA
  8035                           fsr2l	equ	0xFD9
  8036                           status	equ	0xFD8
  8037                           
  8038 ;; *************** function ___ftmul *****************
  8039 ;; Defined at:
  8040 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  f1              3   12[COMRAM] float 
  8043 ;;  f2              3   15[COMRAM] float 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  8046 ;;  sign            1   26[COMRAM] unsigned char 
  8047 ;;  cntr            1   25[COMRAM] unsigned char 
  8048 ;;  exp             1   21[COMRAM] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  3   12[COMRAM] float 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8058 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8059 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8060 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8061 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;Total ram usage:       15 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    1
  8065 ;; This function calls:
  8066 ;;		___ftpack
  8067 ;; This function is called by:
  8068 ;;		_pow
  8069 ;;		_exp
  8070 ;;		_log
  8071 ;;		_eval_poly
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           	psect	text36
  8076  00E374                     __ptext36:
  8077                           	opt stack 0
  8078  00E374                     ___ftmul:
  8079                           	opt stack 19
  8080                           
  8081                           ;incstack = 0
  8082  00E374  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  8083  00E378  6A14               	clrf	(??___ftmul+1)& (0+255),c
  8084  00E37A  6A15               	clrf	(??___ftmul+2)& (0+255),c
  8085  00E37C  340E               	rlcf	___ftmul@f1+1,w,c
  8086  00E37E  3613               	rlcf	??___ftmul& (0+255),f,c
  8087  00E380  E301               	bnc	u3801
  8088  00E382  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  8089  00E384                     u3801:
  8090  00E384  5013               	movf	??___ftmul,w,c
  8091  00E386  6E16               	movwf	___ftmul@exp,c
  8092  00E388  5016               	movf	___ftmul@exp,w,c
  8093  00E38A  A4D8               	btfss	status,2,c
  8094  00E38C  D007               	goto	l1023
  8095  00E38E  0E00               	movlw	0
  8096  00E390  6E0D               	movwf	?___ftmul,c
  8097  00E392  0E00               	movlw	0
  8098  00E394  6E0E               	movwf	?___ftmul+1,c
  8099  00E396  0E00               	movlw	0
  8100  00E398  6E0F               	movwf	?___ftmul+2,c
  8101  00E39A  0012               	return	
  8102  00E39C                     l1023:
  8103  00E39C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  8104  00E3A0  6A14               	clrf	(??___ftmul+1)& (0+255),c
  8105  00E3A2  6A15               	clrf	(??___ftmul+2)& (0+255),c
  8106  00E3A4  3411               	rlcf	___ftmul@f2+1,w,c
  8107  00E3A6  3613               	rlcf	??___ftmul& (0+255),f,c
  8108  00E3A8  E301               	bnc	u3821
  8109  00E3AA  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  8110  00E3AC                     u3821:
  8111  00E3AC  5013               	movf	??___ftmul,w,c
  8112  00E3AE  6E1B               	movwf	___ftmul@sign,c
  8113  00E3B0  501B               	movf	___ftmul@sign,w,c
  8114  00E3B2  A4D8               	btfss	status,2,c
  8115  00E3B4  D007               	goto	l1025
  8116  00E3B6  0E00               	movlw	0
  8117  00E3B8  6E0D               	movwf	?___ftmul,c
  8118  00E3BA  0E00               	movlw	0
  8119  00E3BC  6E0E               	movwf	?___ftmul+1,c
  8120  00E3BE  0E00               	movlw	0
  8121  00E3C0  6E0F               	movwf	?___ftmul+2,c
  8122  00E3C2  0012               	return	
  8123  00E3C4                     l1025:
  8124  00E3C4  501B               	movf	___ftmul@sign,w,c
  8125  00E3C6  0F7B               	addlw	123
  8126  00E3C8  2616               	addwf	___ftmul@exp,f,c
  8127  00E3CA  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  8128  00E3CE  5012               	movf	___ftmul@f2+2,w,c
  8129  00E3D0  1A1B               	xorwf	___ftmul@sign,f,c
  8130  00E3D2  0E80               	movlw	128
  8131  00E3D4  161B               	andwf	___ftmul@sign,f,c
  8132  00E3D6  8E0E               	bsf	___ftmul@f1+1,7,c
  8133  00E3D8  8E11               	bsf	___ftmul@f2+1,7,c
  8134  00E3DA  0EFF               	movlw	255
  8135  00E3DC  1610               	andwf	___ftmul@f2,f,c
  8136  00E3DE  0EFF               	movlw	255
  8137  00E3E0  1611               	andwf	___ftmul@f2+1,f,c
  8138  00E3E2  0E00               	movlw	0
  8139  00E3E4  1612               	andwf	___ftmul@f2+2,f,c
  8140  00E3E6  0E00               	movlw	0
  8141  00E3E8  6E17               	movwf	___ftmul@f3_as_product,c
  8142  00E3EA  0E00               	movlw	0
  8143  00E3EC  6E18               	movwf	___ftmul@f3_as_product+1,c
  8144  00E3EE  0E00               	movlw	0
  8145  00E3F0  6E19               	movwf	___ftmul@f3_as_product+2,c
  8146  00E3F2  0E07               	movlw	7
  8147  00E3F4  6E1A               	movwf	___ftmul@cntr,c
  8148  00E3F6  A00D               	btfss	___ftmul@f1,0,c
  8149  00E3F8  D006               	goto	l1027
  8150  00E3FA  5010               	movf	___ftmul@f2,w,c
  8151  00E3FC  2617               	addwf	___ftmul@f3_as_product,f,c
  8152  00E3FE  5011               	movf	___ftmul@f2+1,w,c
  8153  00E400  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  8154  00E402  5012               	movf	___ftmul@f2+2,w,c
  8155  00E404  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  8156  00E406                     l1027:
  8157  00E406  90D8               	bcf	status,0,c
  8158  00E408  320F               	rrcf	___ftmul@f1+2,f,c
  8159  00E40A  320E               	rrcf	___ftmul@f1+1,f,c
  8160  00E40C  320D               	rrcf	___ftmul@f1,f,c
  8161  00E40E  90D8               	bcf	status,0,c
  8162  00E410  3610               	rlcf	___ftmul@f2,f,c
  8163  00E412  3611               	rlcf	___ftmul@f2+1,f,c
  8164  00E414  3612               	rlcf	___ftmul@f2+2,f,c
  8165  00E416  2E1A               	decfsz	___ftmul@cntr,f,c
  8166  00E418  D7EE               	goto	l1026
  8167  00E41A  0E09               	movlw	9
  8168  00E41C  6E1A               	movwf	___ftmul@cntr,c
  8169  00E41E  A00D               	btfss	___ftmul@f1,0,c
  8170  00E420  D006               	goto	l1030
  8171  00E422  5010               	movf	___ftmul@f2,w,c
  8172  00E424  2617               	addwf	___ftmul@f3_as_product,f,c
  8173  00E426  5011               	movf	___ftmul@f2+1,w,c
  8174  00E428  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  8175  00E42A  5012               	movf	___ftmul@f2+2,w,c
  8176  00E42C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  8177  00E42E                     l1030:
  8178  00E42E  90D8               	bcf	status,0,c
  8179  00E430  320F               	rrcf	___ftmul@f1+2,f,c
  8180  00E432  320E               	rrcf	___ftmul@f1+1,f,c
  8181  00E434  320D               	rrcf	___ftmul@f1,f,c
  8182  00E436  90D8               	bcf	status,0,c
  8183  00E438  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  8184  00E43A  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  8185  00E43C  3217               	rrcf	___ftmul@f3_as_product,f,c
  8186  00E43E  2E1A               	decfsz	___ftmul@cntr,f,c
  8187  00E440  D7EE               	goto	l1029
  8188  00E442  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  8189  00E446  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8190  00E44A  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8191  00E44E  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  8192  00E452  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  8193  00E456  EC2B  F06E         	call	___ftpack	;wreg free
  8194  00E45A  C001  F00D         	movff	?___ftpack,?___ftmul
  8195  00E45E  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  8196  00E462  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  8197  00E466  0012               	return	
  8198  00E468                     __end_of___ftmul:
  8199                           	opt stack 0
  8200                           tblptru	equ	0xFF8
  8201                           tblptrh	equ	0xFF7
  8202                           tblptrl	equ	0xFF6
  8203                           tablat	equ	0xFF5
  8204                           prodh	equ	0xFF4
  8205                           prodl	equ	0xFF3
  8206                           intcon	equ	0xFF2
  8207                           postinc0	equ	0xFEE
  8208                           wreg	equ	0xFE8
  8209                           postinc1	equ	0xFE6
  8210                           postdec1	equ	0xFE5
  8211                           fsr1h	equ	0xFE2
  8212                           fsr1l	equ	0xFE1
  8213                           indf2	equ	0xFDF
  8214                           postinc2	equ	0xFDE
  8215                           postdec2	equ	0xFDD
  8216                           fsr2h	equ	0xFDA
  8217                           fsr2l	equ	0xFD9
  8218                           status	equ	0xFD8
  8219                           
  8220 ;; *************** function ___ftsub *****************
  8221 ;; Defined at:
  8222 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  f1              3   45[COMRAM] float 
  8225 ;;  f2              3   48[COMRAM] float 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  3   45[COMRAM] float 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8237 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8240 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;Total ram usage:        6 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    2
  8244 ;; This function calls:
  8245 ;;		___ftadd
  8246 ;; This function is called by:
  8247 ;;		_exp
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text37
  8252  00CF1E                     __ptext37:
  8253                           	opt stack 0
  8254  00CF1E                     ___ftsub:
  8255                           	opt stack 19
  8256                           
  8257                           ;incstack = 0
  8258  00CF1E  5031               	movf	___ftsub@f2,w,c
  8259  00CF20  1032               	iorwf	___ftsub@f2+1,w,c
  8260  00CF22  1033               	iorwf	___ftsub@f2+2,w,c
  8261  00CF24  B4D8               	btfsc	status,2,c
  8262  00CF26  D006               	goto	l1040
  8263  00CF28  0E00               	movlw	0
  8264  00CF2A  1A31               	xorwf	___ftsub@f2,f,c
  8265  00CF2C  0E00               	movlw	0
  8266  00CF2E  1A32               	xorwf	___ftsub@f2+1,f,c
  8267  00CF30  0E80               	movlw	128
  8268  00CF32  1A33               	xorwf	___ftsub@f2+2,f,c
  8269  00CF34                     l1040:
  8270  00CF34  C02E  F022         	movff	___ftsub@f1,___ftadd@f1
  8271  00CF38  C02F  F023         	movff	___ftsub@f1+1,___ftadd@f1+1
  8272  00CF3C  C030  F024         	movff	___ftsub@f1+2,___ftadd@f1+2
  8273  00CF40  C031  F025         	movff	___ftsub@f2,___ftadd@f2
  8274  00CF44  C032  F026         	movff	___ftsub@f2+1,___ftadd@f2+1
  8275  00CF48  C033  F027         	movff	___ftsub@f2+2,___ftadd@f2+2
  8276  00CF4C  EC82  F076         	call	___ftadd	;wreg free
  8277  00CF50  C022  F02E         	movff	?___ftadd,?___ftsub
  8278  00CF54  C023  F02F         	movff	?___ftadd+1,?___ftsub+1
  8279  00CF58  C024  F030         	movff	?___ftadd+2,?___ftsub+2
  8280  00CF5C  0012               	return	
  8281  00CF5E                     __end_of___ftsub:
  8282                           	opt stack 0
  8283                           tblptru	equ	0xFF8
  8284                           tblptrh	equ	0xFF7
  8285                           tblptrl	equ	0xFF6
  8286                           tablat	equ	0xFF5
  8287                           prodh	equ	0xFF4
  8288                           prodl	equ	0xFF3
  8289                           intcon	equ	0xFF2
  8290                           postinc0	equ	0xFEE
  8291                           wreg	equ	0xFE8
  8292                           postinc1	equ	0xFE6
  8293                           postdec1	equ	0xFE5
  8294                           fsr1h	equ	0xFE2
  8295                           fsr1l	equ	0xFE1
  8296                           indf2	equ	0xFDF
  8297                           postinc2	equ	0xFDE
  8298                           postdec2	equ	0xFDD
  8299                           fsr2h	equ	0xFDA
  8300                           fsr2l	equ	0xFD9
  8301                           status	equ	0xFD8
  8302                           
  8303 ;; *************** function ___ftadd *****************
  8304 ;; Defined at:
  8305 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  f1              3   33[COMRAM] float 
  8308 ;;  f2              3   36[COMRAM] float 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  exp1            1   44[COMRAM] unsigned char 
  8311 ;;  exp2            1   43[COMRAM] unsigned char 
  8312 ;;  sign            1   42[COMRAM] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  3   33[COMRAM] float 
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8322 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8323 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8326 ;;Total ram usage:       12 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    1
  8329 ;; This function calls:
  8330 ;;		___ftpack
  8331 ;; This function is called by:
  8332 ;;		___ftsub
  8333 ;;		_floor
  8334 ;;		_log
  8335 ;;		_eval_poly
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339                           	psect	text38
  8340  00ED04                     __ptext38:
  8341                           	opt stack 0
  8342  00ED04                     ___ftadd:
  8343                           	opt stack 19
  8344                           
  8345                           ;incstack = 0
  8346  00ED04  C024  F028         	movff	___ftadd@f1+2,??___ftadd
  8347  00ED08  6A29               	clrf	(??___ftadd+1)& (0+255),c
  8348  00ED0A  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  8349  00ED0C  3423               	rlcf	___ftadd@f1+1,w,c
  8350  00ED0E  3628               	rlcf	??___ftadd& (0+255),f,c
  8351  00ED10  E301               	bnc	u3591
  8352  00ED12  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  8353  00ED14                     u3591:
  8354  00ED14  5028               	movf	??___ftadd,w,c
  8355  00ED16  6E2D               	movwf	___ftadd@exp1,c
  8356  00ED18  C027  F028         	movff	___ftadd@f2+2,??___ftadd
  8357  00ED1C  6A29               	clrf	(??___ftadd+1)& (0+255),c
  8358  00ED1E  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  8359  00ED20  3426               	rlcf	___ftadd@f2+1,w,c
  8360  00ED22  3628               	rlcf	??___ftadd& (0+255),f,c
  8361  00ED24  E301               	bnc	u3601
  8362  00ED26  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  8363  00ED28                     u3601:
  8364  00ED28  5028               	movf	??___ftadd,w,c
  8365  00ED2A  6E2C               	movwf	___ftadd@exp2,c
  8366  00ED2C  502D               	movf	___ftadd@exp1,w,c
  8367  00ED2E  B4D8               	btfsc	status,2,c
  8368  00ED30  D00B               	goto	u3630
  8369  00ED32  502C               	movf	___ftadd@exp2,w,c
  8370  00ED34  5C2D               	subwf	___ftadd@exp1,w,c
  8371  00ED36  B0D8               	btfsc	status,0,c
  8372  00ED38  D00E               	goto	l975
  8373  00ED3A  502D               	movf	___ftadd@exp1,w,c
  8374  00ED3C  0800               	sublw	0
  8375  00ED3E  242C               	addwf	___ftadd@exp2,w,c
  8376  00ED40  6E28               	movwf	??___ftadd& (0+255),c
  8377  00ED42  0E18               	movlw	24
  8378  00ED44  6428               	cpfsgt	??___ftadd,c
  8379  00ED46  D007               	goto	l975
  8380  00ED48                     u3630:
  8381  00ED48  C025  F022         	movff	___ftadd@f2,?___ftadd
  8382  00ED4C  C026  F023         	movff	___ftadd@f2+1,?___ftadd+1
  8383  00ED50  C027  F024         	movff	___ftadd@f2+2,?___ftadd+2
  8384  00ED54  0012               	return	
  8385  00ED56                     l975:
  8386  00ED56  502C               	movf	___ftadd@exp2,w,c
  8387  00ED58  B4D8               	btfsc	status,2,c
  8388  00ED5A  D00B               	goto	u3660
  8389  00ED5C  502D               	movf	___ftadd@exp1,w,c
  8390  00ED5E  5C2C               	subwf	___ftadd@exp2,w,c
  8391  00ED60  B0D8               	btfsc	status,0,c
  8392  00ED62  D00E               	goto	l979
  8393  00ED64  502C               	movf	___ftadd@exp2,w,c
  8394  00ED66  0800               	sublw	0
  8395  00ED68  242D               	addwf	___ftadd@exp1,w,c
  8396  00ED6A  6E28               	movwf	??___ftadd& (0+255),c
  8397  00ED6C  0E18               	movlw	24
  8398  00ED6E  6428               	cpfsgt	??___ftadd,c
  8399  00ED70  D007               	goto	l979
  8400  00ED72                     u3660:
  8401  00ED72  C022  F022         	movff	___ftadd@f1,?___ftadd
  8402  00ED76  C023  F023         	movff	___ftadd@f1+1,?___ftadd+1
  8403  00ED7A  C024  F024         	movff	___ftadd@f1+2,?___ftadd+2
  8404  00ED7E  0012               	return	
  8405  00ED80                     l979:
  8406  00ED80  0E06               	movlw	6
  8407  00ED82  6E2B               	movwf	___ftadd@sign,c
  8408  00ED84  BE24               	btfsc	___ftadd@f1+2,7,c
  8409  00ED86  8E2B               	bsf	___ftadd@sign,7,c
  8410  00ED88  BE27               	btfsc	___ftadd@f2+2,7,c
  8411  00ED8A  8C2B               	bsf	___ftadd@sign,6,c
  8412  00ED8C  8E23               	bsf	___ftadd@f1+1,7,c
  8413  00ED8E  0EFF               	movlw	255
  8414  00ED90  1622               	andwf	___ftadd@f1,f,c
  8415  00ED92  0EFF               	movlw	255
  8416  00ED94  1623               	andwf	___ftadd@f1+1,f,c
  8417  00ED96  0E00               	movlw	0
  8418  00ED98  1624               	andwf	___ftadd@f1+2,f,c
  8419  00ED9A  8E26               	bsf	___ftadd@f2+1,7,c
  8420  00ED9C  0EFF               	movlw	255
  8421  00ED9E  1625               	andwf	___ftadd@f2,f,c
  8422  00EDA0  0EFF               	movlw	255
  8423  00EDA2  1626               	andwf	___ftadd@f2+1,f,c
  8424  00EDA4  0E00               	movlw	0
  8425  00EDA6  1627               	andwf	___ftadd@f2+2,f,c
  8426  00EDA8  502C               	movf	___ftadd@exp2,w,c
  8427  00EDAA  5C2D               	subwf	___ftadd@exp1,w,c
  8428  00EDAC  B0D8               	btfsc	status,0,c
  8429  00EDAE  D01B               	goto	l984
  8430  00EDB0                     u3690:
  8431  00EDB0  90D8               	bcf	status,0,c
  8432  00EDB2  3625               	rlcf	___ftadd@f2,f,c
  8433  00EDB4  3626               	rlcf	___ftadd@f2+1,f,c
  8434  00EDB6  3627               	rlcf	___ftadd@f2+2,f,c
  8435  00EDB8  062C               	decf	___ftadd@exp2,f,c
  8436  00EDBA  502D               	movf	___ftadd@exp1,w,c
  8437  00EDBC  182C               	xorwf	___ftadd@exp2,w,c
  8438  00EDBE  B4D8               	btfsc	status,2,c
  8439  00EDC0  D00D               	goto	l989
  8440  00EDC2  062B               	decf	___ftadd@sign,f,c
  8441  00EDC4  C02B  F028         	movff	___ftadd@sign,??___ftadd
  8442  00EDC8  0E07               	movlw	7
  8443  00EDCA  1628               	andwf	??___ftadd,f,c
  8444  00EDCC  B4D8               	btfsc	status,2,c
  8445  00EDCE  D006               	goto	l989
  8446  00EDD0  D7EF               	goto	u3690
  8447  00EDD2  90D8               	bcf	status,0,c
  8448  00EDD4  3224               	rrcf	___ftadd@f1+2,f,c
  8449  00EDD6  3223               	rrcf	___ftadd@f1+1,f,c
  8450  00EDD8  3222               	rrcf	___ftadd@f1,f,c
  8451  00EDDA  2A2D               	incf	___ftadd@exp1,f,c
  8452  00EDDC                     l989:
  8453  00EDDC  502C               	movf	___ftadd@exp2,w,c
  8454  00EDDE  182D               	xorwf	___ftadd@exp1,w,c
  8455  00EDE0  B4D8               	btfsc	status,2,c
  8456  00EDE2  D01F               	goto	u3760
  8457  00EDE4  D7F6               	goto	l990
  8458  00EDE6                     l984:
  8459  00EDE6  502D               	movf	___ftadd@exp1,w,c
  8460  00EDE8  5C2C               	subwf	___ftadd@exp2,w,c
  8461  00EDEA  B0D8               	btfsc	status,0,c
  8462  00EDEC  D01A               	goto	u3760
  8463  00EDEE                     u3730:
  8464  00EDEE  90D8               	bcf	status,0,c
  8465  00EDF0  3622               	rlcf	___ftadd@f1,f,c
  8466  00EDF2  3623               	rlcf	___ftadd@f1+1,f,c
  8467  00EDF4  3624               	rlcf	___ftadd@f1+2,f,c
  8468  00EDF6  062D               	decf	___ftadd@exp1,f,c
  8469  00EDF8  502D               	movf	___ftadd@exp1,w,c
  8470  00EDFA  182C               	xorwf	___ftadd@exp2,w,c
  8471  00EDFC  B4D8               	btfsc	status,2,c
  8472  00EDFE  D00D               	goto	l998
  8473  00EE00  062B               	decf	___ftadd@sign,f,c
  8474  00EE02  C02B  F028         	movff	___ftadd@sign,??___ftadd
  8475  00EE06  0E07               	movlw	7
  8476  00EE08  1628               	andwf	??___ftadd,f,c
  8477  00EE0A  B4D8               	btfsc	status,2,c
  8478  00EE0C  D006               	goto	l998
  8479  00EE0E  D7EF               	goto	u3730
  8480  00EE10  90D8               	bcf	status,0,c
  8481  00EE12  3227               	rrcf	___ftadd@f2+2,f,c
  8482  00EE14  3226               	rrcf	___ftadd@f2+1,f,c
  8483  00EE16  3225               	rrcf	___ftadd@f2,f,c
  8484  00EE18  2A2C               	incf	___ftadd@exp2,f,c
  8485  00EE1A                     l998:
  8486  00EE1A  502C               	movf	___ftadd@exp2,w,c
  8487  00EE1C  182D               	xorwf	___ftadd@exp1,w,c
  8488  00EE1E  A4D8               	btfss	status,2,c
  8489  00EE20  D7F7               	goto	l999
  8490  00EE22                     u3760:
  8491  00EE22  AE2B               	btfss	___ftadd@sign,7,c
  8492  00EE24  D00C               	goto	l1001
  8493  00EE26  0EFF               	movlw	255
  8494  00EE28  1A22               	xorwf	___ftadd@f1,f,c
  8495  00EE2A  0EFF               	movlw	255
  8496  00EE2C  1A23               	xorwf	___ftadd@f1+1,f,c
  8497  00EE2E  0EFF               	movlw	255
  8498  00EE30  1A24               	xorwf	___ftadd@f1+2,f,c
  8499  00EE32  0E01               	movlw	1
  8500  00EE34  2622               	addwf	___ftadd@f1,f,c
  8501  00EE36  0E00               	movlw	0
  8502  00EE38  2223               	addwfc	___ftadd@f1+1,f,c
  8503  00EE3A  0E00               	movlw	0
  8504  00EE3C  2224               	addwfc	___ftadd@f1+2,f,c
  8505  00EE3E                     l1001:
  8506  00EE3E  AC2B               	btfss	___ftadd@sign,6,c
  8507  00EE40  D00C               	goto	l1002
  8508  00EE42  0EFF               	movlw	255
  8509  00EE44  1A25               	xorwf	___ftadd@f2,f,c
  8510  00EE46  0EFF               	movlw	255
  8511  00EE48  1A26               	xorwf	___ftadd@f2+1,f,c
  8512  00EE4A  0EFF               	movlw	255
  8513  00EE4C  1A27               	xorwf	___ftadd@f2+2,f,c
  8514  00EE4E  0E01               	movlw	1
  8515  00EE50  2625               	addwf	___ftadd@f2,f,c
  8516  00EE52  0E00               	movlw	0
  8517  00EE54  2226               	addwfc	___ftadd@f2+1,f,c
  8518  00EE56  0E00               	movlw	0
  8519  00EE58  2227               	addwfc	___ftadd@f2+2,f,c
  8520  00EE5A                     l1002:
  8521  00EE5A  0E00               	movlw	0
  8522  00EE5C  6E2B               	movwf	___ftadd@sign,c
  8523  00EE5E  5022               	movf	___ftadd@f1,w,c
  8524  00EE60  2625               	addwf	___ftadd@f2,f,c
  8525  00EE62  5023               	movf	___ftadd@f1+1,w,c
  8526  00EE64  2226               	addwfc	___ftadd@f2+1,f,c
  8527  00EE66  5024               	movf	___ftadd@f1+2,w,c
  8528  00EE68  2227               	addwfc	___ftadd@f2+2,f,c
  8529  00EE6A  AE27               	btfss	___ftadd@f2+2,7,c
  8530  00EE6C  D00E               	goto	l1003
  8531  00EE6E  0EFF               	movlw	255
  8532  00EE70  1A25               	xorwf	___ftadd@f2,f,c
  8533  00EE72  0EFF               	movlw	255
  8534  00EE74  1A26               	xorwf	___ftadd@f2+1,f,c
  8535  00EE76  0EFF               	movlw	255
  8536  00EE78  1A27               	xorwf	___ftadd@f2+2,f,c
  8537  00EE7A  0E01               	movlw	1
  8538  00EE7C  2625               	addwf	___ftadd@f2,f,c
  8539  00EE7E  0E00               	movlw	0
  8540  00EE80  2226               	addwfc	___ftadd@f2+1,f,c
  8541  00EE82  0E00               	movlw	0
  8542  00EE84  2227               	addwfc	___ftadd@f2+2,f,c
  8543  00EE86  0E01               	movlw	1
  8544  00EE88  6E2B               	movwf	___ftadd@sign,c
  8545  00EE8A                     l1003:
  8546  00EE8A  C025  F001         	movff	___ftadd@f2,___ftpack@arg
  8547  00EE8E  C026  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  8548  00EE92  C027  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  8549  00EE96  C02D  F004         	movff	___ftadd@exp1,___ftpack@exp
  8550  00EE9A  C02B  F005         	movff	___ftadd@sign,___ftpack@sign
  8551  00EE9E  EC2B  F06E         	call	___ftpack	;wreg free
  8552  00EEA2  C001  F022         	movff	?___ftpack,?___ftadd
  8553  00EEA6  C002  F023         	movff	?___ftpack+1,?___ftadd+1
  8554  00EEAA  C003  F024         	movff	?___ftpack+2,?___ftadd+2
  8555  00EEAE  0012               	return	
  8556  00EEB0                     __end_of___ftadd:
  8557                           	opt stack 0
  8558                           tblptru	equ	0xFF8
  8559                           tblptrh	equ	0xFF7
  8560                           tblptrl	equ	0xFF6
  8561                           tablat	equ	0xFF5
  8562                           prodh	equ	0xFF4
  8563                           prodl	equ	0xFF3
  8564                           intcon	equ	0xFF2
  8565                           postinc0	equ	0xFEE
  8566                           wreg	equ	0xFE8
  8567                           postinc1	equ	0xFE6
  8568                           postdec1	equ	0xFE5
  8569                           fsr1h	equ	0xFE2
  8570                           fsr1l	equ	0xFE1
  8571                           indf2	equ	0xFDF
  8572                           postinc2	equ	0xFDE
  8573                           postdec2	equ	0xFDD
  8574                           fsr2h	equ	0xFDA
  8575                           fsr2l	equ	0xFD9
  8576                           status	equ	0xFD8
  8577                           
  8578 ;; *************** function ___ftneg *****************
  8579 ;; Defined at:
  8580 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  f1              3    0[COMRAM] float 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  3    0[COMRAM] float 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8594 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8597 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8598 ;;Total ram usage:        3 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_pow
  8604 ;;		_exp
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text39
  8609  00CE14                     __ptext39:
  8610                           	opt stack 0
  8611  00CE14                     ___ftneg:
  8612                           	opt stack 21
  8613                           
  8614                           ;incstack = 0
  8615  00CE14  5001               	movf	___ftneg@f1,w,c
  8616  00CE16  1002               	iorwf	___ftneg@f1+1,w,c
  8617  00CE18  1003               	iorwf	___ftneg@f1+2,w,c
  8618  00CE1A  B4D8               	btfsc	status,2,c
  8619  00CE1C  D006               	goto	l1034
  8620  00CE1E  0E00               	movlw	0
  8621  00CE20  1A01               	xorwf	___ftneg@f1,f,c
  8622  00CE22  0E00               	movlw	0
  8623  00CE24  1A02               	xorwf	___ftneg@f1+1,f,c
  8624  00CE26  0E80               	movlw	128
  8625  00CE28  1A03               	xorwf	___ftneg@f1+2,f,c
  8626  00CE2A                     l1034:
  8627  00CE2A  C001  F001         	movff	___ftneg@f1,?___ftneg
  8628  00CE2E  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  8629  00CE32  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  8630  00CE36  0012               	return		;funcret
  8631  00CE38                     __end_of___ftneg:
  8632                           	opt stack 0
  8633                           tblptru	equ	0xFF8
  8634                           tblptrh	equ	0xFF7
  8635                           tblptrl	equ	0xFF6
  8636                           tablat	equ	0xFF5
  8637                           prodh	equ	0xFF4
  8638                           prodl	equ	0xFF3
  8639                           intcon	equ	0xFF2
  8640                           postinc0	equ	0xFEE
  8641                           wreg	equ	0xFE8
  8642                           postinc1	equ	0xFE6
  8643                           postdec1	equ	0xFE5
  8644                           fsr1h	equ	0xFE2
  8645                           fsr1l	equ	0xFE1
  8646                           indf2	equ	0xFDF
  8647                           postinc2	equ	0xFDE
  8648                           postdec2	equ	0xFDD
  8649                           fsr2h	equ	0xFDA
  8650                           fsr2l	equ	0xFD9
  8651                           status	equ	0xFD8
  8652                           
  8653 ;; *************** function ___ftdiv *****************
  8654 ;; Defined at:
  8655 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  f1              3    8[COMRAM] float 
  8658 ;;  f2              3   11[COMRAM] float 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  f3              3   18[COMRAM] float 
  8661 ;;  sign            1   22[COMRAM] unsigned char 
  8662 ;;  exp             1   21[COMRAM] unsigned char 
  8663 ;;  cntr            1   17[COMRAM] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  3    8[COMRAM] float 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8673 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8674 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8675 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8676 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8677 ;;Total ram usage:       15 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    1
  8680 ;; This function calls:
  8681 ;;		___ftpack
  8682 ;; This function is called by:
  8683 ;;		_exp
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text40
  8688  00E28E                     __ptext40:
  8689                           	opt stack 0
  8690  00E28E                     ___ftdiv:
  8691                           	opt stack 20
  8692                           
  8693                           ;incstack = 0
  8694  00E28E  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  8695  00E292  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  8696  00E294  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  8697  00E296  340A               	rlcf	___ftdiv@f1+1,w,c
  8698  00E298  360F               	rlcf	??___ftdiv& (0+255),f,c
  8699  00E29A  E301               	bnc	u4011
  8700  00E29C  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  8701  00E29E                     u4011:
  8702  00E29E  500F               	movf	??___ftdiv,w,c
  8703  00E2A0  6E16               	movwf	___ftdiv@exp,c
  8704  00E2A2  5016               	movf	___ftdiv@exp,w,c
  8705  00E2A4  A4D8               	btfss	status,2,c
  8706  00E2A6  D007               	goto	l1008
  8707  00E2A8  0E00               	movlw	0
  8708  00E2AA  6E09               	movwf	?___ftdiv,c
  8709  00E2AC  0E00               	movlw	0
  8710  00E2AE  6E0A               	movwf	?___ftdiv+1,c
  8711  00E2B0  0E00               	movlw	0
  8712  00E2B2  6E0B               	movwf	?___ftdiv+2,c
  8713  00E2B4  0012               	return	
  8714  00E2B6                     l1008:
  8715  00E2B6  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  8716  00E2BA  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  8717  00E2BC  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  8718  00E2BE  340D               	rlcf	___ftdiv@f2+1,w,c
  8719  00E2C0  360F               	rlcf	??___ftdiv& (0+255),f,c
  8720  00E2C2  E301               	bnc	u4031
  8721  00E2C4  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  8722  00E2C6                     u4031:
  8723  00E2C6  500F               	movf	??___ftdiv,w,c
  8724  00E2C8  6E17               	movwf	___ftdiv@sign,c
  8725  00E2CA  5017               	movf	___ftdiv@sign,w,c
  8726  00E2CC  A4D8               	btfss	status,2,c
  8727  00E2CE  D007               	goto	l1010
  8728  00E2D0  0E00               	movlw	0
  8729  00E2D2  6E09               	movwf	?___ftdiv,c
  8730  00E2D4  0E00               	movlw	0
  8731  00E2D6  6E0A               	movwf	?___ftdiv+1,c
  8732  00E2D8  0E00               	movlw	0
  8733  00E2DA  6E0B               	movwf	?___ftdiv+2,c
  8734  00E2DC  0012               	return	
  8735  00E2DE                     l1010:
  8736  00E2DE  0E00               	movlw	0
  8737  00E2E0  6E13               	movwf	___ftdiv@f3,c
  8738  00E2E2  0E00               	movlw	0
  8739  00E2E4  6E14               	movwf	___ftdiv@f3+1,c
  8740  00E2E6  0E00               	movlw	0
  8741  00E2E8  6E15               	movwf	___ftdiv@f3+2,c
  8742  00E2EA  5017               	movf	___ftdiv@sign,w,c
  8743  00E2EC  0F89               	addlw	137
  8744  00E2EE  5E16               	subwf	___ftdiv@exp,f,c
  8745  00E2F0  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  8746  00E2F4  500E               	movf	___ftdiv@f2+2,w,c
  8747  00E2F6  1A17               	xorwf	___ftdiv@sign,f,c
  8748  00E2F8  0E80               	movlw	128
  8749  00E2FA  1617               	andwf	___ftdiv@sign,f,c
  8750  00E2FC  8E0A               	bsf	___ftdiv@f1+1,7,c
  8751  00E2FE  0EFF               	movlw	255
  8752  00E300  1609               	andwf	___ftdiv@f1,f,c
  8753  00E302  0EFF               	movlw	255
  8754  00E304  160A               	andwf	___ftdiv@f1+1,f,c
  8755  00E306  0E00               	movlw	0
  8756  00E308  160B               	andwf	___ftdiv@f1+2,f,c
  8757  00E30A  8E0D               	bsf	___ftdiv@f2+1,7,c
  8758  00E30C  0EFF               	movlw	255
  8759  00E30E  160C               	andwf	___ftdiv@f2,f,c
  8760  00E310  0EFF               	movlw	255
  8761  00E312  160D               	andwf	___ftdiv@f2+1,f,c
  8762  00E314  0E00               	movlw	0
  8763  00E316  160E               	andwf	___ftdiv@f2+2,f,c
  8764  00E318  0E18               	movlw	24
  8765  00E31A  6E12               	movwf	___ftdiv@cntr,c
  8766  00E31C  90D8               	bcf	status,0,c
  8767  00E31E  3613               	rlcf	___ftdiv@f3,f,c
  8768  00E320  3614               	rlcf	___ftdiv@f3+1,f,c
  8769  00E322  3615               	rlcf	___ftdiv@f3+2,f,c
  8770  00E324  500C               	movf	___ftdiv@f2,w,c
  8771  00E326  5C09               	subwf	___ftdiv@f1,w,c
  8772  00E328  500D               	movf	___ftdiv@f2+1,w,c
  8773  00E32A  580A               	subwfb	___ftdiv@f1+1,w,c
  8774  00E32C  500E               	movf	___ftdiv@f2+2,w,c
  8775  00E32E  580B               	subwfb	___ftdiv@f1+2,w,c
  8776  00E330  A0D8               	btfss	status,0,c
  8777  00E332  D007               	goto	l1012
  8778  00E334  500C               	movf	___ftdiv@f2,w,c
  8779  00E336  5E09               	subwf	___ftdiv@f1,f,c
  8780  00E338  500D               	movf	___ftdiv@f2+1,w,c
  8781  00E33A  5A0A               	subwfb	___ftdiv@f1+1,f,c
  8782  00E33C  500E               	movf	___ftdiv@f2+2,w,c
  8783  00E33E  5A0B               	subwfb	___ftdiv@f1+2,f,c
  8784  00E340  8013               	bsf	___ftdiv@f3,0,c
  8785  00E342                     l1012:
  8786  00E342  90D8               	bcf	status,0,c
  8787  00E344  3609               	rlcf	___ftdiv@f1,f,c
  8788  00E346  360A               	rlcf	___ftdiv@f1+1,f,c
  8789  00E348  360B               	rlcf	___ftdiv@f1+2,f,c
  8790  00E34A  2E12               	decfsz	___ftdiv@cntr,f,c
  8791  00E34C  D7E7               	goto	l1011
  8792  00E34E  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  8793  00E352  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8794  00E356  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8795  00E35A  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  8796  00E35E  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  8797  00E362  EC2B  F06E         	call	___ftpack	;wreg free
  8798  00E366  C001  F009         	movff	?___ftpack,?___ftdiv
  8799  00E36A  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  8800  00E36E  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  8801  00E372  0012               	return	
  8802  00E374                     __end_of___ftdiv:
  8803                           	opt stack 0
  8804                           tblptru	equ	0xFF8
  8805                           tblptrh	equ	0xFF7
  8806                           tblptrl	equ	0xFF6
  8807                           tablat	equ	0xFF5
  8808                           prodh	equ	0xFF4
  8809                           prodl	equ	0xFF3
  8810                           intcon	equ	0xFF2
  8811                           postinc0	equ	0xFEE
  8812                           wreg	equ	0xFE8
  8813                           postinc1	equ	0xFE6
  8814                           postdec1	equ	0xFE5
  8815                           fsr1h	equ	0xFE2
  8816                           fsr1l	equ	0xFE1
  8817                           indf2	equ	0xFDF
  8818                           postinc2	equ	0xFDE
  8819                           postdec2	equ	0xFDD
  8820                           fsr2h	equ	0xFDA
  8821                           fsr2l	equ	0xFD9
  8822                           status	equ	0xFD8
  8823                           
  8824 ;; *************** function ___awtoft *****************
  8825 ;; Defined at:
  8826 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  c               2    8[COMRAM] int 
  8829 ;; Auto vars:     Size  Location     Type
  8830 ;;  sign            1   11[COMRAM] unsigned char 
  8831 ;; Return value:  Size  Location     Type
  8832 ;;                  3    8[COMRAM] float 
  8833 ;; Registers used:
  8834 ;;		wreg, status,2, status,0, cstack
  8835 ;; Tracked objects:
  8836 ;;		On entry : 0/0
  8837 ;;		On exit  : 0/0
  8838 ;;		Unchanged: 0/0
  8839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8840 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8844 ;;Total ram usage:        4 bytes
  8845 ;; Hardware stack levels used:    1
  8846 ;; Hardware stack levels required when called:    1
  8847 ;; This function calls:
  8848 ;;		___ftpack
  8849 ;; This function is called by:
  8850 ;;		_covertir_valores_de_array_a_escala_decimal
  8851 ;;		_exp
  8852 ;;		_log
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text41
  8857  00CEE6                     __ptext41:
  8858                           	opt stack 0
  8859  00CEE6                     ___awtoft:
  8860                           	opt stack 20
  8861                           
  8862                           ;incstack = 0
  8863  00CEE6  0E00               	movlw	0
  8864  00CEE8  6E0C               	movwf	___awtoft@sign,c
  8865  00CEEA  AE0A               	btfss	___awtoft@c+1,7,c
  8866  00CEEC  D006               	goto	l904
  8867  00CEEE  6C09               	negf	___awtoft@c,c
  8868  00CEF0  1E0A               	comf	___awtoft@c+1,f,c
  8869  00CEF2  B0D8               	btfsc	status,0,c
  8870  00CEF4  2A0A               	incf	___awtoft@c+1,f,c
  8871  00CEF6  0E01               	movlw	1
  8872  00CEF8  6E0C               	movwf	___awtoft@sign,c
  8873  00CEFA                     l904:
  8874  00CEFA  C009  F001         	movff	___awtoft@c,___ftpack@arg
  8875  00CEFE  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  8876  00CF02  6A03               	clrf	___ftpack@arg+2,c
  8877  00CF04  0E8E               	movlw	142
  8878  00CF06  6E04               	movwf	___ftpack@exp,c
  8879  00CF08  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  8880  00CF0C  EC2B  F06E         	call	___ftpack	;wreg free
  8881  00CF10  C001  F009         	movff	?___ftpack,?___awtoft
  8882  00CF14  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  8883  00CF18  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  8884  00CF1C  0012               	return	
  8885  00CF1E                     __end_of___awtoft:
  8886                           	opt stack 0
  8887                           tblptru	equ	0xFF8
  8888                           tblptrh	equ	0xFF7
  8889                           tblptrl	equ	0xFF6
  8890                           tablat	equ	0xFF5
  8891                           prodh	equ	0xFF4
  8892                           prodl	equ	0xFF3
  8893                           intcon	equ	0xFF2
  8894                           postinc0	equ	0xFEE
  8895                           wreg	equ	0xFE8
  8896                           postinc1	equ	0xFE6
  8897                           postdec1	equ	0xFE5
  8898                           fsr1h	equ	0xFE2
  8899                           fsr1l	equ	0xFE1
  8900                           indf2	equ	0xFDF
  8901                           postinc2	equ	0xFDE
  8902                           postdec2	equ	0xFDD
  8903                           fsr2h	equ	0xFDA
  8904                           fsr2l	equ	0xFD9
  8905                           status	equ	0xFD8
  8906                           
  8907 ;; *************** function ___lltoft *****************
  8908 ;; Defined at:
  8909 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  c               4    8[COMRAM] unsigned long 
  8912 ;; Auto vars:     Size  Location     Type
  8913 ;;  exp             1   16[COMRAM] unsigned char 
  8914 ;; Return value:  Size  Location     Type
  8915 ;;                  3    8[COMRAM] float 
  8916 ;; Registers used:
  8917 ;;		wreg, status,2, status,0, cstack
  8918 ;; Tracked objects:
  8919 ;;		On entry : 0/0
  8920 ;;		On exit  : 0/0
  8921 ;;		Unchanged: 0/0
  8922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8926 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;Total ram usage:        9 bytes
  8928 ;; Hardware stack levels used:    1
  8929 ;; Hardware stack levels required when called:    1
  8930 ;; This function calls:
  8931 ;;		___ftpack
  8932 ;; This function is called by:
  8933 ;;		_pow
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text42
  8938  00D176                     __ptext42:
  8939                           	opt stack 0
  8940  00D176                     ___lltoft:
  8941                           	opt stack 21
  8942                           
  8943                           ;incstack = 0
  8944  00D176  0E8E               	movlw	142
  8945  00D178  6E11               	movwf	___lltoft@exp,c
  8946  00D17A  D006               	goto	l1106
  8947  00D17C  90D8               	bcf	status,0,c
  8948  00D17E  320C               	rrcf	___lltoft@c+3,f,c
  8949  00D180  320B               	rrcf	___lltoft@c+2,f,c
  8950  00D182  320A               	rrcf	___lltoft@c+1,f,c
  8951  00D184  3209               	rrcf	___lltoft@c,f,c
  8952  00D186  2A11               	incf	___lltoft@exp,f,c
  8953  00D188                     l1106:
  8954  00D188  0E00               	movlw	0
  8955  00D18A  1409               	andwf	___lltoft@c,w,c
  8956  00D18C  6E0D               	movwf	??___lltoft& (0+255),c
  8957  00D18E  0E00               	movlw	0
  8958  00D190  140A               	andwf	___lltoft@c+1,w,c
  8959  00D192  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  8960  00D194  0E00               	movlw	0
  8961  00D196  140B               	andwf	___lltoft@c+2,w,c
  8962  00D198  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  8963  00D19A  0EFF               	movlw	255
  8964  00D19C  140C               	andwf	___lltoft@c+3,w,c
  8965  00D19E  6E10               	movwf	(??___lltoft+3)& (0+255),c
  8966  00D1A0  500D               	movf	??___lltoft,w,c
  8967  00D1A2  100E               	iorwf	??___lltoft+1,w,c
  8968  00D1A4  100F               	iorwf	??___lltoft+2,w,c
  8969  00D1A6  1010               	iorwf	??___lltoft+3,w,c
  8970  00D1A8  A4D8               	btfss	status,2,c
  8971  00D1AA  D7E8               	goto	l1107
  8972  00D1AC  C009  F001         	movff	___lltoft@c,___ftpack@arg
  8973  00D1B0  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  8974  00D1B4  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  8975  00D1B8  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  8976  00D1BC  0E00               	movlw	0
  8977  00D1BE  6E05               	movwf	___ftpack@sign,c
  8978  00D1C0  EC2B  F06E         	call	___ftpack	;wreg free
  8979  00D1C4  C001  F009         	movff	?___ftpack,?___lltoft
  8980  00D1C8  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  8981  00D1CC  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  8982  00D1D0  0012               	return	
  8983  00D1D2                     __end_of___lltoft:
  8984                           	opt stack 0
  8985                           tblptru	equ	0xFF8
  8986                           tblptrh	equ	0xFF7
  8987                           tblptrl	equ	0xFF6
  8988                           tablat	equ	0xFF5
  8989                           prodh	equ	0xFF4
  8990                           prodl	equ	0xFF3
  8991                           intcon	equ	0xFF2
  8992                           postinc0	equ	0xFEE
  8993                           wreg	equ	0xFE8
  8994                           postinc1	equ	0xFE6
  8995                           postdec1	equ	0xFE5
  8996                           fsr1h	equ	0xFE2
  8997                           fsr1l	equ	0xFE1
  8998                           indf2	equ	0xFDF
  8999                           postinc2	equ	0xFDE
  9000                           postdec2	equ	0xFDD
  9001                           fsr2h	equ	0xFDA
  9002                           fsr2l	equ	0xFD9
  9003                           status	equ	0xFD8
  9004                           
  9005 ;; *************** function ___ftpack *****************
  9006 ;; Defined at:
  9007 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  arg             3    0[COMRAM] unsigned um
  9010 ;;  exp             1    3[COMRAM] unsigned char 
  9011 ;;  sign            1    4[COMRAM] unsigned char 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;		None
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  3    0[COMRAM] float 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9023 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9025 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9026 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9027 ;;Total ram usage:        8 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; This function calls:
  9030 ;;		Nothing
  9031 ;; This function is called by:
  9032 ;;		___altoft
  9033 ;;		___awtoft
  9034 ;;		___ftadd
  9035 ;;		___ftdiv
  9036 ;;		___ftmul
  9037 ;;		___lltoft
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text43
  9042  00DC56                     __ptext43:
  9043                           	opt stack 0
  9044  00DC56                     ___ftpack:
  9045                           	opt stack 19
  9046                           
  9047                           ;incstack = 0
  9048  00DC56  5004               	movf	___ftpack@exp,w,c
  9049  00DC58  B4D8               	btfsc	status,2,c
  9050  00DC5A  D005               	goto	u3490
  9051  00DC5C  5001               	movf	___ftpack@arg,w,c
  9052  00DC5E  1002               	iorwf	___ftpack@arg+1,w,c
  9053  00DC60  1003               	iorwf	___ftpack@arg+2,w,c
  9054  00DC62  A4D8               	btfss	status,2,c
  9055  00DC64  D00C               	goto	l944
  9056  00DC66                     u3490:
  9057  00DC66  0E00               	movlw	0
  9058  00DC68  6E01               	movwf	?___ftpack,c
  9059  00DC6A  0E00               	movlw	0
  9060  00DC6C  6E02               	movwf	?___ftpack+1,c
  9061  00DC6E  0E00               	movlw	0
  9062  00DC70  6E03               	movwf	?___ftpack+2,c
  9063  00DC72  0012               	return	
  9064  00DC74  2A04               	incf	___ftpack@exp,f,c
  9065  00DC76  90D8               	bcf	status,0,c
  9066  00DC78  3203               	rrcf	___ftpack@arg+2,f,c
  9067  00DC7A  3202               	rrcf	___ftpack@arg+1,f,c
  9068  00DC7C  3201               	rrcf	___ftpack@arg,f,c
  9069  00DC7E                     l944:
  9070  00DC7E  0E00               	movlw	0
  9071  00DC80  1401               	andwf	___ftpack@arg,w,c
  9072  00DC82  6E06               	movwf	??___ftpack& (0+255),c
  9073  00DC84  0E00               	movlw	0
  9074  00DC86  1402               	andwf	___ftpack@arg+1,w,c
  9075  00DC88  6E07               	movwf	(??___ftpack+1)& (0+255),c
  9076  00DC8A  0EFE               	movlw	254
  9077  00DC8C  1403               	andwf	___ftpack@arg+2,w,c
  9078  00DC8E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  9079  00DC90  5006               	movf	??___ftpack,w,c
  9080  00DC92  1007               	iorwf	??___ftpack+1,w,c
  9081  00DC94  1008               	iorwf	??___ftpack+2,w,c
  9082  00DC96  B4D8               	btfsc	status,2,c
  9083  00DC98  D00C               	goto	l947
  9084  00DC9A  D7EC               	goto	l945
  9085  00DC9C  2A04               	incf	___ftpack@exp,f,c
  9086  00DC9E  0E01               	movlw	1
  9087  00DCA0  2601               	addwf	___ftpack@arg,f,c
  9088  00DCA2  0E00               	movlw	0
  9089  00DCA4  2202               	addwfc	___ftpack@arg+1,f,c
  9090  00DCA6  0E00               	movlw	0
  9091  00DCA8  2203               	addwfc	___ftpack@arg+2,f,c
  9092  00DCAA  90D8               	bcf	status,0,c
  9093  00DCAC  3203               	rrcf	___ftpack@arg+2,f,c
  9094  00DCAE  3202               	rrcf	___ftpack@arg+1,f,c
  9095  00DCB0  3201               	rrcf	___ftpack@arg,f,c
  9096  00DCB2                     l947:
  9097  00DCB2  0E00               	movlw	0
  9098  00DCB4  1401               	andwf	___ftpack@arg,w,c
  9099  00DCB6  6E06               	movwf	??___ftpack& (0+255),c
  9100  00DCB8  0E00               	movlw	0
  9101  00DCBA  1402               	andwf	___ftpack@arg+1,w,c
  9102  00DCBC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  9103  00DCBE  0EFF               	movlw	255
  9104  00DCC0  1403               	andwf	___ftpack@arg+2,w,c
  9105  00DCC2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  9106  00DCC4  5006               	movf	??___ftpack,w,c
  9107  00DCC6  1007               	iorwf	??___ftpack+1,w,c
  9108  00DCC8  1008               	iorwf	??___ftpack+2,w,c
  9109  00DCCA  B4D8               	btfsc	status,2,c
  9110  00DCCC  D006               	goto	l950
  9111  00DCCE  D7E6               	goto	l948
  9112  00DCD0  0604               	decf	___ftpack@exp,f,c
  9113  00DCD2  90D8               	bcf	status,0,c
  9114  00DCD4  3601               	rlcf	___ftpack@arg,f,c
  9115  00DCD6  3602               	rlcf	___ftpack@arg+1,f,c
  9116  00DCD8  3603               	rlcf	___ftpack@arg+2,f,c
  9117  00DCDA                     l950:
  9118  00DCDA  BE02               	btfsc	___ftpack@arg+1,7,c
  9119  00DCDC  D003               	goto	u3530
  9120  00DCDE  0E02               	movlw	2
  9121  00DCE0  6004               	cpfslt	___ftpack@exp,c
  9122  00DCE2  D7F6               	goto	l951
  9123  00DCE4                     u3530:
  9124  00DCE4  A004               	btfss	___ftpack@exp,0,c
  9125  00DCE6  9E02               	bcf	___ftpack@arg+1,7,c
  9126  00DCE8  90D8               	bcf	status,0,c
  9127  00DCEA  3204               	rrcf	___ftpack@exp,f,c
  9128  00DCEC  5004               	movf	___ftpack@exp,w,c
  9129  00DCEE  1203               	iorwf	___ftpack@arg+2,f,c
  9130  00DCF0  5005               	movf	___ftpack@sign,w,c
  9131  00DCF2  A4D8               	btfss	status,2,c
  9132  00DCF4  8E03               	bsf	___ftpack@arg+2,7,c
  9133  00DCF6  C001  F001         	movff	___ftpack@arg,?___ftpack
  9134  00DCFA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  9135  00DCFE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  9136  00DD02  0012               	return	
  9137  00DD04                     __end_of___ftpack:
  9138                           	opt stack 0
  9139                           tblptru	equ	0xFF8
  9140                           tblptrh	equ	0xFF7
  9141                           tblptrl	equ	0xFF6
  9142                           tablat	equ	0xFF5
  9143                           prodh	equ	0xFF4
  9144                           prodl	equ	0xFF3
  9145                           intcon	equ	0xFF2
  9146                           postinc0	equ	0xFEE
  9147                           wreg	equ	0xFE8
  9148                           postinc1	equ	0xFE6
  9149                           postdec1	equ	0xFE5
  9150                           fsr1h	equ	0xFE2
  9151                           fsr1l	equ	0xFE1
  9152                           indf2	equ	0xFDF
  9153                           postinc2	equ	0xFDE
  9154                           postdec2	equ	0xFDD
  9155                           fsr2h	equ	0xFDA
  9156                           fsr2l	equ	0xFD9
  9157                           status	equ	0xFD8
  9158                           
  9159 ;; *************** function _activar_alarma *****************
  9160 ;; Defined at:
  9161 ;;		line 312 in file "main.c"
  9162 ;; Parameters:    Size  Location     Type
  9163 ;;		None
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;  intentos_de_    2   67[COMRAM] int 
  9166 ;; Return value:  Size  Location     Type
  9167 ;;                  1    wreg      void 
  9168 ;; Registers used:
  9169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9170 ;; Tracked objects:
  9171 ;;		On entry : 0/0
  9172 ;;		On exit  : 0/0
  9173 ;;		Unchanged: 0/0
  9174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9178 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;Total ram usage:        3 bytes
  9180 ;; Hardware stack levels used:    1
  9181 ;; Hardware stack levels required when called:    7
  9182 ;; This function calls:
  9183 ;;		_generar_reporte
  9184 ;;		_ingreso_numero
  9185 ;;		_lcd_gotoxy
  9186 ;;		_lcd_putrs
  9187 ;;		_titila_alarma_activada
  9188 ;;		_verificar_contrasenia
  9189 ;; This function is called by:
  9190 ;;		_seleccionar_opcion
  9191 ;;		_ir_a_pantalla_ingresar_contrasenia
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           	psect	text44
  9196  00F098                     __ptext44:
  9197                           	opt stack 0
  9198  00F098                     _activar_alarma:
  9199                           	opt stack 18
  9200                           
  9201                           ;main.c: 313: lcd_gotoxy(1, 1);
  9202                           
  9203                           ;incstack = 0
  9204  00F098  0E01               	movlw	1
  9205  00F09A  6E05               	movwf	lcd_gotoxy@y,c
  9206  00F09C  0E01               	movlw	1
  9207  00F09E  ECF9  F066         	call	_lcd_gotoxy
  9208                           
  9209                           ;main.c: 314: lcd_putrs("Alarm activated ");
  9210  00F0A2  0EE3               	movlw	low STR_17
  9211  00F0A4  6E09               	movwf	lcd_putrs@ptr,c
  9212  00F0A6  0EFE               	movlw	high STR_17
  9213  00F0A8  6E0A               	movwf	lcd_putrs@ptr+1,c
  9214  00F0AA  EC69  F068         	call	_lcd_putrs	;wreg free
  9215                           
  9216                           ;main.c: 315: lcd_gotoxy(1, 2);
  9217  00F0AE  0E02               	movlw	2
  9218  00F0B0  6E05               	movwf	lcd_gotoxy@y,c
  9219  00F0B2  0E01               	movlw	1
  9220  00F0B4  ECF9  F066         	call	_lcd_gotoxy
  9221                           
  9222                           ;main.c: 316: lcd_putrs("                ");
  9223  00F0B8  0ED2               	movlw	low STR_18
  9224  00F0BA  6E09               	movwf	lcd_putrs@ptr,c
  9225  00F0BC  0EFE               	movlw	high STR_18
  9226  00F0BE  6E0A               	movwf	lcd_putrs@ptr+1,c
  9227  00F0C0  EC69  F068         	call	_lcd_putrs	;wreg free
  9228                           
  9229                           ;main.c: 317: numeros_ingresados = 0;
  9230  00F0C4  0E00               	movlw	0
  9231  00F0C6  0100               	movlb	0	; () banked
  9232  00F0C8  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  9233  00F0CA  0E00               	movlw	0
  9234  00F0CC  6FA4               	movwf	_numeros_ingresados& (0+255),b
  9235                           
  9236                           ; BSR set to: 0
  9237                           ;main.c: 318: alarma_activada = 1;
  9238  00F0CE  0E00               	movlw	0
  9239  00F0D0  0100               	movlb	0	; () banked
  9240  00F0D2  6FA1               	movwf	(_alarma_activada+1)& (0+255),b
  9241  00F0D4  0E01               	movlw	1
  9242  00F0D6  6FA0               	movwf	_alarma_activada& (0+255),b
  9243                           
  9244                           ; BSR set to: 0
  9245                           ;main.c: 320: int intentos_de_contrasenia = 0;
  9246  00F0D8  0E00               	movlw	0
  9247  00F0DA  6E45               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  9248  00F0DC  0E00               	movlw	0
  9249  00F0DE  6E44               	movwf	activar_alarma@intentos_de_contrasenia,c
  9250                           
  9251                           ;main.c: 321: while (alarma_activada) {
  9252  00F0E0  D0E3               	goto	l318
  9253  00F0E2                     
  9254                           ; BSR set to: 0
  9255                           ;main.c: 324: if (numeros_ingresados < 4) {
  9256                           
  9257                           ; BSR set to: 0
  9258  00F0E2  0100               	movlb	0	; () banked
  9259  00F0E4  BFA5               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  9260  00F0E6  D008               	goto	u5650
  9261  00F0E8  0100               	movlb	0	; () banked
  9262  00F0EA  51A5               	movf	(_numeros_ingresados+1)& (0+255),w,b
  9263  00F0EC  E131               	bnz	l4951
  9264  00F0EE  0E04               	movlw	4
  9265  00F0F0  0100               	movlb	0	; () banked
  9266  00F0F2  5DA4               	subwf	_numeros_ingresados& (0+255),w,b
  9267  00F0F4  B0D8               	btfsc	status,0,c
  9268  00F0F6  D02C               	goto	l311
  9269  00F0F8                     u5650:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;main.c: 325: if (alarma_sonando == 1) {
  9273  00F0F8  0100               	movlb	0	; () banked
  9274  00F0FA  059E               	decf	_alarma_sonando& (0+255),w,b
  9275  00F0FC  0100               	movlb	0	; () banked
  9276  00F0FE  119F               	iorwf	(_alarma_sonando+1)& (0+255),w,b
  9277  00F100  A4D8               	btfss	status,2,c
  9278  00F102  D023               	goto	l312
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;main.c: 329: generar_reporte();
  9282  00F104  EC5A  F067         	call	_generar_reporte	;wreg free
  9283                           
  9284                           ;main.c: 330: titila_alarma_activada();
  9285  00F108  ECC9  F069         	call	_titila_alarma_activada	;wreg free
  9286                           
  9287                           ;main.c: 331: LATBbits.LATB1 = !LATBbits.LATB1;;
  9288  00F10C  B28A               	btfsc	3978,1,c	;volatile
  9289  00F10E  D003               	goto	u5670
  9290  00F110  6A43               	clrf	??_activar_alarma& (0+255),c
  9291  00F112  2A43               	incf	??_activar_alarma& (0+255),f,c
  9292  00F114  D001               	goto	u5688
  9293  00F116                     u5670:
  9294  00F116  6A43               	clrf	??_activar_alarma& (0+255),c
  9295  00F118                     u5688:
  9296  00F118  4643               	rlncf	??_activar_alarma,f,c
  9297  00F11A  508A               	movf	3978,w,c	;volatile
  9298  00F11C  1843               	xorwf	??_activar_alarma,w,c
  9299  00F11E  0BFD               	andlw	-3
  9300  00F120  1843               	xorwf	??_activar_alarma,w,c
  9301  00F122  6E8A               	movwf	3978,c	;volatile
  9302                           
  9303                           ;main.c: 332: LATBbits.LATB0 = !LATBbits.LATB0;
  9304  00F124  B08A               	btfsc	3978,0,c	;volatile
  9305  00F126  D003               	goto	u5690
  9306  00F128  6A43               	clrf	??_activar_alarma& (0+255),c
  9307  00F12A  2A43               	incf	??_activar_alarma& (0+255),f,c
  9308  00F12C  D001               	goto	u5708
  9309  00F12E                     u5690:
  9310  00F12E  6A43               	clrf	??_activar_alarma& (0+255),c
  9311  00F130                     u5708:
  9312  00F130  508A               	movf	3978,w,c	;volatile
  9313  00F132  1843               	xorwf	??_activar_alarma,w,c
  9314  00F134  0BFE               	andlw	-2
  9315  00F136  1843               	xorwf	??_activar_alarma,w,c
  9316  00F138  6E8A               	movwf	3978,c	;volatile
  9317                           
  9318                           ;main.c: 333: _delay((unsigned long)((98)*(8000000/4000.0)));
  9319  00F13A  0EFF               	movlw	255
  9320  00F13C  6E43               	movwf	??_activar_alarma& (0+255),c
  9321  00F13E  0E8A               	movlw	138
  9322  00F140                     u7057:
  9323  00F140  2EE8               	decfsz	wreg,f,c
  9324  00F142  D7FE               	bra	u7057
  9325  00F144  2E43               	decfsz	??_activar_alarma& (0+255),f,c
  9326  00F146  D7FC               	bra	u7057
  9327  00F148  D000               	nop2	
  9328  00F14A                     l312:
  9329                           
  9330                           ;main.c: 334: }
  9331                           ;main.c: 335: ingreso_numero();
  9332  00F14A  EC5B  F079         	call	_ingreso_numero	;wreg free
  9333                           
  9334                           ;main.c: 336: } else {
  9335  00F14E  D067               	goto	l317
  9336  00F150                     l311:
  9337  00F150                     l4951:
  9338                           
  9339                           ;main.c: 337: if (verificar_contrasenia()) {
  9340  00F150  EC7F  F06A         	call	_verificar_contrasenia	;wreg free
  9341  00F154  5001               	movf	?_verificar_contrasenia,w,c
  9342  00F156  1002               	iorwf	?_verificar_contrasenia+1,w,c
  9343  00F158  B4D8               	btfsc	status,2,c
  9344  00F15A  D019               	goto	l314
  9345                           
  9346                           ;main.c: 338: alarma_activada = 0;
  9347  00F15C  0E00               	movlw	0
  9348  00F15E  0100               	movlb	0	; () banked
  9349  00F160  6FA1               	movwf	(_alarma_activada+1)& (0+255),b
  9350  00F162  0E00               	movlw	0
  9351  00F164  6FA0               	movwf	_alarma_activada& (0+255),b
  9352                           
  9353                           ; BSR set to: 0
  9354                           ;main.c: 339: LATBbits.LATB1 = 0;;
  9355  00F166  928A               	bcf	3978,1,c	;volatile
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;main.c: 340: LATBbits.LATB0 = 0;;
  9359  00F168  908A               	bcf	3978,0,c	;volatile
  9360                           
  9361                           ;main.c: 341: alarma_sonando = 0;
  9362  00F16A  0E00               	movlw	0
  9363  00F16C  0100               	movlb	0	; () banked
  9364  00F16E  6F9F               	movwf	(_alarma_sonando+1)& (0+255),b
  9365  00F170  0E00               	movlw	0
  9366  00F172  6F9E               	movwf	_alarma_sonando& (0+255),b
  9367                           
  9368                           ;main.c: 342: intentos_de_contrasenia = 0;
  9369  00F174  0E00               	movlw	0
  9370  00F176  6E45               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  9371  00F178  0E00               	movlw	0
  9372  00F17A  6E44               	movwf	activar_alarma@intentos_de_contrasenia,c
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;main.c: 343: _delay((unsigned long)((98)*(8000000/4000.0)));
  9376  00F17C  0EFF               	movlw	255
  9377  00F17E  6E43               	movwf	??_activar_alarma& (0+255),c
  9378  00F180  0E8A               	movlw	138
  9379  00F182                     u7067:
  9380  00F182  2EE8               	decfsz	wreg,f,c
  9381  00F184  D7FE               	bra	u7067
  9382  00F186  2E43               	decfsz	??_activar_alarma& (0+255),f,c
  9383  00F188  D7FC               	bra	u7067
  9384  00F18A  D000               	nop2	
  9385                           
  9386                           ;main.c: 344: break;
  9387  00F18C  0012               	return	
  9388  00F18E                     l314:
  9389                           
  9390                           ;main.c: 346: numeros_ingresados = 0;
  9391  00F18E  0E00               	movlw	0
  9392  00F190  0100               	movlb	0	; () banked
  9393  00F192  6FA5               	movwf	(_numeros_ingresados+1)& (0+255),b
  9394  00F194  0E00               	movlw	0
  9395  00F196  6FA4               	movwf	_numeros_ingresados& (0+255),b
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;main.c: 347: intentos_de_contrasenia++;
  9399  00F198  4A44               	infsnz	activar_alarma@intentos_de_contrasenia,f,c
  9400  00F19A  2A45               	incf	activar_alarma@intentos_de_contrasenia+1,f,c
  9401                           
  9402                           ; BSR set to: 0
  9403                           ;main.c: 348: lcd_gotoxy(1, 2);
  9404  00F19C  0E02               	movlw	2
  9405  00F19E  6E05               	movwf	lcd_gotoxy@y,c
  9406  00F1A0  0E01               	movlw	1
  9407  00F1A2  ECF9  F066         	call	_lcd_gotoxy
  9408                           
  9409                           ;main.c: 349: lcd_putrs("                ");
  9410  00F1A6  0ED2               	movlw	low STR_18
  9411  00F1A8  6E09               	movwf	lcd_putrs@ptr,c
  9412  00F1AA  0EFE               	movlw	high STR_18
  9413  00F1AC  6E0A               	movwf	lcd_putrs@ptr+1,c
  9414  00F1AE  EC69  F068         	call	_lcd_putrs	;wreg free
  9415                           
  9416                           ;main.c: 350: if (intentos_de_contrasenia >= 3) {
  9417  00F1B2  BE45               	btfsc	activar_alarma@intentos_de_contrasenia+1,7,c
  9418  00F1B4  D034               	goto	l317
  9419  00F1B6  5045               	movf	activar_alarma@intentos_de_contrasenia+1,w,c
  9420  00F1B8  E104               	bnz	u5720
  9421  00F1BA  0E03               	movlw	3
  9422  00F1BC  5C44               	subwf	activar_alarma@intentos_de_contrasenia,w,c
  9423  00F1BE  A0D8               	btfss	status,0,c
  9424  00F1C0  D02E               	goto	l317
  9425  00F1C2                     u5720:
  9426                           
  9427                           ;main.c: 352: titila_alarma_activada();
  9428  00F1C2  ECC9  F069         	call	_titila_alarma_activada	;wreg free
  9429                           
  9430                           ;main.c: 353: alarma_sonando = 1;
  9431  00F1C6  0E00               	movlw	0
  9432  00F1C8  0100               	movlb	0	; () banked
  9433  00F1CA  6F9F               	movwf	(_alarma_sonando+1)& (0+255),b
  9434  00F1CC  0E01               	movlw	1
  9435  00F1CE  6F9E               	movwf	_alarma_sonando& (0+255),b
  9436                           
  9437                           ; BSR set to: 0
  9438                           ;main.c: 354: causa_reporte = "3 tries";
  9439  00F1D0  0EB7               	movlw	low STR_22
  9440  00F1D2  0100               	movlb	0	; () banked
  9441  00F1D4  6FC5               	movwf	_causa_reporte& (0+255),b
  9442  00F1D6  0EFF               	movlw	high STR_22
  9443  00F1D8  0100               	movlb	0	; () banked
  9444  00F1DA  6FC6               	movwf	(_causa_reporte+1)& (0+255),b
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;main.c: 355: generar_reporte();
  9448  00F1DC  EC5A  F067         	call	_generar_reporte	;wreg free
  9449                           
  9450                           ;main.c: 359: LATBbits.LATB1 = !LATBbits.LATB1;;
  9451  00F1E0  B28A               	btfsc	3978,1,c	;volatile
  9452  00F1E2  D003               	goto	u5730
  9453  00F1E4  6A43               	clrf	??_activar_alarma& (0+255),c
  9454  00F1E6  2A43               	incf	??_activar_alarma& (0+255),f,c
  9455  00F1E8  D001               	goto	u5748
  9456  00F1EA                     u5730:
  9457  00F1EA  6A43               	clrf	??_activar_alarma& (0+255),c
  9458  00F1EC                     u5748:
  9459  00F1EC  4643               	rlncf	??_activar_alarma,f,c
  9460  00F1EE  508A               	movf	3978,w,c	;volatile
  9461  00F1F0  1843               	xorwf	??_activar_alarma,w,c
  9462  00F1F2  0BFD               	andlw	-3
  9463  00F1F4  1843               	xorwf	??_activar_alarma,w,c
  9464  00F1F6  6E8A               	movwf	3978,c	;volatile
  9465                           
  9466                           ;main.c: 360: LATBbits.LATB0 = !LATBbits.LATB0;
  9467  00F1F8  B08A               	btfsc	3978,0,c	;volatile
  9468  00F1FA  D003               	goto	u5750
  9469  00F1FC  6A43               	clrf	??_activar_alarma& (0+255),c
  9470  00F1FE  2A43               	incf	??_activar_alarma& (0+255),f,c
  9471  00F200  D001               	goto	u5768
  9472  00F202                     u5750:
  9473  00F202  6A43               	clrf	??_activar_alarma& (0+255),c
  9474  00F204                     u5768:
  9475  00F204  508A               	movf	3978,w,c	;volatile
  9476  00F206  1843               	xorwf	??_activar_alarma,w,c
  9477  00F208  0BFE               	andlw	-2
  9478  00F20A  1843               	xorwf	??_activar_alarma,w,c
  9479  00F20C  6E8A               	movwf	3978,c	;volatile
  9480                           
  9481                           ;main.c: 361: _delay((unsigned long)((98)*(8000000/4000.0)));
  9482  00F20E  0EFF               	movlw	255
  9483  00F210  6E43               	movwf	??_activar_alarma& (0+255),c
  9484  00F212  0E8A               	movlw	138
  9485  00F214                     u7077:
  9486  00F214  2EE8               	decfsz	wreg,f,c
  9487  00F216  D7FE               	bra	u7077
  9488  00F218  2E43               	decfsz	??_activar_alarma& (0+255),f,c
  9489  00F21A  D7FC               	bra	u7077
  9490  00F21C  D000               	nop2	
  9491  00F21E                     l317:
  9492                           
  9493                           ;main.c: 362: }
  9494                           ;main.c: 363: }
  9495                           ;main.c: 364: }
  9496                           ;main.c: 366: if (PORTCbits.RC5 == 0 || PORTCbits.RC6 == 0 || PORTCbits.RC7 == 0) {
  9497  00F21E  BA82               	btfsc	3970,5,c	;volatile
  9498  00F220  AC82               	btfss	3970,6,c	;volatile
  9499  00F222  D002               	goto	u5790
  9500  00F224  BE82               	btfsc	3970,7,c	;volatile
  9501  00F226  D040               	goto	l318
  9502  00F228                     u5790:
  9503                           
  9504                           ;main.c: 372: titila_alarma_activada();
  9505  00F228  ECC9  F069         	call	_titila_alarma_activada	;wreg free
  9506                           
  9507                           ;main.c: 373: alarma_sonando = 1;
  9508  00F22C  0E00               	movlw	0
  9509  00F22E  0100               	movlb	0	; () banked
  9510  00F230  6F9F               	movwf	(_alarma_sonando+1)& (0+255),b
  9511  00F232  0E01               	movlw	1
  9512  00F234  6F9E               	movwf	_alarma_sonando& (0+255),b
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;main.c: 374: if (PORTCbits.RC5 == 0) {
  9516  00F236  BA82               	btfsc	3970,5,c	;volatile
  9517  00F238  D006               	goto	l321
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;main.c: 375: causa_reporte = "sensor1";
  9521  00F23A  0E97               	movlw	low STR_23
  9522  00F23C  0100               	movlb	0	; () banked
  9523  00F23E  6FC5               	movwf	_causa_reporte& (0+255),b
  9524  00F240  0EFF               	movlw	high STR_23
  9525  00F242  0100               	movlb	0	; () banked
  9526  00F244  6FC6               	movwf	(_causa_reporte+1)& (0+255),b
  9527  00F246                     l321:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;main.c: 376: }
  9531                           ;main.c: 377: if (PORTCbits.RC6 == 0) {
  9532                           
  9533                           ; BSR set to: 0
  9534  00F246  BC82               	btfsc	3970,6,c	;volatile
  9535  00F248  D006               	goto	l322
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;main.c: 378: causa_reporte = "sensor2";
  9539  00F24A  0E9F               	movlw	low STR_24
  9540  00F24C  0100               	movlb	0	; () banked
  9541  00F24E  6FC5               	movwf	_causa_reporte& (0+255),b
  9542  00F250  0EFF               	movlw	high STR_24
  9543  00F252  0100               	movlb	0	; () banked
  9544  00F254  6FC6               	movwf	(_causa_reporte+1)& (0+255),b
  9545  00F256                     l322:
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;main.c: 379: }
  9549                           ;main.c: 380: if (PORTCbits.RC7 == 0) {
  9550                           
  9551                           ; BSR set to: 0
  9552  00F256  BE82               	btfsc	3970,7,c	;volatile
  9553  00F258  D006               	goto	l323
  9554                           
  9555                           ; BSR set to: 0
  9556                           ;main.c: 381: causa_reporte = "sensor3";
  9557  00F25A  0EA7               	movlw	low STR_25
  9558  00F25C  0100               	movlb	0	; () banked
  9559  00F25E  6FC5               	movwf	_causa_reporte& (0+255),b
  9560  00F260  0EFF               	movlw	high STR_25
  9561  00F262  0100               	movlb	0	; () banked
  9562  00F264  6FC6               	movwf	(_causa_reporte+1)& (0+255),b
  9563  00F266                     l323:
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;main.c: 382: }
  9567                           ;main.c: 383: generar_reporte();
  9568                           
  9569                           ; BSR set to: 0
  9570  00F266  EC5A  F067         	call	_generar_reporte	;wreg free
  9571                           
  9572                           ;main.c: 384: LATBbits.LATB1 = !LATBbits.LATB1;;
  9573  00F26A  B28A               	btfsc	3978,1,c	;volatile
  9574  00F26C  D003               	goto	u5830
  9575  00F26E  6A43               	clrf	??_activar_alarma& (0+255),c
  9576  00F270  2A43               	incf	??_activar_alarma& (0+255),f,c
  9577  00F272  D001               	goto	u5848
  9578  00F274                     u5830:
  9579  00F274  6A43               	clrf	??_activar_alarma& (0+255),c
  9580  00F276                     u5848:
  9581  00F276  4643               	rlncf	??_activar_alarma,f,c
  9582  00F278  508A               	movf	3978,w,c	;volatile
  9583  00F27A  1843               	xorwf	??_activar_alarma,w,c
  9584  00F27C  0BFD               	andlw	-3
  9585  00F27E  1843               	xorwf	??_activar_alarma,w,c
  9586  00F280  6E8A               	movwf	3978,c	;volatile
  9587                           
  9588                           ;main.c: 385: LATBbits.LATB0 = !LATBbits.LATB0;;
  9589  00F282  B08A               	btfsc	3978,0,c	;volatile
  9590  00F284  D003               	goto	u5850
  9591  00F286  6A43               	clrf	??_activar_alarma& (0+255),c
  9592  00F288  2A43               	incf	??_activar_alarma& (0+255),f,c
  9593  00F28A  D001               	goto	u5868
  9594  00F28C                     u5850:
  9595  00F28C  6A43               	clrf	??_activar_alarma& (0+255),c
  9596  00F28E                     u5868:
  9597  00F28E  508A               	movf	3978,w,c	;volatile
  9598  00F290  1843               	xorwf	??_activar_alarma,w,c
  9599  00F292  0BFE               	andlw	-2
  9600  00F294  1843               	xorwf	??_activar_alarma,w,c
  9601  00F296  6E8A               	movwf	3978,c	;volatile
  9602                           
  9603                           ;main.c: 386: _delay((unsigned long)((98)*(8000000/4000.0)));
  9604  00F298  0EFF               	movlw	255
  9605  00F29A  6E43               	movwf	??_activar_alarma& (0+255),c
  9606  00F29C  0E8A               	movlw	138
  9607  00F29E                     u7087:
  9608  00F29E  2EE8               	decfsz	wreg,f,c
  9609  00F2A0  D7FE               	bra	u7087
  9610  00F2A2  2E43               	decfsz	??_activar_alarma& (0+255),f,c
  9611  00F2A4  D7FC               	bra	u7087
  9612  00F2A6  D000               	nop2	
  9613  00F2A8                     l318:
  9614  00F2A8  0100               	movlb	0	; () banked
  9615  00F2AA  51A0               	movf	_alarma_activada& (0+255),w,b
  9616  00F2AC  0100               	movlb	0	; () banked
  9617  00F2AE  11A1               	iorwf	(_alarma_activada+1)& (0+255),w,b
  9618  00F2B0  B4D8               	btfsc	status,2,c
  9619  00F2B2  0012               	return	
  9620  00F2B4  D716               	goto	l310
  9621  00F2B6                     __end_of_activar_alarma:
  9622                           	opt stack 0
  9623                           tblptru	equ	0xFF8
  9624                           tblptrh	equ	0xFF7
  9625                           tblptrl	equ	0xFF6
  9626                           tablat	equ	0xFF5
  9627                           prodh	equ	0xFF4
  9628                           prodl	equ	0xFF3
  9629                           intcon	equ	0xFF2
  9630                           postinc0	equ	0xFEE
  9631                           wreg	equ	0xFE8
  9632                           postinc1	equ	0xFE6
  9633                           postdec1	equ	0xFE5
  9634                           fsr1h	equ	0xFE2
  9635                           fsr1l	equ	0xFE1
  9636                           indf2	equ	0xFDF
  9637                           postinc2	equ	0xFDE
  9638                           postdec2	equ	0xFDD
  9639                           fsr2h	equ	0xFDA
  9640                           fsr2l	equ	0xFD9
  9641                           status	equ	0xFD8
  9642                           
  9643 ;; *************** function _verificar_contrasenia *****************
  9644 ;; Defined at:
  9645 ;;		line 613 in file "main.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;		None
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  i               2    8[COMRAM] int 
  9650 ;;  equals          2    6[COMRAM] int 
  9651 ;; Return value:  Size  Location     Type
  9652 ;;                  2    0[COMRAM] int 
  9653 ;; Registers used:
  9654 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9655 ;; Tracked objects:
  9656 ;;		On entry : 0/0
  9657 ;;		On exit  : 0/0
  9658 ;;		Unchanged: 0/0
  9659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9663 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9664 ;;Total ram usage:       10 bytes
  9665 ;; Hardware stack levels used:    1
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		_activar_alarma
  9670 ;;		_ir_a_pantalla_ingresar_contrasenia
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           	psect	text45
  9675  00D4FE                     __ptext45:
  9676                           	opt stack 0
  9677  00D4FE                     _verificar_contrasenia:
  9678                           	opt stack 27
  9679                           
  9680                           ;main.c: 614: int equals = 0;
  9681                           
  9682                           ;incstack = 0
  9683  00D4FE  0E00               	movlw	0
  9684  00D500  6E08               	movwf	verificar_contrasenia@equals+1,c
  9685  00D502  0E00               	movlw	0
  9686  00D504  6E07               	movwf	verificar_contrasenia@equals,c
  9687                           
  9688                           ;main.c: 615: for (int i = 0; i < 4; i++) {
  9689  00D506  0E00               	movlw	0
  9690  00D508  6E0A               	movwf	verificar_contrasenia@i+1,c
  9691  00D50A  0E00               	movlw	0
  9692  00D50C  6E09               	movwf	verificar_contrasenia@i,c
  9693  00D50E  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  9694  00D510  D003               	goto	l425
  9695  00D512  500A               	movf	verificar_contrasenia@i+1,w,c
  9696  00D514  E12E               	bnz	l426
  9697  00D516  D029               	goto	L2
  9698  00D518                     l425:
  9699                           
  9700                           ;main.c: 616: if (array_contrasenia[i] == array_contrasenia_ingresada[i]) {
  9701  00D518  90D8               	bcf	status,0,c
  9702  00D51A  3409               	rlcf	verificar_contrasenia@i,w,c
  9703  00D51C  6ED9               	movwf	fsr2l,c
  9704  00D51E  340A               	rlcf	verificar_contrasenia@i+1,w,c
  9705  00D520  6EDA               	movwf	fsr2h,c
  9706  00D522  0E60               	movlw	low _array_contrasenia_ingresada
  9707  00D524  26D9               	addwf	fsr2l,f,c
  9708  00D526  0E00               	movlw	high _array_contrasenia_ingresada
  9709  00D528  22DA               	addwfc	fsr2h,f,c
  9710  00D52A  90D8               	bcf	status,0,c
  9711  00D52C  3409               	rlcf	verificar_contrasenia@i,w,c
  9712  00D52E  6EE1               	movwf	fsr1l,c
  9713  00D530  340A               	rlcf	verificar_contrasenia@i+1,w,c
  9714  00D532  6EE2               	movwf	fsr1h,c
  9715  00D534  0EBD               	movlw	low _array_contrasenia
  9716  00D536  26E1               	addwf	fsr1l,f,c
  9717  00D538  0E00               	movlw	high _array_contrasenia
  9718  00D53A  22E2               	addwfc	fsr1h,f,c
  9719  00D53C  50DE               	movf	postinc2,w,c
  9720  00D53E  18E6               	xorwf	postinc1,w,c
  9721  00D540  E109               	bnz	l4813
  9722  00D542  50DE               	movf	postinc2,w,c
  9723  00D544  18E6               	xorwf	postinc1,w,c
  9724  00D546  A4D8               	btfss	status,2,c
  9725  00D548  D005               	goto	l427
  9726                           
  9727                           ;main.c: 617: equals = 1;
  9728  00D54A  0E00               	movlw	0
  9729  00D54C  6E08               	movwf	verificar_contrasenia@equals+1,c
  9730  00D54E  0E01               	movlw	1
  9731  00D550  6E07               	movwf	verificar_contrasenia@equals,c
  9732                           
  9733                           ;main.c: 618: } else {
  9734  00D552  D005               	goto	l428
  9735  00D554                     l427:
  9736  00D554                     l4813:
  9737                           
  9738                           ;main.c: 619: equals = 0;
  9739  00D554  0E00               	movlw	0
  9740  00D556  6E08               	movwf	verificar_contrasenia@equals+1,c
  9741  00D558  0E00               	movlw	0
  9742  00D55A  6E07               	movwf	verificar_contrasenia@equals,c
  9743                           
  9744                           ;main.c: 620: break;
  9745  00D55C  D00A               	goto	u5500
  9746  00D55E                     l428:
  9747  00D55E  4A09               	infsnz	verificar_contrasenia@i,f,c
  9748  00D560  2A0A               	incf	verificar_contrasenia@i+1,f,c
  9749  00D562  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  9750  00D564  D7D9               	goto	l425
  9751  00D566  500A               	movf	verificar_contrasenia@i+1,w,c
  9752  00D568  E104               	bnz	u5500
  9753  00D56A                     L2:
  9754  00D56A  0E04               	movlw	4
  9755  00D56C  5C09               	subwf	verificar_contrasenia@i,w,c
  9756  00D56E  A0D8               	btfss	status,0,c
  9757  00D570  D7D3               	goto	l425
  9758  00D572                     u5500:
  9759  00D572                     l426:
  9760                           
  9761                           ;main.c: 621: }
  9762                           ;main.c: 622: }
  9763                           ;main.c: 623: return equals;
  9764  00D572  C007  F001         	movff	verificar_contrasenia@equals,?_verificar_contrasenia
  9765  00D576  C008  F002         	movff	verificar_contrasenia@equals+1,?_verificar_contrasenia+1
  9766  00D57A  0012               	return		;funcret
  9767  00D57C                     __end_of_verificar_contrasenia:
  9768                           	opt stack 0
  9769                           tblptru	equ	0xFF8
  9770                           tblptrh	equ	0xFF7
  9771                           tblptrl	equ	0xFF6
  9772                           tablat	equ	0xFF5
  9773                           prodh	equ	0xFF4
  9774                           prodl	equ	0xFF3
  9775                           intcon	equ	0xFF2
  9776                           postinc0	equ	0xFEE
  9777                           wreg	equ	0xFE8
  9778                           postinc1	equ	0xFE6
  9779                           postdec1	equ	0xFE5
  9780                           fsr1h	equ	0xFE2
  9781                           fsr1l	equ	0xFE1
  9782                           indf2	equ	0xFDF
  9783                           postinc2	equ	0xFDE
  9784                           postdec2	equ	0xFDD
  9785                           fsr2h	equ	0xFDA
  9786                           fsr2l	equ	0xFD9
  9787                           status	equ	0xFD8
  9788                           
  9789 ;; *************** function _titila_alarma_activada *****************
  9790 ;; Defined at:
  9791 ;;		line 287 in file "main.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;		None
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;		None
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  1    wreg      void 
  9798 ;; Registers used:
  9799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9809 ;;Total ram usage:        1 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:    5
  9812 ;; This function calls:
  9813 ;;		_lcd_gotoxy
  9814 ;;		_lcd_putrs
  9815 ;; This function is called by:
  9816 ;;		_activar_alarma
  9817 ;; This function uses a non-reentrant model
  9818 ;;
  9819                           
  9820                           	psect	text46
  9821  00D392                     __ptext46:
  9822                           	opt stack 0
  9823  00D392                     _titila_alarma_activada:
  9824                           	opt stack 19
  9825                           
  9826                           ;main.c: 288: if (txt_alarma_activada == 0) {
  9827                           
  9828                           ;incstack = 0
  9829  00D392  0100               	movlb	0	; () banked
  9830  00D394  518C               	movf	_txt_alarma_activada& (0+255),w,b
  9831  00D396  0100               	movlb	0	; () banked
  9832  00D398  118D               	iorwf	(_txt_alarma_activada+1)& (0+255),w,b
  9833  00D39A  A4D8               	btfss	status,2,c
  9834  00D39C  D017               	goto	l301
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;main.c: 289: txt_alarma_activada = 1;
  9838  00D39E  0E00               	movlw	0
  9839  00D3A0  0100               	movlb	0	; () banked
  9840  00D3A2  6F8D               	movwf	(_txt_alarma_activada+1)& (0+255),b
  9841  00D3A4  0E01               	movlw	1
  9842  00D3A6  6F8C               	movwf	_txt_alarma_activada& (0+255),b
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;main.c: 290: lcd_gotoxy(1, 1);
  9846  00D3A8  0E01               	movlw	1
  9847  00D3AA  6E05               	movwf	lcd_gotoxy@y,c
  9848  00D3AC  0E01               	movlw	1
  9849  00D3AE  ECF9  F066         	call	_lcd_gotoxy
  9850                           
  9851                           ;main.c: 291: lcd_putrs("Alarm activated ");
  9852  00D3B2  0EE3               	movlw	low STR_17
  9853  00D3B4  6E09               	movwf	lcd_putrs@ptr,c
  9854  00D3B6  0EFE               	movlw	high STR_17
  9855  00D3B8  6E0A               	movwf	lcd_putrs@ptr+1,c
  9856  00D3BA  EC69  F068         	call	_lcd_putrs	;wreg free
  9857                           
  9858                           ;main.c: 292: _delay((unsigned long)((80)*(8000000/4000.0)));
  9859  00D3BE  0ED0               	movlw	208
  9860  00D3C0  6E0B               	movwf	??_titila_alarma_activada& (0+255),c
  9861  00D3C2  0ECA               	movlw	202
  9862  00D3C4                     u7097:
  9863  00D3C4  2EE8               	decfsz	wreg,f,c
  9864  00D3C6  D7FE               	bra	u7097
  9865  00D3C8  2E0B               	decfsz	??_titila_alarma_activada& (0+255),f,c
  9866  00D3CA  D7FC               	bra	u7097
  9867  00D3CC                     l301:
  9868                           
  9869                           ;main.c: 293: }
  9870                           ;main.c: 295: if (txt_alarma_activada == 1) {
  9871  00D3CC  0100               	movlb	0	; () banked
  9872  00D3CE  058C               	decf	_txt_alarma_activada& (0+255),w,b
  9873  00D3D0  0100               	movlb	0	; () banked
  9874  00D3D2  118D               	iorwf	(_txt_alarma_activada+1)& (0+255),w,b
  9875  00D3D4  A4D8               	btfss	status,2,c
  9876  00D3D6  0012               	return	
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;main.c: 296: txt_alarma_activada = 0;
  9880  00D3D8  0E00               	movlw	0
  9881  00D3DA  0100               	movlb	0	; () banked
  9882  00D3DC  6F8D               	movwf	(_txt_alarma_activada+1)& (0+255),b
  9883  00D3DE  0E00               	movlw	0
  9884  00D3E0  6F8C               	movwf	_txt_alarma_activada& (0+255),b
  9885                           
  9886                           ; BSR set to: 0
  9887                           ;main.c: 297: lcd_gotoxy(1, 1);
  9888  00D3E2  0E01               	movlw	1
  9889  00D3E4  6E05               	movwf	lcd_gotoxy@y,c
  9890  00D3E6  0E01               	movlw	1
  9891  00D3E8  ECF9  F066         	call	_lcd_gotoxy
  9892                           
  9893                           ;main.c: 298: lcd_putrs("                ");
  9894  00D3EC  0ED2               	movlw	low STR_18
  9895  00D3EE  6E09               	movwf	lcd_putrs@ptr,c
  9896  00D3F0  0EFE               	movlw	high STR_18
  9897  00D3F2  6E0A               	movwf	lcd_putrs@ptr+1,c
  9898  00D3F4  EC69  F068         	call	_lcd_putrs	;wreg free
  9899                           
  9900                           ;main.c: 299: _delay((unsigned long)((60)*(8000000/4000.0)));
  9901  00D3F8  0E9C               	movlw	156
  9902  00D3FA  6E0B               	movwf	??_titila_alarma_activada& (0+255),c
  9903  00D3FC  0ED7               	movlw	215
  9904  00D3FE                     u7107:
  9905  00D3FE  2EE8               	decfsz	wreg,f,c
  9906  00D400  D7FE               	bra	u7107
  9907  00D402  2E0B               	decfsz	??_titila_alarma_activada& (0+255),f,c
  9908  00D404  D7FC               	bra	u7107
  9909  00D406  F000               	nop	
  9910  00D408  0012               	return	
  9911  00D40A                     __end_of_titila_alarma_activada:
  9912                           	opt stack 0
  9913                           tblptru	equ	0xFF8
  9914                           tblptrh	equ	0xFF7
  9915                           tblptrl	equ	0xFF6
  9916                           tablat	equ	0xFF5
  9917                           prodh	equ	0xFF4
  9918                           prodl	equ	0xFF3
  9919                           intcon	equ	0xFF2
  9920                           postinc0	equ	0xFEE
  9921                           wreg	equ	0xFE8
  9922                           postinc1	equ	0xFE6
  9923                           postdec1	equ	0xFE5
  9924                           fsr1h	equ	0xFE2
  9925                           fsr1l	equ	0xFE1
  9926                           indf2	equ	0xFDF
  9927                           postinc2	equ	0xFDE
  9928                           postdec2	equ	0xFDD
  9929                           fsr2h	equ	0xFDA
  9930                           fsr2l	equ	0xFD9
  9931                           status	equ	0xFD8
  9932                           
  9933 ;; *************** function _ingreso_numero *****************
  9934 ;; Defined at:
  9935 ;;		line 143 in file "main.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;		None
  9938 ;; Auto vars:     Size  Location     Type
  9939 ;;		None
  9940 ;; Return value:  Size  Location     Type
  9941 ;;                  1    wreg      void 
  9942 ;; Registers used:
  9943 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9944 ;; Tracked objects:
  9945 ;;		On entry : 0/0
  9946 ;;		On exit  : 0/0
  9947 ;;		Unchanged: 0/0
  9948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9953 ;;Total ram usage:        2 bytes
  9954 ;; Hardware stack levels used:    1
  9955 ;; Hardware stack levels required when called:    6
  9956 ;; This function calls:
  9957 ;;		_guarda_numero_ingresado
  9958 ;; This function is called by:
  9959 ;;		_activar_alarma
  9960 ;;		_ir_a_pantalla_ingresar_contrasenia
  9961 ;;		_ir_a_pantalla_editar_contrasenia
  9962 ;;		_editar_fecha_reloj_digital
  9963 ;;		_editar_hora_reloj_digital
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text47
  9968  00F2B6                     __ptext47:
  9969                           	opt stack 0
  9970  00F2B6                     _ingreso_numero:
  9971                           	opt stack 18
  9972                           
  9973                           ;main.c: 144: LATAbits.LATA0 = 1;
  9974                           
  9975                           ;incstack = 0
  9976  00F2B6  8089               	bsf	3977,0,c	;volatile
  9977                           
  9978                           ;main.c: 145: LATAbits.LATA1 = 0;
  9979  00F2B8  9289               	bcf	3977,1,c	;volatile
  9980                           
  9981                           ;main.c: 146: LATAbits.LATA2 = 0;
  9982  00F2BA  9489               	bcf	3977,2,c	;volatile
  9983                           
  9984                           ;main.c: 147: LATAbits.LATA3 = 0;
  9985  00F2BC  9689               	bcf	3977,3,c	;volatile
  9986                           
  9987                           ;main.c: 148: {
  9988                           ;main.c: 149: if (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  9989  00F2BE  BA80               	btfsc	3968,5,c	;volatile
  9990  00F2C0  A089               	btfss	3977,0,c	;volatile
  9991  00F2C2  D01A               	goto	u5090
  9992                           
  9993                           ;main.c: 150: key = 1;
  9994  00F2C4  0E01               	movlw	1
  9995  00F2C6  0100               	movlb	0	; () banked
  9996  00F2C8  6FB4               	movwf	_key& (0+255),b
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;main.c: 151: guarda_numero_ingresado(key);
 10000  00F2CA  0100               	movlb	0	; () banked
 10001  00F2CC  51B4               	movf	_key& (0+255),w,b
 10002  00F2CE  6E41               	movwf	??_ingreso_numero& (0+255),c
 10003  00F2D0  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10004  00F2D2  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10005  00F2D6  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10006  00F2DA  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10007                           
 10008                           ;main.c: 152: while (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
 10009  00F2DE  D008               	goto	l212
 10010  00F2E0                     
 10011                           ;main.c: 153: _delay((unsigned long)((40)*(8000000/4000.0)));
 10012  00F2E0  0E68               	movlw	104
 10013  00F2E2  6E41               	movwf	??_ingreso_numero& (0+255),c
 10014  00F2E4  0EE4               	movlw	228
 10015  00F2E6                     u7117:
 10016  00F2E6  2EE8               	decfsz	wreg,f,c
 10017  00F2E8  D7FE               	bra	u7117
 10018  00F2EA  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10019  00F2EC  D7FC               	bra	u7117
 10020  00F2EE  D000               	nop2	
 10021  00F2F0                     l212:
 10022  00F2F0  AA80               	btfss	3968,5,c	;volatile
 10023  00F2F2  D002               	goto	u5090
 10024  00F2F4  B089               	btfsc	3977,0,c	;volatile
 10025  00F2F6  D7F4               	goto	l213
 10026  00F2F8                     u5090:
 10027                           
 10028                           ;main.c: 154: }
 10029                           ;main.c: 155: }
 10030                           ;main.c: 156: if (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
 10031  00F2F8  BE80               	btfsc	3968,7,c	;volatile
 10032  00F2FA  A089               	btfss	3977,0,c	;volatile
 10033  00F2FC  D01A               	goto	u5130
 10034                           
 10035                           ;main.c: 157: key = 2;
 10036  00F2FE  0E02               	movlw	2
 10037  00F300  0100               	movlb	0	; () banked
 10038  00F302  6FB4               	movwf	_key& (0+255),b
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;main.c: 158: guarda_numero_ingresado(key);
 10042  00F304  0100               	movlb	0	; () banked
 10043  00F306  51B4               	movf	_key& (0+255),w,b
 10044  00F308  6E41               	movwf	??_ingreso_numero& (0+255),c
 10045  00F30A  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10046  00F30C  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10047  00F310  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10048  00F314  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10049                           
 10050                           ;main.c: 159: while (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
 10051  00F318  D008               	goto	l218
 10052  00F31A                     
 10053                           ;main.c: 160: _delay((unsigned long)((40)*(8000000/4000.0)));
 10054  00F31A  0E68               	movlw	104
 10055  00F31C  6E41               	movwf	??_ingreso_numero& (0+255),c
 10056  00F31E  0EE4               	movlw	228
 10057  00F320                     u7127:
 10058  00F320  2EE8               	decfsz	wreg,f,c
 10059  00F322  D7FE               	bra	u7127
 10060  00F324  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10061  00F326  D7FC               	bra	u7127
 10062  00F328  D000               	nop2	
 10063  00F32A                     l218:
 10064  00F32A  AE80               	btfss	3968,7,c	;volatile
 10065  00F32C  D002               	goto	u5130
 10066  00F32E  B089               	btfsc	3977,0,c	;volatile
 10067  00F330  D7F4               	goto	l219
 10068  00F332                     u5130:
 10069                           
 10070                           ;main.c: 161: }
 10071                           ;main.c: 162: }
 10072                           ;main.c: 163: if (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
 10073  00F332  BC80               	btfsc	3968,6,c	;volatile
 10074  00F334  A089               	btfss	3977,0,c	;volatile
 10075  00F336  D01A               	goto	u5170
 10076                           
 10077                           ;main.c: 164: key = 3;
 10078  00F338  0E03               	movlw	3
 10079  00F33A  0100               	movlb	0	; () banked
 10080  00F33C  6FB4               	movwf	_key& (0+255),b
 10081                           
 10082                           ; BSR set to: 0
 10083                           ;main.c: 165: guarda_numero_ingresado(key);
 10084  00F33E  0100               	movlb	0	; () banked
 10085  00F340  51B4               	movf	_key& (0+255),w,b
 10086  00F342  6E41               	movwf	??_ingreso_numero& (0+255),c
 10087  00F344  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10088  00F346  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10089  00F34A  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10090  00F34E  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10091                           
 10092                           ;main.c: 166: while (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
 10093  00F352  D008               	goto	l224
 10094  00F354                     
 10095                           ;main.c: 167: _delay((unsigned long)((40)*(8000000/4000.0)));
 10096  00F354  0E68               	movlw	104
 10097  00F356  6E41               	movwf	??_ingreso_numero& (0+255),c
 10098  00F358  0EE4               	movlw	228
 10099  00F35A                     u7137:
 10100  00F35A  2EE8               	decfsz	wreg,f,c
 10101  00F35C  D7FE               	bra	u7137
 10102  00F35E  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10103  00F360  D7FC               	bra	u7137
 10104  00F362  D000               	nop2	
 10105  00F364                     l224:
 10106  00F364  AC80               	btfss	3968,6,c	;volatile
 10107  00F366  D002               	goto	u5170
 10108  00F368  B089               	btfsc	3977,0,c	;volatile
 10109  00F36A  D7F4               	goto	l225
 10110  00F36C                     u5170:
 10111                           
 10112                           ;main.c: 168: }
 10113                           ;main.c: 169: }
 10114                           ;main.c: 170: }
 10115                           ;main.c: 171: LATAbits.LATA0 = 0;
 10116  00F36C  9089               	bcf	3977,0,c	;volatile
 10117                           
 10118                           ;main.c: 172: LATAbits.LATA1 = 1;
 10119  00F36E  8289               	bsf	3977,1,c	;volatile
 10120                           
 10121                           ;main.c: 173: LATAbits.LATA2 = 0;
 10122  00F370  9489               	bcf	3977,2,c	;volatile
 10123                           
 10124                           ;main.c: 174: LATAbits.LATA3 = 0;
 10125  00F372  9689               	bcf	3977,3,c	;volatile
 10126                           
 10127                           ;main.c: 175: {
 10128                           ;main.c: 176: if (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
 10129  00F374  BA80               	btfsc	3968,5,c	;volatile
 10130  00F376  A289               	btfss	3977,1,c	;volatile
 10131  00F378  D01A               	goto	u5210
 10132                           
 10133                           ;main.c: 177: key = 4;
 10134  00F37A  0E04               	movlw	4
 10135  00F37C  0100               	movlb	0	; () banked
 10136  00F37E  6FB4               	movwf	_key& (0+255),b
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;main.c: 178: guarda_numero_ingresado(key);
 10140  00F380  0100               	movlb	0	; () banked
 10141  00F382  51B4               	movf	_key& (0+255),w,b
 10142  00F384  6E41               	movwf	??_ingreso_numero& (0+255),c
 10143  00F386  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10144  00F388  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10145  00F38C  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10146  00F390  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10147                           
 10148                           ;main.c: 179: while (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
 10149  00F394  D008               	goto	l230
 10150  00F396                     
 10151                           ;main.c: 180: _delay((unsigned long)((40)*(8000000/4000.0)));
 10152  00F396  0E68               	movlw	104
 10153  00F398  6E41               	movwf	??_ingreso_numero& (0+255),c
 10154  00F39A  0EE4               	movlw	228
 10155  00F39C                     u7147:
 10156  00F39C  2EE8               	decfsz	wreg,f,c
 10157  00F39E  D7FE               	bra	u7147
 10158  00F3A0  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10159  00F3A2  D7FC               	bra	u7147
 10160  00F3A4  D000               	nop2	
 10161  00F3A6                     l230:
 10162  00F3A6  AA80               	btfss	3968,5,c	;volatile
 10163  00F3A8  D002               	goto	u5210
 10164  00F3AA  B289               	btfsc	3977,1,c	;volatile
 10165  00F3AC  D7F4               	goto	l231
 10166  00F3AE                     u5210:
 10167                           
 10168                           ;main.c: 181: }
 10169                           ;main.c: 182: }
 10170                           ;main.c: 183: if (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
 10171  00F3AE  BE80               	btfsc	3968,7,c	;volatile
 10172  00F3B0  A289               	btfss	3977,1,c	;volatile
 10173  00F3B2  D01A               	goto	u5250
 10174                           
 10175                           ;main.c: 184: key = 5;
 10176  00F3B4  0E05               	movlw	5
 10177  00F3B6  0100               	movlb	0	; () banked
 10178  00F3B8  6FB4               	movwf	_key& (0+255),b
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;main.c: 185: guarda_numero_ingresado(key);
 10182  00F3BA  0100               	movlb	0	; () banked
 10183  00F3BC  51B4               	movf	_key& (0+255),w,b
 10184  00F3BE  6E41               	movwf	??_ingreso_numero& (0+255),c
 10185  00F3C0  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10186  00F3C2  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10187  00F3C6  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10188  00F3CA  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10189                           
 10190                           ;main.c: 186: while (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
 10191  00F3CE  D008               	goto	l236
 10192  00F3D0                     
 10193                           ;main.c: 187: _delay((unsigned long)((40)*(8000000/4000.0)));
 10194  00F3D0  0E68               	movlw	104
 10195  00F3D2  6E41               	movwf	??_ingreso_numero& (0+255),c
 10196  00F3D4  0EE4               	movlw	228
 10197  00F3D6                     u7157:
 10198  00F3D6  2EE8               	decfsz	wreg,f,c
 10199  00F3D8  D7FE               	bra	u7157
 10200  00F3DA  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10201  00F3DC  D7FC               	bra	u7157
 10202  00F3DE  D000               	nop2	
 10203  00F3E0                     l236:
 10204  00F3E0  AE80               	btfss	3968,7,c	;volatile
 10205  00F3E2  D002               	goto	u5250
 10206  00F3E4  B289               	btfsc	3977,1,c	;volatile
 10207  00F3E6  D7F4               	goto	l237
 10208  00F3E8                     u5250:
 10209                           
 10210                           ;main.c: 188: }
 10211                           ;main.c: 189: }
 10212                           ;main.c: 190: if (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
 10213  00F3E8  BC80               	btfsc	3968,6,c	;volatile
 10214  00F3EA  A289               	btfss	3977,1,c	;volatile
 10215  00F3EC  D01A               	goto	u5290
 10216                           
 10217                           ;main.c: 191: key = 6;
 10218  00F3EE  0E06               	movlw	6
 10219  00F3F0  0100               	movlb	0	; () banked
 10220  00F3F2  6FB4               	movwf	_key& (0+255),b
 10221                           
 10222                           ; BSR set to: 0
 10223                           ;main.c: 192: guarda_numero_ingresado(key);
 10224  00F3F4  0100               	movlb	0	; () banked
 10225  00F3F6  51B4               	movf	_key& (0+255),w,b
 10226  00F3F8  6E41               	movwf	??_ingreso_numero& (0+255),c
 10227  00F3FA  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10228  00F3FC  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10229  00F400  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10230  00F404  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10231                           
 10232                           ;main.c: 193: while (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
 10233  00F408  D008               	goto	l242
 10234  00F40A                     
 10235                           ;main.c: 194: _delay((unsigned long)((40)*(8000000/4000.0)));
 10236  00F40A  0E68               	movlw	104
 10237  00F40C  6E41               	movwf	??_ingreso_numero& (0+255),c
 10238  00F40E  0EE4               	movlw	228
 10239  00F410                     u7167:
 10240  00F410  2EE8               	decfsz	wreg,f,c
 10241  00F412  D7FE               	bra	u7167
 10242  00F414  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10243  00F416  D7FC               	bra	u7167
 10244  00F418  D000               	nop2	
 10245  00F41A                     l242:
 10246  00F41A  AC80               	btfss	3968,6,c	;volatile
 10247  00F41C  D002               	goto	u5290
 10248  00F41E  B289               	btfsc	3977,1,c	;volatile
 10249  00F420  D7F4               	goto	l243
 10250  00F422                     u5290:
 10251                           
 10252                           ;main.c: 195: }
 10253                           ;main.c: 196: }
 10254                           ;main.c: 197: }
 10255                           ;main.c: 198: LATAbits.LATA0 = 0;
 10256  00F422  9089               	bcf	3977,0,c	;volatile
 10257                           
 10258                           ;main.c: 199: LATAbits.LATA1 = 0;
 10259  00F424  9289               	bcf	3977,1,c	;volatile
 10260                           
 10261                           ;main.c: 200: LATAbits.LATA2 = 1;
 10262  00F426  8489               	bsf	3977,2,c	;volatile
 10263                           
 10264                           ;main.c: 201: LATAbits.LATA3 = 0;
 10265  00F428  9689               	bcf	3977,3,c	;volatile
 10266                           
 10267                           ;main.c: 202: {
 10268                           ;main.c: 203: if (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
 10269  00F42A  BA80               	btfsc	3968,5,c	;volatile
 10270  00F42C  A489               	btfss	3977,2,c	;volatile
 10271  00F42E  D01A               	goto	u5330
 10272                           
 10273                           ;main.c: 204: key = 7;
 10274  00F430  0E07               	movlw	7
 10275  00F432  0100               	movlb	0	; () banked
 10276  00F434  6FB4               	movwf	_key& (0+255),b
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;main.c: 205: guarda_numero_ingresado(key);
 10280  00F436  0100               	movlb	0	; () banked
 10281  00F438  51B4               	movf	_key& (0+255),w,b
 10282  00F43A  6E41               	movwf	??_ingreso_numero& (0+255),c
 10283  00F43C  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10284  00F43E  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10285  00F442  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10286  00F446  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10287                           
 10288                           ;main.c: 206: while (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
 10289  00F44A  D008               	goto	l248
 10290  00F44C                     
 10291                           ;main.c: 207: _delay((unsigned long)((40)*(8000000/4000.0)));
 10292  00F44C  0E68               	movlw	104
 10293  00F44E  6E41               	movwf	??_ingreso_numero& (0+255),c
 10294  00F450  0EE4               	movlw	228
 10295  00F452                     u7177:
 10296  00F452  2EE8               	decfsz	wreg,f,c
 10297  00F454  D7FE               	bra	u7177
 10298  00F456  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10299  00F458  D7FC               	bra	u7177
 10300  00F45A  D000               	nop2	
 10301  00F45C                     l248:
 10302  00F45C  AA80               	btfss	3968,5,c	;volatile
 10303  00F45E  D002               	goto	u5330
 10304  00F460  B489               	btfsc	3977,2,c	;volatile
 10305  00F462  D7F4               	goto	l249
 10306  00F464                     u5330:
 10307                           
 10308                           ;main.c: 208: }
 10309                           ;main.c: 209: }
 10310                           ;main.c: 210: if (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
 10311  00F464  BE80               	btfsc	3968,7,c	;volatile
 10312  00F466  A489               	btfss	3977,2,c	;volatile
 10313  00F468  D01A               	goto	u5370
 10314                           
 10315                           ;main.c: 211: key = 8;
 10316  00F46A  0E08               	movlw	8
 10317  00F46C  0100               	movlb	0	; () banked
 10318  00F46E  6FB4               	movwf	_key& (0+255),b
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;main.c: 212: guarda_numero_ingresado(key);
 10322  00F470  0100               	movlb	0	; () banked
 10323  00F472  51B4               	movf	_key& (0+255),w,b
 10324  00F474  6E41               	movwf	??_ingreso_numero& (0+255),c
 10325  00F476  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10326  00F478  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10327  00F47C  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10328  00F480  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10329                           
 10330                           ;main.c: 213: while (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
 10331  00F484  D008               	goto	l254
 10332  00F486                     
 10333                           ;main.c: 214: _delay((unsigned long)((40)*(8000000/4000.0)));
 10334  00F486  0E68               	movlw	104
 10335  00F488  6E41               	movwf	??_ingreso_numero& (0+255),c
 10336  00F48A  0EE4               	movlw	228
 10337  00F48C                     u7187:
 10338  00F48C  2EE8               	decfsz	wreg,f,c
 10339  00F48E  D7FE               	bra	u7187
 10340  00F490  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10341  00F492  D7FC               	bra	u7187
 10342  00F494  D000               	nop2	
 10343  00F496                     l254:
 10344  00F496  AE80               	btfss	3968,7,c	;volatile
 10345  00F498  D002               	goto	u5370
 10346  00F49A  B489               	btfsc	3977,2,c	;volatile
 10347  00F49C  D7F4               	goto	l255
 10348  00F49E                     u5370:
 10349                           
 10350                           ;main.c: 215: }
 10351                           ;main.c: 216: }
 10352                           ;main.c: 217: if (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
 10353  00F49E  BC80               	btfsc	3968,6,c	;volatile
 10354  00F4A0  A489               	btfss	3977,2,c	;volatile
 10355  00F4A2  D01A               	goto	u5410
 10356                           
 10357                           ;main.c: 218: key = 9;
 10358  00F4A4  0E09               	movlw	9
 10359  00F4A6  0100               	movlb	0	; () banked
 10360  00F4A8  6FB4               	movwf	_key& (0+255),b
 10361                           
 10362                           ; BSR set to: 0
 10363                           ;main.c: 219: guarda_numero_ingresado(key);
 10364  00F4AA  0100               	movlb	0	; () banked
 10365  00F4AC  51B4               	movf	_key& (0+255),w,b
 10366  00F4AE  6E41               	movwf	??_ingreso_numero& (0+255),c
 10367  00F4B0  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10368  00F4B2  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10369  00F4B6  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10370  00F4BA  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10371                           
 10372                           ;main.c: 220: while (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
 10373  00F4BE  D008               	goto	l260
 10374  00F4C0                     
 10375                           ;main.c: 221: _delay((unsigned long)((40)*(8000000/4000.0)));
 10376  00F4C0  0E68               	movlw	104
 10377  00F4C2  6E41               	movwf	??_ingreso_numero& (0+255),c
 10378  00F4C4  0EE4               	movlw	228
 10379  00F4C6                     u7197:
 10380  00F4C6  2EE8               	decfsz	wreg,f,c
 10381  00F4C8  D7FE               	bra	u7197
 10382  00F4CA  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10383  00F4CC  D7FC               	bra	u7197
 10384  00F4CE  D000               	nop2	
 10385  00F4D0                     l260:
 10386  00F4D0  AC80               	btfss	3968,6,c	;volatile
 10387  00F4D2  D002               	goto	u5410
 10388  00F4D4  B489               	btfsc	3977,2,c	;volatile
 10389  00F4D6  D7F4               	goto	l261
 10390  00F4D8                     u5410:
 10391                           
 10392                           ;main.c: 222: }
 10393                           ;main.c: 223: }
 10394                           ;main.c: 224: }
 10395                           ;main.c: 225: LATAbits.LATA0 = 0;
 10396  00F4D8  9089               	bcf	3977,0,c	;volatile
 10397                           
 10398                           ;main.c: 226: LATAbits.LATA1 = 0;
 10399  00F4DA  9289               	bcf	3977,1,c	;volatile
 10400                           
 10401                           ;main.c: 227: LATAbits.LATA2 = 0;
 10402  00F4DC  9489               	bcf	3977,2,c	;volatile
 10403                           
 10404                           ;main.c: 228: LATAbits.LATA3 = 1;
 10405  00F4DE  8689               	bsf	3977,3,c	;volatile
 10406                           
 10407                           ;main.c: 230: if (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
 10408  00F4E0  AE80               	btfss	3968,7,c	;volatile
 10409  00F4E2  0012               	return	
 10410  00F4E4  A689               	btfss	3977,3,c	;volatile
 10411  00F4E6  0012               	return	
 10412                           
 10413                           ;main.c: 231: key = 0;
 10414  00F4E8  0E00               	movlw	0
 10415  00F4EA  0100               	movlb	0	; () banked
 10416  00F4EC  6FB4               	movwf	_key& (0+255),b
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;main.c: 232: guarda_numero_ingresado(key);
 10420  00F4EE  0100               	movlb	0	; () banked
 10421  00F4F0  51B4               	movf	_key& (0+255),w,b
 10422  00F4F2  6E41               	movwf	??_ingreso_numero& (0+255),c
 10423  00F4F4  6A42               	clrf	(??_ingreso_numero+1)& (0+255),c
 10424  00F4F6  C041  F03F         	movff	??_ingreso_numero,guarda_numero_ingresado@num
 10425  00F4FA  C042  F040         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
 10426  00F4FE  EC43  F06B         	call	_guarda_numero_ingresado	;wreg free
 10427                           
 10428                           ;main.c: 233: while (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
 10429  00F502  D008               	goto	l266
 10430  00F504                     
 10431                           ;main.c: 234: _delay((unsigned long)((40)*(8000000/4000.0)));
 10432  00F504  0E68               	movlw	104
 10433  00F506  6E41               	movwf	??_ingreso_numero& (0+255),c
 10434  00F508  0EE4               	movlw	228
 10435  00F50A                     u7207:
 10436  00F50A  2EE8               	decfsz	wreg,f,c
 10437  00F50C  D7FE               	bra	u7207
 10438  00F50E  2E41               	decfsz	??_ingreso_numero& (0+255),f,c
 10439  00F510  D7FC               	bra	u7207
 10440  00F512  D000               	nop2	
 10441  00F514                     l266:
 10442  00F514  AE80               	btfss	3968,7,c	;volatile
 10443  00F516  0012               	return	
 10444  00F518  A689               	btfss	3977,3,c	;volatile
 10445  00F51A  0012               	return	
 10446  00F51C  D7F3               	goto	l267
 10447  00F51E                     __end_of_ingreso_numero:
 10448                           	opt stack 0
 10449                           tblptru	equ	0xFF8
 10450                           tblptrh	equ	0xFF7
 10451                           tblptrl	equ	0xFF6
 10452                           tablat	equ	0xFF5
 10453                           prodh	equ	0xFF4
 10454                           prodl	equ	0xFF3
 10455                           intcon	equ	0xFF2
 10456                           postinc0	equ	0xFEE
 10457                           wreg	equ	0xFE8
 10458                           postinc1	equ	0xFE6
 10459                           postdec1	equ	0xFE5
 10460                           fsr1h	equ	0xFE2
 10461                           fsr1l	equ	0xFE1
 10462                           indf2	equ	0xFDF
 10463                           postinc2	equ	0xFDE
 10464                           postdec2	equ	0xFDD
 10465                           fsr2h	equ	0xFDA
 10466                           fsr2l	equ	0xFD9
 10467                           status	equ	0xFD8
 10468                           
 10469 ;; *************** function _guarda_numero_ingresado *****************
 10470 ;; Defined at:
 10471 ;;		line 130 in file "main.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;  num             2   62[COMRAM] PTR int 
 10474 ;;		 -> RAM(3775), 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      void 
 10479 ;; Registers used:
 10480 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10490 ;;Total ram usage:        2 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    5
 10493 ;; This function calls:
 10494 ;;		_lcd_gotoxy
 10495 ;;		_lcd_putrs
 10496 ;;		_sprintf
 10497 ;; This function is called by:
 10498 ;;		_ingreso_numero
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text48
 10503  00D686                     __ptext48:
 10504                           	opt stack 0
 10505  00D686                     _guarda_numero_ingresado:
 10506                           	opt stack 18
 10507                           
 10508                           ;main.c: 131: if (motivo_ingreso_de_numeros == 0) {
 10509                           
 10510                           ;incstack = 0
 10511  00D686  0100               	movlb	0	; () banked
 10512  00D688  51A2               	movf	_motivo_ingreso_de_numeros& (0+255),w,b
 10513  00D68A  0100               	movlb	0	; () banked
 10514  00D68C  11A3               	iorwf	(_motivo_ingreso_de_numeros+1)& (0+255),w,b
 10515  00D68E  A4D8               	btfss	status,2,c
 10516  00D690  D02D               	goto	l206
 10517                           
 10518                           ; BSR set to: 0
 10519                           ;main.c: 132: array_contrasenia_ingresada[numeros_ingresados] = num;
 10520  00D692  90D8               	bcf	status,0,c
 10521  00D694  0100               	movlb	0	; () banked
 10522  00D696  35A4               	rlcf	_numeros_ingresados& (0+255),w,b
 10523  00D698  6ED9               	movwf	fsr2l,c
 10524  00D69A  0100               	movlb	0	; () banked
 10525  00D69C  35A5               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
 10526  00D69E  6EDA               	movwf	fsr2h,c
 10527  00D6A0  0E60               	movlw	low _array_contrasenia_ingresada
 10528  00D6A2  26D9               	addwf	fsr2l,f,c
 10529  00D6A4  0E00               	movlw	high _array_contrasenia_ingresada
 10530  00D6A6  22DA               	addwfc	fsr2h,f,c
 10531  00D6A8  C03F  FFDE         	movff	guarda_numero_ingresado@num,postinc2
 10532  00D6AC  C040  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
 10533                           
 10534                           ; BSR set to: 0
 10535                           ;main.c: 133: lcd_gotoxy(numeros_ingresados + 1, 2);
 10536  00D6B0  0E02               	movlw	2
 10537  00D6B2  6E05               	movwf	lcd_gotoxy@y,c
 10538  00D6B4  0100               	movlb	0	; () banked
 10539  00D6B6  29A4               	incf	_numeros_ingresados& (0+255),w,b
 10540  00D6B8  ECF9  F066         	call	_lcd_gotoxy
 10541                           
 10542                           ;main.c: 134: sprintf(buffer2, "%01u", num);
 10543  00D6BC  0E14               	movlw	low _buffer2
 10544  00D6BE  6E22               	movwf	sprintf@sp,c
 10545  00D6C0  0E01               	movlw	high _buffer2
 10546  00D6C2  6E23               	movwf	sprintf@sp+1,c
 10547  00D6C4  0EF1               	movlw	low STR_14
 10548  00D6C6  6E24               	movwf	sprintf@f,c
 10549  00D6C8  0EFF               	movlw	high STR_14
 10550  00D6CA  6E25               	movwf	sprintf@f+1,c
 10551  00D6CC  C03F  F026         	movff	guarda_numero_ingresado@num,?_sprintf+4
 10552  00D6D0  C040  F027         	movff	guarda_numero_ingresado@num+1,?_sprintf+5
 10553  00D6D4  EC4F  F07D         	call	_sprintf	;wreg free
 10554                           
 10555                           ;main.c: 135: lcd_putrs(buffer2);
 10556  00D6D8  0E14               	movlw	low _buffer2
 10557  00D6DA  6E09               	movwf	lcd_putrs@ptr,c
 10558  00D6DC  0E01               	movlw	high _buffer2
 10559  00D6DE  6E0A               	movwf	lcd_putrs@ptr+1,c
 10560  00D6E0  EC69  F068         	call	_lcd_putrs	;wreg free
 10561                           
 10562                           ;main.c: 136: numeros_ingresados++;
 10563  00D6E4  0100               	movlb	0	; () banked
 10564  00D6E6  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
 10565  00D6E8  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
 10566                           
 10567                           ;main.c: 137: } else {
 10568  00D6EA  0012               	return	
 10569  00D6EC                     l206:
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;main.c: 138: numeros_para_fecha[numeros_ingresados] = num;
 10573                           
 10574                           ; BSR set to: 0
 10575  00D6EC  90D8               	bcf	status,0,c
 10576  00D6EE  0100               	movlb	0	; () banked
 10577  00D6F0  35A4               	rlcf	_numeros_ingresados& (0+255),w,b
 10578  00D6F2  6ED9               	movwf	fsr2l,c
 10579  00D6F4  0100               	movlb	0	; () banked
 10580  00D6F6  35A5               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
 10581  00D6F8  6EDA               	movwf	fsr2h,c
 10582  00D6FA  0E80               	movlw	low _numeros_para_fecha
 10583  00D6FC  26D9               	addwf	fsr2l,f,c
 10584  00D6FE  0E00               	movlw	high _numeros_para_fecha
 10585  00D700  22DA               	addwfc	fsr2h,f,c
 10586  00D702  C03F  FFDE         	movff	guarda_numero_ingresado@num,postinc2
 10587  00D706  C040  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;main.c: 139: numeros_ingresados++;
 10591  00D70A  0100               	movlb	0	; () banked
 10592  00D70C  4BA4               	infsnz	_numeros_ingresados& (0+255),f,b
 10593  00D70E  2BA5               	incf	(_numeros_ingresados+1)& (0+255),f,b
 10594  00D710  0012               	return	
 10595  00D712                     __end_of_guarda_numero_ingresado:
 10596                           	opt stack 0
 10597                           tblptru	equ	0xFF8
 10598                           tblptrh	equ	0xFF7
 10599                           tblptrl	equ	0xFF6
 10600                           tablat	equ	0xFF5
 10601                           prodh	equ	0xFF4
 10602                           prodl	equ	0xFF3
 10603                           intcon	equ	0xFF2
 10604                           postinc0	equ	0xFEE
 10605                           wreg	equ	0xFE8
 10606                           postinc1	equ	0xFE6
 10607                           postdec1	equ	0xFE5
 10608                           fsr1h	equ	0xFE2
 10609                           fsr1l	equ	0xFE1
 10610                           indf2	equ	0xFDF
 10611                           postinc2	equ	0xFDE
 10612                           postdec2	equ	0xFDD
 10613                           fsr2h	equ	0xFDA
 10614                           fsr2l	equ	0xFD9
 10615                           status	equ	0xFD8
 10616                           
 10617 ;; *************** function _generar_reporte *****************
 10618 ;; Defined at:
 10619 ;;		line 303 in file "main.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;		None
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;		None
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      void 
 10626 ;; Registers used:
 10627 ;;		None
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10637 ;;Total ram usage:        0 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_activar_alarma
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text49
 10647  00CEB4                     __ptext49:
 10648                           	opt stack 0
 10649  00CEB4                     _generar_reporte:
 10650                           	opt stack 24
 10651                           
 10652                           ;main.c: 304: dia_ultimo_reporte = dia;
 10653                           
 10654                           ; BSR set to: 0
 10655                           ;incstack = 0
 10656  00CEB4  C0CB  F09C         	movff	_dia,_dia_ultimo_reporte
 10657  00CEB8  C0CC  F09D         	movff	_dia+1,_dia_ultimo_reporte+1
 10658                           
 10659                           ;main.c: 305: mes_ultimo_reporte = mes;
 10660  00CEBC  C0CF  F09A         	movff	_mes,_mes_ultimo_reporte
 10661  00CEC0  C0D0  F09B         	movff	_mes+1,_mes_ultimo_reporte+1
 10662                           
 10663                           ;main.c: 306: anio_ultimo_reporte = anio;
 10664  00CEC4  C0D1  F098         	movff	_anio,_anio_ultimo_reporte
 10665  00CEC8  C0D2  F099         	movff	_anio+1,_anio_ultimo_reporte+1
 10666                           
 10667                           ;main.c: 307: hora_ultimo_reporte = hora;
 10668  00CECC  C0C9  F096         	movff	_hora,_hora_ultimo_reporte
 10669  00CED0  C0CA  F097         	movff	_hora+1,_hora_ultimo_reporte+1
 10670                           
 10671                           ;main.c: 308: minutos_ultimo_reporte = minuto;
 10672  00CED4  C0C7  F094         	movff	_minuto,_minutos_ultimo_reporte
 10673  00CED8  C0C8  F095         	movff	_minuto+1,_minutos_ultimo_reporte+1
 10674                           
 10675                           ;main.c: 309: segundos_ultimo_reporte = segundo;
 10676  00CEDC  C0A6  F092         	movff	_segundo,_segundos_ultimo_reporte
 10677  00CEE0  C0A7  F093         	movff	_segundo+1,_segundos_ultimo_reporte+1
 10678  00CEE4  0012               	return		;funcret
 10679  00CEE6                     __end_of_generar_reporte:
 10680                           	opt stack 0
 10681                           tblptru	equ	0xFF8
 10682                           tblptrh	equ	0xFF7
 10683                           tblptrl	equ	0xFF6
 10684                           tablat	equ	0xFF5
 10685                           prodh	equ	0xFF4
 10686                           prodl	equ	0xFF3
 10687                           intcon	equ	0xFF2
 10688                           postinc0	equ	0xFEE
 10689                           wreg	equ	0xFE8
 10690                           postinc1	equ	0xFE6
 10691                           postdec1	equ	0xFE5
 10692                           fsr1h	equ	0xFE2
 10693                           fsr1l	equ	0xFE1
 10694                           indf2	equ	0xFDF
 10695                           postinc2	equ	0xFDE
 10696                           postdec2	equ	0xFDD
 10697                           fsr2h	equ	0xFDA
 10698                           fsr2l	equ	0xFD9
 10699                           status	equ	0xFD8
 10700                           
 10701 ;; *************** function _selecciona_opcion_fecha_hora *****************
 10702 ;; Defined at:
 10703 ;;		line 455 in file "main.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;		None
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;		None
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10719 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10721 ;;Total ram usage:        1 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; Hardware stack levels required when called:    5
 10724 ;; This function calls:
 10725 ;;		_lcd_gotoxy
 10726 ;;		_lcd_putrs
 10727 ;; This function is called by:
 10728 ;;		_ir_a_pantalla_edicion
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	text50
 10733  00D600                     __ptext50:
 10734                           	opt stack 0
 10735  00D600                     _selecciona_opcion_fecha_hora:
 10736                           	opt stack 21
 10737                           
 10738                           ;main.c: 457: if (boton_seleccionar == 2) {
 10739                           
 10740                           ;incstack = 0
 10741  00D600  0E02               	movlw	2
 10742  00D602  0100               	movlb	0	; () banked
 10743  00D604  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 10744  00D606  0100               	movlb	0	; () banked
 10745  00D608  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 10746  00D60A  A4D8               	btfss	status,2,c
 10747  00D60C  D016               	goto	l348
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;main.c: 458: lcd_gotoxy(1, 1);
 10751  00D60E  0E01               	movlw	1
 10752  00D610  6E05               	movwf	lcd_gotoxy@y,c
 10753  00D612  0E01               	movlw	1
 10754  00D614  ECF9  F066         	call	_lcd_gotoxy
 10755                           
 10756                           ;main.c: 459: lcd_putrs("Edt Date");
 10757  00D618  0E50               	movlw	low STR_32
 10758  00D61A  6E09               	movwf	lcd_putrs@ptr,c
 10759  00D61C  0EFF               	movlw	high STR_32
 10760  00D61E  6E0A               	movwf	lcd_putrs@ptr+1,c
 10761  00D620  EC69  F068         	call	_lcd_putrs	;wreg free
 10762                           
 10763                           ;main.c: 460: lcd_gotoxy(1, 2);
 10764  00D624  0E02               	movlw	2
 10765  00D626  6E05               	movwf	lcd_gotoxy@y,c
 10766  00D628  0E01               	movlw	1
 10767  00D62A  ECF9  F066         	call	_lcd_gotoxy
 10768                           
 10769                           ;main.c: 461: lcd_putrs("Press A ");
 10770  00D62E  0E2C               	movlw	low STR_33
 10771  00D630  6E09               	movwf	lcd_putrs@ptr,c
 10772  00D632  0EFF               	movlw	high STR_33
 10773  00D634  6E0A               	movwf	lcd_putrs@ptr+1,c
 10774  00D636  EC69  F068         	call	_lcd_putrs	;wreg free
 10775  00D63A                     l348:
 10776                           
 10777                           ;main.c: 462: }
 10778                           ;main.c: 463: if (boton_seleccionar == 3) {
 10779  00D63A  0E03               	movlw	3
 10780  00D63C  0100               	movlb	0	; () banked
 10781  00D63E  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 10782  00D640  0100               	movlb	0	; () banked
 10783  00D642  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 10784  00D644  A4D8               	btfss	status,2,c
 10785  00D646  D016               	goto	l349
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;main.c: 464: lcd_gotoxy(1, 1);
 10789  00D648  0E01               	movlw	1
 10790  00D64A  6E05               	movwf	lcd_gotoxy@y,c
 10791  00D64C  0E01               	movlw	1
 10792  00D64E  ECF9  F066         	call	_lcd_gotoxy
 10793                           
 10794                           ;main.c: 465: lcd_putrs("Edt Hour");
 10795  00D652  0E62               	movlw	low STR_34
 10796  00D654  6E09               	movwf	lcd_putrs@ptr,c
 10797  00D656  0EFF               	movlw	high STR_34
 10798  00D658  6E0A               	movwf	lcd_putrs@ptr+1,c
 10799  00D65A  EC69  F068         	call	_lcd_putrs	;wreg free
 10800                           
 10801                           ;main.c: 466: lcd_gotoxy(1, 2);
 10802  00D65E  0E02               	movlw	2
 10803  00D660  6E05               	movwf	lcd_gotoxy@y,c
 10804  00D662  0E01               	movlw	1
 10805  00D664  ECF9  F066         	call	_lcd_gotoxy
 10806                           
 10807                           ;main.c: 467: lcd_putrs("Press A ");
 10808  00D668  0E2C               	movlw	low STR_33
 10809  00D66A  6E09               	movwf	lcd_putrs@ptr,c
 10810  00D66C  0EFF               	movlw	high STR_33
 10811  00D66E  6E0A               	movwf	lcd_putrs@ptr+1,c
 10812  00D670  EC69  F068         	call	_lcd_putrs	;wreg free
 10813  00D674                     l349:
 10814                           
 10815                           ;main.c: 468: }
 10816                           ;main.c: 469: _delay((unsigned long)((60)*(8000000/4000.0)));
 10817  00D674  0E9C               	movlw	156
 10818  00D676  6E0B               	movwf	??_selecciona_opcion_fecha_hora& (0+255),c
 10819  00D678  0ED7               	movlw	215
 10820  00D67A                     u7217:
 10821  00D67A  2EE8               	decfsz	wreg,f,c
 10822  00D67C  D7FE               	bra	u7217
 10823  00D67E  2E0B               	decfsz	??_selecciona_opcion_fecha_hora& (0+255),f,c
 10824  00D680  D7FC               	bra	u7217
 10825  00D682  F000               	nop	
 10826  00D684  0012               	return		;funcret
 10827  00D686                     __end_of_selecciona_opcion_fecha_hora:
 10828                           	opt stack 0
 10829                           tblptru	equ	0xFF8
 10830                           tblptrh	equ	0xFF7
 10831                           tblptrl	equ	0xFF6
 10832                           tablat	equ	0xFF5
 10833                           prodh	equ	0xFF4
 10834                           prodl	equ	0xFF3
 10835                           intcon	equ	0xFF2
 10836                           postinc0	equ	0xFEE
 10837                           wreg	equ	0xFE8
 10838                           postinc1	equ	0xFE6
 10839                           postdec1	equ	0xFE5
 10840                           fsr1h	equ	0xFE2
 10841                           fsr1l	equ	0xFE1
 10842                           indf2	equ	0xFDF
 10843                           postinc2	equ	0xFDE
 10844                           postdec2	equ	0xFDD
 10845                           fsr2h	equ	0xFDA
 10846                           fsr2l	equ	0xFD9
 10847                           status	equ	0xFD8
 10848                           
 10849 ;; *************** function _imprimir_reporte *****************
 10850 ;; Defined at:
 10851 ;;		line 393 in file "main.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;		None
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;		None
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10869 ;;Total ram usage:        0 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:    5
 10872 ;; This function calls:
 10873 ;;		_cambiar_opcion
 10874 ;;		_lcd_gotoxy
 10875 ;;		_lcd_putrs
 10876 ;;		_sprintf
 10877 ;; This function is called by:
 10878 ;;		_ir_a_pantalla_edicion
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text51
 10883  00DB0A                     __ptext51:
 10884                           	opt stack 0
 10885  00DB0A                     _imprimir_reporte:
 10886                           	opt stack 21
 10887                           
 10888                           ;main.c: 394: sprintf(buffer3, "Report  %02i/%02i/%02i", dia_ultimo_reporte, mes_ultimo_
      +                          reporte, anio_ultimo_reporte);
 10889                           
 10890                           ;incstack = 0
 10891  00DB0A  0E00               	movlw	low _buffer3
 10892  00DB0C  6E22               	movwf	sprintf@sp,c
 10893  00DB0E  0E01               	movlw	high _buffer3
 10894  00DB10  6E23               	movwf	sprintf@sp+1,c
 10895  00DB12  0E94               	movlw	low STR_26
 10896  00DB14  6E24               	movwf	sprintf@f,c
 10897  00DB16  0EFE               	movlw	high STR_26
 10898  00DB18  6E25               	movwf	sprintf@f+1,c
 10899  00DB1A  C09C  F026         	movff	_dia_ultimo_reporte,?_sprintf+4
 10900  00DB1E  C09D  F027         	movff	_dia_ultimo_reporte+1,?_sprintf+5
 10901  00DB22  C09A  F028         	movff	_mes_ultimo_reporte,?_sprintf+6
 10902  00DB26  C09B  F029         	movff	_mes_ultimo_reporte+1,?_sprintf+7
 10903  00DB2A  C098  F02A         	movff	_anio_ultimo_reporte,?_sprintf+8
 10904  00DB2E  C099  F02B         	movff	_anio_ultimo_reporte+1,?_sprintf+9
 10905  00DB32  EC4F  F07D         	call	_sprintf	;wreg free
 10906                           
 10907                           ;main.c: 395: lcd_gotoxy(1, 1);
 10908  00DB36  0E01               	movlw	1
 10909  00DB38  6E05               	movwf	lcd_gotoxy@y,c
 10910  00DB3A  0E01               	movlw	1
 10911  00DB3C  ECF9  F066         	call	_lcd_gotoxy
 10912                           
 10913                           ;main.c: 396: lcd_putrs(buffer3);
 10914  00DB40  0E00               	movlw	low _buffer3
 10915  00DB42  6E09               	movwf	lcd_putrs@ptr,c
 10916  00DB44  0E01               	movlw	high _buffer3
 10917  00DB46  6E0A               	movwf	lcd_putrs@ptr+1,c
 10918  00DB48  EC69  F068         	call	_lcd_putrs	;wreg free
 10919                           
 10920                           ;main.c: 398: sprintf(buffer3, "%s %02i:%02i:%02i", causa_reporte, hora_ultimo_reporte, 
      +                          minutos_ultimo_reporte, segundos_ultimo_reporte);
 10921  00DB4C  0E00               	movlw	low _buffer3
 10922  00DB4E  6E22               	movwf	sprintf@sp,c
 10923  00DB50  0E01               	movlw	high _buffer3
 10924  00DB52  6E23               	movwf	sprintf@sp+1,c
 10925  00DB54  0EC0               	movlw	low STR_27
 10926  00DB56  6E24               	movwf	sprintf@f,c
 10927  00DB58  0EFE               	movlw	high STR_27
 10928  00DB5A  6E25               	movwf	sprintf@f+1,c
 10929  00DB5C  C0C5  F026         	movff	_causa_reporte,?_sprintf+4
 10930  00DB60  C0C6  F027         	movff	_causa_reporte+1,?_sprintf+5
 10931  00DB64  C096  F028         	movff	_hora_ultimo_reporte,?_sprintf+6
 10932  00DB68  C097  F029         	movff	_hora_ultimo_reporte+1,?_sprintf+7
 10933  00DB6C  C094  F02A         	movff	_minutos_ultimo_reporte,?_sprintf+8
 10934  00DB70  C095  F02B         	movff	_minutos_ultimo_reporte+1,?_sprintf+9
 10935  00DB74  C092  F02C         	movff	_segundos_ultimo_reporte,?_sprintf+10
 10936  00DB78  C093  F02D         	movff	_segundos_ultimo_reporte+1,?_sprintf+11
 10937  00DB7C  EC4F  F07D         	call	_sprintf	;wreg free
 10938                           
 10939                           ;main.c: 399: lcd_gotoxy(1, 2);
 10940  00DB80  0E02               	movlw	2
 10941  00DB82  6E05               	movwf	lcd_gotoxy@y,c
 10942  00DB84  0E01               	movlw	1
 10943  00DB86  ECF9  F066         	call	_lcd_gotoxy
 10944                           
 10945                           ;main.c: 400: lcd_putrs(buffer3);
 10946  00DB8A  0E00               	movlw	low _buffer3
 10947  00DB8C  6E09               	movwf	lcd_putrs@ptr,c
 10948  00DB8E  0E01               	movlw	high _buffer3
 10949  00DB90  6E0A               	movwf	lcd_putrs@ptr+1,c
 10950  00DB92  EC69  F068         	call	_lcd_putrs	;wreg free
 10951                           
 10952                           ;main.c: 402: while(boton_seleccionar==4){
 10953  00DB96  D002               	goto	l327
 10954  00DB98                     
 10955                           ;main.c: 403: cambiar_opcion();
 10956  00DB98  ECEC  F06C         	call	_cambiar_opcion	;wreg free
 10957  00DB9C                     l327:
 10958  00DB9C  0E04               	movlw	4
 10959  00DB9E  0100               	movlb	0	; () banked
 10960  00DBA0  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 10961  00DBA2  0100               	movlb	0	; () banked
 10962  00DBA4  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 10963  00DBA6  A4D8               	btfss	status,2,c
 10964  00DBA8  0012               	return	
 10965  00DBAA  D7F6               	goto	l328
 10966  00DBAC                     __end_of_imprimir_reporte:
 10967                           	opt stack 0
 10968                           tblptru	equ	0xFF8
 10969                           tblptrh	equ	0xFF7
 10970                           tblptrl	equ	0xFF6
 10971                           tablat	equ	0xFF5
 10972                           prodh	equ	0xFF4
 10973                           prodl	equ	0xFF3
 10974                           intcon	equ	0xFF2
 10975                           postinc0	equ	0xFEE
 10976                           wreg	equ	0xFE8
 10977                           postinc1	equ	0xFE6
 10978                           postdec1	equ	0xFE5
 10979                           fsr1h	equ	0xFE2
 10980                           fsr1l	equ	0xFE1
 10981                           indf2	equ	0xFDF
 10982                           postinc2	equ	0xFDE
 10983                           postdec2	equ	0xFDD
 10984                           fsr2h	equ	0xFDA
 10985                           fsr2l	equ	0xFD9
 10986                           status	equ	0xFD8
 10987                           
 10988 ;; *************** function _sprintf *****************
 10989 ;; Defined at:
 10990 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;  sp              2   33[COMRAM] PTR unsigned char 
 10993 ;;		 -> buffer3(20), buffer2(20), 
 10994 ;;  f               2   35[COMRAM] PTR const unsigned char 
 10995 ;;		 -> STR_27(18), STR_26(23), STR_14(5), STR_9(15), 
 10996 ;;		 -> STR_8(15), 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;  tmpval          4    0        struct .
 10999 ;;  width           2   60[COMRAM] int 
 11000 ;;  val             2   56[COMRAM] unsigned int 
 11001 ;;  len             2   54[COMRAM] unsigned int 
 11002 ;;  ap              2   52[COMRAM] PTR void [1]
 11003 ;;		 -> ?_sprintf(2), 
 11004 ;;  cp              2   50[COMRAM] PTR const unsigned char 
 11005 ;;		 -> STR_49(7), STR_40(8), STR_25(8), STR_24(8), 
 11006 ;;		 -> STR_23(8), STR_22(8), RAM(3775), STR_7(6), 
 11007 ;;  c               1   59[COMRAM] char 
 11008 ;;  flag            1   58[COMRAM] unsigned char 
 11009 ;;  prec            1   49[COMRAM] char 
 11010 ;; Return value:  Size  Location     Type
 11011 ;;                  2   33[COMRAM] int 
 11012 ;; Registers used:
 11013 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11014 ;; Tracked objects:
 11015 ;;		On entry : 0/0
 11016 ;;		On exit  : 0/0
 11017 ;;		Unchanged: 0/0
 11018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11019 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11021 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11022 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11023 ;;Total ram usage:       29 bytes
 11024 ;; Hardware stack levels used:    1
 11025 ;; Hardware stack levels required when called:    1
 11026 ;; This function calls:
 11027 ;;		___lwdiv
 11028 ;;		___lwmod
 11029 ;;		___wmul
 11030 ;;		_isdigit
 11031 ;; This function is called by:
 11032 ;;		_setDiaMesAnio
 11033 ;;		_setHoraMinutoSegundo
 11034 ;;		_guarda_numero_ingresado
 11035 ;;		_imprimir_reporte
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text52
 11040  00FA9E                     __ptext52:
 11041                           	opt stack 0
 11042  00FA9E                     _sprintf:
 11043                           	opt stack 26
 11044                           
 11045                           ;doprnt.c: 494: va_list ap;
 11046                           ;doprnt.c: 499: signed char c;
 11047                           ;doprnt.c: 501: int width;
 11048                           ;doprnt.c: 506: signed char prec;
 11049                           ;doprnt.c: 508: unsigned char flag;
 11050                           ;doprnt.c: 523: union {
 11051                           ;doprnt.c: 524: unsigned long vd;
 11052                           ;doprnt.c: 525: double integ;
 11053                           ;doprnt.c: 526: } tmpval;
 11054                           ;doprnt.c: 528: unsigned int val;
 11055                           ;doprnt.c: 529: unsigned len;
 11056                           ;doprnt.c: 530: const char * cp;
 11057                           ;doprnt.c: 533: *ap = __va_start();
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;incstack = 0
 11061  00FA9E  0E26               	movlw	low (?_sprintf+4)
 11062  00FAA0  6E35               	movwf	sprintf@ap,c
 11063  00FAA2  0E00               	movlw	high (?_sprintf+4)
 11064  00FAA4  6E36               	movwf	sprintf@ap+1,c
 11065                           
 11066                           ;doprnt.c: 536: while(c = *f++) {
 11067  00FAA6  D1BF               	goto	u4740
 11068  00FAA8                     
 11069                           ;doprnt.c: 538: if(c != '%')
 11070  00FAA8  0E25               	movlw	37
 11071  00FAAA  183C               	xorwf	sprintf@c,w,c
 11072  00FAAC  B4D8               	btfsc	status,2,c
 11073  00FAAE  D009               	goto	l565
 11074                           
 11075                           ;doprnt.c: 540: {
 11076                           ;doprnt.c: 541: ((*sp++ = (c)));
 11077  00FAB0  C022  FFD9         	movff	sprintf@sp,fsr2l
 11078  00FAB4  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11079  00FAB8  C03C  FFDF         	movff	sprintf@c,indf2
 11080  00FABC  4A22               	infsnz	sprintf@sp,f,c
 11081  00FABE  2A23               	incf	sprintf@sp+1,f,c
 11082                           
 11083                           ;doprnt.c: 542: continue;
 11084  00FAC0  D1B2               	goto	u4740
 11085  00FAC2                     l565:
 11086                           
 11087                           ;doprnt.c: 543: }
 11088                           ;doprnt.c: 546: width = 0;
 11089  00FAC2  0E00               	movlw	0
 11090  00FAC4  6E3E               	movwf	sprintf@width+1,c
 11091  00FAC6  0E00               	movlw	0
 11092  00FAC8  6E3D               	movwf	sprintf@width,c
 11093                           
 11094                           ;doprnt.c: 548: flag = 0;
 11095  00FACA  0E00               	movlw	0
 11096  00FACC  6E3B               	movwf	sprintf@flag,c
 11097                           
 11098                           ;doprnt.c: 551: switch(*f) {
 11099                           
 11100                           ;doprnt.c: 550: for(;;) {
 11101  00FACE  D003               	goto	l567
 11102  00FAD0                     
 11103                           ;doprnt.c: 580: flag |= 0x04;
 11104  00FAD0  843B               	bsf	sprintf@flag,2,c
 11105                           
 11106                           ;doprnt.c: 581: f++;
 11107  00FAD2  4A24               	infsnz	sprintf@f,f,c
 11108  00FAD4  2A25               	incf	sprintf@f+1,f,c
 11109  00FAD6                     l567:
 11110  00FAD6  C024  FFF6         	movff	sprintf@f,tblptrl
 11111  00FADA  C025  FFF7         	movff	sprintf@f+1,tblptrh
 11112  00FADE                     	if	0	;tblptru may be non-zero
 11113  00FADE                     	endif
 11114  00FADE                     	if	0	;tblptru may be non-zero
 11115  00FADE                     	endif
 11116  00FADE  0008               	tblrd		*
 11117  00FAE0  50F5               	movf	tablat,w,c
 11118                           
 11119                           ; Switch size 1, requested type "space"
 11120                           ; Number of cases is 1, Range of values is 48 to 48
 11121                           ; switch strategies available:
 11122                           ; Name         Instructions Cycles
 11123                           ; simple_byte            4     3 (average)
 11124                           ;	Chosen strategy is simple_byte
 11125  00FAE2  0A30               	xorlw	48	; case 48
 11126  00FAE4  B4D8               	btfsc	status,2,c
 11127  00FAE6  D7F4               	goto	l568
 11128                           
 11129                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11130                           
 11131                           ;doprnt.c: 586: }
 11132                           
 11133                           ;doprnt.c: 585: break;
 11134  00FAE8  C024  FFF6         	movff	sprintf@f,tblptrl
 11135  00FAEC  C025  FFF7         	movff	sprintf@f+1,tblptrh
 11136  00FAF0                     	if	0	;tblptru may be non-zero
 11137  00FAF0                     	endif
 11138  00FAF0                     	if	0	;tblptru may be non-zero
 11139  00FAF0                     	endif
 11140  00FAF0  0008               	tblrd		*
 11141  00FAF2  50F5               	movf	tablat,w,c
 11142  00FAF4  ECEA  F066         	call	_isdigit
 11143  00FAF8  A0D8               	btfss	status,0,c
 11144  00FAFA  D0AC               	goto	l575
 11145                           
 11146                           ;doprnt.c: 598: width = 0;
 11147  00FAFC  0E00               	movlw	0
 11148  00FAFE  6E3E               	movwf	sprintf@width+1,c
 11149  00FB00  0E00               	movlw	0
 11150  00FB02  6E3D               	movwf	sprintf@width,c
 11151  00FB04                     
 11152                           ;doprnt.c: 600: width *= 10;
 11153  00FB04  C03D  F01C         	movff	sprintf@width,___wmul@multiplier
 11154  00FB08  C03E  F01D         	movff	sprintf@width+1,___wmul@multiplier+1
 11155  00FB0C  0E00               	movlw	0
 11156  00FB0E  6E1F               	movwf	___wmul@multiplicand+1,c
 11157  00FB10  0E0A               	movlw	10
 11158  00FB12  6E1E               	movwf	___wmul@multiplicand,c
 11159  00FB14  EC2E  F067         	call	___wmul	;wreg free
 11160  00FB18  C01C  F03D         	movff	?___wmul,sprintf@width
 11161  00FB1C  C01D  F03E         	movff	?___wmul+1,sprintf@width+1
 11162                           
 11163                           ;doprnt.c: 601: width += *f++ - '0';
 11164  00FB20  0ED0               	movlw	208
 11165  00FB22  6E2E               	movwf	??_sprintf& (0+255),c
 11166  00FB24  0EFF               	movlw	255
 11167  00FB26  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 11168  00FB28  C024  FFF6         	movff	sprintf@f,tblptrl
 11169  00FB2C  C025  FFF7         	movff	sprintf@f+1,tblptrh
 11170  00FB30                     	if	0	;tblptru may be non-zero
 11171  00FB30                     	endif
 11172  00FB30                     	if	0	;tblptru may be non-zero
 11173  00FB30                     	endif
 11174  00FB30  0008               	tblrd		*
 11175  00FB32  50F5               	movf	tablat,w,c
 11176  00FB34  6E30               	movwf	(??_sprintf+2)& (0+255),c
 11177  00FB36  6A31               	clrf	(??_sprintf+3)& (0+255),c
 11178  00FB38  502E               	movf	??_sprintf,w,c
 11179  00FB3A  2630               	addwf	??_sprintf+2,f,c
 11180  00FB3C  502F               	movf	??_sprintf+1,w,c
 11181  00FB3E  2231               	addwfc	??_sprintf+3,f,c
 11182  00FB40  5030               	movf	??_sprintf+2,w,c
 11183  00FB42  263D               	addwf	sprintf@width,f,c
 11184  00FB44  5031               	movf	??_sprintf+3,w,c
 11185  00FB46  223E               	addwfc	sprintf@width+1,f,c
 11186  00FB48  4A24               	infsnz	sprintf@f,f,c
 11187  00FB4A  2A25               	incf	sprintf@f+1,f,c
 11188                           
 11189                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11190  00FB4C  C024  FFF6         	movff	sprintf@f,tblptrl
 11191  00FB50  C025  FFF7         	movff	sprintf@f+1,tblptrh
 11192  00FB54                     	if	0	;tblptru may be non-zero
 11193  00FB54                     	endif
 11194  00FB54                     	if	0	;tblptru may be non-zero
 11195  00FB54                     	endif
 11196  00FB54  0008               	tblrd		*
 11197  00FB56  50F5               	movf	tablat,w,c
 11198  00FB58  ECEA  F066         	call	_isdigit
 11199  00FB5C  A0D8               	btfss	status,0,c
 11200  00FB5E  D07A               	goto	l575
 11201  00FB60  D7D1               	goto	l573
 11202  00FB62                     
 11203                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 11204  00FB62  C035  FFD9         	movff	sprintf@ap,fsr2l
 11205  00FB66  C036  FFDA         	movff	sprintf@ap+1,fsr2h
 11206  00FB6A  CFDE F033          	movff	postinc2,sprintf@cp
 11207  00FB6E  CFDD F034          	movff	postdec2,sprintf@cp+1
 11208  00FB72  0E02               	movlw	2
 11209  00FB74  2635               	addwf	sprintf@ap,f,c
 11210  00FB76  0E00               	movlw	0
 11211  00FB78  2236               	addwfc	sprintf@ap+1,f,c
 11212                           
 11213                           ;doprnt.c: 740: if(!cp)
 11214  00FB7A  5033               	movf	sprintf@cp,w,c
 11215  00FB7C  1034               	iorwf	sprintf@cp+1,w,c
 11216  00FB7E  A4D8               	btfss	status,2,c
 11217  00FB80  D004               	goto	l582
 11218                           
 11219                           ;doprnt.c: 741: cp = "(null)";
 11220  00FB82  0EBF               	movlw	low STR_49
 11221  00FB84  6E33               	movwf	sprintf@cp,c
 11222  00FB86  0EFF               	movlw	high STR_49
 11223  00FB88  6E34               	movwf	sprintf@cp+1,c
 11224  00FB8A                     l582:
 11225                           
 11226                           ;doprnt.c: 745: len = 0;
 11227  00FB8A  0E00               	movlw	0
 11228  00FB8C  6E38               	movwf	sprintf@len+1,c
 11229  00FB8E  0E00               	movlw	0
 11230  00FB90  6E37               	movwf	sprintf@len,c
 11231                           
 11232                           ;doprnt.c: 746: while(cp[len])
 11233  00FB92  D002               	goto	l583
 11234  00FB94                     
 11235                           ;doprnt.c: 747: len++;
 11236  00FB94  4A37               	infsnz	sprintf@len,f,c
 11237  00FB96  2A38               	incf	sprintf@len+1,f,c
 11238  00FB98                     l583:
 11239  00FB98  5037               	movf	sprintf@len,w,c
 11240  00FB9A  2433               	addwf	sprintf@cp,w,c
 11241  00FB9C  6E2E               	movwf	??_sprintf& (0+255),c
 11242  00FB9E  5038               	movf	sprintf@len+1,w,c
 11243  00FBA0  2034               	addwfc	sprintf@cp+1,w,c
 11244  00FBA2  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 11245  00FBA4  C02E  FFF6         	movff	??_sprintf,tblptrl
 11246  00FBA8  C02F  FFF7         	movff	??_sprintf+1,tblptrh
 11247  00FBAC  6AF8               	clrf	tblptru,c
 11248  00FBAE  0E0E               	movlw	(high __ramtop+-1)
 11249  00FBB0  64F7               	cpfsgt	tblptrh,c
 11250  00FBB2  D003               	bra	u4537
 11251  00FBB4  0008               	tblrd		*
 11252  00FBB6  50F5               	movf	tablat,w,c
 11253  00FBB8  D005               	bra	u4530
 11254  00FBBA                     u4537:
 11255  00FBBA  CFF6 FFE9          	movff	tblptrl,fsr0l
 11256  00FBBE  CFF7 FFEA          	movff	tblptrh,fsr0h
 11257  00FBC2  50EF               	movf	indf0,w,c
 11258  00FBC4                     u4530:
 11259  00FBC4  0900               	iorlw	0
 11260  00FBC6  A4D8               	btfss	status,2,c
 11261  00FBC8  D7E5               	goto	l584
 11262                           
 11263                           ;doprnt.c: 757: if(width > len)
 11264  00FBCA  503D               	movf	sprintf@width,w,c
 11265  00FBCC  5C37               	subwf	sprintf@len,w,c
 11266  00FBCE  503E               	movf	sprintf@width+1,w,c
 11267  00FBD0  5838               	subwfb	sprintf@len+1,w,c
 11268  00FBD2  B0D8               	btfsc	status,0,c
 11269  00FBD4  D005               	goto	l586
 11270                           
 11271                           ;doprnt.c: 758: width -= len;
 11272  00FBD6  5037               	movf	sprintf@len,w,c
 11273  00FBD8  5E3D               	subwf	sprintf@width,f,c
 11274  00FBDA  5038               	movf	sprintf@len+1,w,c
 11275  00FBDC  5A3E               	subwfb	sprintf@width+1,f,c
 11276  00FBDE  D00D               	goto	l588
 11277  00FBE0                     l586:
 11278                           
 11279                           ;doprnt.c: 759: else
 11280                           ;doprnt.c: 760: width = 0;
 11281  00FBE0  0E00               	movlw	0
 11282  00FBE2  6E3E               	movwf	sprintf@width+1,c
 11283  00FBE4  0E00               	movlw	0
 11284  00FBE6  6E3D               	movwf	sprintf@width,c
 11285                           
 11286                           ;doprnt.c: 764: while(width--)
 11287  00FBE8  D008               	goto	l588
 11288  00FBEA                     l4289:
 11289                           
 11290                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11291  00FBEA  C022  FFD9         	movff	sprintf@sp,fsr2l
 11292  00FBEE  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11293  00FBF2  0E20               	movlw	32
 11294  00FBF4  6EDF               	movwf	indf2,c
 11295  00FBF6  4A22               	infsnz	sprintf@sp,f,c
 11296  00FBF8  2A23               	incf	sprintf@sp+1,f,c
 11297  00FBFA                     l588:
 11298  00FBFA  063D               	decf	sprintf@width,f,c
 11299  00FBFC  A0D8               	btfss	status,0,c
 11300  00FBFE  063E               	decf	sprintf@width+1,f,c
 11301  00FC00  283D               	incf	sprintf@width,w,c
 11302  00FC02  E1F3               	bnz	l4289
 11303  00FC04  283E               	incf	sprintf@width+1,w,c
 11304  00FC06  B4D8               	btfsc	status,2,c
 11305  00FC08  D01A               	goto	l591
 11306  00FC0A  D7EF               	goto	l589
 11307  00FC0C                     l4295:
 11308                           
 11309                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11310  00FC0C  C033  FFF6         	movff	sprintf@cp,tblptrl
 11311  00FC10  C034  FFF7         	movff	sprintf@cp+1,tblptrh
 11312  00FC14  6AF8               	clrf	tblptru,c
 11313  00FC16  C022  FFD9         	movff	sprintf@sp,fsr2l
 11314  00FC1A  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11315  00FC1E  0E0E               	movlw	(high __ramtop+-1)
 11316  00FC20  64F7               	cpfsgt	tblptrh,c
 11317  00FC22  D003               	bra	u4577
 11318  00FC24  0008               	tblrd		*
 11319  00FC26  50F5               	movf	tablat,w,c
 11320  00FC28  D005               	bra	u4570
 11321  00FC2A                     u4577:
 11322  00FC2A  CFF6 FFE9          	movff	tblptrl,fsr0l
 11323  00FC2E  CFF7 FFEA          	movff	tblptrh,fsr0h
 11324  00FC32  50EF               	movf	indf0,w,c
 11325  00FC34                     u4570:
 11326  00FC34  6EDF               	movwf	indf2,c
 11327  00FC36  4A33               	infsnz	sprintf@cp,f,c
 11328  00FC38  2A34               	incf	sprintf@cp+1,f,c
 11329  00FC3A  4A22               	infsnz	sprintf@sp,f,c
 11330  00FC3C  2A23               	incf	sprintf@sp+1,f,c
 11331  00FC3E                     l591:
 11332  00FC3E  0637               	decf	sprintf@len,f,c
 11333  00FC40  A0D8               	btfss	status,0,c
 11334  00FC42  0638               	decf	sprintf@len+1,f,c
 11335  00FC44  2837               	incf	sprintf@len,w,c
 11336  00FC46  E1E2               	bnz	l4295
 11337  00FC48  2838               	incf	sprintf@len+1,w,c
 11338  00FC4A  B4D8               	btfsc	status,2,c
 11339  00FC4C  D0EC               	goto	u4740
 11340  00FC4E  D7DE               	goto	l592
 11341  00FC50                     
 11342                           ;doprnt.c: 818: flag |= 0x40;
 11343  00FC50  8C3B               	bsf	sprintf@flag,6,c
 11344                           
 11345                           ;doprnt.c: 822: }
 11346                           
 11347                           ;doprnt.c: 819: break;
 11348  00FC52  D01A               	goto	l580
 11349  00FC54                     l575:
 11350  00FC54  C024  FFF6         	movff	sprintf@f,tblptrl
 11351  00FC58  C025  FFF7         	movff	sprintf@f+1,tblptrh
 11352  00FC5C  4A24               	infsnz	sprintf@f,f,c
 11353  00FC5E  2A25               	incf	sprintf@f+1,f,c
 11354  00FC60                     	if	0	;tblptru may be non-zero
 11355  00FC60                     	endif
 11356  00FC60                     	if	0	;tblptru may be non-zero
 11357  00FC60                     	endif
 11358  00FC60  0008               	tblrd		*
 11359  00FC62  CFF5 F03C          	movff	tablat,sprintf@c
 11360  00FC66  503C               	movf	sprintf@c,w,c
 11361                           
 11362                           ; Switch size 1, requested type "space"
 11363                           ; Number of cases is 5, Range of values is 0 to 117
 11364                           ; switch strategies available:
 11365                           ; Name         Instructions Cycles
 11366                           ; simple_byte           16     9 (average)
 11367                           ;	Chosen strategy is simple_byte
 11368  00FC68  0A00               	xorlw	0	; case 0
 11369  00FC6A  B4D8               	btfsc	status,2,c
 11370  00FC6C  D0E8               	goto	u4750
 11371  00FC6E  0A64               	xorlw	100	; case 100
 11372  00FC70  B4D8               	btfsc	status,2,c
 11373  00FC72  D00A               	goto	l580
 11374  00FC74  0A0D               	xorlw	13	; case 105
 11375  00FC76  B4D8               	btfsc	status,2,c
 11376  00FC78  D007               	goto	l580
 11377  00FC7A  0A1A               	xorlw	26	; case 115
 11378  00FC7C  B4D8               	btfsc	status,2,c
 11379  00FC7E  D771               	goto	l581
 11380  00FC80  0A06               	xorlw	6	; case 117
 11381  00FC82  B4D8               	btfsc	status,2,c
 11382  00FC84  D7E5               	goto	l595
 11383  00FC86  D0CF               	goto	u4740
 11384  00FC88                     l580:
 11385                           
 11386                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 11387  00FC88  BC3B               	btfsc	sprintf@flag,6,c
 11388  00FC8A  D015               	goto	l596
 11389                           
 11390                           ;doprnt.c: 1253: {
 11391                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11392  00FC8C  C035  FFD9         	movff	sprintf@ap,fsr2l
 11393  00FC90  C036  FFDA         	movff	sprintf@ap+1,fsr2h
 11394  00FC94  CFDE F039          	movff	postinc2,sprintf@val
 11395  00FC98  CFDD F03A          	movff	postdec2,sprintf@val+1
 11396  00FC9C  0E02               	movlw	2
 11397  00FC9E  2635               	addwf	sprintf@ap,f,c
 11398  00FCA0  0E00               	movlw	0
 11399  00FCA2  2236               	addwfc	sprintf@ap+1,f,c
 11400                           
 11401                           ;doprnt.c: 1261: if((int)val < 0) {
 11402  00FCA4  AE3A               	btfss	sprintf@val+1,7,c
 11403  00FCA6  D013               	goto	l598
 11404                           
 11405                           ;doprnt.c: 1262: flag |= 0x03;
 11406  00FCA8  0E03               	movlw	3
 11407  00FCAA  123B               	iorwf	sprintf@flag,f,c
 11408                           
 11409                           ;doprnt.c: 1263: val = -val;
 11410  00FCAC  6C39               	negf	sprintf@val,c
 11411  00FCAE  1E3A               	comf	sprintf@val+1,f,c
 11412  00FCB0  B0D8               	btfsc	status,0,c
 11413  00FCB2  2A3A               	incf	sprintf@val+1,f,c
 11414                           
 11415                           ;doprnt.c: 1264: }
 11416                           ;doprnt.c: 1266: }
 11417  00FCB4  D00C               	goto	l598
 11418  00FCB6                     l596:
 11419                           
 11420                           ;doprnt.c: 1268: else
 11421                           ;doprnt.c: 1273: {
 11422                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11423  00FCB6  C035  FFD9         	movff	sprintf@ap,fsr2l
 11424  00FCBA  C036  FFDA         	movff	sprintf@ap+1,fsr2h
 11425  00FCBE  CFDE F039          	movff	postinc2,sprintf@val
 11426  00FCC2  CFDD F03A          	movff	postdec2,sprintf@val+1
 11427  00FCC6  0E02               	movlw	2
 11428  00FCC8  2635               	addwf	sprintf@ap,f,c
 11429  00FCCA  0E00               	movlw	0
 11430  00FCCC  2236               	addwfc	sprintf@ap+1,f,c
 11431  00FCCE                     l598:
 11432                           
 11433                           ;doprnt.c: 1287: }
 11434                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11435  00FCCE  0E01               	movlw	1
 11436  00FCD0  6E3C               	movwf	sprintf@c,c
 11437  00FCD2                     l4325:
 11438  00FCD2  0E05               	movlw	5
 11439  00FCD4  183C               	xorwf	sprintf@c,w,c
 11440  00FCD6  B4D8               	btfsc	status,2,c
 11441  00FCD8  D012               	goto	u4630
 11442                           
 11443                           ;doprnt.c: 1306: if(val < dpowers[c])
 11444  00FCDA  503C               	movf	sprintf@c,w,c
 11445  00FCDC  0D02               	mullw	2
 11446  00FCDE  0E4D               	movlw	low _dpowers
 11447  00FCE0  24F3               	addwf	prodl,w,c
 11448  00FCE2  6EF6               	movwf	tblptrl,c
 11449  00FCE4  0EFE               	movlw	high _dpowers
 11450  00FCE6  20F4               	addwfc	prodh,w,c
 11451  00FCE8  6EF7               	movwf	tblptrh,c
 11452  00FCEA                     	if	0	;There are less than 3 active tblptr bytes
 11453  00FCEA                     	endif
 11454  00FCEA  0009               	tblrd		*+
 11455  00FCEC  50F5               	movf	tablat,w,c
 11456  00FCEE  5C39               	subwf	sprintf@val,w,c
 11457  00FCF0  0009               	tblrd		*+
 11458  00FCF2  50F5               	movf	tablat,w,c
 11459  00FCF4  583A               	subwfb	sprintf@val+1,w,c
 11460  00FCF6  A0D8               	btfss	status,0,c
 11461  00FCF8  D002               	goto	u4630
 11462                           
 11463                           ;doprnt.c: 1307: break;
 11464  00FCFA  2A3C               	incf	sprintf@c,f,c
 11465  00FCFC  D7EA               	goto	l4325
 11466  00FCFE                     u4630:
 11467                           
 11468                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11469  00FCFE  503D               	movf	sprintf@width,w,c
 11470  00FD00  103E               	iorwf	sprintf@width+1,w,c
 11471  00FD02  B4D8               	btfsc	status,2,c
 11472  00FD04  D009               	goto	l602
 11473  00FD06  C03B  F02E         	movff	sprintf@flag,??_sprintf
 11474  00FD0A  0E03               	movlw	3
 11475  00FD0C  162E               	andwf	??_sprintf,f,c
 11476  00FD0E  B4D8               	btfsc	status,2,c
 11477  00FD10  D003               	goto	l602
 11478                           
 11479                           ;doprnt.c: 1346: width--;
 11480  00FD12  063D               	decf	sprintf@width,f,c
 11481  00FD14  A0D8               	btfss	status,0,c
 11482  00FD16  063E               	decf	sprintf@width+1,f,c
 11483  00FD18                     l602:
 11484                           
 11485                           ;doprnt.c: 1381: if(width > c)
 11486  00FD18  0E80               	movlw	128
 11487  00FD1A  BE3C               	btfsc	sprintf@c,7,c
 11488  00FD1C  0E7F               	movlw	127
 11489  00FD1E  6E2E               	movwf	??_sprintf& (0+255),c
 11490  00FD20  503D               	movf	sprintf@width,w,c
 11491  00FD22  5C3C               	subwf	sprintf@c,w,c
 11492  00FD24  503E               	movf	sprintf@width+1,w,c
 11493  00FD26  0A80               	xorlw	128
 11494  00FD28  582E               	subwfb	??_sprintf& (0+255),w,c
 11495  00FD2A  B0D8               	btfsc	status,0,c
 11496  00FD2C  D007               	goto	l603
 11497                           
 11498                           ;doprnt.c: 1382: width -= c;
 11499  00FD2E  503C               	movf	sprintf@c,w,c
 11500  00FD30  5E3D               	subwf	sprintf@width,f,c
 11501  00FD32  0E00               	movlw	0
 11502  00FD34  BE3C               	btfsc	sprintf@c,7,c
 11503  00FD36  0EFF               	movlw	255
 11504  00FD38  5A3E               	subwfb	sprintf@width+1,f,c
 11505  00FD3A  D004               	goto	l604
 11506  00FD3C                     l603:
 11507                           
 11508                           ;doprnt.c: 1383: else
 11509                           ;doprnt.c: 1384: width = 0;
 11510  00FD3C  0E00               	movlw	0
 11511  00FD3E  6E3E               	movwf	sprintf@width+1,c
 11512  00FD40  0E00               	movlw	0
 11513  00FD42  6E3D               	movwf	sprintf@width,c
 11514  00FD44                     l604:
 11515                           
 11516                           ;doprnt.c: 1387: if(flag & 0x04) {
 11517  00FD44  A43B               	btfss	sprintf@flag,2,c
 11518  00FD46  D01E               	goto	l605
 11519                           
 11520                           ;doprnt.c: 1392: if(flag & 0x03)
 11521  00FD48  C03B  F02E         	movff	sprintf@flag,??_sprintf
 11522  00FD4C  0E03               	movlw	3
 11523  00FD4E  162E               	andwf	??_sprintf,f,c
 11524  00FD50  B4D8               	btfsc	status,2,c
 11525  00FD52  D008               	goto	l606
 11526                           
 11527                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 11528  00FD54  C022  FFD9         	movff	sprintf@sp,fsr2l
 11529  00FD58  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11530  00FD5C  0E2D               	movlw	45
 11531  00FD5E  6EDF               	movwf	indf2,c
 11532  00FD60  4A22               	infsnz	sprintf@sp,f,c
 11533  00FD62  2A23               	incf	sprintf@sp+1,f,c
 11534  00FD64                     l606:
 11535                           
 11536                           ;doprnt.c: 1415: if(width)
 11537  00FD64  503D               	movf	sprintf@width,w,c
 11538  00FD66  103E               	iorwf	sprintf@width+1,w,c
 11539  00FD68  B4D8               	btfsc	status,2,c
 11540  00FD6A  D02D               	goto	l614
 11541                           
 11542                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 11543                           
 11544                           ;doprnt.c: 1416: do
 11545  00FD6C  C022  FFD9         	movff	sprintf@sp,fsr2l
 11546  00FD70  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11547  00FD74  0E30               	movlw	48
 11548  00FD76  6EDF               	movwf	indf2,c
 11549  00FD78  4A22               	infsnz	sprintf@sp,f,c
 11550  00FD7A  2A23               	incf	sprintf@sp+1,f,c
 11551                           
 11552                           ;doprnt.c: 1418: while(--width);
 11553  00FD7C  063D               	decf	sprintf@width,f,c
 11554  00FD7E  A0D8               	btfss	status,0,c
 11555  00FD80  063E               	decf	sprintf@width+1,f,c
 11556  00FD82  D7F0               	goto	l606
 11557  00FD84                     l605:
 11558                           
 11559                           ;doprnt.c: 1422: {
 11560                           ;doprnt.c: 1424: if(width
 11561                           ;doprnt.c: 1428: )
 11562  00FD84  503D               	movf	sprintf@width,w,c
 11563  00FD86  103E               	iorwf	sprintf@width+1,w,c
 11564  00FD88  B4D8               	btfsc	status,2,c
 11565  00FD8A  D00F               	goto	u4720
 11566  00FD8C                     u4710:
 11567                           
 11568                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11569                           
 11570                           ;doprnt.c: 1429: do
 11571  00FD8C  C022  FFD9         	movff	sprintf@sp,fsr2l
 11572  00FD90  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11573  00FD94  0E20               	movlw	32
 11574  00FD96  6EDF               	movwf	indf2,c
 11575  00FD98  4A22               	infsnz	sprintf@sp,f,c
 11576  00FD9A  2A23               	incf	sprintf@sp+1,f,c
 11577                           
 11578                           ;doprnt.c: 1431: while(--width);
 11579  00FD9C  063D               	decf	sprintf@width,f,c
 11580  00FD9E  A0D8               	btfss	status,0,c
 11581  00FDA0  063E               	decf	sprintf@width+1,f,c
 11582  00FDA2  503D               	movf	sprintf@width,w,c
 11583  00FDA4  103E               	iorwf	sprintf@width+1,w,c
 11584  00FDA6  A4D8               	btfss	status,2,c
 11585  00FDA8  D7F1               	goto	u4710
 11586  00FDAA                     u4720:
 11587                           
 11588                           ;doprnt.c: 1438: if(flag & 0x03)
 11589  00FDAA  C03B  F02E         	movff	sprintf@flag,??_sprintf
 11590  00FDAE  0E03               	movlw	3
 11591  00FDB0  162E               	andwf	??_sprintf,f,c
 11592  00FDB2  B4D8               	btfsc	status,2,c
 11593  00FDB4  D008               	goto	l614
 11594                           
 11595                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11596  00FDB6  C022  FFD9         	movff	sprintf@sp,fsr2l
 11597  00FDBA  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11598  00FDBE  0E2D               	movlw	45
 11599  00FDC0  6EDF               	movwf	indf2,c
 11600  00FDC2  4A22               	infsnz	sprintf@sp,f,c
 11601  00FDC4  2A23               	incf	sprintf@sp+1,f,c
 11602  00FDC6                     l614:
 11603                           
 11604                           ;doprnt.c: 1469: }
 11605                           ;doprnt.c: 1472: prec = c;
 11606  00FDC6  C03C  F032         	movff	sprintf@c,sprintf@prec
 11607                           
 11608                           ;doprnt.c: 1474: while(prec--) {
 11609  00FDCA  D029               	goto	l615
 11610  00FDCC                     
 11611                           ;doprnt.c: 1478: {
 11612                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11613  00FDCC  5032               	movf	sprintf@prec,w,c
 11614  00FDCE  0D02               	mullw	2
 11615  00FDD0  0E4D               	movlw	low _dpowers
 11616  00FDD2  24F3               	addwf	prodl,w,c
 11617  00FDD4  6EF6               	movwf	tblptrl,c
 11618  00FDD6  0EFE               	movlw	high _dpowers
 11619  00FDD8  20F4               	addwfc	prodh,w,c
 11620  00FDDA  6EF7               	movwf	tblptrh,c
 11621  00FDDC                     	if	0	;There are less than 3 active tblptr bytes
 11622  00FDDC                     	endif
 11623  00FDDC  0009               	tblrd		*+
 11624  00FDDE  CFF5 F003          	movff	tablat,___lwdiv@divisor
 11625  00FDE2  000A               	tblrd		*-
 11626  00FDE4  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 11627  00FDE8  C039  F001         	movff	sprintf@val,___lwdiv@dividend
 11628  00FDEC  C03A  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
 11629  00FDF0  EC92  F068         	call	___lwdiv	;wreg free
 11630  00FDF4  C001  F008         	movff	?___lwdiv,___lwmod@dividend
 11631  00FDF8  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
 11632  00FDFC  0E00               	movlw	0
 11633  00FDFE  6E0B               	movwf	___lwmod@divisor+1,c
 11634  00FE00  0E0A               	movlw	10
 11635  00FE02  6E0A               	movwf	___lwmod@divisor,c
 11636  00FE04  ECAF  F067         	call	___lwmod	;wreg free
 11637  00FE08  5008               	movf	?___lwmod,w,c
 11638  00FE0A  0F30               	addlw	48
 11639  00FE0C  6E3C               	movwf	sprintf@c,c
 11640                           
 11641                           ;doprnt.c: 1523: }
 11642                           ;doprnt.c: 1524: ((*sp++ = (c)));
 11643  00FE0E  C022  FFD9         	movff	sprintf@sp,fsr2l
 11644  00FE12  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11645  00FE16  C03C  FFDF         	movff	sprintf@c,indf2
 11646  00FE1A  4A22               	infsnz	sprintf@sp,f,c
 11647  00FE1C  2A23               	incf	sprintf@sp+1,f,c
 11648  00FE1E                     l615:
 11649  00FE1E  0632               	decf	sprintf@prec,f,c
 11650  00FE20  2832               	incf	sprintf@prec,w,c
 11651  00FE22  A4D8               	btfss	status,2,c
 11652  00FE24  D7D3               	goto	l616
 11653  00FE26                     u4740:
 11654  00FE26  C024  FFF6         	movff	sprintf@f,tblptrl
 11655  00FE2A  C025  FFF7         	movff	sprintf@f+1,tblptrh
 11656  00FE2E  4A24               	infsnz	sprintf@f,f,c
 11657  00FE30  2A25               	incf	sprintf@f+1,f,c
 11658  00FE32                     	if	0	;tblptru may be non-zero
 11659  00FE32                     	endif
 11660  00FE32                     	if	0	;tblptru may be non-zero
 11661  00FE32                     	endif
 11662  00FE32  0008               	tblrd		*
 11663  00FE34  CFF5 F03C          	movff	tablat,sprintf@c
 11664  00FE38  503C               	movf	sprintf@c,w,c
 11665  00FE3A  A4D8               	btfss	status,2,c
 11666  00FE3C  D635               	goto	l564
 11667  00FE3E                     u4750:
 11668                           
 11669                           ;doprnt.c: 1538: *sp = 0;
 11670                           
 11671                           ;doprnt.c: 1525: }
 11672                           ;doprnt.c: 1533: }
 11673                           ;doprnt.c: 1535: alldone:
 11674  00FE3E  C022  FFD9         	movff	sprintf@sp,fsr2l
 11675  00FE42  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 11676  00FE46  0E00               	movlw	0
 11677  00FE48  6EDF               	movwf	indf2,c
 11678  00FE4A  0012               	return	
 11679  00FE4C                     __end_of_sprintf:
 11680                           	opt stack 0
 11681                           tblptru	equ	0xFF8
 11682                           tblptrh	equ	0xFF7
 11683                           tblptrl	equ	0xFF6
 11684                           tablat	equ	0xFF5
 11685                           prodh	equ	0xFF4
 11686                           prodl	equ	0xFF3
 11687                           intcon	equ	0xFF2
 11688                           indf0	equ	0xFEF
 11689                           postinc0	equ	0xFEE
 11690                           fsr0h	equ	0xFEA
 11691                           fsr0l	equ	0xFE9
 11692                           wreg	equ	0xFE8
 11693                           postinc1	equ	0xFE6
 11694                           postdec1	equ	0xFE5
 11695                           fsr1h	equ	0xFE2
 11696                           fsr1l	equ	0xFE1
 11697                           indf2	equ	0xFDF
 11698                           postinc2	equ	0xFDE
 11699                           postdec2	equ	0xFDD
 11700                           fsr2h	equ	0xFDA
 11701                           fsr2l	equ	0xFD9
 11702                           status	equ	0xFD8
 11703                           
 11704 ;; *************** function _isdigit *****************
 11705 ;; Defined at:
 11706 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;  c               1    wreg     unsigned char 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  c               1    2[COMRAM] unsigned char 
 11711 ;; Return value:  Size  Location     Type
 11712 ;;		None               void
 11713 ;; Registers used:
 11714 ;;		wreg, status,2, status,0
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/0
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11722 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11723 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11724 ;;Total ram usage:        3 bytes
 11725 ;; Hardware stack levels used:    1
 11726 ;; This function calls:
 11727 ;;		Nothing
 11728 ;; This function is called by:
 11729 ;;		_sprintf
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text53
 11734  00CDD4                     __ptext53:
 11735                           	opt stack 0
 11736  00CDD4                     _isdigit:
 11737                           	opt stack 26
 11738                           
 11739                           ;incstack = 0
 11740                           ;isdigit@c stored from wreg
 11741  00CDD4  6E03               	movwf	isdigit@c,c
 11742  00CDD6  0E00               	movlw	0
 11743  00CDD8  6E02               	movwf	_isdigit$2018,c
 11744  00CDDA  0E3A               	movlw	58
 11745  00CDDC  6003               	cpfslt	isdigit@c,c
 11746  00CDDE  D005               	goto	l1059
 11747  00CDE0  0E2F               	movlw	47
 11748  00CDE2  6403               	cpfsgt	isdigit@c,c
 11749  00CDE4  D002               	goto	l1059
 11750  00CDE6  0E01               	movlw	1
 11751  00CDE8  6E02               	movwf	_isdigit$2018,c
 11752  00CDEA                     l1059:
 11753  00CDEA  C002  F001         	movff	_isdigit$2018,??_isdigit
 11754  00CDEE  3001               	rrcf	??_isdigit,w,c
 11755  00CDF0  0012               	return	
 11756  00CDF2                     __end_of_isdigit:
 11757                           	opt stack 0
 11758                           tblptru	equ	0xFF8
 11759                           tblptrh	equ	0xFF7
 11760                           tblptrl	equ	0xFF6
 11761                           tablat	equ	0xFF5
 11762                           prodh	equ	0xFF4
 11763                           prodl	equ	0xFF3
 11764                           intcon	equ	0xFF2
 11765                           indf0	equ	0xFEF
 11766                           postinc0	equ	0xFEE
 11767                           fsr0h	equ	0xFEA
 11768                           fsr0l	equ	0xFE9
 11769                           wreg	equ	0xFE8
 11770                           postinc1	equ	0xFE6
 11771                           postdec1	equ	0xFE5
 11772                           fsr1h	equ	0xFE2
 11773                           fsr1l	equ	0xFE1
 11774                           indf2	equ	0xFDF
 11775                           postinc2	equ	0xFDE
 11776                           postdec2	equ	0xFDD
 11777                           fsr2h	equ	0xFDA
 11778                           fsr2l	equ	0xFD9
 11779                           status	equ	0xFD8
 11780                           
 11781 ;; *************** function ___wmul *****************
 11782 ;; Defined at:
 11783 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
 11784 ;; Parameters:    Size  Location     Type
 11785 ;;  multiplier      2   27[COMRAM] unsigned int 
 11786 ;;  multiplicand    2   29[COMRAM] unsigned int 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  product         2   31[COMRAM] unsigned int 
 11789 ;; Return value:  Size  Location     Type
 11790 ;;                  2   27[COMRAM] unsigned int 
 11791 ;; Registers used:
 11792 ;;		wreg, status,2, status,0, prodl, prodh
 11793 ;; Tracked objects:
 11794 ;;		On entry : 0/0
 11795 ;;		On exit  : 0/0
 11796 ;;		Unchanged: 0/0
 11797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11802 ;;Total ram usage:        6 bytes
 11803 ;; Hardware stack levels used:    1
 11804 ;; This function calls:
 11805 ;;		Nothing
 11806 ;; This function is called by:
 11807 ;;		_covertir_valores_de_array_a_escala_decimal
 11808 ;;		_sprintf
 11809 ;;		_eval_poly
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812                           
 11813                           	psect	text54
 11814  00CE5C                     __ptext54:
 11815                           	opt stack 0
 11816  00CE5C                     ___wmul:
 11817                           	opt stack 26
 11818                           
 11819                           ;incstack = 0
 11820  00CE5C  501C               	movf	___wmul@multiplier,w,c
 11821  00CE5E  021E               	mulwf	___wmul@multiplicand,c
 11822  00CE60  CFF3 F020          	movff	prodl,___wmul@product
 11823  00CE64  CFF4 F021          	movff	prodh,___wmul@product+1
 11824  00CE68  501C               	movf	___wmul@multiplier,w,c
 11825  00CE6A  021F               	mulwf	___wmul@multiplicand+1,c
 11826  00CE6C  50F3               	movf	prodl,w,c
 11827  00CE6E  2621               	addwf	___wmul@product+1,f,c
 11828  00CE70  501D               	movf	___wmul@multiplier+1,w,c
 11829  00CE72  021E               	mulwf	___wmul@multiplicand,c
 11830  00CE74  50F3               	movf	prodl,w,c
 11831  00CE76  2621               	addwf	___wmul@product+1,f,c
 11832  00CE78  C020  F01C         	movff	___wmul@product,?___wmul
 11833  00CE7C  C021  F01D         	movff	___wmul@product+1,?___wmul+1
 11834  00CE80  0012               	return	
 11835  00CE82                     __end_of___wmul:
 11836                           	opt stack 0
 11837                           tblptru	equ	0xFF8
 11838                           tblptrh	equ	0xFF7
 11839                           tblptrl	equ	0xFF6
 11840                           tablat	equ	0xFF5
 11841                           prodh	equ	0xFF4
 11842                           prodl	equ	0xFF3
 11843                           intcon	equ	0xFF2
 11844                           indf0	equ	0xFEF
 11845                           postinc0	equ	0xFEE
 11846                           fsr0h	equ	0xFEA
 11847                           fsr0l	equ	0xFE9
 11848                           wreg	equ	0xFE8
 11849                           postinc1	equ	0xFE6
 11850                           postdec1	equ	0xFE5
 11851                           fsr1h	equ	0xFE2
 11852                           fsr1l	equ	0xFE1
 11853                           indf2	equ	0xFDF
 11854                           postinc2	equ	0xFDE
 11855                           postdec2	equ	0xFDD
 11856                           fsr2h	equ	0xFDA
 11857                           fsr2l	equ	0xFD9
 11858                           status	equ	0xFD8
 11859                           
 11860 ;; *************** function ___lwmod *****************
 11861 ;; Defined at:
 11862 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
 11863 ;; Parameters:    Size  Location     Type
 11864 ;;  dividend        2    7[COMRAM] unsigned int 
 11865 ;;  divisor         2    9[COMRAM] unsigned int 
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;  counter         1   11[COMRAM] unsigned char 
 11868 ;; Return value:  Size  Location     Type
 11869 ;;                  2    7[COMRAM] unsigned int 
 11870 ;; Registers used:
 11871 ;;		wreg, status,2, status,0
 11872 ;; Tracked objects:
 11873 ;;		On entry : 0/0
 11874 ;;		On exit  : 0/0
 11875 ;;		Unchanged: 0/0
 11876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11880 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11881 ;;Total ram usage:        5 bytes
 11882 ;; Hardware stack levels used:    1
 11883 ;; This function calls:
 11884 ;;		Nothing
 11885 ;; This function is called by:
 11886 ;;		_sprintf
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text55
 11891  00CF5E                     __ptext55:
 11892                           	opt stack 0
 11893  00CF5E                     ___lwmod:
 11894                           	opt stack 26
 11895                           
 11896                           ;incstack = 0
 11897  00CF5E  500A               	movf	___lwmod@divisor,w,c
 11898  00CF60  100B               	iorwf	___lwmod@divisor+1,w,c
 11899  00CF62  B4D8               	btfsc	status,2,c
 11900  00CF64  D018               	goto	l1153
 11901  00CF66  0E01               	movlw	1
 11902  00CF68  6E0C               	movwf	___lwmod@counter,c
 11903  00CF6A  D004               	goto	l1148
 11904  00CF6C  90D8               	bcf	status,0,c
 11905  00CF6E  360A               	rlcf	___lwmod@divisor,f,c
 11906  00CF70  360B               	rlcf	___lwmod@divisor+1,f,c
 11907  00CF72  2A0C               	incf	___lwmod@counter,f,c
 11908  00CF74                     l1148:
 11909  00CF74  AE0B               	btfss	___lwmod@divisor+1,7,c
 11910  00CF76  D7FA               	goto	l1149
 11911  00CF78                     u4130:
 11912  00CF78  500A               	movf	___lwmod@divisor,w,c
 11913  00CF7A  5C08               	subwf	___lwmod@dividend,w,c
 11914  00CF7C  500B               	movf	___lwmod@divisor+1,w,c
 11915  00CF7E  5809               	subwfb	___lwmod@dividend+1,w,c
 11916  00CF80  A0D8               	btfss	status,0,c
 11917  00CF82  D004               	goto	l1152
 11918  00CF84  500A               	movf	___lwmod@divisor,w,c
 11919  00CF86  5E08               	subwf	___lwmod@dividend,f,c
 11920  00CF88  500B               	movf	___lwmod@divisor+1,w,c
 11921  00CF8A  5A09               	subwfb	___lwmod@dividend+1,f,c
 11922  00CF8C                     l1152:
 11923  00CF8C  90D8               	bcf	status,0,c
 11924  00CF8E  320B               	rrcf	___lwmod@divisor+1,f,c
 11925  00CF90  320A               	rrcf	___lwmod@divisor,f,c
 11926  00CF92  2E0C               	decfsz	___lwmod@counter,f,c
 11927  00CF94  D7F1               	goto	u4130
 11928  00CF96                     l1153:
 11929  00CF96  C008  F008         	movff	___lwmod@dividend,?___lwmod
 11930  00CF9A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
 11931  00CF9E  0012               	return		;funcret
 11932  00CFA0                     __end_of___lwmod:
 11933                           	opt stack 0
 11934                           tblptru	equ	0xFF8
 11935                           tblptrh	equ	0xFF7
 11936                           tblptrl	equ	0xFF6
 11937                           tablat	equ	0xFF5
 11938                           prodh	equ	0xFF4
 11939                           prodl	equ	0xFF3
 11940                           intcon	equ	0xFF2
 11941                           indf0	equ	0xFEF
 11942                           postinc0	equ	0xFEE
 11943                           fsr0h	equ	0xFEA
 11944                           fsr0l	equ	0xFE9
 11945                           wreg	equ	0xFE8
 11946                           postinc1	equ	0xFE6
 11947                           postdec1	equ	0xFE5
 11948                           fsr1h	equ	0xFE2
 11949                           fsr1l	equ	0xFE1
 11950                           indf2	equ	0xFDF
 11951                           postinc2	equ	0xFDE
 11952                           postdec2	equ	0xFDD
 11953                           fsr2h	equ	0xFDA
 11954                           fsr2l	equ	0xFD9
 11955                           status	equ	0xFD8
 11956                           
 11957 ;; *************** function ___lwdiv *****************
 11958 ;; Defined at:
 11959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  dividend        2    0[COMRAM] unsigned int 
 11962 ;;  divisor         2    2[COMRAM] unsigned int 
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;  quotient        2    4[COMRAM] unsigned int 
 11965 ;;  counter         1    6[COMRAM] unsigned char 
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  2    0[COMRAM] unsigned int 
 11968 ;; Registers used:
 11969 ;;		wreg, status,2, status,0
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11975 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11976 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11978 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11979 ;;Total ram usage:        7 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; This function calls:
 11982 ;;		Nothing
 11983 ;; This function is called by:
 11984 ;;		_sprintf
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988                           	psect	text56
 11989  00D124                     __ptext56:
 11990                           	opt stack 0
 11991  00D124                     ___lwdiv:
 11992                           	opt stack 26
 11993                           
 11994                           ;incstack = 0
 11995  00D124  0E00               	movlw	0
 11996  00D126  6E06               	movwf	___lwdiv@quotient+1,c
 11997  00D128  0E00               	movlw	0
 11998  00D12A  6E05               	movwf	___lwdiv@quotient,c
 11999  00D12C  5003               	movf	___lwdiv@divisor,w,c
 12000  00D12E  1004               	iorwf	___lwdiv@divisor+1,w,c
 12001  00D130  B4D8               	btfsc	status,2,c
 12002  00D132  D01C               	goto	l1143
 12003  00D134  0E01               	movlw	1
 12004  00D136  6E07               	movwf	___lwdiv@counter,c
 12005  00D138  D004               	goto	l1138
 12006  00D13A  90D8               	bcf	status,0,c
 12007  00D13C  3603               	rlcf	___lwdiv@divisor,f,c
 12008  00D13E  3604               	rlcf	___lwdiv@divisor+1,f,c
 12009  00D140  2A07               	incf	___lwdiv@counter,f,c
 12010  00D142                     l1138:
 12011  00D142  AE04               	btfss	___lwdiv@divisor+1,7,c
 12012  00D144  D7FA               	goto	l1139
 12013  00D146                     u4100:
 12014  00D146  90D8               	bcf	status,0,c
 12015  00D148  3605               	rlcf	___lwdiv@quotient,f,c
 12016  00D14A  3606               	rlcf	___lwdiv@quotient+1,f,c
 12017  00D14C  5003               	movf	___lwdiv@divisor,w,c
 12018  00D14E  5C01               	subwf	___lwdiv@dividend,w,c
 12019  00D150  5004               	movf	___lwdiv@divisor+1,w,c
 12020  00D152  5802               	subwfb	___lwdiv@dividend+1,w,c
 12021  00D154  A0D8               	btfss	status,0,c
 12022  00D156  D005               	goto	l1142
 12023  00D158  5003               	movf	___lwdiv@divisor,w,c
 12024  00D15A  5E01               	subwf	___lwdiv@dividend,f,c
 12025  00D15C  5004               	movf	___lwdiv@divisor+1,w,c
 12026  00D15E  5A02               	subwfb	___lwdiv@dividend+1,f,c
 12027  00D160  8005               	bsf	___lwdiv@quotient,0,c
 12028  00D162                     l1142:
 12029  00D162  90D8               	bcf	status,0,c
 12030  00D164  3204               	rrcf	___lwdiv@divisor+1,f,c
 12031  00D166  3203               	rrcf	___lwdiv@divisor,f,c
 12032  00D168  2E07               	decfsz	___lwdiv@counter,f,c
 12033  00D16A  D7ED               	goto	u4100
 12034  00D16C                     l1143:
 12035  00D16C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 12036  00D170  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12037  00D174  0012               	return		;funcret
 12038  00D176                     __end_of___lwdiv:
 12039                           	opt stack 0
 12040                           tblptru	equ	0xFF8
 12041                           tblptrh	equ	0xFF7
 12042                           tblptrl	equ	0xFF6
 12043                           tablat	equ	0xFF5
 12044                           prodh	equ	0xFF4
 12045                           prodl	equ	0xFF3
 12046                           intcon	equ	0xFF2
 12047                           indf0	equ	0xFEF
 12048                           postinc0	equ	0xFEE
 12049                           fsr0h	equ	0xFEA
 12050                           fsr0l	equ	0xFE9
 12051                           wreg	equ	0xFE8
 12052                           postinc1	equ	0xFE6
 12053                           postdec1	equ	0xFE5
 12054                           fsr1h	equ	0xFE2
 12055                           fsr1l	equ	0xFE1
 12056                           indf2	equ	0xFDF
 12057                           postinc2	equ	0xFDE
 12058                           postdec2	equ	0xFDD
 12059                           fsr2h	equ	0xFDA
 12060                           fsr2l	equ	0xFD9
 12061                           status	equ	0xFD8
 12062                           
 12063 ;; *************** function _lcd_putrs *****************
 12064 ;; Defined at:
 12065 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
 12068 ;;		 -> STR_48(9), STR_47(9), STR_46(9), STR_45(9), 
 12069 ;;		 -> STR_44(9), STR_43(9), STR_42(17), STR_41(21), 
 12070 ;;		 -> STR_39(17), STR_38(17), STR_37(9), STR_36(8), 
 12071 ;;		 -> STR_35(9), STR_34(9), STR_33(9), STR_32(9), 
 12072 ;;		 -> STR_31(9), STR_30(8), STR_29(9), STR_28(9), 
 12073 ;;		 -> buffer3(20), STR_21(17), STR_20(17), STR_19(17), 
 12074 ;;		 -> STR_18(17), STR_17(17), STR_16(15), STR_15(8), 
 12075 ;;		 -> STR_13(9), STR_12(9), STR_11(9), STR_10(7), 
 12076 ;;		 -> buffer2(20), 
 12077 ;; Auto vars:     Size  Location     Type
 12078 ;;		None
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  1    wreg      void 
 12081 ;; Registers used:
 12082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12092 ;;Total ram usage:        2 bytes
 12093 ;; Hardware stack levels used:    1
 12094 ;; Hardware stack levels required when called:    4
 12095 ;; This function calls:
 12096 ;;		_lcd_putc
 12097 ;; This function is called by:
 12098 ;;		_setDiaMesAnio
 12099 ;;		_setHoraMinutoSegundo
 12100 ;;		_titila_texto_insert_password
 12101 ;;		_guarda_numero_ingresado
 12102 ;;		_mostrar_presionar_a
 12103 ;;		_resetear_pantalla_ingresar_contrasenia
 12104 ;;		_titila_alarma_activada
 12105 ;;		_activar_alarma
 12106 ;;		_imprimir_reporte
 12107 ;;		_titila_opcion
 12108 ;;		_selecciona_opcion_fecha_hora
 12109 ;;		_ir_a_pantalla_edicion
 12110 ;;		_ir_a_pantalla_ingresar_contrasenia
 12111 ;;		_ir_a_pantalla_editar_contrasenia
 12112 ;;		_editar_fecha_reloj_digital
 12113 ;;		_editar_hora_reloj_digital
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text57
 12118  00D0D2                     __ptext57:
 12119                           	opt stack 0
 12120  00D0D2                     _lcd_putrs:
 12121                           	opt stack 23
 12122                           
 12123                           ;unmc_lcd_216.c: 223: while(*ptr){
 12124                           
 12125                           ;incstack = 0
 12126  00D0D2  D014               	goto	l549
 12127  00D0D4                     
 12128                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
 12129  00D0D4  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 12130  00D0D8  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 12131  00D0DC  6AF8               	clrf	tblptru,c
 12132  00D0DE  0E0E               	movlw	(high __ramtop+-1)
 12133  00D0E0  64F7               	cpfsgt	tblptrh,c
 12134  00D0E2  D003               	bra	u4767
 12135  00D0E4  0008               	tblrd		*
 12136  00D0E6  50F5               	movf	tablat,w,c
 12137  00D0E8  D005               	bra	u4760
 12138  00D0EA                     u4767:
 12139  00D0EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 12140  00D0EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 12141  00D0F2  50EF               	movf	indf0,w,c
 12142  00D0F4                     u4760:
 12143  00D0F4  ECD0  F067         	call	_lcd_putc
 12144  00D0F8  4A09               	infsnz	lcd_putrs@ptr,f,c
 12145  00D0FA  2A0A               	incf	lcd_putrs@ptr+1,f,c
 12146  00D0FC                     l549:
 12147  00D0FC  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 12148  00D100  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 12149  00D104  6AF8               	clrf	tblptru,c
 12150  00D106  0E0E               	movlw	(high __ramtop+-1)
 12151  00D108  64F7               	cpfsgt	tblptrh,c
 12152  00D10A  D003               	bra	u4777
 12153  00D10C  0008               	tblrd		*
 12154  00D10E  50F5               	movf	tablat,w,c
 12155  00D110  D005               	bra	u4770
 12156  00D112                     u4777:
 12157  00D112  CFF6 FFE9          	movff	tblptrl,fsr0l
 12158  00D116  CFF7 FFEA          	movff	tblptrh,fsr0h
 12159  00D11A  50EF               	movf	indf0,w,c
 12160  00D11C                     u4770:
 12161  00D11C  0900               	iorlw	0
 12162  00D11E  B4D8               	btfsc	status,2,c
 12163  00D120  0012               	return	
 12164  00D122  D7D8               	goto	l550
 12165  00D124                     __end_of_lcd_putrs:
 12166                           	opt stack 0
 12167                           tblptru	equ	0xFF8
 12168                           tblptrh	equ	0xFF7
 12169                           tblptrl	equ	0xFF6
 12170                           tablat	equ	0xFF5
 12171                           prodh	equ	0xFF4
 12172                           prodl	equ	0xFF3
 12173                           intcon	equ	0xFF2
 12174                           indf0	equ	0xFEF
 12175                           postinc0	equ	0xFEE
 12176                           fsr0h	equ	0xFEA
 12177                           fsr0l	equ	0xFE9
 12178                           wreg	equ	0xFE8
 12179                           postinc1	equ	0xFE6
 12180                           postdec1	equ	0xFE5
 12181                           fsr1h	equ	0xFE2
 12182                           fsr1l	equ	0xFE1
 12183                           indf2	equ	0xFDF
 12184                           postinc2	equ	0xFDE
 12185                           postdec2	equ	0xFDD
 12186                           fsr2h	equ	0xFDA
 12187                           fsr2l	equ	0xFD9
 12188                           status	equ	0xFD8
 12189                           
 12190 ;; *************** function _lcd_putc *****************
 12191 ;; Defined at:
 12192 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 12193 ;; Parameters:    Size  Location     Type
 12194 ;;  c               1    wreg     unsigned char 
 12195 ;; Auto vars:     Size  Location     Type
 12196 ;;  c               1    7[COMRAM] unsigned char 
 12197 ;; Return value:  Size  Location     Type
 12198 ;;                  1    wreg      void 
 12199 ;; Registers used:
 12200 ;;		wreg, status,2, status,0, cstack
 12201 ;; Tracked objects:
 12202 ;;		On entry : 0/0
 12203 ;;		On exit  : 0/0
 12204 ;;		Unchanged: 0/0
 12205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12210 ;;Total ram usage:        1 bytes
 12211 ;; Hardware stack levels used:    1
 12212 ;; Hardware stack levels required when called:    3
 12213 ;; This function calls:
 12214 ;;		_lcd_gotoxy
 12215 ;;		_lcd_send_byte
 12216 ;; This function is called by:
 12217 ;;		_lcd_putrs
 12218 ;;		_lcd_puts
 12219 ;; This function uses a non-reentrant model
 12220 ;;
 12221                           
 12222                           	psect	text58
 12223  00CFA0                     __ptext58:
 12224                           	opt stack 0
 12225  00CFA0                     _lcd_putc:
 12226                           	opt stack 23
 12227                           
 12228                           ;incstack = 0
 12229                           ;lcd_putc@c stored from wreg
 12230  00CFA0  6E08               	movwf	lcd_putc@c,c
 12231                           
 12232                           ;unmc_lcd_216.c: 173: switch(c){
 12233  00CFA2  D018               	goto	l528
 12234  00CFA4                     
 12235                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
 12236  00CFA4  0E01               	movlw	1
 12237  00CFA6  6E03               	movwf	lcd_send_byte@n,c
 12238  00CFA8  0E00               	movlw	0
 12239  00CFAA  EC41  F067         	call	_lcd_send_byte
 12240                           
 12241                           ;unmc_lcd_216.c: 176: break;
 12242  00CFAE  0012               	return	
 12243  00CFB0                     
 12244                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
 12245  00CFB0  0E02               	movlw	2
 12246  00CFB2  6E05               	movwf	lcd_gotoxy@y,c
 12247  00CFB4  0E01               	movlw	1
 12248  00CFB6  ECF9  F066         	call	_lcd_gotoxy
 12249                           
 12250                           ;unmc_lcd_216.c: 179: break;
 12251  00CFBA  0012               	return	
 12252  00CFBC                     
 12253                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
 12254  00CFBC  0E10               	movlw	16
 12255  00CFBE  6E03               	movwf	lcd_send_byte@n,c
 12256  00CFC0  0E00               	movlw	0
 12257  00CFC2  EC41  F067         	call	_lcd_send_byte
 12258                           
 12259                           ;unmc_lcd_216.c: 182: break;
 12260  00CFC6  0012               	return	
 12261  00CFC8                     
 12262                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
 12263  00CFC8  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
 12264  00CFCC  0E01               	movlw	1
 12265  00CFCE  EC41  F067         	call	_lcd_send_byte
 12266                           
 12267                           ;unmc_lcd_216.c: 186: }
 12268                           
 12269                           ;unmc_lcd_216.c: 185: break;
 12270  00CFD2  0012               	return	
 12271  00CFD4                     l528:
 12272  00CFD4  5008               	movf	lcd_putc@c,w,c
 12273                           
 12274                           ; Switch size 1, requested type "space"
 12275                           ; Number of cases is 3, Range of values is 8 to 12
 12276                           ; switch strategies available:
 12277                           ; Name         Instructions Cycles
 12278                           ; simple_byte           10     6 (average)
 12279                           ;	Chosen strategy is simple_byte
 12280  00CFD6  0A08               	xorlw	8	; case 8
 12281  00CFD8  B4D8               	btfsc	status,2,c
 12282  00CFDA  D7F0               	goto	l532
 12283  00CFDC  0A02               	xorlw	2	; case 10
 12284  00CFDE  B4D8               	btfsc	status,2,c
 12285  00CFE0  D7E7               	goto	l531
 12286  00CFE2  0A06               	xorlw	6	; case 12
 12287  00CFE4  B4D8               	btfsc	status,2,c
 12288  00CFE6  D7DE               	goto	l529
 12289  00CFE8  D7EF               	goto	l533
 12290  00CFEA                     __end_of_lcd_putc:
 12291                           	opt stack 0
 12292                           tblptru	equ	0xFF8
 12293                           tblptrh	equ	0xFF7
 12294                           tblptrl	equ	0xFF6
 12295                           tablat	equ	0xFF5
 12296                           prodh	equ	0xFF4
 12297                           prodl	equ	0xFF3
 12298                           intcon	equ	0xFF2
 12299                           indf0	equ	0xFEF
 12300                           postinc0	equ	0xFEE
 12301                           fsr0h	equ	0xFEA
 12302                           fsr0l	equ	0xFE9
 12303                           wreg	equ	0xFE8
 12304                           postinc1	equ	0xFE6
 12305                           postdec1	equ	0xFE5
 12306                           fsr1h	equ	0xFE2
 12307                           fsr1l	equ	0xFE1
 12308                           indf2	equ	0xFDF
 12309                           postinc2	equ	0xFDE
 12310                           postdec2	equ	0xFDD
 12311                           fsr2h	equ	0xFDA
 12312                           fsr2l	equ	0xFD9
 12313                           status	equ	0xFD8
 12314                           
 12315 ;; *************** function _lcd_gotoxy *****************
 12316 ;; Defined at:
 12317 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  x               1    wreg     unsigned char 
 12320 ;;  y               1    4[COMRAM] unsigned char 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  x               1    5[COMRAM] unsigned char 
 12323 ;;  address         1    6[COMRAM] unsigned char 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, status,2, status,0, cstack
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12333 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12336 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12337 ;;Total ram usage:        3 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    2
 12340 ;; This function calls:
 12341 ;;		_lcd_send_byte
 12342 ;; This function is called by:
 12343 ;;		_setDiaMesAnio
 12344 ;;		_setHoraMinutoSegundo
 12345 ;;		_titila_texto_insert_password
 12346 ;;		_guarda_numero_ingresado
 12347 ;;		_mostrar_presionar_a
 12348 ;;		_resetear_pantalla_ingresar_contrasenia
 12349 ;;		_titila_alarma_activada
 12350 ;;		_activar_alarma
 12351 ;;		_imprimir_reporte
 12352 ;;		_titila_opcion
 12353 ;;		_selecciona_opcion_fecha_hora
 12354 ;;		_ir_a_pantalla_edicion
 12355 ;;		_ir_a_pantalla_ingresar_contrasenia
 12356 ;;		_ir_a_pantalla_editar_contrasenia
 12357 ;;		_editar_fecha_reloj_digital
 12358 ;;		_editar_hora_reloj_digital
 12359 ;;		_lcd_putc
 12360 ;; This function uses a non-reentrant model
 12361 ;;
 12362                           
 12363                           	psect	text59
 12364  00CDF2                     __ptext59:
 12365                           	opt stack 0
 12366  00CDF2                     _lcd_gotoxy:
 12367                           	opt stack 23
 12368                           
 12369                           ;incstack = 0
 12370                           ;lcd_gotoxy@x stored from wreg
 12371  00CDF2  6E06               	movwf	lcd_gotoxy@x,c
 12372                           
 12373                           ;unmc_lcd_216.c: 159: int8 address;
 12374                           ;unmc_lcd_216.c: 161: if(y != 1)
 12375  00CDF4  0405               	decf	lcd_gotoxy@y,w,c
 12376  00CDF6  B4D8               	btfsc	status,2,c
 12377  00CDF8  D002               	goto	l523
 12378                           
 12379                           ;unmc_lcd_216.c: 162: address = 0x40;
 12380  00CDFA  0E40               	movlw	64
 12381  00CDFC  D001               	goto	L3
 12382  00CDFE                     l523:
 12383                           
 12384                           ;unmc_lcd_216.c: 163: else
 12385                           ;unmc_lcd_216.c: 164: address=0;
 12386  00CDFE  0E00               	movlw	0
 12387  00CE00                     L3:
 12388  00CE00  6E07               	movwf	lcd_gotoxy@address,c
 12389                           
 12390                           ;unmc_lcd_216.c: 166: address += x-1;
 12391  00CE02  0406               	decf	lcd_gotoxy@x,w,c
 12392  00CE04  2607               	addwf	lcd_gotoxy@address,f,c
 12393                           
 12394                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
 12395  00CE06  5007               	movf	lcd_gotoxy@address,w,c
 12396  00CE08  0980               	iorlw	128
 12397  00CE0A  6E03               	movwf	lcd_send_byte@n,c
 12398  00CE0C  0E00               	movlw	0
 12399  00CE0E  EC41  F067         	call	_lcd_send_byte
 12400  00CE12  0012               	return		;funcret
 12401  00CE14                     __end_of_lcd_gotoxy:
 12402                           	opt stack 0
 12403                           tblptru	equ	0xFF8
 12404                           tblptrh	equ	0xFF7
 12405                           tblptrl	equ	0xFF6
 12406                           tablat	equ	0xFF5
 12407                           prodh	equ	0xFF4
 12408                           prodl	equ	0xFF3
 12409                           intcon	equ	0xFF2
 12410                           indf0	equ	0xFEF
 12411                           postinc0	equ	0xFEE
 12412                           fsr0h	equ	0xFEA
 12413                           fsr0l	equ	0xFE9
 12414                           wreg	equ	0xFE8
 12415                           postinc1	equ	0xFE6
 12416                           postdec1	equ	0xFE5
 12417                           fsr1h	equ	0xFE2
 12418                           fsr1l	equ	0xFE1
 12419                           indf2	equ	0xFDF
 12420                           postinc2	equ	0xFDE
 12421                           postdec2	equ	0xFDD
 12422                           fsr2h	equ	0xFDA
 12423                           fsr2l	equ	0xFD9
 12424                           status	equ	0xFD8
 12425                           
 12426 ;; *************** function _lcd_send_byte *****************
 12427 ;; Defined at:
 12428 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;  address         1    wreg     unsigned char 
 12431 ;;  n               1    2[COMRAM] unsigned char 
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;  address         1    3[COMRAM] unsigned char 
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  1    wreg      void 
 12436 ;; Registers used:
 12437 ;;		wreg, status,2, status,0, cstack
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/0
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12443 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12447 ;;Total ram usage:        2 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:    1
 12450 ;; This function calls:
 12451 ;;		_Delay100TCYx
 12452 ;;		_lcd_send_nibble
 12453 ;; This function is called by:
 12454 ;;		_lcd_init
 12455 ;;		_lcd_gotoxy
 12456 ;;		_lcd_putc
 12457 ;;		_lcd_comand
 12458 ;;		_lcd_setcursor_vb
 12459 ;; This function uses a non-reentrant model
 12460 ;;
 12461                           
 12462                           	psect	text60
 12463  00CE82                     __ptext60:
 12464                           	opt stack 0
 12465  00CE82                     _lcd_send_byte:
 12466                           	opt stack 24
 12467                           
 12468                           ;incstack = 0
 12469                           ;lcd_send_byte@address stored from wreg
 12470  00CE82  6E04               	movwf	lcd_send_byte@address,c
 12471                           
 12472                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
 12473  00CE84  968A               	bcf	3978,3,c	;volatile
 12474                           
 12475                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
 12476  00CE86  0E02               	movlw	2
 12477  00CE88  ECBA  F066         	call	_Delay100TCYx
 12478                           
 12479                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
 12480  00CE8C  9893               	bcf	3987,4,c	;volatile
 12481                           
 12482                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
 12483  00CE8E  9A93               	bcf	3987,5,c	;volatile
 12484                           
 12485                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
 12486  00CE90  9C93               	bcf	3987,6,c	;volatile
 12487                           
 12488                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
 12489  00CE92  9E93               	bcf	3987,7,c	;volatile
 12490                           
 12491                           ;unmc_lcd_216.c: 101: if(address)
 12492  00CE94  5004               	movf	lcd_send_byte@address,w,c
 12493  00CE96  B4D8               	btfsc	status,2,c
 12494  00CE98  D002               	goto	l511
 12495                           
 12496                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
 12497  00CE9A  868A               	bsf	3978,3,c	;volatile
 12498  00CE9C  D001               	goto	l512
 12499  00CE9E                     l511:
 12500                           
 12501                           ;unmc_lcd_216.c: 103: else
 12502                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
 12503  00CE9E  968A               	bcf	3978,3,c	;volatile
 12504  00CEA0                     l512:
 12505                           
 12506                           ;unmc_lcd_216.c: 106: __nop();
 12507  00CEA0  F000               	nop	
 12508                           
 12509                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
 12510  00CEA2  3803               	swapf	lcd_send_byte@n,w,c
 12511  00CEA4  0B0F               	andlw	15
 12512  00CEA6  EC53  F069         	call	_lcd_send_nibble
 12513                           
 12514                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
 12515  00CEAA  5003               	movf	lcd_send_byte@n,w,c
 12516  00CEAC  0B0F               	andlw	15
 12517  00CEAE  EC53  F069         	call	_lcd_send_nibble
 12518  00CEB2  0012               	return		;funcret
 12519  00CEB4                     __end_of_lcd_send_byte:
 12520                           	opt stack 0
 12521                           tblptru	equ	0xFF8
 12522                           tblptrh	equ	0xFF7
 12523                           tblptrl	equ	0xFF6
 12524                           tablat	equ	0xFF5
 12525                           prodh	equ	0xFF4
 12526                           prodl	equ	0xFF3
 12527                           intcon	equ	0xFF2
 12528                           indf0	equ	0xFEF
 12529                           postinc0	equ	0xFEE
 12530                           fsr0h	equ	0xFEA
 12531                           fsr0l	equ	0xFE9
 12532                           wreg	equ	0xFE8
 12533                           postinc1	equ	0xFE6
 12534                           postdec1	equ	0xFE5
 12535                           fsr1h	equ	0xFE2
 12536                           fsr1l	equ	0xFE1
 12537                           indf2	equ	0xFDF
 12538                           postinc2	equ	0xFDE
 12539                           postdec2	equ	0xFDD
 12540                           fsr2h	equ	0xFDA
 12541                           fsr2l	equ	0xFD9
 12542                           status	equ	0xFD8
 12543                           
 12544 ;; *************** function _lcd_send_nibble *****************
 12545 ;; Defined at:
 12546 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 12547 ;; Parameters:    Size  Location     Type
 12548 ;;  nibble          1    wreg     unsigned char 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;  nibble          1    1[COMRAM] unsigned char 
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  1    wreg      void 
 12553 ;; Registers used:
 12554 ;;		wreg, status,2, status,0
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12564 ;;Total ram usage:        2 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; This function calls:
 12567 ;;		Nothing
 12568 ;; This function is called by:
 12569 ;;		_lcd_send_byte
 12570 ;;		_lcd_init
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           	psect	text61
 12575  00D2A6                     __ptext61:
 12576                           	opt stack 0
 12577  00D2A6                     _lcd_send_nibble:
 12578                           	opt stack 24
 12579                           
 12580                           ;incstack = 0
 12581                           ;lcd_send_nibble@nibble stored from wreg
 12582  00D2A6  6E02               	movwf	lcd_send_nibble@nibble,c
 12583                           
 12584                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
 12585  00D2A8  A002               	btfss	lcd_send_nibble@nibble,0,c
 12586  00D2AA  D003               	goto	u3390
 12587  00D2AC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12588  00D2AE  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 12589  00D2B0  D001               	goto	u3408
 12590  00D2B2                     u3390:
 12591  00D2B2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12592  00D2B4                     u3408:
 12593  00D2B4  3A01               	swapf	??_lcd_send_nibble,f,c
 12594  00D2B6  508A               	movf	3978,w,c	;volatile
 12595  00D2B8  1801               	xorwf	??_lcd_send_nibble,w,c
 12596  00D2BA  0BEF               	andlw	-17
 12597  00D2BC  1801               	xorwf	??_lcd_send_nibble,w,c
 12598  00D2BE  6E8A               	movwf	3978,c	;volatile
 12599                           
 12600                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
 12601  00D2C0  A202               	btfss	lcd_send_nibble@nibble,1,c
 12602  00D2C2  D003               	goto	u3410
 12603  00D2C4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12604  00D2C6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 12605  00D2C8  D001               	goto	u3428
 12606  00D2CA                     u3410:
 12607  00D2CA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12608  00D2CC                     u3428:
 12609  00D2CC  3A01               	swapf	??_lcd_send_nibble,f,c
 12610  00D2CE  4601               	rlncf	??_lcd_send_nibble,f,c
 12611  00D2D0  508A               	movf	3978,w,c	;volatile
 12612  00D2D2  1801               	xorwf	??_lcd_send_nibble,w,c
 12613  00D2D4  0BDF               	andlw	-33
 12614  00D2D6  1801               	xorwf	??_lcd_send_nibble,w,c
 12615  00D2D8  6E8A               	movwf	3978,c	;volatile
 12616                           
 12617                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
 12618  00D2DA  A402               	btfss	lcd_send_nibble@nibble,2,c
 12619  00D2DC  D003               	goto	u3430
 12620  00D2DE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12621  00D2E0  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 12622  00D2E2  D001               	goto	u3448
 12623  00D2E4                     u3430:
 12624  00D2E4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12625  00D2E6                     u3448:
 12626  00D2E6  3A01               	swapf	??_lcd_send_nibble,f,c
 12627  00D2E8  4601               	rlncf	??_lcd_send_nibble,f,c
 12628  00D2EA  4601               	rlncf	??_lcd_send_nibble,f,c
 12629  00D2EC  508A               	movf	3978,w,c	;volatile
 12630  00D2EE  1801               	xorwf	??_lcd_send_nibble,w,c
 12631  00D2F0  0BBF               	andlw	-65
 12632  00D2F2  1801               	xorwf	??_lcd_send_nibble,w,c
 12633  00D2F4  6E8A               	movwf	3978,c	;volatile
 12634                           
 12635                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
 12636  00D2F6  A602               	btfss	lcd_send_nibble@nibble,3,c
 12637  00D2F8  D003               	goto	u3450
 12638  00D2FA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12639  00D2FC  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 12640  00D2FE  D001               	goto	u3468
 12641  00D300                     u3450:
 12642  00D300  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 12643  00D302                     u3468:
 12644  00D302  3201               	rrcf	??_lcd_send_nibble,f,c
 12645  00D304  3201               	rrcf	??_lcd_send_nibble,f,c
 12646  00D306  508A               	movf	3978,w,c	;volatile
 12647  00D308  1801               	xorwf	??_lcd_send_nibble,w,c
 12648  00D30A  0B7F               	andlw	-129
 12649  00D30C  1801               	xorwf	??_lcd_send_nibble,w,c
 12650  00D30E  6E8A               	movwf	3978,c	;volatile
 12651                           
 12652                           ;unmc_lcd_216.c: 32: __nop();
 12653  00D310  F000               	nop	
 12654                           
 12655                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
 12656  00D312  848A               	bsf	3978,2,c	;volatile
 12657                           
 12658                           ;unmc_lcd_216.c: 34: __nop();__nop();
 12659  00D314  F000               	nop	
 12660  00D316  F000               	nop	
 12661                           
 12662                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
 12663  00D318  948A               	bcf	3978,2,c	;volatile
 12664  00D31A  0012               	return		;funcret
 12665  00D31C                     __end_of_lcd_send_nibble:
 12666                           	opt stack 0
 12667                           tblptru	equ	0xFF8
 12668                           tblptrh	equ	0xFF7
 12669                           tblptrl	equ	0xFF6
 12670                           tablat	equ	0xFF5
 12671                           prodh	equ	0xFF4
 12672                           prodl	equ	0xFF3
 12673                           intcon	equ	0xFF2
 12674                           indf0	equ	0xFEF
 12675                           postinc0	equ	0xFEE
 12676                           fsr0h	equ	0xFEA
 12677                           fsr0l	equ	0xFE9
 12678                           wreg	equ	0xFE8
 12679                           postinc1	equ	0xFE6
 12680                           postdec1	equ	0xFE5
 12681                           fsr1h	equ	0xFE2
 12682                           fsr1l	equ	0xFE1
 12683                           indf2	equ	0xFDF
 12684                           postinc2	equ	0xFDE
 12685                           postdec2	equ	0xFDD
 12686                           fsr2h	equ	0xFDA
 12687                           fsr2l	equ	0xFD9
 12688                           status	equ	0xFD8
 12689                           
 12690 ;; *************** function _Delay100TCYx *****************
 12691 ;; Defined at:
 12692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;  unit            1    wreg     unsigned char 
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;  unit            1    0[COMRAM] unsigned char 
 12697 ;; Return value:  Size  Location     Type
 12698 ;;                  1    wreg      void 
 12699 ;; Registers used:
 12700 ;;		wreg
 12701 ;; Tracked objects:
 12702 ;;		On entry : 0/0
 12703 ;;		On exit  : 0/0
 12704 ;;		Unchanged: 0/0
 12705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12710 ;;Total ram usage:        1 bytes
 12711 ;; Hardware stack levels used:    1
 12712 ;; This function calls:
 12713 ;;		Nothing
 12714 ;; This function is called by:
 12715 ;;		_lcd_send_byte
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           	psect	text62
 12720  00CD74                     __ptext62:
 12721                           	opt stack 0
 12722  00CD74                     _Delay100TCYx:
 12723                           	opt stack 24
 12724                           
 12725                           ;incstack = 0
 12726                           ;Delay100TCYx@unit stored from wreg
 12727  00CD74  6E01               	movwf	Delay100TCYx@unit,c
 12728  00CD76                     l910:
 12729  00CD76  0E21               	movlw	33
 12730  00CD78                     u7227:
 12731  00CD78  2EE8               	decfsz	wreg,f,c
 12732  00CD7A  D7FE               	bra	u7227
 12733  00CD7C  F000               	nop	
 12734  00CD7E  2E01               	decfsz	Delay100TCYx@unit,f,c
 12735  00CD80  D7FA               	goto	l910
 12736  00CD82  0012               	return	
 12737  00CD84                     __end_of_Delay100TCYx:
 12738                           	opt stack 0
 12739                           tblptru	equ	0xFF8
 12740                           tblptrh	equ	0xFF7
 12741                           tblptrl	equ	0xFF6
 12742                           tablat	equ	0xFF5
 12743                           prodh	equ	0xFF4
 12744                           prodl	equ	0xFF3
 12745                           intcon	equ	0xFF2
 12746                           indf0	equ	0xFEF
 12747                           postinc0	equ	0xFEE
 12748                           fsr0h	equ	0xFEA
 12749                           fsr0l	equ	0xFE9
 12750                           wreg	equ	0xFE8
 12751                           postinc1	equ	0xFE6
 12752                           postdec1	equ	0xFE5
 12753                           fsr1h	equ	0xFE2
 12754                           fsr1l	equ	0xFE1
 12755                           indf2	equ	0xFDF
 12756                           postinc2	equ	0xFDE
 12757                           postdec2	equ	0xFDD
 12758                           fsr2h	equ	0xFDA
 12759                           fsr2l	equ	0xFD9
 12760                           status	equ	0xFD8
 12761                           
 12762 ;; *************** function _cambiar_opcion *****************
 12763 ;; Defined at:
 12764 ;;		line 255 in file "main.c"
 12765 ;; Parameters:    Size  Location     Type
 12766 ;;		None
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  1    wreg      void 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, status,0
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12782 ;;Total ram usage:        1 bytes
 12783 ;; Hardware stack levels used:    1
 12784 ;; This function calls:
 12785 ;;		Nothing
 12786 ;; This function is called by:
 12787 ;;		_imprimir_reporte
 12788 ;;		_ir_a_pantalla_edicion
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           	psect	text63
 12793  00D9D8                     __ptext63:
 12794                           	opt stack 0
 12795  00D9D8                     _cambiar_opcion:
 12796                           	opt stack 25
 12797                           
 12798                           ;main.c: 256: LATAbits.LATA0 = 0;
 12799                           
 12800                           ;incstack = 0
 12801  00D9D8  9089               	bcf	3977,0,c	;volatile
 12802                           
 12803                           ;main.c: 257: LATAbits.LATA1 = 0;
 12804  00D9DA  9289               	bcf	3977,1,c	;volatile
 12805                           
 12806                           ;main.c: 258: LATAbits.LATA2 = 1;
 12807  00D9DC  8489               	bsf	3977,2,c	;volatile
 12808                           
 12809                           ;main.c: 259: LATAbits.LATA3 = 0;
 12810  00D9DE  9689               	bcf	3977,3,c	;volatile
 12811                           
 12812                           ;main.c: 260: if (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
 12813  00D9E0  B482               	btfsc	3970,2,c	;volatile
 12814  00D9E2  A489               	btfss	3977,2,c	;volatile
 12815  00D9E4  D01D               	goto	u5590
 12816                           
 12817                           ;main.c: 261: if (boton_seleccionar == 4) {
 12818  00D9E6  0E04               	movlw	4
 12819  00D9E8  0100               	movlb	0	; () banked
 12820  00D9EA  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 12821  00D9EC  0100               	movlb	0	; () banked
 12822  00D9EE  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 12823  00D9F0  A4D8               	btfss	status,2,c
 12824  00D9F2  D006               	goto	l283
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;main.c: 262: boton_seleccionar = 0;
 12828  00D9F4  0E00               	movlw	0
 12829  00D9F6  0100               	movlb	0	; () banked
 12830  00D9F8  6F91               	movwf	(_boton_seleccionar+1)& (0+255),b
 12831  00D9FA  0E00               	movlw	0
 12832  00D9FC  6F90               	movwf	_boton_seleccionar& (0+255),b
 12833                           
 12834                           ;main.c: 263: } else {
 12835  00D9FE  D00C               	goto	l285
 12836  00DA00                     l283:
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;main.c: 264: boton_seleccionar++;
 12840                           
 12841                           ; BSR set to: 0
 12842  00DA00  0100               	movlb	0	; () banked
 12843  00DA02  4B90               	infsnz	_boton_seleccionar& (0+255),f,b
 12844  00DA04  2B91               	incf	(_boton_seleccionar+1)& (0+255),f,b
 12845                           
 12846                           ; BSR set to: 0
 12847                           ;main.c: 265: }
 12848                           ;main.c: 266: while (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
 12849  00DA06  D008               	goto	l285
 12850  00DA08                     
 12851                           ;main.c: 267: _delay((unsigned long)((40)*(8000000/4000.0)));
 12852                           
 12853                           ; BSR set to: 0
 12854  00DA08  0E68               	movlw	104
 12855  00DA0A  6E01               	movwf	??_cambiar_opcion& (0+255),c
 12856  00DA0C  0EE4               	movlw	228
 12857  00DA0E                     u7237:
 12858  00DA0E  2EE8               	decfsz	wreg,f,c
 12859  00DA10  D7FE               	bra	u7237
 12860  00DA12  2E01               	decfsz	??_cambiar_opcion& (0+255),f,c
 12861  00DA14  D7FC               	bra	u7237
 12862  00DA16  D000               	nop2	
 12863  00DA18                     l285:
 12864  00DA18  A482               	btfss	3970,2,c	;volatile
 12865  00DA1A  D002               	goto	u5590
 12866  00DA1C  B489               	btfsc	3977,2,c	;volatile
 12867  00DA1E  D7F4               	goto	l286
 12868  00DA20                     u5590:
 12869                           
 12870                           ;main.c: 268: }
 12871                           ;main.c: 269: }
 12872                           ;main.c: 271: LATAbits.LATA0 = 0;
 12873  00DA20  9089               	bcf	3977,0,c	;volatile
 12874                           
 12875                           ;main.c: 272: LATAbits.LATA1 = 0;
 12876  00DA22  9289               	bcf	3977,1,c	;volatile
 12877                           
 12878                           ;main.c: 273: LATAbits.LATA2 = 0;
 12879  00DA24  9489               	bcf	3977,2,c	;volatile
 12880                           
 12881                           ;main.c: 274: LATAbits.LATA3 = 1;
 12882  00DA26  8689               	bsf	3977,3,c	;volatile
 12883                           
 12884                           ;main.c: 275: if (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
 12885  00DA28  A482               	btfss	3970,2,c	;volatile
 12886  00DA2A  0012               	return	
 12887  00DA2C  A689               	btfss	3977,3,c	;volatile
 12888  00DA2E  0012               	return	
 12889                           
 12890                           ;main.c: 276: if (boton_seleccionar == 0) {
 12891  00DA30  0100               	movlb	0	; () banked
 12892  00DA32  5190               	movf	_boton_seleccionar& (0+255),w,b
 12893  00DA34  0100               	movlb	0	; () banked
 12894  00DA36  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 12895  00DA38  A4D8               	btfss	status,2,c
 12896  00DA3A  D006               	goto	l291
 12897                           
 12898                           ; BSR set to: 0
 12899                           ;main.c: 277: boton_seleccionar = 4;
 12900  00DA3C  0E00               	movlw	0
 12901  00DA3E  0100               	movlb	0	; () banked
 12902  00DA40  6F91               	movwf	(_boton_seleccionar+1)& (0+255),b
 12903  00DA42  0E04               	movlw	4
 12904  00DA44  6F90               	movwf	_boton_seleccionar& (0+255),b
 12905                           
 12906                           ;main.c: 278: } else {
 12907  00DA46  D00D               	goto	l293
 12908  00DA48                     l291:
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;main.c: 279: boton_seleccionar--;
 12912                           
 12913                           ; BSR set to: 0
 12914  00DA48  0100               	movlb	0	; () banked
 12915  00DA4A  0790               	decf	_boton_seleccionar& (0+255),f,b
 12916  00DA4C  A0D8               	btfss	status,0,c
 12917  00DA4E  0791               	decf	(_boton_seleccionar+1)& (0+255),f,b
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;main.c: 280: }
 12921                           ;main.c: 281: while (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
 12922  00DA50  D008               	goto	l293
 12923  00DA52                     
 12924                           ;main.c: 282: _delay((unsigned long)((40)*(8000000/4000.0)));
 12925                           
 12926                           ; BSR set to: 0
 12927  00DA52  0E68               	movlw	104
 12928  00DA54  6E01               	movwf	??_cambiar_opcion& (0+255),c
 12929  00DA56  0EE4               	movlw	228
 12930  00DA58                     u7247:
 12931  00DA58  2EE8               	decfsz	wreg,f,c
 12932  00DA5A  D7FE               	bra	u7247
 12933  00DA5C  2E01               	decfsz	??_cambiar_opcion& (0+255),f,c
 12934  00DA5E  D7FC               	bra	u7247
 12935  00DA60  D000               	nop2	
 12936  00DA62                     l293:
 12937  00DA62  A482               	btfss	3970,2,c	;volatile
 12938  00DA64  0012               	return	
 12939  00DA66  A689               	btfss	3977,3,c	;volatile
 12940  00DA68  0012               	return	
 12941  00DA6A  D7F3               	goto	l294
 12942  00DA6C                     __end_of_cambiar_opcion:
 12943                           	opt stack 0
 12944                           tblptru	equ	0xFF8
 12945                           tblptrh	equ	0xFF7
 12946                           tblptrl	equ	0xFF6
 12947                           tablat	equ	0xFF5
 12948                           prodh	equ	0xFF4
 12949                           prodl	equ	0xFF3
 12950                           intcon	equ	0xFF2
 12951                           indf0	equ	0xFEF
 12952                           postinc0	equ	0xFEE
 12953                           fsr0h	equ	0xFEA
 12954                           fsr0l	equ	0xFE9
 12955                           wreg	equ	0xFE8
 12956                           postinc1	equ	0xFE6
 12957                           postdec1	equ	0xFE5
 12958                           fsr1h	equ	0xFE2
 12959                           fsr1l	equ	0xFE1
 12960                           indf2	equ	0xFDF
 12961                           postinc2	equ	0xFDE
 12962                           postdec2	equ	0xFDD
 12963                           fsr2h	equ	0xFDA
 12964                           fsr2l	equ	0xFD9
 12965                           status	equ	0xFD8
 12966                           
 12967 ;; *************** function _Read_RTC *****************
 12968 ;; Defined at:
 12969 ;;		line 112 in file "../../headers\unmc_rtcc_01.h"
 12970 ;; Parameters:    Size  Location     Type
 12971 ;;		None
 12972 ;; Auto vars:     Size  Location     Type
 12973 ;;		None
 12974 ;; Return value:  Size  Location     Type
 12975 ;;                  1    wreg      void 
 12976 ;; Registers used:
 12977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12978 ;; Tracked objects:
 12979 ;;		On entry : 0/0
 12980 ;;		On exit  : 0/0
 12981 ;;		Unchanged: 0/0
 12982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12987 ;;Total ram usage:        0 bytes
 12988 ;; Hardware stack levels used:    1
 12989 ;; Hardware stack levels required when called:    1
 12990 ;; This function calls:
 12991 ;;		_RtccReadDate
 12992 ;;		_RtccReadTime
 12993 ;; This function is called by:
 12994 ;;		_ir_a_pantalla_edicion
 12995 ;;		_main
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text64
 13000  00E8AC                     __ptext64:
 13001                           	opt stack 0
 13002  00E8AC                     _Read_RTC:
 13003                           	opt stack 25
 13004                           
 13005                           ;headers\unmc_rtcc_01.h: 115: RtccReadTime(&RtccTime);
 13006                           
 13007                           ;incstack = 0
 13008  00E8AC  0EB9               	movlw	low _RtccTime
 13009  00E8AE  6E01               	movwf	RtccReadTime@pTm,c
 13010  00E8B0  0E00               	movlw	high _RtccTime
 13011  00E8B2  6E02               	movwf	RtccReadTime@pTm+1,c
 13012  00E8B4  EC1C  F069         	call	_RtccReadTime	;wreg free
 13013                           
 13014                           ;headers\unmc_rtcc_01.h: 116: segundo_u=(RtccTime.f.sec & 0x0F);
 13015  00E8B8  0100               	movlb	0	; () banked
 13016  00E8BA  51BA               	movf	(_RtccTime+1)& (0+255),w,b
 13017  00E8BC  0B0F               	andlw	15
 13018  00E8BE  0100               	movlb	0	; () banked
 13019  00E8C0  6FF5               	movwf	_segundo_u& (0+255),b
 13020                           
 13021                           ; BSR set to: 0
 13022                           ;headers\unmc_rtcc_01.h: 117: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
 13023  00E8C2  0100               	movlb	0	; () banked
 13024  00E8C4  39BA               	swapf	(_RtccTime+1)& (0+255),w,b
 13025  00E8C6  0B0F               	andlw	15
 13026  00E8C8  0B0F               	andlw	15
 13027  00E8CA  0100               	movlb	0	; () banked
 13028  00E8CC  6FF4               	movwf	_segundo_d& (0+255),b
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;headers\unmc_rtcc_01.h: 118: minuto_u=(RtccTime.f.min & 0x0F);
 13032  00E8CE  0100               	movlb	0	; () banked
 13033  00E8D0  51BB               	movf	(_RtccTime+2)& (0+255),w,b
 13034  00E8D2  0B0F               	andlw	15
 13035  00E8D4  0100               	movlb	0	; () banked
 13036  00E8D6  6FF3               	movwf	_minuto_u& (0+255),b
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;headers\unmc_rtcc_01.h: 119: minuto_d=((RtccTime.f.min & 0xF0)>>4);
 13040  00E8D8  0100               	movlb	0	; () banked
 13041  00E8DA  39BB               	swapf	(_RtccTime+2)& (0+255),w,b
 13042  00E8DC  0B0F               	andlw	15
 13043  00E8DE  0B0F               	andlw	15
 13044  00E8E0  0100               	movlb	0	; () banked
 13045  00E8E2  6FF2               	movwf	_minuto_d& (0+255),b
 13046                           
 13047                           ; BSR set to: 0
 13048                           ;headers\unmc_rtcc_01.h: 120: hora_u=(RtccTime.f.hour & 0x0F);
 13049  00E8E4  0100               	movlb	0	; () banked
 13050  00E8E6  51BC               	movf	(_RtccTime+3)& (0+255),w,b
 13051  00E8E8  0B0F               	andlw	15
 13052  00E8EA  0100               	movlb	0	; () banked
 13053  00E8EC  6FF1               	movwf	_hora_u& (0+255),b
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;headers\unmc_rtcc_01.h: 121: hora_d=((RtccTime.f.hour & 0xF0)>>4);
 13057  00E8EE  0100               	movlb	0	; () banked
 13058  00E8F0  39BC               	swapf	(_RtccTime+3)& (0+255),w,b
 13059  00E8F2  0B0F               	andlw	15
 13060  00E8F4  0B0F               	andlw	15
 13061  00E8F6  0100               	movlb	0	; () banked
 13062  00E8F8  6FF0               	movwf	_hora_d& (0+255),b
 13063                           
 13064                           ;headers\unmc_rtcc_01.h: 122: RtccReadDate(&RtccDate);
 13065  00E8FA  0EB5               	movlw	low _RtccDate
 13066  00E8FC  6E01               	movwf	RtccReadDate@pDt,c
 13067  00E8FE  0E00               	movlw	high _RtccDate
 13068  00E900  6E02               	movwf	RtccReadDate@pDt+1,c
 13069  00E902  EC15  F06C         	call	_RtccReadDate	;wreg free
 13070                           
 13071                           ;headers\unmc_rtcc_01.h: 123: fecha_u=(RtccDate.f.mday & 0x0F);
 13072  00E906  0100               	movlb	0	; () banked
 13073  00E908  51B6               	movf	(_RtccDate+1)& (0+255),w,b
 13074  00E90A  0B0F               	andlw	15
 13075  00E90C  0100               	movlb	0	; () banked
 13076  00E90E  6FEF               	movwf	_fecha_u& (0+255),b
 13077                           
 13078                           ; BSR set to: 0
 13079                           ;headers\unmc_rtcc_01.h: 124: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 13080  00E910  0100               	movlb	0	; () banked
 13081  00E912  39B6               	swapf	(_RtccDate+1)& (0+255),w,b
 13082  00E914  0B0F               	andlw	15
 13083  00E916  0B0F               	andlw	15
 13084  00E918  0100               	movlb	0	; () banked
 13085  00E91A  6FEE               	movwf	_fecha_d& (0+255),b
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;headers\unmc_rtcc_01.h: 125: mes_u=(RtccDate.f.mon & 0x0F);
 13089  00E91C  0100               	movlb	0	; () banked
 13090  00E91E  51B7               	movf	(_RtccDate+2)& (0+255),w,b
 13091  00E920  0B0F               	andlw	15
 13092  00E922  0100               	movlb	0	; () banked
 13093  00E924  6FED               	movwf	_mes_u& (0+255),b
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;headers\unmc_rtcc_01.h: 126: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 13097  00E926  0100               	movlb	0	; () banked
 13098  00E928  39B7               	swapf	(_RtccDate+2)& (0+255),w,b
 13099  00E92A  0B0F               	andlw	15
 13100  00E92C  0B0F               	andlw	15
 13101  00E92E  0100               	movlb	0	; () banked
 13102  00E930  6FEC               	movwf	_mes_d& (0+255),b
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;headers\unmc_rtcc_01.h: 127: dia_semana=RtccDate.f.wday;
 13106  00E932  C0B5  F0EB         	movff	_RtccDate,_dia_semana
 13107                           
 13108                           ; BSR set to: 0
 13109                           ;headers\unmc_rtcc_01.h: 128: anio_u=(RtccDate.f.year & 0x0F);
 13110  00E936  0100               	movlb	0	; () banked
 13111  00E938  51B8               	movf	(_RtccDate+3)& (0+255),w,b
 13112  00E93A  0B0F               	andlw	15
 13113  00E93C  0100               	movlb	0	; () banked
 13114  00E93E  6FEA               	movwf	_anio_u& (0+255),b
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;headers\unmc_rtcc_01.h: 129: anio_d=((RtccDate.f.year & 0xF0)>>4);
 13118  00E940  0100               	movlb	0	; () banked
 13119  00E942  39B8               	swapf	(_RtccDate+3)& (0+255),w,b
 13120  00E944  0B0F               	andlw	15
 13121  00E946  0B0F               	andlw	15
 13122  00E948  0100               	movlb	0	; () banked
 13123  00E94A  6FE9               	movwf	_anio_d& (0+255),b
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;headers\unmc_rtcc_01.h: 131: segundo=segundo_d*10+segundo_u;
 13127  00E94C  0100               	movlb	0	; () banked
 13128  00E94E  51F4               	movf	_segundo_d& (0+255),w,b
 13129  00E950  0D0A               	mullw	10
 13130  00E952  0100               	movlb	0	; () banked
 13131  00E954  51F5               	movf	_segundo_u& (0+255),w,b
 13132  00E956  24F3               	addwf	prodl,w,c
 13133  00E958  0100               	movlb	0	; () banked
 13134  00E95A  6FA6               	movwf	_segundo& (0+255),b
 13135  00E95C  0100               	movlb	0	; () banked
 13136  00E95E  0E00               	movlw	0
 13137  00E960  20F4               	addwfc	prodh,w,c
 13138  00E962  0100               	movlb	0	; () banked
 13139  00E964  6FA7               	movwf	(_segundo+1)& (0+255),b
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;headers\unmc_rtcc_01.h: 132: minuto=minuto_d*10+minuto_u;
 13143  00E966  0100               	movlb	0	; () banked
 13144  00E968  51F2               	movf	_minuto_d& (0+255),w,b
 13145  00E96A  0D0A               	mullw	10
 13146  00E96C  0100               	movlb	0	; () banked
 13147  00E96E  51F3               	movf	_minuto_u& (0+255),w,b
 13148  00E970  24F3               	addwf	prodl,w,c
 13149  00E972  0100               	movlb	0	; () banked
 13150  00E974  6FC7               	movwf	_minuto& (0+255),b
 13151  00E976  0100               	movlb	0	; () banked
 13152  00E978  0E00               	movlw	0
 13153  00E97A  20F4               	addwfc	prodh,w,c
 13154  00E97C  0100               	movlb	0	; () banked
 13155  00E97E  6FC8               	movwf	(_minuto+1)& (0+255),b
 13156                           
 13157                           ; BSR set to: 0
 13158                           ;headers\unmc_rtcc_01.h: 133: hora=hora_d*10+hora_u;
 13159  00E980  0100               	movlb	0	; () banked
 13160  00E982  51F0               	movf	_hora_d& (0+255),w,b
 13161  00E984  0D0A               	mullw	10
 13162  00E986  0100               	movlb	0	; () banked
 13163  00E988  51F1               	movf	_hora_u& (0+255),w,b
 13164  00E98A  24F3               	addwf	prodl,w,c
 13165  00E98C  0100               	movlb	0	; () banked
 13166  00E98E  6FC9               	movwf	_hora& (0+255),b
 13167  00E990  0100               	movlb	0	; () banked
 13168  00E992  0E00               	movlw	0
 13169  00E994  20F4               	addwfc	prodh,w,c
 13170  00E996  0100               	movlb	0	; () banked
 13171  00E998  6FCA               	movwf	(_hora+1)& (0+255),b
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;headers\unmc_rtcc_01.h: 134: dia=fecha_d*10+fecha_u;
 13175  00E99A  0100               	movlb	0	; () banked
 13176  00E99C  51EE               	movf	_fecha_d& (0+255),w,b
 13177  00E99E  0D0A               	mullw	10
 13178  00E9A0  0100               	movlb	0	; () banked
 13179  00E9A2  51EF               	movf	_fecha_u& (0+255),w,b
 13180  00E9A4  24F3               	addwf	prodl,w,c
 13181  00E9A6  0100               	movlb	0	; () banked
 13182  00E9A8  6FCB               	movwf	_dia& (0+255),b
 13183  00E9AA  0100               	movlb	0	; () banked
 13184  00E9AC  0E00               	movlw	0
 13185  00E9AE  20F4               	addwfc	prodh,w,c
 13186  00E9B0  0100               	movlb	0	; () banked
 13187  00E9B2  6FCC               	movwf	(_dia+1)& (0+255),b
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;headers\unmc_rtcc_01.h: 135: diasem=dia_semana;
 13191  00E9B4  C0EB  F0CD         	movff	_dia_semana,_diasem
 13192  00E9B8  0100               	movlb	0	; () banked
 13193  00E9BA  6BCE               	clrf	(_diasem+1)& (0+255),b
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;headers\unmc_rtcc_01.h: 136: mes=mes_d*10+mes_u;
 13197  00E9BC  0100               	movlb	0	; () banked
 13198  00E9BE  51EC               	movf	_mes_d& (0+255),w,b
 13199  00E9C0  0D0A               	mullw	10
 13200  00E9C2  0100               	movlb	0	; () banked
 13201  00E9C4  51ED               	movf	_mes_u& (0+255),w,b
 13202  00E9C6  24F3               	addwf	prodl,w,c
 13203  00E9C8  0100               	movlb	0	; () banked
 13204  00E9CA  6FCF               	movwf	_mes& (0+255),b
 13205  00E9CC  0100               	movlb	0	; () banked
 13206  00E9CE  0E00               	movlw	0
 13207  00E9D0  20F4               	addwfc	prodh,w,c
 13208  00E9D2  0100               	movlb	0	; () banked
 13209  00E9D4  6FD0               	movwf	(_mes+1)& (0+255),b
 13210                           
 13211                           ; BSR set to: 0
 13212                           ;headers\unmc_rtcc_01.h: 137: anio=anio_d*10+anio_u;
 13213  00E9D6  0100               	movlb	0	; () banked
 13214  00E9D8  51E9               	movf	_anio_d& (0+255),w,b
 13215  00E9DA  0D0A               	mullw	10
 13216  00E9DC  0100               	movlb	0	; () banked
 13217  00E9DE  51EA               	movf	_anio_u& (0+255),w,b
 13218  00E9E0  24F3               	addwf	prodl,w,c
 13219  00E9E2  0100               	movlb	0	; () banked
 13220  00E9E4  6FD1               	movwf	_anio& (0+255),b
 13221  00E9E6  0100               	movlb	0	; () banked
 13222  00E9E8  0E00               	movlw	0
 13223  00E9EA  20F4               	addwfc	prodh,w,c
 13224  00E9EC  0100               	movlb	0	; () banked
 13225  00E9EE  6FD2               	movwf	(_anio+1)& (0+255),b
 13226                           
 13227                           ; BSR set to: 0
 13228  00E9F0  0012               	return		;funcret
 13229  00E9F2                     __end_of_Read_RTC:
 13230                           	opt stack 0
 13231                           tblptru	equ	0xFF8
 13232                           tblptrh	equ	0xFF7
 13233                           tblptrl	equ	0xFF6
 13234                           tablat	equ	0xFF5
 13235                           prodh	equ	0xFF4
 13236                           prodl	equ	0xFF3
 13237                           intcon	equ	0xFF2
 13238                           indf0	equ	0xFEF
 13239                           postinc0	equ	0xFEE
 13240                           fsr0h	equ	0xFEA
 13241                           fsr0l	equ	0xFE9
 13242                           wreg	equ	0xFE8
 13243                           postinc1	equ	0xFE6
 13244                           postdec1	equ	0xFE5
 13245                           fsr1h	equ	0xFE2
 13246                           fsr1l	equ	0xFE1
 13247                           indf2	equ	0xFDF
 13248                           postinc2	equ	0xFDE
 13249                           postdec2	equ	0xFDD
 13250                           fsr2h	equ	0xFDA
 13251                           fsr2l	equ	0xFD9
 13252                           status	equ	0xFD8
 13253                           
 13254 ;; *************** function _RtccReadTime *****************
 13255 ;; Defined at:
 13256 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
 13257 ;; Parameters:    Size  Location     Type
 13258 ;;  pTm             2    0[COMRAM] PTR struct .
 13259 ;;		 -> RtccTime(4), 
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;  rTD0            8   10[COMRAM] struct .
 13262 ;;  rTD1            8    2[COMRAM] struct .
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  1    wreg      void 
 13265 ;; Registers used:
 13266 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13273 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13275 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13276 ;;Total ram usage:       18 bytes
 13277 ;; Hardware stack levels used:    1
 13278 ;; This function calls:
 13279 ;;		Nothing
 13280 ;; This function is called by:
 13281 ;;		_Read_RTC
 13282 ;; This function uses a non-reentrant model
 13283 ;;
 13284                           
 13285                           	psect	text65
 13286  00D238                     __ptext65:
 13287                           	opt stack 0
 13288  00D238                     _RtccReadTime:
 13289                           	opt stack 25
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;incstack = 0
 13293  00D238  0EFC               	movlw	252
 13294  00D23A  010F               	movlb	15	; () banked
 13295  00D23C  173F               	andwf	63,f,b	;volatile
 13296                           
 13297                           ; BSR set to: 15
 13298  00D23E  010F               	movlb	15	; () banked
 13299  00D240  813F               	bsf	63,0,b	;volatile
 13300                           
 13301                           ; BSR set to: 15
 13302  00D242  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 13303                           
 13304                           ; BSR set to: 15
 13305  00D246  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 13306                           
 13307                           ; BSR set to: 15
 13308  00D24A  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 13309                           
 13310                           ; BSR set to: 15
 13311  00D24E  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 13312                           
 13313                           ; BSR set to: 15
 13314  00D252  0EFC               	movlw	252
 13315  00D254  010F               	movlb	15	; () banked
 13316  00D256  173F               	andwf	63,f,b	;volatile
 13317  00D258  010F               	movlb	15	; () banked
 13318  00D25A  813F               	bsf	63,0,b	;volatile
 13319                           
 13320                           ; BSR set to: 15
 13321  00D25C  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 13322                           
 13323                           ; BSR set to: 15
 13324  00D260  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 13325                           
 13326                           ; BSR set to: 15
 13327  00D264  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 13328                           
 13329                           ; BSR set to: 15
 13330  00D268  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 13331                           
 13332                           ; BSR set to: 15
 13333  00D26C  5009               	movf	RtccReadTime@rTD1+6,w,c
 13334  00D26E  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 13335  00D270  A4D8               	btfss	status,2,c
 13336  00D272  D7E2               	goto	_RtccReadTime
 13337                           
 13338                           ; BSR set to: 15
 13339                           
 13340                           ; BSR set to: 15
 13341  00D274  EE20 F003          	lfsr	2,3
 13342  00D278  5001               	movf	RtccReadTime@pTm,w,c
 13343  00D27A  26D9               	addwf	fsr2l,f,c
 13344  00D27C  5002               	movf	RtccReadTime@pTm+1,w,c
 13345  00D27E  22DA               	addwfc	fsr2h,f,c
 13346  00D280  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 13347  00D284  EE20 F002          	lfsr	2,2
 13348  00D288  5001               	movf	RtccReadTime@pTm,w,c
 13349  00D28A  26D9               	addwf	fsr2l,f,c
 13350  00D28C  5002               	movf	RtccReadTime@pTm+1,w,c
 13351  00D28E  22DA               	addwfc	fsr2h,f,c
 13352  00D290  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 13353  00D294  EE20 F001          	lfsr	2,1
 13354  00D298  5001               	movf	RtccReadTime@pTm,w,c
 13355  00D29A  26D9               	addwf	fsr2l,f,c
 13356  00D29C  5002               	movf	RtccReadTime@pTm+1,w,c
 13357  00D29E  22DA               	addwfc	fsr2h,f,c
 13358  00D2A0  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 13359                           
 13360                           ; BSR set to: 15
 13361  00D2A4  0012               	return		;funcret
 13362  00D2A6                     __end_of_RtccReadTime:
 13363                           	opt stack 0
 13364                           tblptru	equ	0xFF8
 13365                           tblptrh	equ	0xFF7
 13366                           tblptrl	equ	0xFF6
 13367                           tablat	equ	0xFF5
 13368                           prodh	equ	0xFF4
 13369                           prodl	equ	0xFF3
 13370                           intcon	equ	0xFF2
 13371                           indf0	equ	0xFEF
 13372                           postinc0	equ	0xFEE
 13373                           fsr0h	equ	0xFEA
 13374                           fsr0l	equ	0xFE9
 13375                           wreg	equ	0xFE8
 13376                           postinc1	equ	0xFE6
 13377                           postdec1	equ	0xFE5
 13378                           fsr1h	equ	0xFE2
 13379                           fsr1l	equ	0xFE1
 13380                           indf2	equ	0xFDF
 13381                           postinc2	equ	0xFDE
 13382                           postdec2	equ	0xFDD
 13383                           fsr2h	equ	0xFDA
 13384                           fsr2l	equ	0xFD9
 13385                           status	equ	0xFD8
 13386                           
 13387 ;; *************** function _RtccReadDate *****************
 13388 ;; Defined at:
 13389 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;  pDt             2    0[COMRAM] PTR struct .
 13392 ;;		 -> RtccDate(4), 
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;  rTD0            8   10[COMRAM] struct .
 13395 ;;  rTD1            8    2[COMRAM] struct .
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  1    wreg      void 
 13398 ;; Registers used:
 13399 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13406 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13408 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13409 ;;Total ram usage:       18 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; This function calls:
 13412 ;;		Nothing
 13413 ;; This function is called by:
 13414 ;;		_Read_RTC
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           	psect	text66
 13419  00D82A                     __ptext66:
 13420                           	opt stack 0
 13421  00D82A                     _RtccReadDate:
 13422                           	opt stack 25
 13423                           
 13424                           ; BSR set to: 15
 13425                           ;incstack = 0
 13426  00D82A  0EFC               	movlw	252
 13427  00D82C  010F               	movlb	15	; () banked
 13428  00D82E  173F               	andwf	63,f,b	;volatile
 13429  00D830  0E03               	movlw	3
 13430  00D832  010F               	movlb	15	; () banked
 13431  00D834  133F               	iorwf	63,f,b	;volatile
 13432                           
 13433                           ; BSR set to: 15
 13434  00D836  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 13435                           
 13436                           ; BSR set to: 15
 13437  00D83A  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 13438                           
 13439                           ; BSR set to: 15
 13440  00D83E  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 13441                           
 13442                           ; BSR set to: 15
 13443  00D842  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 13444                           
 13445                           ; BSR set to: 15
 13446  00D846  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 13447                           
 13448                           ; BSR set to: 15
 13449  00D84A  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 13450  00D84E  0EFC               	movlw	252
 13451  00D850  010F               	movlb	15	; () banked
 13452  00D852  173F               	andwf	63,f,b	;volatile
 13453  00D854  0E03               	movlw	3
 13454  00D856  010F               	movlb	15	; () banked
 13455  00D858  133F               	iorwf	63,f,b	;volatile
 13456                           
 13457                           ; BSR set to: 15
 13458  00D85A  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 13459                           
 13460                           ; BSR set to: 15
 13461  00D85E  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 13462                           
 13463                           ; BSR set to: 15
 13464  00D862  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 13465                           
 13466                           ; BSR set to: 15
 13467  00D866  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 13468                           
 13469                           ; BSR set to: 15
 13470  00D86A  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 13471                           
 13472                           ; BSR set to: 15
 13473  00D86E  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 13474  00D872  5005               	movf	RtccReadDate@rTD1+2,w,c
 13475  00D874  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 13476  00D876  A4D8               	btfss	status,2,c
 13477  00D878  D7D8               	goto	_RtccReadDate
 13478                           
 13479                           ; BSR set to: 15
 13480                           
 13481                           ; BSR set to: 15
 13482  00D87A  EE20 F001          	lfsr	2,1
 13483  00D87E  5001               	movf	RtccReadDate@pDt,w,c
 13484  00D880  26D9               	addwf	fsr2l,f,c
 13485  00D882  5002               	movf	RtccReadDate@pDt+1,w,c
 13486  00D884  22DA               	addwfc	fsr2h,f,c
 13487  00D886  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 13488  00D88A  EE20 F002          	lfsr	2,2
 13489  00D88E  5001               	movf	RtccReadDate@pDt,w,c
 13490  00D890  26D9               	addwf	fsr2l,f,c
 13491  00D892  5002               	movf	RtccReadDate@pDt+1,w,c
 13492  00D894  22DA               	addwfc	fsr2h,f,c
 13493  00D896  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 13494                           
 13495                           ; BSR set to: 15
 13496  00D89A  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 13497  00D89E  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 13498  00D8A2  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 13499                           
 13500                           ; BSR set to: 15
 13501  00D8A6  EE20 F003          	lfsr	2,3
 13502  00D8AA  5001               	movf	RtccReadDate@pDt,w,c
 13503  00D8AC  26D9               	addwf	fsr2l,f,c
 13504  00D8AE  5002               	movf	RtccReadDate@pDt+1,w,c
 13505  00D8B0  22DA               	addwfc	fsr2h,f,c
 13506  00D8B2  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 13507                           
 13508                           ; BSR set to: 15
 13509  00D8B6  0012               	return		;funcret
 13510  00D8B8                     __end_of_RtccReadDate:
 13511                           	opt stack 0
 13512                           tblptru	equ	0xFF8
 13513                           tblptrh	equ	0xFF7
 13514                           tblptrl	equ	0xFF6
 13515                           tablat	equ	0xFF5
 13516                           prodh	equ	0xFF4
 13517                           prodl	equ	0xFF3
 13518                           intcon	equ	0xFF2
 13519                           indf0	equ	0xFEF
 13520                           postinc0	equ	0xFEE
 13521                           fsr0h	equ	0xFEA
 13522                           fsr0l	equ	0xFE9
 13523                           wreg	equ	0xFE8
 13524                           postinc1	equ	0xFE6
 13525                           postdec1	equ	0xFE5
 13526                           fsr1h	equ	0xFE2
 13527                           fsr1l	equ	0xFE1
 13528                           indf2	equ	0xFDF
 13529                           postinc2	equ	0xFDE
 13530                           postdec2	equ	0xFDD
 13531                           fsr2h	equ	0xFDA
 13532                           fsr2l	equ	0xFD9
 13533                           status	equ	0xFD8
 13534                           tblptru	equ	0xFF8
 13535                           tblptrh	equ	0xFF7
 13536                           tblptrl	equ	0xFF6
 13537                           tablat	equ	0xFF5
 13538                           prodh	equ	0xFF4
 13539                           prodl	equ	0xFF3
 13540                           intcon	equ	0xFF2
 13541                           indf0	equ	0xFEF
 13542                           postinc0	equ	0xFEE
 13543                           fsr0h	equ	0xFEA
 13544                           fsr0l	equ	0xFE9
 13545                           wreg	equ	0xFE8
 13546                           postinc1	equ	0xFE6
 13547                           postdec1	equ	0xFE5
 13548                           fsr1h	equ	0xFE2
 13549                           fsr1l	equ	0xFE1
 13550                           indf2	equ	0xFDF
 13551                           postinc2	equ	0xFDE
 13552                           postdec2	equ	0xFDD
 13553                           fsr2h	equ	0xFDA
 13554                           fsr2l	equ	0xFD9
 13555                           status	equ	0xFD8
 13556                           
 13557                           	psect	rparam
 13558  0000                     tblptru	equ	0xFF8
 13559                           tblptrh	equ	0xFF7
 13560                           tblptrl	equ	0xFF6
 13561                           tablat	equ	0xFF5
 13562                           prodh	equ	0xFF4
 13563                           prodl	equ	0xFF3
 13564                           intcon	equ	0xFF2
 13565                           indf0	equ	0xFEF
 13566                           postinc0	equ	0xFEE
 13567                           fsr0h	equ	0xFEA
 13568                           fsr0l	equ	0xFE9
 13569                           wreg	equ	0xFE8
 13570                           postinc1	equ	0xFE6
 13571                           postdec1	equ	0xFE5
 13572                           fsr1h	equ	0xFE2
 13573                           fsr1l	equ	0xFE1
 13574                           indf2	equ	0xFDF
 13575                           postinc2	equ	0xFDE
 13576                           postdec2	equ	0xFDD
 13577                           fsr2h	equ	0xFDA
 13578                           fsr2l	equ	0xFD9
 13579                           status	equ	0xFD8


Data Sizes:
    Strings     354
    Constant    71
    Data        34
    BSS         133
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     22     151
    BANK1           256      0      52
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 3775
		 -> STR_49(CODE[7]), STR_40(CODE[8]), STR_25(CODE[8]), STR_24(CODE[8]), 
		 -> STR_23(CODE[8]), STR_22(CODE[8]), RAM(DATA[3775]), STR_7(CODE[6]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_27(CODE[18]), STR_26(CODE[23]), STR_14(CODE[5]), STR_9(CODE[15]), 
		 -> STR_8(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer3(BANK1[20]), buffer2(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_48(CODE[9]), STR_47(CODE[9]), STR_46(CODE[9]), STR_45(CODE[9]), 
		 -> STR_44(CODE[9]), STR_43(CODE[9]), STR_42(CODE[17]), STR_41(CODE[21]), 
		 -> STR_39(CODE[17]), STR_38(CODE[17]), STR_37(CODE[9]), STR_36(CODE[8]), 
		 -> STR_35(CODE[9]), STR_34(CODE[9]), STR_33(CODE[9]), STR_32(CODE[9]), 
		 -> STR_31(CODE[9]), STR_30(CODE[8]), STR_29(CODE[9]), STR_28(CODE[9]), 
		 -> buffer3(BANK1[20]), STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[15]), STR_15(CODE[8]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[7]), 
		 -> buffer2(BANK1[20]), 

    guarda_numero_ingresado@num	PTR int  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    causa_reporte	PTR unsigned char  size(2) Largest target is 8
		 -> STR_40(CODE[8]), STR_25(CODE[8]), STR_24(CODE[8]), STR_23(CODE[8]), 
		 -> STR_22(CODE[8]), STR_7(CODE[6]), 

    array_seleccionar	PTR unsigned char [6] size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _titila_texto_insert_password->_lcd_putrs
    _resetear_pantalla_ingresar_contrasenia->_lcd_putrs
    _mostrar_presionar_a->_lcd_putrs
    _titila_opcion->_lcd_putrs
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _ir_a_pantalla_editar_contrasenia->_ingreso_numero
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setHoraMinutoSegundo->_sprintf
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setDiaMesAnio->_sprintf
    _Write_RTC->_RtccWriteDate
    _covertir_valores_de_array_a_escala_decimal->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _activar_alarma->_ingreso_numero
    _titila_alarma_activada->_lcd_putrs
    _ingreso_numero->_guarda_numero_ingresado
    _guarda_numero_ingresado->_sprintf
    _selecciona_opcion_fecha_hora->_lcd_putrs
    _imprimir_reporte->_sprintf
    _sprintf->___wmul
    ___wmul->___fttol
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    _si_apreta_numero_va_a_pantalla_contrasenia->_ir_a_pantalla_ingresar_contrasenia
    _ir_a_pantalla_ingresar_contrasenia->_ir_a_pantalla_edicion
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  539335
                                             21 BANK0      1     1      0
                           _Read_RTC
              _ir_a_pantalla_inicial
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   37382
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                  _set_reloj_digital
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     925
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ir_a_pantalla_inicial                                0     0      0  500961
                  _set_reloj_digital
_si_apreta_numero_va_a_pantalla_cont
       _titila_texto_insert_password
 ---------------------------------------------------------------------------------
 (2) _titila_texto_insert_password                         1     1      0   10711
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _si_apreta_numero_va_a_pantalla_contrasenia           0     0      0  456992
 _ir_a_pantalla_ingresar_contrasenia
 ---------------------------------------------------------------------------------
 (3) _ir_a_pantalla_ingresar_contrasenia                   2     2      0  456992
                                             19 BANK0      2     2      0
                     _activar_alarma
                     _ingreso_numero
              _ir_a_pantalla_edicion
                         _lcd_gotoxy
                          _lcd_putrs
                _mostrar_presionar_a
_resetear_pantalla_ingresar_contrase
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _resetear_pantalla_ingresar_contrasenia               2     2      0   10779
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _mostrar_presionar_a                                  0     0      0   10711
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _ir_a_pantalla_edicion                                1     1      0  373118
                                             18 BANK0      1     1      0
                           _Read_RTC
                     _cambiar_opcion
                   _imprimir_reporte
                         _lcd_gotoxy
                          _lcd_putrs
       _selecciona_opcion_fecha_hora
                 _seleccionar_opcion
                  _set_reloj_digital
                      _titila_opcion
 ---------------------------------------------------------------------------------
 (5) _titila_opcion                                        1     1      0   10711
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _set_reloj_digital                                    0     0      0   33258
                      _setDiaMesAnio
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (5) _seleccionar_opcion                                   0     0      0  292575
                     _activar_alarma
         _editar_fecha_reloj_digital
          _editar_hora_reloj_digital
   _ir_a_pantalla_editar_contrasenia
 ---------------------------------------------------------------------------------
 (6) _ir_a_pantalla_editar_contrasenia                     2     2      0   25787
                                             66 COMRAM     2     2      0
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (6) _editar_hora_reloj_digital                            9     9      0  115120
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (3) _setHoraMinutoSegundo                                 0     0      0   16629
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _editar_fecha_reloj_digital                           9     9      0  115120
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
                      _setDiaMesAnio
 ---------------------------------------------------------------------------------
 (3) _setDiaMesAnio                                        0     0      0   16629
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (5) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (7) _covertir_valores_de_array_a_escala_decimal          14    12      2   70051
                                             90 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                           ___awtoft
                            ___fttol
                             ___wmul
                                _pow
 ---------------------------------------------------------------------------------
 (8) _pow                                                 17    11      6   65683
                                             73 COMRAM    17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (9) _log                                                  5     2      3   21400
                                             57 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (9) _exp                                                  9     6      3   35628
                                             64 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (10) _ldexp                                               7     2      5     400
                                             57 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (10) _floor                                               8     5      3    9183
                                             45 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (10) _frexp                                               7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (11) ___fttol                                            15    11      4     556
                                             12 COMRAM    15    11      4
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftge                                              9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (11) ___altoft                                           10     6      4    2758
                                             27 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (10) _eval_poly                                          12     5      7    9553
                                             45 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            15     9      6    3882
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftsub                                             6     0      6    4615
                                             45 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                            12     6      6    4270
                                             33 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftneg                                             3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) ___ftdiv                                            15     9      6    3102
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___awtoft                                            4     1      3    2863
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___lltoft                                             9     5      4    2689
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (12) ___ftpack                                            8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) _activar_alarma                                       3     3      0   36548
                                             66 COMRAM     3     3      0
                    _generar_reporte
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
             _titila_alarma_activada
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _verificar_contrasenia                               10     8      2     115
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (7) _titila_alarma_activada                               1     1      0   10711
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (7) _ingreso_numero                                       2     2      0   14986
                                             64 COMRAM     2     2      0
            _guarda_numero_ingresado
 ---------------------------------------------------------------------------------
 (8) _guarda_numero_ingresado                              2     0      2   14986
                                             62 COMRAM     2     0      2
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (7) _generar_reporte                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _selecciona_opcion_fecha_hora                         1     1      0   10711
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (5) _imprimir_reporte                                     0     0      0   14160
                     _cambiar_opcion
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             33    21     12    3449
                                             33 COMRAM    29    17     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     767
                                             27 COMRAM     6     2      4
                           ___awtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    7122
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    4341
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    3589
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _cambiar_opcion                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (6) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (6) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _ir_a_pantalla_inicial
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
     _si_apreta_numero_va_a_pantalla_contrasenia
       _ir_a_pantalla_ingresar_contrasenia
         _activar_alarma
           _generar_reporte
           _ingreso_numero
             _guarda_numero_ingresado
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _titila_alarma_activada
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _verificar_contrasenia
         _ingreso_numero
           _guarda_numero_ingresado
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
               _isdigit
         _ir_a_pantalla_edicion
           _Read_RTC
             _RtccReadDate
             _RtccReadTime
           _cambiar_opcion
           _imprimir_reporte
             _cambiar_opcion
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
               _isdigit
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _selecciona_opcion_fecha_hora
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _seleccionar_opcion
             _activar_alarma
               _generar_reporte
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _titila_alarma_activada
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
               _verificar_contrasenia
             _editar_fecha_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _setDiaMesAnio
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _editar_hora_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _setHoraMinutoSegundo
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _ir_a_pantalla_editar_contrasenia
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _set_reloj_digital
             _setDiaMesAnio
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
             _setHoraMinutoSegundo
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
           _titila_opcion
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _mostrar_presionar_a
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _resetear_pantalla_ingresar_contrasenia
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _verificar_contrasenia
     _titila_texto_insert_password
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      34       8       20.3%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     16      97       5       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A       6        0.0%
DATA                 0      0     12A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Nov 17 12:46:09 2017

                                             _titila_opcion E0D8  
                                              ___altoft@exp 0024  
                                                         _a 00AE  
                                                         _b 00AC  
                                                         _c 00AA  
                                                         _i 00B2  
                                                         _j 00B0  
                                                         _k 00A8  
                                       _hora_ultimo_reporte 0096  
                                             ___altoft@sign 0025  
                                            ?_lcd_send_byte 0003  
                                              ___awdiv@sign 0006  
                                guarda_numero_ingresado@num 003F  
                                       ___wmul@multiplicand 001E  
                           __size_of_titila_alarma_activada 0078  
                                               lcd_comand@d 0005  
                                              __CFG_CP0$OFF 000000  
                                              ___ftadd@exp1 002D  
                                              ___ftadd@exp2 002C  
                                              ___ftadd@sign 002B  
                                                       l201 DE14  
                                                       l212 F2F0  
                                                       l213 F2E0  
                                                       l301 D3CC  
                                                       l206 D6EC  
                                                       l230 F3A6  
                                                       l310 F0E2  
                                                       l231 F396  
                                                       l311 F150  
                                                       l224 F364  
                                                       l312 F14A  
                                                       l225 F354  
                                                       l321 F246  
                                                       l242 F41A  
                                                       l218 F32A  
                                                       l322 F256  
                                                       l314 F18E  
                                                       l243 F40A  
                                                       l219 F31A  
                                                       l323 F266  
                                                       l260 F4D0  
                                                       l236 F3E0  
                                                       l261 F4C0  
                                                       l237 F3D0  
                                                       l317 F21E  
                                                       l341 E144  
                                                       l254 F496  
                                                       l318 F2A8  
                                                       l190 D75A  
                                                       l422 DB08  
                                                       l511 CE9E  
                                                       l327 DB9C  
                                                       l255 F486  
                                                       l415 DAA2  
                                                       l343 E17C  
                                                       l512 CEA0  
                                                       l328 DB98  
                                                       l248 F45C  
                                                       l416 DABE  
                                                       l344 E19E  
                                                       l249 F44C  
                                                       l425 D518  
                                                       l441 F874  
                                                       l353 DBD8  
                                                       l602 FD18  
                                                       l266 F514  
                                                       l426 D572  
                                                       l442 F87E  
                                                       l194 D4BA  
                                                       l418 DAD6  
                                                       l370 DD44  
                                                       l291 DA48  
                                                       l283 DA00  
                                                       l523 CDFE  
                                                       l531 CFB0  
                                                       l603 FD3C  
                                                       l267 F504  
                                                       l427 D554  
                                                       l451 FA84  
                                                       l371 DD60  
                                                       l532 CFBC  
                                                       l604 FD44  
                                                       l348 D63A  
                                                       l428 D55E  
                                                       l444 F9AC  
                                                       l364 DC3E  
                                                       l516 D34A  
                                                       l293 DA62  
                                                       l285 DA18  
                                                       l533 CFC8  
                                                       l605 FD84  
                                                       l349 D674  
                                                       l189 D736  
                                                       l453 F9E6  
                                                       l437 F8C8  
                                                       l461 F608  
                                                       l373 DD76  
                                                       l381 D7C0  
                                                       l294 DA52  
                                                       l286 DA08  
                                                       l550 D0D4  
                                                       l614 FDC6  
                                                       l606 FD64  
                                                       l702 E5EC  
                                                       l446 F900  
                                                       l470 F640  
                                                       l518 D36C  
                                                       l615 FE1E  
                                                       l703 E644  
                                                       l455 FA30  
                                                       l439 F81C  
                                                       l463 F56A  
                                                       l375 DD80  
                                                       l528 CFD4  
                                                       l616 FDCC  
                                                       l456 FA3A  
                                                       l448 F958  
                                                       l480 F76C  
                                                       l472 F68A  
                                                       l529 CFA4  
                                                       l449 F962  
                                                       l473 F694  
                                                       l465 F5B4  
                                                       l466 F5BE  
                                                       l490 CE3C  
                                                       l707 E64E  
                                                       l475 F7B6  
                                                       l395 D804  
                                                       l580 FC88  
                                                       l564 FAA8  
                                                       l468 F6DE  
                                                       l388 D7E2  
                                                       l549 D0FC  
                                                       l581 FB62  
                                                       l573 FB04  
                                                       l565 FAC2  
                                                       l477 F718  
                                                       l910 CD76  
                                                       l582 FB8A  
                                                       l575 FC54  
                                                       l591 FC3E  
                                                       l583 FB98  
                                                       l567 FAD6  
                                                       l479 F762  
                                                       l592 FC0C  
                                                       l584 FB94  
                                                       l568 FAD0  
                                                       l904 CEFA  
                                                       l673 E83A  
                                                       l586 FBE0  
                                                       l674 E898  
                                                       l595 FC50  
                                                       l667 E7D6  
                                                       l596 FCB6  
                                                       l588 FBFA  
                                                       l924 CD86  
                                                       l589 FBEA  
                                                       l598 FCCE  
                                                       l950 DCDA  
                                                       l678 E8A2  
                                                       l951 DCD0  
                                                       l944 DC7E  
                                                       l696 E598  
                                                       l880 D5B6  
                                                       l945 DC74  
                                                       l793 D438  
                                                       l794 D42C  
                                                       l947 DCB2  
                                                       l883 D5DE  
                                                       l948 DC9C  
                                                       l884 D5E8  
                                                       l876 D590  
                                                       l885 D5F6  
                                                       l877 D5A0  
                                                       l990 EDD2  
                                                       l975 ED56  
                                                       l879 D5BE  
                                                       l984 EDE6  
                                                       l979 ED80  
                                                       l989 EDDC  
                                                       l998 EE1A  
                                                       l999 EE10  
                                                       _dia 00CB  
                                                       _key 00B4  
                                                       _mes 00CF  
                                                       _exp EEB0  
                                                       _log E658  
                                                       _pow E9F2  
                                                       wreg 000FE8  
                                 _editar_hora_reloj_digital F51E  
                                           RtccReadDate@pDt 0001  
                                               lcd_gotoxy@x 0006  
                                               lcd_gotoxy@y 0005  
                                              ___ftdiv@cntr 0012  
                                              ___ftdiv@sign 0017  
                                                      l1001 EE3E  
                                                      l1010 E2DE  
                                                      l1002 EE5A  
                                                      l1011 E31C  
                                                      l1003 EE8A  
                                                      l1012 E342  
                                                      l1030 E42E  
                                                      l1023 E39C  
                                                      l1008 E2B6  
                                                      l1040 CF34  
                                                      l1016 D8E8  
                                                      l1025 E3C4  
                                                      l1017 D918  
                                                      l1106 D188  
                                                      l1034 CE2A  
                                                      l1026 E3F6  
                                                      l1107 D17C  
                                                      l1027 E406  
                                                      l1052 E52E  
                                                      l1044 E494  
                                                      l1029 E41E  
                                                      l1053 E522  
                                                      l1142 D162  
                                                      l1046 E50A  
                                                      l1143 D16C  
                                                      l1055 E54A  
                                                      l1047 E4FA  
                                                      l1152 CF8C  
                                                      l1153 CF96  
                                                      l1138 D142  
                                                      l1330 EF00  
                                                      l1139 D13A  
                                                      l1059 CDEA  
                                                      l1331 EF38  
                                                      l1171 EA50  
                                                      l1148 CF74  
                                                      l1340 E1DE  
                                                      l1332 EF66  
                                                      l1172 EAD6  
                                                      l1149 CF6C  
                                                      l1333 F08A  
                                                      l1173 EAB4  
                                                      l1342 E206  
                                                      l1334 F060  
                                                      l1174 EB5A  
                                                      l1343 E280  
                                                      l1352 DE80  
                                                      l1328 EEC8  
                                                      l1168 EA38  
                                                      l1169 EA2A  
                                                      l1354 DEC6  
                                                      l1370 E674  
                                                      l1339 E1EC  
                                                      l1348 D970  
                                                      l1356 DEF6  
                                                      l1372 E696  
                                                      l1357 DEEA  
                                                      l1378 DFEA  
                                                      l1379 DF6E  
                                                      l5113 F978  
                                                      l5033 DABE  
                                                      l5035 DAC6  
                                                      l4325 FCD2  
                                                      l5109 F958  
                                                      l5151 FA50  
                                                      l5071 F874  
                                                      l5231 F68A  
                                                      l5147 FA30  
                                                      l5075 F894  
                                                      l5235 F6AA  
                                                      l4295 FC0C  
                                                      l4519 F060  
                                                      l5431 D052  
                                                      l4289 FBEA  
                                                      l5273 F782  
                                                      l5193 F5B4  
                                                      l5505 DD60  
                                                      l4813 D554  
                                                      l3589 D944  
                                                      l4821 E014  
                                                      l5269 F762  
                                                      l5197 F5D4  
                                                      l5625 D342  
                                                      ?_exp 0041  
                                                      ?_log 003A  
                                                      l4951 F150  
                                                      l5639 D364  
                                                      ?_pow 004A  
                                                      STR_1 FFD3  
                                                      STR_2 FFEC  
                                                      STR_3 FFE7  
                                                      STR_4 FFD8  
                                                      STR_5 FFE2  
                                                      STR_6 FFDD  
                                                      STR_7 FFCD  
                                                      STR_8 FF05  
                                                      STR_9 FF14  
                                                      u4011 E29E  
                                                      u4100 D146  
                                                      u4031 E2C6  
                                                      u3410 D2CA  
                                                      u4130 CF78  
                                                      u4210 DEA0  
                                                      u5010 EA9C  
                                                      u3430 D2E4  
                                                      u5030 D728  
                                                      u3408 D2B4  
                                                      u5040 D74C  
                                                      u3601 ED28  
                                                      u3450 D300  
                                                      u5210 F3AE  
                                                      u5130 F332  
                                                      u3530 DCE4  
                                                      u4170 E1F8  
                                                      u4218 DEA2  
                                                      u5050 D498  
                                                      u3428 D2CC  
                                                      u3390 D2B2  
                                                      u3630 ED48  
                                                      u3448 D2E6  
                                                      u6040 FA20  
                                                      u3801 E384  
                                                      u4530 FBC4  
                                                      u5410 F4D8  
                                                      u5330 F464  
                                                      u5250 F3E8  
                                                      u5170 F36C  
                                                      u5090 F2F8  
                                                      u3490 DC66  
                                                      u3730 EDEE  
                                                      u3468 D302  
                                                      u5500 D572  
                                                      u3660 ED72  
                                                      u6140 F67A  
                                                      u3821 E3AC  
                                                      u4710 FD8C  
                                                      u4630 FCFE  
                                                      u3910 E4B2  
                                                      u3591 ED14  
                                                      u7007 F990  
                                                      u4720 FDAA  
                                                      u3760 EE22  
                                                      u5520 E0CE  
                                                      u4537 FBBA  
                                                      u7017 F9A4  
                                                      u4570 FC34  
                                                      u5370 F49E  
                                                      u5290 F422  
                                                      u3690 EDB0  
                                                      u6090 F5A4  
                                                      u7107 D3FE  
                                                      u3915 E4AA  
                                                      u7027 FA56  
                                                      u4740 FE26  
                                                      u4820 D5C2  
                                                      u7117 F2E6  
                                                      u7037 FA68  
                                                      u4750 FE3E  
                                                      u3950 E534  
                                                      u4910 EF40  
                                                      u6190 F752  
                                                      u6350 D076  
                                                      u6430 DD5A  
                                                      u6510 D7B6  
                                                      u7207 F50A  
                                                      u7127 F320  
                                                      u7047 FA7C  
                                                      u4760 D0F4  
                                                      u5720 F1C2  
                                                      u4920 EF42  
                                                      u4577 FC2A  
                                                      u7217 D67A  
                                                      u7137 F35A  
                                                      u7057 F140  
                                                      u4770 D11C  
                                                      u5730 F1EA  
                                                      u5650 F0F8  
                                                      u6370 DBF6  
                                                      u6450 DD96  
                                                      u6610 D7F2  
                                                      u6530 D7BC  
                                                      u7227 CD78  
                                                      u7147 F39C  
                                                      u7067 F182  
                                                      u3891 E478  
                                                      u5708 F130  
                                                      u3980 D998  
                                                      u7237 DA0E  
                                                      u7157 F3D6  
                                                      u7077 F214  
                                                      u5590 DA20  
                                                      u5830 F274  
                                                      u5750 F202  
                                                      u5670 F116  
                                                      u6390 DC14  
                                                      u6710 D824  
                                                      u6630 D7FA  
                                                      u6550 D7D0  
                                                      u7247 DA58  
                                                      u4767 D0EA  
                                                      u7167 F410  
                                                      u7087 F29E  
                                                      u4777 D112  
                                                      u7177 F452  
                                                      u7097 D3C4  
                                                      u5850 F28C  
                                                      u5690 F12E  
                                                      u5930 F84E  
                                                      u6650 D800  
                                                      u6570 D7D8  
                                                      u6490 D7AE  
                                                      u6730 D35A  
                                                      u7187 F48C  
                                                      u5748 F1EC  
                                                      u3988 D99A  
                                                      u5940 F864  
                                                      u7197 F4C6  
                                                      u5790 F228  
                                                      u6670 D814  
                                                      u6590 D7DE  
                                                      u6807 DE0A  
                                                      u5848 F276  
                                                      u5768 F204  
                                                      u5688 F118  
                                                      u5880 DAB8  
                                                      u6817 DE5C  
                                                      u6690 D81C  
                                                      u6907 F6B0  
                                                      u6827 DC46  
                                                      u5868 F28E  
                                                      u5980 F932  
                                                      u6917 F6C2  
                                                      u6837 E120  
                                                      u5990 F948  
                                                      u6927 F6D6  
                                                      u6847 E12E  
                                                      u6937 F788  
                                                      u6857 E13C  
                                                      u6777 CE4E  
                                                      u6947 F79A  
                                                      u6867 E1A4  
                                                      u6787 CD88  
                                                      u6957 F7AE  
                                                      u6877 F5DA  
                                                      u6797 DDFA  
                                                      u6967 F89A  
                                                      u6887 F5EC  
                                                      u6977 F8AC  
                                                      u6897 F600  
                                                      u6987 F8C0  
                                                      u6997 F97E  
                                          ?_lcd_send_nibble 0001  
                                                      _anio 00D1  
                                                      _flag 07B0  
                                                      _main CE38  
                                                      _hora 00C9  
                                              ___ftpack@arg 0001  
                                              ___ftpack@exp 0004  
                                                      fsr0h 000FEA  
                                                      fsr1h 000FE2  
                                                      indf0 000FEF  
                                                      fsr2h 000FDA  
                                                      fsr0l 000FE9  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      exp@x 0041  
                                                      log@x 003A  
                                             __CFG_T1DIG$ON 000000  
                                  ?_guarda_numero_ingresado 003F  
                                                      pow@x 004A  
                                                      pow@y 004D  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 0000  
                                             __CFG_IESO$OFF 000000  
                                          RtccReadDate@rTD0 000B  
                                          RtccReadDate@rTD1 0003  
                                        _dia_ultimo_reporte 009C  
                                              ___ftmul@cntr 001A  
                                            ?_titila_opcion 0001  
                                              ___param_bank 000000  
                                              ___ftmul@sign 001B  
                                           RtccReadTime@pTm 0001  
                                              ___fttol@exp1 001B  
                                                     ??_exp 0044  
                                                     ??_log 003D  
                                              ___fttol@lval 0017  
                                                     ??_pow 0050  
                                               _Delay1KTCYx CD84  
                                             __CFG_PLLDIV$1 000000  
                                                     ?_main 0001  
                                           __end_of___awdiv D600  
                                           __end_of___ftadd EEB0  
                                                     STR_10 FFC6  
                                                     STR_11 FF47  
                                                     STR_12 FEDA  
                                                     STR_20 FED2  
                                                     STR_13 FEDA  
                                                     STR_21 FED2  
                                                     STR_30 FEDB  
                                                     STR_14 FFF1  
                                                     STR_22 FFB7  
                                                     STR_31 FEDA  
                                                     STR_15 FFAF  
                                                     STR_23 FF97  
                                                     STR_16 FED4  
                                                     STR_40 FFB7  
                                                     STR_24 FF9F  
                                                     STR_32 FF50  
                                                     STR_25 FFA7  
                                                     STR_33 FF2C  
                                                     STR_17 FEE3  
                                                     STR_41 FEAB  
                                                     STR_42 FED2  
                                                     STR_34 FF62  
                                                     STR_18 FED2  
                                                     STR_26 FE94  
                                                     STR_35 FF2C  
                                                     STR_19 FEE3  
                                                     STR_43 FF3E  
                                                     STR_27 FEC0  
                                                     STR_36 FF8F  
                                                     STR_44 FF35  
                                                     STR_28 FF23  
                                                     STR_37 FF86  
                                                     STR_29 FF86  
                                                     STR_45 FF59  
                                                     STR_46 FF6B  
                                                     STR_38 FEF4  
                                                     STR_39 FED2  
                                                     STR_47 FF7D  
                                                     STR_48 FF74  
                                                     STR_49 FFBF  
                                     __size_of_Delay100TCYx 0010  
                                           __end_of___ftdiv E374  
                                           __end_of___ftneg CE38  
                                           __end_of___ftmul E468  
                                           ___awdiv@divisor 0003  
                                           __end_of___ftsub CF5E  
                                           __end_of___fttol E55C  
               covertir_valores_de_array_a_escala_decimal@i 00DB  
                                           __end_of___lwdiv D176  
                                           __end_of___lwmod CFA0  
                                           ___awdiv@counter 0005  
                                                     _TRISA 000F92  
                                                     _TRISB 000F93  
                                                     _TRISC 000F94  
                     activar_alarma@intentos_de_contrasenia 0044  
                                              ___lltoft@exp 0011  
                                            __CFG_FCMEN$OFF 000000  
                                             ___awtoft@sign 000C  
                              __size_of_mostrar_presionar_a 0018  
                                           __end_of_dpowers FE57  
                                                     _floor E1B0  
                                                     _ldexp DE68  
                                                     _frexp D948  
                                                     _mes_d 00EC  
                                                     _errno 0088  
                                                     _mes_u 00ED  
                                           __end_of_isdigit CDF2  
                                             ___ftpack@sign 0005  
                                                     _setup CFEA  
                                    _titila_alarma_activada D392  
                                                     tablat 000FF5  
                                                     pow@yi 0057  
                                      _setHoraMinutoSegundo D482  
                                              lcd_putrs@ptr 0009  
                                                     status 000FD8  
                                           __end_of_sprintf FE4C  
                                 _motivo_ingreso_de_numeros 00A2  
                                               exp@exponent 0047  
                                   __CFG_DSWDTOSC$INTOSCREF 000000  
                                               ldexp@newexp 003D  
                                            _activar_alarma F098  
                                           __initialization D1D2  
                                               log@exponent 003D  
                                              _Delay100TCYx CD74  
                                              __end_of_main CE5C  
                                           ??_lcd_send_byte 0004  
                                          RtccReadTime@rTD0 000B  
                                          RtccReadTime@rTD1 0003  
                                          __end_of_Read_RTC E9F2  
            __end_of_resetear_pantalla_ingresar_contrasenia D082  
           __size_of_resetear_pantalla_ingresar_contrasenia 004E  
                  ??_resetear_pantalla_ingresar_contrasenia 000B  
                   ?_resetear_pantalla_ingresar_contrasenia 0001  
                    _resetear_pantalla_ingresar_contrasenia D034  
                                                    ??_main 00E8  
                                             ___fttol@sign1 0016  
                                             __activetblptr 000002  
                                          __end_of_RtccWrOn CDA6  
                                            _alarma_sonando 009E  
                                                    ?_floor 002E  
                                                    ?_ldexp 003A  
                                                    ?_frexp 0001  
                                          __end_of___altoft D482  
                                  __size_of_generar_reporte 0032  
                                                    _EECON2 000FA7  
                                                    _ANCON0 000F48  
                                                    _ANCON1 000F49  
                                          ___awdiv@dividend 0001  
                                                    ?_setup 0001  
                                          __end_of___awtoft CF1E  
                   editar_fecha_reloj_digital@mes_ingresado 00DF  
                                          __end_of___ftpack DD04  
                                __end_of_seleccionar_opcion D0D2  
                                          __end_of___lltoft D1D2  
                            __size_of_verificar_contrasenia 007E  
                                     ?_setHoraMinutoSegundo 0001  
                                            __CFG_WDTEN$OFF 000000  
                             __end_of_verificar_contrasenia D57C  
                                          RtccWriteDate@pDt 0001  
                                                    _RTCCFG 000F3F  
                                            __CFG_WPCFG$OFF 000000  
                                          ??_cambiar_opcion 0001  
                                    __end_of_activar_alarma F2B6  
                                         _set_reloj_digital CD42  
                                            __CFG_WPDIS$OFF 000000  
                                           ??_titila_opcion 000B  
                   resetear_pantalla_ingresar_contrasenia@i 000B  
                                            __CFG_XINST$OFF 000000  
                                        ?_set_reloj_digital 0001  
                                          __end_of_lcd_init D392  
                                          __end_of_lcd_putc CFEA  
                                                    ___ftge D8B8  
                                                    ___wmul CE5C  
                                                 ??___awdiv 0005  
                                                 ??___ftadd 0028  
                                            __CFG_STVREN$ON 000000  
                                                 ??___ftdiv 000F  
                                                 ??___ftneg 0004  
                                                    _diasem 00CD  
                                                 ??___ftmul 0013  
                                                    _anio_d 00E9  
                                                 ??___ftsub 0034  
                                                 ??___fttol 0011  
                                                    _anio_u 00EA  
                                   ??_ir_a_pantalla_edicion 00E5  
                                                 ??___lwdiv 0005  
                                 __size_of_imprimir_reporte 00A2  
                                                 ??___lwmod 000C  
                                                    _hora_d 00F0  
                                                    _hora_u 00F1  
                                                    clear_0 D218  
                                                    clear_1 D228  
                                       ??_set_reloj_digital 003F  
                                          ___awdiv@quotient 0007  
                                                    _minuto 00C7  
                      __end_of_selecciona_opcion_fecha_hora D686  
                     __size_of_selecciona_opcion_fecha_hora 0086  
                              _selecciona_opcion_fecha_hora D600  
                                   ??_ir_a_pantalla_inicial 0060  
                                     __end_of_RtccWriteDate E8AC  
                                     __end_of_RtccWriteTime E658  
                                                    floor@i 0031  
                                                    floor@x 002E  
                                     ___ftmul@f3_as_product 0017  
                                          RtccWriteTime@pTm 0001  
                                                 ??_isdigit 0001  
                         editar_hora_reloj_digital@posicion 00E3  
                                              __mediumconst FE4C  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                                 ??_sprintf 002E  
                                          __end_ofexp@coeff FE79  
                                          __end_oflog@coeff FE94  
                                 __end_of_set_reloj_digital CD4C  
                                                __accesstop 0060  
                                   __end_of__initialization D22E  
                                                ___altoft@c 001C  
                        __size_of_editar_hora_reloj_digital 02B2  
                                                ___ftadd@f1 0022  
                                                ___ftadd@f2 0025  
                                        __size_of_Write_RTC 019C  
                                                ___ftge@ff1 0001  
                                                ___ftge@ff2 0004  
                                           ?_activar_alarma 0001  
                                              eval_poly@res 0037  
                                             ___rparam_used 000001  
                                                ___ftdiv@f1 0009  
                                                ___ftdiv@f2 000C  
                                                ___ftdiv@f3 0013  
                                                ___ftneg@f1 0001  
                                                ___awtoft@c 0009  
                                                ___ftmul@f1 000D  
                                                ___ftmul@f2 0010  
                                                ___ftsub@f1 002E  
                                                ___ftsub@f2 0031  
                                                ___fttol@f1 000D  
                                            __pcstackCOMRAM 0001  
                                              __pidataBANK0 CDA6  
                                              __pidataBANK1 CD4C  
                                                ___lltoft@c 0009  
                                             __end_of_floor E28E  
                                             __end_of_ldexp DF2E  
                                             __end_of_frexp D9D8  
                      __end_of_titila_texto_insert_password DE68  
                     __size_of_titila_texto_insert_password 00B6  
                              _titila_texto_insert_password DDB2  
                                             __end_of_setup D034  
                                           _alarma_activada 00A0  
                                           __CFG_DSWDTPS$G2 000000  
                             ?_selecciona_opcion_fecha_hora 0001  
                                           __CFG_OSC$INTOSC 000000  
                __end_of_ir_a_pantalla_ingresar_contrasenia DDB2  
               __size_of_ir_a_pantalla_ingresar_contrasenia 00AE  
                      ??_ir_a_pantalla_ingresar_contrasenia 0060  
                       ?_ir_a_pantalla_ingresar_contrasenia 0001  
                        _ir_a_pantalla_ingresar_contrasenia DD04  
                                         lcd_gotoxy@address 0007  
                                        __size_of_lcd_putrs 0052  
                                                   ??_floor 0031  
                                                   ??_ldexp 003F  
                                                   ??_frexp 0006  
                  __end_of_ir_a_pantalla_editar_contrasenia DB0A  
                 __size_of_ir_a_pantalla_editar_contrasenia 009E  
                        ??_ir_a_pantalla_editar_contrasenia 0043  
                         ?_ir_a_pantalla_editar_contrasenia 0001  
                          _ir_a_pantalla_editar_contrasenia DA6C  
                                    ??_setHoraMinutoSegundo 003F  
                                              sprintf@width 003D  
                                                   ??_setup 003F  
                                                __pbssBANK0 0060  
                                                __pbssBANK1 0100  
                                        __size_of_eval_poly 00D2  
                                                 ?_Read_RTC 0001  
                                                _dia_semana 00EB  
                                 RtccWriteTime@tempHourWDay 000A  
                                         ??_generar_reporte 0001  
                         __end_of_editar_hora_reloj_digital F7D0  
                                                 ?_RtccWrOn 0001  
                                            lcd_send_byte@n 0003  
                                                   ?___ftge 0001  
                                       _mostrar_presionar_a CDBC  
                                                   ?___wmul 001C  
                                       _anio_ultimo_reporte 0098  
                                             ?_RtccReadDate 0001  
                                             ?_RtccReadTime 0001  
                       __size_of_editar_fecha_reloj_digital 02CE  
                                              ?_Delay1KTCYx 0001  
                                                 ?___altoft 001C  
                                                 ?___awtoft 0009  
                                    __size_of_setDiaMesAnio 008C  
                                                 ?___ftpack 0001  
                          __size_of_guarda_numero_ingresado 008C  
                                                 ?___lltoft 0009  
                             ?_titila_texto_insert_password 0001  
                                         __end_of_Write_RTC ED04  
                                                _lcd_comand CD66  
                                                _lcd_gotoxy CDF2  
                                   ?_titila_alarma_activada 0001  
                                      ?_mostrar_presionar_a 0001  
                                                   _RTCVALH 000F99  
                                                   _RTCVALL 000F98  
                                    _minutos_ultimo_reporte 0094  
                                    verificar_contrasenia@i 0009  
                                                 ?_lcd_init 0001  
                                                 ?_lcd_putc 0001  
                                __size_of_set_reloj_digital 000A  
                                                ??_Read_RTC 0013  
                                                   __Hparam 0000  
                   editar_fecha_reloj_digital@dia_ingresado 00DD  
                                                   __Lparam 0000  
                                  __size_of_lcd_send_nibble 0076  
                                                ??_RtccWrOn 0001  
                                            ??_RtccReadDate 0003  
                                           __size_of___ftge 0090  
                                            ??_RtccReadTime 0003  
                                                   ___awdiv D57C  
                                                   ___ftadd ED04  
                                         __end_of_lcd_putrs D124  
                                                   ___ftdiv E28E  
                                                   ___ftneg CE14  
                                           __size_of___wmul 0026  
                                                   ___ftmul E374  
                                                   ___ftsub CF1E  
                                                   ___fttol E468  
                                          _imprimir_reporte DB0A  
                                                   ___lwdiv D124  
                                                   ___lwmod CF5E  
                                   __size_of_ingreso_numero 0268  
                                                ??___altoft 0020  
                                               _RtccTimeVal 0084  
                                                   __pcinit D1D2  
                                                   _fecha_d 00EE  
                                                   _fecha_u 00EF  
                                                ??___awtoft 000C  
                                                ??___ftpack 0006  
                                         __end_of_eval_poly E000  
                                                   __ramtop 0F00  
                                                ??___lltoft 000D  
                                                   __ptext0 CE38  
                                                   __ptext1 CFEA  
                                                   __ptext2 D31C  
                                                   __ptext3 CD84  
                                                   __ptext4 CD66  
                                                   __ptext5 CD58  
                                                   __ptext6 DDB2  
                                                   __ptext7 D79E  
                                                   __ptext8 DD04  
                                                   __ptext9 D034  
                                                   _buffer2 0114  
                                                   _buffer3 0100  
                                                 _T1CONbits 000FCD  
                                                   _dpowers FE4D  
                                              __size_of_exp 01E8  
                                              __size_of_log 011E  
                                                   _isdigit CDD4  
                                              __size_of_pow 0176  
                            __end_of_titila_alarma_activada D40A  
                                        _numeros_ingresados 00A4  
                                        _numeros_para_fecha 0080  
                                                   _segundo 00A6  
                                     ??_mostrar_presionar_a 000B  
ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias 00E6  
                            ??_selecciona_opcion_fecha_hora 000B  
                                                   _sprintf FA9E  
                                                ??_lcd_init 0005  
                                                ??_lcd_putc 0008  
                                      end_of_initialization D22E  
                                                   exp@sign 0049  
                                             _setDiaMesAnio D712  
                                      lcd_send_byte@address 0004  
                                             __Lmediumconst FE4C  
                                   _segundos_ultimo_reporte 0092  
                               verificar_contrasenia@equals 0007  
                                                   pow@sign 0056  
                                                   postdec1 000FE5  
                                                   postdec2 000FDD  
                                        _seleccionar_opcion D082  
                                                   postinc0 000FEE  
                                                   postinc1 000FE6  
                                                   postinc2 000FDE  
                                     __end_of_lcd_send_byte CEB4  
                            __size_of_ir_a_pantalla_edicion 00AA  
                             __end_of_ir_a_pantalla_edicion DC56  
                                                 _PORTAbits 000F80  
                                                 _PORTCbits 000F82  
                                       ?_seleccionar_opcion 0001  
                                          __CFG_DSBOREN$OFF 000000  
                            __size_of_ir_a_pantalla_inicial 000E  
                             __end_of_ir_a_pantalla_inicial CD66  
                        __end_of_editar_fecha_reloj_digital FA9E  
                                _editar_fecha_reloj_digital F7D0  
                                               ?_lcd_comand 0001  
                                          __CFG_CPUDIV$OSC1 000000  
                                                 _TRISBbits 000F93  
                            ??_titila_texto_insert_password 000B  
                                               ?_lcd_gotoxy 0005  
                                           _LCD_INIT_STRING FE57  
                                          ??_activar_alarma 0043  
                                            ?_setDiaMesAnio 0001  
                                      ??_seleccionar_opcion 0060  
                                               ___ftdiv@exp 0016  
                                     _verificar_contrasenia D4FE  
                                          __CFG_IOL1WAY$OFF 000000  
                                 RtccWriteDate@tempDayMonth 000A  
                                       __CFG_MSSP7B_EN$MSK7 000000  
                                               ___ftmul@exp 0016  
                                     __end_of_titila_opcion E1B0  
                editar_hora_reloj_digital@segundo_ingresado 00E1  
                                          Delay100TCYx@unit 0001  
                                            __end_of___ftge D948  
                                            __end_of___wmul CE82  
                                   _guarda_numero_ingresado D686  
                                 RtccWriteDate@tempHourWDay 000C  
                   editar_hora_reloj_digital@hora_ingresada 00DD  
                                         ??_lcd_send_nibble 0001  
                                             __pbitbssBANK0 07B0  
                                      __size_of_Delay1KTCYx 0010  
                                          __CFG_DSWDTEN$OFF 000000  
                 editar_hora_reloj_digital@minuto_ingresado 00DF  
                                                floor@expon 0034  
                                       start_initialization D1D2  
                                                eval_poly@d 0031  
                                                eval_poly@n 0033  
                                                eval_poly@x 002E  
                                                ldexp@value 003A  
                                           _generar_reporte CEB4  
                                               __end_of_exp F098  
                                               __end_of_log E776  
                                               __end_of_pow EB68  
                                      __end_of_RtccReadDate D8B8  
                                      __end_of_RtccReadTime D2A6  
        __end_of_covertir_valores_de_array_a_escala_decimal E0D8  
       __size_of_covertir_valores_de_array_a_escala_decimal 00D8  
              ??_covertir_valores_de_array_a_escala_decimal 005D  
               ?_covertir_valores_de_array_a_escala_decimal 005B  
                _covertir_valores_de_array_a_escala_decimal E000  
                                                frexp@value 0001  
                                      RtccWriteTime@wasAlrm 0006  
                                      RtccWriteTime@wasWrEn 0007  
                                    __size_of_RtccWriteDate 0136  
                                           RtccWriteDate@di 0003  
                                    __size_of_RtccWriteTime 00FC  
                                         __size_of_Read_RTC 0146  
                                       __size_of_lcd_comand 000E  
                                                  ??___ftge 0007  
                                       __size_of_lcd_gotoxy 0022  
                                                  ??___wmul 0020  
                                            _ingreso_numero F2B6  
                                               __pdataBANK0 00BD  
                                               __pdataBANK1 0128  
                                         __size_of_RtccWrOn 0012  
                                           RtccWriteTime@di 0003  
                                          __CFG_LPT1OSC$OFF 000000  
                                   __size_of_cambiar_opcion 0094  
                                         __size_of___altoft 0078  
                                               _ALRMCFGbits 000F91  
                                   __end_of_LCD_INIT_STRING FE5B  
                                         __size_of___awtoft 0038  
                                         __size_of___ftpack 00AE  
                                         __size_of___lltoft 005C  
                                             __pcstackBANK0 00D3  
                                                 _Write_RTC EB68  
                                           ??_setDiaMesAnio 003F  
                                              _isdigit$2018 0002  
                                  __end_of_imprimir_reporte DBAC  
                                           Delay1KTCYx@unit 0001  
                             __size_of_setHoraMinutoSegundo 007C  
                                             _causa_reporte 00C5  
                                    ?_verificar_contrasenia 0001  
                                         __size_of_lcd_init 0076  
                                               sprintf@flag 003B  
                                         __size_of_lcd_putc 004A  
                                               sprintf@prec 0032  
                                         _array_contrasenia 00BD  
                                                 __pnvBANK0 00E9  
                                          ___lwdiv@dividend 0001  
                                ?_editar_hora_reloj_digital 0001  
                                    __end_of_ingreso_numero F51E  
                                             ?_Delay100TCYx 0001  
                                 ??_guarda_numero_ingresado 0041  
                                             __pmediumconst FE4C  
                                                  ?___awdiv 0001  
                                                  ?___ftadd 0022  
                                                  ?___ftdiv 0009  
                                                  ?___ftneg 0001  
                                                  ?___ftmul 000D  
                                                  ?___ftsub 002E  
                                                  ?___fttol 000D  
                                                  ?___lwdiv 0001  
                                                  ?___lwmod 0008  
                                   RtccWriteTime@tempMinSec 0008  
                               _array_contrasenia_ingresada 0060  
                                   __end_of_generar_reporte CEE6  
                                                 _lcd_putrs D0D2  
                                             _RtccWriteDate E776  
                                             _RtccWriteTime E55C  
                                                  ?_isdigit 0001  
                                                 _eval_poly DF2E  
                                      __CFG_RTCOSC$T1OSCREF 000000  
                                                ?_Write_RTC 0001  
                                          ___lwdiv@quotient 0005  
                                                  ?_sprintf 0022  
                                            __size_of_floor 00DE  
                                            __size_of_ldexp 00C6  
                                            __size_of_frexp 0090  
                              ??_editar_fecha_reloj_digital 005F  
                                            __size_of_setup 004A  
                                          _RtccAlrmTimeDate 0070  
                                            ___wmul@product 0020  
                                                  _LATAbits 000F89  
                                                  _LATBbits 000F8A  
                                                  _PIE3bits 000FA3  
                                                 _segundo_d 00F4  
                                            ??_Delay100TCYx 0001  
                                                 _segundo_u 00F5  
                                           ?_ingreso_numero 0001  
                                          __CFG_WDTPS$32768 000000  
                        editar_fecha_reloj_digital@posicion 00E3  
                                        RtccWriteDate@wasOn 0005  
                                  _txt_insertar_contrasenia 008E  
                                        _Rtcc_read_TimeDate 0068  
                                            ?_RtccWriteDate 0001  
                               __end_of_mostrar_presionar_a CDD4  
                                                ?_lcd_putrs 0009  
                                         ___wmul@multiplier 001C  
                                            ?_RtccWriteTime 0001  
                                                 lcd_init@i 0005  
                                     __size_of_RtccReadDate 008E  
                                              ??_lcd_comand 0005  
                                                ?_eval_poly 002E  
                               ?_editar_fecha_reloj_digital 0001  
                  editar_fecha_reloj_digital@anio_ingresado 00E1  
                                                 lcd_putc@c 0008  
                                     __size_of_RtccReadTime 006E  
                                              ??_lcd_gotoxy 0006  
                           __end_of_guarda_numero_ingresado D712  
                                                 copy_data0 D1E6  
                                                 copy_data1 D206  
                                                  _Read_RTC E8AC  
                                         _array_seleccionar 0128  
                                                 frexp@eptr 0004  
                                           _lcd_send_nibble D2A6  
                                                  __Hrparam 0000  
                                                  _RtccDate 00B5  
                                                  __Lrparam 0000  
                                                  _RtccTime 00B9  
                                                  _RtccWrOn CD94  
                                        __end_of_lcd_comand CD74  
                                        __end_of_lcd_gotoxy CE14  
                                              _RtccReadDate D82A  
                                            _cambiar_opcion D9D8  
                                          __size_of___awdiv 0084  
                                          __size_of___ftadd 01AC  
                                              _RtccReadTime D238  
                                          __size_of___ftdiv 00E6  
                                          __size_of___ftneg 0024  
                                                  ___altoft D40A  
                                          __size_of___ftmul 00F4  
                                          __size_of___ftsub 0040  
                                          __size_of___fttol 00F4  
                                          __size_of___lwdiv 0052  
                                          __size_of___lwmod 0042  
                                                  ___awtoft CEE6  
                                                  ___ftpack DC56  
                                                  ___lltoft D176  
                         ir_a_pantalla_editar_contrasenia@i 0043  
                                          ?_generar_reporte 0001  
                                              _RtccTimeDate 0078  
           _covertir_valores_de_array_a_escala_decimal$2500 00D6  
                                                  _exp$2503 0044  
           _covertir_valores_de_array_a_escala_decimal$2499 00D3  
                                     _ir_a_pantalla_edicion DBAC  
                                                sprintf@len 0037  
                                                sprintf@val 0039  
                                          __size_of_isdigit 001E  
                                           ___lwdiv@divisor 0003  
                                     _ir_a_pantalla_inicial CD58  
                                               ??_Write_RTC 000E  
                                           ___lwdiv@counter 0007  
                                                  __ptext10 CDBC  
                                                  __ptext11 DBAC  
                                                  __ptext20 EB68  
                                                  __ptext12 E0D8  
                                                  __ptext21 D57C  
                                                  __ptext13 CD42  
                                                  __ptext30 E1B0  
                                                  __ptext22 E55C  
                                                  __ptext14 D082  
                                                  __ptext31 D948  
                                                  __ptext23 E776  
                                                  __ptext15 DA6C  
                                                  __ptext40 E28E  
                                                  __ptext32 E468  
                                                  __ptext24 CD94  
                                                  __ptext16 F51E  
                                                  __ptext41 CEE6  
                                                  __ptext33 D8B8  
                                                  __ptext25 E000  
                                                  __ptext17 D482  
                                                  __ptext50 D600  
                                                  __ptext42 D176  
                                                  __ptext34 D40A  
                                                  __ptext26 E9F2  
                                                  __ptext18 F7D0  
                                                  __ptext51 DB0A  
                                                  __ptext43 DC56  
                                                  __ptext35 DF2E  
                                                  __ptext27 E658  
                                                  __ptext19 D712  
                                                  __ptext60 CE82  
                                                  __ptext52 FA9E  
                                                  __ptext44 F098  
                                                  __ptext36 E374  
                                                  __ptext28 EEB0  
                                                  __ptext61 D2A6  
                                                  __ptext53 CDD4  
                                                  __ptext45 D4FE  
                                                  __ptext37 CF1E  
                                                  __ptext29 DE68  
                                                  __ptext62 CD74  
                                                  __ptext54 CE5C  
                                                  __ptext46 D392  
                                                  __ptext38 ED04  
                                                  __ptext63 D9D8  
                                                  __ptext55 CF5E  
                                                  __ptext47 F2B6  
                                                  __ptext39 CE14  
                                                  __ptext64 E8AC  
                                                  __ptext56 D124  
                                                  __ptext48 D686  
                                                  __ptext65 D238  
                                                  __ptext57 D0D2  
                                                  __ptext49 CEB4  
                                                  __ptext66 D82A  
                                                  __ptext58 CFA0  
                                                  __ptext59 CDF2  
                                                  _lcd_init D31C  
                                                  _lcd_putc CFA0  
                                                  _pow$2501 0050  
                                                  _pow$2502 0053  
                                          __size_of_sprintf 03AE  
                                    __size_of_lcd_send_byte 0032  
                                             __size_of_main 0024  
                               __size_of_seleccionar_opcion 0050  
                                                  _minuto_d 00F2  
                                                  _minuto_u 00F3  
                                    __end_of_cambiar_opcion DA6C  
                                             ??_Delay1KTCYx 0001  
                                           ??_RtccWriteDate 0004  
                                  ??_titila_alarma_activada 000B  
                                           ??_RtccWriteTime 0004  
                                               ??_lcd_putrs 000B  
                                                  exp@coeff FE5B  
                                                  log@coeff FE79  
                                               _OSCTUNEbits 000F9B  
                                                _INTCONbits 000FF2  
        __end_of_si_apreta_numero_va_a_pantalla_contrasenia D82A  
       __size_of_si_apreta_numero_va_a_pantalla_contrasenia 008C  
              ??_si_apreta_numero_va_a_pantalla_contrasenia 0060  
               ?_si_apreta_numero_va_a_pantalla_contrasenia 0001  
                _si_apreta_numero_va_a_pantalla_contrasenia D79E  
                                               ??_eval_poly 0035  
                                      _txt_pantalla_edicion 008A  
                                        RtccWriteTime@wasOn 0005  
                                      __end_of_Delay100TCYx CD84  
                                                  isdigit@c 0003  
                                    __size_of_titila_opcion 00D8  
                                   ??_verificar_contrasenia 0003  
                                                 sprintf@ap 0035  
                                                 sprintf@cp 0033  
                                   __end_of_lcd_send_nibble D31C  
                                         ?_imprimir_reporte 0001  
                                                 sprintf@sp 0022  
                                          ___lwmod@dividend 0008  
                                        ??_imprimir_reporte 003F  
                                                _OSCCONbits 000FD3  
                               ??_editar_hora_reloj_digital 005F  
                                   __size_of_activar_alarma 021E  
                                         _boton_seleccionar 0090  
                                           ?_cambiar_opcion 0001  
                                     RtccWriteDate@tempYear 0007  
                              __end_of_setHoraMinutoSegundo D4FE  
                                             _lcd_send_byte CE82  
                                                _RTCCFGbits 000F3F  
                                    ?_ir_a_pantalla_edicion 0001  
                                                  sprintf@c 003C  
                                                  sprintf@f 0024  
                                           ___lwmod@divisor 000A  
                                       __end_of_Delay1KTCYx CD94  
                                           ___lwmod@counter 000C  
                                    ?_ir_a_pantalla_inicial 0001  
                                      RtccWriteDate@wasAlrm 0006  
                                      RtccWriteDate@wasWrEn 0009  
                                     __end_of_setDiaMesAnio D79E  
          covertir_valores_de_array_a_escala_decimal@numero 00D9  
                                        _mes_ultimo_reporte 009A  
                                          ??_ingreso_numero 0041  
                                       _txt_alarma_activada 008C  
                                     lcd_send_nibble@nibble 0002  
