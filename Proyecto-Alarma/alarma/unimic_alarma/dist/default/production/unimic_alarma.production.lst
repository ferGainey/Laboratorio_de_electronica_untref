

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Nov 08 23:59:47 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82  0000                     
    83                           ; Version 1.43
    84                           ; Generated 25/07/2017 GMT
    85                           ; 
    86                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F26J50 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     
   118                           	psect	idataBANK0
   119  00D2FC                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for _array_contrasenia
   123  00D2FC  0001               	dw	1
   124  00D2FE  0002               	dw	2
   125  00D300  0003               	dw	3
   126  00D302  0004               	dw	4
   127                           
   128                           ;initializer for _minuto
   129  00D304  001E               	dw	30
   130                           
   131                           ;initializer for _hora
   132  00D306  0012               	dw	18
   133                           
   134                           ;initializer for _dia
   135  00D308  0008               	dw	8
   136                           
   137                           ;initializer for _diasem
   138  00D30A  0003               	dw	3
   139                           
   140                           ;initializer for _mes
   141  00D30C  0009               	dw	9
   142                           
   143                           ;initializer for _anio
   144  00D30E  000F               	dw	15
   145                           
   146                           	psect	idataBANK1
   147  00D2A2                     __pidataBANK1:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _array_seleccionar
   151  00D2A2  D4                 	db	low STR_1
   152  00D2A3  FF                 	db	high STR_1
   153  00D2A4  ED                 	db	low STR_2
   154  00D2A5  FF                 	db	high STR_2
   155  00D2A6  E8                 	db	low STR_3
   156  00D2A7  FF                 	db	high STR_3
   157  00D2A8  D9                 	db	low STR_4
   158  00D2A9  FF                 	db	high STR_4
   159  00D2AA  E3                 	db	low STR_5
   160  00D2AB  FF                 	db	high STR_5
   161  00D2AC  DE                 	db	low STR_6
   162  00D2AD  FF                 	db	high STR_6
   163                           
   164                           	psect	mediumconst
   165  00FEF4                     __pmediumconst:
   166                           	opt stack 0
   167  00FEF4  00                 	db	0
   168  00FEF5                     _dpowers:
   169                           	opt stack 0
   170  00FEF5  0001               	dw	1
   171  00FEF7  000A               	dw	10
   172  00FEF9  0064               	dw	100
   173  00FEFB  03E8               	dw	1000
   174  00FEFD  2710               	dw	10000
   175  00FEFF                     __end_of_dpowers:
   176                           	opt stack 0
   177  00FEFF                     _LCD_INIT_STRING:
   178                           	opt stack 0
   179  00FEFF  28                 	db	40
   180  00FF00  0C                 	db	12
   181  00FF01  01                 	db	1
   182  00FF02  06                 	db	6
   183  00FF03                     __end_of_LCD_INIT_STRING:
   184                           	opt stack 0
   185  00FF03                     exp@coeff:
   186                           	opt stack 0
   187  00FF03  00                 	db	0
   188  00FF04  80                 	db	128
   189  00FF05  3F                 	db	63
   190  00FF06  72                 	db	114
   191  00FF07  31                 	db	49
   192  00FF08  3F                 	db	63
   193  00FF09  FE                 	db	254
   194  00FF0A  75                 	db	117
   195  00FF0B  3E                 	db	62
   196  00FF0C  58                 	db	88
   197  00FF0D  63                 	db	99
   198  00FF0E  3D                 	db	61
   199  00FF0F  95                 	db	149
   200  00FF10  1D                 	db	29
   201  00FF11  3C                 	db	60
   202  00FF12  C5                 	db	197
   203  00FF13  AE                 	db	174
   204  00FF14  3A                 	db	58
   205  00FF15  79                 	db	121
   206  00FF16  21                 	db	33
   207  00FF17  39                 	db	57
   208  00FF18  94                 	db	148
   209  00FF19  80                 	db	128
   210  00FF1A  37                 	db	55
   211  00FF1B  93                 	db	147
   212  00FF1C  A7                 	db	167
   213  00FF1D  35                 	db	53
   214  00FF1E  56                 	db	86
   215  00FF1F  15                 	db	21
   216  00FF20  34                 	db	52
   217  00FF21                     __end_ofexp@coeff:
   218                           	opt stack 0
   219  00FF21                     log@coeff:
   220                           	opt stack 0
   221  00FF21  00                 	db	0
   222  00FF22  00                 	db	0
   223  00FF23  00                 	db	0
   224  00FF24  00                 	db	0
   225  00FF25  80                 	db	128
   226  00FF26  3F                 	db	63
   227  00FF27  F0                 	db	240
   228  00FF28  FF                 	db	255
   229  00FF29  BE                 	db	190
   230  00FF2A  E2                 	db	226
   231  00FF2B  A9                 	db	169
   232  00FF2C  3E                 	db	62
   233  00FF2D  83                 	db	131
   234  00FF2E  76                 	db	118
   235  00FF2F  BE                 	db	190
   236  00FF30  AE                 	db	174
   237  00FF31  2B                 	db	43
   238  00FF32  3E                 	db	62
   239  00FF33  3C                 	db	60
   240  00FF34  C3                 	db	195
   241  00FF35  BD                 	db	189
   242  00FF36  D2                 	db	210
   243  00FF37  13                 	db	19
   244  00FF38  3D                 	db	61
   245  00FF39  78                 	db	120
   246  00FF3A  D3                 	db	211
   247  00FF3B  BB                 	db	187
   248  00FF3C                     __end_oflog@coeff:
   249                           	opt stack 0
   250  00FF3C                     STR_29:
   251                           
   252                           ; BSR set to: 15
   253  00FF3C  49                 	db	73	;'I'
   254  00FF3D  6E                 	db	110	;'n'
   255  00FF3E  73                 	db	115	;'s'
   256  00FF3F  65                 	db	101	;'e'
   257  00FF40  72                 	db	114	;'r'
   258  00FF41  74                 	db	116	;'t'
   259  00FF42  20                 	db	32
   260  00FF43  6E                 	db	110	;'n'
   261  00FF44  65                 	db	101	;'e'
   262  00FF45  77                 	db	119	;'w'
   263  00FF46  20                 	db	32
   264  00FF47  50                 	db	80	;'P'
   265  00FF48  61                 	db	97	;'a'
   266  00FF49  73                 	db	115	;'s'
   267  00FF4A  73                 	db	115	;'s'
   268  00FF4B  77                 	db	119	;'w'
   269  00FF4C  6F                 	db	111	;'o'
   270  00FF4D  72                 	db	114	;'r'
   271  00FF4E  64                 	db	100	;'d'
   272  00FF4F  20                 	db	32
   273  00FF50  00                 	db	0
   274  00FF51                     STR_17:
   275                           
   276                           ; BSR set to: 15
   277  00FF51  20                 	db	32
   278  00FF52  20                 	db	32
   279  00FF53  20                 	db	32
   280  00FF54  20                 	db	32
   281  00FF55  20                 	db	32
   282  00FF56  20                 	db	32
   283  00FF57  20                 	db	32
   284  00FF58  20                 	db	32
   285  00FF59  20                 	db	32
   286  00FF5A  20                 	db	32
   287  00FF5B  20                 	db	32
   288  00FF5C  20                 	db	32
   289  00FF5D  20                 	db	32
   290  00FF5E  20                 	db	32
   291  00FF5F  20                 	db	32
   292  00FF60  20                 	db	32
   293  00FF61  00                 	db	0
   294  00FF62                     STR_16:
   295                           
   296                           ; BSR set to: 15
   297  00FF62  41                 	db	65	;'A'
   298  00FF63  6C                 	db	108	;'l'
   299  00FF64  61                 	db	97	;'a'
   300  00FF65  72                 	db	114	;'r'
   301  00FF66  6D                 	db	109	;'m'
   302  00FF67  20                 	db	32
   303  00FF68  61                 	db	97	;'a'
   304  00FF69  63                 	db	99	;'c'
   305  00FF6A  74                 	db	116	;'t'
   306  00FF6B  69                 	db	105	;'i'
   307  00FF6C  76                 	db	118	;'v'
   308  00FF6D  61                 	db	97	;'a'
   309  00FF6E  74                 	db	116	;'t'
   310  00FF6F  65                 	db	101	;'e'
   311  00FF70  64                 	db	100	;'d'
   312  00FF71  20                 	db	32
   313  00FF72  00                 	db	0
   314  00FF73                     STR_27:
   315                           
   316                           ; BSR set to: 15
   317  00FF73  49                 	db	73	;'I'
   318  00FF74  6E                 	db	110	;'n'
   319  00FF75  73                 	db	115	;'s'
   320  00FF76  65                 	db	101	;'e'
   321  00FF77  72                 	db	114	;'r'
   322  00FF78  74                 	db	116	;'t'
   323  00FF79  20                 	db	32
   324  00FF7A  50                 	db	80	;'P'
   325  00FF7B  61                 	db	97	;'a'
   326  00FF7C  73                 	db	115	;'s'
   327  00FF7D  73                 	db	115	;'s'
   328  00FF7E  77                 	db	119	;'w'
   329  00FF7F  6F                 	db	111	;'o'
   330  00FF80  72                 	db	114	;'r'
   331  00FF81  64                 	db	100	;'d'
   332  00FF82  20                 	db	32
   333  00FF83  00                 	db	0
   334  00FF84                     STR_7:
   335                           
   336                           ; BSR set to: 15
   337  00FF84  25                 	db	37
   338  00FF85  30                 	db	48	;'0'
   339  00FF86  32                 	db	50	;'2'
   340  00FF87  75                 	db	117	;'u'
   341  00FF88  2F                 	db	47
   342  00FF89  25                 	db	37
   343  00FF8A  30                 	db	48	;'0'
   344  00FF8B  32                 	db	50	;'2'
   345  00FF8C  75                 	db	117	;'u'
   346  00FF8D  2F                 	db	47
   347  00FF8E  25                 	db	37
   348  00FF8F  30                 	db	48	;'0'
   349  00FF90  32                 	db	50	;'2'
   350  00FF91  75                 	db	117	;'u'
   351  00FF92  00                 	db	0
   352  00FF93                     STR_8:
   353                           
   354                           ; BSR set to: 15
   355  00FF93  25                 	db	37
   356  00FF94  30                 	db	48	;'0'
   357  00FF95  32                 	db	50	;'2'
   358  00FF96  75                 	db	117	;'u'
   359  00FF97  3A                 	db	58	;':'
   360  00FF98  25                 	db	37
   361  00FF99  30                 	db	48	;'0'
   362  00FF9A  32                 	db	50	;'2'
   363  00FF9B  75                 	db	117	;'u'
   364  00FF9C  3A                 	db	58	;':'
   365  00FF9D  25                 	db	37
   366  00FF9E  30                 	db	48	;'0'
   367  00FF9F  32                 	db	50	;'2'
   368  00FFA0  75                 	db	117	;'u'
   369  00FFA1  00                 	db	0
   370  00FFA2                     STR_21:
   371                           
   372                           ; BSR set to: 15
   373  00FFA2  41                 	db	65	;'A'
   374  00FFA3  63                 	db	99	;'c'
   375  00FFA4  74                 	db	116	;'t'
   376  00FFA5  69                 	db	105	;'i'
   377  00FFA6  76                 	db	118	;'v'
   378  00FFA7  65                 	db	101	;'e'
   379  00FFA8  20                 	db	32
   380  00FFA9  20                 	db	32
   381  00FFAA  00                 	db	0
   382  00FFAB                     STR_10:
   383                           
   384                           ; BSR set to: 15
   385  00FFAB  50                 	db	80	;'P'
   386  00FFAC  61                 	db	97	;'a'
   387  00FFAD  73                 	db	115	;'s'
   388  00FFAE  73                 	db	115	;'s'
   389  00FFAF  77                 	db	119	;'w'
   390  00FFB0  6F                 	db	111	;'o'
   391  00FFB1  72                 	db	114	;'r'
   392  00FFB2  64                 	db	100	;'d'
   393  00FFB3  00                 	db	0
   394  00FFB4                     STR_22:
   395                           
   396                           ; BSR set to: 15
   397  00FFB4  45                 	db	69	;'E'
   398  00FFB5  64                 	db	100	;'d'
   399  00FFB6  74                 	db	116	;'t'
   400  00FFB7  20                 	db	32
   401  00FFB8  50                 	db	80	;'P'
   402  00FFB9  61                 	db	97	;'a'
   403  00FFBA  73                 	db	115	;'s'
   404  00FFBB  73                 	db	115	;'s'
   405  00FFBC  00                 	db	0
   406  00FFBD                     STR_25:
   407                           
   408                           ; BSR set to: 15
   409  00FFBD  41                 	db	65	;'A'
   410  00FFBE  63                 	db	99	;'c'
   411  00FFBF  74                 	db	116	;'t'
   412  00FFC0  69                 	db	105	;'i'
   413  00FFC1  76                 	db	118	;'v'
   414  00FFC2  65                 	db	101	;'e'
   415  00FFC3  20                 	db	32
   416  00FFC4  00                 	db	0
   417  00FFC5                     STR_14:
   418                           
   419                           ; BSR set to: 15
   420  00FFC5  50                 	db	80	;'P'
   421  00FFC6  72                 	db	114	;'r'
   422  00FFC7  65                 	db	101	;'e'
   423  00FFC8  73                 	db	115	;'s'
   424  00FFC9  73                 	db	115	;'s'
   425  00FFCA  20                 	db	32
   426  00FFCB  41                 	db	65	;'A'
   427  00FFCC  00                 	db	0
   428  00FFCD                     STR_9:
   429                           
   430                           ; BSR set to: 15
   431  00FFCD  49                 	db	73	;'I'
   432  00FFCE  6E                 	db	110	;'n'
   433  00FFCF  73                 	db	115	;'s'
   434  00FFD0  65                 	db	101	;'e'
   435  00FFD1  72                 	db	114	;'r'
   436  00FFD2  74                 	db	116	;'t'
   437  00FFD3  00                 	db	0
   438  00FFD4                     STR_1:
   439                           
   440                           ; BSR set to: 15
   441  00FFD4  20                 	db	32
   442  00FFD5  44                 	db	68	;'D'
   443  00FFD6  69                 	db	105	;'i'
   444  00FFD7  61                 	db	97	;'a'
   445  00FFD8  00                 	db	0
   446  00FFD9                     STR_4:
   447                           
   448                           ; BSR set to: 15
   449  00FFD9  48                 	db	72	;'H'
   450  00FFDA  6F                 	db	111	;'o'
   451  00FFDB  72                 	db	114	;'r'
   452  00FFDC  61                 	db	97	;'a'
   453  00FFDD  00                 	db	0
   454  00FFDE                     STR_6:
   455                           
   456                           ; BSR set to: 15
   457  00FFDE  20                 	db	32
   458  00FFDF  53                 	db	83	;'S'
   459  00FFE0  65                 	db	101	;'e'
   460  00FFE1  67                 	db	103	;'g'
   461  00FFE2  00                 	db	0
   462  00FFE3                     STR_5:
   463                           
   464                           ; BSR set to: 15
   465  00FFE3  20                 	db	32
   466  00FFE4  4D                 	db	77	;'M'
   467  00FFE5  69                 	db	105	;'i'
   468  00FFE6  6E                 	db	110	;'n'
   469  00FFE7  00                 	db	0
   470  00FFE8                     STR_3:
   471                           
   472                           ; BSR set to: 15
   473  00FFE8  41                 	db	65	;'A'
   474  00FFE9  6E                 	db	110	;'n'
   475  00FFEA  69                 	db	105	;'i'
   476  00FFEB  6F                 	db	111	;'o'
   477  00FFEC  00                 	db	0
   478  00FFED                     STR_2:
   479                           
   480                           ; BSR set to: 15
   481  00FFED  20                 	db	32
   482  00FFEE  4D                 	db	77	;'M'
   483  00FFEF  65                 	db	101	;'e'
   484  00FFF0  73                 	db	115	;'s'
   485  00FFF1  00                 	db	0
   486  00FFF2                     STR_13:
   487                           
   488                           ; BSR set to: 15
   489  00FFF2  25                 	db	37
   490  00FFF3  30                 	db	48	;'0'
   491  00FFF4  31                 	db	49	;'1'
   492  00FFF5  75                 	db	117	;'u'
   493  00FFF6  00                 	db	0
   494  0000                     
   495                           ; #config settings
   496  00FFF7  00                 	db	0	; dummy byte at the end
   497  0000                     
   498                           	psect	nvBANK0
   499  0000EF                     __pnvBANK0:
   500                           	opt stack 0
   501  0000EF                     _anio_d:
   502                           	opt stack 0
   503  0000EF                     	ds	1
   504  0000F0                     _anio_u:
   505                           	opt stack 0
   506  0000F0                     	ds	1
   507  0000F1                     _dia_semana:
   508                           	opt stack 0
   509  0000F1                     	ds	1
   510  0000F2                     _mes_d:
   511                           	opt stack 0
   512  0000F2                     	ds	1
   513  0000F3                     _mes_u:
   514                           	opt stack 0
   515  0000F3                     	ds	1
   516  0000F4                     _fecha_d:
   517                           	opt stack 0
   518  0000F4                     	ds	1
   519  0000F5                     _fecha_u:
   520                           	opt stack 0
   521  0000F5                     	ds	1
   522  0000F6                     _hora_d:
   523                           	opt stack 0
   524  0000F6                     	ds	1
   525  0000F7                     _hora_u:
   526                           	opt stack 0
   527  0000F7                     	ds	1
   528  0000F8                     _minuto_d:
   529                           	opt stack 0
   530  0000F8                     	ds	1
   531  0000F9                     _minuto_u:
   532                           	opt stack 0
   533  0000F9                     	ds	1
   534  0000FA                     _segundo_d:
   535                           	opt stack 0
   536  0000FA                     	ds	1
   537  0000FB                     _segundo_u:
   538                           	opt stack 0
   539  0000FB                     	ds	1
   540  0000                     _RTCCFG	set	3903
   541  0000                     _ANCON1	set	3913
   542  0000                     _ANCON0	set	3912
   543  0000                     _RTCCFGbits	set	3903
   544  0000                     _ALRMCFGbits	set	3985
   545  0000                     _EECON2	set	4007
   546  0000                     _INTCONbits	set	4082
   547  0000                     _RTCVALH	set	3993
   548  0000                     _RTCVALL	set	3992
   549  0000                     _TRISBbits	set	3987
   550  0000                     _T1CONbits	set	4045
   551  0000                     _TRISC	set	3988
   552  0000                     _TRISB	set	3987
   553  0000                     _TRISA	set	3986
   554  0000                     _OSCCONbits	set	4051
   555  0000                     _OSCTUNEbits	set	3995
   556  0000                     _LATBbits	set	3978
   557  0000                     _PORTCbits	set	3970
   558  0000                     _PORTAbits	set	3968
   559  0000                     _LATAbits	set	3977
   560  0000                     _PIE3bits	set	4003
   561                           
   562                           	psect	cinit
   563  00D698                     __pcinit:
   564                           	opt stack 0
   565  00D698                     start_initialization:
   566                           	opt stack 0
   567  00D698                     __initialization:
   568                           	opt stack 0
   569                           
   570                           ; Initialize objects allocated to BANK1 (12 bytes)
   571                           ; load TBLPTR registers with __pidataBANK1
   572  00D698  0EA2               	movlw	low __pidataBANK1
   573  00D69A  6EF6               	movwf	tblptrl,c
   574  00D69C  0ED2               	movlw	high __pidataBANK1
   575  00D69E  6EF7               	movwf	tblptrh,c
   576  00D6A0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   577  00D6A2  6EF8               	movwf	tblptru,c
   578  00D6A4  EE01  F000         	lfsr	0,__pdataBANK1
   579  00D6A8  EE10 F00C          	lfsr	1,12
   580  00D6AC                     copy_data0:
   581  00D6AC  0009               	tblrd		*+
   582  00D6AE  CFF5 FFEE          	movff	tablat,postinc0
   583  00D6B2  50E5               	movf	postdec1,w,c
   584  00D6B4  50E1               	movf	fsr1l,w,c
   585  00D6B6  E1FA               	bnz	copy_data0
   586                           
   587                           ; Initialize objects allocated to BANK0 (20 bytes)
   588                           ; load TBLPTR registers with __pidataBANK0
   589  00D6B8  0EFC               	movlw	low __pidataBANK0
   590  00D6BA  6EF6               	movwf	tblptrl,c
   591  00D6BC  0ED2               	movlw	high __pidataBANK0
   592  00D6BE  6EF7               	movwf	tblptrh,c
   593  00D6C0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   594  00D6C2  6EF8               	movwf	tblptru,c
   595  00D6C4  EE00  F0DB         	lfsr	0,__pdataBANK0
   596  00D6C8  EE10 F014          	lfsr	1,20
   597  00D6CC                     copy_data1:
   598  00D6CC  0009               	tblrd		*+
   599  00D6CE  CFF5 FFEE          	movff	tablat,postinc0
   600  00D6D2  50E5               	movf	postdec1,w,c
   601  00D6D4  50E1               	movf	fsr1l,w,c
   602  00D6D6  E1FA               	bnz	copy_data1
   603                           
   604                           ; Clear objects allocated to BITBANK0 (1 bytes)
   605  00D6D8  0100               	movlb	0
   606  00D6DA  6BFC               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   607                           
   608                           ; Clear objects allocated to BANK0 (101 bytes)
   609  00D6DC  EE00  F060         	lfsr	0,__pbssBANK0
   610  00D6E0  0E65               	movlw	101
   611  00D6E2                     clear_0:
   612  00D6E2  6AEE               	clrf	postinc0,c
   613  00D6E4  06E8               	decf	wreg,f,c
   614  00D6E6  E1FD               	bnz	clear_0
   615  00D6E8                     end_of_initialization:
   616                           	opt stack 0
   617  00D6E8                     __end_of__initialization:
   618                           	opt stack 0
   619  00D6E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   620  00D6EA  6EF8               	movwf	tblptru,c
   621  00D6EC  0100               	movlb	0
   622  00D6EE  EFC6  F069         	goto	_main	;jump to C main() function
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           postdec1	equ	0xFE5
   630                           fsr1l	equ	0xFE1
   631                           
   632                           	psect	bitbssBANK0
   633  0007E0                     __pbitbssBANK0:
   634                           	opt stack 0
   635  0007E0                     _flag:
   636                           	opt stack 0
   637  0007E0                     	ds	1
   638                           tblptru	equ	0xFF8
   639                           tblptrh	equ	0xFF7
   640                           tblptrl	equ	0xFF6
   641                           tablat	equ	0xFF5
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           postdec1	equ	0xFE5
   645                           fsr1l	equ	0xFE1
   646                           
   647                           	psect	bssBANK0
   648  000060                     __pbssBANK0:
   649                           	opt stack 0
   650  000060                     _array_contrasenia_ingresada:
   651                           	opt stack 0
   652  000060                     	ds	8
   653  000068                     _Rtcc_read_TimeDate:
   654                           	opt stack 0
   655  000068                     	ds	8
   656  000070                     _RtccAlrmTimeDate:
   657                           	opt stack 0
   658  000070                     	ds	8
   659  000078                     _RtccTimeDate:
   660                           	opt stack 0
   661  000078                     	ds	8
   662  000080                     _numeros_para_fecha:
   663                           	opt stack 0
   664  000080                     	ds	4
   665  000084                     _RtccTimeVal:
   666                           	opt stack 0
   667  000084                     	ds	4
   668  000088                     _errno:
   669                           	opt stack 0
   670  000088                     	ds	2
   671  00008A                     _txt_pantalla_edicion:
   672                           	opt stack 0
   673  00008A                     	ds	2
   674  00008C                     _txt_alarma_activada:
   675                           	opt stack 0
   676  00008C                     	ds	2
   677  00008E                     _txt_insertar_contrasenia:
   678                           	opt stack 0
   679  00008E                     	ds	2
   680  000090                     _boton_seleccionar:
   681                           	opt stack 0
   682  000090                     	ds	2
   683  000092                     _alarma_sonando:
   684                           	opt stack 0
   685  000092                     	ds	2
   686  000094                     _alarma_activada:
   687                           	opt stack 0
   688  000094                     	ds	2
   689  000096                     _motivo_ingreso_de_numeros:
   690                           	opt stack 0
   691  000096                     	ds	2
   692  000098                     _numeros_ingresados:
   693                           	opt stack 0
   694  000098                     	ds	2
   695  00009A                     _segundo:
   696                           	opt stack 0
   697  00009A                     	ds	2
   698  00009C                     _k:
   699                           	opt stack 0
   700  00009C                     	ds	2
   701  00009E                     _c:
   702                           	opt stack 0
   703  00009E                     	ds	2
   704  0000A0                     _b:
   705                           	opt stack 0
   706  0000A0                     	ds	2
   707  0000A2                     _a:
   708                           	opt stack 0
   709  0000A2                     	ds	2
   710  0000A4                     _j:
   711                           	opt stack 0
   712  0000A4                     	ds	2
   713  0000A6                     _i:
   714                           	opt stack 0
   715  0000A6                     	ds	2
   716  0000A8                     _key:
   717                           	opt stack 0
   718  0000A8                     	ds	1
   719  0000A9                     _buffer2:
   720                           	opt stack 0
   721  0000A9                     	ds	20
   722  0000BD                     _RtccDate:
   723                           	opt stack 0
   724  0000BD                     	ds	4
   725  0000C1                     _RtccTime:
   726                           	opt stack 0
   727  0000C1                     	ds	4
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           postinc0	equ	0xFEE
   733                           wreg	equ	0xFE8
   734                           postdec1	equ	0xFE5
   735                           fsr1l	equ	0xFE1
   736                           
   737                           	psect	dataBANK0
   738  0000DB                     __pdataBANK0:
   739                           	opt stack 0
   740  0000DB                     _array_contrasenia:
   741                           	opt stack 0
   742  0000DB                     	ds	8
   743  0000E3                     _minuto:
   744                           	opt stack 0
   745  0000E3                     	ds	2
   746  0000E5                     _hora:
   747                           	opt stack 0
   748  0000E5                     	ds	2
   749  0000E7                     _dia:
   750                           	opt stack 0
   751  0000E7                     	ds	2
   752  0000E9                     _diasem:
   753                           	opt stack 0
   754  0000E9                     	ds	2
   755  0000EB                     _mes:
   756                           	opt stack 0
   757  0000EB                     	ds	2
   758  0000ED                     _anio:
   759                           	opt stack 0
   760  0000ED                     	ds	2
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           postdec1	equ	0xFE5
   768                           fsr1l	equ	0xFE1
   769                           
   770                           	psect	dataBANK1
   771  000100                     __pdataBANK1:
   772                           	opt stack 0
   773  000100                     _array_seleccionar:
   774                           	opt stack 0
   775  000100                     	ds	12
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           wreg	equ	0xFE8
   782                           postdec1	equ	0xFE5
   783                           fsr1l	equ	0xFE1
   784                           
   785                           	psect	cstackBANK0
   786  0000C5                     __pcstackBANK0:
   787                           	opt stack 0
   788  0000C5                     _covertir_valores_de_array_a_escala_decimal$2460:
   789                           	opt stack 0
   790                           
   791                           ; 3 bytes @ 0x0
   792  0000C5                     	ds	3
   793  0000C8                     _covertir_valores_de_array_a_escala_decimal$2461:
   794                           	opt stack 0
   795                           
   796                           ; 3 bytes @ 0x3
   797  0000C8                     	ds	3
   798  0000CB                     covertir_valores_de_array_a_escala_decimal@numero:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x6
   802  0000CB                     	ds	2
   803  0000CD                     covertir_valores_de_array_a_escala_decimal@i:
   804                           	opt stack 0
   805                           
   806                           ; 2 bytes @ 0x8
   807  0000CD                     	ds	2
   808  0000CF                     editar_fecha_reloj_digital@dia_ingresado:
   809                           	opt stack 0
   810  0000CF                     editar_hora_reloj_digital@hora_ingresada:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0xA
   814  0000CF                     	ds	2
   815  0000D1                     editar_fecha_reloj_digital@mes_ingresado:
   816                           	opt stack 0
   817  0000D1                     editar_hora_reloj_digital@minuto_ingresado:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0xC
   821  0000D1                     	ds	2
   822  0000D3                     editar_fecha_reloj_digital@anio_ingresado:
   823                           	opt stack 0
   824  0000D3                     editar_hora_reloj_digital@segundo_ingresado:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0xE
   828  0000D3                     	ds	2
   829  0000D5                     editar_fecha_reloj_digital@posicion:
   830                           	opt stack 0
   831  0000D5                     editar_hora_reloj_digital@posicion:
   832                           	opt stack 0
   833                           
   834                           ; 2 bytes @ 0x10
   835  0000D5                     	ds	2
   836  0000D7                     ??_ir_a_pantalla_edicion:
   837                           
   838                           ; 1 bytes @ 0x12
   839  0000D7                     	ds	1
   840  0000D8                     ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x13
   844  0000D8                     	ds	2
   845  0000DA                     ??_main:
   846                           
   847                           ; 1 bytes @ 0x15
   848  0000DA                     	ds	1
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           postdec1	equ	0xFE5
   856                           fsr1l	equ	0xFE1
   857                           
   858                           	psect	cstackCOMRAM
   859  000001                     __pcstackCOMRAM:
   860                           	opt stack 0
   861  000001                     ??_isdigit:
   862  000001                     ??_cambiar_opcion:
   863  000001                     ??_lcd_send_nibble:
   864  000001                     ?_verificar_contrasenia:
   865                           	opt stack 0
   866  000001                     ?___awdiv:
   867                           	opt stack 0
   868  000001                     ?___lwdiv:
   869                           	opt stack 0
   870  000001                     ?___ftpack:
   871                           	opt stack 0
   872  000001                     ?_frexp:
   873                           	opt stack 0
   874  000001                     ?___ftneg:
   875                           	opt stack 0
   876  000001                     Delay100TCYx@unit:
   877                           	opt stack 0
   878  000001                     Delay1KTCYx@unit:
   879                           	opt stack 0
   880  000001                     RtccReadDate@pDt:
   881                           	opt stack 0
   882  000001                     RtccReadTime@pTm:
   883                           	opt stack 0
   884  000001                     RtccWriteDate@pDt:
   885                           	opt stack 0
   886  000001                     RtccWriteTime@pTm:
   887                           	opt stack 0
   888  000001                     ___awdiv@dividend:
   889                           	opt stack 0
   890  000001                     ___lwdiv@dividend:
   891                           	opt stack 0
   892  000001                     ___ftpack@arg:
   893                           	opt stack 0
   894  000001                     ___ftge@ff1:
   895                           	opt stack 0
   896  000001                     ___ftneg@f1:
   897                           	opt stack 0
   898  000001                     frexp@value:
   899                           	opt stack 0
   900                           
   901                           ; 3 bytes @ 0x0
   902  000001                     	ds	1
   903  000002                     lcd_send_nibble@nibble:
   904                           	opt stack 0
   905  000002                     _isdigit$1985:
   906                           	opt stack 0
   907                           
   908                           ; 1 bytes @ 0x1
   909  000002                     	ds	1
   910  000003                     lcd_send_byte@n:
   911                           	opt stack 0
   912  000003                     RtccWriteDate@di:
   913                           	opt stack 0
   914  000003                     RtccWriteTime@di:
   915                           	opt stack 0
   916  000003                     isdigit@c:
   917                           	opt stack 0
   918  000003                     ___awdiv@divisor:
   919                           	opt stack 0
   920  000003                     ___lwdiv@divisor:
   921                           	opt stack 0
   922  000003                     RtccReadDate@rTD1:
   923                           	opt stack 0
   924  000003                     RtccReadTime@rTD1:
   925                           	opt stack 0
   926                           
   927                           ; 8 bytes @ 0x2
   928  000003                     	ds	1
   929  000004                     lcd_send_byte@address:
   930                           	opt stack 0
   931  000004                     ___ftpack@exp:
   932                           	opt stack 0
   933  000004                     frexp@eptr:
   934                           	opt stack 0
   935  000004                     ___ftge@ff2:
   936                           	opt stack 0
   937                           
   938                           ; 3 bytes @ 0x3
   939  000004                     	ds	1
   940  000005                     lcd_init@i:
   941                           	opt stack 0
   942  000005                     lcd_gotoxy@y:
   943                           	opt stack 0
   944  000005                     lcd_comand@d:
   945                           	opt stack 0
   946  000005                     RtccWriteDate@wasOn:
   947                           	opt stack 0
   948  000005                     RtccWriteTime@wasOn:
   949                           	opt stack 0
   950  000005                     ___awdiv@counter:
   951                           	opt stack 0
   952  000005                     ___ftpack@sign:
   953                           	opt stack 0
   954  000005                     ___lwdiv@quotient:
   955                           	opt stack 0
   956                           
   957                           ; 2 bytes @ 0x4
   958  000005                     	ds	1
   959  000006                     ??___ftpack:
   960  000006                     ??_frexp:
   961  000006                     lcd_gotoxy@x:
   962                           	opt stack 0
   963  000006                     RtccWriteDate@wasAlrm:
   964                           	opt stack 0
   965  000006                     RtccWriteTime@wasAlrm:
   966                           	opt stack 0
   967  000006                     ___awdiv@sign:
   968                           	opt stack 0
   969                           
   970                           ; 1 bytes @ 0x5
   971  000006                     	ds	1
   972  000007                     ??___ftge:
   973  000007                     lcd_gotoxy@address:
   974                           	opt stack 0
   975  000007                     RtccWriteTime@wasWrEn:
   976                           	opt stack 0
   977  000007                     ___lwdiv@counter:
   978                           	opt stack 0
   979  000007                     verificar_contrasenia@equals:
   980                           	opt stack 0
   981  000007                     RtccWriteDate@tempYear:
   982                           	opt stack 0
   983  000007                     ___awdiv@quotient:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x6
   987  000007                     	ds	1
   988  000008                     ?___lwmod:
   989                           	opt stack 0
   990  000008                     lcd_putc@c:
   991                           	opt stack 0
   992  000008                     RtccWriteTime@tempMinSec:
   993                           	opt stack 0
   994  000008                     ___lwmod@dividend:
   995                           	opt stack 0
   996                           
   997                           ; 2 bytes @ 0x7
   998  000008                     	ds	1
   999  000009                     ?___ftdiv:
  1000                           	opt stack 0
  1001  000009                     ?___awtoft:
  1002                           	opt stack 0
  1003  000009                     ?___lltoft:
  1004                           	opt stack 0
  1005  000009                     RtccWriteDate@wasWrEn:
  1006                           	opt stack 0
  1007  000009                     verificar_contrasenia@i:
  1008                           	opt stack 0
  1009  000009                     lcd_putrs@ptr:
  1010                           	opt stack 0
  1011  000009                     ___awtoft@c:
  1012                           	opt stack 0
  1013  000009                     ___ftdiv@f1:
  1014                           	opt stack 0
  1015  000009                     ___lltoft@c:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0x8
  1019  000009                     	ds	1
  1020  00000A                     RtccWriteDate@tempDayMonth:
  1021                           	opt stack 0
  1022  00000A                     RtccWriteTime@tempHourWDay:
  1023                           	opt stack 0
  1024  00000A                     ___lwmod@divisor:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x9
  1028  00000A                     	ds	1
  1029  00000B                     ??_titila_texto_insert_password:
  1030  00000B                     ??_titila_alarma_activada:
  1031  00000B                     ??_titila_opcion:
  1032  00000B                     resetear_pantalla_ingresar_contrasenia@i:
  1033                           	opt stack 0
  1034  00000B                     RtccReadDate@rTD0:
  1035                           	opt stack 0
  1036  00000B                     RtccReadTime@rTD0:
  1037                           	opt stack 0
  1038                           
  1039                           ; 8 bytes @ 0xA
  1040  00000B                     	ds	1
  1041  00000C                     ___awtoft@sign:
  1042                           	opt stack 0
  1043  00000C                     ___lwmod@counter:
  1044                           	opt stack 0
  1045  00000C                     RtccWriteDate@tempHourWDay:
  1046                           	opt stack 0
  1047  00000C                     ___ftdiv@f2:
  1048                           	opt stack 0
  1049                           
  1050                           ; 3 bytes @ 0xB
  1051  00000C                     	ds	1
  1052  00000D                     ??___lltoft:
  1053  00000D                     ?___ftmul:
  1054                           	opt stack 0
  1055  00000D                     ?___fttol:
  1056                           	opt stack 0
  1057  00000D                     ___ftmul@f1:
  1058                           	opt stack 0
  1059  00000D                     ___fttol@f1:
  1060                           	opt stack 0
  1061                           
  1062                           ; 3 bytes @ 0xC
  1063  00000D                     	ds	1
  1064  00000E                     
  1065                           ; 1 bytes @ 0xD
  1066  00000E                     	ds	1
  1067  00000F                     ??___ftdiv:
  1068                           
  1069                           ; 1 bytes @ 0xE
  1070  00000F                     	ds	1
  1071  000010                     ___ftmul@f2:
  1072                           	opt stack 0
  1073                           
  1074                           ; 3 bytes @ 0xF
  1075  000010                     	ds	1
  1076  000011                     ??___fttol:
  1077  000011                     ___lltoft@exp:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x10
  1081  000011                     	ds	1
  1082  000012                     ___ftdiv@cntr:
  1083                           	opt stack 0
  1084                           
  1085                           ; 1 bytes @ 0x11
  1086  000012                     	ds	1
  1087  000013                     ??___ftmul:
  1088  000013                     ___ftdiv@f3:
  1089                           	opt stack 0
  1090                           
  1091                           ; 3 bytes @ 0x12
  1092  000013                     	ds	3
  1093  000016                     ___ftdiv@exp:
  1094                           	opt stack 0
  1095  000016                     ___ftmul@exp:
  1096                           	opt stack 0
  1097  000016                     ___fttol@sign1:
  1098                           	opt stack 0
  1099                           
  1100                           ; 1 bytes @ 0x15
  1101  000016                     	ds	1
  1102  000017                     ___ftdiv@sign:
  1103                           	opt stack 0
  1104  000017                     ___ftmul@f3_as_product:
  1105                           	opt stack 0
  1106  000017                     ___fttol@lval:
  1107                           	opt stack 0
  1108                           
  1109                           ; 4 bytes @ 0x16
  1110  000017                     	ds	3
  1111  00001A                     ___ftmul@cntr:
  1112                           	opt stack 0
  1113                           
  1114                           ; 1 bytes @ 0x19
  1115  00001A                     	ds	1
  1116  00001B                     ___ftmul@sign:
  1117                           	opt stack 0
  1118  00001B                     ___fttol@exp1:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x1A
  1122  00001B                     	ds	1
  1123  00001C                     ?___wmul:
  1124                           	opt stack 0
  1125  00001C                     ?___altoft:
  1126                           	opt stack 0
  1127  00001C                     ___wmul@multiplier:
  1128                           	opt stack 0
  1129  00001C                     ___altoft@c:
  1130                           	opt stack 0
  1131                           
  1132                           ; 4 bytes @ 0x1B
  1133  00001C                     	ds	2
  1134  00001E                     ___wmul@multiplicand:
  1135                           	opt stack 0
  1136                           
  1137                           ; 2 bytes @ 0x1D
  1138  00001E                     	ds	2
  1139  000020                     ??___altoft:
  1140  000020                     ___wmul@product:
  1141                           	opt stack 0
  1142                           
  1143                           ; 2 bytes @ 0x1F
  1144  000020                     	ds	2
  1145  000022                     ?_sprintf:
  1146                           	opt stack 0
  1147  000022                     ?___ftadd:
  1148                           	opt stack 0
  1149  000022                     sprintf@sp:
  1150                           	opt stack 0
  1151  000022                     ___ftadd@f1:
  1152                           	opt stack 0
  1153                           
  1154                           ; 3 bytes @ 0x21
  1155  000022                     	ds	2
  1156  000024                     ___altoft@exp:
  1157                           	opt stack 0
  1158  000024                     sprintf@f:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x23
  1162  000024                     	ds	1
  1163  000025                     ___altoft@sign:
  1164                           	opt stack 0
  1165  000025                     ___ftadd@f2:
  1166                           	opt stack 0
  1167                           
  1168                           ; 3 bytes @ 0x24
  1169  000025                     	ds	3
  1170  000028                     ??___ftadd:
  1171                           
  1172                           ; 1 bytes @ 0x27
  1173  000028                     	ds	3
  1174  00002B                     ___ftadd@sign:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x2A
  1178  00002B                     	ds	1
  1179  00002C                     ??_sprintf:
  1180  00002C                     ___ftadd@exp2:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x2B
  1184  00002C                     	ds	1
  1185  00002D                     ___ftadd@exp1:
  1186                           	opt stack 0
  1187                           
  1188                           ; 1 bytes @ 0x2C
  1189  00002D                     	ds	1
  1190  00002E                     ?___ftsub:
  1191                           	opt stack 0
  1192  00002E                     ?_floor:
  1193                           	opt stack 0
  1194  00002E                     ?_eval_poly:
  1195                           	opt stack 0
  1196  00002E                     ___ftsub@f1:
  1197                           	opt stack 0
  1198  00002E                     floor@x:
  1199                           	opt stack 0
  1200  00002E                     eval_poly@x:
  1201                           	opt stack 0
  1202                           
  1203                           ; 3 bytes @ 0x2D
  1204  00002E                     	ds	2
  1205  000030                     sprintf@ap:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x2F
  1209  000030                     	ds	1
  1210  000031                     eval_poly@d:
  1211                           	opt stack 0
  1212  000031                     ___ftsub@f2:
  1213                           	opt stack 0
  1214  000031                     floor@i:
  1215                           	opt stack 0
  1216                           
  1217                           ; 3 bytes @ 0x30
  1218  000031                     	ds	1
  1219  000032                     sprintf@flag:
  1220                           	opt stack 0
  1221                           
  1222                           ; 1 bytes @ 0x31
  1223  000032                     	ds	1
  1224  000033                     sprintf@val:
  1225                           	opt stack 0
  1226  000033                     eval_poly@n:
  1227                           	opt stack 0
  1228                           
  1229                           ; 2 bytes @ 0x32
  1230  000033                     	ds	1
  1231  000034                     floor@expon:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x33
  1235  000034                     	ds	1
  1236  000035                     ??_eval_poly:
  1237  000035                     sprintf@prec:
  1238                           	opt stack 0
  1239                           
  1240                           ; 1 bytes @ 0x34
  1241  000035                     	ds	1
  1242  000036                     sprintf@width:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x35
  1246  000036                     	ds	1
  1247  000037                     eval_poly@res:
  1248                           	opt stack 0
  1249                           
  1250                           ; 3 bytes @ 0x36
  1251  000037                     	ds	1
  1252  000038                     sprintf@c:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x37
  1256  000038                     	ds	1
  1257  000039                     guarda_numero_ingresado@num:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x38
  1261  000039                     	ds	1
  1262  00003A                     ?_log:
  1263                           	opt stack 0
  1264  00003A                     ?_ldexp:
  1265                           	opt stack 0
  1266  00003A                     ldexp@value:
  1267                           	opt stack 0
  1268  00003A                     log@x:
  1269                           	opt stack 0
  1270                           
  1271                           ; 3 bytes @ 0x39
  1272  00003A                     	ds	1
  1273  00003B                     ??_ingreso_numero:
  1274                           
  1275                           ; 1 bytes @ 0x3A
  1276  00003B                     	ds	2
  1277  00003D                     ??_activar_alarma:
  1278  00003D                     ir_a_pantalla_editar_contrasenia@i:
  1279                           	opt stack 0
  1280  00003D                     ldexp@newexp:
  1281                           	opt stack 0
  1282  00003D                     log@exponent:
  1283                           	opt stack 0
  1284                           
  1285                           ; 2 bytes @ 0x3C
  1286  00003D                     	ds	1
  1287  00003E                     activar_alarma@intentos_de_contrasenia:
  1288                           	opt stack 0
  1289                           
  1290                           ; 2 bytes @ 0x3D
  1291  00003E                     	ds	1
  1292  00003F                     ??_ldexp:
  1293                           
  1294                           ; 1 bytes @ 0x3E
  1295  00003F                     	ds	2
  1296  000041                     ?_exp:
  1297                           	opt stack 0
  1298  000041                     exp@x:
  1299                           	opt stack 0
  1300                           
  1301                           ; 3 bytes @ 0x40
  1302  000041                     	ds	3
  1303  000044                     _exp$2464:
  1304                           	opt stack 0
  1305                           
  1306                           ; 3 bytes @ 0x43
  1307  000044                     	ds	3
  1308  000047                     exp@exponent:
  1309                           	opt stack 0
  1310                           
  1311                           ; 2 bytes @ 0x46
  1312  000047                     	ds	2
  1313  000049                     exp@sign:
  1314                           	opt stack 0
  1315                           
  1316                           ; 1 bytes @ 0x48
  1317  000049                     	ds	1
  1318  00004A                     ?_pow:
  1319                           	opt stack 0
  1320  00004A                     pow@x:
  1321                           	opt stack 0
  1322                           
  1323                           ; 3 bytes @ 0x49
  1324  00004A                     	ds	3
  1325  00004D                     pow@y:
  1326                           	opt stack 0
  1327                           
  1328                           ; 3 bytes @ 0x4C
  1329  00004D                     	ds	3
  1330  000050                     _pow$2462:
  1331                           	opt stack 0
  1332                           
  1333                           ; 3 bytes @ 0x4F
  1334  000050                     	ds	3
  1335  000053                     _pow$2463:
  1336                           	opt stack 0
  1337                           
  1338                           ; 3 bytes @ 0x52
  1339  000053                     	ds	3
  1340  000056                     pow@sign:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x55
  1344  000056                     	ds	1
  1345  000057                     pow@yi:
  1346                           	opt stack 0
  1347                           
  1348                           ; 4 bytes @ 0x56
  1349  000057                     	ds	4
  1350  00005B                     ?_covertir_valores_de_array_a_escala_decimal:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0x5A
  1354  00005B                     	ds	2
  1355  00005D                     ??_covertir_valores_de_array_a_escala_decimal:
  1356                           
  1357                           ; 1 bytes @ 0x5C
  1358  00005D                     	ds	2
  1359  00005F                     ??_editar_fecha_reloj_digital:
  1360  00005F                     ??_editar_hora_reloj_digital:
  1361                           
  1362                           ; 1 bytes @ 0x5E
  1363  00005F                     	ds	1
  1364  000060                     tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           postdec1	equ	0xFE5
  1371                           fsr1l	equ	0xFE1
  1372                           
  1373                           ; 1 bytes @ 0x5F
  1374 ;;
  1375 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1376 ;;
  1377 ;; *************** function _main *****************
  1378 ;; Defined at:
  1379 ;;		line 748 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2  449[None  ] int 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1396 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1397 ;;Total ram usage:        1 bytes
  1398 ;; Hardware stack levels required when called:   13
  1399 ;; This function calls:
  1400 ;;		_Read_RTC
  1401 ;;		_ir_a_pantalla_inicial
  1402 ;;		_setup
  1403 ;; This function is called by:
  1404 ;;		Startup code after reset
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text0
  1409  00D38C                     __ptext0:
  1410                           	opt stack 0
  1411  00D38C                     _main:
  1412                           	opt stack 18
  1413                           
  1414                           ;main.c: 749: setup();
  1415                           
  1416                           ;incstack = 0
  1417  00D38C  EC86  F06A         	call	_setup	;wreg free
  1418  00D390                     
  1419                           ;main.c: 753: Read_RTC();
  1420  00D390  EC27  F076         	call	_Read_RTC	;wreg free
  1421                           
  1422                           ;main.c: 755: ir_a_pantalla_inicial();
  1423  00D394  EC57  F069         	call	_ir_a_pantalla_inicial	;wreg free
  1424  00D398  D7FB               	goto	l450
  1425                           
  1426                           ;main.c: 756: }
  1427                           ;main.c: 758: _delay((unsigned long)((98)*(8000000/4000.0)));
  1428  00D39A  0EFF               	movlw	255
  1429  00D39C  0100               	movlb	0	; () banked
  1430  00D39E  6FDA               	movwf	??_main& (0+255),b
  1431  00D3A0  0E8A               	movlw	138
  1432  00D3A2                     u6297:
  1433  00D3A2  2EE8               	decfsz	wreg,f,c
  1434  00D3A4  D7FE               	bra	u6297
  1435  00D3A6  2FDA               	decfsz	??_main& (0+255),f,b
  1436  00D3A8  D7FC               	bra	u6297
  1437  00D3AA  F000               	nop	
  1438                           
  1439                           ;main.c: 759: return 0;
  1440                           ;	Return value of _main is never used
  1441  00D3AC  EF00  F000         	goto	start
  1442  00D3B0                     __end_of_main:
  1443                           	opt stack 0
  1444                           tblptru	equ	0xFF8
  1445                           tblptrh	equ	0xFF7
  1446                           tblptrl	equ	0xFF6
  1447                           tablat	equ	0xFF5
  1448                           postinc0	equ	0xFEE
  1449                           wreg	equ	0xFE8
  1450                           postdec1	equ	0xFE5
  1451                           fsr1l	equ	0xFE1
  1452                           
  1453 ;; *************** function _setup *****************
  1454 ;; Defined at:
  1455 ;;		line 710 in file "main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;Total ram usage:        0 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    7
  1476 ;; This function calls:
  1477 ;;		_Write_RTC
  1478 ;;		_lcd_comand
  1479 ;;		_lcd_init
  1480 ;;		_set_reloj_digital
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text1
  1487  00D50C                     __ptext1:
  1488                           	opt stack 0
  1489  00D50C                     _setup:
  1490                           	opt stack 23
  1491                           
  1492                           ;main.c: 711: OSCTUNEbits.INTSRC = 1;
  1493                           
  1494                           ;incstack = 0
  1495  00D50C  8E9B               	bsf	3995,7,c	;volatile
  1496                           
  1497                           ;main.c: 712: OSCTUNEbits.PLLEN = 0;
  1498  00D50E  9C9B               	bcf	3995,6,c	;volatile
  1499                           
  1500                           ;main.c: 713: OSCCONbits.IRCF0 = 1;
  1501  00D510  88D3               	bsf	4051,4,c	;volatile
  1502                           
  1503                           ;main.c: 714: OSCCONbits.IRCF1 = 1;
  1504  00D512  8AD3               	bsf	4051,5,c	;volatile
  1505                           
  1506                           ;main.c: 715: OSCCONbits.IRCF2 = 1;
  1507  00D514  8CD3               	bsf	4051,6,c	;volatile
  1508                           
  1509                           ;main.c: 716: OSCCONbits.SCS0 = 0;
  1510  00D516  90D3               	bcf	4051,0,c	;volatile
  1511                           
  1512                           ;main.c: 717: OSCCONbits.SCS1 = 0;
  1513  00D518  92D3               	bcf	4051,1,c	;volatile
  1514                           
  1515                           ;main.c: 719: TRISA = 0b11110000;
  1516  00D51A  0EF0               	movlw	240
  1517  00D51C  6E92               	movwf	3986,c	;volatile
  1518                           
  1519                           ;main.c: 720: TRISB = 0;
  1520  00D51E  0E00               	movlw	0
  1521  00D520  6E93               	movwf	3987,c	;volatile
  1522                           
  1523                           ;main.c: 721: TRISC = 0b11100111;
  1524  00D522  0EE7               	movlw	231
  1525  00D524  6E94               	movwf	3988,c	;volatile
  1526                           
  1527                           ;main.c: 729: ANCON0 = 0b11111111;
  1528  00D526  010F               	movlb	15	; () banked
  1529  00D528  6948               	setf	72,b	;volatile
  1530                           
  1531                           ; BSR set to: 15
  1532                           ;main.c: 731: ANCON1 = 0b11111111;
  1533  00D52A  010F               	movlb	15	; () banked
  1534  00D52C  6949               	setf	73,b	;volatile
  1535                           
  1536                           ; BSR set to: 15
  1537                           ;main.c: 734: RTCCFGbits.RTCEN = 1;
  1538  00D52E  010F               	movlb	15	; () banked
  1539  00D530  8F3F               	bsf	63,7,b	;volatile
  1540                           
  1541                           ; BSR set to: 15
  1542                           ;main.c: 735: RTCCFGbits.RTCWREN = 1;
  1543  00D532  010F               	movlb	15	; () banked
  1544  00D534  8B3F               	bsf	63,5,b	;volatile
  1545                           
  1546                           ; BSR set to: 15
  1547                           ;main.c: 736: T1CONbits.T1OSCEN = 1;
  1548  00D536  86CD               	bsf	4045,3,c	;volatile
  1549                           
  1550                           ; BSR set to: 15
  1551                           ;main.c: 737: Write_RTC();
  1552  00D538  EC85  F077         	call	_Write_RTC	;wreg free
  1553                           
  1554                           ;main.c: 738: lcd_init();
  1555  00D53C  EC4C  F06C         	call	_lcd_init	;wreg free
  1556                           
  1557                           ;main.c: 739: lcd_comand(0b00001100);
  1558  00D540  0E0C               	movlw	12
  1559  00D542  EC5E  F069         	call	_lcd_comand
  1560                           
  1561                           ;main.c: 740: LATBbits.LATB2 = 0;;
  1562  00D546  948A               	bcf	3978,2,c	;volatile
  1563                           
  1564                           ;main.c: 741: LATBbits.LATB1 = 0;;
  1565  00D548  928A               	bcf	3978,1,c	;volatile
  1566                           
  1567                           ;main.c: 742: LATBbits.LATB0 = 0;;
  1568  00D54A  908A               	bcf	3978,0,c	;volatile
  1569                           
  1570                           ;main.c: 744: set_reloj_digital();
  1571  00D54C  EC4C  F069         	call	_set_reloj_digital	;wreg free
  1572                           
  1573                           ;main.c: 745: Write_RTC();
  1574  00D550  EC85  F077         	call	_Write_RTC	;wreg free
  1575  00D554  0012               	return		;funcret
  1576  00D556                     __end_of_setup:
  1577                           	opt stack 0
  1578                           tblptru	equ	0xFF8
  1579                           tblptrh	equ	0xFF7
  1580                           tblptrl	equ	0xFF6
  1581                           tablat	equ	0xFF5
  1582                           postinc0	equ	0xFEE
  1583                           wreg	equ	0xFE8
  1584                           postdec1	equ	0xFE5
  1585                           fsr1l	equ	0xFE1
  1586                           
  1587 ;; *************** function _lcd_init *****************
  1588 ;; Defined at:
  1589 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;		None
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  i               1    4[COMRAM] unsigned char 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1607 ;;Total ram usage:        1 bytes
  1608 ;; Hardware stack levels used:    1
  1609 ;; Hardware stack levels required when called:    2
  1610 ;; This function calls:
  1611 ;;		_Delay1KTCYx
  1612 ;;		_lcd_send_byte
  1613 ;;		_lcd_send_nibble
  1614 ;; This function is called by:
  1615 ;;		_setup
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text2
  1620  00D898                     __ptext2:
  1621                           	opt stack 0
  1622  00D898                     _lcd_init:
  1623                           	opt stack 27
  1624                           
  1625                           ;unmc_lcd_216.c: 120: int8 i;
  1626                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  1627                           
  1628                           ;incstack = 0
  1629  00D898  9693               	bcf	3987,3,c	;volatile
  1630                           
  1631                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  1632  00D89A  9493               	bcf	3987,2,c	;volatile
  1633                           
  1634                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  1635  00D89C  968A               	bcf	3978,3,c	;volatile
  1636                           
  1637                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  1638  00D89E  948A               	bcf	3978,2,c	;volatile
  1639                           
  1640                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  1641  00D8A0  9893               	bcf	3987,4,c	;volatile
  1642                           
  1643                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  1644  00D8A2  9A93               	bcf	3987,5,c	;volatile
  1645                           
  1646                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  1647  00D8A4  9C93               	bcf	3987,6,c	;volatile
  1648                           
  1649                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  1650  00D8A6  9E93               	bcf	3987,7,c	;volatile
  1651                           
  1652                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  1653  00D8A8  0E0A               	movlw	10
  1654  00D8AA  EC6D  F069         	call	_Delay1KTCYx
  1655                           
  1656                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  1657  00D8AE  0E0A               	movlw	10
  1658  00D8B0  EC6D  F069         	call	_Delay1KTCYx
  1659                           
  1660                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  1661  00D8B4  0E0A               	movlw	10
  1662  00D8B6  EC6D  F069         	call	_Delay1KTCYx
  1663                           
  1664                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  1665  00D8BA  0E00               	movlw	0
  1666  00D8BC  6E05               	movwf	lcd_init@i,c
  1667  00D8BE                     l5172:
  1668  00D8BE  0E02               	movlw	2
  1669  00D8C0  6405               	cpfsgt	lcd_init@i,c
  1670  00D8C2  D001               	goto	l476
  1671  00D8C4  D008               	goto	u6250
  1672  00D8C6                     l476:
  1673                           
  1674                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  1675  00D8C6  0E03               	movlw	3
  1676  00D8C8  EC11  F06C         	call	_lcd_send_nibble
  1677                           
  1678                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  1679  00D8CC  0E0A               	movlw	10
  1680  00D8CE  EC6D  F069         	call	_Delay1KTCYx
  1681  00D8D2  2A05               	incf	lcd_init@i,f,c
  1682  00D8D4  D7F4               	goto	l5172
  1683  00D8D6                     u6250:
  1684                           
  1685                           ;unmc_lcd_216.c: 146: }
  1686                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  1687  00D8D6  0E02               	movlw	2
  1688  00D8D8  EC11  F06C         	call	_lcd_send_nibble
  1689                           
  1690                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  1691  00D8DC  0E00               	movlw	0
  1692  00D8DE  6E05               	movwf	lcd_init@i,c
  1693  00D8E0                     l5186:
  1694  00D8E0  0E03               	movlw	3
  1695  00D8E2  6405               	cpfsgt	lcd_init@i,c
  1696  00D8E4  D001               	goto	l478
  1697  00D8E6  0012               	return	
  1698  00D8E8                     l478:
  1699                           
  1700                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1701  00D8E8  5005               	movf	lcd_init@i,w,c
  1702  00D8EA  0D01               	mullw	1
  1703  00D8EC  0EFF               	movlw	low _LCD_INIT_STRING
  1704  00D8EE  24F3               	addwf	prodl,w,c
  1705  00D8F0  6EF6               	movwf	tblptrl,c
  1706  00D8F2  0EFE               	movlw	high _LCD_INIT_STRING
  1707  00D8F4  20F4               	addwfc	prodh,w,c
  1708  00D8F6  6EF7               	movwf	tblptrh,c
  1709  00D8F8                     	if	0	;There are less than 3 active tblptr bytes
  1710  00D8F8                     	endif
  1711  00D8F8  0008               	tblrd		*
  1712  00D8FA  CFF5 F003          	movff	tablat,lcd_send_byte@n
  1713  00D8FE  0E00               	movlw	0
  1714  00D900  ECEB  F069         	call	_lcd_send_byte
  1715                           
  1716                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  1717  00D904  0E0A               	movlw	10
  1718  00D906  EC6D  F069         	call	_Delay1KTCYx
  1719  00D90A  2A05               	incf	lcd_init@i,f,c
  1720  00D90C  D7E9               	goto	l5186
  1721  00D90E                     __end_of_lcd_init:
  1722                           	opt stack 0
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           prodh	equ	0xFF4
  1728                           prodl	equ	0xFF3
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           postdec1	equ	0xFE5
  1732                           fsr1l	equ	0xFE1
  1733                           
  1734 ;; *************** function _Delay1KTCYx *****************
  1735 ;; Defined at:
  1736 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  unit            1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  unit            1    0[COMRAM] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_lcd_init
  1760 ;;		_DelayPORXLCD
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text3
  1765  00D2DA                     __ptext3:
  1766                           	opt stack 0
  1767  00D2DA                     _Delay1KTCYx:
  1768                           	opt stack 28
  1769                           
  1770                           ;incstack = 0
  1771                           ;Delay1KTCYx@unit stored from wreg
  1772  00D2DA  6E01               	movwf	Delay1KTCYx@unit,c
  1773  00D2DC                     l863:
  1774  00D2DC  0EC8               	movlw	200
  1775  00D2DE                     u6307:
  1776  00D2DE  D000               	nop2	
  1777  00D2E0  2EE8               	decfsz	wreg,f,c
  1778  00D2E2  D7FD               	bra	u6307
  1779  00D2E4  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1780  00D2E6  D7FA               	goto	l863
  1781  00D2E8  0012               	return	
  1782  00D2EA                     __end_of_Delay1KTCYx:
  1783                           	opt stack 0
  1784                           tblptru	equ	0xFF8
  1785                           tblptrh	equ	0xFF7
  1786                           tblptrl	equ	0xFF6
  1787                           tablat	equ	0xFF5
  1788                           prodh	equ	0xFF4
  1789                           prodl	equ	0xFF3
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           postdec1	equ	0xFE5
  1793                           fsr1l	equ	0xFE1
  1794                           
  1795 ;; *************** function _lcd_comand *****************
  1796 ;; Defined at:
  1797 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  d               1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  d               1    4[COMRAM] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1815 ;;Total ram usage:        1 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    2
  1818 ;; This function calls:
  1819 ;;		_lcd_send_byte
  1820 ;; This function is called by:
  1821 ;;		_setup
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text4
  1826  00D2BC                     __ptext4:
  1827                           	opt stack 0
  1828  00D2BC                     _lcd_comand:
  1829                           	opt stack 27
  1830                           
  1831                           ;incstack = 0
  1832                           ;lcd_comand@d stored from wreg
  1833  00D2BC  6E05               	movwf	lcd_comand@d,c
  1834                           
  1835                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  1836  00D2BE  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  1837  00D2C2  0E00               	movlw	0
  1838  00D2C4  ECEB  F069         	call	_lcd_send_byte
  1839  00D2C8  0012               	return		;funcret
  1840  00D2CA                     __end_of_lcd_comand:
  1841                           	opt stack 0
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           prodh	equ	0xFF4
  1847                           prodl	equ	0xFF3
  1848                           postinc0	equ	0xFEE
  1849                           wreg	equ	0xFE8
  1850                           postdec1	equ	0xFE5
  1851                           fsr1l	equ	0xFE1
  1852                           
  1853 ;; *************** function _ir_a_pantalla_inicial *****************
  1854 ;; Defined at:
  1855 ;;		line 512 in file "main.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:   12
  1876 ;; This function calls:
  1877 ;;		_set_reloj_digital
  1878 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  1879 ;;		_titila_texto_insert_password
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text5
  1886  00D2AE                     __ptext5:
  1887                           	opt stack 0
  1888  00D2AE                     _ir_a_pantalla_inicial:
  1889                           	opt stack 18
  1890                           
  1891                           ;main.c: 513: set_reloj_digital();
  1892                           
  1893                           ;incstack = 0
  1894  00D2AE  EC4C  F069         	call	_set_reloj_digital	;wreg free
  1895                           
  1896                           ;main.c: 514: titila_texto_insert_password();
  1897  00D2B2  EC51  F070         	call	_titila_texto_insert_password	;wreg free
  1898                           
  1899                           ;main.c: 515: si_apreta_numero_va_a_pantalla_contrasenia();
  1900  00D2B6  EC4A  F06E         	call	_si_apreta_numero_va_a_pantalla_contrasenia	;wreg free
  1901  00D2BA  0012               	return		;funcret
  1902  00D2BC                     __end_of_ir_a_pantalla_inicial:
  1903                           	opt stack 0
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           prodh	equ	0xFF4
  1909                           prodl	equ	0xFF3
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1l	equ	0xFE1
  1914                           
  1915 ;; *************** function _titila_texto_insert_password *****************
  1916 ;; Defined at:
  1917 ;;		line 100 in file "main.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;Total ram usage:        1 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    5
  1938 ;; This function calls:
  1939 ;;		_lcd_gotoxy
  1940 ;;		_lcd_putrs
  1941 ;; This function is called by:
  1942 ;;		_ir_a_pantalla_inicial
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text6
  1947  00E0A2                     __ptext6:
  1948                           	opt stack 0
  1949  00E0A2                     _titila_texto_insert_password:
  1950                           	opt stack 24
  1951                           
  1952                           ;main.c: 101: if (txt_insertar_contrasenia == 0) {
  1953                           
  1954                           ;incstack = 0
  1955  00E0A2  0100               	movlb	0	; () banked
  1956  00E0A4  518E               	movf	_txt_insertar_contrasenia& (0+255),w,b
  1957  00E0A6  0100               	movlb	0	; () banked
  1958  00E0A8  118F               	iorwf	(_txt_insertar_contrasenia+1)& (0+255),w,b
  1959  00E0AA  A4D8               	btfss	status,2,c
  1960  00E0AC  D022               	goto	l185
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 102: txt_insertar_contrasenia = 1;
  1964  00E0AE  0E00               	movlw	0
  1965  00E0B0  0100               	movlb	0	; () banked
  1966  00E0B2  6F8F               	movwf	(_txt_insertar_contrasenia+1)& (0+255),b
  1967  00E0B4  0E01               	movlw	1
  1968  00E0B6  6F8E               	movwf	_txt_insertar_contrasenia& (0+255),b
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;main.c: 103: lcd_gotoxy(1, 1);
  1972  00E0B8  0E01               	movlw	1
  1973  00E0BA  6E05               	movwf	lcd_gotoxy@y,c
  1974  00E0BC  0E01               	movlw	1
  1975  00E0BE  ECA3  F069         	call	_lcd_gotoxy
  1976                           
  1977                           ;main.c: 104: lcd_putrs("Insert");
  1978  00E0C2  0ECD               	movlw	low STR_9
  1979  00E0C4  6E09               	movwf	lcd_putrs@ptr,c
  1980  00E0C6  0EFF               	movlw	high STR_9
  1981  00E0C8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1982  00E0CA  ECFA  F06A         	call	_lcd_putrs	;wreg free
  1983                           
  1984                           ;main.c: 105: lcd_gotoxy(1, 2);
  1985  00E0CE  0E02               	movlw	2
  1986  00E0D0  6E05               	movwf	lcd_gotoxy@y,c
  1987  00E0D2  0E01               	movlw	1
  1988  00E0D4  ECA3  F069         	call	_lcd_gotoxy
  1989                           
  1990                           ;main.c: 106: lcd_putrs("Password");
  1991  00E0D8  0EAB               	movlw	low STR_10
  1992  00E0DA  6E09               	movwf	lcd_putrs@ptr,c
  1993  00E0DC  0EFF               	movlw	high STR_10
  1994  00E0DE  6E0A               	movwf	lcd_putrs@ptr+1,c
  1995  00E0E0  ECFA  F06A         	call	_lcd_putrs	;wreg free
  1996                           
  1997                           ;main.c: 107: _delay((unsigned long)((80)*(8000000/4000.0)));
  1998  00E0E4  0ED0               	movlw	208
  1999  00E0E6  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  2000  00E0E8  0ECA               	movlw	202
  2001  00E0EA                     u6317:
  2002  00E0EA  2EE8               	decfsz	wreg,f,c
  2003  00E0EC  D7FE               	bra	u6317
  2004  00E0EE  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  2005  00E0F0  D7FC               	bra	u6317
  2006  00E0F2                     l185:
  2007                           
  2008                           ;main.c: 108: }
  2009                           ;main.c: 110: if (txt_insertar_contrasenia == 1) {
  2010  00E0F2  0100               	movlb	0	; () banked
  2011  00E0F4  058E               	decf	_txt_insertar_contrasenia& (0+255),w,b
  2012  00E0F6  0100               	movlb	0	; () banked
  2013  00E0F8  118F               	iorwf	(_txt_insertar_contrasenia+1)& (0+255),w,b
  2014  00E0FA  A4D8               	btfss	status,2,c
  2015  00E0FC  0012               	return	
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;main.c: 111: txt_insertar_contrasenia = 0;
  2019  00E0FE  0E00               	movlw	0
  2020  00E100  0100               	movlb	0	; () banked
  2021  00E102  6F8F               	movwf	(_txt_insertar_contrasenia+1)& (0+255),b
  2022  00E104  0E00               	movlw	0
  2023  00E106  6F8E               	movwf	_txt_insertar_contrasenia& (0+255),b
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;main.c: 112: lcd_gotoxy(1, 1);
  2027  00E108  0E01               	movlw	1
  2028  00E10A  6E05               	movwf	lcd_gotoxy@y,c
  2029  00E10C  0E01               	movlw	1
  2030  00E10E  ECA3  F069         	call	_lcd_gotoxy
  2031                           
  2032                           ;main.c: 113: lcd_putrs("        ");
  2033  00E112  0E59               	movlw	low (STR_17+8)
  2034  00E114  6E09               	movwf	lcd_putrs@ptr,c
  2035  00E116  0EFF               	movlw	high (STR_17+8)
  2036  00E118  6E0A               	movwf	lcd_putrs@ptr+1,c
  2037  00E11A  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2038                           
  2039                           ;main.c: 114: lcd_gotoxy(1, 2);
  2040  00E11E  0E02               	movlw	2
  2041  00E120  6E05               	movwf	lcd_gotoxy@y,c
  2042  00E122  0E01               	movlw	1
  2043  00E124  ECA3  F069         	call	_lcd_gotoxy
  2044                           
  2045                           ;main.c: 115: lcd_putrs("        ");
  2046  00E128  0E59               	movlw	low (STR_17+8)
  2047  00E12A  6E09               	movwf	lcd_putrs@ptr,c
  2048  00E12C  0EFF               	movlw	high (STR_17+8)
  2049  00E12E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2050  00E130  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2051                           
  2052                           ;main.c: 116: _delay((unsigned long)((60)*(8000000/4000.0)));
  2053  00E134  0E9C               	movlw	156
  2054  00E136  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  2055  00E138  0ED7               	movlw	215
  2056  00E13A                     u6327:
  2057  00E13A  2EE8               	decfsz	wreg,f,c
  2058  00E13C  D7FE               	bra	u6327
  2059  00E13E  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  2060  00E140  D7FC               	bra	u6327
  2061  00E142  F000               	nop	
  2062  00E144  0012               	return	
  2063  00E146                     __end_of_titila_texto_insert_password:
  2064                           	opt stack 0
  2065                           tblptru	equ	0xFF8
  2066                           tblptrh	equ	0xFF7
  2067                           tblptrl	equ	0xFF6
  2068                           tablat	equ	0xFF5
  2069                           prodh	equ	0xFF4
  2070                           prodl	equ	0xFF3
  2071                           postinc0	equ	0xFEE
  2072                           wreg	equ	0xFE8
  2073                           postdec1	equ	0xFE5
  2074                           fsr1l	equ	0xFE1
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _si_apreta_numero_va_a_pantalla_contrasenia *****************
  2078 ;; Defined at:
  2079 ;;		line 461 in file "main.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:   11
  2100 ;; This function calls:
  2101 ;;		_ir_a_pantalla_ingresar_contrasenia
  2102 ;; This function is called by:
  2103 ;;		_ir_a_pantalla_inicial
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text7
  2108  00DC94                     __ptext7:
  2109                           	opt stack 0
  2110  00DC94                     _si_apreta_numero_va_a_pantalla_contrasenia:
  2111                           	opt stack 18
  2112                           
  2113                           ;main.c: 462: LATAbits.LATA0 = 1;
  2114                           
  2115                           ;incstack = 0
  2116  00DC94  8089               	bsf	3977,0,c	;volatile
  2117                           
  2118                           ;main.c: 463: LATAbits.LATA1 = 0;
  2119  00DC96  9289               	bcf	3977,1,c	;volatile
  2120                           
  2121                           ;main.c: 464: LATAbits.LATA2 = 0;
  2122  00DC98  9489               	bcf	3977,2,c	;volatile
  2123                           
  2124                           ;main.c: 465: LATAbits.LATA3 = 0;
  2125  00DC9A  9689               	bcf	3977,3,c	;volatile
  2126                           
  2127                           ;main.c: 466: {
  2128                           ;main.c: 467: if ((PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) ||
  2129                           ;main.c: 468: (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) ||
  2130                           ;main.c: 469: (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1)) {
  2131  00DC9C  AA80               	btfss	3968,5,c	;volatile
  2132  00DC9E  D002               	goto	u6010
  2133  00DCA0  B089               	btfsc	3977,0,c	;volatile
  2134  00DCA2  D007               	goto	u6050
  2135  00DCA4                     u6010:
  2136  00DCA4  AE80               	btfss	3968,7,c	;volatile
  2137  00DCA6  D002               	goto	u6030
  2138  00DCA8  B089               	btfsc	3977,0,c	;volatile
  2139  00DCAA  D003               	goto	u6050
  2140  00DCAC                     u6030:
  2141  00DCAC  BC80               	btfsc	3968,6,c	;volatile
  2142  00DCAE  A089               	btfss	3977,0,c	;volatile
  2143  00DCB0  D002               	goto	l341
  2144  00DCB2                     u6050:
  2145                           
  2146                           ;main.c: 471: ir_a_pantalla_ingresar_contrasenia();
  2147  00DCB2  EC00  F070         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2148  00DCB6                     l341:
  2149                           
  2150                           ;main.c: 472: }
  2151                           ;main.c: 473: }
  2152                           ;main.c: 474: LATAbits.LATA0 = 0;
  2153  00DCB6  9089               	bcf	3977,0,c	;volatile
  2154                           
  2155                           ;main.c: 475: LATAbits.LATA1 = 1;
  2156  00DCB8  8289               	bsf	3977,1,c	;volatile
  2157                           
  2158                           ;main.c: 476: LATAbits.LATA2 = 0;
  2159  00DCBA  9489               	bcf	3977,2,c	;volatile
  2160                           
  2161                           ;main.c: 477: LATAbits.LATA3 = 0;
  2162  00DCBC  9689               	bcf	3977,3,c	;volatile
  2163                           
  2164                           ;main.c: 478: {
  2165                           ;main.c: 479: if ((PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) ||
  2166                           ;main.c: 480: (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) ||
  2167                           ;main.c: 481: (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1)) {
  2168  00DCBE  AA80               	btfss	3968,5,c	;volatile
  2169  00DCC0  D002               	goto	u6070
  2170  00DCC2  B289               	btfsc	3977,1,c	;volatile
  2171  00DCC4  D007               	goto	u6110
  2172  00DCC6                     u6070:
  2173  00DCC6  AE80               	btfss	3968,7,c	;volatile
  2174  00DCC8  D002               	goto	u6090
  2175  00DCCA  B289               	btfsc	3977,1,c	;volatile
  2176  00DCCC  D003               	goto	u6110
  2177  00DCCE                     u6090:
  2178  00DCCE  BC80               	btfsc	3968,6,c	;volatile
  2179  00DCD0  A289               	btfss	3977,1,c	;volatile
  2180  00DCD2  D002               	goto	l348
  2181  00DCD4                     u6110:
  2182                           
  2183                           ;main.c: 483: ir_a_pantalla_ingresar_contrasenia();
  2184  00DCD4  EC00  F070         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2185  00DCD8                     l348:
  2186                           
  2187                           ;main.c: 484: }
  2188                           ;main.c: 485: }
  2189                           ;main.c: 486: LATAbits.LATA0 = 0;
  2190  00DCD8  9089               	bcf	3977,0,c	;volatile
  2191                           
  2192                           ;main.c: 487: LATAbits.LATA1 = 0;
  2193  00DCDA  9289               	bcf	3977,1,c	;volatile
  2194                           
  2195                           ;main.c: 488: LATAbits.LATA2 = 1;
  2196  00DCDC  8489               	bsf	3977,2,c	;volatile
  2197                           
  2198                           ;main.c: 489: LATAbits.LATA3 = 0;
  2199  00DCDE  9689               	bcf	3977,3,c	;volatile
  2200                           
  2201                           ;main.c: 490: {
  2202                           ;main.c: 491: if ((PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) ||
  2203                           ;main.c: 492: (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) ||
  2204                           ;main.c: 493: (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1)) {
  2205  00DCE0  AA80               	btfss	3968,5,c	;volatile
  2206  00DCE2  D002               	goto	u6130
  2207  00DCE4  B489               	btfsc	3977,2,c	;volatile
  2208  00DCE6  D007               	goto	u6170
  2209  00DCE8                     u6130:
  2210  00DCE8  AE80               	btfss	3968,7,c	;volatile
  2211  00DCEA  D002               	goto	u6150
  2212  00DCEC  B489               	btfsc	3977,2,c	;volatile
  2213  00DCEE  D003               	goto	u6170
  2214  00DCF0                     u6150:
  2215  00DCF0  BC80               	btfsc	3968,6,c	;volatile
  2216  00DCF2  A489               	btfss	3977,2,c	;volatile
  2217  00DCF4  D002               	goto	l355
  2218  00DCF6                     u6170:
  2219                           
  2220                           ;main.c: 495: ir_a_pantalla_ingresar_contrasenia();
  2221  00DCF6  EC00  F070         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2222  00DCFA                     l355:
  2223                           
  2224                           ;main.c: 496: }
  2225                           ;main.c: 497: }
  2226                           ;main.c: 498: LATAbits.LATA0 = 0;
  2227  00DCFA  9089               	bcf	3977,0,c	;volatile
  2228                           
  2229                           ;main.c: 499: LATAbits.LATA1 = 0;
  2230  00DCFC  9289               	bcf	3977,1,c	;volatile
  2231                           
  2232                           ;main.c: 500: LATAbits.LATA2 = 0;
  2233  00DCFE  9489               	bcf	3977,2,c	;volatile
  2234                           
  2235                           ;main.c: 501: LATAbits.LATA3 = 1;
  2236  00DD00  8689               	bsf	3977,3,c	;volatile
  2237                           
  2238                           ;main.c: 502: {
  2239                           ;main.c: 503: if ((PORTAbits.RA5 == 1 && LATAbits.LATA3 == 1) ||
  2240                           ;main.c: 504: (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) ||
  2241                           ;main.c: 505: (PORTAbits.RA6 == 1 && LATAbits.LATA3 == 1)) {
  2242  00DD02  AA80               	btfss	3968,5,c	;volatile
  2243  00DD04  D002               	goto	u6190
  2244  00DD06  B689               	btfsc	3977,3,c	;volatile
  2245  00DD08  D008               	goto	u6230
  2246  00DD0A                     u6190:
  2247  00DD0A  AE80               	btfss	3968,7,c	;volatile
  2248  00DD0C  D002               	goto	u6210
  2249  00DD0E  B689               	btfsc	3977,3,c	;volatile
  2250  00DD10  D004               	goto	u6230
  2251  00DD12                     u6210:
  2252  00DD12  AC80               	btfss	3968,6,c	;volatile
  2253  00DD14  0012               	return	
  2254  00DD16  A689               	btfss	3977,3,c	;volatile
  2255  00DD18  0012               	return	
  2256  00DD1A                     u6230:
  2257                           
  2258                           ;main.c: 507: ir_a_pantalla_ingresar_contrasenia();
  2259  00DD1A  EC00  F070         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2260  00DD1E  0012               	return	
  2261  00DD20                     __end_of_si_apreta_numero_va_a_pantalla_contrasenia:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           tblptrh	equ	0xFF7
  2265                           tblptrl	equ	0xFF6
  2266                           tablat	equ	0xFF5
  2267                           prodh	equ	0xFF4
  2268                           prodl	equ	0xFF3
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           postdec1	equ	0xFE5
  2272                           fsr1l	equ	0xFE1
  2273                           status	equ	0xFD8
  2274                           
  2275 ;; *************** function _ir_a_pantalla_ingresar_contrasenia *****************
  2276 ;; Defined at:
  2277 ;;		line 432 in file "main.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  intentos_de_    2   19[BANK0 ] int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:   10
  2298 ;; This function calls:
  2299 ;;		_activar_alarma
  2300 ;;		_ingreso_numero
  2301 ;;		_ir_a_pantalla_edicion
  2302 ;;		_lcd_gotoxy
  2303 ;;		_lcd_putrs
  2304 ;;		_mostrar_presionar_a
  2305 ;;		_resetear_pantalla_ingresar_contrasenia
  2306 ;;		_verificar_contrasenia
  2307 ;; This function is called by:
  2308 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text8
  2313  00E000                     __ptext8:
  2314                           	opt stack 0
  2315  00E000                     _ir_a_pantalla_ingresar_contrasenia:
  2316                           	opt stack 18
  2317                           
  2318                           ;main.c: 434: int intentos_de_contrasenias = 0;
  2319                           
  2320                           ;incstack = 0
  2321  00E000  0E00               	movlw	0
  2322  00E002  0100               	movlb	0	; () banked
  2323  00E004  6FD9               	movwf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),b
  2324  00E006  0E00               	movlw	0
  2325  00E008  6FD8               	movwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),b
  2326                           
  2327                           ;main.c: 435: numeros_ingresados = 0;
  2328  00E00A  0E00               	movlw	0
  2329  00E00C  0100               	movlb	0	; () banked
  2330  00E00E  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  2331  00E010  0E00               	movlw	0
  2332  00E012  6F98               	movwf	_numeros_ingresados& (0+255),b
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;main.c: 436: lcd_gotoxy(1, 1);
  2336  00E014  0E01               	movlw	1
  2337  00E016  6E05               	movwf	lcd_gotoxy@y,c
  2338  00E018  0E01               	movlw	1
  2339  00E01A  ECA3  F069         	call	_lcd_gotoxy
  2340                           
  2341                           ;main.c: 437: lcd_putrs("Insert Password ");
  2342  00E01E  0E73               	movlw	low STR_27
  2343  00E020  6E09               	movwf	lcd_putrs@ptr,c
  2344  00E022  0EFF               	movlw	high STR_27
  2345  00E024  6E0A               	movwf	lcd_putrs@ptr+1,c
  2346  00E026  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2347                           
  2348                           ;main.c: 438: lcd_gotoxy(1, 2);
  2349  00E02A  0E02               	movlw	2
  2350  00E02C  6E05               	movwf	lcd_gotoxy@y,c
  2351  00E02E  0E01               	movlw	1
  2352  00E030  ECA3  F069         	call	_lcd_gotoxy
  2353                           
  2354                           ;main.c: 439: lcd_putrs("                ");
  2355  00E034  0E51               	movlw	low STR_17
  2356  00E036  6E09               	movwf	lcd_putrs@ptr,c
  2357  00E038  0EFF               	movlw	high STR_17
  2358  00E03A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2359  00E03C  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2360  00E040                     
  2361                           ;main.c: 442: if (numeros_ingresados < 4) {
  2362  00E040  0100               	movlb	0	; () banked
  2363  00E042  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  2364  00E044  D008               	goto	u5950
  2365  00E046  0100               	movlb	0	; () banked
  2366  00E048  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  2367  00E04A  E108               	bnz	l5056
  2368  00E04C  0E04               	movlw	4
  2369  00E04E  0100               	movlb	0	; () banked
  2370  00E050  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  2371  00E052  B0D8               	btfsc	status,0,c
  2372  00E054  D003               	goto	l331
  2373  00E056                     u5950:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;main.c: 443: ingreso_numero();
  2377  00E056  EC46  F07E         	call	_ingreso_numero	;wreg free
  2378                           
  2379                           ;main.c: 444: } else {
  2380  00E05A  D010               	goto	l335
  2381  00E05C                     l331:
  2382  00E05C                     l5056:
  2383                           
  2384                           ;main.c: 445: mostrar_presionar_a();
  2385  00E05C  EC88  F069         	call	_mostrar_presionar_a	;wreg free
  2386                           
  2387                           ;main.c: 446: if (verificar_contrasenia() == 1) {
  2388  00E060  EC3D  F06D         	call	_verificar_contrasenia	;wreg free
  2389  00E064  0401               	decf	?_verificar_contrasenia,w,c
  2390  00E066  1002               	iorwf	?_verificar_contrasenia+1,w,c
  2391  00E068  A4D8               	btfss	status,2,c
  2392  00E06A  D003               	goto	l333
  2393                           
  2394                           ;main.c: 447: ir_a_pantalla_edicion();
  2395  00E06C  ECA7  F06B         	call	_ir_a_pantalla_edicion	;wreg free
  2396                           
  2397                           ;main.c: 448: break;
  2398  00E070  0012               	return	
  2399  00E072                     l333:
  2400                           
  2401                           ;main.c: 450: intentos_de_contrasenias++;
  2402  00E072  0100               	movlb	0	; () banked
  2403  00E074  4BD8               	infsnz	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),f,b
  2404  00E076  2BD9               	incf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),f,b
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;main.c: 451: resetear_pantalla_ingresar_contrasenia();
  2408  00E078  ECAB  F06A         	call	_resetear_pantalla_ingresar_contrasenia	;wreg free
  2409  00E07C                     l335:
  2410                           
  2411                           ;main.c: 452: }
  2412                           ;main.c: 453: }
  2413                           ;main.c: 454: if (intentos_de_contrasenias >= 3) {
  2414  00E07C  0100               	movlb	0	; () banked
  2415  00E07E  BFD9               	btfsc	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),7,b
  2416  00E080  D7DF               	goto	l330
  2417  00E082  0100               	movlb	0	; () banked
  2418  00E084  51D9               	movf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),w,b
  2419  00E086  E105               	bnz	u5970
  2420  00E088  0E03               	movlw	3
  2421  00E08A  0100               	movlb	0	; () banked
  2422  00E08C  5DD8               	subwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),w,b
  2423  00E08E  A0D8               	btfss	status,0,c
  2424  00E090  D7D7               	goto	l330
  2425  00E092                     u5970:
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;main.c: 455: alarma_sonando = 1;
  2429  00E092  0E00               	movlw	0
  2430  00E094  0100               	movlb	0	; () banked
  2431  00E096  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  2432  00E098  0E01               	movlw	1
  2433  00E09A  6F92               	movwf	_alarma_sonando& (0+255),b
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;main.c: 456: activar_alarma();
  2437  00E09C  EC29  F079         	call	_activar_alarma	;wreg free
  2438  00E0A0  D7CF               	goto	l330
  2439  00E0A2                     __end_of_ir_a_pantalla_ingresar_contrasenia:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           postinc0	equ	0xFEE
  2448                           wreg	equ	0xFE8
  2449                           postdec1	equ	0xFE5
  2450                           fsr1l	equ	0xFE1
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _resetear_pantalla_ingresar_contrasenia *****************
  2454 ;; Defined at:
  2455 ;;		line 234 in file "main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  i               2   10[COMRAM] int 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;Total ram usage:        2 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    5
  2476 ;; This function calls:
  2477 ;;		_lcd_gotoxy
  2478 ;;		_lcd_putrs
  2479 ;; This function is called by:
  2480 ;;		_ir_a_pantalla_ingresar_contrasenia
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text9
  2485  00D556                     __ptext9:
  2486                           	opt stack 0
  2487  00D556                     _resetear_pantalla_ingresar_contrasenia:
  2488                           	opt stack 22
  2489                           
  2490                           ;main.c: 235: lcd_gotoxy(1, 2);
  2491                           
  2492                           ;incstack = 0
  2493  00D556  0E02               	movlw	2
  2494  00D558  6E05               	movwf	lcd_gotoxy@y,c
  2495  00D55A  0E01               	movlw	1
  2496  00D55C  ECA3  F069         	call	_lcd_gotoxy
  2497                           
  2498                           ;main.c: 236: lcd_putrs("              ");
  2499  00D560  0E53               	movlw	low (STR_17+2)
  2500  00D562  6E09               	movwf	lcd_putrs@ptr,c
  2501  00D564  0EFF               	movlw	high (STR_17+2)
  2502  00D566  6E0A               	movwf	lcd_putrs@ptr+1,c
  2503  00D568  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2504                           
  2505                           ;main.c: 238: for (int i = 0; i < 0; i++) {
  2506  00D56C  0E00               	movlw	0
  2507  00D56E  6E0C               	movwf	resetear_pantalla_ingresar_contrasenia@i+1,c
  2508  00D570  0E00               	movlw	0
  2509  00D572  6E0B               	movwf	resetear_pantalla_ingresar_contrasenia@i,c
  2510  00D574                     l4996:
  2511  00D574  AE0C               	btfss	resetear_pantalla_ingresar_contrasenia@i+1,7,c
  2512  00D576  D010               	goto	u5920
  2513                           
  2514                           ;main.c: 239: array_contrasenia_ingresada[i] = 0;
  2515  00D578  90D8               	bcf	status,0,c
  2516  00D57A  340B               	rlcf	resetear_pantalla_ingresar_contrasenia@i,w,c
  2517  00D57C  6ED9               	movwf	fsr2l,c
  2518  00D57E  340C               	rlcf	resetear_pantalla_ingresar_contrasenia@i+1,w,c
  2519  00D580  6EDA               	movwf	fsr2h,c
  2520  00D582  0E60               	movlw	low _array_contrasenia_ingresada
  2521  00D584  26D9               	addwf	fsr2l,f,c
  2522  00D586  0E00               	movlw	high _array_contrasenia_ingresada
  2523  00D588  22DA               	addwfc	fsr2h,f,c
  2524  00D58A  0E00               	movlw	0
  2525  00D58C  6EDE               	movwf	postinc2,c
  2526  00D58E  0E00               	movlw	0
  2527  00D590  6EDD               	movwf	postdec2,c
  2528  00D592  4A0B               	infsnz	resetear_pantalla_ingresar_contrasenia@i,f,c
  2529  00D594  2A0C               	incf	resetear_pantalla_ingresar_contrasenia@i+1,f,c
  2530  00D596  D7EE               	goto	l4996
  2531  00D598                     u5920:
  2532                           
  2533                           ;main.c: 240: }
  2534                           ;main.c: 242: numeros_ingresados = 0;
  2535  00D598  0E00               	movlw	0
  2536  00D59A  0100               	movlb	0	; () banked
  2537  00D59C  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  2538  00D59E  0E00               	movlw	0
  2539  00D5A0  6F98               	movwf	_numeros_ingresados& (0+255),b
  2540                           
  2541                           ; BSR set to: 0
  2542  00D5A2  0012               	return		;funcret
  2543  00D5A4                     __end_of_resetear_pantalla_ingresar_contrasenia:
  2544                           	opt stack 0
  2545                           tblptru	equ	0xFF8
  2546                           tblptrh	equ	0xFF7
  2547                           tblptrl	equ	0xFF6
  2548                           tablat	equ	0xFF5
  2549                           prodh	equ	0xFF4
  2550                           prodl	equ	0xFF3
  2551                           postinc0	equ	0xFEE
  2552                           wreg	equ	0xFE8
  2553                           postdec1	equ	0xFE5
  2554                           fsr1l	equ	0xFE1
  2555                           postinc2	equ	0xFDE
  2556                           postdec2	equ	0xFDD
  2557                           fsr2h	equ	0xFDA
  2558                           fsr2l	equ	0xFD9
  2559                           status	equ	0xFD8
  2560                           
  2561 ;; *************** function _mostrar_presionar_a *****************
  2562 ;; Defined at:
  2563 ;;		line 229 in file "main.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    5
  2584 ;; This function calls:
  2585 ;;		_lcd_gotoxy
  2586 ;;		_lcd_putrs
  2587 ;; This function is called by:
  2588 ;;		_ir_a_pantalla_ingresar_contrasenia
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text10
  2593  00D310                     __ptext10:
  2594                           	opt stack 0
  2595  00D310                     _mostrar_presionar_a:
  2596                           	opt stack 22
  2597                           
  2598                           ;main.c: 230: lcd_gotoxy(7, 2);
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;incstack = 0
  2602  00D310  0E02               	movlw	2
  2603  00D312  6E05               	movwf	lcd_gotoxy@y,c
  2604  00D314  0E07               	movlw	7
  2605  00D316  ECA3  F069         	call	_lcd_gotoxy
  2606                           
  2607                           ;main.c: 231: lcd_putrs("Press A");
  2608  00D31A  0EC5               	movlw	low STR_14
  2609  00D31C  6E09               	movwf	lcd_putrs@ptr,c
  2610  00D31E  0EFF               	movlw	high STR_14
  2611  00D320  6E0A               	movwf	lcd_putrs@ptr+1,c
  2612  00D322  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2613  00D326  0012               	return		;funcret
  2614  00D328                     __end_of_mostrar_presionar_a:
  2615                           	opt stack 0
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           prodh	equ	0xFF4
  2621                           prodl	equ	0xFF3
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           postdec1	equ	0xFE5
  2625                           fsr1l	equ	0xFE1
  2626                           postinc2	equ	0xFDE
  2627                           postdec2	equ	0xFDD
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632 ;; *************** function _ir_a_pantalla_edicion *****************
  2633 ;; Defined at:
  2634 ;;		line 404 in file "main.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2650 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    9
  2655 ;; This function calls:
  2656 ;;		_Read_RTC
  2657 ;;		_cambiar_opcion
  2658 ;;		_lcd_gotoxy
  2659 ;;		_lcd_putrs
  2660 ;;		_seleccionar_opcion
  2661 ;;		_set_reloj_digital
  2662 ;;		_titila_opcion
  2663 ;; This function is called by:
  2664 ;;		_ir_a_pantalla_ingresar_contrasenia
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text11
  2669  00D74E                     __ptext11:
  2670                           	opt stack 0
  2671  00D74E                     _ir_a_pantalla_edicion:
  2672                           	opt stack 18
  2673                           
  2674                           ;main.c: 405: lcd_gotoxy(1, 1);
  2675                           
  2676                           ;incstack = 0
  2677  00D74E  0E01               	movlw	1
  2678  00D750  6E05               	movwf	lcd_gotoxy@y,c
  2679  00D752  0E01               	movlw	1
  2680  00D754  ECA3  F069         	call	_lcd_gotoxy
  2681                           
  2682                           ;main.c: 406: lcd_putrs("Active ");
  2683  00D758  0EBD               	movlw	low STR_25
  2684  00D75A  6E09               	movwf	lcd_putrs@ptr,c
  2685  00D75C  0EFF               	movlw	high STR_25
  2686  00D75E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2687  00D760  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2688                           
  2689                           ;main.c: 407: lcd_gotoxy(1, 2);
  2690  00D764  0E02               	movlw	2
  2691  00D766  6E05               	movwf	lcd_gotoxy@y,c
  2692  00D768  0E01               	movlw	1
  2693  00D76A  ECA3  F069         	call	_lcd_gotoxy
  2694                           
  2695                           ;main.c: 408: lcd_putrs("Edt Pass");
  2696  00D76E  0EB4               	movlw	low STR_22
  2697  00D770  6E09               	movwf	lcd_putrs@ptr,c
  2698  00D772  0EFF               	movlw	high STR_22
  2699  00D774  6E0A               	movwf	lcd_putrs@ptr+1,c
  2700  00D776  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2701  00D77A                     
  2702                           ;main.c: 411: Read_RTC();
  2703  00D77A  EC27  F076         	call	_Read_RTC	;wreg free
  2704                           
  2705                           ;main.c: 413: set_reloj_digital();
  2706  00D77E  EC4C  F069         	call	_set_reloj_digital	;wreg free
  2707                           
  2708                           ;main.c: 414: titila_opcion();
  2709  00D782  ECFA  F070         	call	_titila_opcion	;wreg free
  2710                           
  2711                           ;main.c: 415: cambiar_opcion();
  2712  00D786  EC67  F06F         	call	_cambiar_opcion	;wreg free
  2713                           
  2714                           ;main.c: 416: seleccionar_opcion();
  2715  00D78A  ECD2  F06A         	call	_seleccionar_opcion	;wreg free
  2716                           
  2717                           ;main.c: 419: LATAbits.LATA0 = 0;
  2718  00D78E  9089               	bcf	3977,0,c	;volatile
  2719                           
  2720                           ;main.c: 420: LATAbits.LATA1 = 1;
  2721  00D790  8289               	bsf	3977,1,c	;volatile
  2722                           
  2723                           ;main.c: 421: LATAbits.LATA2 = 0;
  2724  00D792  9489               	bcf	3977,2,c	;volatile
  2725                           
  2726                           ;main.c: 422: LATAbits.LATA3 = 0;
  2727  00D794  9689               	bcf	3977,3,c	;volatile
  2728                           
  2729                           ;main.c: 423: if (PORTCbits.RC2 == 1) {
  2730  00D796  B482               	btfsc	3970,2,c	;volatile
  2731  00D798  0012               	return	
  2732  00D79A  D7EF               	goto	l320
  2733  00D79C                     
  2734                           ;main.c: 426: _delay((unsigned long)((98)*(8000000/4000.0)));
  2735  00D79C  0EFF               	movlw	255
  2736  00D79E  0100               	movlb	0	; () banked
  2737  00D7A0  6FD7               	movwf	??_ir_a_pantalla_edicion& (0+255),b
  2738  00D7A2  0E8A               	movlw	138
  2739  00D7A4                     u6337:
  2740  00D7A4  2EE8               	decfsz	wreg,f,c
  2741  00D7A6  D7FE               	bra	u6337
  2742  00D7A8  2FD7               	decfsz	??_ir_a_pantalla_edicion& (0+255),f,b
  2743  00D7AA  D7FC               	bra	u6337
  2744  00D7AC  F000               	nop	
  2745  00D7AE  A482               	btfss	3970,2,c	;volatile
  2746  00D7B0  D7E4               	goto	l320
  2747  00D7B2  D7F4               	goto	l324
  2748  00D7B4                     __end_of_ir_a_pantalla_edicion:
  2749                           	opt stack 0
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postdec1	equ	0xFE5
  2759                           fsr1l	equ	0xFE1
  2760                           postinc2	equ	0xFDE
  2761                           postdec2	equ	0xFDD
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _titila_opcion *****************
  2767 ;; Defined at:
  2768 ;;		line 379 in file "main.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;		None
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2786 ;;Total ram usage:        1 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    5
  2789 ;; This function calls:
  2790 ;;		_lcd_gotoxy
  2791 ;;		_lcd_putrs
  2792 ;; This function is called by:
  2793 ;;		_ir_a_pantalla_edicion
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text12
  2798  00E1F4                     __ptext12:
  2799                           	opt stack 0
  2800  00E1F4                     _titila_opcion:
  2801                           	opt stack 21
  2802                           
  2803                           ;main.c: 380: if (txt_pantalla_edicion == 0) {
  2804                           
  2805                           ;incstack = 0
  2806  00E1F4  0100               	movlb	0	; () banked
  2807  00E1F6  518A               	movf	_txt_pantalla_edicion& (0+255),w,b
  2808  00E1F8  0100               	movlb	0	; () banked
  2809  00E1FA  118B               	iorwf	(_txt_pantalla_edicion+1)& (0+255),w,b
  2810  00E1FC  A4D8               	btfss	status,2,c
  2811  00E1FE  D022               	goto	l313
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;main.c: 381: txt_pantalla_edicion = 1;
  2815  00E200  0E00               	movlw	0
  2816  00E202  0100               	movlb	0	; () banked
  2817  00E204  6F8B               	movwf	(_txt_pantalla_edicion+1)& (0+255),b
  2818  00E206  0E01               	movlw	1
  2819  00E208  6F8A               	movwf	_txt_pantalla_edicion& (0+255),b
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;main.c: 382: lcd_gotoxy(1, 1);
  2823  00E20A  0E01               	movlw	1
  2824  00E20C  6E05               	movwf	lcd_gotoxy@y,c
  2825  00E20E  0E01               	movlw	1
  2826  00E210  ECA3  F069         	call	_lcd_gotoxy
  2827                           
  2828                           ;main.c: 383: lcd_putrs("Active  ");
  2829  00E214  0EA2               	movlw	low STR_21
  2830  00E216  6E09               	movwf	lcd_putrs@ptr,c
  2831  00E218  0EFF               	movlw	high STR_21
  2832  00E21A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2833  00E21C  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2834                           
  2835                           ;main.c: 384: lcd_gotoxy(1, 2);
  2836  00E220  0E02               	movlw	2
  2837  00E222  6E05               	movwf	lcd_gotoxy@y,c
  2838  00E224  0E01               	movlw	1
  2839  00E226  ECA3  F069         	call	_lcd_gotoxy
  2840                           
  2841                           ;main.c: 385: lcd_putrs("Edt Pass");
  2842  00E22A  0EB4               	movlw	low STR_22
  2843  00E22C  6E09               	movwf	lcd_putrs@ptr,c
  2844  00E22E  0EFF               	movlw	high STR_22
  2845  00E230  6E0A               	movwf	lcd_putrs@ptr+1,c
  2846  00E232  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2847                           
  2848                           ;main.c: 386: _delay((unsigned long)((80)*(8000000/4000.0)));
  2849  00E236  0ED0               	movlw	208
  2850  00E238  6E0B               	movwf	??_titila_opcion& (0+255),c
  2851  00E23A  0ECA               	movlw	202
  2852  00E23C                     u6347:
  2853  00E23C  2EE8               	decfsz	wreg,f,c
  2854  00E23E  D7FE               	bra	u6347
  2855  00E240  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  2856  00E242  D7FC               	bra	u6347
  2857  00E244                     l313:
  2858                           
  2859                           ;main.c: 387: }
  2860                           ;main.c: 389: if (txt_pantalla_edicion == 1) {
  2861  00E244  0100               	movlb	0	; () banked
  2862  00E246  058A               	decf	_txt_pantalla_edicion& (0+255),w,b
  2863  00E248  0100               	movlb	0	; () banked
  2864  00E24A  118B               	iorwf	(_txt_pantalla_edicion+1)& (0+255),w,b
  2865  00E24C  A4D8               	btfss	status,2,c
  2866  00E24E  0012               	return	
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;main.c: 390: txt_pantalla_edicion = 0;
  2870  00E250  0E00               	movlw	0
  2871  00E252  0100               	movlb	0	; () banked
  2872  00E254  6F8B               	movwf	(_txt_pantalla_edicion+1)& (0+255),b
  2873  00E256  0E00               	movlw	0
  2874  00E258  6F8A               	movwf	_txt_pantalla_edicion& (0+255),b
  2875                           
  2876                           ; BSR set to: 0
  2877                           ;main.c: 392: if (boton_seleccionar == 0) {
  2878  00E25A  0100               	movlb	0	; () banked
  2879  00E25C  5190               	movf	_boton_seleccionar& (0+255),w,b
  2880  00E25E  0100               	movlb	0	; () banked
  2881  00E260  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2882  00E262  A4D8               	btfss	status,2,c
  2883  00E264  D00B               	goto	l315
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;main.c: 393: lcd_gotoxy(1, 1);
  2887  00E266  0E01               	movlw	1
  2888  00E268  6E05               	movwf	lcd_gotoxy@y,c
  2889  00E26A  0E01               	movlw	1
  2890  00E26C  ECA3  F069         	call	_lcd_gotoxy
  2891                           
  2892                           ;main.c: 394: lcd_putrs("       ");
  2893  00E270  0E5A               	movlw	low (STR_17+9)
  2894  00E272  6E09               	movwf	lcd_putrs@ptr,c
  2895  00E274  0EFF               	movlw	high (STR_17+9)
  2896  00E276  6E0A               	movwf	lcd_putrs@ptr+1,c
  2897  00E278  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2898  00E27C                     l315:
  2899                           
  2900                           ;main.c: 395: }
  2901                           ;main.c: 396: if (boton_seleccionar == 1) {
  2902  00E27C  0100               	movlb	0	; () banked
  2903  00E27E  0590               	decf	_boton_seleccionar& (0+255),w,b
  2904  00E280  0100               	movlb	0	; () banked
  2905  00E282  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2906  00E284  A4D8               	btfss	status,2,c
  2907  00E286  D00B               	goto	l316
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;main.c: 397: lcd_gotoxy(1, 2);
  2911  00E288  0E02               	movlw	2
  2912  00E28A  6E05               	movwf	lcd_gotoxy@y,c
  2913  00E28C  0E01               	movlw	1
  2914  00E28E  ECA3  F069         	call	_lcd_gotoxy
  2915                           
  2916                           ;main.c: 398: lcd_putrs("        ");
  2917  00E292  0E59               	movlw	low (STR_17+8)
  2918  00E294  6E09               	movwf	lcd_putrs@ptr,c
  2919  00E296  0EFF               	movlw	high (STR_17+8)
  2920  00E298  6E0A               	movwf	lcd_putrs@ptr+1,c
  2921  00E29A  ECFA  F06A         	call	_lcd_putrs	;wreg free
  2922  00E29E                     l316:
  2923                           
  2924                           ;main.c: 399: }
  2925                           ;main.c: 400: _delay((unsigned long)((60)*(8000000/4000.0)));
  2926  00E29E  0E9C               	movlw	156
  2927  00E2A0  6E0B               	movwf	??_titila_opcion& (0+255),c
  2928  00E2A2  0ED7               	movlw	215
  2929  00E2A4                     u6357:
  2930  00E2A4  2EE8               	decfsz	wreg,f,c
  2931  00E2A6  D7FE               	bra	u6357
  2932  00E2A8  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  2933  00E2AA  D7FC               	bra	u6357
  2934  00E2AC  F000               	nop	
  2935  00E2AE  0012               	return	
  2936  00E2B0                     __end_of_titila_opcion:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           postdec1	equ	0xFE5
  2947                           fsr1l	equ	0xFE1
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _set_reloj_digital *****************
  2955 ;; Defined at:
  2956 ;;		line 95 in file "main.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    6
  2977 ;; This function calls:
  2978 ;;		_setDiaMesAnio
  2979 ;;		_setHoraMinutoSegundo
  2980 ;; This function is called by:
  2981 ;;		_ir_a_pantalla_edicion
  2982 ;;		_ir_a_pantalla_inicial
  2983 ;;		_setup
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text13
  2988  00D298                     __ptext13:
  2989                           	opt stack 0
  2990  00D298                     _set_reloj_digital:
  2991                           	opt stack 23
  2992                           
  2993                           ;main.c: 96: setDiaMesAnio();
  2994                           
  2995                           ;incstack = 0
  2996  00D298  EC04  F06E         	call	_setDiaMesAnio	;wreg free
  2997                           
  2998                           ;main.c: 97: setHoraMinutoSegundo();
  2999  00D29C  ECFF  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3000  00D2A0  0012               	return		;funcret
  3001  00D2A2                     __end_of_set_reloj_digital:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           prodh	equ	0xFF4
  3008                           prodl	equ	0xFF3
  3009                           postinc0	equ	0xFEE
  3010                           wreg	equ	0xFE8
  3011                           postdec1	equ	0xFE5
  3012                           fsr1l	equ	0xFE1
  3013                           postinc2	equ	0xFDE
  3014                           postdec2	equ	0xFDD
  3015                           fsr2h	equ	0xFDA
  3016                           fsr2l	equ	0xFD9
  3017                           status	equ	0xFD8
  3018                           
  3019 ;; *************** function _seleccionar_opcion *****************
  3020 ;; Defined at:
  3021 ;;		line 358 in file "main.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;Total ram usage:        0 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    8
  3042 ;; This function calls:
  3043 ;;		_activar_alarma
  3044 ;;		_editar_fecha_reloj_digital
  3045 ;;		_editar_hora_reloj_digital
  3046 ;;		_ir_a_pantalla_editar_contrasenia
  3047 ;; This function is called by:
  3048 ;;		_ir_a_pantalla_edicion
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text14
  3053  00D5A4                     __ptext14:
  3054                           	opt stack 0
  3055  00D5A4                     _seleccionar_opcion:
  3056                           	opt stack 18
  3057                           
  3058                           ;main.c: 359: LATAbits.LATA0 = 1;
  3059                           
  3060                           ;incstack = 0
  3061  00D5A4  8089               	bsf	3977,0,c	;volatile
  3062                           
  3063                           ;main.c: 360: LATAbits.LATA1 = 0;
  3064  00D5A6  9289               	bcf	3977,1,c	;volatile
  3065                           
  3066                           ;main.c: 361: LATAbits.LATA2 = 0;
  3067  00D5A8  9489               	bcf	3977,2,c	;volatile
  3068                           
  3069                           ;main.c: 362: LATAbits.LATA3 = 0;
  3070  00D5AA  9689               	bcf	3977,3,c	;volatile
  3071                           
  3072                           ;main.c: 363: if (PORTCbits.RC2 == 1 && LATAbits.LATA0 == 1) {
  3073  00D5AC  A482               	btfss	3970,2,c	;volatile
  3074  00D5AE  0012               	return	
  3075  00D5B0  A089               	btfss	3977,0,c	;volatile
  3076  00D5B2  0012               	return	
  3077                           
  3078                           ;main.c: 364: if (boton_seleccionar == 0) {
  3079  00D5B4  0100               	movlb	0	; () banked
  3080  00D5B6  5190               	movf	_boton_seleccionar& (0+255),w,b
  3081  00D5B8  0100               	movlb	0	; () banked
  3082  00D5BA  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3083  00D5BC  B4D8               	btfsc	status,2,c
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;main.c: 365: activar_alarma();
  3087  00D5BE  EC29  F079         	call	_activar_alarma	;wreg free
  3088                           
  3089                           ;main.c: 366: }
  3090                           ;main.c: 367: if (boton_seleccionar == 1) {
  3091  00D5C2  0100               	movlb	0	; () banked
  3092  00D5C4  0590               	decf	_boton_seleccionar& (0+255),w,b
  3093  00D5C6  0100               	movlb	0	; () banked
  3094  00D5C8  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3095  00D5CA  B4D8               	btfsc	status,2,c
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;main.c: 368: ir_a_pantalla_editar_contrasenia();
  3099  00D5CC  ECB1  F06F         	call	_ir_a_pantalla_editar_contrasenia	;wreg free
  3100                           
  3101                           ;main.c: 369: }
  3102                           ;main.c: 370: if (boton_seleccionar == 2) {
  3103  00D5D0  0E02               	movlw	2
  3104  00D5D2  0100               	movlb	0	; () banked
  3105  00D5D4  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3106  00D5D6  0100               	movlb	0	; () banked
  3107  00D5D8  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3108  00D5DA  B4D8               	btfsc	status,2,c
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;main.c: 371: editar_fecha_reloj_digital();
  3112  00D5DC  EC2A  F07D         	call	_editar_fecha_reloj_digital	;wreg free
  3113                           
  3114                           ;main.c: 372: }
  3115                           ;main.c: 373: if (boton_seleccionar == 3) {
  3116  00D5E0  0E03               	movlw	3
  3117  00D5E2  0100               	movlb	0	; () banked
  3118  00D5E4  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3119  00D5E6  0100               	movlb	0	; () banked
  3120  00D5E8  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3121  00D5EA  A4D8               	btfss	status,2,c
  3122  00D5EC  0012               	return	
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;main.c: 374: editar_hora_reloj_digital();
  3126  00D5EE  EC04  F07B         	call	_editar_hora_reloj_digital	;wreg free
  3127  00D5F2  0012               	return	
  3128  00D5F4                     __end_of_seleccionar_opcion:
  3129                           	opt stack 0
  3130                           tblptru	equ	0xFF8
  3131                           tblptrh	equ	0xFF7
  3132                           tblptrl	equ	0xFF6
  3133                           tablat	equ	0xFF5
  3134                           prodh	equ	0xFF4
  3135                           prodl	equ	0xFF3
  3136                           postinc0	equ	0xFEE
  3137                           wreg	equ	0xFE8
  3138                           postdec1	equ	0xFE5
  3139                           fsr1l	equ	0xFE1
  3140                           postinc2	equ	0xFDE
  3141                           postdec2	equ	0xFDD
  3142                           fsr2h	equ	0xFDA
  3143                           fsr2l	equ	0xFD9
  3144                           status	equ	0xFD8
  3145                           
  3146 ;; *************** function _ir_a_pantalla_editar_contrasenia *****************
  3147 ;; Defined at:
  3148 ;;		line 518 in file "main.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  i               2   60[COMRAM] int 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3166 ;;Total ram usage:        2 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    7
  3169 ;; This function calls:
  3170 ;;		_ingreso_numero
  3171 ;;		_lcd_gotoxy
  3172 ;;		_lcd_putrs
  3173 ;; This function is called by:
  3174 ;;		_seleccionar_opcion
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text15
  3179  00DF62                     __ptext15:
  3180                           	opt stack 0
  3181  00DF62                     _ir_a_pantalla_editar_contrasenia:
  3182                           	opt stack 18
  3183                           
  3184                           ;main.c: 519: numeros_ingresados = 0;
  3185                           
  3186                           ;incstack = 0
  3187  00DF62  0E00               	movlw	0
  3188  00DF64  0100               	movlb	0	; () banked
  3189  00DF66  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3190  00DF68  0E00               	movlw	0
  3191  00DF6A  6F98               	movwf	_numeros_ingresados& (0+255),b
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;main.c: 520: lcd_gotoxy(1, 1);
  3195  00DF6C  0E01               	movlw	1
  3196  00DF6E  6E05               	movwf	lcd_gotoxy@y,c
  3197  00DF70  0E01               	movlw	1
  3198  00DF72  ECA3  F069         	call	_lcd_gotoxy
  3199                           
  3200                           ;main.c: 521: lcd_putrs("Insert new Password ");
  3201  00DF76  0E3C               	movlw	low STR_29
  3202  00DF78  6E09               	movwf	lcd_putrs@ptr,c
  3203  00DF7A  0EFF               	movlw	high STR_29
  3204  00DF7C  6E0A               	movwf	lcd_putrs@ptr+1,c
  3205  00DF7E  ECFA  F06A         	call	_lcd_putrs	;wreg free
  3206                           
  3207                           ;main.c: 522: lcd_gotoxy(1, 2);
  3208  00DF82  0E02               	movlw	2
  3209  00DF84  6E05               	movwf	lcd_gotoxy@y,c
  3210  00DF86  0E01               	movlw	1
  3211  00DF88  ECA3  F069         	call	_lcd_gotoxy
  3212                           
  3213                           ;main.c: 523: lcd_putrs("                ");
  3214  00DF8C  0E51               	movlw	low STR_17
  3215  00DF8E  6E09               	movwf	lcd_putrs@ptr,c
  3216  00DF90  0EFF               	movlw	high STR_17
  3217  00DF92  6E0A               	movwf	lcd_putrs@ptr+1,c
  3218  00DF94  ECFA  F06A         	call	_lcd_putrs	;wreg free
  3219  00DF98                     
  3220                           ;main.c: 525: if (numeros_ingresados < 4) {
  3221  00DF98  0100               	movlb	0	; () banked
  3222  00DF9A  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3223  00DF9C  D008               	goto	u5380
  3224  00DF9E  0100               	movlb	0	; () banked
  3225  00DFA0  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3226  00DFA2  E108               	bnz	l4664
  3227  00DFA4  0E04               	movlw	4
  3228  00DFA6  0100               	movlb	0	; () banked
  3229  00DFA8  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3230  00DFAA  B0D8               	btfsc	status,0,c
  3231  00DFAC  D003               	goto	l376
  3232  00DFAE                     u5380:
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;main.c: 526: ingreso_numero();
  3236  00DFAE  EC46  F07E         	call	_ingreso_numero	;wreg free
  3237                           
  3238                           ;main.c: 527: } else {
  3239  00DFB2  D7F2               	goto	l375
  3240  00DFB4                     l376:
  3241  00DFB4                     l4664:
  3242                           
  3243                           ;main.c: 528: for (int i = 0; i < 4; i++) {
  3244  00DFB4  0E00               	movlw	0
  3245  00DFB6  6E3E               	movwf	ir_a_pantalla_editar_contrasenia@i+1,c
  3246  00DFB8  0E00               	movlw	0
  3247  00DFBA  6E3D               	movwf	ir_a_pantalla_editar_contrasenia@i,c
  3248  00DFBC                     l4666:
  3249  00DFBC  BE3E               	btfsc	ir_a_pantalla_editar_contrasenia@i+1,7,c
  3250  00DFBE  D006               	goto	l378
  3251  00DFC0  503E               	movf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3252  00DFC2  E11D               	bnz	l382
  3253  00DFC4  0E04               	movlw	4
  3254  00DFC6  5C3D               	subwf	ir_a_pantalla_editar_contrasenia@i,w,c
  3255  00DFC8  B0D8               	btfsc	status,0,c
  3256  00DFCA  0012               	return	
  3257  00DFCC                     l378:
  3258                           
  3259                           ;main.c: 529: array_contrasenia[i] = array_contrasenia_ingresada[i];
  3260  00DFCC  90D8               	bcf	status,0,c
  3261  00DFCE  343D               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3262  00DFD0  6ED9               	movwf	fsr2l,c
  3263  00DFD2  343E               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3264  00DFD4  6EDA               	movwf	fsr2h,c
  3265  00DFD6  0E60               	movlw	low _array_contrasenia_ingresada
  3266  00DFD8  26D9               	addwf	fsr2l,f,c
  3267  00DFDA  0E00               	movlw	high _array_contrasenia_ingresada
  3268  00DFDC  22DA               	addwfc	fsr2h,f,c
  3269  00DFDE  90D8               	bcf	status,0,c
  3270  00DFE0  343D               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3271  00DFE2  6EE1               	movwf	fsr1l,c
  3272  00DFE4  343E               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3273  00DFE6  6EE2               	movwf	fsr1h,c
  3274  00DFE8  0EDB               	movlw	low _array_contrasenia
  3275  00DFEA  26E1               	addwf	fsr1l,f,c
  3276  00DFEC  0E00               	movlw	high _array_contrasenia
  3277  00DFEE  22E2               	addwfc	fsr1h,f,c
  3278  00DFF0  CFDE FFE6          	movff	postinc2,postinc1
  3279  00DFF4  CFDD FFE5          	movff	postdec2,postdec1
  3280  00DFF8  4A3D               	infsnz	ir_a_pantalla_editar_contrasenia@i,f,c
  3281  00DFFA  2A3E               	incf	ir_a_pantalla_editar_contrasenia@i+1,f,c
  3282  00DFFC  D7DF               	goto	l4666
  3283  00DFFE                     l382:
  3284  00DFFE  0012               	return		;funcret
  3285  00E000                     __end_of_ir_a_pantalla_editar_contrasenia:
  3286                           	opt stack 0
  3287                           tblptru	equ	0xFF8
  3288                           tblptrh	equ	0xFF7
  3289                           tblptrl	equ	0xFF6
  3290                           tablat	equ	0xFF5
  3291                           prodh	equ	0xFF4
  3292                           prodl	equ	0xFF3
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           postinc1	equ	0xFE6
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305 ;; *************** function _editar_hora_reloj_digital *****************
  3306 ;; Defined at:
  3307 ;;		line 637 in file "main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  segundo_ingr    2   14[BANK0 ] int 
  3312 ;;  minuto_ingre    2   12[BANK0 ] int 
  3313 ;;  hora_ingresa    2   10[BANK0 ] int 
  3314 ;;  posicion        2   16[BANK0 ] int 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      void 
  3317 ;; Registers used:
  3318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3325 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3327 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3328 ;;Total ram usage:        9 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    7
  3331 ;; This function calls:
  3332 ;;		_Write_RTC
  3333 ;;		_covertir_valores_de_array_a_escala_decimal
  3334 ;;		_ingreso_numero
  3335 ;;		_setHoraMinutoSegundo
  3336 ;; This function is called by:
  3337 ;;		_seleccionar_opcion
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           
  3341                           	psect	text16
  3342  00F608                     __ptext16:
  3343                           	opt stack 0
  3344  00F608                     _editar_hora_reloj_digital:
  3345                           	opt stack 18
  3346                           
  3347                           ;main.c: 638: int posicion = 0;
  3348                           
  3349                           ;incstack = 0
  3350  00F608  0E00               	movlw	0
  3351  00F60A  0100               	movlb	0	; () banked
  3352  00F60C  6FD6               	movwf	(editar_hora_reloj_digital@posicion+1)& (0+255),b
  3353  00F60E  0E00               	movlw	0
  3354  00F610  6FD5               	movwf	editar_hora_reloj_digital@posicion& (0+255),b
  3355                           
  3356                           ;main.c: 639: motivo_ingreso_de_numeros = 1;
  3357  00F612  0E00               	movlw	0
  3358  00F614  0100               	movlb	0	; () banked
  3359  00F616  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3360  00F618  0E01               	movlw	1
  3361  00F61A  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;main.c: 641: if (posicion == 0) {
  3365  00F61C  0100               	movlb	0	; () banked
  3366  00F61E  51D5               	movf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3367  00F620  0100               	movlb	0	; () banked
  3368  00F622  11D6               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3369  00F624  A4D8               	btfss	status,2,c
  3370  00F626  D04C               	goto	l421
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;main.c: 642: numeros_ingresados = 0;
  3374  00F628  0E00               	movlw	0
  3375  00F62A  0100               	movlb	0	; () banked
  3376  00F62C  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3377  00F62E  0E00               	movlw	0
  3378  00F630  6F98               	movwf	_numeros_ingresados& (0+255),b
  3379                           
  3380                           ;main.c: 643: int hora_ingresada = 0;
  3381  00F632  0E00               	movlw	0
  3382  00F634  0100               	movlb	0	; () banked
  3383  00F636  6FD0               	movwf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),b
  3384  00F638  0E00               	movlw	0
  3385  00F63A  6FCF               	movwf	editar_hora_reloj_digital@hora_ingresada& (0+255),b
  3386                           
  3387                           ;main.c: 644: while (numeros_ingresados < 3) {
  3388  00F63C  D02A               	goto	l426
  3389  00F63E                     
  3390                           ; BSR set to: 0
  3391                           ;main.c: 645: ingreso_numero();
  3392                           
  3393                           ; BSR set to: 0
  3394  00F63E  EC46  F07E         	call	_ingreso_numero	;wreg free
  3395                           
  3396                           ;main.c: 646: if (numeros_ingresados == 2) {
  3397  00F642  0E02               	movlw	2
  3398  00F644  0100               	movlb	0	; () banked
  3399  00F646  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  3400  00F648  0100               	movlb	0	; () banked
  3401  00F64A  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3402  00F64C  A4D8               	btfss	status,2,c
  3403  00F64E  D021               	goto	l426
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;main.c: 647: hora_ingresada = covertir_valores_de_array_a_escala_decimal();
  3407  00F650  EC78  F074         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3408  00F654  C05B  F0CF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@hora_ingre
      +                          sada
  3409  00F658  C05C  F0D0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@hora_ing
      +                          resada+1
  3410                           
  3411                           ;main.c: 648: if ((0 <= hora_ingresada) && (hora_ingresada <= 23)) {
  3412  00F65C  0100               	movlb	0	; () banked
  3413  00F65E  BFD0               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3414  00F660  D013               	goto	l425
  3415                           
  3416                           ; BSR set to: 0
  3417  00F662  0100               	movlb	0	; () banked
  3418  00F664  BFD0               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3419  00F666  D008               	goto	u5590
  3420  00F668  0100               	movlb	0	; () banked
  3421  00F66A  51D0               	movf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),w,b
  3422  00F66C  E10D               	bnz	l4788
  3423  00F66E  0E18               	movlw	24
  3424  00F670  0100               	movlb	0	; () banked
  3425  00F672  5DCF               	subwf	editar_hora_reloj_digital@hora_ingresada& (0+255),w,b
  3426  00F674  B0D8               	btfsc	status,0,c
  3427  00F676  D008               	goto	l425
  3428  00F678                     u5590:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;main.c: 649: hora = hora_ingresada;
  3432  00F678  C0CF  F0E5         	movff	editar_hora_reloj_digital@hora_ingresada,_hora
  3433  00F67C  C0D0  F0E6         	movff	editar_hora_reloj_digital@hora_ingresada+1,_hora+1
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;main.c: 650: numeros_ingresados++;
  3437  00F680  0100               	movlb	0	; () banked
  3438  00F682  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  3439  00F684  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3440                           
  3441                           ;main.c: 651: } else {
  3442  00F686  D005               	goto	l426
  3443  00F688                     l425:
  3444  00F688                     l4788:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;main.c: 652: numeros_ingresados = 0;
  3448  00F688  0E00               	movlw	0
  3449  00F68A  0100               	movlb	0	; () banked
  3450  00F68C  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3451  00F68E  0E00               	movlw	0
  3452  00F690  6F98               	movwf	_numeros_ingresados& (0+255),b
  3453  00F692                     l426:
  3454                           
  3455                           ; BSR set to: 0
  3456                           
  3457                           ; BSR set to: 0
  3458                           
  3459                           ; BSR set to: 0
  3460                           
  3461                           ; BSR set to: 0
  3462  00F692  0100               	movlb	0	; () banked
  3463  00F694  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3464  00F696  D7D3               	goto	l423
  3465  00F698  0100               	movlb	0	; () banked
  3466  00F69A  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3467  00F69C  E105               	bnz	l4792
  3468  00F69E  0E03               	movlw	3
  3469  00F6A0  0100               	movlb	0	; () banked
  3470  00F6A2  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3471  00F6A4  A0D8               	btfss	status,0,c
  3472  00F6A6  D7CB               	goto	l423
  3473  00F6A8                     l4792:
  3474                           
  3475                           ; BSR set to: 0
  3476                           ;main.c: 653: }
  3477                           ;main.c: 654: }
  3478                           ;main.c: 655: }
  3479                           ;main.c: 657: setHoraMinutoSegundo();
  3480  00F6A8  ECFF  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3481                           
  3482                           ;main.c: 658: posicion++;
  3483  00F6AC  0100               	movlb	0	; () banked
  3484  00F6AE  4BD5               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3485  00F6B0  2BD6               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;main.c: 659: _delay((unsigned long)((50)*(8000000/4000.0)));
  3489  00F6B2  0E82               	movlw	130
  3490  00F6B4  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3491  00F6B6  0EDE               	movlw	222
  3492  00F6B8                     u6367:
  3493  00F6B8  2EE8               	decfsz	wreg,f,c
  3494  00F6BA  D7FE               	bra	u6367
  3495  00F6BC  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3496  00F6BE  D7FC               	bra	u6367
  3497  00F6C0                     l421:
  3498                           
  3499                           ;main.c: 660: }
  3500                           ;main.c: 663: if (posicion == 1) {
  3501  00F6C0  0100               	movlb	0	; () banked
  3502  00F6C2  05D5               	decf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3503  00F6C4  0100               	movlb	0	; () banked
  3504  00F6C6  11D6               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3505  00F6C8  A4D8               	btfss	status,2,c
  3506  00F6CA  D04C               	goto	l428
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;main.c: 664: numeros_ingresados = 0;
  3510  00F6CC  0E00               	movlw	0
  3511  00F6CE  0100               	movlb	0	; () banked
  3512  00F6D0  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3513  00F6D2  0E00               	movlw	0
  3514  00F6D4  6F98               	movwf	_numeros_ingresados& (0+255),b
  3515                           
  3516                           ;main.c: 665: int minuto_ingresado = 0;
  3517  00F6D6  0E00               	movlw	0
  3518  00F6D8  0100               	movlb	0	; () banked
  3519  00F6DA  6FD2               	movwf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),b
  3520  00F6DC  0E00               	movlw	0
  3521  00F6DE  6FD1               	movwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),b
  3522                           
  3523                           ;main.c: 666: while (numeros_ingresados < 3) {
  3524  00F6E0  D02A               	goto	l433
  3525  00F6E2                     
  3526                           ; BSR set to: 0
  3527                           ;main.c: 667: ingreso_numero();
  3528                           
  3529                           ; BSR set to: 0
  3530  00F6E2  EC46  F07E         	call	_ingreso_numero	;wreg free
  3531                           
  3532                           ;main.c: 668: if (numeros_ingresados == 2) {
  3533  00F6E6  0E02               	movlw	2
  3534  00F6E8  0100               	movlb	0	; () banked
  3535  00F6EA  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  3536  00F6EC  0100               	movlb	0	; () banked
  3537  00F6EE  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3538  00F6F0  A4D8               	btfss	status,2,c
  3539  00F6F2  D021               	goto	l433
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;main.c: 669: minuto_ingresado = covertir_valores_de_array_a_escala_decimal();
  3543  00F6F4  EC78  F074         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3544  00F6F8  C05B  F0D1         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@minuto_ing
      +                          resado
  3545  00F6FC  C05C  F0D2         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@minuto_i
      +                          ngresado+1
  3546                           
  3547                           ;main.c: 670: if ((0 <= minuto_ingresado) && (minuto_ingresado <= 59)) {
  3548  00F700  0100               	movlb	0	; () banked
  3549  00F702  BFD2               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3550  00F704  D013               	goto	l432
  3551                           
  3552                           ; BSR set to: 0
  3553  00F706  0100               	movlb	0	; () banked
  3554  00F708  BFD2               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3555  00F70A  D008               	goto	u5640
  3556  00F70C  0100               	movlb	0	; () banked
  3557  00F70E  51D2               	movf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),w,b
  3558  00F710  E10D               	bnz	l4816
  3559  00F712  0E3C               	movlw	60
  3560  00F714  0100               	movlb	0	; () banked
  3561  00F716  5DD1               	subwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),w,b
  3562  00F718  B0D8               	btfsc	status,0,c
  3563  00F71A  D008               	goto	l432
  3564  00F71C                     u5640:
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;main.c: 671: minuto = minuto_ingresado;
  3568  00F71C  C0D1  F0E3         	movff	editar_hora_reloj_digital@minuto_ingresado,_minuto
  3569  00F720  C0D2  F0E4         	movff	editar_hora_reloj_digital@minuto_ingresado+1,_minuto+1
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;main.c: 672: numeros_ingresados++;
  3573  00F724  0100               	movlb	0	; () banked
  3574  00F726  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  3575  00F728  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3576                           
  3577                           ;main.c: 673: } else {
  3578  00F72A  D005               	goto	l433
  3579  00F72C                     l432:
  3580  00F72C                     l4816:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;main.c: 674: numeros_ingresados = 0;
  3584  00F72C  0E00               	movlw	0
  3585  00F72E  0100               	movlb	0	; () banked
  3586  00F730  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3587  00F732  0E00               	movlw	0
  3588  00F734  6F98               	movwf	_numeros_ingresados& (0+255),b
  3589  00F736                     l433:
  3590                           
  3591                           ; BSR set to: 0
  3592                           
  3593                           ; BSR set to: 0
  3594                           
  3595                           ; BSR set to: 0
  3596                           
  3597                           ; BSR set to: 0
  3598  00F736  0100               	movlb	0	; () banked
  3599  00F738  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3600  00F73A  D7D3               	goto	l430
  3601  00F73C  0100               	movlb	0	; () banked
  3602  00F73E  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3603  00F740  E105               	bnz	l4820
  3604  00F742  0E03               	movlw	3
  3605  00F744  0100               	movlb	0	; () banked
  3606  00F746  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3607  00F748  A0D8               	btfss	status,0,c
  3608  00F74A  D7CB               	goto	l430
  3609  00F74C                     l4820:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;main.c: 675: }
  3613                           ;main.c: 676: }
  3614                           ;main.c: 677: }
  3615                           ;main.c: 679: setHoraMinutoSegundo();
  3616  00F74C  ECFF  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3617                           
  3618                           ;main.c: 680: posicion++;
  3619  00F750  0100               	movlb	0	; () banked
  3620  00F752  4BD5               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3621  00F754  2BD6               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;main.c: 681: _delay((unsigned long)((50)*(8000000/4000.0)));
  3625  00F756  0E82               	movlw	130
  3626  00F758  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3627  00F75A  0EDE               	movlw	222
  3628  00F75C                     u6377:
  3629  00F75C  2EE8               	decfsz	wreg,f,c
  3630  00F75E  D7FE               	bra	u6377
  3631  00F760  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3632  00F762  D7FC               	bra	u6377
  3633  00F764                     l428:
  3634                           
  3635                           ;main.c: 682: }
  3636                           ;main.c: 685: if (posicion == 2) {
  3637  00F764  0E02               	movlw	2
  3638  00F766  0100               	movlb	0	; () banked
  3639  00F768  19D5               	xorwf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3640  00F76A  0100               	movlb	0	; () banked
  3641  00F76C  11D6               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3642  00F76E  A4D8               	btfss	status,2,c
  3643  00F770  D04C               	goto	l435
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;main.c: 686: numeros_ingresados = 0;
  3647  00F772  0E00               	movlw	0
  3648  00F774  0100               	movlb	0	; () banked
  3649  00F776  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3650  00F778  0E00               	movlw	0
  3651  00F77A  6F98               	movwf	_numeros_ingresados& (0+255),b
  3652                           
  3653                           ;main.c: 687: int segundo_ingresado = 0;
  3654  00F77C  0E00               	movlw	0
  3655  00F77E  0100               	movlb	0	; () banked
  3656  00F780  6FD4               	movwf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),b
  3657  00F782  0E00               	movlw	0
  3658  00F784  6FD3               	movwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),b
  3659                           
  3660                           ;main.c: 688: while (numeros_ingresados < 3) {
  3661  00F786  D02A               	goto	l440
  3662  00F788                     
  3663                           ; BSR set to: 0
  3664                           ;main.c: 689: ingreso_numero();
  3665                           
  3666                           ; BSR set to: 0
  3667  00F788  EC46  F07E         	call	_ingreso_numero	;wreg free
  3668                           
  3669                           ;main.c: 690: if (numeros_ingresados == 2) {
  3670  00F78C  0E02               	movlw	2
  3671  00F78E  0100               	movlb	0	; () banked
  3672  00F790  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  3673  00F792  0100               	movlb	0	; () banked
  3674  00F794  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3675  00F796  A4D8               	btfss	status,2,c
  3676  00F798  D021               	goto	l440
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 691: segundo_ingresado = covertir_valores_de_array_a_escala_decimal();
  3680  00F79A  EC78  F074         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3681  00F79E  C05B  F0D3         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@segundo_in
      +                          gresado
  3682  00F7A2  C05C  F0D4         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@segundo_
      +                          ingresado+1
  3683                           
  3684                           ;main.c: 692: if ((0 <= segundo_ingresado) && (segundo_ingresado <= 59)) {
  3685  00F7A6  0100               	movlb	0	; () banked
  3686  00F7A8  BFD4               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  3687  00F7AA  D013               	goto	l439
  3688                           
  3689                           ; BSR set to: 0
  3690  00F7AC  0100               	movlb	0	; () banked
  3691  00F7AE  BFD4               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  3692  00F7B0  D008               	goto	u5690
  3693  00F7B2  0100               	movlb	0	; () banked
  3694  00F7B4  51D4               	movf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),w,b
  3695  00F7B6  E10D               	bnz	l4844
  3696  00F7B8  0E3C               	movlw	60
  3697  00F7BA  0100               	movlb	0	; () banked
  3698  00F7BC  5DD3               	subwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),w,b
  3699  00F7BE  B0D8               	btfsc	status,0,c
  3700  00F7C0  D008               	goto	l439
  3701  00F7C2                     u5690:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 693: segundo = segundo_ingresado;
  3705  00F7C2  C0D3  F09A         	movff	editar_hora_reloj_digital@segundo_ingresado,_segundo
  3706  00F7C6  C0D4  F09B         	movff	editar_hora_reloj_digital@segundo_ingresado+1,_segundo+1
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;main.c: 694: numeros_ingresados++;
  3710  00F7CA  0100               	movlb	0	; () banked
  3711  00F7CC  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  3712  00F7CE  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3713                           
  3714                           ;main.c: 695: } else {
  3715  00F7D0  D005               	goto	l440
  3716  00F7D2                     l439:
  3717  00F7D2                     l4844:
  3718                           
  3719                           ; BSR set to: 0
  3720                           ;main.c: 696: numeros_ingresados = 0;
  3721  00F7D2  0E00               	movlw	0
  3722  00F7D4  0100               	movlb	0	; () banked
  3723  00F7D6  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3724  00F7D8  0E00               	movlw	0
  3725  00F7DA  6F98               	movwf	_numeros_ingresados& (0+255),b
  3726  00F7DC                     l440:
  3727                           
  3728                           ; BSR set to: 0
  3729                           
  3730                           ; BSR set to: 0
  3731                           
  3732                           ; BSR set to: 0
  3733                           
  3734                           ; BSR set to: 0
  3735  00F7DC  0100               	movlb	0	; () banked
  3736  00F7DE  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3737  00F7E0  D7D3               	goto	l437
  3738  00F7E2  0100               	movlb	0	; () banked
  3739  00F7E4  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3740  00F7E6  E105               	bnz	l4848
  3741  00F7E8  0E03               	movlw	3
  3742  00F7EA  0100               	movlb	0	; () banked
  3743  00F7EC  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3744  00F7EE  A0D8               	btfss	status,0,c
  3745  00F7F0  D7CB               	goto	l437
  3746  00F7F2                     l4848:
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;main.c: 697: }
  3750                           ;main.c: 698: }
  3751                           ;main.c: 699: }
  3752                           ;main.c: 701: setHoraMinutoSegundo();
  3753  00F7F2  ECFF  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3754                           
  3755                           ;main.c: 702: posicion++;
  3756  00F7F6  0100               	movlb	0	; () banked
  3757  00F7F8  4BD5               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3758  00F7FA  2BD6               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;main.c: 703: _delay((unsigned long)((50)*(8000000/4000.0)));
  3762  00F7FC  0E82               	movlw	130
  3763  00F7FE  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3764  00F800  0EDE               	movlw	222
  3765  00F802                     u6387:
  3766  00F802  2EE8               	decfsz	wreg,f,c
  3767  00F804  D7FE               	bra	u6387
  3768  00F806  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3769  00F808  D7FC               	bra	u6387
  3770  00F80A                     l435:
  3771                           
  3772                           ;main.c: 704: }
  3773                           ;main.c: 705: Write_RTC();
  3774  00F80A  EC85  F077         	call	_Write_RTC	;wreg free
  3775                           
  3776                           ;main.c: 706: motivo_ingreso_de_numeros = 0;
  3777  00F80E  0E00               	movlw	0
  3778  00F810  0100               	movlb	0	; () banked
  3779  00F812  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3780  00F814  0E00               	movlw	0
  3781  00F816  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;main.c: 707: numeros_ingresados = 0;
  3785  00F818  0E00               	movlw	0
  3786  00F81A  0100               	movlb	0	; () banked
  3787  00F81C  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3788  00F81E  0E00               	movlw	0
  3789  00F820  6F98               	movwf	_numeros_ingresados& (0+255),b
  3790                           
  3791                           ; BSR set to: 0
  3792  00F822  0012               	return		;funcret
  3793  00F824                     __end_of_editar_hora_reloj_digital:
  3794                           	opt stack 0
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           prodh	equ	0xFF4
  3800                           prodl	equ	0xFF3
  3801                           postinc0	equ	0xFEE
  3802                           wreg	equ	0xFE8
  3803                           postinc1	equ	0xFE6
  3804                           postdec1	equ	0xFE5
  3805                           fsr1h	equ	0xFE2
  3806                           fsr1l	equ	0xFE1
  3807                           postinc2	equ	0xFDE
  3808                           postdec2	equ	0xFDD
  3809                           fsr2h	equ	0xFDA
  3810                           fsr2l	equ	0xFD9
  3811                           status	equ	0xFD8
  3812                           
  3813 ;; *************** function _setHoraMinutoSegundo *****************
  3814 ;; Defined at:
  3815 ;;		line 82 in file "main.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    5
  3836 ;; This function calls:
  3837 ;;		_Write_RTC
  3838 ;;		_lcd_gotoxy
  3839 ;;		_lcd_putrs
  3840 ;;		_sprintf
  3841 ;; This function is called by:
  3842 ;;		_set_reloj_digital
  3843 ;;		_editar_hora_reloj_digital
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text17
  3848  00D9FE                     __ptext17:
  3849                           	opt stack 0
  3850  00D9FE                     _setHoraMinutoSegundo:
  3851                           	opt stack 23
  3852                           
  3853                           ;main.c: 83: if (hora >= 24) {
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;incstack = 0
  3857  00D9FE  0100               	movlb	0	; () banked
  3858  00DA00  BFE6               	btfsc	(_hora+1)& (0+255),7,b
  3859  00DA02  D019               	goto	l178
  3860  00DA04  0100               	movlb	0	; () banked
  3861  00DA06  51E6               	movf	(_hora+1)& (0+255),w,b
  3862  00DA08  E105               	bnz	u4680
  3863  00DA0A  0E18               	movlw	24
  3864  00DA0C  0100               	movlb	0	; () banked
  3865  00DA0E  5DE5               	subwf	_hora& (0+255),w,b
  3866  00DA10  A0D8               	btfss	status,0,c
  3867  00DA12  D011               	goto	l178
  3868  00DA14                     u4680:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;main.c: 84: hora = 0;
  3872  00DA14  0E00               	movlw	0
  3873  00DA16  0100               	movlb	0	; () banked
  3874  00DA18  6FE6               	movwf	(_hora+1)& (0+255),b
  3875  00DA1A  0E00               	movlw	0
  3876  00DA1C  6FE5               	movwf	_hora& (0+255),b
  3877                           
  3878                           ;main.c: 85: minuto = 0;
  3879  00DA1E  0E00               	movlw	0
  3880  00DA20  0100               	movlb	0	; () banked
  3881  00DA22  6FE4               	movwf	(_minuto+1)& (0+255),b
  3882  00DA24  0E00               	movlw	0
  3883  00DA26  6FE3               	movwf	_minuto& (0+255),b
  3884                           
  3885                           ;main.c: 86: segundo = 0;
  3886  00DA28  0E00               	movlw	0
  3887  00DA2A  0100               	movlb	0	; () banked
  3888  00DA2C  6F9B               	movwf	(_segundo+1)& (0+255),b
  3889  00DA2E  0E00               	movlw	0
  3890  00DA30  6F9A               	movwf	_segundo& (0+255),b
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;main.c: 87: Write_RTC();
  3894  00DA32  EC85  F077         	call	_Write_RTC	;wreg free
  3895  00DA36                     l178:
  3896                           
  3897                           ;main.c: 88: }
  3898                           ;main.c: 90: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  3899  00DA36  0EA9               	movlw	low _buffer2
  3900  00DA38  6E22               	movwf	sprintf@sp,c
  3901  00DA3A  0E00               	movlw	high _buffer2
  3902  00DA3C  6E23               	movwf	sprintf@sp+1,c
  3903  00DA3E  0E93               	movlw	low STR_8
  3904  00DA40  6E24               	movwf	sprintf@f,c
  3905  00DA42  0EFF               	movlw	high STR_8
  3906  00DA44  6E25               	movwf	sprintf@f+1,c
  3907  00DA46  C0E5  F026         	movff	_hora,?_sprintf+4
  3908  00DA4A  C0E6  F027         	movff	_hora+1,?_sprintf+5
  3909  00DA4E  C0E3  F028         	movff	_minuto,?_sprintf+6
  3910  00DA52  C0E4  F029         	movff	_minuto+1,?_sprintf+7
  3911  00DA56  C09A  F02A         	movff	_segundo,?_sprintf+8
  3912  00DA5A  C09B  F02B         	movff	_segundo+1,?_sprintf+9
  3913  00DA5E  EC12  F07C         	call	_sprintf	;wreg free
  3914                           
  3915                           ;main.c: 91: lcd_gotoxy(9, 2);
  3916  00DA62  0E02               	movlw	2
  3917  00DA64  6E05               	movwf	lcd_gotoxy@y,c
  3918  00DA66  0E09               	movlw	9
  3919  00DA68  ECA3  F069         	call	_lcd_gotoxy
  3920                           
  3921                           ;main.c: 92: lcd_putrs(buffer2);
  3922  00DA6C  0EA9               	movlw	low _buffer2
  3923  00DA6E  6E09               	movwf	lcd_putrs@ptr,c
  3924  00DA70  0E00               	movlw	high _buffer2
  3925  00DA72  6E0A               	movwf	lcd_putrs@ptr+1,c
  3926  00DA74  ECFA  F06A         	call	_lcd_putrs	;wreg free
  3927  00DA78  0012               	return		;funcret
  3928  00DA7A                     __end_of_setHoraMinutoSegundo:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           postinc0	equ	0xFEE
  3937                           wreg	equ	0xFE8
  3938                           postinc1	equ	0xFE6
  3939                           postdec1	equ	0xFE5
  3940                           fsr1h	equ	0xFE2
  3941                           fsr1l	equ	0xFE1
  3942                           postinc2	equ	0xFDE
  3943                           postdec2	equ	0xFDD
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _editar_fecha_reloj_digital *****************
  3949 ;; Defined at:
  3950 ;;		line 560 in file "main.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  anio_ingresa    2   14[BANK0 ] int 
  3955 ;;  mes_ingresad    2   12[BANK0 ] int 
  3956 ;;  dia_ingresad    2   10[BANK0 ] int 
  3957 ;;  posicion        2   16[BANK0 ] int 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      void 
  3960 ;; Registers used:
  3961 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3970 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3971 ;;Total ram usage:        9 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    7
  3974 ;; This function calls:
  3975 ;;		_Write_RTC
  3976 ;;		_covertir_valores_de_array_a_escala_decimal
  3977 ;;		_ingreso_numero
  3978 ;;		_setDiaMesAnio
  3979 ;; This function is called by:
  3980 ;;		_seleccionar_opcion
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text18
  3985  00FA54                     __ptext18:
  3986                           	opt stack 0
  3987  00FA54                     _editar_fecha_reloj_digital:
  3988                           	opt stack 18
  3989                           
  3990                           ;main.c: 561: int posicion = 0;
  3991                           
  3992                           ;incstack = 0
  3993  00FA54  0E00               	movlw	0
  3994  00FA56  0100               	movlb	0	; () banked
  3995  00FA58  6FD6               	movwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),b
  3996  00FA5A  0E00               	movlw	0
  3997  00FA5C  6FD5               	movwf	editar_fecha_reloj_digital@posicion& (0+255),b
  3998                           
  3999                           ;main.c: 563: motivo_ingreso_de_numeros = 1;
  4000  00FA5E  0E00               	movlw	0
  4001  00FA60  0100               	movlb	0	; () banked
  4002  00FA62  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  4003  00FA64  0E01               	movlw	1
  4004  00FA66  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;main.c: 566: if (posicion == 0) {
  4008  00FA68  0100               	movlb	0	; () banked
  4009  00FA6A  51D5               	movf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4010  00FA6C  0100               	movlb	0	; () banked
  4011  00FA6E  11D6               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4012  00FA70  A4D8               	btfss	status,2,c
  4013  00FA72  D053               	goto	l397
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;main.c: 567: numeros_ingresados = 0;
  4017  00FA74  0E00               	movlw	0
  4018  00FA76  0100               	movlb	0	; () banked
  4019  00FA78  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4020  00FA7A  0E00               	movlw	0
  4021  00FA7C  6F98               	movwf	_numeros_ingresados& (0+255),b
  4022                           
  4023                           ;main.c: 568: int dia_ingresado = 0;
  4024  00FA7E  0E00               	movlw	0
  4025  00FA80  0100               	movlb	0	; () banked
  4026  00FA82  6FD0               	movwf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),b
  4027  00FA84  0E00               	movlw	0
  4028  00FA86  6FCF               	movwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),b
  4029                           
  4030                           ;main.c: 569: while (numeros_ingresados < 3) {
  4031  00FA88  D031               	goto	l402
  4032  00FA8A                     
  4033                           ; BSR set to: 0
  4034                           ;main.c: 571: ingreso_numero();
  4035                           
  4036                           ; BSR set to: 0
  4037  00FA8A  EC46  F07E         	call	_ingreso_numero	;wreg free
  4038                           
  4039                           ;main.c: 573: if (numeros_ingresados == 2) {
  4040  00FA8E  0E02               	movlw	2
  4041  00FA90  0100               	movlb	0	; () banked
  4042  00FA92  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  4043  00FA94  0100               	movlb	0	; () banked
  4044  00FA96  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4045  00FA98  A4D8               	btfss	status,2,c
  4046  00FA9A  D028               	goto	l402
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;main.c: 574: dia_ingresado = covertir_valores_de_array_a_escala_decimal();
  4050  00FA9C  EC78  F074         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4051  00FAA0  C05B  F0CF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@dia_ingre
      +                          sado
  4052  00FAA4  C05C  F0D0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@dia_ing
      +                          resado+1
  4053                           
  4054                           ;main.c: 575: if ((0 < dia_ingresado) && (dia_ingresado <= 31)) {
  4055  00FAA8  0100               	movlb	0	; () banked
  4056  00FAAA  BFD0               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  4057  00FAAC  D01A               	goto	l401
  4058  00FAAE  0100               	movlb	0	; () banked
  4059  00FAB0  51D0               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  4060  00FAB2  E104               	bnz	u5430
  4061  00FAB4  0100               	movlb	0	; () banked
  4062  00FAB6  05CF               	decf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  4063  00FAB8  A0D8               	btfss	status,0,c
  4064  00FABA  D013               	goto	l401
  4065  00FABC                     u5430:
  4066                           
  4067                           ; BSR set to: 0
  4068  00FABC  0100               	movlb	0	; () banked
  4069  00FABE  BFD0               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  4070  00FAC0  D008               	goto	u5440
  4071  00FAC2  0100               	movlb	0	; () banked
  4072  00FAC4  51D0               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  4073  00FAC6  E10D               	bnz	l4696
  4074  00FAC8  0E20               	movlw	32
  4075  00FACA  0100               	movlb	0	; () banked
  4076  00FACC  5DCF               	subwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  4077  00FACE  B0D8               	btfsc	status,0,c
  4078  00FAD0  D008               	goto	l401
  4079  00FAD2                     u5440:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;main.c: 576: dia = dia_ingresado;
  4083  00FAD2  C0CF  F0E7         	movff	editar_fecha_reloj_digital@dia_ingresado,_dia
  4084  00FAD6  C0D0  F0E8         	movff	editar_fecha_reloj_digital@dia_ingresado+1,_dia+1
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;main.c: 577: numeros_ingresados++;
  4088  00FADA  0100               	movlb	0	; () banked
  4089  00FADC  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  4090  00FADE  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4091                           
  4092                           ;main.c: 578: } else {
  4093  00FAE0  D005               	goto	l402
  4094  00FAE2                     l401:
  4095  00FAE2                     l4696:
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;main.c: 579: numeros_ingresados = 0;
  4099  00FAE2  0E00               	movlw	0
  4100  00FAE4  0100               	movlb	0	; () banked
  4101  00FAE6  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4102  00FAE8  0E00               	movlw	0
  4103  00FAEA  6F98               	movwf	_numeros_ingresados& (0+255),b
  4104  00FAEC                     l402:
  4105                           
  4106                           ; BSR set to: 0
  4107                           
  4108                           ; BSR set to: 0
  4109                           
  4110                           ; BSR set to: 0
  4111                           
  4112                           ; BSR set to: 0
  4113  00FAEC  0100               	movlb	0	; () banked
  4114  00FAEE  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4115  00FAF0  D7CC               	goto	l399
  4116  00FAF2  0100               	movlb	0	; () banked
  4117  00FAF4  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4118  00FAF6  E105               	bnz	l4700
  4119  00FAF8  0E03               	movlw	3
  4120  00FAFA  0100               	movlb	0	; () banked
  4121  00FAFC  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  4122  00FAFE  A0D8               	btfss	status,0,c
  4123  00FB00  D7C4               	goto	l399
  4124  00FB02                     l4700:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;main.c: 580: }
  4128                           ;main.c: 581: }
  4129                           ;main.c: 582: }
  4130                           ;main.c: 584: setDiaMesAnio();
  4131  00FB02  EC04  F06E         	call	_setDiaMesAnio	;wreg free
  4132                           
  4133                           ;main.c: 585: posicion++;
  4134  00FB06  0100               	movlb	0	; () banked
  4135  00FB08  4BD5               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4136  00FB0A  2BD6               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;main.c: 586: _delay((unsigned long)((50)*(8000000/4000.0)));
  4140  00FB0C  0E82               	movlw	130
  4141  00FB0E  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4142  00FB10  0EDE               	movlw	222
  4143  00FB12                     u6397:
  4144  00FB12  2EE8               	decfsz	wreg,f,c
  4145  00FB14  D7FE               	bra	u6397
  4146  00FB16  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4147  00FB18  D7FC               	bra	u6397
  4148  00FB1A                     l397:
  4149                           
  4150                           ;main.c: 587: }
  4151                           ;main.c: 590: if (posicion == 1) {
  4152  00FB1A  0100               	movlb	0	; () banked
  4153  00FB1C  05D5               	decf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4154  00FB1E  0100               	movlb	0	; () banked
  4155  00FB20  11D6               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4156  00FB22  A4D8               	btfss	status,2,c
  4157  00FB24  D053               	goto	l404
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;main.c: 591: numeros_ingresados = 0;
  4161  00FB26  0E00               	movlw	0
  4162  00FB28  0100               	movlb	0	; () banked
  4163  00FB2A  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4164  00FB2C  0E00               	movlw	0
  4165  00FB2E  6F98               	movwf	_numeros_ingresados& (0+255),b
  4166                           
  4167                           ;main.c: 592: int mes_ingresado = 0;
  4168  00FB30  0E00               	movlw	0
  4169  00FB32  0100               	movlb	0	; () banked
  4170  00FB34  6FD2               	movwf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),b
  4171  00FB36  0E00               	movlw	0
  4172  00FB38  6FD1               	movwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),b
  4173                           
  4174                           ;main.c: 593: while (numeros_ingresados < 3) {
  4175  00FB3A  D031               	goto	l409
  4176  00FB3C                     
  4177                           ; BSR set to: 0
  4178                           ;main.c: 594: ingreso_numero();
  4179                           
  4180                           ; BSR set to: 0
  4181  00FB3C  EC46  F07E         	call	_ingreso_numero	;wreg free
  4182                           
  4183                           ;main.c: 595: if (numeros_ingresados == 2) {
  4184  00FB40  0E02               	movlw	2
  4185  00FB42  0100               	movlb	0	; () banked
  4186  00FB44  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  4187  00FB46  0100               	movlb	0	; () banked
  4188  00FB48  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4189  00FB4A  A4D8               	btfss	status,2,c
  4190  00FB4C  D028               	goto	l409
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;main.c: 596: mes_ingresado = covertir_valores_de_array_a_escala_decimal();
  4194  00FB4E  EC78  F074         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4195  00FB52  C05B  F0D1         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@mes_ingre
      +                          sado
  4196  00FB56  C05C  F0D2         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@mes_ing
      +                          resado+1
  4197                           
  4198                           ;main.c: 597: if ((0 < mes_ingresado) && (mes_ingresado <= 12)) {
  4199  00FB5A  0100               	movlb	0	; () banked
  4200  00FB5C  BFD2               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  4201  00FB5E  D01A               	goto	l408
  4202  00FB60  0100               	movlb	0	; () banked
  4203  00FB62  51D2               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  4204  00FB64  E104               	bnz	u5480
  4205  00FB66  0100               	movlb	0	; () banked
  4206  00FB68  05D1               	decf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  4207  00FB6A  A0D8               	btfss	status,0,c
  4208  00FB6C  D013               	goto	l408
  4209  00FB6E                     u5480:
  4210                           
  4211                           ; BSR set to: 0
  4212  00FB6E  0100               	movlb	0	; () banked
  4213  00FB70  BFD2               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  4214  00FB72  D008               	goto	u5490
  4215  00FB74  0100               	movlb	0	; () banked
  4216  00FB76  51D2               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  4217  00FB78  E10D               	bnz	l4724
  4218  00FB7A  0E0D               	movlw	13
  4219  00FB7C  0100               	movlb	0	; () banked
  4220  00FB7E  5DD1               	subwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  4221  00FB80  B0D8               	btfsc	status,0,c
  4222  00FB82  D008               	goto	l408
  4223  00FB84                     u5490:
  4224                           
  4225                           ; BSR set to: 0
  4226                           ;main.c: 598: mes = mes_ingresado;
  4227  00FB84  C0D1  F0EB         	movff	editar_fecha_reloj_digital@mes_ingresado,_mes
  4228  00FB88  C0D2  F0EC         	movff	editar_fecha_reloj_digital@mes_ingresado+1,_mes+1
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;main.c: 599: numeros_ingresados++;
  4232  00FB8C  0100               	movlb	0	; () banked
  4233  00FB8E  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  4234  00FB90  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4235                           
  4236                           ;main.c: 600: } else {
  4237  00FB92  D005               	goto	l409
  4238  00FB94                     l408:
  4239  00FB94                     l4724:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;main.c: 601: numeros_ingresados = 0;
  4243  00FB94  0E00               	movlw	0
  4244  00FB96  0100               	movlb	0	; () banked
  4245  00FB98  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4246  00FB9A  0E00               	movlw	0
  4247  00FB9C  6F98               	movwf	_numeros_ingresados& (0+255),b
  4248  00FB9E                     l409:
  4249                           
  4250                           ; BSR set to: 0
  4251                           
  4252                           ; BSR set to: 0
  4253                           
  4254                           ; BSR set to: 0
  4255                           
  4256                           ; BSR set to: 0
  4257  00FB9E  0100               	movlb	0	; () banked
  4258  00FBA0  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4259  00FBA2  D7CC               	goto	l406
  4260  00FBA4  0100               	movlb	0	; () banked
  4261  00FBA6  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4262  00FBA8  E105               	bnz	l4728
  4263  00FBAA  0E03               	movlw	3
  4264  00FBAC  0100               	movlb	0	; () banked
  4265  00FBAE  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  4266  00FBB0  A0D8               	btfss	status,0,c
  4267  00FBB2  D7C4               	goto	l406
  4268  00FBB4                     l4728:
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;main.c: 602: }
  4272                           ;main.c: 603: }
  4273                           ;main.c: 604: }
  4274                           ;main.c: 606: setDiaMesAnio();
  4275  00FBB4  EC04  F06E         	call	_setDiaMesAnio	;wreg free
  4276                           
  4277                           ;main.c: 607: posicion++;
  4278  00FBB8  0100               	movlb	0	; () banked
  4279  00FBBA  4BD5               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4280  00FBBC  2BD6               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;main.c: 608: _delay((unsigned long)((50)*(8000000/4000.0)));
  4284  00FBBE  0E82               	movlw	130
  4285  00FBC0  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4286  00FBC2  0EDE               	movlw	222
  4287  00FBC4                     u6407:
  4288  00FBC4  2EE8               	decfsz	wreg,f,c
  4289  00FBC6  D7FE               	bra	u6407
  4290  00FBC8  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4291  00FBCA  D7FC               	bra	u6407
  4292  00FBCC                     l404:
  4293                           
  4294                           ;main.c: 609: }
  4295                           ;main.c: 612: if (posicion == 2) {
  4296  00FBCC  0E02               	movlw	2
  4297  00FBCE  0100               	movlb	0	; () banked
  4298  00FBD0  19D5               	xorwf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4299  00FBD2  0100               	movlb	0	; () banked
  4300  00FBD4  11D6               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4301  00FBD6  A4D8               	btfss	status,2,c
  4302  00FBD8  D04C               	goto	l411
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;main.c: 613: numeros_ingresados = 0;
  4306  00FBDA  0E00               	movlw	0
  4307  00FBDC  0100               	movlb	0	; () banked
  4308  00FBDE  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4309  00FBE0  0E00               	movlw	0
  4310  00FBE2  6F98               	movwf	_numeros_ingresados& (0+255),b
  4311                           
  4312                           ;main.c: 614: int anio_ingresado = 0;
  4313  00FBE4  0E00               	movlw	0
  4314  00FBE6  0100               	movlb	0	; () banked
  4315  00FBE8  6FD4               	movwf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),b
  4316  00FBEA  0E00               	movlw	0
  4317  00FBEC  6FD3               	movwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),b
  4318                           
  4319                           ;main.c: 615: while (numeros_ingresados < 3) {
  4320  00FBEE  D02A               	goto	l416
  4321  00FBF0                     
  4322                           ; BSR set to: 0
  4323                           ;main.c: 616: ingreso_numero();
  4324                           
  4325                           ; BSR set to: 0
  4326  00FBF0  EC46  F07E         	call	_ingreso_numero	;wreg free
  4327                           
  4328                           ;main.c: 617: if (numeros_ingresados == 2) {
  4329  00FBF4  0E02               	movlw	2
  4330  00FBF6  0100               	movlb	0	; () banked
  4331  00FBF8  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  4332  00FBFA  0100               	movlb	0	; () banked
  4333  00FBFC  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4334  00FBFE  A4D8               	btfss	status,2,c
  4335  00FC00  D021               	goto	l416
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;main.c: 618: anio_ingresado = covertir_valores_de_array_a_escala_decimal();
  4339  00FC02  EC78  F074         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4340  00FC06  C05B  F0D3         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@anio_ingr
      +                          esado
  4341  00FC0A  C05C  F0D4         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@anio_in
      +                          gresado+1
  4342                           
  4343                           ;main.c: 619: if ((0 <= anio_ingresado) && (anio_ingresado <= 99)) {
  4344  00FC0E  0100               	movlb	0	; () banked
  4345  00FC10  BFD4               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4346  00FC12  D013               	goto	l415
  4347                           
  4348                           ; BSR set to: 0
  4349  00FC14  0100               	movlb	0	; () banked
  4350  00FC16  BFD4               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4351  00FC18  D008               	goto	u5540
  4352  00FC1A  0100               	movlb	0	; () banked
  4353  00FC1C  51D4               	movf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),w,b
  4354  00FC1E  E10D               	bnz	l4752
  4355  00FC20  0E64               	movlw	100
  4356  00FC22  0100               	movlb	0	; () banked
  4357  00FC24  5DD3               	subwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),w,b
  4358  00FC26  B0D8               	btfsc	status,0,c
  4359  00FC28  D008               	goto	l415
  4360  00FC2A                     u5540:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;main.c: 620: anio = anio_ingresado;
  4364  00FC2A  C0D3  F0ED         	movff	editar_fecha_reloj_digital@anio_ingresado,_anio
  4365  00FC2E  C0D4  F0EE         	movff	editar_fecha_reloj_digital@anio_ingresado+1,_anio+1
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;main.c: 621: numeros_ingresados++;
  4369  00FC32  0100               	movlb	0	; () banked
  4370  00FC34  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  4371  00FC36  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4372                           
  4373                           ;main.c: 622: } else {
  4374  00FC38  D005               	goto	l416
  4375  00FC3A                     l415:
  4376  00FC3A                     l4752:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;main.c: 623: numeros_ingresados = 0;
  4380  00FC3A  0E00               	movlw	0
  4381  00FC3C  0100               	movlb	0	; () banked
  4382  00FC3E  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4383  00FC40  0E00               	movlw	0
  4384  00FC42  6F98               	movwf	_numeros_ingresados& (0+255),b
  4385  00FC44                     l416:
  4386                           
  4387                           ; BSR set to: 0
  4388                           
  4389                           ; BSR set to: 0
  4390                           
  4391                           ; BSR set to: 0
  4392                           
  4393                           ; BSR set to: 0
  4394  00FC44  0100               	movlb	0	; () banked
  4395  00FC46  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4396  00FC48  D7D3               	goto	l413
  4397  00FC4A  0100               	movlb	0	; () banked
  4398  00FC4C  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4399  00FC4E  E105               	bnz	l4756
  4400  00FC50  0E03               	movlw	3
  4401  00FC52  0100               	movlb	0	; () banked
  4402  00FC54  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  4403  00FC56  A0D8               	btfss	status,0,c
  4404  00FC58  D7CB               	goto	l413
  4405  00FC5A                     l4756:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;main.c: 624: }
  4409                           ;main.c: 625: }
  4410                           ;main.c: 626: }
  4411                           ;main.c: 628: setDiaMesAnio();
  4412  00FC5A  EC04  F06E         	call	_setDiaMesAnio	;wreg free
  4413                           
  4414                           ;main.c: 629: posicion++;
  4415  00FC5E  0100               	movlb	0	; () banked
  4416  00FC60  4BD5               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4417  00FC62  2BD6               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;main.c: 630: _delay((unsigned long)((50)*(8000000/4000.0)));
  4421  00FC64  0E82               	movlw	130
  4422  00FC66  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4423  00FC68  0EDE               	movlw	222
  4424  00FC6A                     u6417:
  4425  00FC6A  2EE8               	decfsz	wreg,f,c
  4426  00FC6C  D7FE               	bra	u6417
  4427  00FC6E  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4428  00FC70  D7FC               	bra	u6417
  4429  00FC72                     l411:
  4430                           
  4431                           ;main.c: 631: }
  4432                           ;main.c: 632: Write_RTC();
  4433  00FC72  EC85  F077         	call	_Write_RTC	;wreg free
  4434                           
  4435                           ;main.c: 633: motivo_ingreso_de_numeros = 0;
  4436  00FC76  0E00               	movlw	0
  4437  00FC78  0100               	movlb	0	; () banked
  4438  00FC7A  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  4439  00FC7C  0E00               	movlw	0
  4440  00FC7E  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;main.c: 634: numeros_ingresados = 0;
  4444  00FC80  0E00               	movlw	0
  4445  00FC82  0100               	movlb	0	; () banked
  4446  00FC84  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4447  00FC86  0E00               	movlw	0
  4448  00FC88  6F98               	movwf	_numeros_ingresados& (0+255),b
  4449                           
  4450                           ; BSR set to: 0
  4451  00FC8A  0012               	return		;funcret
  4452  00FC8C                     __end_of_editar_fecha_reloj_digital:
  4453                           	opt stack 0
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           prodh	equ	0xFF4
  4459                           prodl	equ	0xFF3
  4460                           postinc0	equ	0xFEE
  4461                           wreg	equ	0xFE8
  4462                           postinc1	equ	0xFE6
  4463                           postdec1	equ	0xFE5
  4464                           fsr1h	equ	0xFE2
  4465                           fsr1l	equ	0xFE1
  4466                           postinc2	equ	0xFDE
  4467                           postdec2	equ	0xFDD
  4468                           fsr2h	equ	0xFDA
  4469                           fsr2l	equ	0xFD9
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _setDiaMesAnio *****************
  4473 ;; Defined at:
  4474 ;;		line 66 in file "main.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used:    1
  4494 ;; Hardware stack levels required when called:    5
  4495 ;; This function calls:
  4496 ;;		_Write_RTC
  4497 ;;		_lcd_gotoxy
  4498 ;;		_lcd_putrs
  4499 ;;		_sprintf
  4500 ;; This function is called by:
  4501 ;;		_set_reloj_digital
  4502 ;;		_editar_fecha_reloj_digital
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text19
  4507  00DC08                     __ptext19:
  4508                           	opt stack 0
  4509  00DC08                     _setDiaMesAnio:
  4510                           	opt stack 23
  4511                           
  4512                           ;main.c: 67: if (dia > 31) {
  4513                           
  4514                           ; BSR set to: 0
  4515                           ;incstack = 0
  4516  00DC08  0100               	movlb	0	; () banked
  4517  00DC0A  BFE8               	btfsc	(_dia+1)& (0+255),7,b
  4518  00DC0C  D00F               	goto	l173
  4519  00DC0E  0100               	movlb	0	; () banked
  4520  00DC10  51E8               	movf	(_dia+1)& (0+255),w,b
  4521  00DC12  E105               	bnz	u4660
  4522  00DC14  0E20               	movlw	32
  4523  00DC16  0100               	movlb	0	; () banked
  4524  00DC18  5DE7               	subwf	_dia& (0+255),w,b
  4525  00DC1A  A0D8               	btfss	status,0,c
  4526  00DC1C  D007               	goto	l173
  4527  00DC1E                     u4660:
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;main.c: 68: dia = 1;
  4531  00DC1E  0E00               	movlw	0
  4532  00DC20  0100               	movlb	0	; () banked
  4533  00DC22  6FE8               	movwf	(_dia+1)& (0+255),b
  4534  00DC24  0E01               	movlw	1
  4535  00DC26  6FE7               	movwf	_dia& (0+255),b
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;main.c: 69: Write_RTC();
  4539  00DC28  EC85  F077         	call	_Write_RTC	;wreg free
  4540  00DC2C                     l173:
  4541                           
  4542                           ;main.c: 70: }
  4543                           ;main.c: 72: if (mes > 12) {
  4544  00DC2C  0100               	movlb	0	; () banked
  4545  00DC2E  BFEC               	btfsc	(_mes+1)& (0+255),7,b
  4546  00DC30  D00F               	goto	l174
  4547  00DC32  0100               	movlb	0	; () banked
  4548  00DC34  51EC               	movf	(_mes+1)& (0+255),w,b
  4549  00DC36  E105               	bnz	u4670
  4550  00DC38  0E0D               	movlw	13
  4551  00DC3A  0100               	movlb	0	; () banked
  4552  00DC3C  5DEB               	subwf	_mes& (0+255),w,b
  4553  00DC3E  A0D8               	btfss	status,0,c
  4554  00DC40  D007               	goto	l174
  4555  00DC42                     u4670:
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;main.c: 73: mes = 1;
  4559  00DC42  0E00               	movlw	0
  4560  00DC44  0100               	movlb	0	; () banked
  4561  00DC46  6FEC               	movwf	(_mes+1)& (0+255),b
  4562  00DC48  0E01               	movlw	1
  4563  00DC4A  6FEB               	movwf	_mes& (0+255),b
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;main.c: 74: Write_RTC();
  4567  00DC4C  EC85  F077         	call	_Write_RTC	;wreg free
  4568  00DC50                     l174:
  4569                           
  4570                           ;main.c: 75: }
  4571                           ;main.c: 77: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  4572  00DC50  0EA9               	movlw	low _buffer2
  4573  00DC52  6E22               	movwf	sprintf@sp,c
  4574  00DC54  0E00               	movlw	high _buffer2
  4575  00DC56  6E23               	movwf	sprintf@sp+1,c
  4576  00DC58  0E84               	movlw	low STR_7
  4577  00DC5A  6E24               	movwf	sprintf@f,c
  4578  00DC5C  0EFF               	movlw	high STR_7
  4579  00DC5E  6E25               	movwf	sprintf@f+1,c
  4580  00DC60  C0E7  F026         	movff	_dia,?_sprintf+4
  4581  00DC64  C0E8  F027         	movff	_dia+1,?_sprintf+5
  4582  00DC68  C0EB  F028         	movff	_mes,?_sprintf+6
  4583  00DC6C  C0EC  F029         	movff	_mes+1,?_sprintf+7
  4584  00DC70  C0ED  F02A         	movff	_anio,?_sprintf+8
  4585  00DC74  C0EE  F02B         	movff	_anio+1,?_sprintf+9
  4586  00DC78  EC12  F07C         	call	_sprintf	;wreg free
  4587                           
  4588                           ;main.c: 78: lcd_gotoxy(9, 1);
  4589  00DC7C  0E01               	movlw	1
  4590  00DC7E  6E05               	movwf	lcd_gotoxy@y,c
  4591  00DC80  0E09               	movlw	9
  4592  00DC82  ECA3  F069         	call	_lcd_gotoxy
  4593                           
  4594                           ;main.c: 79: lcd_putrs(buffer2);
  4595  00DC86  0EA9               	movlw	low _buffer2
  4596  00DC88  6E09               	movwf	lcd_putrs@ptr,c
  4597  00DC8A  0E00               	movlw	high _buffer2
  4598  00DC8C  6E0A               	movwf	lcd_putrs@ptr+1,c
  4599  00DC8E  ECFA  F06A         	call	_lcd_putrs	;wreg free
  4600  00DC92  0012               	return		;funcret
  4601  00DC94                     __end_of_setDiaMesAnio:
  4602                           	opt stack 0
  4603                           tblptru	equ	0xFF8
  4604                           tblptrh	equ	0xFF7
  4605                           tblptrl	equ	0xFF6
  4606                           tablat	equ	0xFF5
  4607                           prodh	equ	0xFF4
  4608                           prodl	equ	0xFF3
  4609                           postinc0	equ	0xFEE
  4610                           wreg	equ	0xFE8
  4611                           postinc1	equ	0xFE6
  4612                           postdec1	equ	0xFE5
  4613                           fsr1h	equ	0xFE2
  4614                           fsr1l	equ	0xFE1
  4615                           postinc2	equ	0xFDE
  4616                           postdec2	equ	0xFDD
  4617                           fsr2h	equ	0xFDA
  4618                           fsr2l	equ	0xFD9
  4619                           status	equ	0xFD8
  4620                           
  4621 ;; *************** function _Write_RTC *****************
  4622 ;; Defined at:
  4623 ;;		line 74 in file "../../headers\unmc_rtcc_01.h"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    2
  4644 ;; This function calls:
  4645 ;;		_RtccWrOn
  4646 ;;		_RtccWriteDate
  4647 ;;		_RtccWriteTime
  4648 ;;		___awdiv
  4649 ;; This function is called by:
  4650 ;;		_setDiaMesAnio
  4651 ;;		_setHoraMinutoSegundo
  4652 ;;		_editar_fecha_reloj_digital
  4653 ;;		_editar_hora_reloj_digital
  4654 ;;		_setup
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text20
  4659  00EF0A                     __ptext20:
  4660                           	opt stack 0
  4661  00EF0A                     _Write_RTC:
  4662                           	opt stack 25
  4663                           
  4664                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  4665                           
  4666                           ;incstack = 0
  4667  00EF0A  EC75  F069         	call	_RtccWrOn	;wreg free
  4668                           
  4669                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  4670  00EF0E  80A3               	bsf	4003,0,c	;volatile
  4671                           
  4672                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  4673  00EF10  C09A  F001         	movff	_segundo,___awdiv@dividend
  4674  00EF14  C09B  F002         	movff	_segundo+1,___awdiv@dividend+1
  4675  00EF18  0E00               	movlw	0
  4676  00EF1A  6E04               	movwf	___awdiv@divisor+1,c
  4677  00EF1C  0E0A               	movlw	10
  4678  00EF1E  6E03               	movwf	___awdiv@divisor,c
  4679  00EF20  EC7C  F06D         	call	___awdiv	;wreg free
  4680  00EF24  5001               	movf	?___awdiv,w,c
  4681  00EF26  0100               	movlb	0	; () banked
  4682  00EF28  6FFA               	movwf	_segundo_d& (0+255),b
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  4686  00EF2A  0100               	movlb	0	; () banked
  4687  00EF2C  51FA               	movf	_segundo_d& (0+255),w,b
  4688  00EF2E  0D0A               	mullw	10
  4689  00EF30  50F3               	movf	prodl,w,c
  4690  00EF32  0800               	sublw	0
  4691  00EF34  0100               	movlb	0	; () banked
  4692  00EF36  259A               	addwf	_segundo& (0+255),w,b
  4693  00EF38  0100               	movlb	0	; () banked
  4694  00EF3A  6FFB               	movwf	_segundo_u& (0+255),b
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  4698  00EF3C  0100               	movlb	0	; () banked
  4699  00EF3E  51FA               	movf	_segundo_d& (0+255),w,b
  4700  00EF40  0D10               	mullw	16
  4701  00EF42  50F3               	movf	prodl,w,c
  4702  00EF44  0100               	movlb	0	; () banked
  4703  00EF46  25FB               	addwf	_segundo_u& (0+255),w,b
  4704  00EF48  0100               	movlb	0	; () banked
  4705  00EF4A  6FC2               	movwf	(_RtccTime+1)& (0+255),b
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  4709  00EF4C  C0E3  F001         	movff	_minuto,___awdiv@dividend
  4710  00EF50  C0E4  F002         	movff	_minuto+1,___awdiv@dividend+1
  4711  00EF54  0E00               	movlw	0
  4712  00EF56  6E04               	movwf	___awdiv@divisor+1,c
  4713  00EF58  0E0A               	movlw	10
  4714  00EF5A  6E03               	movwf	___awdiv@divisor,c
  4715  00EF5C  EC7C  F06D         	call	___awdiv	;wreg free
  4716  00EF60  5001               	movf	?___awdiv,w,c
  4717  00EF62  0100               	movlb	0	; () banked
  4718  00EF64  6FF8               	movwf	_minuto_d& (0+255),b
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  4722  00EF66  0100               	movlb	0	; () banked
  4723  00EF68  51F8               	movf	_minuto_d& (0+255),w,b
  4724  00EF6A  0D0A               	mullw	10
  4725  00EF6C  50F3               	movf	prodl,w,c
  4726  00EF6E  0800               	sublw	0
  4727  00EF70  0100               	movlb	0	; () banked
  4728  00EF72  25E3               	addwf	_minuto& (0+255),w,b
  4729  00EF74  0100               	movlb	0	; () banked
  4730  00EF76  6FF9               	movwf	_minuto_u& (0+255),b
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  4734  00EF78  0100               	movlb	0	; () banked
  4735  00EF7A  51F8               	movf	_minuto_d& (0+255),w,b
  4736  00EF7C  0D10               	mullw	16
  4737  00EF7E  50F3               	movf	prodl,w,c
  4738  00EF80  0100               	movlb	0	; () banked
  4739  00EF82  25F9               	addwf	_minuto_u& (0+255),w,b
  4740  00EF84  0100               	movlb	0	; () banked
  4741  00EF86  6FC3               	movwf	(_RtccTime+2)& (0+255),b
  4742                           
  4743                           ; BSR set to: 0
  4744                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  4745  00EF88  C0E5  F001         	movff	_hora,___awdiv@dividend
  4746  00EF8C  C0E6  F002         	movff	_hora+1,___awdiv@dividend+1
  4747  00EF90  0E00               	movlw	0
  4748  00EF92  6E04               	movwf	___awdiv@divisor+1,c
  4749  00EF94  0E0A               	movlw	10
  4750  00EF96  6E03               	movwf	___awdiv@divisor,c
  4751  00EF98  EC7C  F06D         	call	___awdiv	;wreg free
  4752  00EF9C  5001               	movf	?___awdiv,w,c
  4753  00EF9E  0100               	movlb	0	; () banked
  4754  00EFA0  6FF6               	movwf	_hora_d& (0+255),b
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  4758  00EFA2  0100               	movlb	0	; () banked
  4759  00EFA4  51F6               	movf	_hora_d& (0+255),w,b
  4760  00EFA6  0D0A               	mullw	10
  4761  00EFA8  50F3               	movf	prodl,w,c
  4762  00EFAA  0800               	sublw	0
  4763  00EFAC  0100               	movlb	0	; () banked
  4764  00EFAE  25E5               	addwf	_hora& (0+255),w,b
  4765  00EFB0  0100               	movlb	0	; () banked
  4766  00EFB2  6FF7               	movwf	_hora_u& (0+255),b
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  4770  00EFB4  0100               	movlb	0	; () banked
  4771  00EFB6  51F6               	movf	_hora_d& (0+255),w,b
  4772  00EFB8  0D10               	mullw	16
  4773  00EFBA  50F3               	movf	prodl,w,c
  4774  00EFBC  0100               	movlb	0	; () banked
  4775  00EFBE  25F7               	addwf	_hora_u& (0+255),w,b
  4776  00EFC0  0100               	movlb	0	; () banked
  4777  00EFC2  6FC4               	movwf	(_RtccTime+3)& (0+255),b
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  4781  00EFC4  C0ED  F001         	movff	_anio,___awdiv@dividend
  4782  00EFC8  C0EE  F002         	movff	_anio+1,___awdiv@dividend+1
  4783  00EFCC  0E00               	movlw	0
  4784  00EFCE  6E04               	movwf	___awdiv@divisor+1,c
  4785  00EFD0  0E0A               	movlw	10
  4786  00EFD2  6E03               	movwf	___awdiv@divisor,c
  4787  00EFD4  EC7C  F06D         	call	___awdiv	;wreg free
  4788  00EFD8  5001               	movf	?___awdiv,w,c
  4789  00EFDA  0100               	movlb	0	; () banked
  4790  00EFDC  6FEF               	movwf	_anio_d& (0+255),b
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  4794  00EFDE  0100               	movlb	0	; () banked
  4795  00EFE0  51EF               	movf	_anio_d& (0+255),w,b
  4796  00EFE2  0D0A               	mullw	10
  4797  00EFE4  50F3               	movf	prodl,w,c
  4798  00EFE6  0800               	sublw	0
  4799  00EFE8  0100               	movlb	0	; () banked
  4800  00EFEA  25ED               	addwf	_anio& (0+255),w,b
  4801  00EFEC  0100               	movlb	0	; () banked
  4802  00EFEE  6FF0               	movwf	_anio_u& (0+255),b
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  4806  00EFF0  0100               	movlb	0	; () banked
  4807  00EFF2  51EF               	movf	_anio_d& (0+255),w,b
  4808  00EFF4  0D10               	mullw	16
  4809  00EFF6  50F3               	movf	prodl,w,c
  4810  00EFF8  0100               	movlb	0	; () banked
  4811  00EFFA  25F0               	addwf	_anio_u& (0+255),w,b
  4812  00EFFC  0100               	movlb	0	; () banked
  4813  00EFFE  6FC0               	movwf	(_RtccDate+3)& (0+255),b
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  4817  00F000  C0EB  F001         	movff	_mes,___awdiv@dividend
  4818  00F004  C0EC  F002         	movff	_mes+1,___awdiv@dividend+1
  4819  00F008  0E00               	movlw	0
  4820  00F00A  6E04               	movwf	___awdiv@divisor+1,c
  4821  00F00C  0E0A               	movlw	10
  4822  00F00E  6E03               	movwf	___awdiv@divisor,c
  4823  00F010  EC7C  F06D         	call	___awdiv	;wreg free
  4824  00F014  5001               	movf	?___awdiv,w,c
  4825  00F016  0100               	movlb	0	; () banked
  4826  00F018  6FF2               	movwf	_mes_d& (0+255),b
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  4830  00F01A  0100               	movlb	0	; () banked
  4831  00F01C  51F2               	movf	_mes_d& (0+255),w,b
  4832  00F01E  0D0A               	mullw	10
  4833  00F020  50F3               	movf	prodl,w,c
  4834  00F022  0800               	sublw	0
  4835  00F024  0100               	movlb	0	; () banked
  4836  00F026  25EB               	addwf	_mes& (0+255),w,b
  4837  00F028  0100               	movlb	0	; () banked
  4838  00F02A  6FF3               	movwf	_mes_u& (0+255),b
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  4842  00F02C  0100               	movlb	0	; () banked
  4843  00F02E  51F2               	movf	_mes_d& (0+255),w,b
  4844  00F030  0D10               	mullw	16
  4845  00F032  50F3               	movf	prodl,w,c
  4846  00F034  0100               	movlb	0	; () banked
  4847  00F036  25F3               	addwf	_mes_u& (0+255),w,b
  4848  00F038  0100               	movlb	0	; () banked
  4849  00F03A  6FBF               	movwf	(_RtccDate+2)& (0+255),b
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  4853  00F03C  C0E7  F001         	movff	_dia,___awdiv@dividend
  4854  00F040  C0E8  F002         	movff	_dia+1,___awdiv@dividend+1
  4855  00F044  0E00               	movlw	0
  4856  00F046  6E04               	movwf	___awdiv@divisor+1,c
  4857  00F048  0E0A               	movlw	10
  4858  00F04A  6E03               	movwf	___awdiv@divisor,c
  4859  00F04C  EC7C  F06D         	call	___awdiv	;wreg free
  4860  00F050  5001               	movf	?___awdiv,w,c
  4861  00F052  0100               	movlb	0	; () banked
  4862  00F054  6FF4               	movwf	_fecha_d& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  4866  00F056  0100               	movlb	0	; () banked
  4867  00F058  51F4               	movf	_fecha_d& (0+255),w,b
  4868  00F05A  0D0A               	mullw	10
  4869  00F05C  50F3               	movf	prodl,w,c
  4870  00F05E  0800               	sublw	0
  4871  00F060  0100               	movlb	0	; () banked
  4872  00F062  25E7               	addwf	_dia& (0+255),w,b
  4873  00F064  0100               	movlb	0	; () banked
  4874  00F066  6FF5               	movwf	_fecha_u& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  4878  00F068  0100               	movlb	0	; () banked
  4879  00F06A  51F4               	movf	_fecha_d& (0+255),w,b
  4880  00F06C  0D10               	mullw	16
  4881  00F06E  50F3               	movf	prodl,w,c
  4882  00F070  0100               	movlb	0	; () banked
  4883  00F072  25F5               	addwf	_fecha_u& (0+255),w,b
  4884  00F074  0100               	movlb	0	; () banked
  4885  00F076  6FBE               	movwf	(_RtccDate+1)& (0+255),b
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  4889  00F078  C0E9  F0F1         	movff	_diasem,_dia_semana
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  4893  00F07C  C0E9  F0BD         	movff	_diasem,_RtccDate
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  4897  00F080  0EC1               	movlw	low _RtccTime
  4898  00F082  6E01               	movwf	RtccWriteTime@pTm,c
  4899  00F084  0E00               	movlw	high _RtccTime
  4900  00F086  6E02               	movwf	RtccWriteTime@pTm+1,c
  4901  00F088  0E01               	movlw	1
  4902  00F08A  6E03               	movwf	RtccWriteTime@di,c
  4903  00F08C  ECFA  F073         	call	_RtccWriteTime	;wreg free
  4904                           
  4905                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  4906  00F090  0EBD               	movlw	low _RtccDate
  4907  00F092  6E01               	movwf	RtccWriteDate@pDt,c
  4908  00F094  0E00               	movlw	high _RtccDate
  4909  00F096  6E02               	movwf	RtccWriteDate@pDt+1,c
  4910  00F098  0E01               	movlw	1
  4911  00F09A  6E03               	movwf	RtccWriteDate@di,c
  4912  00F09C  EC8C  F075         	call	_RtccWriteDate	;wreg free
  4913                           
  4914                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  4915  00F0A0  010F               	movlb	15	; () banked
  4916  00F0A2  8F3F               	bsf	63,7,b	;volatile
  4917                           
  4918                           ; BSR set to: 15
  4919  00F0A4  0012               	return		;funcret
  4920  00F0A6                     __end_of_Write_RTC:
  4921                           	opt stack 0
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           postinc0	equ	0xFEE
  4929                           wreg	equ	0xFE8
  4930                           postinc1	equ	0xFE6
  4931                           postdec1	equ	0xFE5
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           postinc2	equ	0xFDE
  4935                           postdec2	equ	0xFDD
  4936                           fsr2h	equ	0xFDA
  4937                           fsr2l	equ	0xFD9
  4938                           status	equ	0xFD8
  4939                           
  4940 ;; *************** function ___awdiv *****************
  4941 ;; Defined at:
  4942 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  dividend        2    0[COMRAM] int 
  4945 ;;  divisor         2    2[COMRAM] int 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  quotient        2    6[COMRAM] int 
  4948 ;;  sign            1    5[COMRAM] unsigned char 
  4949 ;;  counter         1    4[COMRAM] unsigned char 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  2    0[COMRAM] int 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;Total ram usage:        8 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_Write_RTC
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text21
  4973  00DAF8                     __ptext21:
  4974                           	opt stack 0
  4975  00DAF8                     ___awdiv:
  4976                           	opt stack 26
  4977                           
  4978                           ; BSR set to: 15
  4979                           ;incstack = 0
  4980  00DAF8  0E00               	movlw	0
  4981  00DAFA  6E06               	movwf	___awdiv@sign,c
  4982  00DAFC  AE04               	btfss	___awdiv@divisor+1,7,c
  4983  00DAFE  D006               	goto	l815
  4984  00DB00  6C03               	negf	___awdiv@divisor,c
  4985  00DB02  1E04               	comf	___awdiv@divisor+1,f,c
  4986  00DB04  B0D8               	btfsc	status,0,c
  4987  00DB06  2A04               	incf	___awdiv@divisor+1,f,c
  4988  00DB08  0E01               	movlw	1
  4989  00DB0A  6E06               	movwf	___awdiv@sign,c
  4990  00DB0C                     l815:
  4991  00DB0C  AE02               	btfss	___awdiv@dividend+1,7,c
  4992  00DB0E  D006               	goto	l816
  4993  00DB10  6C01               	negf	___awdiv@dividend,c
  4994  00DB12  1E02               	comf	___awdiv@dividend+1,f,c
  4995  00DB14  B0D8               	btfsc	status,0,c
  4996  00DB16  2A02               	incf	___awdiv@dividend+1,f,c
  4997  00DB18  0E01               	movlw	1
  4998  00DB1A  1A06               	xorwf	___awdiv@sign,f,c
  4999  00DB1C                     l816:
  5000  00DB1C  0E00               	movlw	0
  5001  00DB1E  6E08               	movwf	___awdiv@quotient+1,c
  5002  00DB20  0E00               	movlw	0
  5003  00DB22  6E07               	movwf	___awdiv@quotient,c
  5004  00DB24  5003               	movf	___awdiv@divisor,w,c
  5005  00DB26  1004               	iorwf	___awdiv@divisor+1,w,c
  5006  00DB28  B4D8               	btfsc	status,2,c
  5007  00DB2A  D01C               	goto	l823
  5008  00DB2C  0E01               	movlw	1
  5009  00DB2E  6E05               	movwf	___awdiv@counter,c
  5010  00DB30  D004               	goto	l818
  5011  00DB32  90D8               	bcf	status,0,c
  5012  00DB34  3603               	rlcf	___awdiv@divisor,f,c
  5013  00DB36  3604               	rlcf	___awdiv@divisor+1,f,c
  5014  00DB38  2A05               	incf	___awdiv@counter,f,c
  5015  00DB3A                     l818:
  5016  00DB3A  AE04               	btfss	___awdiv@divisor+1,7,c
  5017  00DB3C  D7FA               	goto	l819
  5018  00DB3E                     u4450:
  5019  00DB3E  90D8               	bcf	status,0,c
  5020  00DB40  3607               	rlcf	___awdiv@quotient,f,c
  5021  00DB42  3608               	rlcf	___awdiv@quotient+1,f,c
  5022  00DB44  5003               	movf	___awdiv@divisor,w,c
  5023  00DB46  5C01               	subwf	___awdiv@dividend,w,c
  5024  00DB48  5004               	movf	___awdiv@divisor+1,w,c
  5025  00DB4A  5802               	subwfb	___awdiv@dividend+1,w,c
  5026  00DB4C  A0D8               	btfss	status,0,c
  5027  00DB4E  D005               	goto	l822
  5028  00DB50  5003               	movf	___awdiv@divisor,w,c
  5029  00DB52  5E01               	subwf	___awdiv@dividend,f,c
  5030  00DB54  5004               	movf	___awdiv@divisor+1,w,c
  5031  00DB56  5A02               	subwfb	___awdiv@dividend+1,f,c
  5032  00DB58  8007               	bsf	___awdiv@quotient,0,c
  5033  00DB5A                     l822:
  5034  00DB5A  90D8               	bcf	status,0,c
  5035  00DB5C  3204               	rrcf	___awdiv@divisor+1,f,c
  5036  00DB5E  3203               	rrcf	___awdiv@divisor,f,c
  5037  00DB60  2E05               	decfsz	___awdiv@counter,f,c
  5038  00DB62  D7ED               	goto	u4450
  5039  00DB64                     l823:
  5040  00DB64  5006               	movf	___awdiv@sign,w,c
  5041  00DB66  B4D8               	btfsc	status,2,c
  5042  00DB68  D004               	goto	l824
  5043  00DB6A  6C07               	negf	___awdiv@quotient,c
  5044  00DB6C  1E08               	comf	___awdiv@quotient+1,f,c
  5045  00DB6E  B0D8               	btfsc	status,0,c
  5046  00DB70  2A08               	incf	___awdiv@quotient+1,f,c
  5047  00DB72                     l824:
  5048  00DB72  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5049  00DB76  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5050  00DB7A  0012               	return	
  5051  00DB7C                     __end_of___awdiv:
  5052                           	opt stack 0
  5053                           tblptru	equ	0xFF8
  5054                           tblptrh	equ	0xFF7
  5055                           tblptrl	equ	0xFF6
  5056                           tablat	equ	0xFF5
  5057                           prodh	equ	0xFF4
  5058                           prodl	equ	0xFF3
  5059                           postinc0	equ	0xFEE
  5060                           wreg	equ	0xFE8
  5061                           postinc1	equ	0xFE6
  5062                           postdec1	equ	0xFE5
  5063                           fsr1h	equ	0xFE2
  5064                           fsr1l	equ	0xFE1
  5065                           postinc2	equ	0xFDE
  5066                           postdec2	equ	0xFDD
  5067                           fsr2h	equ	0xFDA
  5068                           fsr2l	equ	0xFD9
  5069                           status	equ	0xFD8
  5070                           
  5071 ;; *************** function _RtccWriteTime *****************
  5072 ;; Defined at:
  5073 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  pTm             2    0[COMRAM] PTR const struct .
  5076 ;;		 -> RtccTime(4), 
  5077 ;;  di              1    2[COMRAM] enum E7121
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  tempHourWDay    2    9[COMRAM] struct .
  5080 ;;  tempMinSec      2    7[COMRAM] struct .
  5081 ;;  wasWrEn         1    6[COMRAM] enum E7121
  5082 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5083 ;;  wasOn           1    4[COMRAM] enum E7121
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      enum E6550
  5086 ;; Registers used:
  5087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5093 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;Total ram usage:       11 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    1
  5100 ;; This function calls:
  5101 ;;		_RtccWrOn
  5102 ;; This function is called by:
  5103 ;;		_Write_RTC
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text22
  5108  00E7F4                     __ptext22:
  5109                           	opt stack 0
  5110  00E7F4                     _RtccWriteTime:
  5111                           	opt stack 25
  5112                           
  5113                           ;incstack = 0
  5114  00E7F4  0E00               	movlw	0
  5115  00E7F6  6E06               	movwf	RtccWriteTime@wasAlrm,c
  5116  00E7F8  EE20 F002          	lfsr	2,2
  5117  00E7FC  5001               	movf	RtccWriteTime@pTm,w,c
  5118  00E7FE  26D9               	addwf	fsr2l,f,c
  5119  00E800  5002               	movf	RtccWriteTime@pTm+1,w,c
  5120  00E802  22DA               	addwfc	fsr2h,f,c
  5121  00E804  0E5A               	movlw	90
  5122  00E806  60DF               	cpfslt	indf2,c
  5123  00E808  0012               	return	
  5124  00E80A  EE20 F001          	lfsr	2,1
  5125  00E80E  5001               	movf	RtccWriteTime@pTm,w,c
  5126  00E810  26D9               	addwf	fsr2l,f,c
  5127  00E812  5002               	movf	RtccWriteTime@pTm+1,w,c
  5128  00E814  22DA               	addwfc	fsr2h,f,c
  5129  00E816  0E5A               	movlw	90
  5130  00E818  60DF               	cpfslt	indf2,c
  5131  00E81A  0012               	return	
  5132  00E81C  EE20 F003          	lfsr	2,3
  5133  00E820  5001               	movf	RtccWriteTime@pTm,w,c
  5134  00E822  26D9               	addwf	fsr2l,f,c
  5135  00E824  5002               	movf	RtccWriteTime@pTm+1,w,c
  5136  00E826  22DA               	addwfc	fsr2h,f,c
  5137  00E828  0E24               	movlw	36
  5138  00E82A  64DF               	cpfsgt	indf2,c
  5139  00E82C  D001               	goto	l635
  5140  00E82E  0012               	return	
  5141  00E830                     l635:
  5142  00E830  EE20 F002          	lfsr	2,2
  5143  00E834  5001               	movf	RtccWriteTime@pTm,w,c
  5144  00E836  26D9               	addwf	fsr2l,f,c
  5145  00E838  5002               	movf	RtccWriteTime@pTm+1,w,c
  5146  00E83A  22DA               	addwfc	fsr2h,f,c
  5147  00E83C  50DF               	movf	indf2,w,c
  5148  00E83E  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  5149  00E840  EE20 F001          	lfsr	2,1
  5150  00E844  5001               	movf	RtccWriteTime@pTm,w,c
  5151  00E846  26D9               	addwf	fsr2l,f,c
  5152  00E848  5002               	movf	RtccWriteTime@pTm+1,w,c
  5153  00E84A  22DA               	addwfc	fsr2h,f,c
  5154  00E84C  50DF               	movf	indf2,w,c
  5155  00E84E  6E08               	movwf	RtccWriteTime@tempMinSec,c
  5156  00E850  5003               	movf	RtccWriteTime@di,w,c
  5157  00E852  A4D8               	btfss	status,2,c
  5158  00E854  9CF2               	bcf	intcon,6,c	;volatile
  5159  00E856  010F               	movlb	15	; () banked
  5160  00E858  0E00               	movlw	0
  5161  00E85A  BB3F               	btfsc	63,5,b	;volatile
  5162  00E85C  0E01               	movlw	1
  5163  00E85E  6E07               	movwf	RtccWriteTime@wasWrEn,c
  5164  00E860  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5165  00E862  B4D8               	btfsc	status,2,c
  5166                           
  5167                           ; BSR set to: 15
  5168  00E864  EC75  F069         	call	_RtccWrOn	;wreg free
  5169  00E868  010F               	movlb	15	; () banked
  5170  00E86A  0E00               	movlw	0
  5171  00E86C  BF3F               	btfsc	63,7,b	;volatile
  5172  00E86E  0E01               	movlw	1
  5173  00E870  6E05               	movwf	RtccWriteTime@wasOn,c
  5174  00E872  5005               	movf	RtccWriteTime@wasOn,w,c
  5175  00E874  B4D8               	btfsc	status,2,c
  5176  00E876  D006               	goto	l641
  5177                           
  5178                           ; BSR set to: 15
  5179  00E878  0E00               	movlw	0
  5180  00E87A  BE91               	btfsc	3985,7,c	;volatile
  5181  00E87C  0E01               	movlw	1
  5182  00E87E  6E06               	movwf	RtccWriteTime@wasAlrm,c
  5183                           
  5184                           ; BSR set to: 15
  5185  00E880  010F               	movlb	15	; () banked
  5186  00E882  9F3F               	bcf	63,7,b	;volatile
  5187  00E884                     l641:
  5188                           
  5189                           ; BSR set to: 15
  5190                           
  5191                           ; BSR set to: 15
  5192  00E884  0EFC               	movlw	252
  5193  00E886  010F               	movlb	15	; () banked
  5194  00E888  173F               	andwf	63,f,b	;volatile
  5195  00E88A  010F               	movlb	15	; () banked
  5196  00E88C  813F               	bsf	63,0,b	;volatile
  5197                           
  5198                           ; BSR set to: 15
  5199  00E88E  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  5200                           
  5201                           ; BSR set to: 15
  5202  00E892  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  5203                           
  5204                           ; BSR set to: 15
  5205  00E896  EE20 F003          	lfsr	2,3
  5206  00E89A  5001               	movf	RtccWriteTime@pTm,w,c
  5207  00E89C  26D9               	addwf	fsr2l,f,c
  5208  00E89E  5002               	movf	RtccWriteTime@pTm+1,w,c
  5209  00E8A0  22DA               	addwfc	fsr2h,f,c
  5210  00E8A2  50DF               	movf	indf2,w,c
  5211  00E8A4  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  5212                           
  5213                           ; BSR set to: 15
  5214  00E8A6  0EFC               	movlw	252
  5215  00E8A8  010F               	movlb	15	; () banked
  5216  00E8AA  173F               	andwf	63,f,b	;volatile
  5217                           
  5218                           ; BSR set to: 15
  5219  00E8AC  010F               	movlb	15	; () banked
  5220  00E8AE  813F               	bsf	63,0,b	;volatile
  5221                           
  5222                           ; BSR set to: 15
  5223  00E8B0  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  5224                           
  5225                           ; BSR set to: 15
  5226  00E8B4  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  5227                           
  5228                           ; BSR set to: 15
  5229  00E8B8  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  5230                           
  5231                           ; BSR set to: 15
  5232  00E8BC  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  5233                           
  5234                           ; BSR set to: 15
  5235  00E8C0  5005               	movf	RtccWriteTime@wasOn,w,c
  5236  00E8C2  B4D8               	btfsc	status,2,c
  5237  00E8C4  D00B               	goto	l642
  5238                           
  5239                           ; BSR set to: 15
  5240  00E8C6  010F               	movlb	15	; () banked
  5241  00E8C8  8F3F               	bsf	63,7,b	;volatile
  5242                           
  5243                           ; BSR set to: 15
  5244  00E8CA  5006               	movf	RtccWriteTime@wasAlrm,w,c
  5245  00E8CC  A4D8               	btfss	status,2,c
  5246                           
  5247                           ; BSR set to: 15
  5248  00E8CE  8E91               	bsf	3985,7,c	;volatile
  5249                           
  5250                           ; BSR set to: 15
  5251                           
  5252                           ; BSR set to: 15
  5253  00E8D0  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5254  00E8D2  B4D8               	btfsc	status,2,c
  5255  00E8D4  D008               	goto	l646
  5256                           
  5257                           ; BSR set to: 15
  5258  00E8D6  EC75  F069         	call	_RtccWrOn	;wreg free
  5259  00E8DA  D005               	goto	l646
  5260  00E8DC                     l642:
  5261  00E8DC  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5262  00E8DE  A4D8               	btfss	status,2,c
  5263  00E8E0  D002               	goto	l646
  5264  00E8E2  010F               	movlb	15	; () banked
  5265  00E8E4  9B3F               	bcf	63,5,b	;volatile
  5266  00E8E6                     l646:
  5267                           
  5268                           ; BSR set to: 15
  5269                           
  5270                           ; BSR set to: 15
  5271  00E8E6  5003               	movf	RtccWriteTime@di,w,c
  5272  00E8E8  B4D8               	btfsc	status,2,c
  5273  00E8EA  0012               	return	
  5274  00E8EC  8CF2               	bsf	intcon,6,c	;volatile
  5275  00E8EE  0012               	return	
  5276  00E8F0                     __end_of_RtccWriteTime:
  5277                           	opt stack 0
  5278                           tblptru	equ	0xFF8
  5279                           tblptrh	equ	0xFF7
  5280                           tblptrl	equ	0xFF6
  5281                           tablat	equ	0xFF5
  5282                           prodh	equ	0xFF4
  5283                           prodl	equ	0xFF3
  5284                           intcon	equ	0xFF2
  5285                           postinc0	equ	0xFEE
  5286                           wreg	equ	0xFE8
  5287                           postinc1	equ	0xFE6
  5288                           postdec1	equ	0xFE5
  5289                           fsr1h	equ	0xFE2
  5290                           fsr1l	equ	0xFE1
  5291                           indf2	equ	0xFDF
  5292                           postinc2	equ	0xFDE
  5293                           postdec2	equ	0xFDD
  5294                           fsr2h	equ	0xFDA
  5295                           fsr2l	equ	0xFD9
  5296                           status	equ	0xFD8
  5297                           
  5298 ;; *************** function _RtccWriteDate *****************
  5299 ;; Defined at:
  5300 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  pDt             2    0[COMRAM] PTR const struct .
  5303 ;;		 -> RtccDate(4), 
  5304 ;;  di              1    2[COMRAM] enum E7121
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  tempHourWDay    2   11[COMRAM] struct .
  5307 ;;  tempDayMonth    2    9[COMRAM] struct .
  5308 ;;  tempYear        2    6[COMRAM] struct .
  5309 ;;  wasWrEn         1    8[COMRAM] enum E7121
  5310 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5311 ;;  wasOn           1    4[COMRAM] enum E7121
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      enum E6550
  5314 ;; Registers used:
  5315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5321 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5324 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;Total ram usage:       13 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:    1
  5328 ;; This function calls:
  5329 ;;		_RtccWrOn
  5330 ;; This function is called by:
  5331 ;;		_Write_RTC
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text23
  5336  00EB18                     __ptext23:
  5337                           	opt stack 0
  5338  00EB18                     _RtccWriteDate:
  5339                           	opt stack 25
  5340                           
  5341                           ;incstack = 0
  5342  00EB18  0E00               	movlw	0
  5343  00EB1A  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5344  00EB1C  EE20 F002          	lfsr	2,2
  5345  00EB20  5001               	movf	RtccWriteDate@pDt,w,c
  5346  00EB22  26D9               	addwf	fsr2l,f,c
  5347  00EB24  5002               	movf	RtccWriteDate@pDt+1,w,c
  5348  00EB26  22DA               	addwfc	fsr2h,f,c
  5349  00EB28  0E13               	movlw	19
  5350  00EB2A  60DF               	cpfslt	indf2,c
  5351  00EB2C  0012               	return	
  5352  00EB2E  EE20 F002          	lfsr	2,2
  5353  00EB32  5001               	movf	RtccWriteDate@pDt,w,c
  5354  00EB34  26D9               	addwf	fsr2l,f,c
  5355  00EB36  5002               	movf	RtccWriteDate@pDt+1,w,c
  5356  00EB38  22DA               	addwfc	fsr2h,f,c
  5357  00EB3A  50DF               	movf	indf2,w,c
  5358  00EB3C  B4D8               	btfsc	status,2,c
  5359  00EB3E  0012               	return	
  5360  00EB40  EE20 F001          	lfsr	2,1
  5361  00EB44  5001               	movf	RtccWriteDate@pDt,w,c
  5362  00EB46  26D9               	addwf	fsr2l,f,c
  5363  00EB48  5002               	movf	RtccWriteDate@pDt+1,w,c
  5364  00EB4A  22DA               	addwfc	fsr2h,f,c
  5365  00EB4C  0E32               	movlw	50
  5366  00EB4E  60DF               	cpfslt	indf2,c
  5367  00EB50  0012               	return	
  5368  00EB52  EE20 F001          	lfsr	2,1
  5369  00EB56  5001               	movf	RtccWriteDate@pDt,w,c
  5370  00EB58  26D9               	addwf	fsr2l,f,c
  5371  00EB5A  5002               	movf	RtccWriteDate@pDt+1,w,c
  5372  00EB5C  22DA               	addwfc	fsr2h,f,c
  5373  00EB5E  50DF               	movf	indf2,w,c
  5374  00EB60  B4D8               	btfsc	status,2,c
  5375  00EB62  0012               	return	
  5376  00EB64  EE20 F003          	lfsr	2,3
  5377  00EB68  5001               	movf	RtccWriteDate@pDt,w,c
  5378  00EB6A  26D9               	addwf	fsr2l,f,c
  5379  00EB6C  5002               	movf	RtccWriteDate@pDt+1,w,c
  5380  00EB6E  22DA               	addwfc	fsr2h,f,c
  5381  00EB70  0E99               	movlw	153
  5382  00EB72  64DF               	cpfsgt	indf2,c
  5383  00EB74  D001               	goto	l606
  5384  00EB76  0012               	return	
  5385  00EB78                     l606:
  5386  00EB78  EE20 F003          	lfsr	2,3
  5387  00EB7C  5001               	movf	RtccWriteDate@pDt,w,c
  5388  00EB7E  26D9               	addwf	fsr2l,f,c
  5389  00EB80  5002               	movf	RtccWriteDate@pDt+1,w,c
  5390  00EB82  22DA               	addwfc	fsr2h,f,c
  5391  00EB84  50DF               	movf	indf2,w,c
  5392  00EB86  6E07               	movwf	RtccWriteDate@tempYear,c
  5393  00EB88  EE20 F001          	lfsr	2,1
  5394  00EB8C  5001               	movf	RtccWriteDate@pDt,w,c
  5395  00EB8E  26D9               	addwf	fsr2l,f,c
  5396  00EB90  5002               	movf	RtccWriteDate@pDt+1,w,c
  5397  00EB92  22DA               	addwfc	fsr2h,f,c
  5398  00EB94  50DF               	movf	indf2,w,c
  5399  00EB96  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  5400  00EB98  EE20 F002          	lfsr	2,2
  5401  00EB9C  5001               	movf	RtccWriteDate@pDt,w,c
  5402  00EB9E  26D9               	addwf	fsr2l,f,c
  5403  00EBA0  5002               	movf	RtccWriteDate@pDt+1,w,c
  5404  00EBA2  22DA               	addwfc	fsr2h,f,c
  5405  00EBA4  50DF               	movf	indf2,w,c
  5406  00EBA6  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  5407  00EBA8  5003               	movf	RtccWriteDate@di,w,c
  5408  00EBAA  A4D8               	btfss	status,2,c
  5409  00EBAC  9CF2               	bcf	intcon,6,c	;volatile
  5410  00EBAE  010F               	movlb	15	; () banked
  5411  00EBB0  0E00               	movlw	0
  5412  00EBB2  BB3F               	btfsc	63,5,b	;volatile
  5413  00EBB4  0E01               	movlw	1
  5414  00EBB6  6E09               	movwf	RtccWriteDate@wasWrEn,c
  5415  00EBB8  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5416  00EBBA  B4D8               	btfsc	status,2,c
  5417                           
  5418                           ; BSR set to: 15
  5419  00EBBC  EC75  F069         	call	_RtccWrOn	;wreg free
  5420  00EBC0  010F               	movlb	15	; () banked
  5421  00EBC2  0E00               	movlw	0
  5422  00EBC4  BF3F               	btfsc	63,7,b	;volatile
  5423  00EBC6  0E01               	movlw	1
  5424  00EBC8  6E05               	movwf	RtccWriteDate@wasOn,c
  5425  00EBCA  5005               	movf	RtccWriteDate@wasOn,w,c
  5426  00EBCC  B4D8               	btfsc	status,2,c
  5427  00EBCE  D006               	goto	l612
  5428                           
  5429                           ; BSR set to: 15
  5430  00EBD0  0E00               	movlw	0
  5431  00EBD2  BE91               	btfsc	3985,7,c	;volatile
  5432  00EBD4  0E01               	movlw	1
  5433  00EBD6  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5434                           
  5435                           ; BSR set to: 15
  5436  00EBD8  010F               	movlb	15	; () banked
  5437  00EBDA  9F3F               	bcf	63,7,b	;volatile
  5438  00EBDC                     l612:
  5439                           
  5440                           ; BSR set to: 15
  5441                           
  5442                           ; BSR set to: 15
  5443  00EBDC  0EFC               	movlw	252
  5444  00EBDE  010F               	movlb	15	; () banked
  5445  00EBE0  173F               	andwf	63,f,b	;volatile
  5446  00EBE2  010F               	movlb	15	; () banked
  5447  00EBE4  813F               	bsf	63,0,b	;volatile
  5448                           
  5449                           ; BSR set to: 15
  5450  00EBE6  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  5451                           
  5452                           ; BSR set to: 15
  5453  00EBEA  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  5454                           
  5455                           ; BSR set to: 15
  5456  00EBEE  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  5457  00EBF2  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  5458  00EBF6  50DF               	movf	indf2,w,c
  5459  00EBF8  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  5460                           
  5461                           ; BSR set to: 15
  5462  00EBFA  0EFC               	movlw	252
  5463  00EBFC  010F               	movlb	15	; () banked
  5464  00EBFE  173F               	andwf	63,f,b	;volatile
  5465                           
  5466                           ; BSR set to: 15
  5467  00EC00  0E03               	movlw	3
  5468  00EC02  010F               	movlb	15	; () banked
  5469  00EC04  133F               	iorwf	63,f,b	;volatile
  5470                           
  5471                           ; BSR set to: 15
  5472  00EC06  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  5473                           
  5474                           ; BSR set to: 15
  5475  00EC0A  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  5476                           
  5477                           ; BSR set to: 15
  5478  00EC0E  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  5479                           
  5480                           ; BSR set to: 15
  5481  00EC12  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  5482                           
  5483                           ; BSR set to: 15
  5484  00EC16  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  5485                           
  5486                           ; BSR set to: 15
  5487  00EC1A  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  5488                           
  5489                           ; BSR set to: 15
  5490  00EC1E  5005               	movf	RtccWriteDate@wasOn,w,c
  5491  00EC20  B4D8               	btfsc	status,2,c
  5492  00EC22  D00B               	goto	l613
  5493                           
  5494                           ; BSR set to: 15
  5495  00EC24  010F               	movlb	15	; () banked
  5496  00EC26  8F3F               	bsf	63,7,b	;volatile
  5497                           
  5498                           ; BSR set to: 15
  5499  00EC28  5006               	movf	RtccWriteDate@wasAlrm,w,c
  5500  00EC2A  A4D8               	btfss	status,2,c
  5501                           
  5502                           ; BSR set to: 15
  5503  00EC2C  8E91               	bsf	3985,7,c	;volatile
  5504                           
  5505                           ; BSR set to: 15
  5506                           
  5507                           ; BSR set to: 15
  5508  00EC2E  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5509  00EC30  B4D8               	btfsc	status,2,c
  5510  00EC32  D008               	goto	l617
  5511                           
  5512                           ; BSR set to: 15
  5513  00EC34  EC75  F069         	call	_RtccWrOn	;wreg free
  5514  00EC38  D005               	goto	l617
  5515  00EC3A                     l613:
  5516  00EC3A  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5517  00EC3C  A4D8               	btfss	status,2,c
  5518  00EC3E  D002               	goto	l617
  5519  00EC40  010F               	movlb	15	; () banked
  5520  00EC42  9B3F               	bcf	63,5,b	;volatile
  5521  00EC44                     l617:
  5522                           
  5523                           ; BSR set to: 15
  5524                           
  5525                           ; BSR set to: 15
  5526  00EC44  5003               	movf	RtccWriteDate@di,w,c
  5527  00EC46  B4D8               	btfsc	status,2,c
  5528  00EC48  0012               	return	
  5529  00EC4A  9CF2               	bcf	intcon,6,c	;volatile
  5530  00EC4C  0012               	return	
  5531  00EC4E                     __end_of_RtccWriteDate:
  5532                           	opt stack 0
  5533                           tblptru	equ	0xFF8
  5534                           tblptrh	equ	0xFF7
  5535                           tblptrl	equ	0xFF6
  5536                           tablat	equ	0xFF5
  5537                           prodh	equ	0xFF4
  5538                           prodl	equ	0xFF3
  5539                           intcon	equ	0xFF2
  5540                           postinc0	equ	0xFEE
  5541                           wreg	equ	0xFE8
  5542                           postinc1	equ	0xFE6
  5543                           postdec1	equ	0xFE5
  5544                           fsr1h	equ	0xFE2
  5545                           fsr1l	equ	0xFE1
  5546                           indf2	equ	0xFDF
  5547                           postinc2	equ	0xFDE
  5548                           postdec2	equ	0xFDD
  5549                           fsr2h	equ	0xFDA
  5550                           fsr2l	equ	0xFD9
  5551                           status	equ	0xFD8
  5552                           
  5553 ;; *************** function _RtccWrOn *****************
  5554 ;; Defined at:
  5555 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;		None
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  data            2    0        unsigned int 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;Total ram usage:        0 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_Write_RTC
  5579 ;;		_RtccWriteDate
  5580 ;;		_RtccWriteTime
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text24
  5585  00D2EA                     __ptext24:
  5586                           	opt stack 0
  5587  00D2EA                     _RtccWrOn:
  5588                           	opt stack 25
  5589                           
  5590                           ;incstack = 0
  5591  00D2EA  9CF2               	bcf	intcon,6,c	;volatile
  5592  00D2EC  0E55               	movlw	85
  5593  00D2EE  6EA7               	movwf	4007,c	;volatile
  5594  00D2F0  0EAA               	movlw	170
  5595  00D2F2  6EA7               	movwf	4007,c	;volatile
  5596  00D2F4  010F               	movlb	15	; () banked
  5597  00D2F6  8B3F               	bsf	63,5,b	;volatile
  5598                           
  5599                           ; BSR set to: 15
  5600  00D2F8  8CF2               	bsf	intcon,6,c	;volatile
  5601                           
  5602                           ; BSR set to: 15
  5603  00D2FA  0012               	return		;funcret
  5604  00D2FC                     __end_of_RtccWrOn:
  5605                           	opt stack 0
  5606                           tblptru	equ	0xFF8
  5607                           tblptrh	equ	0xFF7
  5608                           tblptrl	equ	0xFF6
  5609                           tablat	equ	0xFF5
  5610                           prodh	equ	0xFF4
  5611                           prodl	equ	0xFF3
  5612                           intcon	equ	0xFF2
  5613                           postinc0	equ	0xFEE
  5614                           wreg	equ	0xFE8
  5615                           postinc1	equ	0xFE6
  5616                           postdec1	equ	0xFE5
  5617                           fsr1h	equ	0xFE2
  5618                           fsr1l	equ	0xFE1
  5619                           indf2	equ	0xFDF
  5620                           postinc2	equ	0xFDE
  5621                           postdec2	equ	0xFDD
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function _covertir_valores_de_array_a_escala_decimal *****************
  5627 ;; Defined at:
  5628 ;;		line 549 in file "main.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  i               2    8[BANK0 ] int 
  5633 ;;  numero          2    6[BANK0 ] int 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  2   90[COMRAM] int 
  5636 ;; Registers used:
  5637 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5646 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5647 ;;Total ram usage:       14 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    5
  5650 ;; This function calls:
  5651 ;;		___awtoft
  5652 ;;		___fttol
  5653 ;;		___wmul
  5654 ;;		_lcd_gotoxy
  5655 ;;		_lcd_putrs
  5656 ;;		_pow
  5657 ;;		_sprintf
  5658 ;; This function is called by:
  5659 ;;		_editar_fecha_reloj_digital
  5660 ;;		_editar_hora_reloj_digital
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text25
  5665  00E8F0                     __ptext25:
  5666                           	opt stack 0
  5667  00E8F0                     _covertir_valores_de_array_a_escala_decimal:
  5668                           	opt stack 19
  5669                           
  5670                           ;main.c: 550: int numero = 0;
  5671                           
  5672                           ; BSR set to: 15
  5673                           ;incstack = 0
  5674  00E8F0  0E00               	movlw	0
  5675  00E8F2  0100               	movlb	0	; () banked
  5676  00E8F4  6FCC               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  5677  00E8F6  0E00               	movlw	0
  5678  00E8F8  6FCB               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  5679                           
  5680                           ;main.c: 551: for (int i = 2 - 1; i >= 0; i--) {
  5681  00E8FA  0E00               	movlw	0
  5682  00E8FC  0100               	movlb	0	; () banked
  5683  00E8FE  6FCE               	movwf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),b
  5684  00E900  0E01               	movlw	1
  5685  00E902  6FCD               	movwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),b
  5686  00E904                     l4498:
  5687                           
  5688                           ; BSR set to: 0
  5689  00E904  0100               	movlb	0	; () banked
  5690  00E906  BFCE               	btfsc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),7,b
  5691  00E908  D05A               	goto	u5150
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;main.c: 552: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5695                           
  5696                           ; BSR set to: 0
  5697                           
  5698                           ; BSR set to: 0
  5699  00E90A  0E01               	movlw	1
  5700  00E90C  0100               	movlb	0	; () banked
  5701  00E90E  25CD               	addwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  5702  00E910  6E5D               	movwf	??_covertir_valores_de_array_a_escala_decimal& (0+255),c
  5703  00E912  0E00               	movlw	0
  5704  00E914  0100               	movlb	0	; () banked
  5705  00E916  21CE               	addwfc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  5706  00E918  6E5E               	movwf	(??_covertir_valores_de_array_a_escala_decimal+1)& (0+255),c
  5707  00E91A  1E5D               	comf	??_covertir_valores_de_array_a_escala_decimal,f,c
  5708  00E91C  1E5E               	comf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  5709  00E91E  4A5D               	infsnz	??_covertir_valores_de_array_a_escala_decimal,f,c
  5710  00E920  2A5E               	incf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  5711  00E922  0E02               	movlw	2
  5712  00E924  245D               	addwf	??_covertir_valores_de_array_a_escala_decimal,w,c
  5713  00E926  6E09               	movwf	___awtoft@c,c
  5714  00E928  0E00               	movlw	0
  5715  00E92A  205E               	addwfc	??_covertir_valores_de_array_a_escala_decimal+1,w,c
  5716  00E92C  6E0A               	movwf	___awtoft@c+1,c
  5717  00E92E  EC04  F06A         	call	___awtoft	;wreg free
  5718  00E932  C009  F0C5         	movff	?___awtoft,_covertir_valores_de_array_a_escala_decimal$2460
  5719  00E936  C00A  F0C6         	movff	?___awtoft+1,_covertir_valores_de_array_a_escala_decimal$2460+1
  5720  00E93A  C00B  F0C7         	movff	?___awtoft+2,_covertir_valores_de_array_a_escala_decimal$2460+2
  5721                           
  5722                           ;main.c: 552: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5723  00E93E  C0C5  F04D         	movff	_covertir_valores_de_array_a_escala_decimal$2460,pow@y
  5724  00E942  C0C6  F04E         	movff	_covertir_valores_de_array_a_escala_decimal$2460+1,pow@y+1
  5725  00E946  C0C7  F04F         	movff	_covertir_valores_de_array_a_escala_decimal$2460+2,pow@y+2
  5726  00E94A  0E00               	movlw	0
  5727  00E94C  6E4A               	movwf	pow@x,c
  5728  00E94E  0E20               	movlw	32
  5729  00E950  6E4B               	movwf	pow@x+1,c
  5730  00E952  0E41               	movlw	65
  5731  00E954  6E4C               	movwf	pow@x+2,c
  5732  00E956  ECCA  F076         	call	_pow	;wreg free
  5733  00E95A  C04A  F0C8         	movff	?_pow,_covertir_valores_de_array_a_escala_decimal$2461
  5734  00E95E  C04B  F0C9         	movff	?_pow+1,_covertir_valores_de_array_a_escala_decimal$2461+1
  5735  00E962  C04C  F0CA         	movff	?_pow+2,_covertir_valores_de_array_a_escala_decimal$2461+2
  5736                           
  5737                           ;main.c: 552: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5738  00E966  C0C8  F00D         	movff	_covertir_valores_de_array_a_escala_decimal$2461,___fttol@f1
  5739  00E96A  C0C9  F00E         	movff	_covertir_valores_de_array_a_escala_decimal$2461+1,___fttol@f1+1
  5740  00E96E  C0CA  F00F         	movff	_covertir_valores_de_array_a_escala_decimal$2461+2,___fttol@f1+2
  5741  00E972  EC80  F073         	call	___fttol	;wreg free
  5742  00E976  C00D  F01C         	movff	?___fttol,___wmul@multiplier
  5743  00E97A  C00E  F01D         	movff	?___fttol+1,___wmul@multiplier+1
  5744  00E97E  90D8               	bcf	status,0,c
  5745  00E980  0100               	movlb	0	; () banked
  5746  00E982  35CD               	rlcf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  5747  00E984  6ED9               	movwf	fsr2l,c
  5748  00E986  0100               	movlb	0	; () banked
  5749  00E988  35CE               	rlcf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  5750  00E98A  6EDA               	movwf	fsr2h,c
  5751  00E98C  0E80               	movlw	low _numeros_para_fecha
  5752  00E98E  26D9               	addwf	fsr2l,f,c
  5753  00E990  0E00               	movlw	high _numeros_para_fecha
  5754  00E992  22DA               	addwfc	fsr2h,f,c
  5755  00E994  CFDE F01E          	movff	postinc2,___wmul@multiplicand
  5756  00E998  CFDD F01F          	movff	postdec2,___wmul@multiplicand+1
  5757  00E99C  ECD8  F069         	call	___wmul	;wreg free
  5758  00E9A0  0100               	movlb	0	; () banked
  5759  00E9A2  51CB               	movf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),w,b
  5760  00E9A4  241C               	addwf	?___wmul,w,c
  5761  00E9A6  0100               	movlb	0	; () banked
  5762  00E9A8  6FCB               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  5763  00E9AA  0100               	movlb	0	; () banked
  5764  00E9AC  51CC               	movf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),w,b
  5765  00E9AE  201D               	addwfc	?___wmul+1,w,c
  5766  00E9B0  0100               	movlb	0	; () banked
  5767  00E9B2  6FCC               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  5768                           
  5769                           ; BSR set to: 0
  5770  00E9B4  0100               	movlb	0	; () banked
  5771  00E9B6  07CD               	decf	covertir_valores_de_array_a_escala_decimal@i& (0+255),f,b
  5772  00E9B8  A0D8               	btfss	status,0,c
  5773  00E9BA  07CE               	decf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),f,b
  5774  00E9BC  D7A3               	goto	l4498
  5775  00E9BE                     u5150:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;main.c: 553: };
  5779                           ;main.c: 554: sprintf(buffer2, "%02u", numero);
  5780                           
  5781                           ; BSR set to: 0
  5782  00E9BE  0EA9               	movlw	low _buffer2
  5783  00E9C0  6E22               	movwf	sprintf@sp,c
  5784  00E9C2  0E00               	movlw	high _buffer2
  5785  00E9C4  6E23               	movwf	sprintf@sp+1,c
  5786  00E9C6  0E8E               	movlw	low (STR_7+10)
  5787  00E9C8  6E24               	movwf	sprintf@f,c
  5788  00E9CA  0EFF               	movlw	high (STR_7+10)
  5789  00E9CC  6E25               	movwf	sprintf@f+1,c
  5790  00E9CE  C0CB  F026         	movff	covertir_valores_de_array_a_escala_decimal@numero,?_sprintf+4
  5791  00E9D2  C0CC  F027         	movff	covertir_valores_de_array_a_escala_decimal@numero+1,?_sprintf+5
  5792  00E9D6  EC12  F07C         	call	_sprintf	;wreg free
  5793                           
  5794                           ;main.c: 555: lcd_gotoxy(8, 2);
  5795  00E9DA  0E02               	movlw	2
  5796  00E9DC  6E05               	movwf	lcd_gotoxy@y,c
  5797  00E9DE  0E08               	movlw	8
  5798  00E9E0  ECA3  F069         	call	_lcd_gotoxy
  5799                           
  5800                           ;main.c: 556: lcd_putrs(buffer2);
  5801  00E9E4  0EA9               	movlw	low _buffer2
  5802  00E9E6  6E09               	movwf	lcd_putrs@ptr,c
  5803  00E9E8  0E00               	movlw	high _buffer2
  5804  00E9EA  6E0A               	movwf	lcd_putrs@ptr+1,c
  5805  00E9EC  ECFA  F06A         	call	_lcd_putrs	;wreg free
  5806                           
  5807                           ;main.c: 557: return numero;
  5808  00E9F0  C0CB  F05B         	movff	covertir_valores_de_array_a_escala_decimal@numero,?_covertir_valores_de_array_a_e
      +                          scala_decimal
  5809  00E9F4  C0CC  F05C         	movff	covertir_valores_de_array_a_escala_decimal@numero+1,?_covertir_valores_de_array_a
      +                          _escala_decimal+1
  5810  00E9F8  0012               	return	
  5811  00E9FA                     __end_of_covertir_valores_de_array_a_escala_decimal:
  5812                           	opt stack 0
  5813                           tblptru	equ	0xFF8
  5814                           tblptrh	equ	0xFF7
  5815                           tblptrl	equ	0xFF6
  5816                           tablat	equ	0xFF5
  5817                           prodh	equ	0xFF4
  5818                           prodl	equ	0xFF3
  5819                           intcon	equ	0xFF2
  5820                           postinc0	equ	0xFEE
  5821                           wreg	equ	0xFE8
  5822                           postinc1	equ	0xFE6
  5823                           postdec1	equ	0xFE5
  5824                           fsr1h	equ	0xFE2
  5825                           fsr1l	equ	0xFE1
  5826                           indf2	equ	0xFDF
  5827                           postinc2	equ	0xFDE
  5828                           postdec2	equ	0xFDD
  5829                           fsr2h	equ	0xFDA
  5830                           fsr2l	equ	0xFD9
  5831                           status	equ	0xFD8
  5832                           
  5833 ;; *************** function _pow *****************
  5834 ;; Defined at:
  5835 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  x               3   73[COMRAM] int 
  5838 ;;  y               3   76[COMRAM] int 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  yi              4   86[COMRAM] unsigned long 
  5841 ;;  sign            1   85[COMRAM] unsigned char 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  3   73[COMRAM] unsigned char 
  5844 ;; Registers used:
  5845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5851 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5852 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5854 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5855 ;;Total ram usage:       17 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    4
  5858 ;; This function calls:
  5859 ;;		___ftge
  5860 ;;		___ftmul
  5861 ;;		___ftneg
  5862 ;;		___fttol
  5863 ;;		___lltoft
  5864 ;;		_exp
  5865 ;;		_log
  5866 ;; This function is called by:
  5867 ;;		_covertir_valores_de_array_a_escala_decimal
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text26
  5872  00ED94                     __ptext26:
  5873                           	opt stack 0
  5874  00ED94                     _pow:
  5875                           	opt stack 19
  5876                           
  5877                           ;incstack = 0
  5878  00ED94  0E00               	movlw	0
  5879  00ED96  6E56               	movwf	pow@sign,c
  5880  00ED98  504A               	movf	pow@x,w,c
  5881  00ED9A  104B               	iorwf	pow@x+1,w,c
  5882  00ED9C  104C               	iorwf	pow@x+2,w,c
  5883  00ED9E  A4D8               	btfss	status,2,c
  5884  00EDA0  D01C               	goto	l1107
  5885  00EDA2  0E00               	movlw	0
  5886  00EDA4  6E01               	movwf	___ftge@ff1,c
  5887  00EDA6  0E00               	movlw	0
  5888  00EDA8  6E02               	movwf	___ftge@ff1+1,c
  5889  00EDAA  0E00               	movlw	0
  5890  00EDAC  6E03               	movwf	___ftge@ff1+2,c
  5891  00EDAE  C04D  F004         	movff	pow@y,___ftge@ff2
  5892  00EDB2  C04E  F005         	movff	pow@y+1,___ftge@ff2+1
  5893  00EDB6  C04F  F006         	movff	pow@y+2,___ftge@ff2+2
  5894  00EDBA  ECD7  F06E         	call	___ftge	;wreg free
  5895  00EDBE  A0D8               	btfss	status,0,c
  5896  00EDC0  D005               	goto	l1108
  5897  00EDC2  0E00               	movlw	0
  5898  00EDC4  0100               	movlb	0	; () banked
  5899  00EDC6  6F89               	movwf	(_errno+1)& (0+255),b
  5900  00EDC8  0E21               	movlw	33
  5901  00EDCA  6F88               	movwf	_errno& (0+255),b
  5902  00EDCC                     l1108:
  5903  00EDCC  0E00               	movlw	0
  5904  00EDCE  6E4A               	movwf	?_pow,c
  5905  00EDD0  0E00               	movlw	0
  5906  00EDD2  6E4B               	movwf	?_pow+1,c
  5907  00EDD4  0E00               	movlw	0
  5908  00EDD6  6E4C               	movwf	?_pow+2,c
  5909  00EDD8  0012               	return	
  5910  00EDDA                     l1107:
  5911  00EDDA  504D               	movf	pow@y,w,c
  5912  00EDDC  104E               	iorwf	pow@y+1,w,c
  5913  00EDDE  104F               	iorwf	pow@y+2,w,c
  5914  00EDE0  A4D8               	btfss	status,2,c
  5915  00EDE2  D007               	goto	l1110
  5916  00EDE4  0E00               	movlw	0
  5917  00EDE6  6E4A               	movwf	?_pow,c
  5918  00EDE8  0E80               	movlw	128
  5919  00EDEA  6E4B               	movwf	?_pow+1,c
  5920  00EDEC  0E3F               	movlw	63
  5921  00EDEE  6E4C               	movwf	?_pow+2,c
  5922  00EDF0  0012               	return	
  5923  00EDF2                     l1110:
  5924  00EDF2  AE4C               	btfss	pow@x+2,7,c
  5925  00EDF4  D041               	goto	l1111
  5926  00EDF6  C04D  F00D         	movff	pow@y,___fttol@f1
  5927  00EDFA  C04E  F00E         	movff	pow@y+1,___fttol@f1+1
  5928  00EDFE  C04F  F00F         	movff	pow@y+2,___fttol@f1+2
  5929  00EE02  EC80  F073         	call	___fttol	;wreg free
  5930  00EE06  C00D  F057         	movff	?___fttol,pow@yi
  5931  00EE0A  C00E  F058         	movff	?___fttol+1,pow@yi+1
  5932  00EE0E  C00F  F059         	movff	?___fttol+2,pow@yi+2
  5933  00EE12  C010  F05A         	movff	?___fttol+3,pow@yi+3
  5934  00EE16  C057  F009         	movff	pow@yi,___lltoft@c
  5935  00EE1A  C058  F00A         	movff	pow@yi+1,___lltoft@c+1
  5936  00EE1E  C059  F00B         	movff	pow@yi+2,___lltoft@c+2
  5937  00EE22  C05A  F00C         	movff	pow@yi+3,___lltoft@c+3
  5938  00EE26  EC79  F06B         	call	___lltoft	;wreg free
  5939  00EE2A  504D               	movf	pow@y,w,c
  5940  00EE2C  1809               	xorwf	?___lltoft,w,c
  5941  00EE2E  E107               	bnz	u4640
  5942  00EE30  504E               	movf	pow@y+1,w,c
  5943  00EE32  180A               	xorwf	?___lltoft+1,w,c
  5944  00EE34  E104               	bnz	u4640
  5945  00EE36  504F               	movf	pow@y+2,w,c
  5946  00EE38  180B               	xorwf	?___lltoft+2,w,c
  5947  00EE3A  B4D8               	btfsc	status,2,c
  5948  00EE3C  D00C               	goto	l1112
  5949  00EE3E                     u4640:
  5950  00EE3E  0E00               	movlw	0
  5951  00EE40  0100               	movlb	0	; () banked
  5952  00EE42  6F89               	movwf	(_errno+1)& (0+255),b
  5953  00EE44  0E21               	movlw	33
  5954  00EE46  6F88               	movwf	_errno& (0+255),b
  5955  00EE48  0E00               	movlw	0
  5956  00EE4A  6E4A               	movwf	?_pow,c
  5957  00EE4C  0E00               	movlw	0
  5958  00EE4E  6E4B               	movwf	?_pow+1,c
  5959  00EE50  0E00               	movlw	0
  5960  00EE52  6E4C               	movwf	?_pow+2,c
  5961                           
  5962                           ; BSR set to: 0
  5963  00EE54  0012               	return	
  5964  00EE56                     l1112:
  5965                           
  5966                           ; BSR set to: 0
  5967  00EE56  5057               	movf	pow@yi,w,c
  5968  00EE58  0B01               	andlw	1
  5969  00EE5A  6E56               	movwf	pow@sign,c
  5970  00EE5C  C04A  F001         	movff	pow@x,___ftneg@f1
  5971  00EE60  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  5972  00EE64  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  5973  00EE68  ECB4  F069         	call	___ftneg	;wreg free
  5974  00EE6C  C001  F04A         	movff	?___ftneg,pow@x
  5975  00EE70  C002  F04B         	movff	?___ftneg+1,pow@x+1
  5976  00EE74  C003  F04C         	movff	?___ftneg+2,pow@x+2
  5977  00EE78                     l1111:
  5978  00EE78  C04A  F03A         	movff	pow@x,log@x
  5979  00EE7C  C04B  F03B         	movff	pow@x+1,log@x+1
  5980  00EE80  C04C  F03C         	movff	pow@x+2,log@x+2
  5981  00EE84  ECFD  F074         	call	_log	;wreg free
  5982  00EE88  C03A  F050         	movff	?_log,_pow$2462
  5983  00EE8C  C03B  F051         	movff	?_log+1,_pow$2462+1
  5984  00EE90  C03C  F052         	movff	?_log+2,_pow$2462+2
  5985  00EE94  C050  F00D         	movff	_pow$2462,___ftmul@f1
  5986  00EE98  C051  F00E         	movff	_pow$2462+1,___ftmul@f1+1
  5987  00EE9C  C052  F00F         	movff	_pow$2462+2,___ftmul@f1+2
  5988  00EEA0  C04D  F010         	movff	pow@y,___ftmul@f2
  5989  00EEA4  C04E  F011         	movff	pow@y+1,___ftmul@f2+1
  5990  00EEA8  C04F  F012         	movff	pow@y+2,___ftmul@f2+2
  5991  00EEAC  EC06  F073         	call	___ftmul	;wreg free
  5992  00EEB0  C00D  F053         	movff	?___ftmul,_pow$2463
  5993  00EEB4  C00E  F054         	movff	?___ftmul+1,_pow$2463+1
  5994  00EEB8  C00F  F055         	movff	?___ftmul+2,_pow$2463+2
  5995  00EEBC  C053  F041         	movff	_pow$2463,exp@x
  5996  00EEC0  C054  F042         	movff	_pow$2463+1,exp@x+1
  5997  00EEC4  C055  F043         	movff	_pow$2463+2,exp@x+2
  5998  00EEC8  EC10  F07A         	call	_exp	;wreg free
  5999  00EECC  C041  F04A         	movff	?_exp,pow@x
  6000  00EED0  C042  F04B         	movff	?_exp+1,pow@x+1
  6001  00EED4  C043  F04C         	movff	?_exp+2,pow@x+2
  6002  00EED8  5056               	movf	pow@sign,w,c
  6003  00EEDA  B4D8               	btfsc	status,2,c
  6004  00EEDC  D00F               	goto	l1113
  6005  00EEDE  C04A  F001         	movff	pow@x,___ftneg@f1
  6006  00EEE2  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  6007  00EEE6  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  6008  00EEEA  ECB4  F069         	call	___ftneg	;wreg free
  6009  00EEEE  C001  F04A         	movff	?___ftneg,?_pow
  6010  00EEF2  C002  F04B         	movff	?___ftneg+1,?_pow+1
  6011  00EEF6  C003  F04C         	movff	?___ftneg+2,?_pow+2
  6012  00EEFA  0012               	return	
  6013  00EEFC                     l1113:
  6014  00EEFC  C04A  F04A         	movff	pow@x,?_pow
  6015  00EF00  C04B  F04B         	movff	pow@x+1,?_pow+1
  6016  00EF04  C04C  F04C         	movff	pow@x+2,?_pow+2
  6017  00EF08  0012               	return		;funcret
  6018  00EF0A                     __end_of_pow:
  6019                           	opt stack 0
  6020                           tblptru	equ	0xFF8
  6021                           tblptrh	equ	0xFF7
  6022                           tblptrl	equ	0xFF6
  6023                           tablat	equ	0xFF5
  6024                           prodh	equ	0xFF4
  6025                           prodl	equ	0xFF3
  6026                           intcon	equ	0xFF2
  6027                           postinc0	equ	0xFEE
  6028                           wreg	equ	0xFE8
  6029                           postinc1	equ	0xFE6
  6030                           postdec1	equ	0xFE5
  6031                           fsr1h	equ	0xFE2
  6032                           fsr1l	equ	0xFE1
  6033                           indf2	equ	0xFDF
  6034                           postinc2	equ	0xFDE
  6035                           postdec2	equ	0xFDD
  6036                           fsr2h	equ	0xFDA
  6037                           fsr2l	equ	0xFD9
  6038                           status	equ	0xFD8
  6039                           
  6040 ;; *************** function _log *****************
  6041 ;; Defined at:
  6042 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  x               3   57[COMRAM] unsigned char 
  6045 ;; Auto vars:     Size  Location     Type
  6046 ;;  exponent        2   60[COMRAM] int 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  3   57[COMRAM] int 
  6049 ;; Registers used:
  6050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6056 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6059 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6060 ;;Total ram usage:        5 bytes
  6061 ;; Hardware stack levels used:    1
  6062 ;; Hardware stack levels required when called:    3
  6063 ;; This function calls:
  6064 ;;		___awtoft
  6065 ;;		___ftadd
  6066 ;;		___ftmul
  6067 ;;		_eval_poly
  6068 ;;		_frexp
  6069 ;; This function is called by:
  6070 ;;		_pow
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text27
  6075  00E9FA                     __ptext27:
  6076                           	opt stack 0
  6077  00E9FA                     _log:
  6078                           	opt stack 19
  6079                           
  6080                           ;incstack = 0
  6081  00E9FA  AE3C               	btfss	log@x+2,7,c
  6082  00E9FC  D00C               	goto	l1309
  6083  00E9FE  0E00               	movlw	0
  6084  00EA00  0100               	movlb	0	; () banked
  6085  00EA02  6F89               	movwf	(_errno+1)& (0+255),b
  6086  00EA04  0E21               	movlw	33
  6087  00EA06  6F88               	movwf	_errno& (0+255),b
  6088  00EA08  0E00               	movlw	0
  6089  00EA0A  6E3A               	movwf	?_log,c
  6090  00EA0C  0E00               	movlw	0
  6091  00EA0E  6E3B               	movwf	?_log+1,c
  6092  00EA10  0E00               	movlw	0
  6093  00EA12  6E3C               	movwf	?_log+2,c
  6094                           
  6095                           ; BSR set to: 0
  6096  00EA14  0012               	return	
  6097  00EA16                     l1309:
  6098                           
  6099                           ; BSR set to: 0
  6100  00EA16  503A               	movf	log@x,w,c
  6101  00EA18  103B               	iorwf	log@x+1,w,c
  6102  00EA1A  103C               	iorwf	log@x+2,w,c
  6103  00EA1C  A4D8               	btfss	status,2,c
  6104  00EA1E  D00C               	goto	l1311
  6105  00EA20  0E00               	movlw	0
  6106  00EA22  0100               	movlb	0	; () banked
  6107  00EA24  6F89               	movwf	(_errno+1)& (0+255),b
  6108  00EA26  0E22               	movlw	34
  6109  00EA28  6F88               	movwf	_errno& (0+255),b
  6110  00EA2A  0E00               	movlw	0
  6111  00EA2C  6E3A               	movwf	?_log,c
  6112  00EA2E  0E00               	movlw	0
  6113  00EA30  6E3B               	movwf	?_log+1,c
  6114  00EA32  0E00               	movlw	0
  6115  00EA34  6E3C               	movwf	?_log+2,c
  6116                           
  6117                           ; BSR set to: 0
  6118  00EA36  0012               	return	
  6119  00EA38                     l1311:
  6120                           
  6121                           ; BSR set to: 0
  6122  00EA38  0E00               	movlw	0
  6123  00EA3A  6E10               	movwf	___ftmul@f2,c
  6124  00EA3C  0E00               	movlw	0
  6125  00EA3E  6E11               	movwf	___ftmul@f2+1,c
  6126  00EA40  0E40               	movlw	64
  6127  00EA42  6E12               	movwf	___ftmul@f2+2,c
  6128  00EA44  0E3D               	movlw	low log@exponent
  6129  00EA46  6E04               	movwf	frexp@eptr,c
  6130  00EA48  0E00               	movlw	high log@exponent
  6131  00EA4A  6E05               	movwf	frexp@eptr+1,c
  6132  00EA4C  C03A  F001         	movff	log@x,frexp@value
  6133  00EA50  C03B  F002         	movff	log@x+1,frexp@value+1
  6134  00EA54  C03C  F003         	movff	log@x+2,frexp@value+2
  6135  00EA58  EC1F  F06F         	call	_frexp	;wreg free
  6136  00EA5C  C001  F00D         	movff	?_frexp,___ftmul@f1
  6137  00EA60  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  6138  00EA64  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  6139  00EA68  EC06  F073         	call	___ftmul	;wreg free
  6140  00EA6C  C00D  F022         	movff	?___ftmul,___ftadd@f1
  6141  00EA70  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  6142  00EA74  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  6143  00EA78  0E00               	movlw	0
  6144  00EA7A  6E25               	movwf	___ftadd@f2,c
  6145  00EA7C  0E80               	movlw	128
  6146  00EA7E  6E26               	movwf	___ftadd@f2+1,c
  6147  00EA80  0EBF               	movlw	191
  6148  00EA82  6E27               	movwf	___ftadd@f2+2,c
  6149  00EA84  EC53  F078         	call	___ftadd	;wreg free
  6150  00EA88  C022  F03A         	movff	?___ftadd,log@x
  6151  00EA8C  C023  F03B         	movff	?___ftadd+1,log@x+1
  6152  00EA90  C024  F03C         	movff	?___ftadd+2,log@x+2
  6153  00EA94  063D               	decf	log@exponent,f,c
  6154  00EA96  A0D8               	btfss	status,0,c
  6155  00EA98  063E               	decf	log@exponent+1,f,c
  6156  00EA9A  C03A  F02E         	movff	log@x,eval_poly@x
  6157  00EA9E  C03B  F02F         	movff	log@x+1,eval_poly@x+1
  6158  00EAA2  C03C  F030         	movff	log@x+2,eval_poly@x+2
  6159  00EAA6  0E21               	movlw	low log@coeff
  6160  00EAA8  6E31               	movwf	eval_poly@d,c
  6161  00EAAA  0EFF               	movlw	high log@coeff
  6162  00EAAC  6E32               	movwf	eval_poly@d+1,c
  6163  00EAAE  0E00               	movlw	0
  6164  00EAB0  6E34               	movwf	eval_poly@n+1,c
  6165  00EAB2  0E08               	movlw	8
  6166  00EAB4  6E33               	movwf	eval_poly@n,c
  6167  00EAB6  ECBB  F071         	call	_eval_poly	;wreg free
  6168  00EABA  C02E  F03A         	movff	?_eval_poly,log@x
  6169  00EABE  C02F  F03B         	movff	?_eval_poly+1,log@x+1
  6170  00EAC2  C030  F03C         	movff	?_eval_poly+2,log@x+2
  6171  00EAC6  0E72               	movlw	114
  6172  00EAC8  6E10               	movwf	___ftmul@f2,c
  6173  00EACA  0E31               	movlw	49
  6174  00EACC  6E11               	movwf	___ftmul@f2+1,c
  6175  00EACE  0E3F               	movlw	63
  6176  00EAD0  6E12               	movwf	___ftmul@f2+2,c
  6177  00EAD2  C03D  F009         	movff	log@exponent,___awtoft@c
  6178  00EAD6  C03E  F00A         	movff	log@exponent+1,___awtoft@c+1
  6179  00EADA  EC04  F06A         	call	___awtoft	;wreg free
  6180  00EADE  C009  F00D         	movff	?___awtoft,___ftmul@f1
  6181  00EAE2  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  6182  00EAE6  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  6183  00EAEA  EC06  F073         	call	___ftmul	;wreg free
  6184  00EAEE  C00D  F022         	movff	?___ftmul,___ftadd@f1
  6185  00EAF2  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  6186  00EAF6  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  6187  00EAFA  C03A  F025         	movff	log@x,___ftadd@f2
  6188  00EAFE  C03B  F026         	movff	log@x+1,___ftadd@f2+1
  6189  00EB02  C03C  F027         	movff	log@x+2,___ftadd@f2+2
  6190  00EB06  EC53  F078         	call	___ftadd	;wreg free
  6191  00EB0A  C022  F03A         	movff	?___ftadd,?_log
  6192  00EB0E  C023  F03B         	movff	?___ftadd+1,?_log+1
  6193  00EB12  C024  F03C         	movff	?___ftadd+2,?_log+2
  6194  00EB16  0012               	return	
  6195  00EB18                     __end_of_log:
  6196                           	opt stack 0
  6197                           tblptru	equ	0xFF8
  6198                           tblptrh	equ	0xFF7
  6199                           tblptrl	equ	0xFF6
  6200                           tablat	equ	0xFF5
  6201                           prodh	equ	0xFF4
  6202                           prodl	equ	0xFF3
  6203                           intcon	equ	0xFF2
  6204                           postinc0	equ	0xFEE
  6205                           wreg	equ	0xFE8
  6206                           postinc1	equ	0xFE6
  6207                           postdec1	equ	0xFE5
  6208                           fsr1h	equ	0xFE2
  6209                           fsr1l	equ	0xFE1
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           postdec2	equ	0xFDD
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           
  6217 ;; *************** function _exp *****************
  6218 ;; Defined at:
  6219 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  x               3   64[COMRAM] int 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  exponent        2   70[COMRAM] int 
  6224 ;;  sign            1   72[COMRAM] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  3   64[COMRAM] unsigned char 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6234 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6235 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6237 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6238 ;;Total ram usage:        9 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    3
  6241 ;; This function calls:
  6242 ;;		___awtoft
  6243 ;;		___ftdiv
  6244 ;;		___ftge
  6245 ;;		___ftmul
  6246 ;;		___ftneg
  6247 ;;		___ftsub
  6248 ;;		___fttol
  6249 ;;		_eval_poly
  6250 ;;		_floor
  6251 ;;		_ldexp
  6252 ;; This function is called by:
  6253 ;;		_pow
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text28
  6258  00F420                     __ptext28:
  6259                           	opt stack 0
  6260  00F420                     _exp:
  6261                           	opt stack 19
  6262                           
  6263                           ;incstack = 0
  6264  00F420  5041               	movf	exp@x,w,c
  6265  00F422  1042               	iorwf	exp@x+1,w,c
  6266  00F424  1043               	iorwf	exp@x+2,w,c
  6267  00F426  A4D8               	btfss	status,2,c
  6268  00F428  D007               	goto	l1267
  6269  00F42A  0E00               	movlw	0
  6270  00F42C  6E41               	movwf	?_exp,c
  6271  00F42E  0E80               	movlw	128
  6272  00F430  6E42               	movwf	?_exp+1,c
  6273  00F432  0E3F               	movlw	63
  6274  00F434  6E43               	movwf	?_exp+2,c
  6275  00F436  0012               	return	
  6276  00F438                     l1267:
  6277  00F438  0E72               	movlw	114
  6278  00F43A  6E01               	movwf	___ftge@ff1,c
  6279  00F43C  0E31               	movlw	49
  6280  00F43E  6E02               	movwf	___ftge@ff1+1,c
  6281  00F440  0E44               	movlw	68
  6282  00F442  6E03               	movwf	___ftge@ff1+2,c
  6283  00F444  C041  F004         	movff	exp@x,___ftge@ff2
  6284  00F448  C042  F005         	movff	exp@x+1,___ftge@ff2+1
  6285  00F44C  C043  F006         	movff	exp@x+2,___ftge@ff2+2
  6286  00F450  ECD7  F06E         	call	___ftge	;wreg free
  6287  00F454  B0D8               	btfsc	status,0,c
  6288  00F456  D00C               	goto	l1269
  6289  00F458  0E00               	movlw	0
  6290  00F45A  0100               	movlb	0	; () banked
  6291  00F45C  6F89               	movwf	(_errno+1)& (0+255),b
  6292  00F45E  0E22               	movlw	34
  6293  00F460  6F88               	movwf	_errno& (0+255),b
  6294  00F462  0EFF               	movlw	255
  6295  00F464  6E41               	movwf	?_exp,c
  6296  00F466  0E7F               	movlw	127
  6297  00F468  6E42               	movwf	?_exp+1,c
  6298  00F46A  0E7F               	movlw	127
  6299  00F46C  6E43               	movwf	?_exp+2,c
  6300                           
  6301                           ; BSR set to: 0
  6302  00F46E  0012               	return	
  6303  00F470                     l1269:
  6304                           
  6305                           ; BSR set to: 0
  6306  00F470  C041  F001         	movff	exp@x,___ftge@ff1
  6307  00F474  C042  F002         	movff	exp@x+1,___ftge@ff1+1
  6308  00F478  C043  F003         	movff	exp@x+2,___ftge@ff1+2
  6309  00F47C  0E49               	movlw	73
  6310  00F47E  6E04               	movwf	___ftge@ff2,c
  6311  00F480  0E3A               	movlw	58
  6312  00F482  6E05               	movwf	___ftge@ff2+1,c
  6313  00F484  0EC4               	movlw	196
  6314  00F486  6E06               	movwf	___ftge@ff2+2,c
  6315  00F488  ECD7  F06E         	call	___ftge	;wreg free
  6316  00F48C  B0D8               	btfsc	status,0,c
  6317  00F48E  D00C               	goto	l1270
  6318  00F490  0E00               	movlw	0
  6319  00F492  0100               	movlb	0	; () banked
  6320  00F494  6F89               	movwf	(_errno+1)& (0+255),b
  6321  00F496  0E22               	movlw	34
  6322  00F498  6F88               	movwf	_errno& (0+255),b
  6323  00F49A  0E00               	movlw	0
  6324  00F49C  6E41               	movwf	?_exp,c
  6325  00F49E  0E00               	movlw	0
  6326  00F4A0  6E42               	movwf	?_exp+1,c
  6327  00F4A2  0E00               	movlw	0
  6328  00F4A4  6E43               	movwf	?_exp+2,c
  6329                           
  6330                           ; BSR set to: 0
  6331  00F4A6  0012               	return	
  6332  00F4A8                     l1270:
  6333                           
  6334                           ; BSR set to: 0
  6335  00F4A8  AE43               	btfss	exp@x+2,7,c
  6336  00F4AA  D002               	goto	u4540
  6337  00F4AC  0E01               	movlw	1
  6338  00F4AE  D001               	goto	u4550
  6339  00F4B0                     u4540:
  6340  00F4B0  0E00               	movlw	0
  6341  00F4B2                     u4550:
  6342  00F4B2  6E49               	movwf	exp@sign,c
  6343  00F4B4  5049               	movf	exp@sign,w,c
  6344  00F4B6  B4D8               	btfsc	status,2,c
  6345  00F4B8  D00E               	goto	l1271
  6346  00F4BA  C041  F001         	movff	exp@x,___ftneg@f1
  6347  00F4BE  C042  F002         	movff	exp@x+1,___ftneg@f1+1
  6348  00F4C2  C043  F003         	movff	exp@x+2,___ftneg@f1+2
  6349  00F4C6  ECB4  F069         	call	___ftneg	;wreg free
  6350  00F4CA  C001  F041         	movff	?___ftneg,exp@x
  6351  00F4CE  C002  F042         	movff	?___ftneg+1,exp@x+1
  6352  00F4D2  C003  F043         	movff	?___ftneg+2,exp@x+2
  6353  00F4D6                     l1271:
  6354  00F4D6  C041  F00D         	movff	exp@x,___ftmul@f1
  6355  00F4DA  C042  F00E         	movff	exp@x+1,___ftmul@f1+1
  6356  00F4DE  C043  F00F         	movff	exp@x+2,___ftmul@f1+2
  6357  00F4E2  0EAA               	movlw	170
  6358  00F4E4  6E10               	movwf	___ftmul@f2,c
  6359  00F4E6  0EB8               	movlw	184
  6360  00F4E8  6E11               	movwf	___ftmul@f2+1,c
  6361  00F4EA  0E3F               	movlw	63
  6362  00F4EC  6E12               	movwf	___ftmul@f2+2,c
  6363  00F4EE  EC06  F073         	call	___ftmul	;wreg free
  6364  00F4F2  C00D  F041         	movff	?___ftmul,exp@x
  6365  00F4F6  C00E  F042         	movff	?___ftmul+1,exp@x+1
  6366  00F4FA  C00F  F043         	movff	?___ftmul+2,exp@x+2
  6367  00F4FE  C041  F02E         	movff	exp@x,floor@x
  6368  00F502  C042  F02F         	movff	exp@x+1,floor@x+1
  6369  00F506  C043  F030         	movff	exp@x+2,floor@x+2
  6370  00F50A  EC24  F072         	call	_floor	;wreg free
  6371  00F50E  C02E  F044         	movff	?_floor,_exp$2464
  6372  00F512  C02F  F045         	movff	?_floor+1,_exp$2464+1
  6373  00F516  C030  F046         	movff	?_floor+2,_exp$2464+2
  6374  00F51A  C044  F00D         	movff	_exp$2464,___fttol@f1
  6375  00F51E  C045  F00E         	movff	_exp$2464+1,___fttol@f1+1
  6376  00F522  C046  F00F         	movff	_exp$2464+2,___fttol@f1+2
  6377  00F526  EC80  F073         	call	___fttol	;wreg free
  6378  00F52A  C00D  F047         	movff	?___fttol,exp@exponent
  6379  00F52E  C00E  F048         	movff	?___fttol+1,exp@exponent+1
  6380  00F532  C041  F02E         	movff	exp@x,___ftsub@f1
  6381  00F536  C042  F02F         	movff	exp@x+1,___ftsub@f1+1
  6382  00F53A  C043  F030         	movff	exp@x+2,___ftsub@f1+2
  6383  00F53E  C047  F009         	movff	exp@exponent,___awtoft@c
  6384  00F542  C048  F00A         	movff	exp@exponent+1,___awtoft@c+1
  6385  00F546  EC04  F06A         	call	___awtoft	;wreg free
  6386  00F54A  C009  F031         	movff	?___awtoft,___ftsub@f2
  6387  00F54E  C00A  F032         	movff	?___awtoft+1,___ftsub@f2+1
  6388  00F552  C00B  F033         	movff	?___awtoft+2,___ftsub@f2+2
  6389  00F556  EC20  F06A         	call	___ftsub	;wreg free
  6390  00F55A  C02E  F041         	movff	?___ftsub,exp@x
  6391  00F55E  C02F  F042         	movff	?___ftsub+1,exp@x+1
  6392  00F562  C030  F043         	movff	?___ftsub+2,exp@x+2
  6393  00F566  C041  F02E         	movff	exp@x,eval_poly@x
  6394  00F56A  C042  F02F         	movff	exp@x+1,eval_poly@x+1
  6395  00F56E  C043  F030         	movff	exp@x+2,eval_poly@x+2
  6396  00F572  0E03               	movlw	low exp@coeff
  6397  00F574  6E31               	movwf	eval_poly@d,c
  6398  00F576  0EFF               	movlw	high exp@coeff
  6399  00F578  6E32               	movwf	eval_poly@d+1,c
  6400  00F57A  0E00               	movlw	0
  6401  00F57C  6E34               	movwf	eval_poly@n+1,c
  6402  00F57E  0E09               	movlw	9
  6403  00F580  6E33               	movwf	eval_poly@n,c
  6404  00F582  ECBB  F071         	call	_eval_poly	;wreg free
  6405  00F586  C02E  F03A         	movff	?_eval_poly,ldexp@value
  6406  00F58A  C02F  F03B         	movff	?_eval_poly+1,ldexp@value+1
  6407  00F58E  C030  F03C         	movff	?_eval_poly+2,ldexp@value+2
  6408  00F592  C047  F03D         	movff	exp@exponent,ldexp@newexp
  6409  00F596  C048  F03E         	movff	exp@exponent+1,ldexp@newexp+1
  6410  00F59A  EC58  F071         	call	_ldexp	;wreg free
  6411  00F59E  C03A  F041         	movff	?_ldexp,exp@x
  6412  00F5A2  C03B  F042         	movff	?_ldexp+1,exp@x+1
  6413  00F5A6  C03C  F043         	movff	?_ldexp+2,exp@x+2
  6414  00F5AA  5049               	movf	exp@sign,w,c
  6415  00F5AC  B4D8               	btfsc	status,2,c
  6416  00F5AE  D025               	goto	l1272
  6417  00F5B0  2841               	incf	exp@x,w,c
  6418  00F5B2  E10E               	bnz	l4198
  6419  00F5B4  0E7F               	movlw	127
  6420  00F5B6  1842               	xorwf	exp@x+1,w,c
  6421  00F5B8  E10B               	bnz	l4198
  6422  00F5BA  0E7F               	movlw	127
  6423  00F5BC  1843               	xorwf	exp@x+2,w,c
  6424  00F5BE  A4D8               	btfss	status,2,c
  6425  00F5C0  D007               	goto	l1273
  6426  00F5C2  0E00               	movlw	0
  6427  00F5C4  6E41               	movwf	?_exp,c
  6428  00F5C6  0E00               	movlw	0
  6429  00F5C8  6E42               	movwf	?_exp+1,c
  6430  00F5CA  0E00               	movlw	0
  6431  00F5CC  6E43               	movwf	?_exp+2,c
  6432  00F5CE  0012               	return	
  6433  00F5D0                     l1273:
  6434  00F5D0                     l4198:
  6435  00F5D0  0E00               	movlw	0
  6436  00F5D2  6E09               	movwf	___ftdiv@f1,c
  6437  00F5D4  0E80               	movlw	128
  6438  00F5D6  6E0A               	movwf	___ftdiv@f1+1,c
  6439  00F5D8  0E3F               	movlw	63
  6440  00F5DA  6E0B               	movwf	___ftdiv@f1+2,c
  6441  00F5DC  C041  F00C         	movff	exp@x,___ftdiv@f2
  6442  00F5E0  C042  F00D         	movff	exp@x+1,___ftdiv@f2+1
  6443  00F5E4  C043  F00E         	movff	exp@x+2,___ftdiv@f2+2
  6444  00F5E8  EC93  F072         	call	___ftdiv	;wreg free
  6445  00F5EC  C009  F041         	movff	?___ftdiv,?_exp
  6446  00F5F0  C00A  F042         	movff	?___ftdiv+1,?_exp+1
  6447  00F5F4  C00B  F043         	movff	?___ftdiv+2,?_exp+2
  6448  00F5F8  0012               	return	
  6449  00F5FA                     l1272:
  6450  00F5FA  C041  F041         	movff	exp@x,?_exp
  6451  00F5FE  C042  F042         	movff	exp@x+1,?_exp+1
  6452  00F602  C043  F043         	movff	exp@x+2,?_exp+2
  6453  00F606  0012               	return		;funcret
  6454  00F608                     __end_of_exp:
  6455                           	opt stack 0
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           postinc0	equ	0xFEE
  6464                           wreg	equ	0xFE8
  6465                           postinc1	equ	0xFE6
  6466                           postdec1	equ	0xFE5
  6467                           fsr1h	equ	0xFE2
  6468                           fsr1l	equ	0xFE1
  6469                           indf2	equ	0xFDF
  6470                           postinc2	equ	0xFDE
  6471                           postdec2	equ	0xFDD
  6472                           fsr2h	equ	0xFDA
  6473                           fsr2l	equ	0xFD9
  6474                           status	equ	0xFD8
  6475                           
  6476 ;; *************** function _ldexp *****************
  6477 ;; Defined at:
  6478 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  value           3   57[COMRAM] unsigned char 
  6481 ;;  newexp          2   60[COMRAM] int 
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  3   57[COMRAM] int 
  6486 ;; Registers used:
  6487 ;;		wreg, status,2, status,0
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6493 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6496 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;Total ram usage:        7 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_exp
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text29
  6507  00E2B0                     __ptext29:
  6508                           	opt stack 0
  6509  00E2B0                     _ldexp:
  6510                           	opt stack 21
  6511                           
  6512                           ;incstack = 0
  6513  00E2B0  503A               	movf	ldexp@value,w,c
  6514  00E2B2  103B               	iorwf	ldexp@value+1,w,c
  6515  00E2B4  103C               	iorwf	ldexp@value+2,w,c
  6516  00E2B6  A4D8               	btfss	status,2,c
  6517  00E2B8  D007               	goto	l1291
  6518  00E2BA  0E00               	movlw	0
  6519  00E2BC  6E3A               	movwf	?_ldexp,c
  6520  00E2BE  0E00               	movlw	0
  6521  00E2C0  6E3B               	movwf	?_ldexp+1,c
  6522  00E2C2  0E00               	movlw	0
  6523  00E2C4  6E3C               	movwf	?_ldexp+2,c
  6524  00E2C6  0012               	return	
  6525  00E2C8                     l1291:
  6526  00E2C8  503C               	movf	ldexp@value+2,w,c
  6527  00E2CA  0B7F               	andlw	127
  6528  00E2CC  6E3F               	movwf	??_ldexp& (0+255),c
  6529  00E2CE  6A40               	clrf	(??_ldexp+1)& (0+255),c
  6530  00E2D0  90D8               	bcf	status,0,c
  6531  00E2D2  363F               	rlcf	??_ldexp,f,c
  6532  00E2D4  3640               	rlcf	??_ldexp+1,f,c
  6533  00E2D6  503F               	movf	??_ldexp,w,c
  6534  00E2D8  263D               	addwf	ldexp@newexp,f,c
  6535  00E2DA  5040               	movf	??_ldexp+1,w,c
  6536  00E2DC  223E               	addwfc	ldexp@newexp+1,f,c
  6537  00E2DE  AE3B               	btfss	ldexp@value+1,7,c
  6538  00E2E0  D003               	goto	u3970
  6539  00E2E2  6A3F               	clrf	??_ldexp& (0+255),c
  6540  00E2E4  2A3F               	incf	??_ldexp& (0+255),f,c
  6541  00E2E6  D001               	goto	u3978
  6542  00E2E8                     u3970:
  6543  00E2E8  6A3F               	clrf	??_ldexp& (0+255),c
  6544  00E2EA                     u3978:
  6545  00E2EA  503F               	movf	??_ldexp,w,c
  6546  00E2EC  263D               	addwf	ldexp@newexp,f,c
  6547  00E2EE  0E00               	movlw	0
  6548  00E2F0  223E               	addwfc	ldexp@newexp+1,f,c
  6549  00E2F2  AE3E               	btfss	ldexp@newexp+1,7,c
  6550  00E2F4  D00C               	goto	l1293
  6551  00E2F6  0E00               	movlw	0
  6552  00E2F8  0100               	movlb	0	; () banked
  6553  00E2FA  6F89               	movwf	(_errno+1)& (0+255),b
  6554  00E2FC  0E22               	movlw	34
  6555  00E2FE  6F88               	movwf	_errno& (0+255),b
  6556  00E300  0E00               	movlw	0
  6557  00E302  6E3A               	movwf	?_ldexp,c
  6558  00E304  0E00               	movlw	0
  6559  00E306  6E3B               	movwf	?_ldexp+1,c
  6560  00E308  0E00               	movlw	0
  6561  00E30A                     L1:
  6562  00E30A  6E3C               	movwf	?_ldexp+2,c
  6563                           
  6564                           ; BSR set to: 0
  6565  00E30C  0012               	return	
  6566  00E30E                     l1293:
  6567                           
  6568                           ; BSR set to: 0
  6569  00E30E  BE3E               	btfsc	ldexp@newexp+1,7,c
  6570  00E310  D016               	goto	l1295
  6571  00E312  043E               	decf	ldexp@newexp+1,w,c
  6572  00E314  A0D8               	btfss	status,0,c
  6573  00E316  D013               	goto	l1295
  6574  00E318  0E00               	movlw	0
  6575  00E31A  0100               	movlb	0	; () banked
  6576  00E31C  6F89               	movwf	(_errno+1)& (0+255),b
  6577  00E31E  0E22               	movlw	34
  6578  00E320  6F88               	movwf	_errno& (0+255),b
  6579                           
  6580                           ; BSR set to: 0
  6581  00E322  AE3C               	btfss	ldexp@value+2,7,c
  6582  00E324  D006               	goto	l1296
  6583                           
  6584                           ; BSR set to: 0
  6585  00E326  0EFF               	movlw	255
  6586  00E328  6E3A               	movwf	?_ldexp,c
  6587  00E32A  0E7F               	movlw	127
  6588  00E32C  6E3B               	movwf	?_ldexp+1,c
  6589  00E32E  0EFF               	movlw	255
  6590  00E330  D7EC               	goto	L1
  6591  00E332                     l1296:
  6592                           
  6593                           ; BSR set to: 0
  6594                           
  6595                           ; BSR set to: 0
  6596  00E332  0EFF               	movlw	255
  6597  00E334  6E3A               	movwf	?_ldexp,c
  6598  00E336  0E7F               	movlw	127
  6599  00E338  6E3B               	movwf	?_ldexp+1,c
  6600  00E33A  0E7F               	movlw	127
  6601  00E33C  D7E6               	goto	L1
  6602  00E33E                     l1295:
  6603                           
  6604                           ; BSR set to: 0
  6605  00E33E  343E               	rlcf	ldexp@newexp+1,w,c
  6606  00E340  303E               	rrcf	ldexp@newexp+1,w,c
  6607  00E342  6E40               	movwf	(??_ldexp+1)& (0+255),c
  6608  00E344  303D               	rrcf	ldexp@newexp,w,c
  6609  00E346  6E3F               	movwf	??_ldexp& (0+255),c
  6610  00E348  503C               	movf	ldexp@value+2,w,c
  6611  00E34A  183F               	xorwf	??_ldexp,w,c
  6612  00E34C  0B80               	andlw	-128
  6613  00E34E  183F               	xorwf	??_ldexp,w,c
  6614  00E350  6E3C               	movwf	ldexp@value+2,c
  6615  00E352  C03D  F03F         	movff	ldexp@newexp,??_ldexp
  6616  00E356  0E01               	movlw	1
  6617  00E358  163F               	andwf	??_ldexp,f,c
  6618  00E35A  323F               	rrcf	??_ldexp,f,c
  6619  00E35C  323F               	rrcf	??_ldexp,f,c
  6620  00E35E  503B               	movf	ldexp@value+1,w,c
  6621  00E360  183F               	xorwf	??_ldexp,w,c
  6622  00E362  0B7F               	andlw	-129
  6623  00E364  183F               	xorwf	??_ldexp,w,c
  6624  00E366  6E3B               	movwf	ldexp@value+1,c
  6625  00E368  C03A  F03A         	movff	ldexp@value,?_ldexp
  6626  00E36C  C03B  F03B         	movff	ldexp@value+1,?_ldexp+1
  6627  00E370  C03C  F03C         	movff	ldexp@value+2,?_ldexp+2
  6628  00E374  0012               	return	
  6629  00E376                     __end_of_ldexp:
  6630                           	opt stack 0
  6631                           tblptru	equ	0xFF8
  6632                           tblptrh	equ	0xFF7
  6633                           tblptrl	equ	0xFF6
  6634                           tablat	equ	0xFF5
  6635                           prodh	equ	0xFF4
  6636                           prodl	equ	0xFF3
  6637                           intcon	equ	0xFF2
  6638                           postinc0	equ	0xFEE
  6639                           wreg	equ	0xFE8
  6640                           postinc1	equ	0xFE6
  6641                           postdec1	equ	0xFE5
  6642                           fsr1h	equ	0xFE2
  6643                           fsr1l	equ	0xFE1
  6644                           indf2	equ	0xFDF
  6645                           postinc2	equ	0xFDE
  6646                           postdec2	equ	0xFDD
  6647                           fsr2h	equ	0xFDA
  6648                           fsr2l	equ	0xFD9
  6649                           status	equ	0xFD8
  6650                           
  6651 ;; *************** function _floor *****************
  6652 ;; Defined at:
  6653 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  x               3   45[COMRAM] int 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  i               3   48[COMRAM] int 
  6658 ;;  expon           2   51[COMRAM] int 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  3   45[COMRAM] int 
  6661 ;; Registers used:
  6662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6668 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6669 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6671 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6672 ;;Total ram usage:        8 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    2
  6675 ;; This function calls:
  6676 ;;		___altoft
  6677 ;;		___ftadd
  6678 ;;		___ftge
  6679 ;;		___fttol
  6680 ;;		_frexp
  6681 ;; This function is called by:
  6682 ;;		_exp
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text30
  6687  00E448                     __ptext30:
  6688                           	opt stack 0
  6689  00E448                     _floor:
  6690                           	opt stack 19
  6691                           
  6692                           ;incstack = 0
  6693  00E448  C02E  F001         	movff	floor@x,frexp@value
  6694  00E44C  C02F  F002         	movff	floor@x+1,frexp@value+1
  6695  00E450  C030  F003         	movff	floor@x+2,frexp@value+2
  6696  00E454  0E34               	movlw	low floor@expon
  6697  00E456  6E04               	movwf	frexp@eptr,c
  6698  00E458  0E00               	movlw	high floor@expon
  6699  00E45A  6E05               	movwf	frexp@eptr+1,c
  6700  00E45C  EC1F  F06F         	call	_frexp	;wreg free
  6701  00E460  AE35               	btfss	floor@expon+1,7,c
  6702  00E462  D010               	goto	l1278
  6703  00E464  AE30               	btfss	floor@x+2,7,c
  6704  00E466  D007               	goto	l1279
  6705  00E468  0E00               	movlw	0
  6706  00E46A  6E2E               	movwf	?_floor,c
  6707  00E46C  0E80               	movlw	128
  6708  00E46E  6E2F               	movwf	?_floor+1,c
  6709  00E470  0EBF               	movlw	191
  6710  00E472  6E30               	movwf	?_floor+2,c
  6711  00E474  0012               	return	
  6712  00E476                     l1279:
  6713  00E476  0E00               	movlw	0
  6714  00E478  6E2E               	movwf	?_floor,c
  6715  00E47A  0E00               	movlw	0
  6716  00E47C  6E2F               	movwf	?_floor+1,c
  6717  00E47E  0E00               	movlw	0
  6718  00E480  6E30               	movwf	?_floor+2,c
  6719  00E482  0012               	return	
  6720  00E484                     l1278:
  6721  00E484  5035               	movf	floor@expon+1,w,c
  6722  00E486  E104               	bnz	u3930
  6723  00E488  0E15               	movlw	21
  6724  00E48A  5C34               	subwf	floor@expon,w,c
  6725  00E48C  A0D8               	btfss	status,0,c
  6726  00E48E  D007               	goto	l1281
  6727  00E490                     u3930:
  6728  00E490  C02E  F02E         	movff	floor@x,?_floor
  6729  00E494  C02F  F02F         	movff	floor@x+1,?_floor+1
  6730  00E498  C030  F030         	movff	floor@x+2,?_floor+2
  6731  00E49C  0012               	return	
  6732  00E49E                     l1281:
  6733  00E49E  C02E  F00D         	movff	floor@x,___fttol@f1
  6734  00E4A2  C02F  F00E         	movff	floor@x+1,___fttol@f1+1
  6735  00E4A6  C030  F00F         	movff	floor@x+2,___fttol@f1+2
  6736  00E4AA  EC80  F073         	call	___fttol	;wreg free
  6737  00E4AE  C00D  F01C         	movff	?___fttol,___altoft@c
  6738  00E4B2  C00E  F01D         	movff	?___fttol+1,___altoft@c+1
  6739  00E4B6  C00F  F01E         	movff	?___fttol+2,___altoft@c+2
  6740  00E4BA  C010  F01F         	movff	?___fttol+3,___altoft@c+3
  6741  00E4BE  ECC3  F06C         	call	___altoft	;wreg free
  6742  00E4C2  C01C  F031         	movff	?___altoft,floor@i
  6743  00E4C6  C01D  F032         	movff	?___altoft+1,floor@i+1
  6744  00E4CA  C01E  F033         	movff	?___altoft+2,floor@i+2
  6745  00E4CE  C02E  F001         	movff	floor@x,___ftge@ff1
  6746  00E4D2  C02F  F002         	movff	floor@x+1,___ftge@ff1+1
  6747  00E4D6  C030  F003         	movff	floor@x+2,___ftge@ff1+2
  6748  00E4DA  C031  F004         	movff	floor@i,___ftge@ff2
  6749  00E4DE  C032  F005         	movff	floor@i+1,___ftge@ff2+1
  6750  00E4E2  C033  F006         	movff	floor@i+2,___ftge@ff2+2
  6751  00E4E6  ECD7  F06E         	call	___ftge	;wreg free
  6752  00E4EA  B0D8               	btfsc	status,0,c
  6753  00E4EC  D015               	goto	l1282
  6754  00E4EE  C031  F022         	movff	floor@i,___ftadd@f1
  6755  00E4F2  C032  F023         	movff	floor@i+1,___ftadd@f1+1
  6756  00E4F6  C033  F024         	movff	floor@i+2,___ftadd@f1+2
  6757  00E4FA  0E00               	movlw	0
  6758  00E4FC  6E25               	movwf	___ftadd@f2,c
  6759  00E4FE  0E80               	movlw	128
  6760  00E500  6E26               	movwf	___ftadd@f2+1,c
  6761  00E502  0EBF               	movlw	191
  6762  00E504  6E27               	movwf	___ftadd@f2+2,c
  6763  00E506  EC53  F078         	call	___ftadd	;wreg free
  6764  00E50A  C022  F02E         	movff	?___ftadd,?_floor
  6765  00E50E  C023  F02F         	movff	?___ftadd+1,?_floor+1
  6766  00E512  C024  F030         	movff	?___ftadd+2,?_floor+2
  6767  00E516  0012               	return	
  6768  00E518                     l1282:
  6769  00E518  C031  F02E         	movff	floor@i,?_floor
  6770  00E51C  C032  F02F         	movff	floor@i+1,?_floor+1
  6771  00E520  C033  F030         	movff	floor@i+2,?_floor+2
  6772  00E524  0012               	return		;funcret
  6773  00E526                     __end_of_floor:
  6774                           	opt stack 0
  6775                           tblptru	equ	0xFF8
  6776                           tblptrh	equ	0xFF7
  6777                           tblptrl	equ	0xFF6
  6778                           tablat	equ	0xFF5
  6779                           prodh	equ	0xFF4
  6780                           prodl	equ	0xFF3
  6781                           intcon	equ	0xFF2
  6782                           postinc0	equ	0xFEE
  6783                           wreg	equ	0xFE8
  6784                           postinc1	equ	0xFE6
  6785                           postdec1	equ	0xFE5
  6786                           fsr1h	equ	0xFE2
  6787                           fsr1l	equ	0xFE1
  6788                           indf2	equ	0xFDF
  6789                           postinc2	equ	0xFDE
  6790                           postdec2	equ	0xFDD
  6791                           fsr2h	equ	0xFDA
  6792                           fsr2l	equ	0xFD9
  6793                           status	equ	0xFD8
  6794                           
  6795 ;; *************** function _frexp *****************
  6796 ;; Defined at:
  6797 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  value           3    0[COMRAM] int 
  6800 ;;  eptr            2    3[COMRAM] PTR int 
  6801 ;;		 -> log@exponent(2), floor@expon(2), 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  3    0[COMRAM] PTR int 
  6806 ;; Registers used:
  6807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6813 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;Total ram usage:        7 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_floor
  6823 ;;		_log
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text31
  6828  00DE3E                     __ptext31:
  6829                           	opt stack 0
  6830  00DE3E                     _frexp:
  6831                           	opt stack 21
  6832                           
  6833                           ;incstack = 0
  6834  00DE3E  5001               	movf	frexp@value,w,c
  6835  00DE40  1002               	iorwf	frexp@value+1,w,c
  6836  00DE42  1003               	iorwf	frexp@value+2,w,c
  6837  00DE44  A4D8               	btfss	status,2,c
  6838  00DE46  D00F               	goto	l1287
  6839  00DE48  C004  FFD9         	movff	frexp@eptr,fsr2l
  6840  00DE4C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6841  00DE50  0E00               	movlw	0
  6842  00DE52  6EDE               	movwf	postinc2,c
  6843  00DE54  0E00               	movlw	0
  6844  00DE56  6EDD               	movwf	postdec2,c
  6845  00DE58  0E00               	movlw	0
  6846  00DE5A  6E01               	movwf	?_frexp,c
  6847  00DE5C  0E00               	movlw	0
  6848  00DE5E  6E02               	movwf	?_frexp+1,c
  6849  00DE60  0E00               	movlw	0
  6850  00DE62  6E03               	movwf	?_frexp+2,c
  6851  00DE64  0012               	return	
  6852  00DE66                     l1287:
  6853  00DE66  5003               	movf	frexp@value+2,w,c
  6854  00DE68  0B7F               	andlw	127
  6855  00DE6A  6E06               	movwf	??_frexp& (0+255),c
  6856  00DE6C  6A07               	clrf	(??_frexp+1)& (0+255),c
  6857  00DE6E  90D8               	bcf	status,0,c
  6858  00DE70  3606               	rlcf	??_frexp,f,c
  6859  00DE72  3607               	rlcf	??_frexp+1,f,c
  6860  00DE74  C004  FFD9         	movff	frexp@eptr,fsr2l
  6861  00DE78  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6862  00DE7C  C006  FFDE         	movff	??_frexp,postinc2
  6863  00DE80  C007  FFDD         	movff	??_frexp+1,postdec2
  6864  00DE84  AE02               	btfss	frexp@value+1,7,c
  6865  00DE86  D003               	goto	u3740
  6866  00DE88  6A06               	clrf	??_frexp& (0+255),c
  6867  00DE8A  2A06               	incf	??_frexp& (0+255),f,c
  6868  00DE8C  D001               	goto	u3748
  6869  00DE8E                     u3740:
  6870  00DE8E  6A06               	clrf	??_frexp& (0+255),c
  6871  00DE90                     u3748:
  6872  00DE90  5006               	movf	??_frexp,w,c
  6873  00DE92  C004  FFD9         	movff	frexp@eptr,fsr2l
  6874  00DE96  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6875  00DE9A  12DE               	iorwf	postinc2,f,c
  6876  00DE9C  0E00               	movlw	0
  6877  00DE9E  12DD               	iorwf	postdec2,f,c
  6878  00DEA0  C004  FFD9         	movff	frexp@eptr,fsr2l
  6879  00DEA4  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6880  00DEA8  0E82               	movlw	130
  6881  00DEAA  26DE               	addwf	postinc2,f,c
  6882  00DEAC  0EFF               	movlw	255
  6883  00DEAE  22DD               	addwfc	postdec2,f,c
  6884  00DEB0  8003               	bsf	frexp@value+2,0,c
  6885  00DEB2  8203               	bsf	frexp@value+2,1,c
  6886  00DEB4  8403               	bsf	frexp@value+2,2,c
  6887  00DEB6  8603               	bsf	frexp@value+2,3,c
  6888  00DEB8  8803               	bsf	frexp@value+2,4,c
  6889  00DEBA  8A03               	bsf	frexp@value+2,5,c
  6890  00DEBC  9C03               	bcf	frexp@value+2,6,c
  6891  00DEBE  9E02               	bcf	frexp@value+1,7,c
  6892  00DEC0  C001  F001         	movff	frexp@value,?_frexp
  6893  00DEC4  C002  F002         	movff	frexp@value+1,?_frexp+1
  6894  00DEC8  C003  F003         	movff	frexp@value+2,?_frexp+2
  6895  00DECC  0012               	return	
  6896  00DECE                     __end_of_frexp:
  6897                           	opt stack 0
  6898                           tblptru	equ	0xFF8
  6899                           tblptrh	equ	0xFF7
  6900                           tblptrl	equ	0xFF6
  6901                           tablat	equ	0xFF5
  6902                           prodh	equ	0xFF4
  6903                           prodl	equ	0xFF3
  6904                           intcon	equ	0xFF2
  6905                           postinc0	equ	0xFEE
  6906                           wreg	equ	0xFE8
  6907                           postinc1	equ	0xFE6
  6908                           postdec1	equ	0xFE5
  6909                           fsr1h	equ	0xFE2
  6910                           fsr1l	equ	0xFE1
  6911                           indf2	equ	0xFDF
  6912                           postinc2	equ	0xFDE
  6913                           postdec2	equ	0xFDD
  6914                           fsr2h	equ	0xFDA
  6915                           fsr2l	equ	0xFD9
  6916                           status	equ	0xFD8
  6917                           
  6918 ;; *************** function ___fttol *****************
  6919 ;; Defined at:
  6920 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  f1              3   12[COMRAM] float 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  lval            4   22[COMRAM] unsigned long 
  6925 ;;  exp1            1   26[COMRAM] unsigned char 
  6926 ;;  sign1           1   21[COMRAM] unsigned char 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  4   12[COMRAM] long 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6936 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6937 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6938 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6939 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6940 ;;Total ram usage:       15 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_covertir_valores_de_array_a_escala_decimal
  6946 ;;		_pow
  6947 ;;		_exp
  6948 ;;		_floor
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text32
  6953  00E700                     __ptext32:
  6954                           	opt stack 0
  6955  00E700                     ___fttol:
  6956                           	opt stack 20
  6957                           
  6958                           ;incstack = 0
  6959  00E700  C00F  F011         	movff	___fttol@f1+2,??___fttol
  6960  00E704  6A12               	clrf	(??___fttol+1)& (0+255),c
  6961  00E706  6A13               	clrf	(??___fttol+2)& (0+255),c
  6962  00E708  340E               	rlcf	___fttol@f1+1,w,c
  6963  00E70A  3611               	rlcf	??___fttol& (0+255),f,c
  6964  00E70C  E301               	bnc	u3651
  6965  00E70E  8012               	bsf	(??___fttol+1)& (0+255),0,c
  6966  00E710                     u3651:
  6967  00E710  5011               	movf	??___fttol,w,c
  6968  00E712  6E1B               	movwf	___fttol@exp1,c
  6969  00E714  501B               	movf	___fttol@exp1,w,c
  6970  00E716  A4D8               	btfss	status,2,c
  6971  00E718  D009               	goto	l983
  6972  00E71A  0E00               	movlw	0
  6973  00E71C  6E0D               	movwf	?___fttol,c
  6974  00E71E  0E00               	movlw	0
  6975  00E720  6E0E               	movwf	?___fttol+1,c
  6976  00E722  0E00               	movlw	0
  6977  00E724  6E0F               	movwf	?___fttol+2,c
  6978  00E726  0E00               	movlw	0
  6979  00E728  6E10               	movwf	?___fttol+3,c
  6980  00E72A  0012               	return	
  6981  00E72C                     l983:
  6982  00E72C  0E17               	movlw	23
  6983  00E72E  6E11               	movwf	??___fttol& (0+255),c
  6984  00E730  C00D  F012         	movff	___fttol@f1,??___fttol+1
  6985  00E734  C00E  F013         	movff	___fttol@f1+1,??___fttol+2
  6986  00E738  C00F  F014         	movff	___fttol@f1+2,??___fttol+3
  6987  00E73C  2811               	incf	??___fttol,w,c
  6988  00E73E  6E15               	movwf	(??___fttol+4)& (0+255),c
  6989  00E740  D004               	goto	u3670
  6990  00E742                     u3675:
  6991  00E742  90D8               	bcf	status,0,c
  6992  00E744  3214               	rrcf	??___fttol+3,f,c
  6993  00E746  3213               	rrcf	??___fttol+2,f,c
  6994  00E748  3212               	rrcf	??___fttol+1,f,c
  6995  00E74A                     u3670:
  6996  00E74A  2E15               	decfsz	(??___fttol+4)& (0+255),f,c
  6997  00E74C  D7FA               	goto	u3675
  6998  00E74E  5012               	movf	??___fttol+1,w,c
  6999  00E750  6E16               	movwf	___fttol@sign1,c
  7000  00E752  8E0E               	bsf	___fttol@f1+1,7,c
  7001  00E754  0EFF               	movlw	255
  7002  00E756  160D               	andwf	___fttol@f1,f,c
  7003  00E758  0EFF               	movlw	255
  7004  00E75A  160E               	andwf	___fttol@f1+1,f,c
  7005  00E75C  0E00               	movlw	0
  7006  00E75E  160F               	andwf	___fttol@f1+2,f,c
  7007  00E760  500D               	movf	___fttol@f1,w,c
  7008  00E762  6E17               	movwf	___fttol@lval,c
  7009  00E764  500E               	movf	___fttol@f1+1,w,c
  7010  00E766  6E18               	movwf	___fttol@lval+1,c
  7011  00E768  500F               	movf	___fttol@f1+2,w,c
  7012  00E76A  6E19               	movwf	___fttol@lval+2,c
  7013  00E76C  6A1A               	clrf	___fttol@lval+3,c
  7014  00E76E  0E8E               	movlw	142
  7015  00E770  5E1B               	subwf	___fttol@exp1,f,c
  7016  00E772  AE1B               	btfss	___fttol@exp1,7,c
  7017  00E774  D016               	goto	l985
  7018  00E776  501B               	movf	___fttol@exp1,w,c
  7019  00E778  0A80               	xorlw	128
  7020  00E77A  0F8F               	addlw	143
  7021  00E77C  B0D8               	btfsc	status,0,c
  7022  00E77E  D009               	goto	l986
  7023  00E780  0E00               	movlw	0
  7024  00E782  6E0D               	movwf	?___fttol,c
  7025  00E784  0E00               	movlw	0
  7026  00E786  6E0E               	movwf	?___fttol+1,c
  7027  00E788  0E00               	movlw	0
  7028  00E78A  6E0F               	movwf	?___fttol+2,c
  7029  00E78C  0E00               	movlw	0
  7030  00E78E  6E10               	movwf	?___fttol+3,c
  7031  00E790  0012               	return	
  7032  00E792                     l986:
  7033  00E792  90D8               	bcf	status,0,c
  7034  00E794  321A               	rrcf	___fttol@lval+3,f,c
  7035  00E796  3219               	rrcf	___fttol@lval+2,f,c
  7036  00E798  3218               	rrcf	___fttol@lval+1,f,c
  7037  00E79A  3217               	rrcf	___fttol@lval,f,c
  7038  00E79C  3E1B               	incfsz	___fttol@exp1,f,c
  7039  00E79E  D7F9               	goto	l986
  7040  00E7A0  D015               	goto	u3710
  7041  00E7A2                     l985:
  7042  00E7A2  0E17               	movlw	23
  7043  00E7A4  641B               	cpfsgt	___fttol@exp1,c
  7044  00E7A6  D00F               	goto	l991
  7045  00E7A8  0E00               	movlw	0
  7046  00E7AA  6E0D               	movwf	?___fttol,c
  7047  00E7AC  0E00               	movlw	0
  7048  00E7AE  6E0E               	movwf	?___fttol+1,c
  7049  00E7B0  0E00               	movlw	0
  7050  00E7B2  6E0F               	movwf	?___fttol+2,c
  7051  00E7B4  0E00               	movlw	0
  7052  00E7B6  6E10               	movwf	?___fttol+3,c
  7053  00E7B8  0012               	return	
  7054  00E7BA  90D8               	bcf	status,0,c
  7055  00E7BC  3617               	rlcf	___fttol@lval,f,c
  7056  00E7BE  3618               	rlcf	___fttol@lval+1,f,c
  7057  00E7C0  3619               	rlcf	___fttol@lval+2,f,c
  7058  00E7C2  361A               	rlcf	___fttol@lval+3,f,c
  7059  00E7C4  061B               	decf	___fttol@exp1,f,c
  7060  00E7C6                     l991:
  7061  00E7C6  501B               	movf	___fttol@exp1,w,c
  7062  00E7C8  A4D8               	btfss	status,2,c
  7063  00E7CA  D7F7               	goto	l992
  7064  00E7CC                     u3710:
  7065  00E7CC  5016               	movf	___fttol@sign1,w,c
  7066  00E7CE  B4D8               	btfsc	status,2,c
  7067  00E7D0  D008               	goto	l994
  7068  00E7D2  1E1A               	comf	___fttol@lval+3,f,c
  7069  00E7D4  1E19               	comf	___fttol@lval+2,f,c
  7070  00E7D6  1E18               	comf	___fttol@lval+1,f,c
  7071  00E7D8  6C17               	negf	___fttol@lval,c
  7072  00E7DA  0E00               	movlw	0
  7073  00E7DC  2218               	addwfc	___fttol@lval+1,f,c
  7074  00E7DE  2219               	addwfc	___fttol@lval+2,f,c
  7075  00E7E0  221A               	addwfc	___fttol@lval+3,f,c
  7076  00E7E2                     l994:
  7077  00E7E2  C017  F00D         	movff	___fttol@lval,?___fttol
  7078  00E7E6  C018  F00E         	movff	___fttol@lval+1,?___fttol+1
  7079  00E7EA  C019  F00F         	movff	___fttol@lval+2,?___fttol+2
  7080  00E7EE  C01A  F010         	movff	___fttol@lval+3,?___fttol+3
  7081  00E7F2  0012               	return	
  7082  00E7F4                     __end_of___fttol:
  7083                           	opt stack 0
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           prodh	equ	0xFF4
  7089                           prodl	equ	0xFF3
  7090                           intcon	equ	0xFF2
  7091                           postinc0	equ	0xFEE
  7092                           wreg	equ	0xFE8
  7093                           postinc1	equ	0xFE6
  7094                           postdec1	equ	0xFE5
  7095                           fsr1h	equ	0xFE2
  7096                           fsr1l	equ	0xFE1
  7097                           indf2	equ	0xFDF
  7098                           postinc2	equ	0xFDE
  7099                           postdec2	equ	0xFDD
  7100                           fsr2h	equ	0xFDA
  7101                           fsr2l	equ	0xFD9
  7102                           status	equ	0xFD8
  7103                           
  7104 ;; *************** function ___ftge *****************
  7105 ;; Defined at:
  7106 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  ff1             3    0[COMRAM] float 
  7109 ;;  ff2             3    3[COMRAM] float 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;		None               void
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7121 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7123 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7124 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7125 ;;Total ram usage:        9 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; This function calls:
  7128 ;;		Nothing
  7129 ;; This function is called by:
  7130 ;;		_pow
  7131 ;;		_exp
  7132 ;;		_floor
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text33
  7137  00DDAE                     __ptext33:
  7138                           	opt stack 0
  7139  00DDAE                     ___ftge:
  7140                           	opt stack 20
  7141                           
  7142                           ;incstack = 0
  7143  00DDAE  AE03               	btfss	___ftge@ff1+2,7,c
  7144  00DDB0  D016               	goto	l955
  7145  00DDB2  C001  F007         	movff	___ftge@ff1,??___ftge
  7146  00DDB6  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  7147  00DDBA  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  7148  00DDBE  1E07               	comf	??___ftge,f,c
  7149  00DDC0  1E08               	comf	??___ftge+1,f,c
  7150  00DDC2  1E09               	comf	??___ftge+2,f,c
  7151  00DDC4  2A07               	incf	??___ftge,f,c
  7152  00DDC6  0E00               	movlw	0
  7153  00DDC8  2208               	addwfc	??___ftge+1,f,c
  7154  00DDCA  2209               	addwfc	??___ftge+2,f,c
  7155  00DDCC  0E00               	movlw	0
  7156  00DDCE  2407               	addwf	??___ftge,w,c
  7157  00DDD0  6E01               	movwf	___ftge@ff1,c
  7158  00DDD2  0E00               	movlw	0
  7159  00DDD4  2008               	addwfc	??___ftge+1,w,c
  7160  00DDD6  6E02               	movwf	___ftge@ff1+1,c
  7161  00DDD8  0E80               	movlw	128
  7162  00DDDA  2009               	addwfc	??___ftge+2,w,c
  7163  00DDDC  6E03               	movwf	___ftge@ff1+2,c
  7164  00DDDE                     l955:
  7165  00DDDE  AE06               	btfss	___ftge@ff2+2,7,c
  7166  00DDE0  D016               	goto	l956
  7167  00DDE2  C004  F007         	movff	___ftge@ff2,??___ftge
  7168  00DDE6  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  7169  00DDEA  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  7170  00DDEE  1E07               	comf	??___ftge,f,c
  7171  00DDF0  1E08               	comf	??___ftge+1,f,c
  7172  00DDF2  1E09               	comf	??___ftge+2,f,c
  7173  00DDF4  2A07               	incf	??___ftge,f,c
  7174  00DDF6  0E00               	movlw	0
  7175  00DDF8  2208               	addwfc	??___ftge+1,f,c
  7176  00DDFA  2209               	addwfc	??___ftge+2,f,c
  7177  00DDFC  0E00               	movlw	0
  7178  00DDFE  2407               	addwf	??___ftge,w,c
  7179  00DE00  6E04               	movwf	___ftge@ff2,c
  7180  00DE02  0E00               	movlw	0
  7181  00DE04  2008               	addwfc	??___ftge+1,w,c
  7182  00DE06  6E05               	movwf	___ftge@ff2+1,c
  7183  00DE08  0E80               	movlw	128
  7184  00DE0A  2009               	addwfc	??___ftge+2,w,c
  7185  00DE0C  6E06               	movwf	___ftge@ff2+2,c
  7186  00DE0E                     l956:
  7187  00DE0E  0E00               	movlw	0
  7188  00DE10  1A01               	xorwf	___ftge@ff1,f,c
  7189  00DE12  0E00               	movlw	0
  7190  00DE14  1A02               	xorwf	___ftge@ff1+1,f,c
  7191  00DE16  0E80               	movlw	128
  7192  00DE18  1A03               	xorwf	___ftge@ff1+2,f,c
  7193  00DE1A  0E00               	movlw	0
  7194  00DE1C  1A04               	xorwf	___ftge@ff2,f,c
  7195  00DE1E  0E00               	movlw	0
  7196  00DE20  1A05               	xorwf	___ftge@ff2+1,f,c
  7197  00DE22  0E80               	movlw	128
  7198  00DE24  1A06               	xorwf	___ftge@ff2+2,f,c
  7199  00DE26  5004               	movf	___ftge@ff2,w,c
  7200  00DE28  5C01               	subwf	___ftge@ff1,w,c
  7201  00DE2A  5005               	movf	___ftge@ff2+1,w,c
  7202  00DE2C  5802               	subwfb	___ftge@ff1+1,w,c
  7203  00DE2E  5006               	movf	___ftge@ff2+2,w,c
  7204  00DE30  5803               	subwfb	___ftge@ff1+2,w,c
  7205  00DE32  B0D8               	btfsc	status,0,c
  7206  00DE34  D002               	goto	l3332
  7207  00DE36  90D8               	bcf	status,0,c
  7208  00DE38  0012               	return	
  7209  00DE3A                     l3332:
  7210  00DE3A  80D8               	bsf	status,0,c
  7211  00DE3C  0012               	return	
  7212  00DE3E                     __end_of___ftge:
  7213                           	opt stack 0
  7214                           tblptru	equ	0xFF8
  7215                           tblptrh	equ	0xFF7
  7216                           tblptrl	equ	0xFF6
  7217                           tablat	equ	0xFF5
  7218                           prodh	equ	0xFF4
  7219                           prodl	equ	0xFF3
  7220                           intcon	equ	0xFF2
  7221                           postinc0	equ	0xFEE
  7222                           wreg	equ	0xFE8
  7223                           postinc1	equ	0xFE6
  7224                           postdec1	equ	0xFE5
  7225                           fsr1h	equ	0xFE2
  7226                           fsr1l	equ	0xFE1
  7227                           indf2	equ	0xFDF
  7228                           postinc2	equ	0xFDE
  7229                           postdec2	equ	0xFDD
  7230                           fsr2h	equ	0xFDA
  7231                           fsr2l	equ	0xFD9
  7232                           status	equ	0xFD8
  7233                           
  7234 ;; *************** function ___altoft *****************
  7235 ;; Defined at:
  7236 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  c               4   27[COMRAM] long 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  sign            1   36[COMRAM] unsigned char 
  7241 ;;  exp             1   35[COMRAM] unsigned char 
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  3   27[COMRAM] float 
  7244 ;; Registers used:
  7245 ;;		wreg, status,2, status,0, cstack
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7252 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7253 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7254 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7255 ;;Total ram usage:       10 bytes
  7256 ;; Hardware stack levels used:    1
  7257 ;; Hardware stack levels required when called:    1
  7258 ;; This function calls:
  7259 ;;		___ftpack
  7260 ;; This function is called by:
  7261 ;;		_floor
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text34
  7266  00D986                     __ptext34:
  7267                           	opt stack 0
  7268  00D986                     ___altoft:
  7269                           	opt stack 19
  7270                           
  7271                           ;incstack = 0
  7272  00D986  0E00               	movlw	0
  7273  00D988  6E25               	movwf	___altoft@sign,c
  7274  00D98A  0E8E               	movlw	142
  7275  00D98C  6E24               	movwf	___altoft@exp,c
  7276  00D98E  AE1F               	btfss	___altoft@c+3,7,c
  7277  00D990  D011               	goto	l732
  7278  00D992  1E1F               	comf	___altoft@c+3,f,c
  7279  00D994  1E1E               	comf	___altoft@c+2,f,c
  7280  00D996  1E1D               	comf	___altoft@c+1,f,c
  7281  00D998  6C1C               	negf	___altoft@c,c
  7282  00D99A  0E00               	movlw	0
  7283  00D99C  221D               	addwfc	___altoft@c+1,f,c
  7284  00D99E  221E               	addwfc	___altoft@c+2,f,c
  7285  00D9A0  221F               	addwfc	___altoft@c+3,f,c
  7286  00D9A2  0E01               	movlw	1
  7287  00D9A4  6E25               	movwf	___altoft@sign,c
  7288  00D9A6  D006               	goto	l732
  7289  00D9A8  90D8               	bcf	status,0,c
  7290  00D9AA  321F               	rrcf	___altoft@c+3,f,c
  7291  00D9AC  321E               	rrcf	___altoft@c+2,f,c
  7292  00D9AE  321D               	rrcf	___altoft@c+1,f,c
  7293  00D9B0  321C               	rrcf	___altoft@c,f,c
  7294  00D9B2  2A24               	incf	___altoft@exp,f,c
  7295  00D9B4                     l732:
  7296  00D9B4  0E00               	movlw	0
  7297  00D9B6  141C               	andwf	___altoft@c,w,c
  7298  00D9B8  6E20               	movwf	??___altoft& (0+255),c
  7299  00D9BA  0E00               	movlw	0
  7300  00D9BC  141D               	andwf	___altoft@c+1,w,c
  7301  00D9BE  6E21               	movwf	(??___altoft+1)& (0+255),c
  7302  00D9C0  0E00               	movlw	0
  7303  00D9C2  141E               	andwf	___altoft@c+2,w,c
  7304  00D9C4  6E22               	movwf	(??___altoft+2)& (0+255),c
  7305  00D9C6  0EFF               	movlw	255
  7306  00D9C8  141F               	andwf	___altoft@c+3,w,c
  7307  00D9CA  6E23               	movwf	(??___altoft+3)& (0+255),c
  7308  00D9CC  5020               	movf	??___altoft,w,c
  7309  00D9CE  1021               	iorwf	??___altoft+1,w,c
  7310  00D9D0  1022               	iorwf	??___altoft+2,w,c
  7311  00D9D2  1023               	iorwf	??___altoft+3,w,c
  7312  00D9D4  A4D8               	btfss	status,2,c
  7313  00D9D6  D7E8               	goto	l733
  7314  00D9D8  C01C  F001         	movff	___altoft@c,___ftpack@arg
  7315  00D9DC  C01D  F002         	movff	___altoft@c+1,___ftpack@arg+1
  7316  00D9E0  C01E  F003         	movff	___altoft@c+2,___ftpack@arg+2
  7317  00D9E4  C024  F004         	movff	___altoft@exp,___ftpack@exp
  7318  00D9E8  C025  F005         	movff	___altoft@sign,___ftpack@sign
  7319  00D9EC  ECA3  F070         	call	___ftpack	;wreg free
  7320  00D9F0  C001  F01C         	movff	?___ftpack,?___altoft
  7321  00D9F4  C002  F01D         	movff	?___ftpack+1,?___altoft+1
  7322  00D9F8  C003  F01E         	movff	?___ftpack+2,?___altoft+2
  7323  00D9FC  0012               	return	
  7324  00D9FE                     __end_of___altoft:
  7325                           	opt stack 0
  7326                           tblptru	equ	0xFF8
  7327                           tblptrh	equ	0xFF7
  7328                           tblptrl	equ	0xFF6
  7329                           tablat	equ	0xFF5
  7330                           prodh	equ	0xFF4
  7331                           prodl	equ	0xFF3
  7332                           intcon	equ	0xFF2
  7333                           postinc0	equ	0xFEE
  7334                           wreg	equ	0xFE8
  7335                           postinc1	equ	0xFE6
  7336                           postdec1	equ	0xFE5
  7337                           fsr1h	equ	0xFE2
  7338                           fsr1l	equ	0xFE1
  7339                           indf2	equ	0xFDF
  7340                           postinc2	equ	0xFDE
  7341                           postdec2	equ	0xFDD
  7342                           fsr2h	equ	0xFDA
  7343                           fsr2l	equ	0xFD9
  7344                           status	equ	0xFD8
  7345                           
  7346 ;; *************** function _eval_poly *****************
  7347 ;; Defined at:
  7348 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;  x               3   45[COMRAM] float 
  7351 ;;  d               2   48[COMRAM] PTR const 
  7352 ;;		 -> log@coeff(27), exp@coeff(30), 
  7353 ;;  n               2   50[COMRAM] int 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  res             3   54[COMRAM] int 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  3   45[COMRAM] int 
  7358 ;; Registers used:
  7359 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7365 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7369 ;;Total ram usage:       12 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:    2
  7372 ;; This function calls:
  7373 ;;		___ftadd
  7374 ;;		___ftmul
  7375 ;;		___wmul
  7376 ;; This function is called by:
  7377 ;;		_exp
  7378 ;;		_log
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text35
  7383  00E376                     __ptext35:
  7384                           	opt stack 0
  7385  00E376                     _eval_poly:
  7386                           	opt stack 19
  7387                           
  7388                           ;incstack = 0
  7389  00E376  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7390  00E37A  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7391  00E37E  0E00               	movlw	0
  7392  00E380  6E1F               	movwf	___wmul@multiplicand+1,c
  7393  00E382  0E03               	movlw	3
  7394  00E384  6E1E               	movwf	___wmul@multiplicand,c
  7395  00E386  ECD8  F069         	call	___wmul	;wreg free
  7396  00E38A  C031  F035         	movff	eval_poly@d,??_eval_poly
  7397  00E38E  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7398  00E392  501C               	movf	?___wmul,w,c
  7399  00E394  2635               	addwf	??_eval_poly,f,c
  7400  00E396  501D               	movf	?___wmul+1,w,c
  7401  00E398  2236               	addwfc	??_eval_poly+1,f,c
  7402  00E39A  C035  FFF6         	movff	??_eval_poly,tblptrl
  7403  00E39E  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7404  00E3A2                     	if	0	;tblptru may be non-zero
  7405  00E3A2                     	endif
  7406  00E3A2                     	if	0	;tblptru may be non-zero
  7407  00E3A2                     	endif
  7408  00E3A2  0009               	tblrd		*+
  7409  00E3A4  CFF5 F037          	movff	tablat,eval_poly@res
  7410  00E3A8  0009               	tblrd		*+
  7411  00E3AA  CFF5 F038          	movff	tablat,eval_poly@res+1
  7412  00E3AE  000A               	tblrd		*-
  7413  00E3B0  CFF5 F039          	movff	tablat,eval_poly@res+2
  7414  00E3B4  D03E               	goto	l1317
  7415  00E3B6  C037  F010         	movff	eval_poly@res,___ftmul@f2
  7416  00E3BA  C038  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  7417  00E3BE  C039  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  7418  00E3C2  C02E  F00D         	movff	eval_poly@x,___ftmul@f1
  7419  00E3C6  C02F  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  7420  00E3CA  C030  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  7421  00E3CE  EC06  F073         	call	___ftmul	;wreg free
  7422  00E3D2  C00D  F022         	movff	?___ftmul,___ftadd@f1
  7423  00E3D6  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  7424  00E3DA  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  7425  00E3DE  0E00               	movlw	0
  7426  00E3E0  6E1F               	movwf	___wmul@multiplicand+1,c
  7427  00E3E2  0E03               	movlw	3
  7428  00E3E4  6E1E               	movwf	___wmul@multiplicand,c
  7429  00E3E6  0633               	decf	eval_poly@n,f,c
  7430  00E3E8  A0D8               	btfss	status,0,c
  7431  00E3EA  0634               	decf	eval_poly@n+1,f,c
  7432  00E3EC  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7433  00E3F0  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7434  00E3F4  ECD8  F069         	call	___wmul	;wreg free
  7435  00E3F8  C031  F035         	movff	eval_poly@d,??_eval_poly
  7436  00E3FC  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7437  00E400  501C               	movf	?___wmul,w,c
  7438  00E402  2635               	addwf	??_eval_poly,f,c
  7439  00E404  501D               	movf	?___wmul+1,w,c
  7440  00E406  2236               	addwfc	??_eval_poly+1,f,c
  7441  00E408  C035  FFF6         	movff	??_eval_poly,tblptrl
  7442  00E40C  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7443  00E410                     	if	0	;tblptru may be non-zero
  7444  00E410                     	endif
  7445  00E410                     	if	0	;tblptru may be non-zero
  7446  00E410                     	endif
  7447  00E410  0009               	tblrd		*+
  7448  00E412  CFF5 F025          	movff	tablat,___ftadd@f2
  7449  00E416  0009               	tblrd		*+
  7450  00E418  CFF5 F026          	movff	tablat,___ftadd@f2+1
  7451  00E41C  000A               	tblrd		*-
  7452  00E41E  CFF5 F027          	movff	tablat,___ftadd@f2+2
  7453  00E422  EC53  F078         	call	___ftadd	;wreg free
  7454  00E426  C022  F037         	movff	?___ftadd,eval_poly@res
  7455  00E42A  C023  F038         	movff	?___ftadd+1,eval_poly@res+1
  7456  00E42E  C024  F039         	movff	?___ftadd+2,eval_poly@res+2
  7457  00E432                     l1317:
  7458  00E432  5033               	movf	eval_poly@n,w,c
  7459  00E434  1034               	iorwf	eval_poly@n+1,w,c
  7460  00E436  A4D8               	btfss	status,2,c
  7461  00E438  D7BE               	goto	l1318
  7462  00E43A  C037  F02E         	movff	eval_poly@res,?_eval_poly
  7463  00E43E  C038  F02F         	movff	eval_poly@res+1,?_eval_poly+1
  7464  00E442  C039  F030         	movff	eval_poly@res+2,?_eval_poly+2
  7465  00E446  0012               	return		;funcret
  7466  00E448                     __end_of_eval_poly:
  7467                           	opt stack 0
  7468                           tblptru	equ	0xFF8
  7469                           tblptrh	equ	0xFF7
  7470                           tblptrl	equ	0xFF6
  7471                           tablat	equ	0xFF5
  7472                           prodh	equ	0xFF4
  7473                           prodl	equ	0xFF3
  7474                           intcon	equ	0xFF2
  7475                           postinc0	equ	0xFEE
  7476                           wreg	equ	0xFE8
  7477                           postinc1	equ	0xFE6
  7478                           postdec1	equ	0xFE5
  7479                           fsr1h	equ	0xFE2
  7480                           fsr1l	equ	0xFE1
  7481                           indf2	equ	0xFDF
  7482                           postinc2	equ	0xFDE
  7483                           postdec2	equ	0xFDD
  7484                           fsr2h	equ	0xFDA
  7485                           fsr2l	equ	0xFD9
  7486                           status	equ	0xFD8
  7487                           
  7488 ;; *************** function ___ftmul *****************
  7489 ;; Defined at:
  7490 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  f1              3   12[COMRAM] float 
  7493 ;;  f2              3   15[COMRAM] float 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  7496 ;;  sign            1   26[COMRAM] unsigned char 
  7497 ;;  cntr            1   25[COMRAM] unsigned char 
  7498 ;;  exp             1   21[COMRAM] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  3   12[COMRAM] float 
  7501 ;; Registers used:
  7502 ;;		wreg, status,2, status,0, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7508 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7509 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7510 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7511 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7512 ;;Total ram usage:       15 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:    1
  7515 ;; This function calls:
  7516 ;;		___ftpack
  7517 ;; This function is called by:
  7518 ;;		_pow
  7519 ;;		_exp
  7520 ;;		_log
  7521 ;;		_eval_poly
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           	psect	text36
  7526  00E60C                     __ptext36:
  7527                           	opt stack 0
  7528  00E60C                     ___ftmul:
  7529                           	opt stack 19
  7530                           
  7531                           ;incstack = 0
  7532  00E60C  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  7533  00E610  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7534  00E612  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7535  00E614  340E               	rlcf	___ftmul@f1+1,w,c
  7536  00E616  3613               	rlcf	??___ftmul& (0+255),f,c
  7537  00E618  E301               	bnc	u3561
  7538  00E61A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7539  00E61C                     u3561:
  7540  00E61C  5013               	movf	??___ftmul,w,c
  7541  00E61E  6E16               	movwf	___ftmul@exp,c
  7542  00E620  5016               	movf	___ftmul@exp,w,c
  7543  00E622  A4D8               	btfss	status,2,c
  7544  00E624  D007               	goto	l962
  7545  00E626  0E00               	movlw	0
  7546  00E628  6E0D               	movwf	?___ftmul,c
  7547  00E62A  0E00               	movlw	0
  7548  00E62C  6E0E               	movwf	?___ftmul+1,c
  7549  00E62E  0E00               	movlw	0
  7550  00E630  6E0F               	movwf	?___ftmul+2,c
  7551  00E632  0012               	return	
  7552  00E634                     l962:
  7553  00E634  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  7554  00E638  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7555  00E63A  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7556  00E63C  3411               	rlcf	___ftmul@f2+1,w,c
  7557  00E63E  3613               	rlcf	??___ftmul& (0+255),f,c
  7558  00E640  E301               	bnc	u3581
  7559  00E642  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7560  00E644                     u3581:
  7561  00E644  5013               	movf	??___ftmul,w,c
  7562  00E646  6E1B               	movwf	___ftmul@sign,c
  7563  00E648  501B               	movf	___ftmul@sign,w,c
  7564  00E64A  A4D8               	btfss	status,2,c
  7565  00E64C  D007               	goto	l964
  7566  00E64E  0E00               	movlw	0
  7567  00E650  6E0D               	movwf	?___ftmul,c
  7568  00E652  0E00               	movlw	0
  7569  00E654  6E0E               	movwf	?___ftmul+1,c
  7570  00E656  0E00               	movlw	0
  7571  00E658  6E0F               	movwf	?___ftmul+2,c
  7572  00E65A  0012               	return	
  7573  00E65C                     l964:
  7574  00E65C  501B               	movf	___ftmul@sign,w,c
  7575  00E65E  0F7B               	addlw	123
  7576  00E660  2616               	addwf	___ftmul@exp,f,c
  7577  00E662  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  7578  00E666  5012               	movf	___ftmul@f2+2,w,c
  7579  00E668  1A1B               	xorwf	___ftmul@sign,f,c
  7580  00E66A  0E80               	movlw	128
  7581  00E66C  161B               	andwf	___ftmul@sign,f,c
  7582  00E66E  8E0E               	bsf	___ftmul@f1+1,7,c
  7583  00E670  8E11               	bsf	___ftmul@f2+1,7,c
  7584  00E672  0EFF               	movlw	255
  7585  00E674  1610               	andwf	___ftmul@f2,f,c
  7586  00E676  0EFF               	movlw	255
  7587  00E678  1611               	andwf	___ftmul@f2+1,f,c
  7588  00E67A  0E00               	movlw	0
  7589  00E67C  1612               	andwf	___ftmul@f2+2,f,c
  7590  00E67E  0E00               	movlw	0
  7591  00E680  6E17               	movwf	___ftmul@f3_as_product,c
  7592  00E682  0E00               	movlw	0
  7593  00E684  6E18               	movwf	___ftmul@f3_as_product+1,c
  7594  00E686  0E00               	movlw	0
  7595  00E688  6E19               	movwf	___ftmul@f3_as_product+2,c
  7596  00E68A  0E07               	movlw	7
  7597  00E68C  6E1A               	movwf	___ftmul@cntr,c
  7598  00E68E  A00D               	btfss	___ftmul@f1,0,c
  7599  00E690  D006               	goto	l966
  7600  00E692  5010               	movf	___ftmul@f2,w,c
  7601  00E694  2617               	addwf	___ftmul@f3_as_product,f,c
  7602  00E696  5011               	movf	___ftmul@f2+1,w,c
  7603  00E698  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7604  00E69A  5012               	movf	___ftmul@f2+2,w,c
  7605  00E69C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7606  00E69E                     l966:
  7607  00E69E  90D8               	bcf	status,0,c
  7608  00E6A0  320F               	rrcf	___ftmul@f1+2,f,c
  7609  00E6A2  320E               	rrcf	___ftmul@f1+1,f,c
  7610  00E6A4  320D               	rrcf	___ftmul@f1,f,c
  7611  00E6A6  90D8               	bcf	status,0,c
  7612  00E6A8  3610               	rlcf	___ftmul@f2,f,c
  7613  00E6AA  3611               	rlcf	___ftmul@f2+1,f,c
  7614  00E6AC  3612               	rlcf	___ftmul@f2+2,f,c
  7615  00E6AE  2E1A               	decfsz	___ftmul@cntr,f,c
  7616  00E6B0  D7EE               	goto	l965
  7617  00E6B2  0E09               	movlw	9
  7618  00E6B4  6E1A               	movwf	___ftmul@cntr,c
  7619  00E6B6  A00D               	btfss	___ftmul@f1,0,c
  7620  00E6B8  D006               	goto	l969
  7621  00E6BA  5010               	movf	___ftmul@f2,w,c
  7622  00E6BC  2617               	addwf	___ftmul@f3_as_product,f,c
  7623  00E6BE  5011               	movf	___ftmul@f2+1,w,c
  7624  00E6C0  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7625  00E6C2  5012               	movf	___ftmul@f2+2,w,c
  7626  00E6C4  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7627  00E6C6                     l969:
  7628  00E6C6  90D8               	bcf	status,0,c
  7629  00E6C8  320F               	rrcf	___ftmul@f1+2,f,c
  7630  00E6CA  320E               	rrcf	___ftmul@f1+1,f,c
  7631  00E6CC  320D               	rrcf	___ftmul@f1,f,c
  7632  00E6CE  90D8               	bcf	status,0,c
  7633  00E6D0  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  7634  00E6D2  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  7635  00E6D4  3217               	rrcf	___ftmul@f3_as_product,f,c
  7636  00E6D6  2E1A               	decfsz	___ftmul@cntr,f,c
  7637  00E6D8  D7EE               	goto	l968
  7638  00E6DA  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  7639  00E6DE  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7640  00E6E2  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7641  00E6E6  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  7642  00E6EA  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  7643  00E6EE  ECA3  F070         	call	___ftpack	;wreg free
  7644  00E6F2  C001  F00D         	movff	?___ftpack,?___ftmul
  7645  00E6F6  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  7646  00E6FA  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  7647  00E6FE  0012               	return	
  7648  00E700                     __end_of___ftmul:
  7649                           	opt stack 0
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           prodh	equ	0xFF4
  7655                           prodl	equ	0xFF3
  7656                           intcon	equ	0xFF2
  7657                           postinc0	equ	0xFEE
  7658                           wreg	equ	0xFE8
  7659                           postinc1	equ	0xFE6
  7660                           postdec1	equ	0xFE5
  7661                           fsr1h	equ	0xFE2
  7662                           fsr1l	equ	0xFE1
  7663                           indf2	equ	0xFDF
  7664                           postinc2	equ	0xFDE
  7665                           postdec2	equ	0xFDD
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8
  7669                           
  7670 ;; *************** function ___ftsub *****************
  7671 ;; Defined at:
  7672 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  f1              3   45[COMRAM] float 
  7675 ;;  f2              3   48[COMRAM] float 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  3   45[COMRAM] float 
  7680 ;; Registers used:
  7681 ;;		wreg, status,2, status,0, cstack
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7687 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7691 ;;Total ram usage:        6 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    2
  7694 ;; This function calls:
  7695 ;;		___ftadd
  7696 ;; This function is called by:
  7697 ;;		_exp
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text37
  7702  00D440                     __ptext37:
  7703                           	opt stack 0
  7704  00D440                     ___ftsub:
  7705                           	opt stack 19
  7706                           
  7707                           ;incstack = 0
  7708  00D440  5031               	movf	___ftsub@f2,w,c
  7709  00D442  1032               	iorwf	___ftsub@f2+1,w,c
  7710  00D444  1033               	iorwf	___ftsub@f2+2,w,c
  7711  00D446  B4D8               	btfsc	status,2,c
  7712  00D448  D006               	goto	l979
  7713  00D44A  0E00               	movlw	0
  7714  00D44C  1A31               	xorwf	___ftsub@f2,f,c
  7715  00D44E  0E00               	movlw	0
  7716  00D450  1A32               	xorwf	___ftsub@f2+1,f,c
  7717  00D452  0E80               	movlw	128
  7718  00D454  1A33               	xorwf	___ftsub@f2+2,f,c
  7719  00D456                     l979:
  7720  00D456  C02E  F022         	movff	___ftsub@f1,___ftadd@f1
  7721  00D45A  C02F  F023         	movff	___ftsub@f1+1,___ftadd@f1+1
  7722  00D45E  C030  F024         	movff	___ftsub@f1+2,___ftadd@f1+2
  7723  00D462  C031  F025         	movff	___ftsub@f2,___ftadd@f2
  7724  00D466  C032  F026         	movff	___ftsub@f2+1,___ftadd@f2+1
  7725  00D46A  C033  F027         	movff	___ftsub@f2+2,___ftadd@f2+2
  7726  00D46E  EC53  F078         	call	___ftadd	;wreg free
  7727  00D472  C022  F02E         	movff	?___ftadd,?___ftsub
  7728  00D476  C023  F02F         	movff	?___ftadd+1,?___ftsub+1
  7729  00D47A  C024  F030         	movff	?___ftadd+2,?___ftsub+2
  7730  00D47E  0012               	return	
  7731  00D480                     __end_of___ftsub:
  7732                           	opt stack 0
  7733                           tblptru	equ	0xFF8
  7734                           tblptrh	equ	0xFF7
  7735                           tblptrl	equ	0xFF6
  7736                           tablat	equ	0xFF5
  7737                           prodh	equ	0xFF4
  7738                           prodl	equ	0xFF3
  7739                           intcon	equ	0xFF2
  7740                           postinc0	equ	0xFEE
  7741                           wreg	equ	0xFE8
  7742                           postinc1	equ	0xFE6
  7743                           postdec1	equ	0xFE5
  7744                           fsr1h	equ	0xFE2
  7745                           fsr1l	equ	0xFE1
  7746                           indf2	equ	0xFDF
  7747                           postinc2	equ	0xFDE
  7748                           postdec2	equ	0xFDD
  7749                           fsr2h	equ	0xFDA
  7750                           fsr2l	equ	0xFD9
  7751                           status	equ	0xFD8
  7752                           
  7753 ;; *************** function ___ftadd *****************
  7754 ;; Defined at:
  7755 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;  f1              3   33[COMRAM] float 
  7758 ;;  f2              3   36[COMRAM] float 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  exp1            1   44[COMRAM] unsigned char 
  7761 ;;  exp2            1   43[COMRAM] unsigned char 
  7762 ;;  sign            1   42[COMRAM] unsigned char 
  7763 ;; Return value:  Size  Location     Type
  7764 ;;                  3   33[COMRAM] float 
  7765 ;; Registers used:
  7766 ;;		wreg, status,2, status,0, cstack
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7772 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7773 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;Total ram usage:       12 bytes
  7777 ;; Hardware stack levels used:    1
  7778 ;; Hardware stack levels required when called:    1
  7779 ;; This function calls:
  7780 ;;		___ftpack
  7781 ;; This function is called by:
  7782 ;;		___ftsub
  7783 ;;		_floor
  7784 ;;		_log
  7785 ;;		_eval_poly
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text38
  7790  00F0A6                     __ptext38:
  7791                           	opt stack 0
  7792  00F0A6                     ___ftadd:
  7793                           	opt stack 19
  7794                           
  7795                           ;incstack = 0
  7796  00F0A6  C024  F028         	movff	___ftadd@f1+2,??___ftadd
  7797  00F0AA  6A29               	clrf	(??___ftadd+1)& (0+255),c
  7798  00F0AC  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  7799  00F0AE  3423               	rlcf	___ftadd@f1+1,w,c
  7800  00F0B0  3628               	rlcf	??___ftadd& (0+255),f,c
  7801  00F0B2  E301               	bnc	u3351
  7802  00F0B4  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  7803  00F0B6                     u3351:
  7804  00F0B6  5028               	movf	??___ftadd,w,c
  7805  00F0B8  6E2D               	movwf	___ftadd@exp1,c
  7806  00F0BA  C027  F028         	movff	___ftadd@f2+2,??___ftadd
  7807  00F0BE  6A29               	clrf	(??___ftadd+1)& (0+255),c
  7808  00F0C0  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  7809  00F0C2  3426               	rlcf	___ftadd@f2+1,w,c
  7810  00F0C4  3628               	rlcf	??___ftadd& (0+255),f,c
  7811  00F0C6  E301               	bnc	u3361
  7812  00F0C8  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  7813  00F0CA                     u3361:
  7814  00F0CA  5028               	movf	??___ftadd,w,c
  7815  00F0CC  6E2C               	movwf	___ftadd@exp2,c
  7816  00F0CE  502D               	movf	___ftadd@exp1,w,c
  7817  00F0D0  B4D8               	btfsc	status,2,c
  7818  00F0D2  D00B               	goto	u3390
  7819  00F0D4  502C               	movf	___ftadd@exp2,w,c
  7820  00F0D6  5C2D               	subwf	___ftadd@exp1,w,c
  7821  00F0D8  B0D8               	btfsc	status,0,c
  7822  00F0DA  D00E               	goto	l914
  7823  00F0DC  502D               	movf	___ftadd@exp1,w,c
  7824  00F0DE  0800               	sublw	0
  7825  00F0E0  242C               	addwf	___ftadd@exp2,w,c
  7826  00F0E2  6E28               	movwf	??___ftadd& (0+255),c
  7827  00F0E4  0E18               	movlw	24
  7828  00F0E6  6428               	cpfsgt	??___ftadd,c
  7829  00F0E8  D007               	goto	l914
  7830  00F0EA                     u3390:
  7831  00F0EA  C025  F022         	movff	___ftadd@f2,?___ftadd
  7832  00F0EE  C026  F023         	movff	___ftadd@f2+1,?___ftadd+1
  7833  00F0F2  C027  F024         	movff	___ftadd@f2+2,?___ftadd+2
  7834  00F0F6  0012               	return	
  7835  00F0F8                     l914:
  7836  00F0F8  502C               	movf	___ftadd@exp2,w,c
  7837  00F0FA  B4D8               	btfsc	status,2,c
  7838  00F0FC  D00B               	goto	u3420
  7839  00F0FE  502D               	movf	___ftadd@exp1,w,c
  7840  00F100  5C2C               	subwf	___ftadd@exp2,w,c
  7841  00F102  B0D8               	btfsc	status,0,c
  7842  00F104  D00E               	goto	l918
  7843  00F106  502C               	movf	___ftadd@exp2,w,c
  7844  00F108  0800               	sublw	0
  7845  00F10A  242D               	addwf	___ftadd@exp1,w,c
  7846  00F10C  6E28               	movwf	??___ftadd& (0+255),c
  7847  00F10E  0E18               	movlw	24
  7848  00F110  6428               	cpfsgt	??___ftadd,c
  7849  00F112  D007               	goto	l918
  7850  00F114                     u3420:
  7851  00F114  C022  F022         	movff	___ftadd@f1,?___ftadd
  7852  00F118  C023  F023         	movff	___ftadd@f1+1,?___ftadd+1
  7853  00F11C  C024  F024         	movff	___ftadd@f1+2,?___ftadd+2
  7854  00F120  0012               	return	
  7855  00F122                     l918:
  7856  00F122  0E06               	movlw	6
  7857  00F124  6E2B               	movwf	___ftadd@sign,c
  7858  00F126  BE24               	btfsc	___ftadd@f1+2,7,c
  7859  00F128  8E2B               	bsf	___ftadd@sign,7,c
  7860  00F12A  BE27               	btfsc	___ftadd@f2+2,7,c
  7861  00F12C  8C2B               	bsf	___ftadd@sign,6,c
  7862  00F12E  8E23               	bsf	___ftadd@f1+1,7,c
  7863  00F130  0EFF               	movlw	255
  7864  00F132  1622               	andwf	___ftadd@f1,f,c
  7865  00F134  0EFF               	movlw	255
  7866  00F136  1623               	andwf	___ftadd@f1+1,f,c
  7867  00F138  0E00               	movlw	0
  7868  00F13A  1624               	andwf	___ftadd@f1+2,f,c
  7869  00F13C  8E26               	bsf	___ftadd@f2+1,7,c
  7870  00F13E  0EFF               	movlw	255
  7871  00F140  1625               	andwf	___ftadd@f2,f,c
  7872  00F142  0EFF               	movlw	255
  7873  00F144  1626               	andwf	___ftadd@f2+1,f,c
  7874  00F146  0E00               	movlw	0
  7875  00F148  1627               	andwf	___ftadd@f2+2,f,c
  7876  00F14A  502C               	movf	___ftadd@exp2,w,c
  7877  00F14C  5C2D               	subwf	___ftadd@exp1,w,c
  7878  00F14E  B0D8               	btfsc	status,0,c
  7879  00F150  D01B               	goto	l923
  7880  00F152                     u3450:
  7881  00F152  90D8               	bcf	status,0,c
  7882  00F154  3625               	rlcf	___ftadd@f2,f,c
  7883  00F156  3626               	rlcf	___ftadd@f2+1,f,c
  7884  00F158  3627               	rlcf	___ftadd@f2+2,f,c
  7885  00F15A  062C               	decf	___ftadd@exp2,f,c
  7886  00F15C  502D               	movf	___ftadd@exp1,w,c
  7887  00F15E  182C               	xorwf	___ftadd@exp2,w,c
  7888  00F160  B4D8               	btfsc	status,2,c
  7889  00F162  D00D               	goto	l928
  7890  00F164  062B               	decf	___ftadd@sign,f,c
  7891  00F166  C02B  F028         	movff	___ftadd@sign,??___ftadd
  7892  00F16A  0E07               	movlw	7
  7893  00F16C  1628               	andwf	??___ftadd,f,c
  7894  00F16E  B4D8               	btfsc	status,2,c
  7895  00F170  D006               	goto	l928
  7896  00F172  D7EF               	goto	u3450
  7897  00F174  90D8               	bcf	status,0,c
  7898  00F176  3224               	rrcf	___ftadd@f1+2,f,c
  7899  00F178  3223               	rrcf	___ftadd@f1+1,f,c
  7900  00F17A  3222               	rrcf	___ftadd@f1,f,c
  7901  00F17C  2A2D               	incf	___ftadd@exp1,f,c
  7902  00F17E                     l928:
  7903  00F17E  502C               	movf	___ftadd@exp2,w,c
  7904  00F180  182D               	xorwf	___ftadd@exp1,w,c
  7905  00F182  B4D8               	btfsc	status,2,c
  7906  00F184  D01F               	goto	u3520
  7907  00F186  D7F6               	goto	l929
  7908  00F188                     l923:
  7909  00F188  502D               	movf	___ftadd@exp1,w,c
  7910  00F18A  5C2C               	subwf	___ftadd@exp2,w,c
  7911  00F18C  B0D8               	btfsc	status,0,c
  7912  00F18E  D01A               	goto	u3520
  7913  00F190                     u3490:
  7914  00F190  90D8               	bcf	status,0,c
  7915  00F192  3622               	rlcf	___ftadd@f1,f,c
  7916  00F194  3623               	rlcf	___ftadd@f1+1,f,c
  7917  00F196  3624               	rlcf	___ftadd@f1+2,f,c
  7918  00F198  062D               	decf	___ftadd@exp1,f,c
  7919  00F19A  502D               	movf	___ftadd@exp1,w,c
  7920  00F19C  182C               	xorwf	___ftadd@exp2,w,c
  7921  00F19E  B4D8               	btfsc	status,2,c
  7922  00F1A0  D00D               	goto	l937
  7923  00F1A2  062B               	decf	___ftadd@sign,f,c
  7924  00F1A4  C02B  F028         	movff	___ftadd@sign,??___ftadd
  7925  00F1A8  0E07               	movlw	7
  7926  00F1AA  1628               	andwf	??___ftadd,f,c
  7927  00F1AC  B4D8               	btfsc	status,2,c
  7928  00F1AE  D006               	goto	l937
  7929  00F1B0  D7EF               	goto	u3490
  7930  00F1B2  90D8               	bcf	status,0,c
  7931  00F1B4  3227               	rrcf	___ftadd@f2+2,f,c
  7932  00F1B6  3226               	rrcf	___ftadd@f2+1,f,c
  7933  00F1B8  3225               	rrcf	___ftadd@f2,f,c
  7934  00F1BA  2A2C               	incf	___ftadd@exp2,f,c
  7935  00F1BC                     l937:
  7936  00F1BC  502C               	movf	___ftadd@exp2,w,c
  7937  00F1BE  182D               	xorwf	___ftadd@exp1,w,c
  7938  00F1C0  A4D8               	btfss	status,2,c
  7939  00F1C2  D7F7               	goto	l938
  7940  00F1C4                     u3520:
  7941  00F1C4  AE2B               	btfss	___ftadd@sign,7,c
  7942  00F1C6  D00C               	goto	l940
  7943  00F1C8  0EFF               	movlw	255
  7944  00F1CA  1A22               	xorwf	___ftadd@f1,f,c
  7945  00F1CC  0EFF               	movlw	255
  7946  00F1CE  1A23               	xorwf	___ftadd@f1+1,f,c
  7947  00F1D0  0EFF               	movlw	255
  7948  00F1D2  1A24               	xorwf	___ftadd@f1+2,f,c
  7949  00F1D4  0E01               	movlw	1
  7950  00F1D6  2622               	addwf	___ftadd@f1,f,c
  7951  00F1D8  0E00               	movlw	0
  7952  00F1DA  2223               	addwfc	___ftadd@f1+1,f,c
  7953  00F1DC  0E00               	movlw	0
  7954  00F1DE  2224               	addwfc	___ftadd@f1+2,f,c
  7955  00F1E0                     l940:
  7956  00F1E0  AC2B               	btfss	___ftadd@sign,6,c
  7957  00F1E2  D00C               	goto	l941
  7958  00F1E4  0EFF               	movlw	255
  7959  00F1E6  1A25               	xorwf	___ftadd@f2,f,c
  7960  00F1E8  0EFF               	movlw	255
  7961  00F1EA  1A26               	xorwf	___ftadd@f2+1,f,c
  7962  00F1EC  0EFF               	movlw	255
  7963  00F1EE  1A27               	xorwf	___ftadd@f2+2,f,c
  7964  00F1F0  0E01               	movlw	1
  7965  00F1F2  2625               	addwf	___ftadd@f2,f,c
  7966  00F1F4  0E00               	movlw	0
  7967  00F1F6  2226               	addwfc	___ftadd@f2+1,f,c
  7968  00F1F8  0E00               	movlw	0
  7969  00F1FA  2227               	addwfc	___ftadd@f2+2,f,c
  7970  00F1FC                     l941:
  7971  00F1FC  0E00               	movlw	0
  7972  00F1FE  6E2B               	movwf	___ftadd@sign,c
  7973  00F200  5022               	movf	___ftadd@f1,w,c
  7974  00F202  2625               	addwf	___ftadd@f2,f,c
  7975  00F204  5023               	movf	___ftadd@f1+1,w,c
  7976  00F206  2226               	addwfc	___ftadd@f2+1,f,c
  7977  00F208  5024               	movf	___ftadd@f1+2,w,c
  7978  00F20A  2227               	addwfc	___ftadd@f2+2,f,c
  7979  00F20C  AE27               	btfss	___ftadd@f2+2,7,c
  7980  00F20E  D00E               	goto	l942
  7981  00F210  0EFF               	movlw	255
  7982  00F212  1A25               	xorwf	___ftadd@f2,f,c
  7983  00F214  0EFF               	movlw	255
  7984  00F216  1A26               	xorwf	___ftadd@f2+1,f,c
  7985  00F218  0EFF               	movlw	255
  7986  00F21A  1A27               	xorwf	___ftadd@f2+2,f,c
  7987  00F21C  0E01               	movlw	1
  7988  00F21E  2625               	addwf	___ftadd@f2,f,c
  7989  00F220  0E00               	movlw	0
  7990  00F222  2226               	addwfc	___ftadd@f2+1,f,c
  7991  00F224  0E00               	movlw	0
  7992  00F226  2227               	addwfc	___ftadd@f2+2,f,c
  7993  00F228  0E01               	movlw	1
  7994  00F22A  6E2B               	movwf	___ftadd@sign,c
  7995  00F22C                     l942:
  7996  00F22C  C025  F001         	movff	___ftadd@f2,___ftpack@arg
  7997  00F230  C026  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  7998  00F234  C027  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  7999  00F238  C02D  F004         	movff	___ftadd@exp1,___ftpack@exp
  8000  00F23C  C02B  F005         	movff	___ftadd@sign,___ftpack@sign
  8001  00F240  ECA3  F070         	call	___ftpack	;wreg free
  8002  00F244  C001  F022         	movff	?___ftpack,?___ftadd
  8003  00F248  C002  F023         	movff	?___ftpack+1,?___ftadd+1
  8004  00F24C  C003  F024         	movff	?___ftpack+2,?___ftadd+2
  8005  00F250  0012               	return	
  8006  00F252                     __end_of___ftadd:
  8007                           	opt stack 0
  8008                           tblptru	equ	0xFF8
  8009                           tblptrh	equ	0xFF7
  8010                           tblptrl	equ	0xFF6
  8011                           tablat	equ	0xFF5
  8012                           prodh	equ	0xFF4
  8013                           prodl	equ	0xFF3
  8014                           intcon	equ	0xFF2
  8015                           postinc0	equ	0xFEE
  8016                           wreg	equ	0xFE8
  8017                           postinc1	equ	0xFE6
  8018                           postdec1	equ	0xFE5
  8019                           fsr1h	equ	0xFE2
  8020                           fsr1l	equ	0xFE1
  8021                           indf2	equ	0xFDF
  8022                           postinc2	equ	0xFDE
  8023                           postdec2	equ	0xFDD
  8024                           fsr2h	equ	0xFDA
  8025                           fsr2l	equ	0xFD9
  8026                           status	equ	0xFD8
  8027                           
  8028 ;; *************** function ___ftneg *****************
  8029 ;; Defined at:
  8030 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  f1              3    0[COMRAM] float 
  8033 ;; Auto vars:     Size  Location     Type
  8034 ;;		None
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  3    0[COMRAM] float 
  8037 ;; Registers used:
  8038 ;;		wreg, status,2, status,0
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8044 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8048 ;;Total ram usage:        3 bytes
  8049 ;; Hardware stack levels used:    1
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_pow
  8054 ;;		_exp
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text39
  8059  00D368                     __ptext39:
  8060                           	opt stack 0
  8061  00D368                     ___ftneg:
  8062                           	opt stack 21
  8063                           
  8064                           ;incstack = 0
  8065  00D368  5001               	movf	___ftneg@f1,w,c
  8066  00D36A  1002               	iorwf	___ftneg@f1+1,w,c
  8067  00D36C  1003               	iorwf	___ftneg@f1+2,w,c
  8068  00D36E  B4D8               	btfsc	status,2,c
  8069  00D370  D006               	goto	l973
  8070  00D372  0E00               	movlw	0
  8071  00D374  1A01               	xorwf	___ftneg@f1,f,c
  8072  00D376  0E00               	movlw	0
  8073  00D378  1A02               	xorwf	___ftneg@f1+1,f,c
  8074  00D37A  0E80               	movlw	128
  8075  00D37C  1A03               	xorwf	___ftneg@f1+2,f,c
  8076  00D37E                     l973:
  8077  00D37E  C001  F001         	movff	___ftneg@f1,?___ftneg
  8078  00D382  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  8079  00D386  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  8080  00D38A  0012               	return		;funcret
  8081  00D38C                     __end_of___ftneg:
  8082                           	opt stack 0
  8083                           tblptru	equ	0xFF8
  8084                           tblptrh	equ	0xFF7
  8085                           tblptrl	equ	0xFF6
  8086                           tablat	equ	0xFF5
  8087                           prodh	equ	0xFF4
  8088                           prodl	equ	0xFF3
  8089                           intcon	equ	0xFF2
  8090                           postinc0	equ	0xFEE
  8091                           wreg	equ	0xFE8
  8092                           postinc1	equ	0xFE6
  8093                           postdec1	equ	0xFE5
  8094                           fsr1h	equ	0xFE2
  8095                           fsr1l	equ	0xFE1
  8096                           indf2	equ	0xFDF
  8097                           postinc2	equ	0xFDE
  8098                           postdec2	equ	0xFDD
  8099                           fsr2h	equ	0xFDA
  8100                           fsr2l	equ	0xFD9
  8101                           status	equ	0xFD8
  8102                           
  8103 ;; *************** function ___ftdiv *****************
  8104 ;; Defined at:
  8105 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;  f1              3    8[COMRAM] float 
  8108 ;;  f2              3   11[COMRAM] float 
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;  f3              3   18[COMRAM] float 
  8111 ;;  sign            1   22[COMRAM] unsigned char 
  8112 ;;  exp             1   21[COMRAM] unsigned char 
  8113 ;;  cntr            1   17[COMRAM] unsigned char 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  3    8[COMRAM] float 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8123 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8124 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8125 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8126 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;Total ram usage:       15 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    1
  8130 ;; This function calls:
  8131 ;;		___ftpack
  8132 ;; This function is called by:
  8133 ;;		_exp
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text40
  8138  00E526                     __ptext40:
  8139                           	opt stack 0
  8140  00E526                     ___ftdiv:
  8141                           	opt stack 20
  8142                           
  8143                           ;incstack = 0
  8144  00E526  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  8145  00E52A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  8146  00E52C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  8147  00E52E  340A               	rlcf	___ftdiv@f1+1,w,c
  8148  00E530  360F               	rlcf	??___ftdiv& (0+255),f,c
  8149  00E532  E301               	bnc	u3771
  8150  00E534  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  8151  00E536                     u3771:
  8152  00E536  500F               	movf	??___ftdiv,w,c
  8153  00E538  6E16               	movwf	___ftdiv@exp,c
  8154  00E53A  5016               	movf	___ftdiv@exp,w,c
  8155  00E53C  A4D8               	btfss	status,2,c
  8156  00E53E  D007               	goto	l947
  8157  00E540  0E00               	movlw	0
  8158  00E542  6E09               	movwf	?___ftdiv,c
  8159  00E544  0E00               	movlw	0
  8160  00E546  6E0A               	movwf	?___ftdiv+1,c
  8161  00E548  0E00               	movlw	0
  8162  00E54A  6E0B               	movwf	?___ftdiv+2,c
  8163  00E54C  0012               	return	
  8164  00E54E                     l947:
  8165  00E54E  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  8166  00E552  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  8167  00E554  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  8168  00E556  340D               	rlcf	___ftdiv@f2+1,w,c
  8169  00E558  360F               	rlcf	??___ftdiv& (0+255),f,c
  8170  00E55A  E301               	bnc	u3791
  8171  00E55C  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  8172  00E55E                     u3791:
  8173  00E55E  500F               	movf	??___ftdiv,w,c
  8174  00E560  6E17               	movwf	___ftdiv@sign,c
  8175  00E562  5017               	movf	___ftdiv@sign,w,c
  8176  00E564  A4D8               	btfss	status,2,c
  8177  00E566  D007               	goto	l949
  8178  00E568  0E00               	movlw	0
  8179  00E56A  6E09               	movwf	?___ftdiv,c
  8180  00E56C  0E00               	movlw	0
  8181  00E56E  6E0A               	movwf	?___ftdiv+1,c
  8182  00E570  0E00               	movlw	0
  8183  00E572  6E0B               	movwf	?___ftdiv+2,c
  8184  00E574  0012               	return	
  8185  00E576                     l949:
  8186  00E576  0E00               	movlw	0
  8187  00E578  6E13               	movwf	___ftdiv@f3,c
  8188  00E57A  0E00               	movlw	0
  8189  00E57C  6E14               	movwf	___ftdiv@f3+1,c
  8190  00E57E  0E00               	movlw	0
  8191  00E580  6E15               	movwf	___ftdiv@f3+2,c
  8192  00E582  5017               	movf	___ftdiv@sign,w,c
  8193  00E584  0F89               	addlw	137
  8194  00E586  5E16               	subwf	___ftdiv@exp,f,c
  8195  00E588  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  8196  00E58C  500E               	movf	___ftdiv@f2+2,w,c
  8197  00E58E  1A17               	xorwf	___ftdiv@sign,f,c
  8198  00E590  0E80               	movlw	128
  8199  00E592  1617               	andwf	___ftdiv@sign,f,c
  8200  00E594  8E0A               	bsf	___ftdiv@f1+1,7,c
  8201  00E596  0EFF               	movlw	255
  8202  00E598  1609               	andwf	___ftdiv@f1,f,c
  8203  00E59A  0EFF               	movlw	255
  8204  00E59C  160A               	andwf	___ftdiv@f1+1,f,c
  8205  00E59E  0E00               	movlw	0
  8206  00E5A0  160B               	andwf	___ftdiv@f1+2,f,c
  8207  00E5A2  8E0D               	bsf	___ftdiv@f2+1,7,c
  8208  00E5A4  0EFF               	movlw	255
  8209  00E5A6  160C               	andwf	___ftdiv@f2,f,c
  8210  00E5A8  0EFF               	movlw	255
  8211  00E5AA  160D               	andwf	___ftdiv@f2+1,f,c
  8212  00E5AC  0E00               	movlw	0
  8213  00E5AE  160E               	andwf	___ftdiv@f2+2,f,c
  8214  00E5B0  0E18               	movlw	24
  8215  00E5B2  6E12               	movwf	___ftdiv@cntr,c
  8216  00E5B4  90D8               	bcf	status,0,c
  8217  00E5B6  3613               	rlcf	___ftdiv@f3,f,c
  8218  00E5B8  3614               	rlcf	___ftdiv@f3+1,f,c
  8219  00E5BA  3615               	rlcf	___ftdiv@f3+2,f,c
  8220  00E5BC  500C               	movf	___ftdiv@f2,w,c
  8221  00E5BE  5C09               	subwf	___ftdiv@f1,w,c
  8222  00E5C0  500D               	movf	___ftdiv@f2+1,w,c
  8223  00E5C2  580A               	subwfb	___ftdiv@f1+1,w,c
  8224  00E5C4  500E               	movf	___ftdiv@f2+2,w,c
  8225  00E5C6  580B               	subwfb	___ftdiv@f1+2,w,c
  8226  00E5C8  A0D8               	btfss	status,0,c
  8227  00E5CA  D007               	goto	l951
  8228  00E5CC  500C               	movf	___ftdiv@f2,w,c
  8229  00E5CE  5E09               	subwf	___ftdiv@f1,f,c
  8230  00E5D0  500D               	movf	___ftdiv@f2+1,w,c
  8231  00E5D2  5A0A               	subwfb	___ftdiv@f1+1,f,c
  8232  00E5D4  500E               	movf	___ftdiv@f2+2,w,c
  8233  00E5D6  5A0B               	subwfb	___ftdiv@f1+2,f,c
  8234  00E5D8  8013               	bsf	___ftdiv@f3,0,c
  8235  00E5DA                     l951:
  8236  00E5DA  90D8               	bcf	status,0,c
  8237  00E5DC  3609               	rlcf	___ftdiv@f1,f,c
  8238  00E5DE  360A               	rlcf	___ftdiv@f1+1,f,c
  8239  00E5E0  360B               	rlcf	___ftdiv@f1+2,f,c
  8240  00E5E2  2E12               	decfsz	___ftdiv@cntr,f,c
  8241  00E5E4  D7E7               	goto	l950
  8242  00E5E6  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  8243  00E5EA  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8244  00E5EE  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8245  00E5F2  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  8246  00E5F6  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  8247  00E5FA  ECA3  F070         	call	___ftpack	;wreg free
  8248  00E5FE  C001  F009         	movff	?___ftpack,?___ftdiv
  8249  00E602  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  8250  00E606  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  8251  00E60A  0012               	return	
  8252  00E60C                     __end_of___ftdiv:
  8253                           	opt stack 0
  8254                           tblptru	equ	0xFF8
  8255                           tblptrh	equ	0xFF7
  8256                           tblptrl	equ	0xFF6
  8257                           tablat	equ	0xFF5
  8258                           prodh	equ	0xFF4
  8259                           prodl	equ	0xFF3
  8260                           intcon	equ	0xFF2
  8261                           postinc0	equ	0xFEE
  8262                           wreg	equ	0xFE8
  8263                           postinc1	equ	0xFE6
  8264                           postdec1	equ	0xFE5
  8265                           fsr1h	equ	0xFE2
  8266                           fsr1l	equ	0xFE1
  8267                           indf2	equ	0xFDF
  8268                           postinc2	equ	0xFDE
  8269                           postdec2	equ	0xFDD
  8270                           fsr2h	equ	0xFDA
  8271                           fsr2l	equ	0xFD9
  8272                           status	equ	0xFD8
  8273                           
  8274 ;; *************** function ___awtoft *****************
  8275 ;; Defined at:
  8276 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  c               2    8[COMRAM] int 
  8279 ;; Auto vars:     Size  Location     Type
  8280 ;;  sign            1   11[COMRAM] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  3    8[COMRAM] float 
  8283 ;; Registers used:
  8284 ;;		wreg, status,2, status,0, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8290 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;Total ram usage:        4 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:    1
  8297 ;; This function calls:
  8298 ;;		___ftpack
  8299 ;; This function is called by:
  8300 ;;		_covertir_valores_de_array_a_escala_decimal
  8301 ;;		_exp
  8302 ;;		_log
  8303 ;; This function uses a non-reentrant model
  8304 ;;
  8305                           
  8306                           	psect	text41
  8307  00D408                     __ptext41:
  8308                           	opt stack 0
  8309  00D408                     ___awtoft:
  8310                           	opt stack 20
  8311                           
  8312                           ;incstack = 0
  8313  00D408  0E00               	movlw	0
  8314  00D40A  6E0C               	movwf	___awtoft@sign,c
  8315  00D40C  AE0A               	btfss	___awtoft@c+1,7,c
  8316  00D40E  D006               	goto	l843
  8317  00D410  6C09               	negf	___awtoft@c,c
  8318  00D412  1E0A               	comf	___awtoft@c+1,f,c
  8319  00D414  B0D8               	btfsc	status,0,c
  8320  00D416  2A0A               	incf	___awtoft@c+1,f,c
  8321  00D418  0E01               	movlw	1
  8322  00D41A  6E0C               	movwf	___awtoft@sign,c
  8323  00D41C                     l843:
  8324  00D41C  C009  F001         	movff	___awtoft@c,___ftpack@arg
  8325  00D420  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  8326  00D424  6A03               	clrf	___ftpack@arg+2,c
  8327  00D426  0E8E               	movlw	142
  8328  00D428  6E04               	movwf	___ftpack@exp,c
  8329  00D42A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  8330  00D42E  ECA3  F070         	call	___ftpack	;wreg free
  8331  00D432  C001  F009         	movff	?___ftpack,?___awtoft
  8332  00D436  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  8333  00D43A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  8334  00D43E  0012               	return	
  8335  00D440                     __end_of___awtoft:
  8336                           	opt stack 0
  8337                           tblptru	equ	0xFF8
  8338                           tblptrh	equ	0xFF7
  8339                           tblptrl	equ	0xFF6
  8340                           tablat	equ	0xFF5
  8341                           prodh	equ	0xFF4
  8342                           prodl	equ	0xFF3
  8343                           intcon	equ	0xFF2
  8344                           postinc0	equ	0xFEE
  8345                           wreg	equ	0xFE8
  8346                           postinc1	equ	0xFE6
  8347                           postdec1	equ	0xFE5
  8348                           fsr1h	equ	0xFE2
  8349                           fsr1l	equ	0xFE1
  8350                           indf2	equ	0xFDF
  8351                           postinc2	equ	0xFDE
  8352                           postdec2	equ	0xFDD
  8353                           fsr2h	equ	0xFDA
  8354                           fsr2l	equ	0xFD9
  8355                           status	equ	0xFD8
  8356                           
  8357 ;; *************** function ___lltoft *****************
  8358 ;; Defined at:
  8359 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;  c               4    8[COMRAM] unsigned long 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  exp             1   16[COMRAM] unsigned char 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  3    8[COMRAM] float 
  8366 ;; Registers used:
  8367 ;;		wreg, status,2, status,0, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8376 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8377 ;;Total ram usage:        9 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    1
  8380 ;; This function calls:
  8381 ;;		___ftpack
  8382 ;; This function is called by:
  8383 ;;		_pow
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text42
  8388  00D6F2                     __ptext42:
  8389                           	opt stack 0
  8390  00D6F2                     ___lltoft:
  8391                           	opt stack 21
  8392                           
  8393                           ;incstack = 0
  8394  00D6F2  0E8E               	movlw	142
  8395  00D6F4  6E11               	movwf	___lltoft@exp,c
  8396  00D6F6  D006               	goto	l1045
  8397  00D6F8  90D8               	bcf	status,0,c
  8398  00D6FA  320C               	rrcf	___lltoft@c+3,f,c
  8399  00D6FC  320B               	rrcf	___lltoft@c+2,f,c
  8400  00D6FE  320A               	rrcf	___lltoft@c+1,f,c
  8401  00D700  3209               	rrcf	___lltoft@c,f,c
  8402  00D702  2A11               	incf	___lltoft@exp,f,c
  8403  00D704                     l1045:
  8404  00D704  0E00               	movlw	0
  8405  00D706  1409               	andwf	___lltoft@c,w,c
  8406  00D708  6E0D               	movwf	??___lltoft& (0+255),c
  8407  00D70A  0E00               	movlw	0
  8408  00D70C  140A               	andwf	___lltoft@c+1,w,c
  8409  00D70E  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  8410  00D710  0E00               	movlw	0
  8411  00D712  140B               	andwf	___lltoft@c+2,w,c
  8412  00D714  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  8413  00D716  0EFF               	movlw	255
  8414  00D718  140C               	andwf	___lltoft@c+3,w,c
  8415  00D71A  6E10               	movwf	(??___lltoft+3)& (0+255),c
  8416  00D71C  500D               	movf	??___lltoft,w,c
  8417  00D71E  100E               	iorwf	??___lltoft+1,w,c
  8418  00D720  100F               	iorwf	??___lltoft+2,w,c
  8419  00D722  1010               	iorwf	??___lltoft+3,w,c
  8420  00D724  A4D8               	btfss	status,2,c
  8421  00D726  D7E8               	goto	l1046
  8422  00D728  C009  F001         	movff	___lltoft@c,___ftpack@arg
  8423  00D72C  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  8424  00D730  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  8425  00D734  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  8426  00D738  0E00               	movlw	0
  8427  00D73A  6E05               	movwf	___ftpack@sign,c
  8428  00D73C  ECA3  F070         	call	___ftpack	;wreg free
  8429  00D740  C001  F009         	movff	?___ftpack,?___lltoft
  8430  00D744  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  8431  00D748  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  8432  00D74C  0012               	return	
  8433  00D74E                     __end_of___lltoft:
  8434                           	opt stack 0
  8435                           tblptru	equ	0xFF8
  8436                           tblptrh	equ	0xFF7
  8437                           tblptrl	equ	0xFF6
  8438                           tablat	equ	0xFF5
  8439                           prodh	equ	0xFF4
  8440                           prodl	equ	0xFF3
  8441                           intcon	equ	0xFF2
  8442                           postinc0	equ	0xFEE
  8443                           wreg	equ	0xFE8
  8444                           postinc1	equ	0xFE6
  8445                           postdec1	equ	0xFE5
  8446                           fsr1h	equ	0xFE2
  8447                           fsr1l	equ	0xFE1
  8448                           indf2	equ	0xFDF
  8449                           postinc2	equ	0xFDE
  8450                           postdec2	equ	0xFDD
  8451                           fsr2h	equ	0xFDA
  8452                           fsr2l	equ	0xFD9
  8453                           status	equ	0xFD8
  8454                           
  8455 ;; *************** function ___ftpack *****************
  8456 ;; Defined at:
  8457 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  arg             3    0[COMRAM] unsigned um
  8460 ;;  exp             1    3[COMRAM] unsigned char 
  8461 ;;  sign            1    4[COMRAM] unsigned char 
  8462 ;; Auto vars:     Size  Location     Type
  8463 ;;		None
  8464 ;; Return value:  Size  Location     Type
  8465 ;;                  3    0[COMRAM] float 
  8466 ;; Registers used:
  8467 ;;		wreg, status,2, status,0
  8468 ;; Tracked objects:
  8469 ;;		On entry : 0/0
  8470 ;;		On exit  : 0/0
  8471 ;;		Unchanged: 0/0
  8472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8473 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8475 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8476 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8477 ;;Total ram usage:        8 bytes
  8478 ;; Hardware stack levels used:    1
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		___altoft
  8483 ;;		___awtoft
  8484 ;;		___ftadd
  8485 ;;		___ftdiv
  8486 ;;		___ftmul
  8487 ;;		___lltoft
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text43
  8492  00E146                     __ptext43:
  8493                           	opt stack 0
  8494  00E146                     ___ftpack:
  8495                           	opt stack 19
  8496                           
  8497                           ;incstack = 0
  8498  00E146  5004               	movf	___ftpack@exp,w,c
  8499  00E148  B4D8               	btfsc	status,2,c
  8500  00E14A  D005               	goto	u3250
  8501  00E14C  5001               	movf	___ftpack@arg,w,c
  8502  00E14E  1002               	iorwf	___ftpack@arg+1,w,c
  8503  00E150  1003               	iorwf	___ftpack@arg+2,w,c
  8504  00E152  A4D8               	btfss	status,2,c
  8505  00E154  D00C               	goto	l883
  8506  00E156                     u3250:
  8507  00E156  0E00               	movlw	0
  8508  00E158  6E01               	movwf	?___ftpack,c
  8509  00E15A  0E00               	movlw	0
  8510  00E15C  6E02               	movwf	?___ftpack+1,c
  8511  00E15E  0E00               	movlw	0
  8512  00E160  6E03               	movwf	?___ftpack+2,c
  8513  00E162  0012               	return	
  8514  00E164  2A04               	incf	___ftpack@exp,f,c
  8515  00E166  90D8               	bcf	status,0,c
  8516  00E168  3203               	rrcf	___ftpack@arg+2,f,c
  8517  00E16A  3202               	rrcf	___ftpack@arg+1,f,c
  8518  00E16C  3201               	rrcf	___ftpack@arg,f,c
  8519  00E16E                     l883:
  8520  00E16E  0E00               	movlw	0
  8521  00E170  1401               	andwf	___ftpack@arg,w,c
  8522  00E172  6E06               	movwf	??___ftpack& (0+255),c
  8523  00E174  0E00               	movlw	0
  8524  00E176  1402               	andwf	___ftpack@arg+1,w,c
  8525  00E178  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8526  00E17A  0EFE               	movlw	254
  8527  00E17C  1403               	andwf	___ftpack@arg+2,w,c
  8528  00E17E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8529  00E180  5006               	movf	??___ftpack,w,c
  8530  00E182  1007               	iorwf	??___ftpack+1,w,c
  8531  00E184  1008               	iorwf	??___ftpack+2,w,c
  8532  00E186  B4D8               	btfsc	status,2,c
  8533  00E188  D00C               	goto	l886
  8534  00E18A  D7EC               	goto	l884
  8535  00E18C  2A04               	incf	___ftpack@exp,f,c
  8536  00E18E  0E01               	movlw	1
  8537  00E190  2601               	addwf	___ftpack@arg,f,c
  8538  00E192  0E00               	movlw	0
  8539  00E194  2202               	addwfc	___ftpack@arg+1,f,c
  8540  00E196  0E00               	movlw	0
  8541  00E198  2203               	addwfc	___ftpack@arg+2,f,c
  8542  00E19A  90D8               	bcf	status,0,c
  8543  00E19C  3203               	rrcf	___ftpack@arg+2,f,c
  8544  00E19E  3202               	rrcf	___ftpack@arg+1,f,c
  8545  00E1A0  3201               	rrcf	___ftpack@arg,f,c
  8546  00E1A2                     l886:
  8547  00E1A2  0E00               	movlw	0
  8548  00E1A4  1401               	andwf	___ftpack@arg,w,c
  8549  00E1A6  6E06               	movwf	??___ftpack& (0+255),c
  8550  00E1A8  0E00               	movlw	0
  8551  00E1AA  1402               	andwf	___ftpack@arg+1,w,c
  8552  00E1AC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8553  00E1AE  0EFF               	movlw	255
  8554  00E1B0  1403               	andwf	___ftpack@arg+2,w,c
  8555  00E1B2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8556  00E1B4  5006               	movf	??___ftpack,w,c
  8557  00E1B6  1007               	iorwf	??___ftpack+1,w,c
  8558  00E1B8  1008               	iorwf	??___ftpack+2,w,c
  8559  00E1BA  B4D8               	btfsc	status,2,c
  8560  00E1BC  D006               	goto	l889
  8561  00E1BE  D7E6               	goto	l887
  8562  00E1C0  0604               	decf	___ftpack@exp,f,c
  8563  00E1C2  90D8               	bcf	status,0,c
  8564  00E1C4  3601               	rlcf	___ftpack@arg,f,c
  8565  00E1C6  3602               	rlcf	___ftpack@arg+1,f,c
  8566  00E1C8  3603               	rlcf	___ftpack@arg+2,f,c
  8567  00E1CA                     l889:
  8568  00E1CA  BE02               	btfsc	___ftpack@arg+1,7,c
  8569  00E1CC  D003               	goto	u3290
  8570  00E1CE  0E02               	movlw	2
  8571  00E1D0  6004               	cpfslt	___ftpack@exp,c
  8572  00E1D2  D7F6               	goto	l890
  8573  00E1D4                     u3290:
  8574  00E1D4  A004               	btfss	___ftpack@exp,0,c
  8575  00E1D6  9E02               	bcf	___ftpack@arg+1,7,c
  8576  00E1D8  90D8               	bcf	status,0,c
  8577  00E1DA  3204               	rrcf	___ftpack@exp,f,c
  8578  00E1DC  5004               	movf	___ftpack@exp,w,c
  8579  00E1DE  1203               	iorwf	___ftpack@arg+2,f,c
  8580  00E1E0  5005               	movf	___ftpack@sign,w,c
  8581  00E1E2  A4D8               	btfss	status,2,c
  8582  00E1E4  8E03               	bsf	___ftpack@arg+2,7,c
  8583  00E1E6  C001  F001         	movff	___ftpack@arg,?___ftpack
  8584  00E1EA  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  8585  00E1EE  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  8586  00E1F2  0012               	return	
  8587  00E1F4                     __end_of___ftpack:
  8588                           	opt stack 0
  8589                           tblptru	equ	0xFF8
  8590                           tblptrh	equ	0xFF7
  8591                           tblptrl	equ	0xFF6
  8592                           tablat	equ	0xFF5
  8593                           prodh	equ	0xFF4
  8594                           prodl	equ	0xFF3
  8595                           intcon	equ	0xFF2
  8596                           postinc0	equ	0xFEE
  8597                           wreg	equ	0xFE8
  8598                           postinc1	equ	0xFE6
  8599                           postdec1	equ	0xFE5
  8600                           fsr1h	equ	0xFE2
  8601                           fsr1l	equ	0xFE1
  8602                           indf2	equ	0xFDF
  8603                           postinc2	equ	0xFDE
  8604                           postdec2	equ	0xFDD
  8605                           fsr2h	equ	0xFDA
  8606                           fsr2l	equ	0xFD9
  8607                           status	equ	0xFD8
  8608                           
  8609 ;; *************** function _activar_alarma *****************
  8610 ;; Defined at:
  8611 ;;		line 293 in file "main.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;		None
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  intentos_de_    2   61[COMRAM] int 
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      void 
  8618 ;; Registers used:
  8619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8628 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8629 ;;Total ram usage:        3 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    7
  8632 ;; This function calls:
  8633 ;;		_ingreso_numero
  8634 ;;		_lcd_gotoxy
  8635 ;;		_lcd_putrs
  8636 ;;		_titila_alarma_activada
  8637 ;;		_verificar_contrasenia
  8638 ;; This function is called by:
  8639 ;;		_seleccionar_opcion
  8640 ;;		_ir_a_pantalla_ingresar_contrasenia
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text44
  8645  00F252                     __ptext44:
  8646                           	opt stack 0
  8647  00F252                     _activar_alarma:
  8648                           	opt stack 18
  8649                           
  8650                           ;main.c: 294: lcd_gotoxy(1, 1);
  8651                           
  8652                           ;incstack = 0
  8653  00F252  0E01               	movlw	1
  8654  00F254  6E05               	movwf	lcd_gotoxy@y,c
  8655  00F256  0E01               	movlw	1
  8656  00F258  ECA3  F069         	call	_lcd_gotoxy
  8657                           
  8658                           ;main.c: 295: lcd_putrs("Alarm activated ");
  8659  00F25C  0E62               	movlw	low STR_16
  8660  00F25E  6E09               	movwf	lcd_putrs@ptr,c
  8661  00F260  0EFF               	movlw	high STR_16
  8662  00F262  6E0A               	movwf	lcd_putrs@ptr+1,c
  8663  00F264  ECFA  F06A         	call	_lcd_putrs	;wreg free
  8664                           
  8665                           ;main.c: 296: lcd_gotoxy(1, 2);
  8666  00F268  0E02               	movlw	2
  8667  00F26A  6E05               	movwf	lcd_gotoxy@y,c
  8668  00F26C  0E01               	movlw	1
  8669  00F26E  ECA3  F069         	call	_lcd_gotoxy
  8670                           
  8671                           ;main.c: 297: lcd_putrs("                ");
  8672  00F272  0E51               	movlw	low STR_17
  8673  00F274  6E09               	movwf	lcd_putrs@ptr,c
  8674  00F276  0EFF               	movlw	high STR_17
  8675  00F278  6E0A               	movwf	lcd_putrs@ptr+1,c
  8676  00F27A  ECFA  F06A         	call	_lcd_putrs	;wreg free
  8677                           
  8678                           ;main.c: 298: numeros_ingresados = 0;
  8679  00F27E  0E00               	movlw	0
  8680  00F280  0100               	movlb	0	; () banked
  8681  00F282  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  8682  00F284  0E00               	movlw	0
  8683  00F286  6F98               	movwf	_numeros_ingresados& (0+255),b
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;main.c: 299: alarma_activada = 1;
  8687  00F288  0E00               	movlw	0
  8688  00F28A  0100               	movlb	0	; () banked
  8689  00F28C  6F95               	movwf	(_alarma_activada+1)& (0+255),b
  8690  00F28E  0E01               	movlw	1
  8691  00F290  6F94               	movwf	_alarma_activada& (0+255),b
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;main.c: 301: int intentos_de_contrasenia = 0;
  8695  00F292  0E00               	movlw	0
  8696  00F294  6E3F               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  8697  00F296  0E00               	movlw	0
  8698  00F298  6E3E               	movwf	activar_alarma@intentos_de_contrasenia,c
  8699                           
  8700                           ;main.c: 302: while (alarma_activada) {
  8701  00F29A  D0BB               	goto	l299
  8702  00F29C                     
  8703                           ; BSR set to: 0
  8704                           ;main.c: 303: titila_alarma_activada();
  8705                           
  8706                           ; BSR set to: 0
  8707  00F29C  EC87  F06C         	call	_titila_alarma_activada	;wreg free
  8708                           
  8709                           ;main.c: 305: if (numeros_ingresados < 4) {
  8710  00F2A0  0100               	movlb	0	; () banked
  8711  00F2A2  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  8712  00F2A4  D008               	goto	u5180
  8713  00F2A6  0100               	movlb	0	; () banked
  8714  00F2A8  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  8715  00F2AA  E12D               	bnz	l4604
  8716  00F2AC  0E04               	movlw	4
  8717  00F2AE  0100               	movlb	0	; () banked
  8718  00F2B0  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  8719  00F2B2  B0D8               	btfsc	status,0,c
  8720  00F2B4  D028               	goto	l292
  8721  00F2B6                     u5180:
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;main.c: 306: if (alarma_sonando == 1) {
  8725  00F2B6  0100               	movlb	0	; () banked
  8726  00F2B8  0592               	decf	_alarma_sonando& (0+255),w,b
  8727  00F2BA  0100               	movlb	0	; () banked
  8728  00F2BC  1193               	iorwf	(_alarma_sonando+1)& (0+255),w,b
  8729  00F2BE  A4D8               	btfss	status,2,c
  8730  00F2C0  D01F               	goto	l293
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;main.c: 310: LATBbits.LATB1 = !LATBbits.LATB1;;
  8734  00F2C2  B28A               	btfsc	3978,1,c	;volatile
  8735  00F2C4  D003               	goto	u5200
  8736  00F2C6  6A3D               	clrf	??_activar_alarma& (0+255),c
  8737  00F2C8  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8738  00F2CA  D001               	goto	u5218
  8739  00F2CC                     u5200:
  8740  00F2CC  6A3D               	clrf	??_activar_alarma& (0+255),c
  8741  00F2CE                     u5218:
  8742  00F2CE  463D               	rlncf	??_activar_alarma,f,c
  8743  00F2D0  508A               	movf	3978,w,c	;volatile
  8744  00F2D2  183D               	xorwf	??_activar_alarma,w,c
  8745  00F2D4  0BFD               	andlw	-3
  8746  00F2D6  183D               	xorwf	??_activar_alarma,w,c
  8747  00F2D8  6E8A               	movwf	3978,c	;volatile
  8748                           
  8749                           ;main.c: 311: LATBbits.LATB0 = !LATBbits.LATB0;
  8750  00F2DA  B08A               	btfsc	3978,0,c	;volatile
  8751  00F2DC  D003               	goto	u5220
  8752  00F2DE  6A3D               	clrf	??_activar_alarma& (0+255),c
  8753  00F2E0  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8754  00F2E2  D001               	goto	u5238
  8755  00F2E4                     u5220:
  8756  00F2E4  6A3D               	clrf	??_activar_alarma& (0+255),c
  8757  00F2E6                     u5238:
  8758  00F2E6  508A               	movf	3978,w,c	;volatile
  8759  00F2E8  183D               	xorwf	??_activar_alarma,w,c
  8760  00F2EA  0BFE               	andlw	-2
  8761  00F2EC  183D               	xorwf	??_activar_alarma,w,c
  8762  00F2EE  6E8A               	movwf	3978,c	;volatile
  8763                           
  8764                           ;main.c: 312: _delay((unsigned long)((98)*(8000000/4000.0)));
  8765  00F2F0  0EFF               	movlw	255
  8766  00F2F2  6E3D               	movwf	??_activar_alarma& (0+255),c
  8767  00F2F4  0E8A               	movlw	138
  8768  00F2F6                     u6427:
  8769  00F2F6  2EE8               	decfsz	wreg,f,c
  8770  00F2F8  D7FE               	bra	u6427
  8771  00F2FA  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8772  00F2FC  D7FC               	bra	u6427
  8773  00F2FE  D000               	nop2	
  8774  00F300                     l293:
  8775                           
  8776                           ;main.c: 313: }
  8777                           ;main.c: 314: ingreso_numero();
  8778  00F300  EC46  F07E         	call	_ingreso_numero	;wreg free
  8779                           
  8780                           ;main.c: 315: } else {
  8781  00F304  D05D               	goto	l298
  8782  00F306                     l292:
  8783  00F306                     l4604:
  8784                           
  8785                           ;main.c: 316: if (verificar_contrasenia()) {
  8786  00F306  EC3D  F06D         	call	_verificar_contrasenia	;wreg free
  8787  00F30A  5001               	movf	?_verificar_contrasenia,w,c
  8788  00F30C  1002               	iorwf	?_verificar_contrasenia+1,w,c
  8789  00F30E  B4D8               	btfsc	status,2,c
  8790  00F310  D019               	goto	l295
  8791                           
  8792                           ;main.c: 317: alarma_activada = 0;
  8793  00F312  0E00               	movlw	0
  8794  00F314  0100               	movlb	0	; () banked
  8795  00F316  6F95               	movwf	(_alarma_activada+1)& (0+255),b
  8796  00F318  0E00               	movlw	0
  8797  00F31A  6F94               	movwf	_alarma_activada& (0+255),b
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;main.c: 318: LATBbits.LATB1 = 0;;
  8801  00F31C  928A               	bcf	3978,1,c	;volatile
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;main.c: 319: LATBbits.LATB0 = 0;;
  8805  00F31E  908A               	bcf	3978,0,c	;volatile
  8806                           
  8807                           ;main.c: 320: alarma_sonando = 0;
  8808  00F320  0E00               	movlw	0
  8809  00F322  0100               	movlb	0	; () banked
  8810  00F324  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  8811  00F326  0E00               	movlw	0
  8812  00F328  6F92               	movwf	_alarma_sonando& (0+255),b
  8813                           
  8814                           ;main.c: 321: intentos_de_contrasenia = 0;
  8815  00F32A  0E00               	movlw	0
  8816  00F32C  6E3F               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  8817  00F32E  0E00               	movlw	0
  8818  00F330  6E3E               	movwf	activar_alarma@intentos_de_contrasenia,c
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;main.c: 322: _delay((unsigned long)((98)*(8000000/4000.0)));
  8822  00F332  0EFF               	movlw	255
  8823  00F334  6E3D               	movwf	??_activar_alarma& (0+255),c
  8824  00F336  0E8A               	movlw	138
  8825  00F338                     u6437:
  8826  00F338  2EE8               	decfsz	wreg,f,c
  8827  00F33A  D7FE               	bra	u6437
  8828  00F33C  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8829  00F33E  D7FC               	bra	u6437
  8830  00F340  D000               	nop2	
  8831                           
  8832                           ;main.c: 323: break;
  8833  00F342  0012               	return	
  8834  00F344                     l295:
  8835                           
  8836                           ;main.c: 325: numeros_ingresados = 0;
  8837  00F344  0E00               	movlw	0
  8838  00F346  0100               	movlb	0	; () banked
  8839  00F348  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  8840  00F34A  0E00               	movlw	0
  8841  00F34C  6F98               	movwf	_numeros_ingresados& (0+255),b
  8842                           
  8843                           ; BSR set to: 0
  8844                           ;main.c: 326: intentos_de_contrasenia++;
  8845  00F34E  4A3E               	infsnz	activar_alarma@intentos_de_contrasenia,f,c
  8846  00F350  2A3F               	incf	activar_alarma@intentos_de_contrasenia+1,f,c
  8847                           
  8848                           ; BSR set to: 0
  8849                           ;main.c: 327: lcd_gotoxy(1, 2);
  8850  00F352  0E02               	movlw	2
  8851  00F354  6E05               	movwf	lcd_gotoxy@y,c
  8852  00F356  0E01               	movlw	1
  8853  00F358  ECA3  F069         	call	_lcd_gotoxy
  8854                           
  8855                           ;main.c: 328: lcd_putrs("                ");
  8856  00F35C  0E51               	movlw	low STR_17
  8857  00F35E  6E09               	movwf	lcd_putrs@ptr,c
  8858  00F360  0EFF               	movlw	high STR_17
  8859  00F362  6E0A               	movwf	lcd_putrs@ptr+1,c
  8860  00F364  ECFA  F06A         	call	_lcd_putrs	;wreg free
  8861                           
  8862                           ;main.c: 329: if (intentos_de_contrasenia >= 3) {
  8863  00F368  BE3F               	btfsc	activar_alarma@intentos_de_contrasenia+1,7,c
  8864  00F36A  D02A               	goto	l298
  8865  00F36C  503F               	movf	activar_alarma@intentos_de_contrasenia+1,w,c
  8866  00F36E  E104               	bnz	u5250
  8867  00F370  0E03               	movlw	3
  8868  00F372  5C3E               	subwf	activar_alarma@intentos_de_contrasenia,w,c
  8869  00F374  A0D8               	btfss	status,0,c
  8870  00F376  D024               	goto	l298
  8871  00F378                     u5250:
  8872                           
  8873                           ;main.c: 331: alarma_sonando = 1;
  8874  00F378  0E00               	movlw	0
  8875  00F37A  0100               	movlb	0	; () banked
  8876  00F37C  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  8877  00F37E  0E01               	movlw	1
  8878  00F380  6F92               	movwf	_alarma_sonando& (0+255),b
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;main.c: 335: LATBbits.LATB1 = !LATBbits.LATB1;;
  8882  00F382  B28A               	btfsc	3978,1,c	;volatile
  8883  00F384  D003               	goto	u5260
  8884  00F386  6A3D               	clrf	??_activar_alarma& (0+255),c
  8885  00F388  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8886  00F38A  D001               	goto	u5278
  8887  00F38C                     u5260:
  8888  00F38C  6A3D               	clrf	??_activar_alarma& (0+255),c
  8889  00F38E                     u5278:
  8890  00F38E  463D               	rlncf	??_activar_alarma,f,c
  8891  00F390  508A               	movf	3978,w,c	;volatile
  8892  00F392  183D               	xorwf	??_activar_alarma,w,c
  8893  00F394  0BFD               	andlw	-3
  8894  00F396  183D               	xorwf	??_activar_alarma,w,c
  8895  00F398  6E8A               	movwf	3978,c	;volatile
  8896                           
  8897                           ;main.c: 336: LATBbits.LATB0 = !LATBbits.LATB0;
  8898  00F39A  B08A               	btfsc	3978,0,c	;volatile
  8899  00F39C  D003               	goto	u5280
  8900  00F39E  6A3D               	clrf	??_activar_alarma& (0+255),c
  8901  00F3A0  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8902  00F3A2  D001               	goto	u5298
  8903  00F3A4                     u5280:
  8904  00F3A4  6A3D               	clrf	??_activar_alarma& (0+255),c
  8905  00F3A6                     u5298:
  8906  00F3A6  508A               	movf	3978,w,c	;volatile
  8907  00F3A8  183D               	xorwf	??_activar_alarma,w,c
  8908  00F3AA  0BFE               	andlw	-2
  8909  00F3AC  183D               	xorwf	??_activar_alarma,w,c
  8910  00F3AE  6E8A               	movwf	3978,c	;volatile
  8911                           
  8912                           ;main.c: 337: _delay((unsigned long)((98)*(8000000/4000.0)));
  8913  00F3B0  0EFF               	movlw	255
  8914  00F3B2  6E3D               	movwf	??_activar_alarma& (0+255),c
  8915  00F3B4  0E8A               	movlw	138
  8916  00F3B6                     u6447:
  8917  00F3B6  2EE8               	decfsz	wreg,f,c
  8918  00F3B8  D7FE               	bra	u6447
  8919  00F3BA  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8920  00F3BC  D7FC               	bra	u6447
  8921  00F3BE  D000               	nop2	
  8922  00F3C0                     l298:
  8923                           
  8924                           ;main.c: 338: }
  8925                           ;main.c: 339: }
  8926                           ;main.c: 340: }
  8927                           ;main.c: 342: if (PORTCbits.RC5 == 0 || PORTCbits.RC6 == 0 || PORTCbits.RC7 == 0) {
  8928  00F3C0  BA82               	btfsc	3970,5,c	;volatile
  8929  00F3C2  AC82               	btfss	3970,6,c	;volatile
  8930  00F3C4  D002               	goto	u5320
  8931  00F3C6  BE82               	btfsc	3970,7,c	;volatile
  8932  00F3C8  D024               	goto	l299
  8933  00F3CA                     u5320:
  8934                           
  8935                           ;main.c: 348: alarma_sonando = 1;
  8936  00F3CA  0E00               	movlw	0
  8937  00F3CC  0100               	movlb	0	; () banked
  8938  00F3CE  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  8939  00F3D0  0E01               	movlw	1
  8940  00F3D2  6F92               	movwf	_alarma_sonando& (0+255),b
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;main.c: 349: LATBbits.LATB1 = !LATBbits.LATB1;;
  8944  00F3D4  B28A               	btfsc	3978,1,c	;volatile
  8945  00F3D6  D003               	goto	u5330
  8946  00F3D8  6A3D               	clrf	??_activar_alarma& (0+255),c
  8947  00F3DA  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8948  00F3DC  D001               	goto	u5348
  8949  00F3DE                     u5330:
  8950  00F3DE  6A3D               	clrf	??_activar_alarma& (0+255),c
  8951  00F3E0                     u5348:
  8952  00F3E0  463D               	rlncf	??_activar_alarma,f,c
  8953  00F3E2  508A               	movf	3978,w,c	;volatile
  8954  00F3E4  183D               	xorwf	??_activar_alarma,w,c
  8955  00F3E6  0BFD               	andlw	-3
  8956  00F3E8  183D               	xorwf	??_activar_alarma,w,c
  8957  00F3EA  6E8A               	movwf	3978,c	;volatile
  8958                           
  8959                           ;main.c: 350: LATBbits.LATB0 = !LATBbits.LATB0;;
  8960  00F3EC  B08A               	btfsc	3978,0,c	;volatile
  8961  00F3EE  D003               	goto	u5350
  8962  00F3F0  6A3D               	clrf	??_activar_alarma& (0+255),c
  8963  00F3F2  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8964  00F3F4  D001               	goto	u5368
  8965  00F3F6                     u5350:
  8966  00F3F6  6A3D               	clrf	??_activar_alarma& (0+255),c
  8967  00F3F8                     u5368:
  8968  00F3F8  508A               	movf	3978,w,c	;volatile
  8969  00F3FA  183D               	xorwf	??_activar_alarma,w,c
  8970  00F3FC  0BFE               	andlw	-2
  8971  00F3FE  183D               	xorwf	??_activar_alarma,w,c
  8972  00F400  6E8A               	movwf	3978,c	;volatile
  8973                           
  8974                           ;main.c: 351: _delay((unsigned long)((98)*(8000000/4000.0)));
  8975  00F402  0EFF               	movlw	255
  8976  00F404  6E3D               	movwf	??_activar_alarma& (0+255),c
  8977  00F406  0E8A               	movlw	138
  8978  00F408                     u6457:
  8979  00F408  2EE8               	decfsz	wreg,f,c
  8980  00F40A  D7FE               	bra	u6457
  8981  00F40C  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8982  00F40E  D7FC               	bra	u6457
  8983  00F410  D000               	nop2	
  8984  00F412                     l299:
  8985  00F412  0100               	movlb	0	; () banked
  8986  00F414  5194               	movf	_alarma_activada& (0+255),w,b
  8987  00F416  0100               	movlb	0	; () banked
  8988  00F418  1195               	iorwf	(_alarma_activada+1)& (0+255),w,b
  8989  00F41A  B4D8               	btfsc	status,2,c
  8990  00F41C  0012               	return	
  8991  00F41E  D73E               	goto	l291
  8992  00F420                     __end_of_activar_alarma:
  8993                           	opt stack 0
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           prodh	equ	0xFF4
  8999                           prodl	equ	0xFF3
  9000                           intcon	equ	0xFF2
  9001                           postinc0	equ	0xFEE
  9002                           wreg	equ	0xFE8
  9003                           postinc1	equ	0xFE6
  9004                           postdec1	equ	0xFE5
  9005                           fsr1h	equ	0xFE2
  9006                           fsr1l	equ	0xFE1
  9007                           indf2	equ	0xFDF
  9008                           postinc2	equ	0xFDE
  9009                           postdec2	equ	0xFDD
  9010                           fsr2h	equ	0xFDA
  9011                           fsr2l	equ	0xFD9
  9012                           status	equ	0xFD8
  9013                           
  9014 ;; *************** function _verificar_contrasenia *****************
  9015 ;; Defined at:
  9016 ;;		line 536 in file "main.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  i               2    8[COMRAM] int 
  9021 ;;  equals          2    6[COMRAM] int 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  2    0[COMRAM] int 
  9024 ;; Registers used:
  9025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9032 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9033 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9034 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9035 ;;Total ram usage:       10 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; This function calls:
  9038 ;;		Nothing
  9039 ;; This function is called by:
  9040 ;;		_activar_alarma
  9041 ;;		_ir_a_pantalla_ingresar_contrasenia
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           	psect	text45
  9046  00DA7A                     __ptext45:
  9047                           	opt stack 0
  9048  00DA7A                     _verificar_contrasenia:
  9049                           	opt stack 27
  9050                           
  9051                           ;main.c: 537: int equals = 0;
  9052                           
  9053                           ;incstack = 0
  9054  00DA7A  0E00               	movlw	0
  9055  00DA7C  6E08               	movwf	verificar_contrasenia@equals+1,c
  9056  00DA7E  0E00               	movlw	0
  9057  00DA80  6E07               	movwf	verificar_contrasenia@equals,c
  9058                           
  9059                           ;main.c: 538: for (int i = 0; i < 4; i++) {
  9060  00DA82  0E00               	movlw	0
  9061  00DA84  6E0A               	movwf	verificar_contrasenia@i+1,c
  9062  00DA86  0E00               	movlw	0
  9063  00DA88  6E09               	movwf	verificar_contrasenia@i,c
  9064  00DA8A  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  9065  00DA8C  D003               	goto	l385
  9066  00DA8E  500A               	movf	verificar_contrasenia@i+1,w,c
  9067  00DA90  E12E               	bnz	l386
  9068  00DA92  D029               	goto	L2
  9069  00DA94                     l385:
  9070                           
  9071                           ;main.c: 539: if (array_contrasenia[i] == array_contrasenia_ingresada[i]) {
  9072  00DA94  90D8               	bcf	status,0,c
  9073  00DA96  3409               	rlcf	verificar_contrasenia@i,w,c
  9074  00DA98  6ED9               	movwf	fsr2l,c
  9075  00DA9A  340A               	rlcf	verificar_contrasenia@i+1,w,c
  9076  00DA9C  6EDA               	movwf	fsr2h,c
  9077  00DA9E  0E60               	movlw	low _array_contrasenia_ingresada
  9078  00DAA0  26D9               	addwf	fsr2l,f,c
  9079  00DAA2  0E00               	movlw	high _array_contrasenia_ingresada
  9080  00DAA4  22DA               	addwfc	fsr2h,f,c
  9081  00DAA6  90D8               	bcf	status,0,c
  9082  00DAA8  3409               	rlcf	verificar_contrasenia@i,w,c
  9083  00DAAA  6EE1               	movwf	fsr1l,c
  9084  00DAAC  340A               	rlcf	verificar_contrasenia@i+1,w,c
  9085  00DAAE  6EE2               	movwf	fsr1h,c
  9086  00DAB0  0EDB               	movlw	low _array_contrasenia
  9087  00DAB2  26E1               	addwf	fsr1l,f,c
  9088  00DAB4  0E00               	movlw	high _array_contrasenia
  9089  00DAB6  22E2               	addwfc	fsr1h,f,c
  9090  00DAB8  50DE               	movf	postinc2,w,c
  9091  00DABA  18E6               	xorwf	postinc1,w,c
  9092  00DABC  E109               	bnz	l4490
  9093  00DABE  50DE               	movf	postinc2,w,c
  9094  00DAC0  18E6               	xorwf	postinc1,w,c
  9095  00DAC2  A4D8               	btfss	status,2,c
  9096  00DAC4  D005               	goto	l387
  9097                           
  9098                           ;main.c: 540: equals = 1;
  9099  00DAC6  0E00               	movlw	0
  9100  00DAC8  6E08               	movwf	verificar_contrasenia@equals+1,c
  9101  00DACA  0E01               	movlw	1
  9102  00DACC  6E07               	movwf	verificar_contrasenia@equals,c
  9103                           
  9104                           ;main.c: 541: } else {
  9105  00DACE  D005               	goto	l388
  9106  00DAD0                     l387:
  9107  00DAD0                     l4490:
  9108                           
  9109                           ;main.c: 542: equals = 0;
  9110  00DAD0  0E00               	movlw	0
  9111  00DAD2  6E08               	movwf	verificar_contrasenia@equals+1,c
  9112  00DAD4  0E00               	movlw	0
  9113  00DAD6  6E07               	movwf	verificar_contrasenia@equals,c
  9114                           
  9115                           ;main.c: 543: break;
  9116  00DAD8  D00A               	goto	u5130
  9117  00DADA                     l388:
  9118  00DADA  4A09               	infsnz	verificar_contrasenia@i,f,c
  9119  00DADC  2A0A               	incf	verificar_contrasenia@i+1,f,c
  9120  00DADE  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  9121  00DAE0  D7D9               	goto	l385
  9122  00DAE2  500A               	movf	verificar_contrasenia@i+1,w,c
  9123  00DAE4  E104               	bnz	u5130
  9124  00DAE6                     L2:
  9125  00DAE6  0E04               	movlw	4
  9126  00DAE8  5C09               	subwf	verificar_contrasenia@i,w,c
  9127  00DAEA  A0D8               	btfss	status,0,c
  9128  00DAEC  D7D3               	goto	l385
  9129  00DAEE                     u5130:
  9130  00DAEE                     l386:
  9131                           
  9132                           ;main.c: 544: }
  9133                           ;main.c: 545: }
  9134                           ;main.c: 546: return equals;
  9135  00DAEE  C007  F001         	movff	verificar_contrasenia@equals,?_verificar_contrasenia
  9136  00DAF2  C008  F002         	movff	verificar_contrasenia@equals+1,?_verificar_contrasenia+1
  9137  00DAF6  0012               	return		;funcret
  9138  00DAF8                     __end_of_verificar_contrasenia:
  9139                           	opt stack 0
  9140                           tblptru	equ	0xFF8
  9141                           tblptrh	equ	0xFF7
  9142                           tblptrl	equ	0xFF6
  9143                           tablat	equ	0xFF5
  9144                           prodh	equ	0xFF4
  9145                           prodl	equ	0xFF3
  9146                           intcon	equ	0xFF2
  9147                           postinc0	equ	0xFEE
  9148                           wreg	equ	0xFE8
  9149                           postinc1	equ	0xFE6
  9150                           postdec1	equ	0xFE5
  9151                           fsr1h	equ	0xFE2
  9152                           fsr1l	equ	0xFE1
  9153                           indf2	equ	0xFDF
  9154                           postinc2	equ	0xFDE
  9155                           postdec2	equ	0xFDD
  9156                           fsr2h	equ	0xFDA
  9157                           fsr2l	equ	0xFD9
  9158                           status	equ	0xFD8
  9159                           
  9160 ;; *************** function _titila_alarma_activada *****************
  9161 ;; Defined at:
  9162 ;;		line 277 in file "main.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;		None
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;		None
  9167 ;; Return value:  Size  Location     Type
  9168 ;;                  1    wreg      void 
  9169 ;; Registers used:
  9170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9171 ;; Tracked objects:
  9172 ;;		On entry : 0/0
  9173 ;;		On exit  : 0/0
  9174 ;;		Unchanged: 0/0
  9175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9180 ;;Total ram usage:        1 bytes
  9181 ;; Hardware stack levels used:    1
  9182 ;; Hardware stack levels required when called:    5
  9183 ;; This function calls:
  9184 ;;		_lcd_gotoxy
  9185 ;;		_lcd_putrs
  9186 ;; This function is called by:
  9187 ;;		_activar_alarma
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text46
  9192  00D90E                     __ptext46:
  9193                           	opt stack 0
  9194  00D90E                     _titila_alarma_activada:
  9195                           	opt stack 19
  9196                           
  9197                           ;main.c: 278: if (txt_alarma_activada == 0) {
  9198                           
  9199                           ;incstack = 0
  9200  00D90E  0100               	movlb	0	; () banked
  9201  00D910  518C               	movf	_txt_alarma_activada& (0+255),w,b
  9202  00D912  0100               	movlb	0	; () banked
  9203  00D914  118D               	iorwf	(_txt_alarma_activada+1)& (0+255),w,b
  9204  00D916  A4D8               	btfss	status,2,c
  9205  00D918  D017               	goto	l285
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;main.c: 279: txt_alarma_activada = 1;
  9209  00D91A  0E00               	movlw	0
  9210  00D91C  0100               	movlb	0	; () banked
  9211  00D91E  6F8D               	movwf	(_txt_alarma_activada+1)& (0+255),b
  9212  00D920  0E01               	movlw	1
  9213  00D922  6F8C               	movwf	_txt_alarma_activada& (0+255),b
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;main.c: 280: lcd_gotoxy(1, 1);
  9217  00D924  0E01               	movlw	1
  9218  00D926  6E05               	movwf	lcd_gotoxy@y,c
  9219  00D928  0E01               	movlw	1
  9220  00D92A  ECA3  F069         	call	_lcd_gotoxy
  9221                           
  9222                           ;main.c: 281: lcd_putrs("Alarm activated ");
  9223  00D92E  0E62               	movlw	low STR_16
  9224  00D930  6E09               	movwf	lcd_putrs@ptr,c
  9225  00D932  0EFF               	movlw	high STR_16
  9226  00D934  6E0A               	movwf	lcd_putrs@ptr+1,c
  9227  00D936  ECFA  F06A         	call	_lcd_putrs	;wreg free
  9228                           
  9229                           ;main.c: 282: _delay((unsigned long)((80)*(8000000/4000.0)));
  9230  00D93A  0ED0               	movlw	208
  9231  00D93C  6E0B               	movwf	??_titila_alarma_activada& (0+255),c
  9232  00D93E  0ECA               	movlw	202
  9233  00D940                     u6467:
  9234  00D940  2EE8               	decfsz	wreg,f,c
  9235  00D942  D7FE               	bra	u6467
  9236  00D944  2E0B               	decfsz	??_titila_alarma_activada& (0+255),f,c
  9237  00D946  D7FC               	bra	u6467
  9238  00D948                     l285:
  9239                           
  9240                           ;main.c: 283: }
  9241                           ;main.c: 285: if (txt_alarma_activada == 1) {
  9242  00D948  0100               	movlb	0	; () banked
  9243  00D94A  058C               	decf	_txt_alarma_activada& (0+255),w,b
  9244  00D94C  0100               	movlb	0	; () banked
  9245  00D94E  118D               	iorwf	(_txt_alarma_activada+1)& (0+255),w,b
  9246  00D950  A4D8               	btfss	status,2,c
  9247  00D952  0012               	return	
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;main.c: 286: txt_alarma_activada = 0;
  9251  00D954  0E00               	movlw	0
  9252  00D956  0100               	movlb	0	; () banked
  9253  00D958  6F8D               	movwf	(_txt_alarma_activada+1)& (0+255),b
  9254  00D95A  0E00               	movlw	0
  9255  00D95C  6F8C               	movwf	_txt_alarma_activada& (0+255),b
  9256                           
  9257                           ; BSR set to: 0
  9258                           ;main.c: 287: lcd_gotoxy(1, 1);
  9259  00D95E  0E01               	movlw	1
  9260  00D960  6E05               	movwf	lcd_gotoxy@y,c
  9261  00D962  0E01               	movlw	1
  9262  00D964  ECA3  F069         	call	_lcd_gotoxy
  9263                           
  9264                           ;main.c: 288: lcd_putrs("                ");
  9265  00D968  0E51               	movlw	low STR_17
  9266  00D96A  6E09               	movwf	lcd_putrs@ptr,c
  9267  00D96C  0EFF               	movlw	high STR_17
  9268  00D96E  6E0A               	movwf	lcd_putrs@ptr+1,c
  9269  00D970  ECFA  F06A         	call	_lcd_putrs	;wreg free
  9270                           
  9271                           ;main.c: 289: _delay((unsigned long)((60)*(8000000/4000.0)));
  9272  00D974  0E9C               	movlw	156
  9273  00D976  6E0B               	movwf	??_titila_alarma_activada& (0+255),c
  9274  00D978  0ED7               	movlw	215
  9275  00D97A                     u6477:
  9276  00D97A  2EE8               	decfsz	wreg,f,c
  9277  00D97C  D7FE               	bra	u6477
  9278  00D97E  2E0B               	decfsz	??_titila_alarma_activada& (0+255),f,c
  9279  00D980  D7FC               	bra	u6477
  9280  00D982  F000               	nop	
  9281  00D984  0012               	return	
  9282  00D986                     __end_of_titila_alarma_activada:
  9283                           	opt stack 0
  9284                           tblptru	equ	0xFF8
  9285                           tblptrh	equ	0xFF7
  9286                           tblptrl	equ	0xFF6
  9287                           tablat	equ	0xFF5
  9288                           prodh	equ	0xFF4
  9289                           prodl	equ	0xFF3
  9290                           intcon	equ	0xFF2
  9291                           postinc0	equ	0xFEE
  9292                           wreg	equ	0xFE8
  9293                           postinc1	equ	0xFE6
  9294                           postdec1	equ	0xFE5
  9295                           fsr1h	equ	0xFE2
  9296                           fsr1l	equ	0xFE1
  9297                           indf2	equ	0xFDF
  9298                           postinc2	equ	0xFDE
  9299                           postdec2	equ	0xFDD
  9300                           fsr2h	equ	0xFDA
  9301                           fsr2l	equ	0xFD9
  9302                           status	equ	0xFD8
  9303                           
  9304 ;; *************** function _ingreso_numero *****************
  9305 ;; Defined at:
  9306 ;;		line 133 in file "main.c"
  9307 ;; Parameters:    Size  Location     Type
  9308 ;;		None
  9309 ;; Auto vars:     Size  Location     Type
  9310 ;;		None
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9324 ;;Total ram usage:        2 bytes
  9325 ;; Hardware stack levels used:    1
  9326 ;; Hardware stack levels required when called:    6
  9327 ;; This function calls:
  9328 ;;		_guarda_numero_ingresado
  9329 ;; This function is called by:
  9330 ;;		_activar_alarma
  9331 ;;		_ir_a_pantalla_ingresar_contrasenia
  9332 ;;		_ir_a_pantalla_editar_contrasenia
  9333 ;;		_editar_fecha_reloj_digital
  9334 ;;		_editar_hora_reloj_digital
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text47
  9339  00FC8C                     __ptext47:
  9340                           	opt stack 0
  9341  00FC8C                     _ingreso_numero:
  9342                           	opt stack 18
  9343                           
  9344                           ;main.c: 134: LATAbits.LATA0 = 1;
  9345                           
  9346                           ;incstack = 0
  9347  00FC8C  8089               	bsf	3977,0,c	;volatile
  9348                           
  9349                           ;main.c: 135: LATAbits.LATA1 = 0;
  9350  00FC8E  9289               	bcf	3977,1,c	;volatile
  9351                           
  9352                           ;main.c: 136: LATAbits.LATA2 = 0;
  9353  00FC90  9489               	bcf	3977,2,c	;volatile
  9354                           
  9355                           ;main.c: 137: LATAbits.LATA3 = 0;
  9356  00FC92  9689               	bcf	3977,3,c	;volatile
  9357                           
  9358                           ;main.c: 138: {
  9359                           ;main.c: 139: if (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  9360  00FC94  BA80               	btfsc	3968,5,c	;volatile
  9361  00FC96  A089               	btfss	3977,0,c	;volatile
  9362  00FC98  D01A               	goto	u4720
  9363                           
  9364                           ;main.c: 140: key = 1;
  9365  00FC9A  0E01               	movlw	1
  9366  00FC9C  0100               	movlb	0	; () banked
  9367  00FC9E  6FA8               	movwf	_key& (0+255),b
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;main.c: 141: guarda_numero_ingresado(key);
  9371  00FCA0  0100               	movlb	0	; () banked
  9372  00FCA2  51A8               	movf	_key& (0+255),w,b
  9373  00FCA4  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9374  00FCA6  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9375  00FCA8  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9376  00FCAC  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9377  00FCB0  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9378                           
  9379                           ;main.c: 142: while (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  9380  00FCB4  D008               	goto	l196
  9381  00FCB6                     
  9382                           ;main.c: 143: _delay((unsigned long)((40)*(8000000/4000.0)));
  9383  00FCB6  0E68               	movlw	104
  9384  00FCB8  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9385  00FCBA  0EE4               	movlw	228
  9386  00FCBC                     u6487:
  9387  00FCBC  2EE8               	decfsz	wreg,f,c
  9388  00FCBE  D7FE               	bra	u6487
  9389  00FCC0  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9390  00FCC2  D7FC               	bra	u6487
  9391  00FCC4  D000               	nop2	
  9392  00FCC6                     l196:
  9393  00FCC6  AA80               	btfss	3968,5,c	;volatile
  9394  00FCC8  D002               	goto	u4720
  9395  00FCCA  B089               	btfsc	3977,0,c	;volatile
  9396  00FCCC  D7F4               	goto	l197
  9397  00FCCE                     u4720:
  9398                           
  9399                           ;main.c: 144: }
  9400                           ;main.c: 145: }
  9401                           ;main.c: 146: if (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  9402  00FCCE  BE80               	btfsc	3968,7,c	;volatile
  9403  00FCD0  A089               	btfss	3977,0,c	;volatile
  9404  00FCD2  D01A               	goto	u4760
  9405                           
  9406                           ;main.c: 147: key = 2;
  9407  00FCD4  0E02               	movlw	2
  9408  00FCD6  0100               	movlb	0	; () banked
  9409  00FCD8  6FA8               	movwf	_key& (0+255),b
  9410                           
  9411                           ; BSR set to: 0
  9412                           ;main.c: 148: guarda_numero_ingresado(key);
  9413  00FCDA  0100               	movlb	0	; () banked
  9414  00FCDC  51A8               	movf	_key& (0+255),w,b
  9415  00FCDE  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9416  00FCE0  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9417  00FCE2  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9418  00FCE6  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9419  00FCEA  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9420                           
  9421                           ;main.c: 149: while (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  9422  00FCEE  D008               	goto	l202
  9423  00FCF0                     
  9424                           ;main.c: 150: _delay((unsigned long)((40)*(8000000/4000.0)));
  9425  00FCF0  0E68               	movlw	104
  9426  00FCF2  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9427  00FCF4  0EE4               	movlw	228
  9428  00FCF6                     u6497:
  9429  00FCF6  2EE8               	decfsz	wreg,f,c
  9430  00FCF8  D7FE               	bra	u6497
  9431  00FCFA  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9432  00FCFC  D7FC               	bra	u6497
  9433  00FCFE  D000               	nop2	
  9434  00FD00                     l202:
  9435  00FD00  AE80               	btfss	3968,7,c	;volatile
  9436  00FD02  D002               	goto	u4760
  9437  00FD04  B089               	btfsc	3977,0,c	;volatile
  9438  00FD06  D7F4               	goto	l203
  9439  00FD08                     u4760:
  9440                           
  9441                           ;main.c: 151: }
  9442                           ;main.c: 152: }
  9443                           ;main.c: 153: if (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  9444  00FD08  BC80               	btfsc	3968,6,c	;volatile
  9445  00FD0A  A089               	btfss	3977,0,c	;volatile
  9446  00FD0C  D01A               	goto	u4800
  9447                           
  9448                           ;main.c: 154: key = 3;
  9449  00FD0E  0E03               	movlw	3
  9450  00FD10  0100               	movlb	0	; () banked
  9451  00FD12  6FA8               	movwf	_key& (0+255),b
  9452                           
  9453                           ; BSR set to: 0
  9454                           ;main.c: 155: guarda_numero_ingresado(key);
  9455  00FD14  0100               	movlb	0	; () banked
  9456  00FD16  51A8               	movf	_key& (0+255),w,b
  9457  00FD18  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9458  00FD1A  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9459  00FD1C  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9460  00FD20  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9461  00FD24  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9462                           
  9463                           ;main.c: 156: while (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  9464  00FD28  D008               	goto	l208
  9465  00FD2A                     
  9466                           ;main.c: 157: _delay((unsigned long)((40)*(8000000/4000.0)));
  9467  00FD2A  0E68               	movlw	104
  9468  00FD2C  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9469  00FD2E  0EE4               	movlw	228
  9470  00FD30                     u6507:
  9471  00FD30  2EE8               	decfsz	wreg,f,c
  9472  00FD32  D7FE               	bra	u6507
  9473  00FD34  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9474  00FD36  D7FC               	bra	u6507
  9475  00FD38  D000               	nop2	
  9476  00FD3A                     l208:
  9477  00FD3A  AC80               	btfss	3968,6,c	;volatile
  9478  00FD3C  D002               	goto	u4800
  9479  00FD3E  B089               	btfsc	3977,0,c	;volatile
  9480  00FD40  D7F4               	goto	l209
  9481  00FD42                     u4800:
  9482                           
  9483                           ;main.c: 158: }
  9484                           ;main.c: 159: }
  9485                           ;main.c: 160: }
  9486                           ;main.c: 161: LATAbits.LATA0 = 0;
  9487  00FD42  9089               	bcf	3977,0,c	;volatile
  9488                           
  9489                           ;main.c: 162: LATAbits.LATA1 = 1;
  9490  00FD44  8289               	bsf	3977,1,c	;volatile
  9491                           
  9492                           ;main.c: 163: LATAbits.LATA2 = 0;
  9493  00FD46  9489               	bcf	3977,2,c	;volatile
  9494                           
  9495                           ;main.c: 164: LATAbits.LATA3 = 0;
  9496  00FD48  9689               	bcf	3977,3,c	;volatile
  9497                           
  9498                           ;main.c: 165: {
  9499                           ;main.c: 166: if (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  9500  00FD4A  BA80               	btfsc	3968,5,c	;volatile
  9501  00FD4C  A289               	btfss	3977,1,c	;volatile
  9502  00FD4E  D01A               	goto	u4840
  9503                           
  9504                           ;main.c: 167: key = 4;
  9505  00FD50  0E04               	movlw	4
  9506  00FD52  0100               	movlb	0	; () banked
  9507  00FD54  6FA8               	movwf	_key& (0+255),b
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;main.c: 168: guarda_numero_ingresado(key);
  9511  00FD56  0100               	movlb	0	; () banked
  9512  00FD58  51A8               	movf	_key& (0+255),w,b
  9513  00FD5A  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9514  00FD5C  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9515  00FD5E  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9516  00FD62  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9517  00FD66  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9518                           
  9519                           ;main.c: 169: while (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  9520  00FD6A  D008               	goto	l214
  9521  00FD6C                     
  9522                           ;main.c: 170: _delay((unsigned long)((40)*(8000000/4000.0)));
  9523  00FD6C  0E68               	movlw	104
  9524  00FD6E  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9525  00FD70  0EE4               	movlw	228
  9526  00FD72                     u6517:
  9527  00FD72  2EE8               	decfsz	wreg,f,c
  9528  00FD74  D7FE               	bra	u6517
  9529  00FD76  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9530  00FD78  D7FC               	bra	u6517
  9531  00FD7A  D000               	nop2	
  9532  00FD7C                     l214:
  9533  00FD7C  AA80               	btfss	3968,5,c	;volatile
  9534  00FD7E  D002               	goto	u4840
  9535  00FD80  B289               	btfsc	3977,1,c	;volatile
  9536  00FD82  D7F4               	goto	l215
  9537  00FD84                     u4840:
  9538                           
  9539                           ;main.c: 171: }
  9540                           ;main.c: 172: }
  9541                           ;main.c: 173: if (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  9542  00FD84  BE80               	btfsc	3968,7,c	;volatile
  9543  00FD86  A289               	btfss	3977,1,c	;volatile
  9544  00FD88  D01A               	goto	u4880
  9545                           
  9546                           ;main.c: 174: key = 5;
  9547  00FD8A  0E05               	movlw	5
  9548  00FD8C  0100               	movlb	0	; () banked
  9549  00FD8E  6FA8               	movwf	_key& (0+255),b
  9550                           
  9551                           ; BSR set to: 0
  9552                           ;main.c: 175: guarda_numero_ingresado(key);
  9553  00FD90  0100               	movlb	0	; () banked
  9554  00FD92  51A8               	movf	_key& (0+255),w,b
  9555  00FD94  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9556  00FD96  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9557  00FD98  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9558  00FD9C  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9559  00FDA0  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9560                           
  9561                           ;main.c: 176: while (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  9562  00FDA4  D008               	goto	l220
  9563  00FDA6                     
  9564                           ;main.c: 177: _delay((unsigned long)((40)*(8000000/4000.0)));
  9565  00FDA6  0E68               	movlw	104
  9566  00FDA8  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9567  00FDAA  0EE4               	movlw	228
  9568  00FDAC                     u6527:
  9569  00FDAC  2EE8               	decfsz	wreg,f,c
  9570  00FDAE  D7FE               	bra	u6527
  9571  00FDB0  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9572  00FDB2  D7FC               	bra	u6527
  9573  00FDB4  D000               	nop2	
  9574  00FDB6                     l220:
  9575  00FDB6  AE80               	btfss	3968,7,c	;volatile
  9576  00FDB8  D002               	goto	u4880
  9577  00FDBA  B289               	btfsc	3977,1,c	;volatile
  9578  00FDBC  D7F4               	goto	l221
  9579  00FDBE                     u4880:
  9580                           
  9581                           ;main.c: 178: }
  9582                           ;main.c: 179: }
  9583                           ;main.c: 180: if (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  9584  00FDBE  BC80               	btfsc	3968,6,c	;volatile
  9585  00FDC0  A289               	btfss	3977,1,c	;volatile
  9586  00FDC2  D01A               	goto	u4920
  9587                           
  9588                           ;main.c: 181: key = 6;
  9589  00FDC4  0E06               	movlw	6
  9590  00FDC6  0100               	movlb	0	; () banked
  9591  00FDC8  6FA8               	movwf	_key& (0+255),b
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;main.c: 182: guarda_numero_ingresado(key);
  9595  00FDCA  0100               	movlb	0	; () banked
  9596  00FDCC  51A8               	movf	_key& (0+255),w,b
  9597  00FDCE  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9598  00FDD0  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9599  00FDD2  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9600  00FDD6  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9601  00FDDA  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9602                           
  9603                           ;main.c: 183: while (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  9604  00FDDE  D008               	goto	l226
  9605  00FDE0                     
  9606                           ;main.c: 184: _delay((unsigned long)((40)*(8000000/4000.0)));
  9607  00FDE0  0E68               	movlw	104
  9608  00FDE2  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9609  00FDE4  0EE4               	movlw	228
  9610  00FDE6                     u6537:
  9611  00FDE6  2EE8               	decfsz	wreg,f,c
  9612  00FDE8  D7FE               	bra	u6537
  9613  00FDEA  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9614  00FDEC  D7FC               	bra	u6537
  9615  00FDEE  D000               	nop2	
  9616  00FDF0                     l226:
  9617  00FDF0  AC80               	btfss	3968,6,c	;volatile
  9618  00FDF2  D002               	goto	u4920
  9619  00FDF4  B289               	btfsc	3977,1,c	;volatile
  9620  00FDF6  D7F4               	goto	l227
  9621  00FDF8                     u4920:
  9622                           
  9623                           ;main.c: 185: }
  9624                           ;main.c: 186: }
  9625                           ;main.c: 187: }
  9626                           ;main.c: 188: LATAbits.LATA0 = 0;
  9627  00FDF8  9089               	bcf	3977,0,c	;volatile
  9628                           
  9629                           ;main.c: 189: LATAbits.LATA1 = 0;
  9630  00FDFA  9289               	bcf	3977,1,c	;volatile
  9631                           
  9632                           ;main.c: 190: LATAbits.LATA2 = 1;
  9633  00FDFC  8489               	bsf	3977,2,c	;volatile
  9634                           
  9635                           ;main.c: 191: LATAbits.LATA3 = 0;
  9636  00FDFE  9689               	bcf	3977,3,c	;volatile
  9637                           
  9638                           ;main.c: 192: {
  9639                           ;main.c: 193: if (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  9640  00FE00  BA80               	btfsc	3968,5,c	;volatile
  9641  00FE02  A489               	btfss	3977,2,c	;volatile
  9642  00FE04  D01A               	goto	u4960
  9643                           
  9644                           ;main.c: 194: key = 7;
  9645  00FE06  0E07               	movlw	7
  9646  00FE08  0100               	movlb	0	; () banked
  9647  00FE0A  6FA8               	movwf	_key& (0+255),b
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;main.c: 195: guarda_numero_ingresado(key);
  9651  00FE0C  0100               	movlb	0	; () banked
  9652  00FE0E  51A8               	movf	_key& (0+255),w,b
  9653  00FE10  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9654  00FE12  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9655  00FE14  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9656  00FE18  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9657  00FE1C  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9658                           
  9659                           ;main.c: 196: while (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  9660  00FE20  D008               	goto	l232
  9661  00FE22                     
  9662                           ;main.c: 197: _delay((unsigned long)((40)*(8000000/4000.0)));
  9663  00FE22  0E68               	movlw	104
  9664  00FE24  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9665  00FE26  0EE4               	movlw	228
  9666  00FE28                     u6547:
  9667  00FE28  2EE8               	decfsz	wreg,f,c
  9668  00FE2A  D7FE               	bra	u6547
  9669  00FE2C  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9670  00FE2E  D7FC               	bra	u6547
  9671  00FE30  D000               	nop2	
  9672  00FE32                     l232:
  9673  00FE32  AA80               	btfss	3968,5,c	;volatile
  9674  00FE34  D002               	goto	u4960
  9675  00FE36  B489               	btfsc	3977,2,c	;volatile
  9676  00FE38  D7F4               	goto	l233
  9677  00FE3A                     u4960:
  9678                           
  9679                           ;main.c: 198: }
  9680                           ;main.c: 199: }
  9681                           ;main.c: 200: if (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  9682  00FE3A  BE80               	btfsc	3968,7,c	;volatile
  9683  00FE3C  A489               	btfss	3977,2,c	;volatile
  9684  00FE3E  D01A               	goto	u5000
  9685                           
  9686                           ;main.c: 201: key = 8;
  9687  00FE40  0E08               	movlw	8
  9688  00FE42  0100               	movlb	0	; () banked
  9689  00FE44  6FA8               	movwf	_key& (0+255),b
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;main.c: 202: guarda_numero_ingresado(key);
  9693  00FE46  0100               	movlb	0	; () banked
  9694  00FE48  51A8               	movf	_key& (0+255),w,b
  9695  00FE4A  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9696  00FE4C  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9697  00FE4E  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9698  00FE52  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9699  00FE56  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9700                           
  9701                           ;main.c: 203: while (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  9702  00FE5A  D008               	goto	l238
  9703  00FE5C                     
  9704                           ;main.c: 204: _delay((unsigned long)((40)*(8000000/4000.0)));
  9705  00FE5C  0E68               	movlw	104
  9706  00FE5E  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9707  00FE60  0EE4               	movlw	228
  9708  00FE62                     u6557:
  9709  00FE62  2EE8               	decfsz	wreg,f,c
  9710  00FE64  D7FE               	bra	u6557
  9711  00FE66  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9712  00FE68  D7FC               	bra	u6557
  9713  00FE6A  D000               	nop2	
  9714  00FE6C                     l238:
  9715  00FE6C  AE80               	btfss	3968,7,c	;volatile
  9716  00FE6E  D002               	goto	u5000
  9717  00FE70  B489               	btfsc	3977,2,c	;volatile
  9718  00FE72  D7F4               	goto	l239
  9719  00FE74                     u5000:
  9720                           
  9721                           ;main.c: 205: }
  9722                           ;main.c: 206: }
  9723                           ;main.c: 207: if (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  9724  00FE74  BC80               	btfsc	3968,6,c	;volatile
  9725  00FE76  A489               	btfss	3977,2,c	;volatile
  9726  00FE78  D01A               	goto	u5040
  9727                           
  9728                           ;main.c: 208: key = 9;
  9729  00FE7A  0E09               	movlw	9
  9730  00FE7C  0100               	movlb	0	; () banked
  9731  00FE7E  6FA8               	movwf	_key& (0+255),b
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;main.c: 209: guarda_numero_ingresado(key);
  9735  00FE80  0100               	movlb	0	; () banked
  9736  00FE82  51A8               	movf	_key& (0+255),w,b
  9737  00FE84  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9738  00FE86  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9739  00FE88  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9740  00FE8C  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9741  00FE90  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9742                           
  9743                           ;main.c: 210: while (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  9744  00FE94  D008               	goto	l244
  9745  00FE96                     
  9746                           ;main.c: 211: _delay((unsigned long)((40)*(8000000/4000.0)));
  9747  00FE96  0E68               	movlw	104
  9748  00FE98  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9749  00FE9A  0EE4               	movlw	228
  9750  00FE9C                     u6567:
  9751  00FE9C  2EE8               	decfsz	wreg,f,c
  9752  00FE9E  D7FE               	bra	u6567
  9753  00FEA0  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9754  00FEA2  D7FC               	bra	u6567
  9755  00FEA4  D000               	nop2	
  9756  00FEA6                     l244:
  9757  00FEA6  AC80               	btfss	3968,6,c	;volatile
  9758  00FEA8  D002               	goto	u5040
  9759  00FEAA  B489               	btfsc	3977,2,c	;volatile
  9760  00FEAC  D7F4               	goto	l245
  9761  00FEAE                     u5040:
  9762                           
  9763                           ;main.c: 212: }
  9764                           ;main.c: 213: }
  9765                           ;main.c: 214: }
  9766                           ;main.c: 215: LATAbits.LATA0 = 0;
  9767  00FEAE  9089               	bcf	3977,0,c	;volatile
  9768                           
  9769                           ;main.c: 216: LATAbits.LATA1 = 0;
  9770  00FEB0  9289               	bcf	3977,1,c	;volatile
  9771                           
  9772                           ;main.c: 217: LATAbits.LATA2 = 0;
  9773  00FEB2  9489               	bcf	3977,2,c	;volatile
  9774                           
  9775                           ;main.c: 218: LATAbits.LATA3 = 1;
  9776  00FEB4  8689               	bsf	3977,3,c	;volatile
  9777                           
  9778                           ;main.c: 220: if (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  9779  00FEB6  AE80               	btfss	3968,7,c	;volatile
  9780  00FEB8  0012               	return	
  9781  00FEBA  A689               	btfss	3977,3,c	;volatile
  9782  00FEBC  0012               	return	
  9783                           
  9784                           ;main.c: 221: key = 0;
  9785  00FEBE  0E00               	movlw	0
  9786  00FEC0  0100               	movlb	0	; () banked
  9787  00FEC2  6FA8               	movwf	_key& (0+255),b
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;main.c: 222: guarda_numero_ingresado(key);
  9791  00FEC4  0100               	movlb	0	; () banked
  9792  00FEC6  51A8               	movf	_key& (0+255),w,b
  9793  00FEC8  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9794  00FECA  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9795  00FECC  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9796  00FED0  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9797  00FED4  ECBE  F06D         	call	_guarda_numero_ingresado	;wreg free
  9798                           
  9799                           ;main.c: 223: while (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  9800  00FED8  D008               	goto	l250
  9801  00FEDA                     
  9802                           ;main.c: 224: _delay((unsigned long)((40)*(8000000/4000.0)));
  9803  00FEDA  0E68               	movlw	104
  9804  00FEDC  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9805  00FEDE  0EE4               	movlw	228
  9806  00FEE0                     u6577:
  9807  00FEE0  2EE8               	decfsz	wreg,f,c
  9808  00FEE2  D7FE               	bra	u6577
  9809  00FEE4  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9810  00FEE6  D7FC               	bra	u6577
  9811  00FEE8  D000               	nop2	
  9812  00FEEA                     l250:
  9813  00FEEA  AE80               	btfss	3968,7,c	;volatile
  9814  00FEEC  0012               	return	
  9815  00FEEE  A689               	btfss	3977,3,c	;volatile
  9816  00FEF0  0012               	return	
  9817  00FEF2  D7F3               	goto	l251
  9818  00FEF4                     __end_of_ingreso_numero:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           intcon	equ	0xFF2
  9827                           postinc0	equ	0xFEE
  9828                           wreg	equ	0xFE8
  9829                           postinc1	equ	0xFE6
  9830                           postdec1	equ	0xFE5
  9831                           fsr1h	equ	0xFE2
  9832                           fsr1l	equ	0xFE1
  9833                           indf2	equ	0xFDF
  9834                           postinc2	equ	0xFDE
  9835                           postdec2	equ	0xFDD
  9836                           fsr2h	equ	0xFDA
  9837                           fsr2l	equ	0xFD9
  9838                           status	equ	0xFD8
  9839                           
  9840 ;; *************** function _guarda_numero_ingresado *****************
  9841 ;; Defined at:
  9842 ;;		line 120 in file "main.c"
  9843 ;; Parameters:    Size  Location     Type
  9844 ;;  num             2   56[COMRAM] PTR int 
  9845 ;;		 -> RAM(3775), 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      void 
  9850 ;; Registers used:
  9851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9861 ;;Total ram usage:        2 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    5
  9864 ;; This function calls:
  9865 ;;		_lcd_gotoxy
  9866 ;;		_lcd_putrs
  9867 ;;		_sprintf
  9868 ;; This function is called by:
  9869 ;;		_ingreso_numero
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text48
  9874  00DB7C                     __ptext48:
  9875                           	opt stack 0
  9876  00DB7C                     _guarda_numero_ingresado:
  9877                           	opt stack 18
  9878                           
  9879                           ;main.c: 121: if (motivo_ingreso_de_numeros == 0) {
  9880                           
  9881                           ;incstack = 0
  9882  00DB7C  0100               	movlb	0	; () banked
  9883  00DB7E  5196               	movf	_motivo_ingreso_de_numeros& (0+255),w,b
  9884  00DB80  0100               	movlb	0	; () banked
  9885  00DB82  1197               	iorwf	(_motivo_ingreso_de_numeros+1)& (0+255),w,b
  9886  00DB84  A4D8               	btfss	status,2,c
  9887  00DB86  D02D               	goto	l190
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;main.c: 122: array_contrasenia_ingresada[numeros_ingresados] = num;
  9891  00DB88  90D8               	bcf	status,0,c
  9892  00DB8A  0100               	movlb	0	; () banked
  9893  00DB8C  3598               	rlcf	_numeros_ingresados& (0+255),w,b
  9894  00DB8E  6ED9               	movwf	fsr2l,c
  9895  00DB90  0100               	movlb	0	; () banked
  9896  00DB92  3599               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
  9897  00DB94  6EDA               	movwf	fsr2h,c
  9898  00DB96  0E60               	movlw	low _array_contrasenia_ingresada
  9899  00DB98  26D9               	addwf	fsr2l,f,c
  9900  00DB9A  0E00               	movlw	high _array_contrasenia_ingresada
  9901  00DB9C  22DA               	addwfc	fsr2h,f,c
  9902  00DB9E  C039  FFDE         	movff	guarda_numero_ingresado@num,postinc2
  9903  00DBA2  C03A  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
  9904                           
  9905                           ; BSR set to: 0
  9906                           ;main.c: 123: lcd_gotoxy(numeros_ingresados + 1, 2);
  9907  00DBA6  0E02               	movlw	2
  9908  00DBA8  6E05               	movwf	lcd_gotoxy@y,c
  9909  00DBAA  0100               	movlb	0	; () banked
  9910  00DBAC  2998               	incf	_numeros_ingresados& (0+255),w,b
  9911  00DBAE  ECA3  F069         	call	_lcd_gotoxy
  9912                           
  9913                           ;main.c: 124: sprintf(buffer2, "%01u", num);
  9914  00DBB2  0EA9               	movlw	low _buffer2
  9915  00DBB4  6E22               	movwf	sprintf@sp,c
  9916  00DBB6  0E00               	movlw	high _buffer2
  9917  00DBB8  6E23               	movwf	sprintf@sp+1,c
  9918  00DBBA  0EF2               	movlw	low STR_13
  9919  00DBBC  6E24               	movwf	sprintf@f,c
  9920  00DBBE  0EFF               	movlw	high STR_13
  9921  00DBC0  6E25               	movwf	sprintf@f+1,c
  9922  00DBC2  C039  F026         	movff	guarda_numero_ingresado@num,?_sprintf+4
  9923  00DBC6  C03A  F027         	movff	guarda_numero_ingresado@num+1,?_sprintf+5
  9924  00DBCA  EC12  F07C         	call	_sprintf	;wreg free
  9925                           
  9926                           ;main.c: 125: lcd_putrs(buffer2);
  9927  00DBCE  0EA9               	movlw	low _buffer2
  9928  00DBD0  6E09               	movwf	lcd_putrs@ptr,c
  9929  00DBD2  0E00               	movlw	high _buffer2
  9930  00DBD4  6E0A               	movwf	lcd_putrs@ptr+1,c
  9931  00DBD6  ECFA  F06A         	call	_lcd_putrs	;wreg free
  9932                           
  9933                           ;main.c: 126: numeros_ingresados++;
  9934  00DBDA  0100               	movlb	0	; () banked
  9935  00DBDC  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  9936  00DBDE  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  9937                           
  9938                           ;main.c: 127: } else {
  9939  00DBE0  0012               	return	
  9940  00DBE2                     l190:
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;main.c: 128: numeros_para_fecha[numeros_ingresados] = num;
  9944                           
  9945                           ; BSR set to: 0
  9946  00DBE2  90D8               	bcf	status,0,c
  9947  00DBE4  0100               	movlb	0	; () banked
  9948  00DBE6  3598               	rlcf	_numeros_ingresados& (0+255),w,b
  9949  00DBE8  6ED9               	movwf	fsr2l,c
  9950  00DBEA  0100               	movlb	0	; () banked
  9951  00DBEC  3599               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
  9952  00DBEE  6EDA               	movwf	fsr2h,c
  9953  00DBF0  0E80               	movlw	low _numeros_para_fecha
  9954  00DBF2  26D9               	addwf	fsr2l,f,c
  9955  00DBF4  0E00               	movlw	high _numeros_para_fecha
  9956  00DBF6  22DA               	addwfc	fsr2h,f,c
  9957  00DBF8  C039  FFDE         	movff	guarda_numero_ingresado@num,postinc2
  9958  00DBFC  C03A  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;main.c: 129: numeros_ingresados++;
  9962  00DC00  0100               	movlb	0	; () banked
  9963  00DC02  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  9964  00DC04  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  9965  00DC06  0012               	return	
  9966  00DC08                     __end_of_guarda_numero_ingresado:
  9967                           	opt stack 0
  9968                           tblptru	equ	0xFF8
  9969                           tblptrh	equ	0xFF7
  9970                           tblptrl	equ	0xFF6
  9971                           tablat	equ	0xFF5
  9972                           prodh	equ	0xFF4
  9973                           prodl	equ	0xFF3
  9974                           intcon	equ	0xFF2
  9975                           postinc0	equ	0xFEE
  9976                           wreg	equ	0xFE8
  9977                           postinc1	equ	0xFE6
  9978                           postdec1	equ	0xFE5
  9979                           fsr1h	equ	0xFE2
  9980                           fsr1l	equ	0xFE1
  9981                           indf2	equ	0xFDF
  9982                           postinc2	equ	0xFDE
  9983                           postdec2	equ	0xFDD
  9984                           fsr2h	equ	0xFDA
  9985                           fsr2l	equ	0xFD9
  9986                           status	equ	0xFD8
  9987                           
  9988 ;; *************** function _sprintf *****************
  9989 ;; Defined at:
  9990 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  sp              2   33[COMRAM] PTR unsigned char 
  9993 ;;		 -> buffer2(20), 
  9994 ;;  f               2   35[COMRAM] PTR const unsigned char 
  9995 ;;		 -> STR_31(5), STR_13(5), STR_8(15), STR_7(15), 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  tmpval          4    0        struct .
  9998 ;;  cp              3    0        PTR const unsigned char 
  9999 ;;  width           2   53[COMRAM] int 
 10000 ;;  val             2   50[COMRAM] unsigned int 
 10001 ;;  ap              2   47[COMRAM] PTR void [1]
 10002 ;;		 -> ?_sprintf(2), 
 10003 ;;  len             2    0        unsigned int 
 10004 ;;  c               1   55[COMRAM] char 
 10005 ;;  prec            1   52[COMRAM] char 
 10006 ;;  flag            1   49[COMRAM] unsigned char 
 10007 ;; Return value:  Size  Location     Type
 10008 ;;                  2   33[COMRAM] int 
 10009 ;; Registers used:
 10010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10011 ;; Tracked objects:
 10012 ;;		On entry : 0/0
 10013 ;;		On exit  : 0/0
 10014 ;;		Unchanged: 0/0
 10015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10016 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10017 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10019 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10020 ;;Total ram usage:       23 bytes
 10021 ;; Hardware stack levels used:    1
 10022 ;; Hardware stack levels required when called:    1
 10023 ;; This function calls:
 10024 ;;		___lwdiv
 10025 ;;		___lwmod
 10026 ;;		___wmul
 10027 ;;		_isdigit
 10028 ;; This function is called by:
 10029 ;;		_setDiaMesAnio
 10030 ;;		_setHoraMinutoSegundo
 10031 ;;		_guarda_numero_ingresado
 10032 ;;		_covertir_valores_de_array_a_escala_decimal
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text49
 10037  00F824                     __ptext49:
 10038                           	opt stack 0
 10039  00F824                     _sprintf:
 10040                           	opt stack 26
 10041                           
 10042                           ;doprnt.c: 494: va_list ap;
 10043                           ;doprnt.c: 499: signed char c;
 10044                           ;doprnt.c: 501: int width;
 10045                           ;doprnt.c: 506: signed char prec;
 10046                           ;doprnt.c: 508: unsigned char flag;
 10047                           ;doprnt.c: 523: union {
 10048                           ;doprnt.c: 524: unsigned long vd;
 10049                           ;doprnt.c: 525: double integ;
 10050                           ;doprnt.c: 526: } tmpval;
 10051                           ;doprnt.c: 528: unsigned int val;
 10052                           ;doprnt.c: 529: unsigned len;
 10053                           ;doprnt.c: 530: const char * cp;
 10054                           ;doprnt.c: 533: *ap = __va_start();
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;incstack = 0
 10058  00F824  0E26               	movlw	low (?_sprintf+4)
 10059  00F826  6E30               	movwf	sprintf@ap,c
 10060  00F828  0E00               	movlw	high (?_sprintf+4)
 10061  00F82A  6E31               	movwf	sprintf@ap+1,c
 10062                           
 10063                           ;doprnt.c: 536: while(c = *f++) {
 10064  00F82C  D100               	goto	u4370
 10065  00F82E                     
 10066                           ;doprnt.c: 538: if(c != '%')
 10067  00F82E  0E25               	movlw	37
 10068  00F830  1838               	xorwf	sprintf@c,w,c
 10069  00F832  B4D8               	btfsc	status,2,c
 10070  00F834  D009               	goto	l525
 10071                           
 10072                           ;doprnt.c: 540: {
 10073                           ;doprnt.c: 541: ((*sp++ = (c)));
 10074  00F836  C022  FFD9         	movff	sprintf@sp,fsr2l
 10075  00F83A  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10076  00F83E  C038  FFDF         	movff	sprintf@c,indf2
 10077  00F842  4A22               	infsnz	sprintf@sp,f,c
 10078  00F844  2A23               	incf	sprintf@sp+1,f,c
 10079                           
 10080                           ;doprnt.c: 542: continue;
 10081  00F846  D0F3               	goto	u4370
 10082  00F848                     l525:
 10083                           
 10084                           ;doprnt.c: 543: }
 10085                           ;doprnt.c: 546: width = 0;
 10086  00F848  0E00               	movlw	0
 10087  00F84A  6E37               	movwf	sprintf@width+1,c
 10088  00F84C  0E00               	movlw	0
 10089  00F84E  6E36               	movwf	sprintf@width,c
 10090                           
 10091                           ;doprnt.c: 548: flag = 0;
 10092  00F850  0E00               	movlw	0
 10093  00F852  6E32               	movwf	sprintf@flag,c
 10094                           
 10095                           ;doprnt.c: 551: switch(*f) {
 10096                           
 10097                           ;doprnt.c: 550: for(;;) {
 10098  00F854  D003               	goto	l527
 10099  00F856                     
 10100                           ;doprnt.c: 580: flag |= 0x04;
 10101  00F856  8432               	bsf	sprintf@flag,2,c
 10102                           
 10103                           ;doprnt.c: 581: f++;
 10104  00F858  4A24               	infsnz	sprintf@f,f,c
 10105  00F85A  2A25               	incf	sprintf@f+1,f,c
 10106  00F85C                     l527:
 10107  00F85C  C024  FFF6         	movff	sprintf@f,tblptrl
 10108  00F860  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10109  00F864                     	if	0	;tblptru may be non-zero
 10110  00F864                     	endif
 10111  00F864                     	if	0	;tblptru may be non-zero
 10112  00F864                     	endif
 10113  00F864  0008               	tblrd		*
 10114  00F866  50F5               	movf	tablat,w,c
 10115                           
 10116                           ; Switch size 1, requested type "space"
 10117                           ; Number of cases is 1, Range of values is 48 to 48
 10118                           ; switch strategies available:
 10119                           ; Name         Instructions Cycles
 10120                           ; simple_byte            4     3 (average)
 10121                           ;	Chosen strategy is simple_byte
 10122  00F868  0A30               	xorlw	48	; case 48
 10123  00F86A  B4D8               	btfsc	status,2,c
 10124  00F86C  D7F4               	goto	l528
 10125                           
 10126                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10127                           
 10128                           ;doprnt.c: 586: }
 10129                           
 10130                           ;doprnt.c: 585: break;
 10131  00F86E  C024  FFF6         	movff	sprintf@f,tblptrl
 10132  00F872  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10133  00F876                     	if	0	;tblptru may be non-zero
 10134  00F876                     	endif
 10135  00F876                     	if	0	;tblptru may be non-zero
 10136  00F876                     	endif
 10137  00F876  0008               	tblrd		*
 10138  00F878  50F5               	movf	tablat,w,c
 10139  00F87A  EC94  F069         	call	_isdigit
 10140  00F87E  A0D8               	btfss	status,0,c
 10141  00F880  D036               	goto	l535
 10142                           
 10143                           ;doprnt.c: 598: width = 0;
 10144  00F882  0E00               	movlw	0
 10145  00F884  6E37               	movwf	sprintf@width+1,c
 10146  00F886  0E00               	movlw	0
 10147  00F888  6E36               	movwf	sprintf@width,c
 10148  00F88A                     
 10149                           ;doprnt.c: 600: width *= 10;
 10150  00F88A  C036  F01C         	movff	sprintf@width,___wmul@multiplier
 10151  00F88E  C037  F01D         	movff	sprintf@width+1,___wmul@multiplier+1
 10152  00F892  0E00               	movlw	0
 10153  00F894  6E1F               	movwf	___wmul@multiplicand+1,c
 10154  00F896  0E0A               	movlw	10
 10155  00F898  6E1E               	movwf	___wmul@multiplicand,c
 10156  00F89A  ECD8  F069         	call	___wmul	;wreg free
 10157  00F89E  C01C  F036         	movff	?___wmul,sprintf@width
 10158  00F8A2  C01D  F037         	movff	?___wmul+1,sprintf@width+1
 10159                           
 10160                           ;doprnt.c: 601: width += *f++ - '0';
 10161  00F8A6  0ED0               	movlw	208
 10162  00F8A8  6E2C               	movwf	??_sprintf& (0+255),c
 10163  00F8AA  0EFF               	movlw	255
 10164  00F8AC  6E2D               	movwf	(??_sprintf+1)& (0+255),c
 10165  00F8AE  C024  FFF6         	movff	sprintf@f,tblptrl
 10166  00F8B2  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10167  00F8B6                     	if	0	;tblptru may be non-zero
 10168  00F8B6                     	endif
 10169  00F8B6                     	if	0	;tblptru may be non-zero
 10170  00F8B6                     	endif
 10171  00F8B6  0008               	tblrd		*
 10172  00F8B8  50F5               	movf	tablat,w,c
 10173  00F8BA  6E2E               	movwf	(??_sprintf+2)& (0+255),c
 10174  00F8BC  6A2F               	clrf	(??_sprintf+3)& (0+255),c
 10175  00F8BE  502C               	movf	??_sprintf,w,c
 10176  00F8C0  262E               	addwf	??_sprintf+2,f,c
 10177  00F8C2  502D               	movf	??_sprintf+1,w,c
 10178  00F8C4  222F               	addwfc	??_sprintf+3,f,c
 10179  00F8C6  502E               	movf	??_sprintf+2,w,c
 10180  00F8C8  2636               	addwf	sprintf@width,f,c
 10181  00F8CA  502F               	movf	??_sprintf+3,w,c
 10182  00F8CC  2237               	addwfc	sprintf@width+1,f,c
 10183  00F8CE  4A24               	infsnz	sprintf@f,f,c
 10184  00F8D0  2A25               	incf	sprintf@f+1,f,c
 10185                           
 10186                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10187  00F8D2  C024  FFF6         	movff	sprintf@f,tblptrl
 10188  00F8D6  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10189  00F8DA                     	if	0	;tblptru may be non-zero
 10190  00F8DA                     	endif
 10191  00F8DA                     	if	0	;tblptru may be non-zero
 10192  00F8DA                     	endif
 10193  00F8DA  0008               	tblrd		*
 10194  00F8DC  50F5               	movf	tablat,w,c
 10195  00F8DE  EC94  F069         	call	_isdigit
 10196  00F8E2  A0D8               	btfss	status,0,c
 10197  00F8E4  D004               	goto	l535
 10198  00F8E6  D7D1               	goto	l533
 10199  00F8E8                     
 10200                           ;doprnt.c: 818: flag |= 0xC0;
 10201  00F8E8  0EC0               	movlw	192
 10202  00F8EA  1232               	iorwf	sprintf@flag,f,c
 10203                           
 10204                           ;doprnt.c: 822: }
 10205                           
 10206                           ;doprnt.c: 819: break;
 10207  00F8EC  D011               	goto	l540
 10208  00F8EE                     l535:
 10209  00F8EE  C024  FFF6         	movff	sprintf@f,tblptrl
 10210  00F8F2  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10211  00F8F6  4A24               	infsnz	sprintf@f,f,c
 10212  00F8F8  2A25               	incf	sprintf@f+1,f,c
 10213  00F8FA                     	if	0	;tblptru may be non-zero
 10214  00F8FA                     	endif
 10215  00F8FA                     	if	0	;tblptru may be non-zero
 10216  00F8FA                     	endif
 10217  00F8FA  0008               	tblrd		*
 10218  00F8FC  CFF5 F038          	movff	tablat,sprintf@c
 10219  00F900  5038               	movf	sprintf@c,w,c
 10220                           
 10221                           ; Switch size 1, requested type "space"
 10222                           ; Number of cases is 2, Range of values is 0 to 117
 10223                           ; switch strategies available:
 10224                           ; Name         Instructions Cycles
 10225                           ; simple_byte            7     4 (average)
 10226                           ;	Chosen strategy is simple_byte
 10227  00F902  0A00               	xorlw	0	; case 0
 10228  00F904  B4D8               	btfsc	status,2,c
 10229  00F906  D09F               	goto	u4380
 10230  00F908  0A75               	xorlw	117	; case 117
 10231  00F90A  B4D8               	btfsc	status,2,c
 10232  00F90C  D7ED               	goto	l539
 10233  00F90E  D08F               	goto	u4370
 10234  00F910                     l540:
 10235                           
 10236                           ;doprnt.c: 1273: {
 10237                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10238  00F910  C030  FFD9         	movff	sprintf@ap,fsr2l
 10239  00F914  C031  FFDA         	movff	sprintf@ap+1,fsr2h
 10240  00F918  CFDE F033          	movff	postinc2,sprintf@val
 10241  00F91C  CFDD F034          	movff	postdec2,sprintf@val+1
 10242  00F920  0E02               	movlw	2
 10243  00F922  2630               	addwf	sprintf@ap,f,c
 10244  00F924  0E00               	movlw	0
 10245  00F926  2231               	addwfc	sprintf@ap+1,f,c
 10246                           
 10247                           ;doprnt.c: 1287: }
 10248                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10249  00F928  0E01               	movlw	1
 10250  00F92A  6E38               	movwf	sprintf@c,c
 10251  00F92C                     l4024:
 10252  00F92C  0E05               	movlw	5
 10253  00F92E  1838               	xorwf	sprintf@c,w,c
 10254  00F930  B4D8               	btfsc	status,2,c
 10255  00F932  D012               	goto	u4300
 10256                           
 10257                           ;doprnt.c: 1306: if(val < dpowers[c])
 10258  00F934  5038               	movf	sprintf@c,w,c
 10259  00F936  0D02               	mullw	2
 10260  00F938  0EF5               	movlw	low _dpowers
 10261  00F93A  24F3               	addwf	prodl,w,c
 10262  00F93C  6EF6               	movwf	tblptrl,c
 10263  00F93E  0EFE               	movlw	high _dpowers
 10264  00F940  20F4               	addwfc	prodh,w,c
 10265  00F942  6EF7               	movwf	tblptrh,c
 10266  00F944                     	if	0	;There are less than 3 active tblptr bytes
 10267  00F944                     	endif
 10268  00F944  0009               	tblrd		*+
 10269  00F946  50F5               	movf	tablat,w,c
 10270  00F948  5C33               	subwf	sprintf@val,w,c
 10271  00F94A  0009               	tblrd		*+
 10272  00F94C  50F5               	movf	tablat,w,c
 10273  00F94E  5834               	subwfb	sprintf@val+1,w,c
 10274  00F950  A0D8               	btfss	status,0,c
 10275  00F952  D002               	goto	u4300
 10276                           
 10277                           ;doprnt.c: 1307: break;
 10278  00F954  2A38               	incf	sprintf@c,f,c
 10279  00F956  D7EA               	goto	l4024
 10280  00F958                     u4300:
 10281                           
 10282                           ;doprnt.c: 1381: if(width > c)
 10283  00F958  0E80               	movlw	128
 10284  00F95A  BE38               	btfsc	sprintf@c,7,c
 10285  00F95C  0E7F               	movlw	127
 10286  00F95E  6E2C               	movwf	??_sprintf& (0+255),c
 10287  00F960  5036               	movf	sprintf@width,w,c
 10288  00F962  5C38               	subwf	sprintf@c,w,c
 10289  00F964  5037               	movf	sprintf@width+1,w,c
 10290  00F966  0A80               	xorlw	128
 10291  00F968  582C               	subwfb	??_sprintf& (0+255),w,c
 10292  00F96A  B0D8               	btfsc	status,0,c
 10293  00F96C  D007               	goto	l544
 10294                           
 10295                           ;doprnt.c: 1382: width -= c;
 10296  00F96E  5038               	movf	sprintf@c,w,c
 10297  00F970  5E36               	subwf	sprintf@width,f,c
 10298  00F972  0E00               	movlw	0
 10299  00F974  BE38               	btfsc	sprintf@c,7,c
 10300  00F976  0EFF               	movlw	255
 10301  00F978  5A37               	subwfb	sprintf@width+1,f,c
 10302  00F97A  D004               	goto	l545
 10303  00F97C                     l544:
 10304                           
 10305                           ;doprnt.c: 1383: else
 10306                           ;doprnt.c: 1384: width = 0;
 10307  00F97C  0E00               	movlw	0
 10308  00F97E  6E37               	movwf	sprintf@width+1,c
 10309  00F980  0E00               	movlw	0
 10310  00F982  6E36               	movwf	sprintf@width,c
 10311  00F984                     l545:
 10312                           
 10313                           ;doprnt.c: 1387: if(flag & 0x04) {
 10314  00F984  A432               	btfss	sprintf@flag,2,c
 10315  00F986  D010               	goto	l546
 10316  00F988                     
 10317                           ;doprnt.c: 1415: if(width)
 10318  00F988  5036               	movf	sprintf@width,w,c
 10319  00F98A  1037               	iorwf	sprintf@width+1,w,c
 10320  00F98C  B4D8               	btfsc	status,2,c
 10321  00F98E  D01F               	goto	u4360
 10322                           
 10323                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10324                           
 10325                           ;doprnt.c: 1416: do
 10326  00F990  C022  FFD9         	movff	sprintf@sp,fsr2l
 10327  00F994  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10328  00F998  0E30               	movlw	48
 10329  00F99A  6EDF               	movwf	indf2,c
 10330  00F99C  4A22               	infsnz	sprintf@sp,f,c
 10331  00F99E  2A23               	incf	sprintf@sp+1,f,c
 10332                           
 10333                           ;doprnt.c: 1418: while(--width);
 10334  00F9A0  0636               	decf	sprintf@width,f,c
 10335  00F9A2  A0D8               	btfss	status,0,c
 10336  00F9A4  0637               	decf	sprintf@width+1,f,c
 10337  00F9A6  D7F0               	goto	L4
 10338  00F9A8                     l546:
 10339                           
 10340                           ;doprnt.c: 1422: {
 10341                           ;doprnt.c: 1424: if(width
 10342                           ;doprnt.c: 1428: )
 10343  00F9A8  5036               	movf	sprintf@width,w,c
 10344  00F9AA  1037               	iorwf	sprintf@width+1,w,c
 10345  00F9AC  B4D8               	btfsc	status,2,c
 10346  00F9AE  D00F               	goto	u4360
 10347  00F9B0                     u4350:
 10348                           
 10349                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10350                           
 10351                           ;doprnt.c: 1429: do
 10352  00F9B0  C022  FFD9         	movff	sprintf@sp,fsr2l
 10353  00F9B4  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10354  00F9B8  0E20               	movlw	32
 10355  00F9BA  6EDF               	movwf	indf2,c
 10356  00F9BC  4A22               	infsnz	sprintf@sp,f,c
 10357  00F9BE  2A23               	incf	sprintf@sp+1,f,c
 10358                           
 10359                           ;doprnt.c: 1431: while(--width);
 10360  00F9C0  0636               	decf	sprintf@width,f,c
 10361  00F9C2  A0D8               	btfss	status,0,c
 10362  00F9C4  0637               	decf	sprintf@width+1,f,c
 10363  00F9C6  5036               	movf	sprintf@width,w,c
 10364  00F9C8  1037               	iorwf	sprintf@width+1,w,c
 10365  00F9CA  A4D8               	btfss	status,2,c
 10366  00F9CC  D7F1               	goto	u4350
 10367  00F9CE                     u4360:
 10368                           
 10369                           ;doprnt.c: 1469: }
 10370                           ;doprnt.c: 1472: prec = c;
 10371  00F9CE  C038  F035         	movff	sprintf@c,sprintf@prec
 10372                           
 10373                           ;doprnt.c: 1474: while(prec--) {
 10374  00F9D2  D029               	goto	l554
 10375  00F9D4                     
 10376                           ;doprnt.c: 1478: {
 10377                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10378  00F9D4  5035               	movf	sprintf@prec,w,c
 10379  00F9D6  0D02               	mullw	2
 10380  00F9D8  0EF5               	movlw	low _dpowers
 10381  00F9DA  24F3               	addwf	prodl,w,c
 10382  00F9DC  6EF6               	movwf	tblptrl,c
 10383  00F9DE  0EFE               	movlw	high _dpowers
 10384  00F9E0  20F4               	addwfc	prodh,w,c
 10385  00F9E2  6EF7               	movwf	tblptrh,c
 10386  00F9E4                     	if	0	;There are less than 3 active tblptr bytes
 10387  00F9E4                     	endif
 10388  00F9E4  0009               	tblrd		*+
 10389  00F9E6  CFF5 F003          	movff	tablat,___lwdiv@divisor
 10390  00F9EA  000A               	tblrd		*-
 10391  00F9EC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 10392  00F9F0  C033  F001         	movff	sprintf@val,___lwdiv@dividend
 10393  00F9F4  C034  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
 10394  00F9F8  EC23  F06B         	call	___lwdiv	;wreg free
 10395  00F9FC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
 10396  00FA00  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
 10397  00FA04  0E00               	movlw	0
 10398  00FA06  6E0B               	movwf	___lwmod@divisor+1,c
 10399  00FA08  0E0A               	movlw	10
 10400  00FA0A  6E0A               	movwf	___lwmod@divisor,c
 10401  00FA0C  EC40  F06A         	call	___lwmod	;wreg free
 10402  00FA10  5008               	movf	?___lwmod,w,c
 10403  00FA12  0F30               	addlw	48
 10404  00FA14  6E38               	movwf	sprintf@c,c
 10405                           
 10406                           ;doprnt.c: 1523: }
 10407                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10408  00FA16  C022  FFD9         	movff	sprintf@sp,fsr2l
 10409  00FA1A  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10410  00FA1E  C038  FFDF         	movff	sprintf@c,indf2
 10411  00FA22  4A22               	infsnz	sprintf@sp,f,c
 10412  00FA24  2A23               	incf	sprintf@sp+1,f,c
 10413  00FA26                     l554:
 10414  00FA26  0635               	decf	sprintf@prec,f,c
 10415  00FA28  2835               	incf	sprintf@prec,w,c
 10416  00FA2A  A4D8               	btfss	status,2,c
 10417  00FA2C  D7D3               	goto	l555
 10418  00FA2E                     u4370:
 10419  00FA2E  C024  FFF6         	movff	sprintf@f,tblptrl
 10420  00FA32  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10421  00FA36  4A24               	infsnz	sprintf@f,f,c
 10422  00FA38  2A25               	incf	sprintf@f+1,f,c
 10423  00FA3A                     	if	0	;tblptru may be non-zero
 10424  00FA3A                     	endif
 10425  00FA3A                     	if	0	;tblptru may be non-zero
 10426  00FA3A                     	endif
 10427  00FA3A  0008               	tblrd		*
 10428  00FA3C  CFF5 F038          	movff	tablat,sprintf@c
 10429  00FA40  5038               	movf	sprintf@c,w,c
 10430  00FA42  A4D8               	btfss	status,2,c
 10431  00FA44  D6F4               	goto	l524
 10432  00FA46                     u4380:
 10433                           
 10434                           ;doprnt.c: 1538: *sp = 0;
 10435                           
 10436                           ;doprnt.c: 1525: }
 10437                           ;doprnt.c: 1533: }
 10438                           ;doprnt.c: 1535: alldone:
 10439  00FA46  C022  FFD9         	movff	sprintf@sp,fsr2l
 10440  00FA4A  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10441  00FA4E  0E00               	movlw	0
 10442  00FA50  6EDF               	movwf	indf2,c
 10443  00FA52  0012               	return	
 10444  00FA54                     __end_of_sprintf:
 10445                           	opt stack 0
 10446                           tblptru	equ	0xFF8
 10447                           tblptrh	equ	0xFF7
 10448                           tblptrl	equ	0xFF6
 10449                           tablat	equ	0xFF5
 10450                           prodh	equ	0xFF4
 10451                           prodl	equ	0xFF3
 10452                           intcon	equ	0xFF2
 10453                           postinc0	equ	0xFEE
 10454                           wreg	equ	0xFE8
 10455                           postinc1	equ	0xFE6
 10456                           postdec1	equ	0xFE5
 10457                           fsr1h	equ	0xFE2
 10458                           fsr1l	equ	0xFE1
 10459                           indf2	equ	0xFDF
 10460                           postinc2	equ	0xFDE
 10461                           postdec2	equ	0xFDD
 10462                           fsr2h	equ	0xFDA
 10463                           fsr2l	equ	0xFD9
 10464                           status	equ	0xFD8
 10465                           
 10466 ;; *************** function _isdigit *****************
 10467 ;; Defined at:
 10468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  c               1    wreg     unsigned char 
 10471 ;; Auto vars:     Size  Location     Type
 10472 ;;  c               1    2[COMRAM] unsigned char 
 10473 ;; Return value:  Size  Location     Type
 10474 ;;		None               void
 10475 ;; Registers used:
 10476 ;;		wreg, status,2, status,0
 10477 ;; Tracked objects:
 10478 ;;		On entry : 0/0
 10479 ;;		On exit  : 0/0
 10480 ;;		Unchanged: 0/0
 10481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10484 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10485 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;Total ram usage:        3 bytes
 10487 ;; Hardware stack levels used:    1
 10488 ;; This function calls:
 10489 ;;		Nothing
 10490 ;; This function is called by:
 10491 ;;		_sprintf
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           	psect	text50
 10496  00D328                     __ptext50:
 10497                           	opt stack 0
 10498  00D328                     _isdigit:
 10499                           	opt stack 26
 10500                           
 10501                           ;incstack = 0
 10502                           ;isdigit@c stored from wreg
 10503  00D328  6E03               	movwf	isdigit@c,c
 10504  00D32A  0E00               	movlw	0
 10505  00D32C  6E02               	movwf	_isdigit$1985,c
 10506  00D32E  0E3A               	movlw	58
 10507  00D330  6003               	cpfslt	isdigit@c,c
 10508  00D332  D005               	goto	l998
 10509  00D334  0E2F               	movlw	47
 10510  00D336  6403               	cpfsgt	isdigit@c,c
 10511  00D338  D002               	goto	l998
 10512  00D33A  0E01               	movlw	1
 10513  00D33C  6E02               	movwf	_isdigit$1985,c
 10514  00D33E                     l998:
 10515  00D33E  C002  F001         	movff	_isdigit$1985,??_isdigit
 10516  00D342  3001               	rrcf	??_isdigit,w,c
 10517  00D344  0012               	return	
 10518  00D346                     __end_of_isdigit:
 10519                           	opt stack 0
 10520                           tblptru	equ	0xFF8
 10521                           tblptrh	equ	0xFF7
 10522                           tblptrl	equ	0xFF6
 10523                           tablat	equ	0xFF5
 10524                           prodh	equ	0xFF4
 10525                           prodl	equ	0xFF3
 10526                           intcon	equ	0xFF2
 10527                           postinc0	equ	0xFEE
 10528                           wreg	equ	0xFE8
 10529                           postinc1	equ	0xFE6
 10530                           postdec1	equ	0xFE5
 10531                           fsr1h	equ	0xFE2
 10532                           fsr1l	equ	0xFE1
 10533                           indf2	equ	0xFDF
 10534                           postinc2	equ	0xFDE
 10535                           postdec2	equ	0xFDD
 10536                           fsr2h	equ	0xFDA
 10537                           fsr2l	equ	0xFD9
 10538                           status	equ	0xFD8
 10539                           
 10540 ;; *************** function ___wmul *****************
 10541 ;; Defined at:
 10542 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
 10543 ;; Parameters:    Size  Location     Type
 10544 ;;  multiplier      2   27[COMRAM] unsigned int 
 10545 ;;  multiplicand    2   29[COMRAM] unsigned int 
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  product         2   31[COMRAM] unsigned int 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  2   27[COMRAM] unsigned int 
 10550 ;; Registers used:
 10551 ;;		wreg, status,2, status,0, prodl, prodh
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10560 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10561 ;;Total ram usage:        6 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; This function calls:
 10564 ;;		Nothing
 10565 ;; This function is called by:
 10566 ;;		_covertir_valores_de_array_a_escala_decimal
 10567 ;;		_sprintf
 10568 ;;		_eval_poly
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           	psect	text51
 10573  00D3B0                     __ptext51:
 10574                           	opt stack 0
 10575  00D3B0                     ___wmul:
 10576                           	opt stack 26
 10577                           
 10578                           ;incstack = 0
 10579  00D3B0  501C               	movf	___wmul@multiplier,w,c
 10580  00D3B2  021E               	mulwf	___wmul@multiplicand,c
 10581  00D3B4  CFF3 F020          	movff	prodl,___wmul@product
 10582  00D3B8  CFF4 F021          	movff	prodh,___wmul@product+1
 10583  00D3BC  501C               	movf	___wmul@multiplier,w,c
 10584  00D3BE  021F               	mulwf	___wmul@multiplicand+1,c
 10585  00D3C0  50F3               	movf	prodl,w,c
 10586  00D3C2  2621               	addwf	___wmul@product+1,f,c
 10587  00D3C4  501D               	movf	___wmul@multiplier+1,w,c
 10588  00D3C6  021E               	mulwf	___wmul@multiplicand,c
 10589  00D3C8  50F3               	movf	prodl,w,c
 10590  00D3CA  2621               	addwf	___wmul@product+1,f,c
 10591  00D3CC  C020  F01C         	movff	___wmul@product,?___wmul
 10592  00D3D0  C021  F01D         	movff	___wmul@product+1,?___wmul+1
 10593  00D3D4  0012               	return	
 10594  00D3D6                     __end_of___wmul:
 10595                           	opt stack 0
 10596                           tblptru	equ	0xFF8
 10597                           tblptrh	equ	0xFF7
 10598                           tblptrl	equ	0xFF6
 10599                           tablat	equ	0xFF5
 10600                           prodh	equ	0xFF4
 10601                           prodl	equ	0xFF3
 10602                           intcon	equ	0xFF2
 10603                           postinc0	equ	0xFEE
 10604                           wreg	equ	0xFE8
 10605                           postinc1	equ	0xFE6
 10606                           postdec1	equ	0xFE5
 10607                           fsr1h	equ	0xFE2
 10608                           fsr1l	equ	0xFE1
 10609                           indf2	equ	0xFDF
 10610                           postinc2	equ	0xFDE
 10611                           postdec2	equ	0xFDD
 10612                           fsr2h	equ	0xFDA
 10613                           fsr2l	equ	0xFD9
 10614                           status	equ	0xFD8
 10615                           
 10616 ;; *************** function ___lwmod *****************
 10617 ;; Defined at:
 10618 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  dividend        2    7[COMRAM] unsigned int 
 10621 ;;  divisor         2    9[COMRAM] unsigned int 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  counter         1   11[COMRAM] unsigned char 
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  2    7[COMRAM] unsigned int 
 10626 ;; Registers used:
 10627 ;;		wreg, status,2, status,0
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10636 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10637 ;;Total ram usage:        5 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_sprintf
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text52
 10647  00D480                     __ptext52:
 10648                           	opt stack 0
 10649  00D480                     ___lwmod:
 10650                           	opt stack 26
 10651                           
 10652                           ;incstack = 0
 10653  00D480  500A               	movf	___lwmod@divisor,w,c
 10654  00D482  100B               	iorwf	___lwmod@divisor+1,w,c
 10655  00D484  B4D8               	btfsc	status,2,c
 10656  00D486  D018               	goto	l1092
 10657  00D488  0E01               	movlw	1
 10658  00D48A  6E0C               	movwf	___lwmod@counter,c
 10659  00D48C  D004               	goto	l1087
 10660  00D48E  90D8               	bcf	status,0,c
 10661  00D490  360A               	rlcf	___lwmod@divisor,f,c
 10662  00D492  360B               	rlcf	___lwmod@divisor+1,f,c
 10663  00D494  2A0C               	incf	___lwmod@counter,f,c
 10664  00D496                     l1087:
 10665  00D496  AE0B               	btfss	___lwmod@divisor+1,7,c
 10666  00D498  D7FA               	goto	l1088
 10667  00D49A                     u3890:
 10668  00D49A  500A               	movf	___lwmod@divisor,w,c
 10669  00D49C  5C08               	subwf	___lwmod@dividend,w,c
 10670  00D49E  500B               	movf	___lwmod@divisor+1,w,c
 10671  00D4A0  5809               	subwfb	___lwmod@dividend+1,w,c
 10672  00D4A2  A0D8               	btfss	status,0,c
 10673  00D4A4  D004               	goto	l1091
 10674  00D4A6  500A               	movf	___lwmod@divisor,w,c
 10675  00D4A8  5E08               	subwf	___lwmod@dividend,f,c
 10676  00D4AA  500B               	movf	___lwmod@divisor+1,w,c
 10677  00D4AC  5A09               	subwfb	___lwmod@dividend+1,f,c
 10678  00D4AE                     l1091:
 10679  00D4AE  90D8               	bcf	status,0,c
 10680  00D4B0  320B               	rrcf	___lwmod@divisor+1,f,c
 10681  00D4B2  320A               	rrcf	___lwmod@divisor,f,c
 10682  00D4B4  2E0C               	decfsz	___lwmod@counter,f,c
 10683  00D4B6  D7F1               	goto	u3890
 10684  00D4B8                     l1092:
 10685  00D4B8  C008  F008         	movff	___lwmod@dividend,?___lwmod
 10686  00D4BC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
 10687  00D4C0  0012               	return		;funcret
 10688  00D4C2                     __end_of___lwmod:
 10689                           	opt stack 0
 10690                           tblptru	equ	0xFF8
 10691                           tblptrh	equ	0xFF7
 10692                           tblptrl	equ	0xFF6
 10693                           tablat	equ	0xFF5
 10694                           prodh	equ	0xFF4
 10695                           prodl	equ	0xFF3
 10696                           intcon	equ	0xFF2
 10697                           postinc0	equ	0xFEE
 10698                           wreg	equ	0xFE8
 10699                           postinc1	equ	0xFE6
 10700                           postdec1	equ	0xFE5
 10701                           fsr1h	equ	0xFE2
 10702                           fsr1l	equ	0xFE1
 10703                           indf2	equ	0xFDF
 10704                           postinc2	equ	0xFDE
 10705                           postdec2	equ	0xFDD
 10706                           fsr2h	equ	0xFDA
 10707                           fsr2l	equ	0xFD9
 10708                           status	equ	0xFD8
 10709                           
 10710 ;; *************** function ___lwdiv *****************
 10711 ;; Defined at:
 10712 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
 10713 ;; Parameters:    Size  Location     Type
 10714 ;;  dividend        2    0[COMRAM] unsigned int 
 10715 ;;  divisor         2    2[COMRAM] unsigned int 
 10716 ;; Auto vars:     Size  Location     Type
 10717 ;;  quotient        2    4[COMRAM] unsigned int 
 10718 ;;  counter         1    6[COMRAM] unsigned char 
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  2    0[COMRAM] unsigned int 
 10721 ;; Registers used:
 10722 ;;		wreg, status,2, status,0
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10731 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10732 ;;Total ram usage:        7 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; This function calls:
 10735 ;;		Nothing
 10736 ;; This function is called by:
 10737 ;;		_sprintf
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text53
 10742  00D646                     __ptext53:
 10743                           	opt stack 0
 10744  00D646                     ___lwdiv:
 10745                           	opt stack 26
 10746                           
 10747                           ;incstack = 0
 10748  00D646  0E00               	movlw	0
 10749  00D648  6E06               	movwf	___lwdiv@quotient+1,c
 10750  00D64A  0E00               	movlw	0
 10751  00D64C  6E05               	movwf	___lwdiv@quotient,c
 10752  00D64E  5003               	movf	___lwdiv@divisor,w,c
 10753  00D650  1004               	iorwf	___lwdiv@divisor+1,w,c
 10754  00D652  B4D8               	btfsc	status,2,c
 10755  00D654  D01C               	goto	l1082
 10756  00D656  0E01               	movlw	1
 10757  00D658  6E07               	movwf	___lwdiv@counter,c
 10758  00D65A  D004               	goto	l1077
 10759  00D65C  90D8               	bcf	status,0,c
 10760  00D65E  3603               	rlcf	___lwdiv@divisor,f,c
 10761  00D660  3604               	rlcf	___lwdiv@divisor+1,f,c
 10762  00D662  2A07               	incf	___lwdiv@counter,f,c
 10763  00D664                     l1077:
 10764  00D664  AE04               	btfss	___lwdiv@divisor+1,7,c
 10765  00D666  D7FA               	goto	l1078
 10766  00D668                     u3860:
 10767  00D668  90D8               	bcf	status,0,c
 10768  00D66A  3605               	rlcf	___lwdiv@quotient,f,c
 10769  00D66C  3606               	rlcf	___lwdiv@quotient+1,f,c
 10770  00D66E  5003               	movf	___lwdiv@divisor,w,c
 10771  00D670  5C01               	subwf	___lwdiv@dividend,w,c
 10772  00D672  5004               	movf	___lwdiv@divisor+1,w,c
 10773  00D674  5802               	subwfb	___lwdiv@dividend+1,w,c
 10774  00D676  A0D8               	btfss	status,0,c
 10775  00D678  D005               	goto	l1081
 10776  00D67A  5003               	movf	___lwdiv@divisor,w,c
 10777  00D67C  5E01               	subwf	___lwdiv@dividend,f,c
 10778  00D67E  5004               	movf	___lwdiv@divisor+1,w,c
 10779  00D680  5A02               	subwfb	___lwdiv@dividend+1,f,c
 10780  00D682  8005               	bsf	___lwdiv@quotient,0,c
 10781  00D684                     l1081:
 10782  00D684  90D8               	bcf	status,0,c
 10783  00D686  3204               	rrcf	___lwdiv@divisor+1,f,c
 10784  00D688  3203               	rrcf	___lwdiv@divisor,f,c
 10785  00D68A  2E07               	decfsz	___lwdiv@counter,f,c
 10786  00D68C  D7ED               	goto	u3860
 10787  00D68E                     l1082:
 10788  00D68E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10789  00D692  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10790  00D696  0012               	return		;funcret
 10791  00D698                     __end_of___lwdiv:
 10792                           	opt stack 0
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           intcon	equ	0xFF2
 10800                           postinc0	equ	0xFEE
 10801                           wreg	equ	0xFE8
 10802                           postinc1	equ	0xFE6
 10803                           postdec1	equ	0xFE5
 10804                           fsr1h	equ	0xFE2
 10805                           fsr1l	equ	0xFE1
 10806                           indf2	equ	0xFDF
 10807                           postinc2	equ	0xFDE
 10808                           postdec2	equ	0xFDD
 10809                           fsr2h	equ	0xFDA
 10810                           fsr2l	equ	0xFD9
 10811                           status	equ	0xFD8
 10812                           
 10813 ;; *************** function _lcd_putrs *****************
 10814 ;; Defined at:
 10815 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
 10818 ;;		 -> STR_30(17), STR_29(21), STR_28(17), STR_27(17), 
 10819 ;;		 -> STR_26(9), STR_25(8), STR_24(9), STR_23(8), 
 10820 ;;		 -> STR_22(9), STR_21(9), STR_20(17), STR_19(17), 
 10821 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(15), 
 10822 ;;		 -> STR_14(8), STR_12(9), STR_11(9), STR_10(9), 
 10823 ;;		 -> STR_9(7), buffer2(20), 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  1    wreg      void 
 10828 ;; Registers used:
 10829 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;Total ram usage:        2 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:    4
 10842 ;; This function calls:
 10843 ;;		_lcd_putc
 10844 ;; This function is called by:
 10845 ;;		_setDiaMesAnio
 10846 ;;		_setHoraMinutoSegundo
 10847 ;;		_titila_texto_insert_password
 10848 ;;		_guarda_numero_ingresado
 10849 ;;		_mostrar_presionar_a
 10850 ;;		_resetear_pantalla_ingresar_contrasenia
 10851 ;;		_titila_alarma_activada
 10852 ;;		_activar_alarma
 10853 ;;		_titila_opcion
 10854 ;;		_ir_a_pantalla_edicion
 10855 ;;		_ir_a_pantalla_ingresar_contrasenia
 10856 ;;		_ir_a_pantalla_editar_contrasenia
 10857 ;;		_covertir_valores_de_array_a_escala_decimal
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           	psect	text54
 10862  00D5F4                     __ptext54:
 10863                           	opt stack 0
 10864  00D5F4                     _lcd_putrs:
 10865                           	opt stack 23
 10866                           
 10867                           ;unmc_lcd_216.c: 223: while(*ptr){
 10868                           
 10869                           ;incstack = 0
 10870  00D5F4  D014               	goto	l509
 10871  00D5F6                     
 10872                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
 10873  00D5F6  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 10874  00D5FA  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 10875  00D5FE  6AF8               	clrf	tblptru,c
 10876  00D600  0E0E               	movlw	(high __ramtop+-1)
 10877  00D602  64F7               	cpfsgt	tblptrh,c
 10878  00D604  D003               	bra	u4397
 10879  00D606  0008               	tblrd		*
 10880  00D608  50F5               	movf	tablat,w,c
 10881  00D60A  D005               	bra	u4390
 10882  00D60C                     u4397:
 10883  00D60C  CFF6 FFE9          	movff	tblptrl,fsr0l
 10884  00D610  CFF7 FFEA          	movff	tblptrh,fsr0h
 10885  00D614  50EF               	movf	indf0,w,c
 10886  00D616                     u4390:
 10887  00D616  EC61  F06A         	call	_lcd_putc
 10888  00D61A  4A09               	infsnz	lcd_putrs@ptr,f,c
 10889  00D61C  2A0A               	incf	lcd_putrs@ptr+1,f,c
 10890  00D61E                     l509:
 10891  00D61E  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 10892  00D622  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 10893  00D626  6AF8               	clrf	tblptru,c
 10894  00D628  0E0E               	movlw	(high __ramtop+-1)
 10895  00D62A  64F7               	cpfsgt	tblptrh,c
 10896  00D62C  D003               	bra	u4407
 10897  00D62E  0008               	tblrd		*
 10898  00D630  50F5               	movf	tablat,w,c
 10899  00D632  D005               	bra	u4400
 10900  00D634                     u4407:
 10901  00D634  CFF6 FFE9          	movff	tblptrl,fsr0l
 10902  00D638  CFF7 FFEA          	movff	tblptrh,fsr0h
 10903  00D63C  50EF               	movf	indf0,w,c
 10904  00D63E                     u4400:
 10905  00D63E  0900               	iorlw	0
 10906  00D640  B4D8               	btfsc	status,2,c
 10907  00D642  0012               	return	
 10908  00D644  D7D8               	goto	l510
 10909  00D646                     __end_of_lcd_putrs:
 10910                           	opt stack 0
 10911                           tblptru	equ	0xFF8
 10912                           tblptrh	equ	0xFF7
 10913                           tblptrl	equ	0xFF6
 10914                           tablat	equ	0xFF5
 10915                           prodh	equ	0xFF4
 10916                           prodl	equ	0xFF3
 10917                           intcon	equ	0xFF2
 10918                           indf0	equ	0xFEF
 10919                           postinc0	equ	0xFEE
 10920                           fsr0h	equ	0xFEA
 10921                           fsr0l	equ	0xFE9
 10922                           wreg	equ	0xFE8
 10923                           postinc1	equ	0xFE6
 10924                           postdec1	equ	0xFE5
 10925                           fsr1h	equ	0xFE2
 10926                           fsr1l	equ	0xFE1
 10927                           indf2	equ	0xFDF
 10928                           postinc2	equ	0xFDE
 10929                           postdec2	equ	0xFDD
 10930                           fsr2h	equ	0xFDA
 10931                           fsr2l	equ	0xFD9
 10932                           status	equ	0xFD8
 10933                           
 10934 ;; *************** function _lcd_putc *****************
 10935 ;; Defined at:
 10936 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;  c               1    wreg     unsigned char 
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;  c               1    7[COMRAM] unsigned char 
 10941 ;; Return value:  Size  Location     Type
 10942 ;;                  1    wreg      void 
 10943 ;; Registers used:
 10944 ;;		wreg, status,2, status,0, cstack
 10945 ;; Tracked objects:
 10946 ;;		On entry : 0/0
 10947 ;;		On exit  : 0/0
 10948 ;;		Unchanged: 0/0
 10949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10954 ;;Total ram usage:        1 bytes
 10955 ;; Hardware stack levels used:    1
 10956 ;; Hardware stack levels required when called:    3
 10957 ;; This function calls:
 10958 ;;		_lcd_gotoxy
 10959 ;;		_lcd_send_byte
 10960 ;; This function is called by:
 10961 ;;		_lcd_putrs
 10962 ;;		_lcd_puts
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           	psect	text55
 10967  00D4C2                     __ptext55:
 10968                           	opt stack 0
 10969  00D4C2                     _lcd_putc:
 10970                           	opt stack 23
 10971                           
 10972                           ;incstack = 0
 10973                           ;lcd_putc@c stored from wreg
 10974  00D4C2  6E08               	movwf	lcd_putc@c,c
 10975                           
 10976                           ;unmc_lcd_216.c: 173: switch(c){
 10977  00D4C4  D018               	goto	l488
 10978  00D4C6                     
 10979                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
 10980  00D4C6  0E01               	movlw	1
 10981  00D4C8  6E03               	movwf	lcd_send_byte@n,c
 10982  00D4CA  0E00               	movlw	0
 10983  00D4CC  ECEB  F069         	call	_lcd_send_byte
 10984                           
 10985                           ;unmc_lcd_216.c: 176: break;
 10986  00D4D0  0012               	return	
 10987  00D4D2                     
 10988                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
 10989  00D4D2  0E02               	movlw	2
 10990  00D4D4  6E05               	movwf	lcd_gotoxy@y,c
 10991  00D4D6  0E01               	movlw	1
 10992  00D4D8  ECA3  F069         	call	_lcd_gotoxy
 10993                           
 10994                           ;unmc_lcd_216.c: 179: break;
 10995  00D4DC  0012               	return	
 10996  00D4DE                     
 10997                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
 10998  00D4DE  0E10               	movlw	16
 10999  00D4E0  6E03               	movwf	lcd_send_byte@n,c
 11000  00D4E2  0E00               	movlw	0
 11001  00D4E4  ECEB  F069         	call	_lcd_send_byte
 11002                           
 11003                           ;unmc_lcd_216.c: 182: break;
 11004  00D4E8  0012               	return	
 11005  00D4EA                     
 11006                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
 11007  00D4EA  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
 11008  00D4EE  0E01               	movlw	1
 11009  00D4F0  ECEB  F069         	call	_lcd_send_byte
 11010                           
 11011                           ;unmc_lcd_216.c: 186: }
 11012                           
 11013                           ;unmc_lcd_216.c: 185: break;
 11014  00D4F4  0012               	return	
 11015  00D4F6                     l488:
 11016  00D4F6  5008               	movf	lcd_putc@c,w,c
 11017                           
 11018                           ; Switch size 1, requested type "space"
 11019                           ; Number of cases is 3, Range of values is 8 to 12
 11020                           ; switch strategies available:
 11021                           ; Name         Instructions Cycles
 11022                           ; simple_byte           10     6 (average)
 11023                           ;	Chosen strategy is simple_byte
 11024  00D4F8  0A08               	xorlw	8	; case 8
 11025  00D4FA  B4D8               	btfsc	status,2,c
 11026  00D4FC  D7F0               	goto	l492
 11027  00D4FE  0A02               	xorlw	2	; case 10
 11028  00D500  B4D8               	btfsc	status,2,c
 11029  00D502  D7E7               	goto	l491
 11030  00D504  0A06               	xorlw	6	; case 12
 11031  00D506  B4D8               	btfsc	status,2,c
 11032  00D508  D7DE               	goto	l489
 11033  00D50A  D7EF               	goto	l493
 11034  00D50C                     __end_of_lcd_putc:
 11035                           	opt stack 0
 11036                           tblptru	equ	0xFF8
 11037                           tblptrh	equ	0xFF7
 11038                           tblptrl	equ	0xFF6
 11039                           tablat	equ	0xFF5
 11040                           prodh	equ	0xFF4
 11041                           prodl	equ	0xFF3
 11042                           intcon	equ	0xFF2
 11043                           indf0	equ	0xFEF
 11044                           postinc0	equ	0xFEE
 11045                           fsr0h	equ	0xFEA
 11046                           fsr0l	equ	0xFE9
 11047                           wreg	equ	0xFE8
 11048                           postinc1	equ	0xFE6
 11049                           postdec1	equ	0xFE5
 11050                           fsr1h	equ	0xFE2
 11051                           fsr1l	equ	0xFE1
 11052                           indf2	equ	0xFDF
 11053                           postinc2	equ	0xFDE
 11054                           postdec2	equ	0xFDD
 11055                           fsr2h	equ	0xFDA
 11056                           fsr2l	equ	0xFD9
 11057                           status	equ	0xFD8
 11058                           
 11059 ;; *************** function _lcd_gotoxy *****************
 11060 ;; Defined at:
 11061 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11062 ;; Parameters:    Size  Location     Type
 11063 ;;  x               1    wreg     unsigned char 
 11064 ;;  y               1    4[COMRAM] unsigned char 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;  x               1    5[COMRAM] unsigned char 
 11067 ;;  address         1    6[COMRAM] unsigned char 
 11068 ;; Return value:  Size  Location     Type
 11069 ;;                  1    wreg      void 
 11070 ;; Registers used:
 11071 ;;		wreg, status,2, status,0, cstack
 11072 ;; Tracked objects:
 11073 ;;		On entry : 0/0
 11074 ;;		On exit  : 0/0
 11075 ;;		Unchanged: 0/0
 11076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11077 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11080 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11081 ;;Total ram usage:        3 bytes
 11082 ;; Hardware stack levels used:    1
 11083 ;; Hardware stack levels required when called:    2
 11084 ;; This function calls:
 11085 ;;		_lcd_send_byte
 11086 ;; This function is called by:
 11087 ;;		_setDiaMesAnio
 11088 ;;		_setHoraMinutoSegundo
 11089 ;;		_titila_texto_insert_password
 11090 ;;		_guarda_numero_ingresado
 11091 ;;		_mostrar_presionar_a
 11092 ;;		_resetear_pantalla_ingresar_contrasenia
 11093 ;;		_titila_alarma_activada
 11094 ;;		_activar_alarma
 11095 ;;		_titila_opcion
 11096 ;;		_ir_a_pantalla_edicion
 11097 ;;		_ir_a_pantalla_ingresar_contrasenia
 11098 ;;		_ir_a_pantalla_editar_contrasenia
 11099 ;;		_covertir_valores_de_array_a_escala_decimal
 11100 ;;		_lcd_putc
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text56
 11105  00D346                     __ptext56:
 11106                           	opt stack 0
 11107  00D346                     _lcd_gotoxy:
 11108                           	opt stack 23
 11109                           
 11110                           ;incstack = 0
 11111                           ;lcd_gotoxy@x stored from wreg
 11112  00D346  6E06               	movwf	lcd_gotoxy@x,c
 11113                           
 11114                           ;unmc_lcd_216.c: 159: int8 address;
 11115                           ;unmc_lcd_216.c: 161: if(y != 1)
 11116  00D348  0405               	decf	lcd_gotoxy@y,w,c
 11117  00D34A  B4D8               	btfsc	status,2,c
 11118  00D34C  D002               	goto	l483
 11119                           
 11120                           ;unmc_lcd_216.c: 162: address = 0x40;
 11121  00D34E  0E40               	movlw	64
 11122  00D350  D001               	goto	L3
 11123  00D352                     l483:
 11124                           
 11125                           ;unmc_lcd_216.c: 163: else
 11126                           ;unmc_lcd_216.c: 164: address=0;
 11127  00D352  0E00               	movlw	0
 11128  00D354                     L3:
 11129  00D354  6E07               	movwf	lcd_gotoxy@address,c
 11130                           
 11131                           ;unmc_lcd_216.c: 166: address += x-1;
 11132  00D356  0406               	decf	lcd_gotoxy@x,w,c
 11133  00D358  2607               	addwf	lcd_gotoxy@address,f,c
 11134                           
 11135                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
 11136  00D35A  5007               	movf	lcd_gotoxy@address,w,c
 11137  00D35C  0980               	iorlw	128
 11138  00D35E  6E03               	movwf	lcd_send_byte@n,c
 11139  00D360  0E00               	movlw	0
 11140  00D362  ECEB  F069         	call	_lcd_send_byte
 11141  00D366  0012               	return		;funcret
 11142  00D368                     __end_of_lcd_gotoxy:
 11143                           	opt stack 0
 11144                           tblptru	equ	0xFF8
 11145                           tblptrh	equ	0xFF7
 11146                           tblptrl	equ	0xFF6
 11147                           tablat	equ	0xFF5
 11148                           prodh	equ	0xFF4
 11149                           prodl	equ	0xFF3
 11150                           intcon	equ	0xFF2
 11151                           indf0	equ	0xFEF
 11152                           postinc0	equ	0xFEE
 11153                           fsr0h	equ	0xFEA
 11154                           fsr0l	equ	0xFE9
 11155                           wreg	equ	0xFE8
 11156                           postinc1	equ	0xFE6
 11157                           postdec1	equ	0xFE5
 11158                           fsr1h	equ	0xFE2
 11159                           fsr1l	equ	0xFE1
 11160                           indf2	equ	0xFDF
 11161                           postinc2	equ	0xFDE
 11162                           postdec2	equ	0xFDD
 11163                           fsr2h	equ	0xFDA
 11164                           fsr2l	equ	0xFD9
 11165                           status	equ	0xFD8
 11166                           
 11167 ;; *************** function _lcd_send_byte *****************
 11168 ;; Defined at:
 11169 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  address         1    wreg     unsigned char 
 11172 ;;  n               1    2[COMRAM] unsigned char 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;  address         1    3[COMRAM] unsigned char 
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  1    wreg      void 
 11177 ;; Registers used:
 11178 ;;		wreg, status,2, status,0, cstack
 11179 ;; Tracked objects:
 11180 ;;		On entry : 0/0
 11181 ;;		On exit  : 0/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11184 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11188 ;;Total ram usage:        2 bytes
 11189 ;; Hardware stack levels used:    1
 11190 ;; Hardware stack levels required when called:    1
 11191 ;; This function calls:
 11192 ;;		_Delay100TCYx
 11193 ;;		_lcd_send_nibble
 11194 ;; This function is called by:
 11195 ;;		_lcd_init
 11196 ;;		_lcd_gotoxy
 11197 ;;		_lcd_putc
 11198 ;;		_lcd_comand
 11199 ;;		_lcd_setcursor_vb
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text57
 11204  00D3D6                     __ptext57:
 11205                           	opt stack 0
 11206  00D3D6                     _lcd_send_byte:
 11207                           	opt stack 24
 11208                           
 11209                           ;incstack = 0
 11210                           ;lcd_send_byte@address stored from wreg
 11211  00D3D6  6E04               	movwf	lcd_send_byte@address,c
 11212                           
 11213                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
 11214  00D3D8  968A               	bcf	3978,3,c	;volatile
 11215                           
 11216                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
 11217  00D3DA  0E02               	movlw	2
 11218  00D3DC  EC65  F069         	call	_Delay100TCYx
 11219                           
 11220                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
 11221  00D3E0  9893               	bcf	3987,4,c	;volatile
 11222                           
 11223                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
 11224  00D3E2  9A93               	bcf	3987,5,c	;volatile
 11225                           
 11226                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
 11227  00D3E4  9C93               	bcf	3987,6,c	;volatile
 11228                           
 11229                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
 11230  00D3E6  9E93               	bcf	3987,7,c	;volatile
 11231                           
 11232                           ;unmc_lcd_216.c: 101: if(address)
 11233  00D3E8  5004               	movf	lcd_send_byte@address,w,c
 11234  00D3EA  B4D8               	btfsc	status,2,c
 11235  00D3EC  D002               	goto	l471
 11236                           
 11237                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
 11238  00D3EE  868A               	bsf	3978,3,c	;volatile
 11239  00D3F0  D001               	goto	l472
 11240  00D3F2                     l471:
 11241                           
 11242                           ;unmc_lcd_216.c: 103: else
 11243                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
 11244  00D3F2  968A               	bcf	3978,3,c	;volatile
 11245  00D3F4                     l472:
 11246                           
 11247                           ;unmc_lcd_216.c: 106: __nop();
 11248  00D3F4  F000               	nop	
 11249                           
 11250                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
 11251  00D3F6  3803               	swapf	lcd_send_byte@n,w,c
 11252  00D3F8  0B0F               	andlw	15
 11253  00D3FA  EC11  F06C         	call	_lcd_send_nibble
 11254                           
 11255                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
 11256  00D3FE  5003               	movf	lcd_send_byte@n,w,c
 11257  00D400  0B0F               	andlw	15
 11258  00D402  EC11  F06C         	call	_lcd_send_nibble
 11259  00D406  0012               	return		;funcret
 11260  00D408                     __end_of_lcd_send_byte:
 11261                           	opt stack 0
 11262                           tblptru	equ	0xFF8
 11263                           tblptrh	equ	0xFF7
 11264                           tblptrl	equ	0xFF6
 11265                           tablat	equ	0xFF5
 11266                           prodh	equ	0xFF4
 11267                           prodl	equ	0xFF3
 11268                           intcon	equ	0xFF2
 11269                           indf0	equ	0xFEF
 11270                           postinc0	equ	0xFEE
 11271                           fsr0h	equ	0xFEA
 11272                           fsr0l	equ	0xFE9
 11273                           wreg	equ	0xFE8
 11274                           postinc1	equ	0xFE6
 11275                           postdec1	equ	0xFE5
 11276                           fsr1h	equ	0xFE2
 11277                           fsr1l	equ	0xFE1
 11278                           indf2	equ	0xFDF
 11279                           postinc2	equ	0xFDE
 11280                           postdec2	equ	0xFDD
 11281                           fsr2h	equ	0xFDA
 11282                           fsr2l	equ	0xFD9
 11283                           status	equ	0xFD8
 11284                           
 11285 ;; *************** function _lcd_send_nibble *****************
 11286 ;; Defined at:
 11287 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;  nibble          1    wreg     unsigned char 
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;  nibble          1    1[COMRAM] unsigned char 
 11292 ;; Return value:  Size  Location     Type
 11293 ;;                  1    wreg      void 
 11294 ;; Registers used:
 11295 ;;		wreg, status,2, status,0
 11296 ;; Tracked objects:
 11297 ;;		On entry : 0/0
 11298 ;;		On exit  : 0/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11302 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;Total ram usage:        2 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; This function calls:
 11308 ;;		Nothing
 11309 ;; This function is called by:
 11310 ;;		_lcd_send_byte
 11311 ;;		_lcd_init
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text58
 11316  00D822                     __ptext58:
 11317                           	opt stack 0
 11318  00D822                     _lcd_send_nibble:
 11319                           	opt stack 24
 11320                           
 11321                           ;incstack = 0
 11322                           ;lcd_send_nibble@nibble stored from wreg
 11323  00D822  6E02               	movwf	lcd_send_nibble@nibble,c
 11324                           
 11325                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
 11326  00D824  A002               	btfss	lcd_send_nibble@nibble,0,c
 11327  00D826  D003               	goto	u3150
 11328  00D828  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11329  00D82A  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11330  00D82C  D001               	goto	u3168
 11331  00D82E                     u3150:
 11332  00D82E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11333  00D830                     u3168:
 11334  00D830  3A01               	swapf	??_lcd_send_nibble,f,c
 11335  00D832  508A               	movf	3978,w,c	;volatile
 11336  00D834  1801               	xorwf	??_lcd_send_nibble,w,c
 11337  00D836  0BEF               	andlw	-17
 11338  00D838  1801               	xorwf	??_lcd_send_nibble,w,c
 11339  00D83A  6E8A               	movwf	3978,c	;volatile
 11340                           
 11341                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
 11342  00D83C  A202               	btfss	lcd_send_nibble@nibble,1,c
 11343  00D83E  D003               	goto	u3170
 11344  00D840  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11345  00D842  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11346  00D844  D001               	goto	u3188
 11347  00D846                     u3170:
 11348  00D846  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11349  00D848                     u3188:
 11350  00D848  3A01               	swapf	??_lcd_send_nibble,f,c
 11351  00D84A  4601               	rlncf	??_lcd_send_nibble,f,c
 11352  00D84C  508A               	movf	3978,w,c	;volatile
 11353  00D84E  1801               	xorwf	??_lcd_send_nibble,w,c
 11354  00D850  0BDF               	andlw	-33
 11355  00D852  1801               	xorwf	??_lcd_send_nibble,w,c
 11356  00D854  6E8A               	movwf	3978,c	;volatile
 11357                           
 11358                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
 11359  00D856  A402               	btfss	lcd_send_nibble@nibble,2,c
 11360  00D858  D003               	goto	u3190
 11361  00D85A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11362  00D85C  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11363  00D85E  D001               	goto	u3208
 11364  00D860                     u3190:
 11365  00D860  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11366  00D862                     u3208:
 11367  00D862  3A01               	swapf	??_lcd_send_nibble,f,c
 11368  00D864  4601               	rlncf	??_lcd_send_nibble,f,c
 11369  00D866  4601               	rlncf	??_lcd_send_nibble,f,c
 11370  00D868  508A               	movf	3978,w,c	;volatile
 11371  00D86A  1801               	xorwf	??_lcd_send_nibble,w,c
 11372  00D86C  0BBF               	andlw	-65
 11373  00D86E  1801               	xorwf	??_lcd_send_nibble,w,c
 11374  00D870  6E8A               	movwf	3978,c	;volatile
 11375                           
 11376                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
 11377  00D872  A602               	btfss	lcd_send_nibble@nibble,3,c
 11378  00D874  D003               	goto	u3210
 11379  00D876  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11380  00D878  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11381  00D87A  D001               	goto	u3228
 11382  00D87C                     u3210:
 11383  00D87C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11384  00D87E                     u3228:
 11385  00D87E  3201               	rrcf	??_lcd_send_nibble,f,c
 11386  00D880  3201               	rrcf	??_lcd_send_nibble,f,c
 11387  00D882  508A               	movf	3978,w,c	;volatile
 11388  00D884  1801               	xorwf	??_lcd_send_nibble,w,c
 11389  00D886  0B7F               	andlw	-129
 11390  00D888  1801               	xorwf	??_lcd_send_nibble,w,c
 11391  00D88A  6E8A               	movwf	3978,c	;volatile
 11392                           
 11393                           ;unmc_lcd_216.c: 32: __nop();
 11394  00D88C  F000               	nop	
 11395                           
 11396                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
 11397  00D88E  848A               	bsf	3978,2,c	;volatile
 11398                           
 11399                           ;unmc_lcd_216.c: 34: __nop();__nop();
 11400  00D890  F000               	nop	
 11401  00D892  F000               	nop	
 11402                           
 11403                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
 11404  00D894  948A               	bcf	3978,2,c	;volatile
 11405  00D896  0012               	return		;funcret
 11406  00D898                     __end_of_lcd_send_nibble:
 11407                           	opt stack 0
 11408                           tblptru	equ	0xFF8
 11409                           tblptrh	equ	0xFF7
 11410                           tblptrl	equ	0xFF6
 11411                           tablat	equ	0xFF5
 11412                           prodh	equ	0xFF4
 11413                           prodl	equ	0xFF3
 11414                           intcon	equ	0xFF2
 11415                           indf0	equ	0xFEF
 11416                           postinc0	equ	0xFEE
 11417                           fsr0h	equ	0xFEA
 11418                           fsr0l	equ	0xFE9
 11419                           wreg	equ	0xFE8
 11420                           postinc1	equ	0xFE6
 11421                           postdec1	equ	0xFE5
 11422                           fsr1h	equ	0xFE2
 11423                           fsr1l	equ	0xFE1
 11424                           indf2	equ	0xFDF
 11425                           postinc2	equ	0xFDE
 11426                           postdec2	equ	0xFDD
 11427                           fsr2h	equ	0xFDA
 11428                           fsr2l	equ	0xFD9
 11429                           status	equ	0xFD8
 11430                           
 11431 ;; *************** function _Delay100TCYx *****************
 11432 ;; Defined at:
 11433 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  unit            1    wreg     unsigned char 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  unit            1    0[COMRAM] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11451 ;;Total ram usage:        1 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; This function calls:
 11454 ;;		Nothing
 11455 ;; This function is called by:
 11456 ;;		_lcd_send_byte
 11457 ;; This function uses a non-reentrant model
 11458 ;;
 11459                           
 11460                           	psect	text59
 11461  00D2CA                     __ptext59:
 11462                           	opt stack 0
 11463  00D2CA                     _Delay100TCYx:
 11464                           	opt stack 24
 11465                           
 11466                           ;incstack = 0
 11467                           ;Delay100TCYx@unit stored from wreg
 11468  00D2CA  6E01               	movwf	Delay100TCYx@unit,c
 11469  00D2CC                     l849:
 11470  00D2CC  0E21               	movlw	33
 11471  00D2CE                     u6587:
 11472  00D2CE  2EE8               	decfsz	wreg,f,c
 11473  00D2D0  D7FE               	bra	u6587
 11474  00D2D2  F000               	nop	
 11475  00D2D4  2E01               	decfsz	Delay100TCYx@unit,f,c
 11476  00D2D6  D7FA               	goto	l849
 11477  00D2D8  0012               	return	
 11478  00D2DA                     __end_of_Delay100TCYx:
 11479                           	opt stack 0
 11480                           tblptru	equ	0xFF8
 11481                           tblptrh	equ	0xFF7
 11482                           tblptrl	equ	0xFF6
 11483                           tablat	equ	0xFF5
 11484                           prodh	equ	0xFF4
 11485                           prodl	equ	0xFF3
 11486                           intcon	equ	0xFF2
 11487                           indf0	equ	0xFEF
 11488                           postinc0	equ	0xFEE
 11489                           fsr0h	equ	0xFEA
 11490                           fsr0l	equ	0xFE9
 11491                           wreg	equ	0xFE8
 11492                           postinc1	equ	0xFE6
 11493                           postdec1	equ	0xFE5
 11494                           fsr1h	equ	0xFE2
 11495                           fsr1l	equ	0xFE1
 11496                           indf2	equ	0xFDF
 11497                           postinc2	equ	0xFDE
 11498                           postdec2	equ	0xFDD
 11499                           fsr2h	equ	0xFDA
 11500                           fsr2l	equ	0xFD9
 11501                           status	equ	0xFD8
 11502                           
 11503 ;; *************** function _cambiar_opcion *****************
 11504 ;; Defined at:
 11505 ;;		line 245 in file "main.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;		None
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;		None
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  1    wreg      void 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11523 ;;Total ram usage:        1 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; This function calls:
 11526 ;;		Nothing
 11527 ;; This function is called by:
 11528 ;;		_ir_a_pantalla_edicion
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text60
 11533  00DECE                     __ptext60:
 11534                           	opt stack 0
 11535  00DECE                     _cambiar_opcion:
 11536                           	opt stack 26
 11537                           
 11538                           ;main.c: 246: LATAbits.LATA0 = 0;
 11539                           
 11540                           ;incstack = 0
 11541  00DECE  9089               	bcf	3977,0,c	;volatile
 11542                           
 11543                           ;main.c: 247: LATAbits.LATA1 = 0;
 11544  00DED0  9289               	bcf	3977,1,c	;volatile
 11545                           
 11546                           ;main.c: 248: LATAbits.LATA2 = 1;
 11547  00DED2  8489               	bsf	3977,2,c	;volatile
 11548                           
 11549                           ;main.c: 249: LATAbits.LATA3 = 0;
 11550  00DED4  9689               	bcf	3977,3,c	;volatile
 11551                           
 11552                           ;main.c: 250: if (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
 11553  00DED6  B482               	btfsc	3970,2,c	;volatile
 11554  00DED8  A489               	btfss	3977,2,c	;volatile
 11555  00DEDA  D01D               	goto	u5750
 11556                           
 11557                           ;main.c: 251: if (boton_seleccionar == 3) {
 11558  00DEDC  0E03               	movlw	3
 11559  00DEDE  0100               	movlb	0	; () banked
 11560  00DEE0  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 11561  00DEE2  0100               	movlb	0	; () banked
 11562  00DEE4  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 11563  00DEE6  A4D8               	btfss	status,2,c
 11564  00DEE8  D006               	goto	l267
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;main.c: 252: boton_seleccionar = 0;
 11568  00DEEA  0E00               	movlw	0
 11569  00DEEC  0100               	movlb	0	; () banked
 11570  00DEEE  6F91               	movwf	(_boton_seleccionar+1)& (0+255),b
 11571  00DEF0  0E00               	movlw	0
 11572  00DEF2  6F90               	movwf	_boton_seleccionar& (0+255),b
 11573                           
 11574                           ;main.c: 253: } else {
 11575  00DEF4  D00C               	goto	l269
 11576  00DEF6                     l267:
 11577                           
 11578                           ; BSR set to: 0
 11579                           ;main.c: 254: boton_seleccionar++;
 11580                           
 11581                           ; BSR set to: 0
 11582  00DEF6  0100               	movlb	0	; () banked
 11583  00DEF8  4B90               	infsnz	_boton_seleccionar& (0+255),f,b
 11584  00DEFA  2B91               	incf	(_boton_seleccionar+1)& (0+255),f,b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;main.c: 255: }
 11588                           ;main.c: 256: while (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
 11589  00DEFC  D008               	goto	l269
 11590  00DEFE                     
 11591                           ;main.c: 257: _delay((unsigned long)((40)*(8000000/4000.0)));
 11592                           
 11593                           ; BSR set to: 0
 11594  00DEFE  0E68               	movlw	104
 11595  00DF00  6E01               	movwf	??_cambiar_opcion& (0+255),c
 11596  00DF02  0EE4               	movlw	228
 11597  00DF04                     u6597:
 11598  00DF04  2EE8               	decfsz	wreg,f,c
 11599  00DF06  D7FE               	bra	u6597
 11600  00DF08  2E01               	decfsz	??_cambiar_opcion& (0+255),f,c
 11601  00DF0A  D7FC               	bra	u6597
 11602  00DF0C  D000               	nop2	
 11603  00DF0E                     l269:
 11604  00DF0E  A482               	btfss	3970,2,c	;volatile
 11605  00DF10  D002               	goto	u5750
 11606  00DF12  B489               	btfsc	3977,2,c	;volatile
 11607  00DF14  D7F4               	goto	l270
 11608  00DF16                     u5750:
 11609                           
 11610                           ;main.c: 258: }
 11611                           ;main.c: 259: }
 11612                           ;main.c: 261: LATAbits.LATA0 = 0;
 11613  00DF16  9089               	bcf	3977,0,c	;volatile
 11614                           
 11615                           ;main.c: 262: LATAbits.LATA1 = 0;
 11616  00DF18  9289               	bcf	3977,1,c	;volatile
 11617                           
 11618                           ;main.c: 263: LATAbits.LATA2 = 0;
 11619  00DF1A  9489               	bcf	3977,2,c	;volatile
 11620                           
 11621                           ;main.c: 264: LATAbits.LATA3 = 1;
 11622  00DF1C  8689               	bsf	3977,3,c	;volatile
 11623                           
 11624                           ;main.c: 265: if (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
 11625  00DF1E  A482               	btfss	3970,2,c	;volatile
 11626  00DF20  0012               	return	
 11627  00DF22  A689               	btfss	3977,3,c	;volatile
 11628  00DF24  0012               	return	
 11629                           
 11630                           ;main.c: 266: if (boton_seleccionar == 0) {
 11631  00DF26  0100               	movlb	0	; () banked
 11632  00DF28  5190               	movf	_boton_seleccionar& (0+255),w,b
 11633  00DF2A  0100               	movlb	0	; () banked
 11634  00DF2C  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 11635  00DF2E  A4D8               	btfss	status,2,c
 11636  00DF30  D006               	goto	l275
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;main.c: 267: boton_seleccionar = 3;
 11640  00DF32  0E00               	movlw	0
 11641  00DF34  0100               	movlb	0	; () banked
 11642  00DF36  6F91               	movwf	(_boton_seleccionar+1)& (0+255),b
 11643  00DF38  0E03               	movlw	3
 11644  00DF3A  6F90               	movwf	_boton_seleccionar& (0+255),b
 11645                           
 11646                           ;main.c: 268: } else {
 11647  00DF3C  D00D               	goto	l277
 11648  00DF3E                     l275:
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;main.c: 269: boton_seleccionar--;
 11652                           
 11653                           ; BSR set to: 0
 11654  00DF3E  0100               	movlb	0	; () banked
 11655  00DF40  0790               	decf	_boton_seleccionar& (0+255),f,b
 11656  00DF42  A0D8               	btfss	status,0,c
 11657  00DF44  0791               	decf	(_boton_seleccionar+1)& (0+255),f,b
 11658                           
 11659                           ; BSR set to: 0
 11660                           ;main.c: 270: }
 11661                           ;main.c: 271: while (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
 11662  00DF46  D008               	goto	l277
 11663  00DF48                     
 11664                           ;main.c: 272: _delay((unsigned long)((40)*(8000000/4000.0)));
 11665                           
 11666                           ; BSR set to: 0
 11667  00DF48  0E68               	movlw	104
 11668  00DF4A  6E01               	movwf	??_cambiar_opcion& (0+255),c
 11669  00DF4C  0EE4               	movlw	228
 11670  00DF4E                     u6607:
 11671  00DF4E  2EE8               	decfsz	wreg,f,c
 11672  00DF50  D7FE               	bra	u6607
 11673  00DF52  2E01               	decfsz	??_cambiar_opcion& (0+255),f,c
 11674  00DF54  D7FC               	bra	u6607
 11675  00DF56  D000               	nop2	
 11676  00DF58                     l277:
 11677  00DF58  A482               	btfss	3970,2,c	;volatile
 11678  00DF5A  0012               	return	
 11679  00DF5C  A689               	btfss	3977,3,c	;volatile
 11680  00DF5E  0012               	return	
 11681  00DF60  D7F3               	goto	l278
 11682  00DF62                     __end_of_cambiar_opcion:
 11683                           	opt stack 0
 11684                           tblptru	equ	0xFF8
 11685                           tblptrh	equ	0xFF7
 11686                           tblptrl	equ	0xFF6
 11687                           tablat	equ	0xFF5
 11688                           prodh	equ	0xFF4
 11689                           prodl	equ	0xFF3
 11690                           intcon	equ	0xFF2
 11691                           indf0	equ	0xFEF
 11692                           postinc0	equ	0xFEE
 11693                           fsr0h	equ	0xFEA
 11694                           fsr0l	equ	0xFE9
 11695                           wreg	equ	0xFE8
 11696                           postinc1	equ	0xFE6
 11697                           postdec1	equ	0xFE5
 11698                           fsr1h	equ	0xFE2
 11699                           fsr1l	equ	0xFE1
 11700                           indf2	equ	0xFDF
 11701                           postinc2	equ	0xFDE
 11702                           postdec2	equ	0xFDD
 11703                           fsr2h	equ	0xFDA
 11704                           fsr2l	equ	0xFD9
 11705                           status	equ	0xFD8
 11706                           
 11707 ;; *************** function _Read_RTC *****************
 11708 ;; Defined at:
 11709 ;;		line 111 in file "../../headers\unmc_rtcc_01.h"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;		None
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11727 ;;Total ram usage:        0 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:    1
 11730 ;; This function calls:
 11731 ;;		_RtccReadDate
 11732 ;;		_RtccReadTime
 11733 ;; This function is called by:
 11734 ;;		_ir_a_pantalla_edicion
 11735 ;;		_main
 11736 ;; This function uses a non-reentrant model
 11737 ;;
 11738                           
 11739                           	psect	text61
 11740  00EC4E                     __ptext61:
 11741                           	opt stack 0
 11742  00EC4E                     _Read_RTC:
 11743                           	opt stack 25
 11744                           
 11745                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
 11746                           
 11747                           ;incstack = 0
 11748  00EC4E  0EC1               	movlw	low _RtccTime
 11749  00EC50  6E01               	movwf	RtccReadTime@pTm,c
 11750  00EC52  0E00               	movlw	high _RtccTime
 11751  00EC54  6E02               	movwf	RtccReadTime@pTm+1,c
 11752  00EC56  ECDA  F06B         	call	_RtccReadTime	;wreg free
 11753                           
 11754                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
 11755  00EC5A  0100               	movlb	0	; () banked
 11756  00EC5C  51C2               	movf	(_RtccTime+1)& (0+255),w,b
 11757  00EC5E  0B0F               	andlw	15
 11758  00EC60  0100               	movlb	0	; () banked
 11759  00EC62  6FFB               	movwf	_segundo_u& (0+255),b
 11760                           
 11761                           ; BSR set to: 0
 11762                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
 11763  00EC64  0100               	movlb	0	; () banked
 11764  00EC66  39C2               	swapf	(_RtccTime+1)& (0+255),w,b
 11765  00EC68  0B0F               	andlw	15
 11766  00EC6A  0B0F               	andlw	15
 11767  00EC6C  0100               	movlb	0	; () banked
 11768  00EC6E  6FFA               	movwf	_segundo_d& (0+255),b
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
 11772  00EC70  0100               	movlb	0	; () banked
 11773  00EC72  51C3               	movf	(_RtccTime+2)& (0+255),w,b
 11774  00EC74  0B0F               	andlw	15
 11775  00EC76  0100               	movlb	0	; () banked
 11776  00EC78  6FF9               	movwf	_minuto_u& (0+255),b
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
 11780  00EC7A  0100               	movlb	0	; () banked
 11781  00EC7C  39C3               	swapf	(_RtccTime+2)& (0+255),w,b
 11782  00EC7E  0B0F               	andlw	15
 11783  00EC80  0B0F               	andlw	15
 11784  00EC82  0100               	movlb	0	; () banked
 11785  00EC84  6FF8               	movwf	_minuto_d& (0+255),b
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
 11789  00EC86  0100               	movlb	0	; () banked
 11790  00EC88  51C4               	movf	(_RtccTime+3)& (0+255),w,b
 11791  00EC8A  0B0F               	andlw	15
 11792  00EC8C  0100               	movlb	0	; () banked
 11793  00EC8E  6FF7               	movwf	_hora_u& (0+255),b
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
 11797  00EC90  0100               	movlb	0	; () banked
 11798  00EC92  39C4               	swapf	(_RtccTime+3)& (0+255),w,b
 11799  00EC94  0B0F               	andlw	15
 11800  00EC96  0B0F               	andlw	15
 11801  00EC98  0100               	movlb	0	; () banked
 11802  00EC9A  6FF6               	movwf	_hora_d& (0+255),b
 11803                           
 11804                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
 11805  00EC9C  0EBD               	movlw	low _RtccDate
 11806  00EC9E  6E01               	movwf	RtccReadDate@pDt,c
 11807  00ECA0  0E00               	movlw	high _RtccDate
 11808  00ECA2  6E02               	movwf	RtccReadDate@pDt+1,c
 11809  00ECA4  EC90  F06E         	call	_RtccReadDate	;wreg free
 11810                           
 11811                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
 11812  00ECA8  0100               	movlb	0	; () banked
 11813  00ECAA  51BE               	movf	(_RtccDate+1)& (0+255),w,b
 11814  00ECAC  0B0F               	andlw	15
 11815  00ECAE  0100               	movlb	0	; () banked
 11816  00ECB0  6FF5               	movwf	_fecha_u& (0+255),b
 11817                           
 11818                           ; BSR set to: 0
 11819                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 11820  00ECB2  0100               	movlb	0	; () banked
 11821  00ECB4  39BE               	swapf	(_RtccDate+1)& (0+255),w,b
 11822  00ECB6  0B0F               	andlw	15
 11823  00ECB8  0B0F               	andlw	15
 11824  00ECBA  0100               	movlb	0	; () banked
 11825  00ECBC  6FF4               	movwf	_fecha_d& (0+255),b
 11826                           
 11827                           ; BSR set to: 0
 11828                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
 11829  00ECBE  0100               	movlb	0	; () banked
 11830  00ECC0  51BF               	movf	(_RtccDate+2)& (0+255),w,b
 11831  00ECC2  0B0F               	andlw	15
 11832  00ECC4  0100               	movlb	0	; () banked
 11833  00ECC6  6FF3               	movwf	_mes_u& (0+255),b
 11834                           
 11835                           ; BSR set to: 0
 11836                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 11837  00ECC8  0100               	movlb	0	; () banked
 11838  00ECCA  39BF               	swapf	(_RtccDate+2)& (0+255),w,b
 11839  00ECCC  0B0F               	andlw	15
 11840  00ECCE  0B0F               	andlw	15
 11841  00ECD0  0100               	movlb	0	; () banked
 11842  00ECD2  6FF2               	movwf	_mes_d& (0+255),b
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
 11846  00ECD4  C0BD  F0F1         	movff	_RtccDate,_dia_semana
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
 11850  00ECD8  0100               	movlb	0	; () banked
 11851  00ECDA  51C0               	movf	(_RtccDate+3)& (0+255),w,b
 11852  00ECDC  0B0F               	andlw	15
 11853  00ECDE  0100               	movlb	0	; () banked
 11854  00ECE0  6FF0               	movwf	_anio_u& (0+255),b
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
 11858  00ECE2  0100               	movlb	0	; () banked
 11859  00ECE4  39C0               	swapf	(_RtccDate+3)& (0+255),w,b
 11860  00ECE6  0B0F               	andlw	15
 11861  00ECE8  0B0F               	andlw	15
 11862  00ECEA  0100               	movlb	0	; () banked
 11863  00ECEC  6FEF               	movwf	_anio_d& (0+255),b
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
 11867  00ECEE  0100               	movlb	0	; () banked
 11868  00ECF0  51FA               	movf	_segundo_d& (0+255),w,b
 11869  00ECF2  0D0A               	mullw	10
 11870  00ECF4  0100               	movlb	0	; () banked
 11871  00ECF6  51FB               	movf	_segundo_u& (0+255),w,b
 11872  00ECF8  24F3               	addwf	prodl,w,c
 11873  00ECFA  0100               	movlb	0	; () banked
 11874  00ECFC  6F9A               	movwf	_segundo& (0+255),b
 11875  00ECFE  0100               	movlb	0	; () banked
 11876  00ED00  0E00               	movlw	0
 11877  00ED02  20F4               	addwfc	prodh,w,c
 11878  00ED04  0100               	movlb	0	; () banked
 11879  00ED06  6F9B               	movwf	(_segundo+1)& (0+255),b
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
 11883  00ED08  0100               	movlb	0	; () banked
 11884  00ED0A  51F8               	movf	_minuto_d& (0+255),w,b
 11885  00ED0C  0D0A               	mullw	10
 11886  00ED0E  0100               	movlb	0	; () banked
 11887  00ED10  51F9               	movf	_minuto_u& (0+255),w,b
 11888  00ED12  24F3               	addwf	prodl,w,c
 11889  00ED14  0100               	movlb	0	; () banked
 11890  00ED16  6FE3               	movwf	_minuto& (0+255),b
 11891  00ED18  0100               	movlb	0	; () banked
 11892  00ED1A  0E00               	movlw	0
 11893  00ED1C  20F4               	addwfc	prodh,w,c
 11894  00ED1E  0100               	movlb	0	; () banked
 11895  00ED20  6FE4               	movwf	(_minuto+1)& (0+255),b
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
 11899  00ED22  0100               	movlb	0	; () banked
 11900  00ED24  51F6               	movf	_hora_d& (0+255),w,b
 11901  00ED26  0D0A               	mullw	10
 11902  00ED28  0100               	movlb	0	; () banked
 11903  00ED2A  51F7               	movf	_hora_u& (0+255),w,b
 11904  00ED2C  24F3               	addwf	prodl,w,c
 11905  00ED2E  0100               	movlb	0	; () banked
 11906  00ED30  6FE5               	movwf	_hora& (0+255),b
 11907  00ED32  0100               	movlb	0	; () banked
 11908  00ED34  0E00               	movlw	0
 11909  00ED36  20F4               	addwfc	prodh,w,c
 11910  00ED38  0100               	movlb	0	; () banked
 11911  00ED3A  6FE6               	movwf	(_hora+1)& (0+255),b
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
 11915  00ED3C  0100               	movlb	0	; () banked
 11916  00ED3E  51F4               	movf	_fecha_d& (0+255),w,b
 11917  00ED40  0D0A               	mullw	10
 11918  00ED42  0100               	movlb	0	; () banked
 11919  00ED44  51F5               	movf	_fecha_u& (0+255),w,b
 11920  00ED46  24F3               	addwf	prodl,w,c
 11921  00ED48  0100               	movlb	0	; () banked
 11922  00ED4A  6FE7               	movwf	_dia& (0+255),b
 11923  00ED4C  0100               	movlb	0	; () banked
 11924  00ED4E  0E00               	movlw	0
 11925  00ED50  20F4               	addwfc	prodh,w,c
 11926  00ED52  0100               	movlb	0	; () banked
 11927  00ED54  6FE8               	movwf	(_dia+1)& (0+255),b
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
 11931  00ED56  C0F1  F0E9         	movff	_dia_semana,_diasem
 11932  00ED5A  0100               	movlb	0	; () banked
 11933  00ED5C  6BEA               	clrf	(_diasem+1)& (0+255),b
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
 11937  00ED5E  0100               	movlb	0	; () banked
 11938  00ED60  51F2               	movf	_mes_d& (0+255),w,b
 11939  00ED62  0D0A               	mullw	10
 11940  00ED64  0100               	movlb	0	; () banked
 11941  00ED66  51F3               	movf	_mes_u& (0+255),w,b
 11942  00ED68  24F3               	addwf	prodl,w,c
 11943  00ED6A  0100               	movlb	0	; () banked
 11944  00ED6C  6FEB               	movwf	_mes& (0+255),b
 11945  00ED6E  0100               	movlb	0	; () banked
 11946  00ED70  0E00               	movlw	0
 11947  00ED72  20F4               	addwfc	prodh,w,c
 11948  00ED74  0100               	movlb	0	; () banked
 11949  00ED76  6FEC               	movwf	(_mes+1)& (0+255),b
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
 11953  00ED78  0100               	movlb	0	; () banked
 11954  00ED7A  51EF               	movf	_anio_d& (0+255),w,b
 11955  00ED7C  0D0A               	mullw	10
 11956  00ED7E  0100               	movlb	0	; () banked
 11957  00ED80  51F0               	movf	_anio_u& (0+255),w,b
 11958  00ED82  24F3               	addwf	prodl,w,c
 11959  00ED84  0100               	movlb	0	; () banked
 11960  00ED86  6FED               	movwf	_anio& (0+255),b
 11961  00ED88  0100               	movlb	0	; () banked
 11962  00ED8A  0E00               	movlw	0
 11963  00ED8C  20F4               	addwfc	prodh,w,c
 11964  00ED8E  0100               	movlb	0	; () banked
 11965  00ED90  6FEE               	movwf	(_anio+1)& (0+255),b
 11966                           
 11967                           ; BSR set to: 0
 11968  00ED92  0012               	return		;funcret
 11969  00ED94                     __end_of_Read_RTC:
 11970                           	opt stack 0
 11971                           tblptru	equ	0xFF8
 11972                           tblptrh	equ	0xFF7
 11973                           tblptrl	equ	0xFF6
 11974                           tablat	equ	0xFF5
 11975                           prodh	equ	0xFF4
 11976                           prodl	equ	0xFF3
 11977                           intcon	equ	0xFF2
 11978                           indf0	equ	0xFEF
 11979                           postinc0	equ	0xFEE
 11980                           fsr0h	equ	0xFEA
 11981                           fsr0l	equ	0xFE9
 11982                           wreg	equ	0xFE8
 11983                           postinc1	equ	0xFE6
 11984                           postdec1	equ	0xFE5
 11985                           fsr1h	equ	0xFE2
 11986                           fsr1l	equ	0xFE1
 11987                           indf2	equ	0xFDF
 11988                           postinc2	equ	0xFDE
 11989                           postdec2	equ	0xFDD
 11990                           fsr2h	equ	0xFDA
 11991                           fsr2l	equ	0xFD9
 11992                           status	equ	0xFD8
 11993                           
 11994 ;; *************** function _RtccReadTime *****************
 11995 ;; Defined at:
 11996 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
 11997 ;; Parameters:    Size  Location     Type
 11998 ;;  pTm             2    0[COMRAM] PTR struct .
 11999 ;;		 -> RtccTime(4), 
 12000 ;; Auto vars:     Size  Location     Type
 12001 ;;  rTD0            8   10[COMRAM] struct .
 12002 ;;  rTD1            8    2[COMRAM] struct .
 12003 ;; Return value:  Size  Location     Type
 12004 ;;                  1    wreg      void 
 12005 ;; Registers used:
 12006 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12007 ;; Tracked objects:
 12008 ;;		On entry : 0/0
 12009 ;;		On exit  : 0/0
 12010 ;;		Unchanged: 0/0
 12011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12013 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12015 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12016 ;;Total ram usage:       18 bytes
 12017 ;; Hardware stack levels used:    1
 12018 ;; This function calls:
 12019 ;;		Nothing
 12020 ;; This function is called by:
 12021 ;;		_Read_RTC
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text62
 12026  00D7B4                     __ptext62:
 12027                           	opt stack 0
 12028  00D7B4                     _RtccReadTime:
 12029                           	opt stack 25
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;incstack = 0
 12033  00D7B4  0EFC               	movlw	252
 12034  00D7B6  010F               	movlb	15	; () banked
 12035  00D7B8  173F               	andwf	63,f,b	;volatile
 12036                           
 12037                           ; BSR set to: 15
 12038  00D7BA  010F               	movlb	15	; () banked
 12039  00D7BC  813F               	bsf	63,0,b	;volatile
 12040                           
 12041                           ; BSR set to: 15
 12042  00D7BE  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 12043                           
 12044                           ; BSR set to: 15
 12045  00D7C2  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 12046                           
 12047                           ; BSR set to: 15
 12048  00D7C6  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 12049                           
 12050                           ; BSR set to: 15
 12051  00D7CA  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 12052                           
 12053                           ; BSR set to: 15
 12054  00D7CE  0EFC               	movlw	252
 12055  00D7D0  010F               	movlb	15	; () banked
 12056  00D7D2  173F               	andwf	63,f,b	;volatile
 12057  00D7D4  010F               	movlb	15	; () banked
 12058  00D7D6  813F               	bsf	63,0,b	;volatile
 12059                           
 12060                           ; BSR set to: 15
 12061  00D7D8  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 12062                           
 12063                           ; BSR set to: 15
 12064  00D7DC  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 12065                           
 12066                           ; BSR set to: 15
 12067  00D7E0  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 12068                           
 12069                           ; BSR set to: 15
 12070  00D7E4  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 12071                           
 12072                           ; BSR set to: 15
 12073  00D7E8  5009               	movf	RtccReadTime@rTD1+6,w,c
 12074  00D7EA  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 12075  00D7EC  A4D8               	btfss	status,2,c
 12076  00D7EE  D7E2               	goto	_RtccReadTime
 12077                           
 12078                           ; BSR set to: 15
 12079                           
 12080                           ; BSR set to: 15
 12081  00D7F0  EE20 F003          	lfsr	2,3
 12082  00D7F4  5001               	movf	RtccReadTime@pTm,w,c
 12083  00D7F6  26D9               	addwf	fsr2l,f,c
 12084  00D7F8  5002               	movf	RtccReadTime@pTm+1,w,c
 12085  00D7FA  22DA               	addwfc	fsr2h,f,c
 12086  00D7FC  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 12087  00D800  EE20 F002          	lfsr	2,2
 12088  00D804  5001               	movf	RtccReadTime@pTm,w,c
 12089  00D806  26D9               	addwf	fsr2l,f,c
 12090  00D808  5002               	movf	RtccReadTime@pTm+1,w,c
 12091  00D80A  22DA               	addwfc	fsr2h,f,c
 12092  00D80C  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 12093  00D810  EE20 F001          	lfsr	2,1
 12094  00D814  5001               	movf	RtccReadTime@pTm,w,c
 12095  00D816  26D9               	addwf	fsr2l,f,c
 12096  00D818  5002               	movf	RtccReadTime@pTm+1,w,c
 12097  00D81A  22DA               	addwfc	fsr2h,f,c
 12098  00D81C  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 12099                           
 12100                           ; BSR set to: 15
 12101  00D820  0012               	return		;funcret
 12102  00D822                     __end_of_RtccReadTime:
 12103                           	opt stack 0
 12104                           tblptru	equ	0xFF8
 12105                           tblptrh	equ	0xFF7
 12106                           tblptrl	equ	0xFF6
 12107                           tablat	equ	0xFF5
 12108                           prodh	equ	0xFF4
 12109                           prodl	equ	0xFF3
 12110                           intcon	equ	0xFF2
 12111                           indf0	equ	0xFEF
 12112                           postinc0	equ	0xFEE
 12113                           fsr0h	equ	0xFEA
 12114                           fsr0l	equ	0xFE9
 12115                           wreg	equ	0xFE8
 12116                           postinc1	equ	0xFE6
 12117                           postdec1	equ	0xFE5
 12118                           fsr1h	equ	0xFE2
 12119                           fsr1l	equ	0xFE1
 12120                           indf2	equ	0xFDF
 12121                           postinc2	equ	0xFDE
 12122                           postdec2	equ	0xFDD
 12123                           fsr2h	equ	0xFDA
 12124                           fsr2l	equ	0xFD9
 12125                           status	equ	0xFD8
 12126                           
 12127 ;; *************** function _RtccReadDate *****************
 12128 ;; Defined at:
 12129 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
 12130 ;; Parameters:    Size  Location     Type
 12131 ;;  pDt             2    0[COMRAM] PTR struct .
 12132 ;;		 -> RtccDate(4), 
 12133 ;; Auto vars:     Size  Location     Type
 12134 ;;  rTD0            8   10[COMRAM] struct .
 12135 ;;  rTD1            8    2[COMRAM] struct .
 12136 ;; Return value:  Size  Location     Type
 12137 ;;                  1    wreg      void 
 12138 ;; Registers used:
 12139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12140 ;; Tracked objects:
 12141 ;;		On entry : 0/0
 12142 ;;		On exit  : 0/0
 12143 ;;		Unchanged: 0/0
 12144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12145 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12146 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12148 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12149 ;;Total ram usage:       18 bytes
 12150 ;; Hardware stack levels used:    1
 12151 ;; This function calls:
 12152 ;;		Nothing
 12153 ;; This function is called by:
 12154 ;;		_Read_RTC
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158                           	psect	text63
 12159  00DD20                     __ptext63:
 12160                           	opt stack 0
 12161  00DD20                     _RtccReadDate:
 12162                           	opt stack 25
 12163                           
 12164                           ; BSR set to: 15
 12165                           ;incstack = 0
 12166  00DD20  0EFC               	movlw	252
 12167  00DD22  010F               	movlb	15	; () banked
 12168  00DD24  173F               	andwf	63,f,b	;volatile
 12169  00DD26  0E03               	movlw	3
 12170  00DD28  010F               	movlb	15	; () banked
 12171  00DD2A  133F               	iorwf	63,f,b	;volatile
 12172                           
 12173                           ; BSR set to: 15
 12174  00DD2C  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 12175                           
 12176                           ; BSR set to: 15
 12177  00DD30  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 12178                           
 12179                           ; BSR set to: 15
 12180  00DD34  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 12181                           
 12182                           ; BSR set to: 15
 12183  00DD38  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 12184                           
 12185                           ; BSR set to: 15
 12186  00DD3C  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 12187                           
 12188                           ; BSR set to: 15
 12189  00DD40  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 12190  00DD44  0EFC               	movlw	252
 12191  00DD46  010F               	movlb	15	; () banked
 12192  00DD48  173F               	andwf	63,f,b	;volatile
 12193  00DD4A  0E03               	movlw	3
 12194  00DD4C  010F               	movlb	15	; () banked
 12195  00DD4E  133F               	iorwf	63,f,b	;volatile
 12196                           
 12197                           ; BSR set to: 15
 12198  00DD50  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 12199                           
 12200                           ; BSR set to: 15
 12201  00DD54  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 12202                           
 12203                           ; BSR set to: 15
 12204  00DD58  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 12205                           
 12206                           ; BSR set to: 15
 12207  00DD5C  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 12208                           
 12209                           ; BSR set to: 15
 12210  00DD60  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 12211                           
 12212                           ; BSR set to: 15
 12213  00DD64  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 12214  00DD68  5005               	movf	RtccReadDate@rTD1+2,w,c
 12215  00DD6A  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 12216  00DD6C  A4D8               	btfss	status,2,c
 12217  00DD6E  D7D8               	goto	_RtccReadDate
 12218                           
 12219                           ; BSR set to: 15
 12220                           
 12221                           ; BSR set to: 15
 12222  00DD70  EE20 F001          	lfsr	2,1
 12223  00DD74  5001               	movf	RtccReadDate@pDt,w,c
 12224  00DD76  26D9               	addwf	fsr2l,f,c
 12225  00DD78  5002               	movf	RtccReadDate@pDt+1,w,c
 12226  00DD7A  22DA               	addwfc	fsr2h,f,c
 12227  00DD7C  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 12228  00DD80  EE20 F002          	lfsr	2,2
 12229  00DD84  5001               	movf	RtccReadDate@pDt,w,c
 12230  00DD86  26D9               	addwf	fsr2l,f,c
 12231  00DD88  5002               	movf	RtccReadDate@pDt+1,w,c
 12232  00DD8A  22DA               	addwfc	fsr2h,f,c
 12233  00DD8C  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 12234                           
 12235                           ; BSR set to: 15
 12236  00DD90  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 12237  00DD94  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 12238  00DD98  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 12239                           
 12240                           ; BSR set to: 15
 12241  00DD9C  EE20 F003          	lfsr	2,3
 12242  00DDA0  5001               	movf	RtccReadDate@pDt,w,c
 12243  00DDA2  26D9               	addwf	fsr2l,f,c
 12244  00DDA4  5002               	movf	RtccReadDate@pDt+1,w,c
 12245  00DDA6  22DA               	addwfc	fsr2h,f,c
 12246  00DDA8  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 12247                           
 12248                           ; BSR set to: 15
 12249  00DDAC  0012               	return		;funcret
 12250  00DDAE                     __end_of_RtccReadDate:
 12251                           	opt stack 0
 12252                           tblptru	equ	0xFF8
 12253                           tblptrh	equ	0xFF7
 12254                           tblptrl	equ	0xFF6
 12255                           tablat	equ	0xFF5
 12256                           prodh	equ	0xFF4
 12257                           prodl	equ	0xFF3
 12258                           intcon	equ	0xFF2
 12259                           indf0	equ	0xFEF
 12260                           postinc0	equ	0xFEE
 12261                           fsr0h	equ	0xFEA
 12262                           fsr0l	equ	0xFE9
 12263                           wreg	equ	0xFE8
 12264                           postinc1	equ	0xFE6
 12265                           postdec1	equ	0xFE5
 12266                           fsr1h	equ	0xFE2
 12267                           fsr1l	equ	0xFE1
 12268                           indf2	equ	0xFDF
 12269                           postinc2	equ	0xFDE
 12270                           postdec2	equ	0xFDD
 12271                           fsr2h	equ	0xFDA
 12272                           fsr2l	equ	0xFD9
 12273                           status	equ	0xFD8
 12274                           tblptru	equ	0xFF8
 12275                           tblptrh	equ	0xFF7
 12276                           tblptrl	equ	0xFF6
 12277                           tablat	equ	0xFF5
 12278                           prodh	equ	0xFF4
 12279                           prodl	equ	0xFF3
 12280                           intcon	equ	0xFF2
 12281                           indf0	equ	0xFEF
 12282                           postinc0	equ	0xFEE
 12283                           fsr0h	equ	0xFEA
 12284                           fsr0l	equ	0xFE9
 12285                           wreg	equ	0xFE8
 12286                           postinc1	equ	0xFE6
 12287                           postdec1	equ	0xFE5
 12288                           fsr1h	equ	0xFE2
 12289                           fsr1l	equ	0xFE1
 12290                           indf2	equ	0xFDF
 12291                           postinc2	equ	0xFDE
 12292                           postdec2	equ	0xFDD
 12293                           fsr2h	equ	0xFDA
 12294                           fsr2l	equ	0xFD9
 12295                           status	equ	0xFD8
 12296                           
 12297                           	psect	rparam
 12298  0000                     tblptru	equ	0xFF8
 12299                           tblptrh	equ	0xFF7
 12300                           tblptrl	equ	0xFF6
 12301                           tablat	equ	0xFF5
 12302                           prodh	equ	0xFF4
 12303                           prodl	equ	0xFF3
 12304                           intcon	equ	0xFF2
 12305                           indf0	equ	0xFEF
 12306                           postinc0	equ	0xFEE
 12307                           fsr0h	equ	0xFEA
 12308                           fsr0l	equ	0xFE9
 12309                           wreg	equ	0xFE8
 12310                           postinc1	equ	0xFE6
 12311                           postdec1	equ	0xFE5
 12312                           fsr1h	equ	0xFE2
 12313                           fsr1l	equ	0xFE1
 12314                           indf2	equ	0xFDF
 12315                           postinc2	equ	0xFDE
 12316                           postdec2	equ	0xFDD
 12317                           fsr2h	equ	0xFDA
 12318                           fsr2l	equ	0xFD9
 12319                           status	equ	0xFD8


Data Sizes:
    Strings     187
    Constant    71
    Data        32
    BSS         101
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     22     157
    BANK1           256      0      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_31(CODE[5]), STR_13(CODE[5]), STR_8(CODE[15]), STR_7(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_30(CODE[17]), STR_29(CODE[21]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[9]), STR_25(CODE[8]), STR_24(CODE[9]), STR_23(CODE[8]), 
		 -> STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[15]), 
		 -> STR_14(CODE[8]), STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[9]), 
		 -> STR_9(CODE[7]), buffer2(BANK0[20]), 

    guarda_numero_ingresado@num	PTR int  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    array_seleccionar	PTR unsigned char [6] size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _titila_texto_insert_password->_lcd_putrs
    _resetear_pantalla_ingresar_contrasenia->_lcd_putrs
    _mostrar_presionar_a->_lcd_putrs
    _titila_opcion->_lcd_putrs
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _ir_a_pantalla_editar_contrasenia->_ingreso_numero
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setHoraMinutoSegundo->_sprintf
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setDiaMesAnio->_sprintf
    _Write_RTC->_RtccWriteDate
    _covertir_valores_de_array_a_escala_decimal->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _activar_alarma->_ingreso_numero
    _titila_alarma_activada->_lcd_putrs
    _ingreso_numero->_guarda_numero_ingresado
    _guarda_numero_ingresado->_sprintf
    _sprintf->___wmul
    ___wmul->___fttol
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    _si_apreta_numero_va_a_pantalla_contrasenia->_ir_a_pantalla_ingresar_contrasenia
    _ir_a_pantalla_ingresar_contrasenia->_ir_a_pantalla_edicion
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  443242
                                             21 BANK0      1     1      0
                           _Read_RTC
              _ir_a_pantalla_inicial
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31060
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                  _set_reloj_digital
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     925
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ir_a_pantalla_inicial                                0     0      0  411190
                  _set_reloj_digital
_si_apreta_numero_va_a_pantalla_cont
       _titila_texto_insert_password
 ---------------------------------------------------------------------------------
 (2) _titila_texto_insert_password                         1     1      0    8203
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _si_apreta_numero_va_a_pantalla_contrasenia           0     0      0  376051
 _ir_a_pantalla_ingresar_contrasenia
 ---------------------------------------------------------------------------------
 (3) _ir_a_pantalla_ingresar_contrasenia                   2     2      0  376051
                                             19 BANK0      2     2      0
                     _activar_alarma
                     _ingreso_numero
              _ir_a_pantalla_edicion
                         _lcd_gotoxy
                          _lcd_putrs
                _mostrar_presionar_a
_resetear_pantalla_ingresar_contrase
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _resetear_pantalla_ingresar_contrasenia               2     2      0    8271
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _mostrar_presionar_a                                  0     0      0    8203
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _ir_a_pantalla_edicion                                1     1      0  311039
                                             18 BANK0      1     1      0
                           _Read_RTC
                     _cambiar_opcion
                         _lcd_gotoxy
                          _lcd_putrs
                 _seleccionar_opcion
                  _set_reloj_digital
                      _titila_opcion
 ---------------------------------------------------------------------------------
 (5) _titila_opcion                                        1     1      0    8203
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _set_reloj_digital                                    0     0      0   26936
                      _setDiaMesAnio
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (5) _seleccionar_opcion                                   0     0      0  266705
                     _activar_alarma
         _editar_fecha_reloj_digital
          _editar_hora_reloj_digital
   _ir_a_pantalla_editar_contrasenia
 ---------------------------------------------------------------------------------
 (6) _ir_a_pantalla_editar_contrasenia                     2     2      0   20118
                                             60 COMRAM     2     2      0
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (6) _editar_hora_reloj_digital                            9     9      0  109108
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (3) _setHoraMinutoSegundo                                 0     0      0   13468
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _editar_fecha_reloj_digital                           9     9      0  109108
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
                      _setDiaMesAnio
 ---------------------------------------------------------------------------------
 (3) _setDiaMesAnio                                        0     0      0   13468
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (5) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (7) _covertir_valores_de_array_a_escala_decimal          14    12      2   81072
                                             90 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                           ___awtoft
                            ___fttol
                             ___wmul
                         _lcd_gotoxy
                          _lcd_putrs
                                _pow
                            _sprintf
 ---------------------------------------------------------------------------------
 (8) _pow                                                 17    11      6   65683
                                             73 COMRAM    17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (9) _log                                                  5     2      3   21400
                                             57 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (9) _exp                                                  9     6      3   35628
                                             64 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (10) _ldexp                                               7     2      5     400
                                             57 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (10) _floor                                               8     5      3    9183
                                             45 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (10) _frexp                                               7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (11) ___fttol                                            15    11      4     556
                                             12 COMRAM    15    11      4
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftge                                              9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (11) ___altoft                                           10     6      4    2758
                                             27 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (10) _eval_poly                                          12     5      7    9553
                                             45 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            15     9      6    3882
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftsub                                             6     0      6    4615
                                             45 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                            12     6      6    4270
                                             33 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftneg                                             3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) ___ftdiv                                            15     9      6    3102
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___awtoft                                            4     1      3    2863
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___lltoft                                             9     5      4    2689
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (12) ___ftpack                                            8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) _activar_alarma                                       3     3      0   28371
                                             60 COMRAM     3     3      0
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
             _titila_alarma_activada
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _verificar_contrasenia                               10     8      2     115
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (7) _titila_alarma_activada                               1     1      0    8203
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (7) _ingreso_numero                                       2     2      0   11825
                                             58 COMRAM     2     2      0
            _guarda_numero_ingresado
 ---------------------------------------------------------------------------------
 (8) _guarda_numero_ingresado                              2     0      2   11825
                                             56 COMRAM     2     0      2
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             32    22     10    2796
                                             33 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     767
                                             27 COMRAM     6     2      4
                           ___awtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    5450
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    3505
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    2753
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _cambiar_opcion                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (6) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (6) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _ir_a_pantalla_inicial
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
     _si_apreta_numero_va_a_pantalla_contrasenia
       _ir_a_pantalla_ingresar_contrasenia
         _activar_alarma
           _ingreso_numero
             _guarda_numero_ingresado
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _titila_alarma_activada
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _verificar_contrasenia
         _ingreso_numero
           _guarda_numero_ingresado
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
               _isdigit
         _ir_a_pantalla_edicion
           _Read_RTC
             _RtccReadDate
             _RtccReadTime
           _cambiar_opcion
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _seleccionar_opcion
             _activar_alarma
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _titila_alarma_activada
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
               _verificar_contrasenia
             _editar_fecha_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _setDiaMesAnio
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _editar_hora_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _setHoraMinutoSegundo
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _ir_a_pantalla_editar_contrasenia
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _set_reloj_digital
             _setDiaMesAnio
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
             _setHoraMinutoSegundo
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
           _titila_opcion
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _mostrar_presionar_a
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _resetear_pantalla_ingresar_contrasenia
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _verificar_contrasenia
     _titila_texto_insert_password
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       C       8        4.7%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     16      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     108       6        0.0%
DATA                 0      0     108       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Nov 08 23:59:47 2017

                                             _titila_opcion E1F4  
                                              ___altoft@exp 0024  
                                                         _a 00A2  
                                                         _b 00A0  
                                                         _c 009E  
                                                         _i 00A6  
                                                         _j 00A4  
                                                         _k 009C  
                                             ___altoft@sign 0025  
                                            ?_lcd_send_byte 0003  
                                              ___awdiv@sign 0006  
                                guarda_numero_ingresado@num 0039  
                                       ___wmul@multiplicand 001E  
                           __size_of_titila_alarma_activada 0078  
                                               lcd_comand@d 0005  
                                              __CFG_CP0$OFF 000000  
                                              ___ftadd@exp1 002D  
                                              ___ftadd@exp2 002C  
                                              ___ftadd@sign 002B  
                                                       l202 FD00  
                                                       l203 FCF0  
                                                       l220 FDB6  
                                                       l221 FDA6  
                                                       l214 FD7C  
                                                       l215 FD6C  
                                                       l232 FE32  
                                                       l208 FD3A  
                                                       l320 D77A  
                                                       l233 FE22  
                                                       l209 FD2A  
                                                       l401 FAE2  
                                                       l313 E244  
                                                       l250 FEEA  
                                                       l226 FDF0  
                                                       l402 FAEC  
                                                       l330 E040  
                                                       l251 FEDA  
                                                       l227 FDE0  
                                                       l411 FC72  
                                                       l315 E27C  
                                                       l331 E05C  
                                                       l244 FEA6  
                                                       l404 FBCC  
                                                       l316 E29E  
                                                       l324 D79C  
                                                       l245 FE96  
                                                       l173 DC2C  
                                                       l413 FBF0  
                                                       l421 F6C0  
                                                       l333 E072  
                                                       l341 DCB6  
                                                       l270 DEFE  
                                                       l510 D5F6  
                                                       l190 DBE2  
                                                       l238 FE6C  
                                                       l174 DC50  
                                                       l406 FB3C  
                                                       l430 F6E2  
                                                       l239 FE5C  
                                                       l415 FC3A  
                                                       l423 F63E  
                                                       l335 E07C  
                                                       l416 FC44  
                                                       l408 FB94  
                                                       l440 F7DC  
                                                       l432 F72C  
                                                       l409 FB9E  
                                                       l433 F736  
                                                       l425 F688  
                                                       l185 E0F2  
                                                       l178 DA36  
                                                       l426 F692  
                                                       l450 D390  
                                                       l275 DF3E  
                                                       l267 DEF6  
                                                       l291 F29C  
                                                       l435 F80A  
                                                       l355 DCFA  
                                                       l540 F910  
                                                       l524 F82E  
                                                       l196 FCC6  
                                                       l292 F306  
                                                       l612 EBDC  
                                                       l428 F764  
                                                       l348 DCD8  
                                                       l277 DF58  
                                                       l269 DF0E  
                                                       l509 D61E  
                                                       l533 F88A  
                                                       l525 F848  
                                                       l197 FCB6  
                                                       l285 D948  
                                                       l293 F300  
                                                       l613 EC3A  
                                                       l437 F788  
                                                       l278 DF48  
                                                       l606 EB78  
                                                       l382 DFFE  
                                                       l471 D3F2  
                                                       l535 F8EE  
                                                       l527 F85C  
                                                       l295 F344  
                                                       l439 F7D2  
                                                       l375 DF98  
                                                       l472 D3F4  
                                                       l544 F97C  
                                                       l528 F856  
                                                       l376 DFB4  
                                                       l545 F984  
                                                       l385 DA94  
                                                       l617 EC44  
                                                       l641 E884  
                                                       l554 FA26  
                                                       l546 F9A8  
                                                       l386 DAEE  
                                                       l298 F3C0  
                                                       l642 E8DC  
                                                       l378 DFCC  
                                                       l483 D352  
                                                       l491 D4D2  
                                                       l555 F9D4  
                                                       l539 F8E8  
                                                       l387 DAD0  
                                                       l299 F412  
                                                       l635 E830  
                                                       l492 D4DE  
                                                       l388 DADA  
                                                       l732 D9B4  
                                                       l476 D8C6  
                                                       l493 D4EA  
                                                       l733 D9A8  
                                                       l397 FB1A  
                                                       l646 E8E6  
                                                       l822 DB5A  
                                                       l478 D8E8  
                                                       l823 DB64  
                                                       l815 DB0C  
                                                       l399 FA8A  
                                                       l488 D4F6  
                                                       l824 DB72  
                                                       l816 DB1C  
                                                       l489 D4C6  
                                                       l914 F0F8  
                                                       l818 DB3A  
                                                       l843 D41C  
                                                       l923 F188  
                                                       l819 DB32  
                                                       l940 F1E0  
                                                       l941 F1FC  
                                                       l950 E5B4  
                                                       l942 F22C  
                                                       l918 F122  
                                                       l951 E5DA  
                                                       l863 D2DC  
                                                       l928 F17E  
                                                       l849 D2CC  
                                                       l937 F1BC  
                                                       l929 F174  
                                                       l890 E1C0  
                                                       l938 F1B2  
                                                       l962 E634  
                                                       l883 E16E  
                                                       l947 E54E  
                                                       l955 DDDE  
                                                       l884 E164  
                                                       l964 E65C  
                                                       l956 DE0E  
                                                       l949 E576  
                                                       l973 D37E  
                                                       l965 E68E  
                                                       l886 E1A2  
                                                       l966 E69E  
                                                       l887 E18C  
                                                       l991 E7C6  
                                                       l983 E72C  
                                                       l968 E6B6  
                                                       l992 E7BA  
                                                       l889 E1CA  
                                                       l969 E6C6  
                                                       l985 E7A2  
                                                       l994 E7E2  
                                                       l986 E792  
                                                       l979 D456  
                                                       l998 D33E  
                                                       _dia 00E7  
                                                       _key 00A8  
                                                       _mes 00EB  
                                                       _exp F420  
                                                       _log E9FA  
                                                       _pow ED94  
                                                       wreg 000FE8  
                                 _editar_hora_reloj_digital F608  
                                           RtccReadDate@pDt 0001  
                                               lcd_gotoxy@x 0006  
                                               lcd_gotoxy@y 0005  
                                              ___ftdiv@cntr 0012  
                                              ___ftdiv@sign 0017  
                                                      l1110 EDF2  
                                                      l1111 EE78  
                                                      l1112 EE56  
                                                      l1113 EEFC  
                                                      l1107 EDDA  
                                                      l1108 EDCC  
                                                      l1045 D704  
                                                      l1046 D6F8  
                                                      l1311 EA38  
                                                      l1081 D684  
                                                      l1082 D68E  
                                                      l1091 D4AE  
                                                      l1092 D4B8  
                                                      l1077 D664  
                                                      l1317 E432  
                                                      l1309 EA16  
                                                      l1078 D65C  
                                                      l1318 E3B6  
                                                      l1270 F4A8  
                                                      l1087 D496  
                                                      l1271 F4D6  
                                                      l1088 D48E  
                                                      l1272 F5FA  
                                                      l1281 E49E  
                                                      l1273 F5D0  
                                                      l1282 E518  
                                                      l1291 E2C8  
                                                      l1267 F438  
                                                      l1293 E30E  
                                                      l1269 F470  
                                                      l1278 E484  
                                                      l1287 DE66  
                                                      l1279 E476  
                                                      l1295 E33E  
                                                      l4024 F92C  
                                                      l1296 E332  
                                                      l3332 DE3A  
                                                      l5056 E05C  
                                                      l4604 F306  
                                                      l4700 FB02  
                                                      l5172 D8BE  
                                                      l4198 F5D0  
                                                      l4490 DAD0  
                                                      l5186 D8E0  
                                                      l4724 FB94  
                                                      l4820 F74C  
                                                      l4752 FC3A  
                                                      l4728 FBB4  
                                                      l4816 F72C  
                                                      l4664 DFB4  
                                                      l4498 E904  
                                                      l4666 DFBC  
                                                      l4756 FC5A  
                                                      l4844 F7D2  
                                                      ?_exp 0041  
                                                      ?_log 003A  
                                                      l4696 FAE2  
                                                      l4848 F7F2  
                                                      l4792 F6A8  
                                                      l4788 F688  
                                                      l4996 D574  
                                                      ?_pow 004A  
                                                      STR_1 FFD4  
                                                      STR_2 FFED  
                                                      STR_3 FFE8  
                                                      STR_4 FFD9  
                                                      STR_5 FFE3  
                                                      STR_6 FFDE  
                                                      STR_7 FF84  
                                                      STR_8 FF93  
                                                      STR_9 FFCD  
                                                      u3210 D87C  
                                                      u3150 D82E  
                                                      u3208 D862  
                                                      u5000 FE74  
                                                      u3170 D846  
                                                      u3250 E156  
                                                      u3228 D87E  
                                                      u4300 F958  
                                                      u3420 F114  
                                                      u3190 D860  
                                                      u3351 F0B6  
                                                      u3168 D830  
                                                      u4400 D63E  
                                                      u5040 FEAE  
                                                      u5200 F2CC  
                                                      u3520 F1C4  
                                                      u3361 F0CA  
                                                      u5130 DAEE  
                                                      u3290 E1D4  
                                                      u3450 F152  
                                                      u6010 DCA4  
                                                      u3188 D848  
                                                      u5220 F2E4  
                                                      u4350 F9B0  
                                                      u3390 F0EA  
                                                      u3710 E7CC  
                                                      u5150 E9BE  
                                                      u6110 DCD4  
                                                      u6030 DCAC  
                                                      u4407 D634  
                                                      u4360 F9CE  
                                                      u5320 F3CA  
                                                      u3561 E61C  
                                                      u4370 FA2E  
                                                      u5330 F3DE  
                                                      u5250 F378  
                                                      u5218 F2CE  
                                                      u3490 F190  
                                                      u4450 DB3E  
                                                      u6210 DD12  
                                                      u6130 DCE8  
                                                      u6050 DCB2  
                                                      u3651 E710  
                                                      u4380 FA46  
                                                      u5260 F38C  
                                                      u5180 F2B6  
                                                      u3740 DE8E  
                                                      u4540 F4B0  
                                                      u3581 E644  
                                                      u4390 D616  
                                                      u5350 F3F6  
                                                      u5238 F2E6  
                                                      u3670 E74A  
                                                      u4550 F4B2  
                                                      u5430 FABC  
                                                      u6230 DD1A  
                                                      u6150 DCF0  
                                                      u6070 DCC6  
                                                      u4800 FD42  
                                                      u4720 FCCE  
                                                      u5280 F3A4  
                                                      u4640 EE3E  
                                                      u5440 FAD2  
                                                      u3930 E490  
                                                      u6170 DCF6  
                                                      u6090 DCCE  
                                                      u6250 D8D6  
                                                      u3771 E536  
                                                      u3675 E742  
                                                      u6307 D2DE  
                                                      u3860 D668  
                                                      u5348 F3E0  
                                                      u3748 DE90  
                                                      u4660 DC1E  
                                                      u5540 FC2A  
                                                      u5380 DFAE  
                                                      u4397 D60C  
                                                      u6317 E0EA  
                                                      u5278 F38E  
                                                      u4670 DC42  
                                                      u6190 DD0A  
                                                      u3791 E55E  
                                                      u6407 FBC4  
                                                      u6327 E13A  
                                                      u4920 FDF8  
                                                      u4840 FD84  
                                                      u4760 FD08  
                                                      u5368 F3F8  
                                                      u5480 FB6E  
                                                      u4680 DA14  
                                                      u5640 F71C  
                                                      u6417 FC6A  
                                                      u6337 D7A4  
                                                      u3890 D49A  
                                                      u5298 F3A6  
                                                      u3970 E2E8  
                                                      u5490 FB84  
                                                      u6507 FD30  
                                                      u6427 F2F6  
                                                      u6347 E23C  
                                                      u6517 FD72  
                                                      u6437 F338  
                                                      u6357 E2A4  
                                                      u5750 DF16  
                                                      u5590 F678  
                                                      u6607 DF4E  
                                                      u6527 FDAC  
                                                      u6447 F3B6  
                                                      u6367 F6B8  
                                                      u4960 FE3A  
                                                      u4880 FDBE  
                                                      u5920 D598  
                                                      u6537 FDE6  
                                                      u6457 F408  
                                                      u6377 F75C  
                                                      u6297 D3A2  
                                                      u3978 E2EA  
                                                      u5690 F7C2  
                                                      u6547 FE28  
                                                      u6467 D940  
                                                      u6387 F802  
                                                      u6557 FE62  
                                                      u6477 D97A  
                                                      u6397 FB12  
                                                      u5950 E056  
                                                      u6567 FE9C  
                                                      u6487 FCBC  
                                                      u6577 FEE0  
                                                      u6497 FCF6  
                                                      u5970 E092  
                                                      u6587 D2CE  
                                                      u6597 DF04  
                                          ?_lcd_send_nibble 0001  
                                                      _anio 00ED  
                                                      _flag 07E0  
                                                      _main D38C  
                                                      _hora 00E5  
                                              ___ftpack@arg 0001  
                                              ___ftpack@exp 0004  
                                                      fsr0h 000FEA  
                                                      fsr1h 000FE2  
                                                      indf0 000FEF  
                                                      fsr2h 000FDA  
                                                      fsr0l 000FE9  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      exp@x 0041  
                                                      log@x 003A  
                                             __CFG_T1DIG$ON 000000  
                                  ?_guarda_numero_ingresado 0039  
                                                      pow@x 004A  
                                                      pow@y 004D  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 0000  
                                             __CFG_IESO$OFF 000000  
                                          RtccReadDate@rTD0 000B  
                                          RtccReadDate@rTD1 0003  
                                              ___ftmul@cntr 001A  
                                            ?_titila_opcion 0001  
                                              ___param_bank 000000  
                                              ___ftmul@sign 001B  
                                           RtccReadTime@pTm 0001  
                                              ___fttol@exp1 001B  
                                                     ??_exp 0044  
                                                     ??_log 003D  
                                              ___fttol@lval 0017  
                                                     ??_pow 0050  
                                               _Delay1KTCYx D2DA  
                                             __CFG_PLLDIV$1 000000  
                                                     ?_main 0001  
                                           __end_of___awdiv DB7C  
                                           __end_of___ftadd F252  
                                                     STR_10 FFAB  
                                                     STR_11 FF59  
                                                     STR_12 FF59  
                                                     STR_20 FF51  
                                                     STR_13 FFF2  
                                                     STR_21 FFA2  
                                                     STR_30 FF51  
                                                     STR_14 FFC5  
                                                     STR_22 FFB4  
                                                     STR_23 FF5A  
                                                     STR_15 FF53  
                                                     STR_31 FF8E  
                                                     STR_24 FF59  
                                                     STR_16 FF62  
                                                     STR_25 FFBD  
                                                     STR_17 FF51  
                                                     STR_18 FF62  
                                                     STR_26 FFB4  
                                                     STR_19 FF51  
                                                     STR_27 FF73  
                                                     STR_28 FF51  
                                                     STR_29 FF3C  
                                     __size_of_Delay100TCYx 0010  
                                           __end_of___ftdiv E60C  
                                           __end_of___ftneg D38C  
                                           __end_of___ftmul E700  
                                           ___awdiv@divisor 0003  
                                           __end_of___ftsub D480  
                                           __end_of___fttol E7F4  
               covertir_valores_de_array_a_escala_decimal@i 00CD  
                                           __end_of___lwdiv D698  
                                           __end_of___lwmod D4C2  
                                           ___awdiv@counter 0005  
                                                     _TRISA 000F92  
                                                     _TRISB 000F93  
                                                     _TRISC 000F94  
                     activar_alarma@intentos_de_contrasenia 003E  
                                              ___lltoft@exp 0011  
                                            __CFG_FCMEN$OFF 000000  
                                             ___awtoft@sign 000C  
                              __size_of_mostrar_presionar_a 0018  
                                           __end_of_dpowers FEFF  
                                                     _floor E448  
                                                     _ldexp E2B0  
                                                     _frexp DE3E  
                                                     _mes_d 00F2  
                                                     _errno 0088  
                                                     _mes_u 00F3  
                                           __end_of_isdigit D346  
                                             ___ftpack@sign 0005  
                                                     _setup D50C  
                                    _titila_alarma_activada D90E  
                                                     tablat 000FF5  
                                                     pow@yi 0057  
                                      _setHoraMinutoSegundo D9FE  
                                              lcd_putrs@ptr 0009  
                                                     status 000FD8  
                                           __end_of_sprintf FA54  
                                 _motivo_ingreso_de_numeros 0096  
                                               exp@exponent 0047  
                                   __CFG_DSWDTOSC$INTOSCREF 000000  
                                               ldexp@newexp 003D  
                                            _activar_alarma F252  
                                           __initialization D698  
                                               log@exponent 003D  
                                              _Delay100TCYx D2CA  
                                              __end_of_main D3B0  
                                           ??_lcd_send_byte 0004  
                                          RtccReadTime@rTD0 000B  
                                          RtccReadTime@rTD1 0003  
                                          __end_of_Read_RTC ED94  
            __end_of_resetear_pantalla_ingresar_contrasenia D5A4  
           __size_of_resetear_pantalla_ingresar_contrasenia 004E  
                  ??_resetear_pantalla_ingresar_contrasenia 000B  
                   ?_resetear_pantalla_ingresar_contrasenia 0001  
                    _resetear_pantalla_ingresar_contrasenia D556  
                                                    ??_main 00DA  
                                             ___fttol@sign1 0016  
                                             __activetblptr 000002  
                                          __end_of_RtccWrOn D2FC  
                                            _alarma_sonando 0092  
                                                    ?_floor 002E  
                                                    ?_ldexp 003A  
                                                    ?_frexp 0001  
                                          __end_of___altoft D9FE  
                                                    _EECON2 000FA7  
                                                    _ANCON0 000F48  
                                                    _ANCON1 000F49  
                                          ___awdiv@dividend 0001  
                                                    ?_setup 0001  
                                          __end_of___awtoft D440  
                   editar_fecha_reloj_digital@mes_ingresado 00D1  
                                          __end_of___ftpack E1F4  
                                __end_of_seleccionar_opcion D5F4  
                                          __end_of___lltoft D74E  
                            __size_of_verificar_contrasenia 007E  
                                     ?_setHoraMinutoSegundo 0001  
                                            __CFG_WDTEN$OFF 000000  
                             __end_of_verificar_contrasenia DAF8  
                                          RtccWriteDate@pDt 0001  
                                                    _RTCCFG 000F3F  
                                            __CFG_WPCFG$OFF 000000  
                                          ??_cambiar_opcion 0001  
                                    __end_of_activar_alarma F420  
                                         _set_reloj_digital D298  
                                            __CFG_WPDIS$OFF 000000  
                                           ??_titila_opcion 000B  
                   resetear_pantalla_ingresar_contrasenia@i 000B  
                                            __CFG_XINST$OFF 000000  
                                        ?_set_reloj_digital 0001  
                                          __end_of_lcd_init D90E  
                                          __end_of_lcd_putc D50C  
                                                    ___ftge DDAE  
                                                    ___wmul D3B0  
                                                 ??___awdiv 0005  
                                                 ??___ftadd 0028  
                                            __CFG_STVREN$ON 000000  
                                                 ??___ftdiv 000F  
                                                 ??___ftneg 0004  
                                                    _diasem 00E9  
                                                 ??___ftmul 0013  
                                                    _anio_d 00EF  
                                                 ??___ftsub 0034  
                                                 ??___fttol 0011  
                                                    _anio_u 00F0  
                                   ??_ir_a_pantalla_edicion 00D7  
                                                 ??___lwdiv 0005  
                                                 ??___lwmod 000C  
                                                    _hora_d 00F6  
                                                    _hora_u 00F7  
                                                    clear_0 D6E2  
                                       ??_set_reloj_digital 0039  
                                          ___awdiv@quotient 0007  
                                                    _minuto 00E3  
                                   ??_ir_a_pantalla_inicial 0060  
                                     __end_of_RtccWriteDate EC4E  
                                     __end_of_RtccWriteTime E8F0  
                                                    floor@i 0031  
                                                    floor@x 002E  
                                     ___ftmul@f3_as_product 0017  
                                          RtccWriteTime@pTm 0001  
                                                 ??_isdigit 0001  
                         editar_hora_reloj_digital@posicion 00D5  
                                              __mediumconst FEF4  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                                 ??_sprintf 002C  
                                          __end_ofexp@coeff FF21  
                                          __end_oflog@coeff FF3C  
                                 __end_of_set_reloj_digital D2A2  
                                                __accesstop 0060  
                                   __end_of__initialization D6E8  
                                                ___altoft@c 001C  
                        __size_of_editar_hora_reloj_digital 021C  
                                                ___ftadd@f1 0022  
                                                ___ftadd@f2 0025  
                                        __size_of_Write_RTC 019C  
                                                ___ftge@ff1 0001  
                                                ___ftge@ff2 0004  
                                           ?_activar_alarma 0001  
                                              eval_poly@res 0037  
                                             ___rparam_used 000001  
                                                ___ftdiv@f1 0009  
                                                ___ftdiv@f2 000C  
                                                ___ftdiv@f3 0013  
                                                ___ftneg@f1 0001  
                                                ___awtoft@c 0009  
                                                ___ftmul@f1 000D  
                                                ___ftmul@f2 0010  
                                                ___ftsub@f1 002E  
                                                ___ftsub@f2 0031  
                                                ___fttol@f1 000D  
                                            __pcstackCOMRAM 0001  
                                              __pidataBANK0 D2FC  
                                              __pidataBANK1 D2A2  
                                                ___lltoft@c 0009  
                                             __end_of_floor E526  
                                             __end_of_ldexp E376  
                                             __end_of_frexp DECE  
                      __end_of_titila_texto_insert_password E146  
                     __size_of_titila_texto_insert_password 00A4  
                              _titila_texto_insert_password E0A2  
                                             __end_of_setup D556  
                                           _alarma_activada 0094  
                                           __CFG_DSWDTPS$G2 000000  
                                           __CFG_OSC$INTOSC 000000  
                __end_of_ir_a_pantalla_ingresar_contrasenia E0A2  
               __size_of_ir_a_pantalla_ingresar_contrasenia 00A2  
                      ??_ir_a_pantalla_ingresar_contrasenia 0060  
                       ?_ir_a_pantalla_ingresar_contrasenia 0001  
                        _ir_a_pantalla_ingresar_contrasenia E000  
                                         lcd_gotoxy@address 0007  
                                        __size_of_lcd_putrs 0052  
                                                   ??_floor 0031  
                                                   ??_ldexp 003F  
                                                   ??_frexp 0006  
                  __end_of_ir_a_pantalla_editar_contrasenia E000  
                 __size_of_ir_a_pantalla_editar_contrasenia 009E  
                        ??_ir_a_pantalla_editar_contrasenia 003D  
                         ?_ir_a_pantalla_editar_contrasenia 0001  
                          _ir_a_pantalla_editar_contrasenia DF62  
                                    ??_setHoraMinutoSegundo 0039  
                                              sprintf@width 0036  
                                                   ??_setup 0039  
                                                __pbssBANK0 0060  
                                        __size_of_eval_poly 00D2  
                                                 ?_Read_RTC 0001  
                                                _dia_semana 00F1  
                                 RtccWriteTime@tempHourWDay 000A  
                         __end_of_editar_hora_reloj_digital F824  
                                                 ?_RtccWrOn 0001  
                                            lcd_send_byte@n 0003  
                                                   ?___ftge 0001  
                                       _mostrar_presionar_a D310  
                                                   ?___wmul 001C  
                                             ?_RtccReadDate 0001  
                                             ?_RtccReadTime 0001  
                       __size_of_editar_fecha_reloj_digital 0238  
                                              ?_Delay1KTCYx 0001  
                                                 ?___altoft 001C  
                                                 ?___awtoft 0009  
                                    __size_of_setDiaMesAnio 008C  
                                                 ?___ftpack 0001  
                          __size_of_guarda_numero_ingresado 008C  
                                                 ?___lltoft 0009  
                             ?_titila_texto_insert_password 0001  
                                         __end_of_Write_RTC F0A6  
                                                _lcd_comand D2BC  
                                                _lcd_gotoxy D346  
                                   ?_titila_alarma_activada 0001  
                                      ?_mostrar_presionar_a 0001  
                                                   _RTCVALH 000F99  
                                                   _RTCVALL 000F98  
                                    verificar_contrasenia@i 0009  
                                                 ?_lcd_init 0001  
                                                 ?_lcd_putc 0001  
                                __size_of_set_reloj_digital 000A  
                                                ??_Read_RTC 0013  
                                                   __Hparam 0000  
                   editar_fecha_reloj_digital@dia_ingresado 00CF  
                                                   __Lparam 0000  
                                  __size_of_lcd_send_nibble 0076  
                                                ??_RtccWrOn 0001  
                                            ??_RtccReadDate 0003  
                                           __size_of___ftge 0090  
                                            ??_RtccReadTime 0003  
                                                   ___awdiv DAF8  
                                                   ___ftadd F0A6  
                                         __end_of_lcd_putrs D646  
                                                   ___ftdiv E526  
                                                   ___ftneg D368  
                                           __size_of___wmul 0026  
                                                   ___ftmul E60C  
                                                   ___ftsub D440  
                                                   ___fttol E700  
                                                   ___lwdiv D646  
                                                   ___lwmod D480  
                                   __size_of_ingreso_numero 0268  
                                                ??___altoft 0020  
                                               _RtccTimeVal 0084  
                                                   __pcinit D698  
                                                   _fecha_d 00F4  
                                                   _fecha_u 00F5  
                                                ??___awtoft 000C  
                                                ??___ftpack 0006  
                                         __end_of_eval_poly E448  
                                                   __ramtop 0F00  
                                                ??___lltoft 000D  
                                                   __ptext0 D38C  
                                                   __ptext1 D50C  
                                                   __ptext2 D898  
                                                   __ptext3 D2DA  
                                                   __ptext4 D2BC  
                                                   __ptext5 D2AE  
                                                   __ptext6 E0A2  
                                                   __ptext7 DC94  
                                                   __ptext8 E000  
                                                   __ptext9 D556  
                                                   _buffer2 00A9  
                                                 _T1CONbits 000FCD  
                                                   _dpowers FEF5  
                                              __size_of_exp 01E8  
                                              __size_of_log 011E  
                                                   _isdigit D328  
                                              __size_of_pow 0176  
                            __end_of_titila_alarma_activada D986  
                                        _numeros_ingresados 0098  
                                        _numeros_para_fecha 0080  
                                                   _segundo 009A  
                                     ??_mostrar_presionar_a 000B  
ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias 00D8  
                                                   _sprintf F824  
                                                ??_lcd_init 0005  
                                                ??_lcd_putc 0008  
                                      end_of_initialization D6E8  
                                                   exp@sign 0049  
                                             _setDiaMesAnio DC08  
                                      lcd_send_byte@address 0004  
                                             __Lmediumconst FEF4  
                               verificar_contrasenia@equals 0007  
                                                   pow@sign 0056  
                                                   postdec1 000FE5  
                                                   postdec2 000FDD  
                                        _seleccionar_opcion D5A4  
                                                   postinc0 000FEE  
                                                   postinc1 000FE6  
                                                   postinc2 000FDE  
                                     __end_of_lcd_send_byte D408  
                            __size_of_ir_a_pantalla_edicion 0066  
                             __end_of_ir_a_pantalla_edicion D7B4  
                                                 _PORTAbits 000F80  
                                                 _PORTCbits 000F82  
                                       ?_seleccionar_opcion 0001  
                                          __CFG_DSBOREN$OFF 000000  
                            __size_of_ir_a_pantalla_inicial 000E  
                             __end_of_ir_a_pantalla_inicial D2BC  
                        __end_of_editar_fecha_reloj_digital FC8C  
                                _editar_fecha_reloj_digital FA54  
                                               ?_lcd_comand 0001  
                                          __CFG_CPUDIV$OSC1 000000  
                                                 _TRISBbits 000F93  
                            ??_titila_texto_insert_password 000B  
                                               ?_lcd_gotoxy 0005  
                                           _LCD_INIT_STRING FEFF  
                                          ??_activar_alarma 003D  
                                            ?_setDiaMesAnio 0001  
                                      ??_seleccionar_opcion 0060  
                                               ___ftdiv@exp 0016  
                                     _verificar_contrasenia DA7A  
                                          __CFG_IOL1WAY$OFF 000000  
                                 RtccWriteDate@tempDayMonth 000A  
                                       __CFG_MSSP7B_EN$MSK7 000000  
                                               ___ftmul@exp 0016  
                                     __end_of_titila_opcion E2B0  
                editar_hora_reloj_digital@segundo_ingresado 00D3  
                                          Delay100TCYx@unit 0001  
                                            __end_of___ftge DE3E  
                                            __end_of___wmul D3D6  
                                   _guarda_numero_ingresado DB7C  
                                 RtccWriteDate@tempHourWDay 000C  
                   editar_hora_reloj_digital@hora_ingresada 00CF  
                                         ??_lcd_send_nibble 0001  
                                             __pbitbssBANK0 07E0  
                                      __size_of_Delay1KTCYx 0010  
                                          __CFG_DSWDTEN$OFF 000000  
                 editar_hora_reloj_digital@minuto_ingresado 00D1  
                                                floor@expon 0034  
                                       start_initialization D698  
                                                eval_poly@d 0031  
                                                eval_poly@n 0033  
                                                eval_poly@x 002E  
                                                ldexp@value 003A  
                                               __end_of_exp F608  
                                               __end_of_log EB18  
                                               __end_of_pow EF0A  
                                      __end_of_RtccReadDate DDAE  
                                      __end_of_RtccReadTime D822  
        __end_of_covertir_valores_de_array_a_escala_decimal E9FA  
       __size_of_covertir_valores_de_array_a_escala_decimal 010A  
              ??_covertir_valores_de_array_a_escala_decimal 005D  
               ?_covertir_valores_de_array_a_escala_decimal 005B  
                _covertir_valores_de_array_a_escala_decimal E8F0  
                                                frexp@value 0001  
                                      RtccWriteTime@wasAlrm 0006  
                                      RtccWriteTime@wasWrEn 0007  
                                    __size_of_RtccWriteDate 0136  
                                           RtccWriteDate@di 0003  
                                    __size_of_RtccWriteTime 00FC  
                                         __size_of_Read_RTC 0146  
                                       __size_of_lcd_comand 000E  
                                                  ??___ftge 0007  
                                       __size_of_lcd_gotoxy 0022  
                                                  ??___wmul 0020  
                                            _ingreso_numero FC8C  
                                               __pdataBANK0 00DB  
                                               __pdataBANK1 0100  
                                         __size_of_RtccWrOn 0012  
                                           RtccWriteTime@di 0003  
                                          __CFG_LPT1OSC$OFF 000000  
                                   __size_of_cambiar_opcion 0094  
                                         __size_of___altoft 0078  
                                               _ALRMCFGbits 000F91  
                                   __end_of_LCD_INIT_STRING FF03  
                                         __size_of___awtoft 0038  
                                         __size_of___ftpack 00AE  
                                         __size_of___lltoft 005C  
                                             __pcstackBANK0 00C5  
                                                 _Write_RTC EF0A  
                                           ??_setDiaMesAnio 0039  
                                              _isdigit$1985 0002  
                                           Delay1KTCYx@unit 0001  
                             __size_of_setHoraMinutoSegundo 007C  
                                    ?_verificar_contrasenia 0001  
                                         __size_of_lcd_init 0076  
                                               sprintf@flag 0032  
                                         __size_of_lcd_putc 004A  
                                               sprintf@prec 0035  
                                         _array_contrasenia 00DB  
                                                 __pnvBANK0 00EF  
                                          ___lwdiv@dividend 0001  
                                ?_editar_hora_reloj_digital 0001  
                                    __end_of_ingreso_numero FEF4  
                                             ?_Delay100TCYx 0001  
                                 ??_guarda_numero_ingresado 003B  
                                             __pmediumconst FEF4  
                                                  ?___awdiv 0001  
                                                  ?___ftadd 0022  
                                                  ?___ftdiv 0009  
                                                  ?___ftneg 0001  
                                                  ?___ftmul 000D  
                                                  ?___ftsub 002E  
                                                  ?___fttol 000D  
                                                  ?___lwdiv 0001  
                                                  ?___lwmod 0008  
                                   RtccWriteTime@tempMinSec 0008  
                               _array_contrasenia_ingresada 0060  
                                                 _lcd_putrs D5F4  
                                             _RtccWriteDate EB18  
                                             _RtccWriteTime E7F4  
                                                  ?_isdigit 0001  
                                                 _eval_poly E376  
                                      __CFG_RTCOSC$T1OSCREF 000000  
                                                ?_Write_RTC 0001  
                                          ___lwdiv@quotient 0005  
                                                  ?_sprintf 0022  
                                            __size_of_floor 00DE  
                                            __size_of_ldexp 00C6  
                                            __size_of_frexp 0090  
                              ??_editar_fecha_reloj_digital 005F  
                                            __size_of_setup 004A  
                                          _RtccAlrmTimeDate 0070  
                                            ___wmul@product 0020  
                                                  _LATAbits 000F89  
                                                  _LATBbits 000F8A  
                                                  _PIE3bits 000FA3  
                                                 _segundo_d 00FA  
                                            ??_Delay100TCYx 0001  
                                                 _segundo_u 00FB  
                                           ?_ingreso_numero 0001  
                                          __CFG_WDTPS$32768 000000  
                        editar_fecha_reloj_digital@posicion 00D5  
                                        RtccWriteDate@wasOn 0005  
                                  _txt_insertar_contrasenia 008E  
                                        _Rtcc_read_TimeDate 0068  
                                            ?_RtccWriteDate 0001  
                               __end_of_mostrar_presionar_a D328  
                                                ?_lcd_putrs 0009  
                                         ___wmul@multiplier 001C  
                                            ?_RtccWriteTime 0001  
                                                 lcd_init@i 0005  
                                     __size_of_RtccReadDate 008E  
                                              ??_lcd_comand 0005  
                                                ?_eval_poly 002E  
                               ?_editar_fecha_reloj_digital 0001  
                  editar_fecha_reloj_digital@anio_ingresado 00D3  
                                                 lcd_putc@c 0008  
                                     __size_of_RtccReadTime 006E  
                                              ??_lcd_gotoxy 0006  
                           __end_of_guarda_numero_ingresado DC08  
                                                 copy_data0 D6AC  
                                                 copy_data1 D6CC  
                                                  _Read_RTC EC4E  
                                         _array_seleccionar 0100  
                                                 frexp@eptr 0004  
                                           _lcd_send_nibble D822  
                                                  __Hrparam 0000  
                                                  _RtccDate 00BD  
                                                  __Lrparam 0000  
                                                  _RtccTime 00C1  
                                                  _RtccWrOn D2EA  
                                        __end_of_lcd_comand D2CA  
                                        __end_of_lcd_gotoxy D368  
                                              _RtccReadDate DD20  
                                            _cambiar_opcion DECE  
                                          __size_of___awdiv 0084  
                                          __size_of___ftadd 01AC  
                                              _RtccReadTime D7B4  
                                          __size_of___ftdiv 00E6  
                                          __size_of___ftneg 0024  
                                                  ___altoft D986  
                                          __size_of___ftmul 00F4  
                                          __size_of___ftsub 0040  
                                          __size_of___fttol 00F4  
                                          __size_of___lwdiv 0052  
                                          __size_of___lwmod 0042  
                                                  ___awtoft D408  
                                                  ___ftpack E146  
                                                  ___lltoft D6F2  
                         ir_a_pantalla_editar_contrasenia@i 003D  
                                              _RtccTimeDate 0078  
           _covertir_valores_de_array_a_escala_decimal$2460 00C5  
           _covertir_valores_de_array_a_escala_decimal$2461 00C8  
                                                  _exp$2464 0044  
                                     _ir_a_pantalla_edicion D74E  
                                                sprintf@val 0033  
                                          __size_of_isdigit 001E  
                                           ___lwdiv@divisor 0003  
                                     _ir_a_pantalla_inicial D2AE  
                                               ??_Write_RTC 000E  
                                           ___lwdiv@counter 0007  
                                                  __ptext10 D310  
                                                  __ptext11 D74E  
                                                  __ptext20 EF0A  
                                                  __ptext12 E1F4  
                                                  __ptext21 DAF8  
                                                  __ptext13 D298  
                                                  __ptext30 E448  
                                                  __ptext22 E7F4  
                                                  __ptext14 D5A4  
                                                  __ptext31 DE3E  
                                                  __ptext23 EB18  
                                                  __ptext15 DF62  
                                                  __ptext40 E526  
                                                  __ptext32 E700  
                                                  __ptext24 D2EA  
                                                  __ptext16 F608  
                                                  __ptext41 D408  
                                                  __ptext33 DDAE  
                                                  __ptext25 E8F0  
                                                  __ptext17 D9FE  
                                                  __ptext50 D328  
                                                  __ptext42 D6F2  
                                                  __ptext34 D986  
                                                  __ptext26 ED94  
                                                  __ptext18 FA54  
                                                  __ptext51 D3B0  
                                                  __ptext43 E146  
                                                  __ptext35 E376  
                                                  __ptext27 E9FA  
                                                  __ptext19 DC08  
                                                  __ptext60 DECE  
                                                  __ptext52 D480  
                                                  __ptext44 F252  
                                                  __ptext36 E60C  
                                                  __ptext28 F420  
                                                  __ptext61 EC4E  
                                                  __ptext53 D646  
                                                  __ptext45 DA7A  
                                                  __ptext37 D440  
                                                  __ptext29 E2B0  
                                                  __ptext62 D7B4  
                                                  __ptext54 D5F4  
                                                  __ptext46 D90E  
                                                  __ptext38 F0A6  
                                                  __ptext63 DD20  
                                                  __ptext55 D4C2  
                                                  __ptext47 FC8C  
                                                  __ptext39 D368  
                                                  __ptext56 D346  
                                                  __ptext48 DB7C  
                                                  __ptext57 D3D6  
                                                  __ptext49 F824  
                                                  __ptext58 D822  
                                                  __ptext59 D2CA  
                                                  _lcd_init D898  
                                                  _lcd_putc D4C2  
                                                  _pow$2462 0050  
                                                  _pow$2463 0053  
                                          __size_of_sprintf 0230  
                                    __size_of_lcd_send_byte 0032  
                                             __size_of_main 0024  
                               __size_of_seleccionar_opcion 0050  
                                                  _minuto_d 00F8  
                                                  _minuto_u 00F9  
                                    __end_of_cambiar_opcion DF62  
                                             ??_Delay1KTCYx 0001  
                                           ??_RtccWriteDate 0004  
                                  ??_titila_alarma_activada 000B  
                                           ??_RtccWriteTime 0004  
                                               ??_lcd_putrs 000B  
                                                  exp@coeff FF03  
                                                  log@coeff FF21  
                                               _OSCTUNEbits 000F9B  
                                                _INTCONbits 000FF2  
        __end_of_si_apreta_numero_va_a_pantalla_contrasenia DD20  
       __size_of_si_apreta_numero_va_a_pantalla_contrasenia 008C  
              ??_si_apreta_numero_va_a_pantalla_contrasenia 0060  
               ?_si_apreta_numero_va_a_pantalla_contrasenia 0001  
                _si_apreta_numero_va_a_pantalla_contrasenia DC94  
                                               ??_eval_poly 0035  
                                      _txt_pantalla_edicion 008A  
                                        RtccWriteTime@wasOn 0005  
                                      __end_of_Delay100TCYx D2DA  
                                                  isdigit@c 0003  
                                    __size_of_titila_opcion 00BC  
                                   ??_verificar_contrasenia 0003  
                                                 sprintf@ap 0030  
                                   __end_of_lcd_send_nibble D898  
                                                 sprintf@sp 0022  
                                          ___lwmod@dividend 0008  
                                                _OSCCONbits 000FD3  
                               ??_editar_hora_reloj_digital 005F  
                                   __size_of_activar_alarma 01CE  
                                         _boton_seleccionar 0090  
                                           ?_cambiar_opcion 0001  
                                     RtccWriteDate@tempYear 0007  
                              __end_of_setHoraMinutoSegundo DA7A  
                                             _lcd_send_byte D3D6  
                                                _RTCCFGbits 000F3F  
                                    ?_ir_a_pantalla_edicion 0001  
                                                  sprintf@c 0038  
                                                  sprintf@f 0024  
                                           ___lwmod@divisor 000A  
                                       __end_of_Delay1KTCYx D2EA  
                                           ___lwmod@counter 000C  
                                    ?_ir_a_pantalla_inicial 0001  
                                      RtccWriteDate@wasAlrm 0006  
                                      RtccWriteDate@wasWrEn 0009  
                                     __end_of_setDiaMesAnio DC94  
          covertir_valores_de_array_a_escala_decimal@numero 00CB  
                                          ??_ingreso_numero 003B  
                                       _txt_alarma_activada 008C  
                                     lcd_send_nibble@nibble 0002  
