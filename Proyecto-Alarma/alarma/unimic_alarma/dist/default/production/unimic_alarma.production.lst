

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Nov 07 15:02:02 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80  0000                     
    81                           ; Version 1.43
    82                           ; Generated 25/07/2017 GMT
    83                           ; 
    84                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F26J50 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataBANK0
   117  003ADC                     __pidataBANK0:
   118                           	opt stack 0
   119                           
   120                           ;initializer for _array_contrasenia
   121  003ADC  0001               	dw	1
   122  003ADE  0002               	dw	2
   123  003AE0  0003               	dw	3
   124  003AE2  0004               	dw	4
   125                           
   126                           ;initializer for _minuto
   127  003AE4  001E               	dw	30
   128                           
   129                           ;initializer for _hora
   130  003AE6  0012               	dw	18
   131                           
   132                           ;initializer for _dia
   133  003AE8  0008               	dw	8
   134                           
   135                           ;initializer for _diasem
   136  003AEA  0003               	dw	3
   137                           
   138                           ;initializer for _mes
   139  003AEC  0009               	dw	9
   140                           
   141                           ;initializer for _anio
   142  003AEE  000F               	dw	15
   143                           
   144                           	psect	idataBANK1
   145  003B3E                     __pidataBANK1:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _array_seleccionar
   149  003B3E  D7                 	db	low STR_1
   150  003B3F  0F                 	db	high STR_1
   151  003B40  F0                 	db	low STR_2
   152  003B41  0F                 	db	high STR_2
   153  003B42  EB                 	db	low STR_3
   154  003B43  0F                 	db	high STR_3
   155  003B44  DC                 	db	low STR_4
   156  003B45  0F                 	db	high STR_4
   157  003B46  E6                 	db	low STR_5
   158  003B47  0F                 	db	high STR_5
   159  003B48  E1                 	db	low STR_6
   160  003B49  0F                 	db	high STR_6
   161                           
   162                           	psect	smallconst
   163  000F00                     __psmallconst:
   164                           	opt stack 0
   165  000F00  00                 	db	0
   166  000F01                     _dpowers:
   167                           	opt stack 0
   168  000F01  0001               	dw	1
   169  000F03  000A               	dw	10
   170  000F05  0064               	dw	100
   171  000F07  03E8               	dw	1000
   172  000F09  2710               	dw	10000
   173  000F0B                     __end_of_dpowers:
   174                           	opt stack 0
   175  000F0B                     _LCD_INIT_STRING:
   176                           	opt stack 0
   177  000F0B  28                 	db	40
   178  000F0C  0C                 	db	12
   179  000F0D  01                 	db	1
   180  000F0E  06                 	db	6
   181  000F0F                     __end_of_LCD_INIT_STRING:
   182                           	opt stack 0
   183  000F0F                     exp@coeff:
   184                           	opt stack 0
   185  000F0F  00                 	db	0
   186  000F10  80                 	db	128
   187  000F11  3F                 	db	63
   188  000F12  72                 	db	114
   189  000F13  31                 	db	49
   190  000F14  3F                 	db	63
   191  000F15  FE                 	db	254
   192  000F16  75                 	db	117
   193  000F17  3E                 	db	62
   194  000F18  58                 	db	88
   195  000F19  63                 	db	99
   196  000F1A  3D                 	db	61
   197  000F1B  95                 	db	149
   198  000F1C  1D                 	db	29
   199  000F1D  3C                 	db	60
   200  000F1E  C5                 	db	197
   201  000F1F  AE                 	db	174
   202  000F20  3A                 	db	58
   203  000F21  79                 	db	121
   204  000F22  21                 	db	33
   205  000F23  39                 	db	57
   206  000F24  94                 	db	148
   207  000F25  80                 	db	128
   208  000F26  37                 	db	55
   209  000F27  93                 	db	147
   210  000F28  A7                 	db	167
   211  000F29  35                 	db	53
   212  000F2A  56                 	db	86
   213  000F2B  15                 	db	21
   214  000F2C  34                 	db	52
   215  000F2D                     __end_ofexp@coeff:
   216                           	opt stack 0
   217  000F2D                     log@coeff:
   218                           	opt stack 0
   219  000F2D  00                 	db	0
   220  000F2E  00                 	db	0
   221  000F2F  00                 	db	0
   222  000F30  00                 	db	0
   223  000F31  80                 	db	128
   224  000F32  3F                 	db	63
   225  000F33  F0                 	db	240
   226  000F34  FF                 	db	255
   227  000F35  BE                 	db	190
   228  000F36  E2                 	db	226
   229  000F37  A9                 	db	169
   230  000F38  3E                 	db	62
   231  000F39  83                 	db	131
   232  000F3A  76                 	db	118
   233  000F3B  BE                 	db	190
   234  000F3C  AE                 	db	174
   235  000F3D  2B                 	db	43
   236  000F3E  3E                 	db	62
   237  000F3F  3C                 	db	60
   238  000F40  C3                 	db	195
   239  000F41  BD                 	db	189
   240  000F42  D2                 	db	210
   241  000F43  13                 	db	19
   242  000F44  3D                 	db	61
   243  000F45  78                 	db	120
   244  000F46  D3                 	db	211
   245  000F47  BB                 	db	187
   246  000F48                     __end_oflog@coeff:
   247                           	opt stack 0
   248  000F48                     STR_24:
   249                           
   250                           ; BSR set to: 15
   251  000F48  49                 	db	73	;'I'
   252  000F49  6E                 	db	110	;'n'
   253  000F4A  73                 	db	115	;'s'
   254  000F4B  65                 	db	101	;'e'
   255  000F4C  72                 	db	114	;'r'
   256  000F4D  74                 	db	116	;'t'
   257  000F4E  20                 	db	32
   258  000F4F  6E                 	db	110	;'n'
   259  000F50  65                 	db	101	;'e'
   260  000F51  77                 	db	119	;'w'
   261  000F52  20                 	db	32
   262  000F53  50                 	db	80	;'P'
   263  000F54  61                 	db	97	;'a'
   264  000F55  73                 	db	115	;'s'
   265  000F56  73                 	db	115	;'s'
   266  000F57  77                 	db	119	;'w'
   267  000F58  6F                 	db	111	;'o'
   268  000F59  72                 	db	114	;'r'
   269  000F5A  64                 	db	100	;'d'
   270  000F5B  20                 	db	32
   271  000F5C  00                 	db	0
   272  000F5D                     STR_18:
   273                           
   274                           ; BSR set to: 15
   275  000F5D  20                 	db	32
   276  000F5E  20                 	db	32
   277  000F5F  20                 	db	32
   278  000F60  20                 	db	32
   279  000F61  20                 	db	32
   280  000F62  20                 	db	32
   281  000F63  20                 	db	32
   282  000F64  20                 	db	32
   283  000F65  20                 	db	32
   284  000F66  20                 	db	32
   285  000F67  20                 	db	32
   286  000F68  20                 	db	32
   287  000F69  20                 	db	32
   288  000F6A  20                 	db	32
   289  000F6B  20                 	db	32
   290  000F6C  20                 	db	32
   291  000F6D  00                 	db	0
   292  000F6E                     STR_17:
   293                           
   294                           ; BSR set to: 15
   295  000F6E  41                 	db	65	;'A'
   296  000F6F  6C                 	db	108	;'l'
   297  000F70  61                 	db	97	;'a'
   298  000F71  72                 	db	114	;'r'
   299  000F72  6D                 	db	109	;'m'
   300  000F73  20                 	db	32
   301  000F74  61                 	db	97	;'a'
   302  000F75  63                 	db	99	;'c'
   303  000F76  74                 	db	116	;'t'
   304  000F77  69                 	db	105	;'i'
   305  000F78  76                 	db	118	;'v'
   306  000F79  61                 	db	97	;'a'
   307  000F7A  74                 	db	116	;'t'
   308  000F7B  65                 	db	101	;'e'
   309  000F7C  64                 	db	100	;'d'
   310  000F7D  20                 	db	32
   311  000F7E  00                 	db	0
   312  000F7F                     STR_22:
   313                           
   314                           ; BSR set to: 15
   315  000F7F  49                 	db	73	;'I'
   316  000F80  6E                 	db	110	;'n'
   317  000F81  73                 	db	115	;'s'
   318  000F82  65                 	db	101	;'e'
   319  000F83  72                 	db	114	;'r'
   320  000F84  74                 	db	116	;'t'
   321  000F85  20                 	db	32
   322  000F86  50                 	db	80	;'P'
   323  000F87  61                 	db	97	;'a'
   324  000F88  73                 	db	115	;'s'
   325  000F89  73                 	db	115	;'s'
   326  000F8A  77                 	db	119	;'w'
   327  000F8B  6F                 	db	111	;'o'
   328  000F8C  72                 	db	114	;'r'
   329  000F8D  64                 	db	100	;'d'
   330  000F8E  20                 	db	32
   331  000F8F  00                 	db	0
   332  000F90                     STR_7:
   333                           
   334                           ; BSR set to: 15
   335  000F90  25                 	db	37
   336  000F91  30                 	db	48	;'0'
   337  000F92  32                 	db	50	;'2'
   338  000F93  75                 	db	117	;'u'
   339  000F94  2F                 	db	47
   340  000F95  25                 	db	37
   341  000F96  30                 	db	48	;'0'
   342  000F97  32                 	db	50	;'2'
   343  000F98  75                 	db	117	;'u'
   344  000F99  2F                 	db	47
   345  000F9A  25                 	db	37
   346  000F9B  30                 	db	48	;'0'
   347  000F9C  32                 	db	50	;'2'
   348  000F9D  75                 	db	117	;'u'
   349  000F9E  00                 	db	0
   350  000F9F                     STR_8:
   351                           
   352                           ; BSR set to: 15
   353  000F9F  25                 	db	37
   354  000FA0  30                 	db	48	;'0'
   355  000FA1  32                 	db	50	;'2'
   356  000FA2  75                 	db	117	;'u'
   357  000FA3  3A                 	db	58	;':'
   358  000FA4  25                 	db	37
   359  000FA5  30                 	db	48	;'0'
   360  000FA6  32                 	db	50	;'2'
   361  000FA7  75                 	db	117	;'u'
   362  000FA8  3A                 	db	58	;':'
   363  000FA9  25                 	db	37
   364  000FAA  30                 	db	48	;'0'
   365  000FAB  32                 	db	50	;'2'
   366  000FAC  75                 	db	117	;'u'
   367  000FAD  00                 	db	0
   368  000FAE                     STR_10:
   369                           
   370                           ; BSR set to: 15
   371  000FAE  50                 	db	80	;'P'
   372  000FAF  61                 	db	97	;'a'
   373  000FB0  73                 	db	115	;'s'
   374  000FB1  73                 	db	115	;'s'
   375  000FB2  77                 	db	119	;'w'
   376  000FB3  6F                 	db	111	;'o'
   377  000FB4  72                 	db	114	;'r'
   378  000FB5  64                 	db	100	;'d'
   379  000FB6  00                 	db	0
   380  000FB7                     STR_21:
   381                           
   382                           ; BSR set to: 15
   383  000FB7  45                 	db	69	;'E'
   384  000FB8  64                 	db	100	;'d'
   385  000FB9  74                 	db	116	;'t'
   386  000FBA  20                 	db	32
   387  000FBB  50                 	db	80	;'P'
   388  000FBC  61                 	db	97	;'a'
   389  000FBD  73                 	db	115	;'s'
   390  000FBE  73                 	db	115	;'s'
   391  000FBF  00                 	db	0
   392  000FC0                     STR_20:
   393                           
   394                           ; BSR set to: 15
   395  000FC0  41                 	db	65	;'A'
   396  000FC1  63                 	db	99	;'c'
   397  000FC2  74                 	db	116	;'t'
   398  000FC3  69                 	db	105	;'i'
   399  000FC4  76                 	db	118	;'v'
   400  000FC5  65                 	db	101	;'e'
   401  000FC6  20                 	db	32
   402  000FC7  00                 	db	0
   403  000FC8                     STR_14:
   404                           
   405                           ; BSR set to: 15
   406  000FC8  50                 	db	80	;'P'
   407  000FC9  72                 	db	114	;'r'
   408  000FCA  65                 	db	101	;'e'
   409  000FCB  73                 	db	115	;'s'
   410  000FCC  73                 	db	115	;'s'
   411  000FCD  20                 	db	32
   412  000FCE  41                 	db	65	;'A'
   413  000FCF  00                 	db	0
   414  000FD0                     STR_9:
   415                           
   416                           ; BSR set to: 15
   417  000FD0  49                 	db	73	;'I'
   418  000FD1  6E                 	db	110	;'n'
   419  000FD2  73                 	db	115	;'s'
   420  000FD3  65                 	db	101	;'e'
   421  000FD4  72                 	db	114	;'r'
   422  000FD5  74                 	db	116	;'t'
   423  000FD6  00                 	db	0
   424  000FD7                     STR_1:
   425                           
   426                           ; BSR set to: 15
   427  000FD7  20                 	db	32
   428  000FD8  44                 	db	68	;'D'
   429  000FD9  69                 	db	105	;'i'
   430  000FDA  61                 	db	97	;'a'
   431  000FDB  00                 	db	0
   432  000FDC                     STR_4:
   433                           
   434                           ; BSR set to: 15
   435  000FDC  48                 	db	72	;'H'
   436  000FDD  6F                 	db	111	;'o'
   437  000FDE  72                 	db	114	;'r'
   438  000FDF  61                 	db	97	;'a'
   439  000FE0  00                 	db	0
   440  000FE1                     STR_6:
   441                           
   442                           ; BSR set to: 15
   443  000FE1  20                 	db	32
   444  000FE2  53                 	db	83	;'S'
   445  000FE3  65                 	db	101	;'e'
   446  000FE4  67                 	db	103	;'g'
   447  000FE5  00                 	db	0
   448  000FE6                     STR_5:
   449                           
   450                           ; BSR set to: 15
   451  000FE6  20                 	db	32
   452  000FE7  4D                 	db	77	;'M'
   453  000FE8  69                 	db	105	;'i'
   454  000FE9  6E                 	db	110	;'n'
   455  000FEA  00                 	db	0
   456  000FEB                     STR_3:
   457                           
   458                           ; BSR set to: 15
   459  000FEB  41                 	db	65	;'A'
   460  000FEC  6E                 	db	110	;'n'
   461  000FED  69                 	db	105	;'i'
   462  000FEE  6F                 	db	111	;'o'
   463  000FEF  00                 	db	0
   464  000FF0                     STR_2:
   465                           
   466                           ; BSR set to: 15
   467  000FF0  20                 	db	32
   468  000FF1  4D                 	db	77	;'M'
   469  000FF2  65                 	db	101	;'e'
   470  000FF3  73                 	db	115	;'s'
   471  000FF4  00                 	db	0
   472  000FF5                     STR_13:
   473                           
   474                           ; BSR set to: 15
   475  000FF5  25                 	db	37
   476  000FF6  30                 	db	48	;'0'
   477  000FF7  31                 	db	49	;'1'
   478  000FF8  75                 	db	117	;'u'
   479  000FF9  00                 	db	0
   480  0000                     
   481                           ; #config settings
   482  000FFA  00                 	db	0	; dummy byte at the end
   483  0000                     
   484                           	psect	nvBANK0
   485  0000EB                     __pnvBANK0:
   486                           	opt stack 0
   487  0000EB                     _anio_d:
   488                           	opt stack 0
   489  0000EB                     	ds	1
   490  0000EC                     _anio_u:
   491                           	opt stack 0
   492  0000EC                     	ds	1
   493  0000ED                     _dia_semana:
   494                           	opt stack 0
   495  0000ED                     	ds	1
   496  0000EE                     _mes_d:
   497                           	opt stack 0
   498  0000EE                     	ds	1
   499  0000EF                     _mes_u:
   500                           	opt stack 0
   501  0000EF                     	ds	1
   502  0000F0                     _fecha_d:
   503                           	opt stack 0
   504  0000F0                     	ds	1
   505  0000F1                     _fecha_u:
   506                           	opt stack 0
   507  0000F1                     	ds	1
   508  0000F2                     _hora_d:
   509                           	opt stack 0
   510  0000F2                     	ds	1
   511  0000F3                     _hora_u:
   512                           	opt stack 0
   513  0000F3                     	ds	1
   514  0000F4                     _minuto_d:
   515                           	opt stack 0
   516  0000F4                     	ds	1
   517  0000F5                     _minuto_u:
   518                           	opt stack 0
   519  0000F5                     	ds	1
   520  0000F6                     _segundo_d:
   521                           	opt stack 0
   522  0000F6                     	ds	1
   523  0000F7                     _segundo_u:
   524                           	opt stack 0
   525  0000F7                     	ds	1
   526  0000                     _RTCCFG	set	3903
   527  0000                     _ANCON1	set	3913
   528  0000                     _ANCON0	set	3912
   529  0000                     _RTCCFGbits	set	3903
   530  0000                     _ALRMCFGbits	set	3985
   531  0000                     _EECON2	set	4007
   532  0000                     _INTCONbits	set	4082
   533  0000                     _RTCVALH	set	3993
   534  0000                     _RTCVALL	set	3992
   535  0000                     _TRISBbits	set	3987
   536  0000                     _T1CONbits	set	4045
   537  0000                     _TRISC	set	3988
   538  0000                     _TRISB	set	3987
   539  0000                     _TRISA	set	3986
   540  0000                     _OSCCONbits	set	4051
   541  0000                     _OSCTUNEbits	set	3995
   542  0000                     _LATBbits	set	3978
   543  0000                     _PORTCbits	set	3970
   544  0000                     _PORTAbits	set	3968
   545  0000                     _LATAbits	set	3977
   546  0000                     _PIE3bits	set	4003
   547                           
   548                           	psect	cinit
   549  0036FA                     __pcinit:
   550                           	opt stack 0
   551  0036FA                     start_initialization:
   552                           	opt stack 0
   553  0036FA                     __initialization:
   554                           	opt stack 0
   555                           
   556                           ; Initialize objects allocated to BANK1 (12 bytes)
   557                           ; load TBLPTR registers with __pidataBANK1
   558  0036FA  0E3E               	movlw	low __pidataBANK1
   559  0036FC  6EF6               	movwf	tblptrl,c
   560  0036FE  0E3B               	movlw	high __pidataBANK1
   561  003700  6EF7               	movwf	tblptrh,c
   562  003702  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   563  003704  6EF8               	movwf	tblptru,c
   564  003706  EE01  F000         	lfsr	0,__pdataBANK1
   565  00370A  EE10 F00C          	lfsr	1,12
   566  00370E                     copy_data0:
   567  00370E  0009               	tblrd		*+
   568  003710  CFF5 FFEE          	movff	tablat,postinc0
   569  003714  50E5               	movf	postdec1,w,c
   570  003716  50E1               	movf	fsr1l,w,c
   571  003718  E1FA               	bnz	copy_data0
   572                           
   573                           ; Initialize objects allocated to BANK0 (20 bytes)
   574                           ; load TBLPTR registers with __pidataBANK0
   575  00371A  0EDC               	movlw	low __pidataBANK0
   576  00371C  6EF6               	movwf	tblptrl,c
   577  00371E  0E3A               	movlw	high __pidataBANK0
   578  003720  6EF7               	movwf	tblptrh,c
   579  003722  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   580  003724  6EF8               	movwf	tblptru,c
   581  003726  EE00  F0D7         	lfsr	0,__pdataBANK0
   582  00372A  EE10 F014          	lfsr	1,20
   583  00372E                     copy_data1:
   584  00372E  0009               	tblrd		*+
   585  003730  CFF5 FFEE          	movff	tablat,postinc0
   586  003734  50E5               	movf	postdec1,w,c
   587  003736  50E1               	movf	fsr1l,w,c
   588  003738  E1FA               	bnz	copy_data1
   589                           
   590                           ; Clear objects allocated to BITBANK0 (1 bytes)
   591  00373A  0100               	movlb	0
   592  00373C  6BF8               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   593                           
   594                           ; Clear objects allocated to BANK0 (97 bytes)
   595  00373E  EE00  F060         	lfsr	0,__pbssBANK0
   596  003742  0E61               	movlw	97
   597  003744                     clear_0:
   598  003744  6AEE               	clrf	postinc0,c
   599  003746  06E8               	decf	wreg,f,c
   600  003748  E1FD               	bnz	clear_0
   601  00374A                     end_of_initialization:
   602                           	opt stack 0
   603  00374A                     __end_of__initialization:
   604                           	opt stack 0
   605  00374A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   606  00374C  6EF8               	movwf	tblptru,c
   607  00374E  0100               	movlb	0
   608  003750  EF1E  F01D         	goto	_main	;jump to C main() function
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1l	equ	0xFE1
   617                           
   618                           	psect	bitbssBANK0
   619  0007C0                     __pbitbssBANK0:
   620                           	opt stack 0
   621  0007C0                     _flag:
   622                           	opt stack 0
   623  0007C0                     	ds	1
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           postinc0	equ	0xFEE
   629                           wreg	equ	0xFE8
   630                           postdec1	equ	0xFE5
   631                           fsr1l	equ	0xFE1
   632                           
   633                           	psect	bssBANK0
   634  000060                     __pbssBANK0:
   635                           	opt stack 0
   636  000060                     _array_contrasenia_ingresada:
   637                           	opt stack 0
   638  000060                     	ds	8
   639  000068                     _Rtcc_read_TimeDate:
   640                           	opt stack 0
   641  000068                     	ds	8
   642  000070                     _RtccAlrmTimeDate:
   643                           	opt stack 0
   644  000070                     	ds	8
   645  000078                     _RtccTimeDate:
   646                           	opt stack 0
   647  000078                     	ds	8
   648  000080                     _numeros_para_fecha:
   649                           	opt stack 0
   650  000080                     	ds	4
   651  000084                     _RtccTimeVal:
   652                           	opt stack 0
   653  000084                     	ds	4
   654  000088                     _errno:
   655                           	opt stack 0
   656  000088                     	ds	2
   657  00008A                     _txt_insert_pass:
   658                           	opt stack 0
   659  00008A                     	ds	2
   660  00008C                     _boton_seleccionar:
   661                           	opt stack 0
   662  00008C                     	ds	2
   663  00008E                     _alarma_sonando:
   664                           	opt stack 0
   665  00008E                     	ds	2
   666  000090                     _alarma_activada:
   667                           	opt stack 0
   668  000090                     	ds	2
   669  000092                     _motivo_ingreso_de_numeros:
   670                           	opt stack 0
   671  000092                     	ds	2
   672  000094                     _numeros_ingresados:
   673                           	opt stack 0
   674  000094                     	ds	2
   675  000096                     _segundo:
   676                           	opt stack 0
   677  000096                     	ds	2
   678  000098                     _k:
   679                           	opt stack 0
   680  000098                     	ds	2
   681  00009A                     _c:
   682                           	opt stack 0
   683  00009A                     	ds	2
   684  00009C                     _b:
   685                           	opt stack 0
   686  00009C                     	ds	2
   687  00009E                     _a:
   688                           	opt stack 0
   689  00009E                     	ds	2
   690  0000A0                     _j:
   691                           	opt stack 0
   692  0000A0                     	ds	2
   693  0000A2                     _i:
   694                           	opt stack 0
   695  0000A2                     	ds	2
   696  0000A4                     _key:
   697                           	opt stack 0
   698  0000A4                     	ds	1
   699  0000A5                     _buffer2:
   700                           	opt stack 0
   701  0000A5                     	ds	20
   702  0000B9                     _RtccDate:
   703                           	opt stack 0
   704  0000B9                     	ds	4
   705  0000BD                     _RtccTime:
   706                           	opt stack 0
   707  0000BD                     	ds	4
   708                           tblptru	equ	0xFF8
   709                           tblptrh	equ	0xFF7
   710                           tblptrl	equ	0xFF6
   711                           tablat	equ	0xFF5
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           postdec1	equ	0xFE5
   715                           fsr1l	equ	0xFE1
   716                           
   717                           	psect	dataBANK0
   718  0000D7                     __pdataBANK0:
   719                           	opt stack 0
   720  0000D7                     _array_contrasenia:
   721                           	opt stack 0
   722  0000D7                     	ds	8
   723  0000DF                     _minuto:
   724                           	opt stack 0
   725  0000DF                     	ds	2
   726  0000E1                     _hora:
   727                           	opt stack 0
   728  0000E1                     	ds	2
   729  0000E3                     _dia:
   730                           	opt stack 0
   731  0000E3                     	ds	2
   732  0000E5                     _diasem:
   733                           	opt stack 0
   734  0000E5                     	ds	2
   735  0000E7                     _mes:
   736                           	opt stack 0
   737  0000E7                     	ds	2
   738  0000E9                     _anio:
   739                           	opt stack 0
   740  0000E9                     	ds	2
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           postinc0	equ	0xFEE
   746                           wreg	equ	0xFE8
   747                           postdec1	equ	0xFE5
   748                           fsr1l	equ	0xFE1
   749                           
   750                           	psect	dataBANK1
   751  000100                     __pdataBANK1:
   752                           	opt stack 0
   753  000100                     _array_seleccionar:
   754                           	opt stack 0
   755  000100                     	ds	12
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           fsr1l	equ	0xFE1
   764                           
   765                           	psect	cstackBANK0
   766  0000C1                     __pcstackBANK0:
   767                           	opt stack 0
   768  0000C1                     _covertir_valores_de_array_a_escala_decimal$2445:
   769                           	opt stack 0
   770                           
   771                           ; 3 bytes @ 0x0
   772  0000C1                     	ds	3
   773  0000C4                     _covertir_valores_de_array_a_escala_decimal$2446:
   774                           	opt stack 0
   775                           
   776                           ; 3 bytes @ 0x3
   777  0000C4                     	ds	3
   778  0000C7                     covertir_valores_de_array_a_escala_decimal@numero:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x6
   782  0000C7                     	ds	2
   783  0000C9                     covertir_valores_de_array_a_escala_decimal@i:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x8
   787  0000C9                     	ds	2
   788  0000CB                     editar_fecha_reloj_digital@dia_ingresado:
   789                           	opt stack 0
   790  0000CB                     editar_hora_reloj_digital@hora_ingresada:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0xA
   794  0000CB                     	ds	2
   795  0000CD                     editar_fecha_reloj_digital@mes_ingresado:
   796                           	opt stack 0
   797  0000CD                     editar_hora_reloj_digital@minuto_ingresado:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0xC
   801  0000CD                     	ds	2
   802  0000CF                     editar_fecha_reloj_digital@anio_ingresado:
   803                           	opt stack 0
   804  0000CF                     editar_hora_reloj_digital@segundo_ingresado:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0xE
   808  0000CF                     	ds	2
   809  0000D1                     editar_fecha_reloj_digital@posicion:
   810                           	opt stack 0
   811  0000D1                     editar_hora_reloj_digital@posicion:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x10
   815  0000D1                     	ds	2
   816  0000D3                     ??_ir_a_pantalla_edicion:
   817                           
   818                           ; 1 bytes @ 0x12
   819  0000D3                     	ds	1
   820  0000D4                     ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x13
   824  0000D4                     	ds	2
   825  0000D6                     ??_main:
   826                           
   827                           ; 1 bytes @ 0x15
   828  0000D6                     	ds	1
   829                           tblptru	equ	0xFF8
   830                           tblptrh	equ	0xFF7
   831                           tblptrl	equ	0xFF6
   832                           tablat	equ	0xFF5
   833                           postinc0	equ	0xFEE
   834                           wreg	equ	0xFE8
   835                           postdec1	equ	0xFE5
   836                           fsr1l	equ	0xFE1
   837                           
   838                           	psect	cstackCOMRAM
   839  000001                     __pcstackCOMRAM:
   840                           	opt stack 0
   841  000001                     ??_isdigit:
   842  000001                     ??_lcd_send_nibble:
   843  000001                     ?_verificar_contrasenia:
   844                           	opt stack 0
   845  000001                     ?___awdiv:
   846                           	opt stack 0
   847  000001                     ?___lwdiv:
   848                           	opt stack 0
   849  000001                     ?___ftpack:
   850                           	opt stack 0
   851  000001                     ?_frexp:
   852                           	opt stack 0
   853  000001                     ?___ftneg:
   854                           	opt stack 0
   855  000001                     Delay100TCYx@unit:
   856                           	opt stack 0
   857  000001                     Delay1KTCYx@unit:
   858                           	opt stack 0
   859  000001                     RtccReadDate@pDt:
   860                           	opt stack 0
   861  000001                     RtccReadTime@pTm:
   862                           	opt stack 0
   863  000001                     RtccWriteDate@pDt:
   864                           	opt stack 0
   865  000001                     RtccWriteTime@pTm:
   866                           	opt stack 0
   867  000001                     ___awdiv@dividend:
   868                           	opt stack 0
   869  000001                     ___lwdiv@dividend:
   870                           	opt stack 0
   871  000001                     ___ftpack@arg:
   872                           	opt stack 0
   873  000001                     ___ftge@ff1:
   874                           	opt stack 0
   875  000001                     ___ftneg@f1:
   876                           	opt stack 0
   877  000001                     frexp@value:
   878                           	opt stack 0
   879                           
   880                           ; 3 bytes @ 0x0
   881  000001                     	ds	1
   882  000002                     lcd_send_nibble@nibble:
   883                           	opt stack 0
   884  000002                     _isdigit$1974:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x1
   888  000002                     	ds	1
   889  000003                     lcd_send_byte@n:
   890                           	opt stack 0
   891  000003                     RtccWriteDate@di:
   892                           	opt stack 0
   893  000003                     RtccWriteTime@di:
   894                           	opt stack 0
   895  000003                     isdigit@c:
   896                           	opt stack 0
   897  000003                     ___awdiv@divisor:
   898                           	opt stack 0
   899  000003                     ___lwdiv@divisor:
   900                           	opt stack 0
   901  000003                     RtccReadDate@rTD1:
   902                           	opt stack 0
   903  000003                     RtccReadTime@rTD1:
   904                           	opt stack 0
   905                           
   906                           ; 8 bytes @ 0x2
   907  000003                     	ds	1
   908  000004                     lcd_send_byte@address:
   909                           	opt stack 0
   910  000004                     ___ftpack@exp:
   911                           	opt stack 0
   912  000004                     frexp@eptr:
   913                           	opt stack 0
   914  000004                     ___ftge@ff2:
   915                           	opt stack 0
   916                           
   917                           ; 3 bytes @ 0x3
   918  000004                     	ds	1
   919  000005                     lcd_init@i:
   920                           	opt stack 0
   921  000005                     lcd_gotoxy@y:
   922                           	opt stack 0
   923  000005                     lcd_comand@d:
   924                           	opt stack 0
   925  000005                     RtccWriteDate@wasOn:
   926                           	opt stack 0
   927  000005                     RtccWriteTime@wasOn:
   928                           	opt stack 0
   929  000005                     ___awdiv@counter:
   930                           	opt stack 0
   931  000005                     ___ftpack@sign:
   932                           	opt stack 0
   933  000005                     ___lwdiv@quotient:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x4
   937  000005                     	ds	1
   938  000006                     ??___ftpack:
   939  000006                     ??_frexp:
   940  000006                     lcd_gotoxy@x:
   941                           	opt stack 0
   942  000006                     RtccWriteDate@wasAlrm:
   943                           	opt stack 0
   944  000006                     RtccWriteTime@wasAlrm:
   945                           	opt stack 0
   946  000006                     ___awdiv@sign:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x5
   950  000006                     	ds	1
   951  000007                     ??___ftge:
   952  000007                     lcd_gotoxy@address:
   953                           	opt stack 0
   954  000007                     RtccWriteTime@wasWrEn:
   955                           	opt stack 0
   956  000007                     ___lwdiv@counter:
   957                           	opt stack 0
   958  000007                     verificar_contrasenia@equals:
   959                           	opt stack 0
   960  000007                     RtccWriteDate@tempYear:
   961                           	opt stack 0
   962  000007                     ___awdiv@quotient:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0x6
   966  000007                     	ds	1
   967  000008                     ?___lwmod:
   968                           	opt stack 0
   969  000008                     lcd_putc@c:
   970                           	opt stack 0
   971  000008                     RtccWriteTime@tempMinSec:
   972                           	opt stack 0
   973  000008                     ___lwmod@dividend:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x7
   977  000008                     	ds	1
   978  000009                     ?___ftdiv:
   979                           	opt stack 0
   980  000009                     ?___awtoft:
   981                           	opt stack 0
   982  000009                     ?___lltoft:
   983                           	opt stack 0
   984  000009                     RtccWriteDate@wasWrEn:
   985                           	opt stack 0
   986  000009                     verificar_contrasenia@i:
   987                           	opt stack 0
   988  000009                     lcd_putrs@ptr:
   989                           	opt stack 0
   990  000009                     ___awtoft@c:
   991                           	opt stack 0
   992  000009                     ___ftdiv@f1:
   993                           	opt stack 0
   994  000009                     ___lltoft@c:
   995                           	opt stack 0
   996                           
   997                           ; 4 bytes @ 0x8
   998  000009                     	ds	1
   999  00000A                     RtccWriteDate@tempDayMonth:
  1000                           	opt stack 0
  1001  00000A                     RtccWriteTime@tempHourWDay:
  1002                           	opt stack 0
  1003  00000A                     ___lwmod@divisor:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x9
  1007  00000A                     	ds	1
  1008  00000B                     ??_titila_texto_insert_password:
  1009  00000B                     resetear_pantalla_ingresar_contrasenia@i:
  1010                           	opt stack 0
  1011  00000B                     RtccReadDate@rTD0:
  1012                           	opt stack 0
  1013  00000B                     RtccReadTime@rTD0:
  1014                           	opt stack 0
  1015                           
  1016                           ; 8 bytes @ 0xA
  1017  00000B                     	ds	1
  1018  00000C                     ___awtoft@sign:
  1019                           	opt stack 0
  1020  00000C                     ___lwmod@counter:
  1021                           	opt stack 0
  1022  00000C                     RtccWriteDate@tempHourWDay:
  1023                           	opt stack 0
  1024  00000C                     ___ftdiv@f2:
  1025                           	opt stack 0
  1026                           
  1027                           ; 3 bytes @ 0xB
  1028  00000C                     	ds	1
  1029  00000D                     ??___lltoft:
  1030  00000D                     ?___ftmul:
  1031                           	opt stack 0
  1032  00000D                     ?___fttol:
  1033                           	opt stack 0
  1034  00000D                     ___ftmul@f1:
  1035                           	opt stack 0
  1036  00000D                     ___fttol@f1:
  1037                           	opt stack 0
  1038                           
  1039                           ; 3 bytes @ 0xC
  1040  00000D                     	ds	1
  1041  00000E                     
  1042                           ; 1 bytes @ 0xD
  1043  00000E                     	ds	1
  1044  00000F                     ??___ftdiv:
  1045                           
  1046                           ; 1 bytes @ 0xE
  1047  00000F                     	ds	1
  1048  000010                     ___ftmul@f2:
  1049                           	opt stack 0
  1050                           
  1051                           ; 3 bytes @ 0xF
  1052  000010                     	ds	1
  1053  000011                     ??___fttol:
  1054  000011                     ___lltoft@exp:
  1055                           	opt stack 0
  1056                           
  1057                           ; 1 bytes @ 0x10
  1058  000011                     	ds	1
  1059  000012                     ___ftdiv@cntr:
  1060                           	opt stack 0
  1061                           
  1062                           ; 1 bytes @ 0x11
  1063  000012                     	ds	1
  1064  000013                     ??___ftmul:
  1065  000013                     ___ftdiv@f3:
  1066                           	opt stack 0
  1067                           
  1068                           ; 3 bytes @ 0x12
  1069  000013                     	ds	3
  1070  000016                     ___ftdiv@exp:
  1071                           	opt stack 0
  1072  000016                     ___ftmul@exp:
  1073                           	opt stack 0
  1074  000016                     ___fttol@sign1:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x15
  1078  000016                     	ds	1
  1079  000017                     ___ftdiv@sign:
  1080                           	opt stack 0
  1081  000017                     ___ftmul@f3_as_product:
  1082                           	opt stack 0
  1083  000017                     ___fttol@lval:
  1084                           	opt stack 0
  1085                           
  1086                           ; 4 bytes @ 0x16
  1087  000017                     	ds	3
  1088  00001A                     ___ftmul@cntr:
  1089                           	opt stack 0
  1090                           
  1091                           ; 1 bytes @ 0x19
  1092  00001A                     	ds	1
  1093  00001B                     ___ftmul@sign:
  1094                           	opt stack 0
  1095  00001B                     ___fttol@exp1:
  1096                           	opt stack 0
  1097                           
  1098                           ; 1 bytes @ 0x1A
  1099  00001B                     	ds	1
  1100  00001C                     ?___wmul:
  1101                           	opt stack 0
  1102  00001C                     ?___altoft:
  1103                           	opt stack 0
  1104  00001C                     ___wmul@multiplier:
  1105                           	opt stack 0
  1106  00001C                     ___altoft@c:
  1107                           	opt stack 0
  1108                           
  1109                           ; 4 bytes @ 0x1B
  1110  00001C                     	ds	2
  1111  00001E                     ___wmul@multiplicand:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x1D
  1115  00001E                     	ds	2
  1116  000020                     ??___altoft:
  1117  000020                     ___wmul@product:
  1118                           	opt stack 0
  1119                           
  1120                           ; 2 bytes @ 0x1F
  1121  000020                     	ds	2
  1122  000022                     ?_sprintf:
  1123                           	opt stack 0
  1124  000022                     ?___ftadd:
  1125                           	opt stack 0
  1126  000022                     sprintf@sp:
  1127                           	opt stack 0
  1128  000022                     ___ftadd@f1:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0x21
  1132  000022                     	ds	2
  1133  000024                     ___altoft@exp:
  1134                           	opt stack 0
  1135  000024                     sprintf@f:
  1136                           	opt stack 0
  1137                           
  1138                           ; 2 bytes @ 0x23
  1139  000024                     	ds	1
  1140  000025                     ___altoft@sign:
  1141                           	opt stack 0
  1142  000025                     ___ftadd@f2:
  1143                           	opt stack 0
  1144                           
  1145                           ; 3 bytes @ 0x24
  1146  000025                     	ds	3
  1147  000028                     ??___ftadd:
  1148                           
  1149                           ; 1 bytes @ 0x27
  1150  000028                     	ds	3
  1151  00002B                     ___ftadd@sign:
  1152                           	opt stack 0
  1153                           
  1154                           ; 1 bytes @ 0x2A
  1155  00002B                     	ds	1
  1156  00002C                     ??_sprintf:
  1157  00002C                     ___ftadd@exp2:
  1158                           	opt stack 0
  1159                           
  1160                           ; 1 bytes @ 0x2B
  1161  00002C                     	ds	1
  1162  00002D                     ___ftadd@exp1:
  1163                           	opt stack 0
  1164                           
  1165                           ; 1 bytes @ 0x2C
  1166  00002D                     	ds	1
  1167  00002E                     ?___ftsub:
  1168                           	opt stack 0
  1169  00002E                     ?_floor:
  1170                           	opt stack 0
  1171  00002E                     ?_eval_poly:
  1172                           	opt stack 0
  1173  00002E                     ___ftsub@f1:
  1174                           	opt stack 0
  1175  00002E                     floor@x:
  1176                           	opt stack 0
  1177  00002E                     eval_poly@x:
  1178                           	opt stack 0
  1179                           
  1180                           ; 3 bytes @ 0x2D
  1181  00002E                     	ds	2
  1182  000030                     sprintf@ap:
  1183                           	opt stack 0
  1184                           
  1185                           ; 2 bytes @ 0x2F
  1186  000030                     	ds	1
  1187  000031                     eval_poly@d:
  1188                           	opt stack 0
  1189  000031                     ___ftsub@f2:
  1190                           	opt stack 0
  1191  000031                     floor@i:
  1192                           	opt stack 0
  1193                           
  1194                           ; 3 bytes @ 0x30
  1195  000031                     	ds	1
  1196  000032                     sprintf@flag:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x31
  1200  000032                     	ds	1
  1201  000033                     sprintf@val:
  1202                           	opt stack 0
  1203  000033                     eval_poly@n:
  1204                           	opt stack 0
  1205                           
  1206                           ; 2 bytes @ 0x32
  1207  000033                     	ds	1
  1208  000034                     floor@expon:
  1209                           	opt stack 0
  1210                           
  1211                           ; 2 bytes @ 0x33
  1212  000034                     	ds	1
  1213  000035                     ??_eval_poly:
  1214  000035                     sprintf@prec:
  1215                           	opt stack 0
  1216                           
  1217                           ; 1 bytes @ 0x34
  1218  000035                     	ds	1
  1219  000036                     sprintf@width:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x35
  1223  000036                     	ds	1
  1224  000037                     eval_poly@res:
  1225                           	opt stack 0
  1226                           
  1227                           ; 3 bytes @ 0x36
  1228  000037                     	ds	1
  1229  000038                     sprintf@c:
  1230                           	opt stack 0
  1231                           
  1232                           ; 1 bytes @ 0x37
  1233  000038                     	ds	1
  1234  000039                     ??_cambiar_opcion:
  1235  000039                     guarda_numero_ingresado@num:
  1236                           	opt stack 0
  1237                           
  1238                           ; 2 bytes @ 0x38
  1239  000039                     	ds	1
  1240  00003A                     ?_log:
  1241                           	opt stack 0
  1242  00003A                     ?_ldexp:
  1243                           	opt stack 0
  1244  00003A                     ldexp@value:
  1245                           	opt stack 0
  1246  00003A                     log@x:
  1247                           	opt stack 0
  1248                           
  1249                           ; 3 bytes @ 0x39
  1250  00003A                     	ds	1
  1251  00003B                     ??_ingreso_numero:
  1252                           
  1253                           ; 1 bytes @ 0x3A
  1254  00003B                     	ds	2
  1255  00003D                     ??_activar_alarma:
  1256  00003D                     ir_a_pantalla_editar_contrasenia@i:
  1257                           	opt stack 0
  1258  00003D                     ldexp@newexp:
  1259                           	opt stack 0
  1260  00003D                     log@exponent:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0x3C
  1264  00003D                     	ds	1
  1265  00003E                     activar_alarma@intentos_de_contrasenia:
  1266                           	opt stack 0
  1267                           
  1268                           ; 2 bytes @ 0x3D
  1269  00003E                     	ds	1
  1270  00003F                     ??_ldexp:
  1271                           
  1272                           ; 1 bytes @ 0x3E
  1273  00003F                     	ds	2
  1274  000041                     ?_exp:
  1275                           	opt stack 0
  1276  000041                     exp@x:
  1277                           	opt stack 0
  1278                           
  1279                           ; 3 bytes @ 0x40
  1280  000041                     	ds	3
  1281  000044                     _exp$2449:
  1282                           	opt stack 0
  1283                           
  1284                           ; 3 bytes @ 0x43
  1285  000044                     	ds	3
  1286  000047                     exp@exponent:
  1287                           	opt stack 0
  1288                           
  1289                           ; 2 bytes @ 0x46
  1290  000047                     	ds	2
  1291  000049                     exp@sign:
  1292                           	opt stack 0
  1293                           
  1294                           ; 1 bytes @ 0x48
  1295  000049                     	ds	1
  1296  00004A                     ?_pow:
  1297                           	opt stack 0
  1298  00004A                     pow@x:
  1299                           	opt stack 0
  1300                           
  1301                           ; 3 bytes @ 0x49
  1302  00004A                     	ds	3
  1303  00004D                     pow@y:
  1304                           	opt stack 0
  1305                           
  1306                           ; 3 bytes @ 0x4C
  1307  00004D                     	ds	3
  1308  000050                     _pow$2447:
  1309                           	opt stack 0
  1310                           
  1311                           ; 3 bytes @ 0x4F
  1312  000050                     	ds	3
  1313  000053                     _pow$2448:
  1314                           	opt stack 0
  1315                           
  1316                           ; 3 bytes @ 0x52
  1317  000053                     	ds	3
  1318  000056                     pow@sign:
  1319                           	opt stack 0
  1320                           
  1321                           ; 1 bytes @ 0x55
  1322  000056                     	ds	1
  1323  000057                     pow@yi:
  1324                           	opt stack 0
  1325                           
  1326                           ; 4 bytes @ 0x56
  1327  000057                     	ds	4
  1328  00005B                     ?_covertir_valores_de_array_a_escala_decimal:
  1329                           	opt stack 0
  1330                           
  1331                           ; 2 bytes @ 0x5A
  1332  00005B                     	ds	2
  1333  00005D                     ??_covertir_valores_de_array_a_escala_decimal:
  1334                           
  1335                           ; 1 bytes @ 0x5C
  1336  00005D                     	ds	2
  1337  00005F                     ??_editar_fecha_reloj_digital:
  1338  00005F                     ??_editar_hora_reloj_digital:
  1339                           
  1340                           ; 1 bytes @ 0x5E
  1341  00005F                     	ds	1
  1342  000060                     tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           
  1351                           ; 1 bytes @ 0x5F
  1352 ;;
  1353 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1354 ;;
  1355 ;; *************** function _main *****************
  1356 ;; Defined at:
  1357 ;;		line 720 in file "main.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  2  434[None  ] int 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;Total ram usage:        1 bytes
  1376 ;; Hardware stack levels required when called:   13
  1377 ;; This function calls:
  1378 ;;		_Read_RTC
  1379 ;;		_ir_a_pantalla_inicial
  1380 ;;		_setup
  1381 ;; This function is called by:
  1382 ;;		Startup code after reset
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text0
  1387  003A3C                     __ptext0:
  1388                           	opt stack 0
  1389  003A3C                     _main:
  1390                           	opt stack 18
  1391                           
  1392                           ;main.c: 721: setup();
  1393                           
  1394                           ;incstack = 0
  1395  003A3C  EC4B  F01C         	call	_setup	;wreg free
  1396  003A40                     
  1397                           ;main.c: 725: Read_RTC();
  1398  003A40  ECB0  F010         	call	_Read_RTC	;wreg free
  1399                           
  1400                           ;main.c: 727: ir_a_pantalla_inicial();
  1401  003A44  EC91  F01D         	call	_ir_a_pantalla_inicial	;wreg free
  1402  003A48  D7FB               	goto	l435
  1403                           
  1404                           ;main.c: 728: }
  1405                           ;main.c: 730: _delay((unsigned long)((98)*(8000000/4000.0)));
  1406  003A4A  0EFF               	movlw	255
  1407  003A4C  0100               	movlb	0	; () banked
  1408  003A4E  6FD6               	movwf	??_main& (0+255),b
  1409  003A50  0E8A               	movlw	138
  1410  003A52                     u6257:
  1411  003A52  2EE8               	decfsz	wreg,f,c
  1412  003A54  D7FE               	bra	u6257
  1413  003A56  2FD6               	decfsz	??_main& (0+255),f,b
  1414  003A58  D7FC               	bra	u6257
  1415  003A5A  F000               	nop	
  1416                           
  1417                           ;main.c: 731: return 0;
  1418                           ;	Return value of _main is never used
  1419  003A5C  EF00  F000         	goto	start
  1420  003A60                     __end_of_main:
  1421                           	opt stack 0
  1422                           tblptru	equ	0xFF8
  1423                           tblptrh	equ	0xFF7
  1424                           tblptrl	equ	0xFF6
  1425                           tablat	equ	0xFF5
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           
  1431 ;; *************** function _setup *****************
  1432 ;; Defined at:
  1433 ;;		line 682 in file "main.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    7
  1454 ;; This function calls:
  1455 ;;		_Write_RTC
  1456 ;;		_lcd_comand
  1457 ;;		_lcd_init
  1458 ;;		_set_reloj_digital
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text1
  1465  003896                     __ptext1:
  1466                           	opt stack 0
  1467  003896                     _setup:
  1468                           	opt stack 23
  1469                           
  1470                           ;main.c: 683: OSCTUNEbits.INTSRC = 1;
  1471                           
  1472                           ;incstack = 0
  1473  003896  8E9B               	bsf	3995,7,c	;volatile
  1474                           
  1475                           ;main.c: 684: OSCTUNEbits.PLLEN = 0;
  1476  003898  9C9B               	bcf	3995,6,c	;volatile
  1477                           
  1478                           ;main.c: 685: OSCCONbits.IRCF0 = 1;
  1479  00389A  88D3               	bsf	4051,4,c	;volatile
  1480                           
  1481                           ;main.c: 686: OSCCONbits.IRCF1 = 1;
  1482  00389C  8AD3               	bsf	4051,5,c	;volatile
  1483                           
  1484                           ;main.c: 687: OSCCONbits.IRCF2 = 1;
  1485  00389E  8CD3               	bsf	4051,6,c	;volatile
  1486                           
  1487                           ;main.c: 688: OSCCONbits.SCS0 = 0;
  1488  0038A0  90D3               	bcf	4051,0,c	;volatile
  1489                           
  1490                           ;main.c: 689: OSCCONbits.SCS1 = 0;
  1491  0038A2  92D3               	bcf	4051,1,c	;volatile
  1492                           
  1493                           ;main.c: 691: TRISA = 0b11110000;
  1494  0038A4  0EF0               	movlw	240
  1495  0038A6  6E92               	movwf	3986,c	;volatile
  1496                           
  1497                           ;main.c: 692: TRISB = 0;
  1498  0038A8  0E00               	movlw	0
  1499  0038AA  6E93               	movwf	3987,c	;volatile
  1500                           
  1501                           ;main.c: 693: TRISC = 0b11100111;
  1502  0038AC  0EE7               	movlw	231
  1503  0038AE  6E94               	movwf	3988,c	;volatile
  1504                           
  1505                           ;main.c: 701: ANCON0 = 0b11111111;
  1506  0038B0  010F               	movlb	15	; () banked
  1507  0038B2  6948               	setf	72,b	;volatile
  1508                           
  1509                           ; BSR set to: 15
  1510                           ;main.c: 703: ANCON1 = 0b11111111;
  1511  0038B4  010F               	movlb	15	; () banked
  1512  0038B6  6949               	setf	73,b	;volatile
  1513                           
  1514                           ; BSR set to: 15
  1515                           ;main.c: 706: RTCCFGbits.RTCEN = 1;
  1516  0038B8  010F               	movlb	15	; () banked
  1517  0038BA  8F3F               	bsf	63,7,b	;volatile
  1518                           
  1519                           ; BSR set to: 15
  1520                           ;main.c: 707: RTCCFGbits.RTCWREN = 1;
  1521  0038BC  010F               	movlb	15	; () banked
  1522  0038BE  8B3F               	bsf	63,5,b	;volatile
  1523                           
  1524                           ; BSR set to: 15
  1525                           ;main.c: 708: T1CONbits.T1OSCEN = 1;
  1526  0038C0  86CD               	bsf	4045,3,c	;volatile
  1527                           
  1528                           ; BSR set to: 15
  1529                           ;main.c: 709: Write_RTC();
  1530  0038C2  EC27  F00F         	call	_Write_RTC	;wreg free
  1531                           
  1532                           ;main.c: 710: lcd_init();
  1533  0038C6  EC71  F01A         	call	_lcd_init	;wreg free
  1534                           
  1535                           ;main.c: 711: lcd_comand(0b00001100);
  1536  0038CA  0E0C               	movlw	12
  1537  0038CC  EC98  F01D         	call	_lcd_comand
  1538                           
  1539                           ;main.c: 712: LATBbits.LATB2 = 0;;
  1540  0038D0  948A               	bcf	3978,2,c	;volatile
  1541                           
  1542                           ;main.c: 713: LATBbits.LATB1 = 0;;
  1543  0038D2  928A               	bcf	3978,1,c	;volatile
  1544                           
  1545                           ;main.c: 714: LATBbits.LATB0 = 0;;
  1546  0038D4  908A               	bcf	3978,0,c	;volatile
  1547                           
  1548                           ;main.c: 716: set_reloj_digital();
  1549  0038D6  ECA5  F01D         	call	_set_reloj_digital	;wreg free
  1550                           
  1551                           ;main.c: 717: Write_RTC();
  1552  0038DA  EC27  F00F         	call	_Write_RTC	;wreg free
  1553  0038DE  0012               	return		;funcret
  1554  0038E0                     __end_of_setup:
  1555                           	opt stack 0
  1556                           tblptru	equ	0xFF8
  1557                           tblptrh	equ	0xFF7
  1558                           tblptrl	equ	0xFF6
  1559                           tablat	equ	0xFF5
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           postdec1	equ	0xFE5
  1563                           fsr1l	equ	0xFE1
  1564                           
  1565 ;; *************** function _lcd_init *****************
  1566 ;; Defined at:
  1567 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  i               1    4[COMRAM] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1585 ;;Total ram usage:        1 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    2
  1588 ;; This function calls:
  1589 ;;		_Delay1KTCYx
  1590 ;;		_lcd_send_byte
  1591 ;;		_lcd_send_nibble
  1592 ;; This function is called by:
  1593 ;;		_setup
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text2
  1598  0034E2                     __ptext2:
  1599                           	opt stack 0
  1600  0034E2                     _lcd_init:
  1601                           	opt stack 27
  1602                           
  1603                           ;unmc_lcd_216.c: 120: int8 i;
  1604                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  1605                           
  1606                           ;incstack = 0
  1607  0034E2  9693               	bcf	3987,3,c	;volatile
  1608                           
  1609                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  1610  0034E4  9493               	bcf	3987,2,c	;volatile
  1611                           
  1612                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  1613  0034E6  968A               	bcf	3978,3,c	;volatile
  1614                           
  1615                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  1616  0034E8  948A               	bcf	3978,2,c	;volatile
  1617                           
  1618                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  1619  0034EA  9893               	bcf	3987,4,c	;volatile
  1620                           
  1621                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  1622  0034EC  9A93               	bcf	3987,5,c	;volatile
  1623                           
  1624                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  1625  0034EE  9C93               	bcf	3987,6,c	;volatile
  1626                           
  1627                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  1628  0034F0  9E93               	bcf	3987,7,c	;volatile
  1629                           
  1630                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  1631  0034F2  0E0A               	movlw	10
  1632  0034F4  EC81  F01D         	call	_Delay1KTCYx
  1633                           
  1634                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  1635  0034F8  0E0A               	movlw	10
  1636  0034FA  EC81  F01D         	call	_Delay1KTCYx
  1637                           
  1638                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  1639  0034FE  0E0A               	movlw	10
  1640  003500  EC81  F01D         	call	_Delay1KTCYx
  1641                           
  1642                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  1643  003504  0E00               	movlw	0
  1644  003506  6E05               	movwf	lcd_init@i,c
  1645  003508                     l5063:
  1646  003508  0E02               	movlw	2
  1647  00350A  6405               	cpfsgt	lcd_init@i,c
  1648  00350C  D001               	goto	l461
  1649  00350E  D008               	goto	u6210
  1650  003510                     l461:
  1651                           
  1652                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  1653  003510  0E03               	movlw	3
  1654  003512  ECAC  F01A         	call	_lcd_send_nibble
  1655                           
  1656                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  1657  003516  0E0A               	movlw	10
  1658  003518  EC81  F01D         	call	_Delay1KTCYx
  1659  00351C  2A05               	incf	lcd_init@i,f,c
  1660  00351E  D7F4               	goto	l5063
  1661  003520                     u6210:
  1662                           
  1663                           ;unmc_lcd_216.c: 146: }
  1664                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  1665  003520  0E02               	movlw	2
  1666  003522  ECAC  F01A         	call	_lcd_send_nibble
  1667                           
  1668                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  1669  003526  0E00               	movlw	0
  1670  003528  6E05               	movwf	lcd_init@i,c
  1671  00352A                     l5077:
  1672  00352A  0E03               	movlw	3
  1673  00352C  6405               	cpfsgt	lcd_init@i,c
  1674  00352E  D001               	goto	l463
  1675  003530  0012               	return	
  1676  003532                     l463:
  1677                           
  1678                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1679  003532  5005               	movf	lcd_init@i,w,c
  1680  003534  0D01               	mullw	1
  1681  003536  0E0B               	movlw	low _LCD_INIT_STRING
  1682  003538  24F3               	addwf	prodl,w,c
  1683  00353A  6EF6               	movwf	tblptrl,c
  1684  00353C  0E0F               	movlw	high _LCD_INIT_STRING
  1685  00353E  20F4               	addwfc	prodh,w,c
  1686  003540  6EF7               	movwf	tblptrh,c
  1687  003542                     	if	0	;There are less than 3 active tblptr bytes
  1688  003542                     	endif
  1689  003542  0008               	tblrd		*
  1690  003544  CFF5 F003          	movff	tablat,lcd_send_byte@n
  1691  003548  0E00               	movlw	0
  1692  00354A  ECF2  F01C         	call	_lcd_send_byte
  1693                           
  1694                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  1695  00354E  0E0A               	movlw	10
  1696  003550  EC81  F01D         	call	_Delay1KTCYx
  1697  003554  2A05               	incf	lcd_init@i,f,c
  1698  003556  D7E9               	goto	l5077
  1699  003558                     __end_of_lcd_init:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           prodh	equ	0xFF4
  1706                           prodl	equ	0xFF3
  1707                           postinc0	equ	0xFEE
  1708                           wreg	equ	0xFE8
  1709                           postdec1	equ	0xFE5
  1710                           fsr1l	equ	0xFE1
  1711                           
  1712 ;; *************** function _Delay1KTCYx *****************
  1713 ;; Defined at:
  1714 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  unit            1    wreg     unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  unit            1    0[COMRAM] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1732 ;;Total ram usage:        1 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_lcd_init
  1738 ;;		_DelayPORXLCD
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text3
  1743  003B02                     __ptext3:
  1744                           	opt stack 0
  1745  003B02                     _Delay1KTCYx:
  1746                           	opt stack 28
  1747                           
  1748                           ;incstack = 0
  1749                           ;Delay1KTCYx@unit stored from wreg
  1750  003B02  6E01               	movwf	Delay1KTCYx@unit,c
  1751  003B04                     l848:
  1752  003B04  0EC8               	movlw	200
  1753  003B06                     u6267:
  1754  003B06  D000               	nop2	
  1755  003B08  2EE8               	decfsz	wreg,f,c
  1756  003B0A  D7FD               	bra	u6267
  1757  003B0C  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1758  003B0E  D7FA               	goto	l848
  1759  003B10  0012               	return	
  1760  003B12                     __end_of_Delay1KTCYx:
  1761                           	opt stack 0
  1762                           tblptru	equ	0xFF8
  1763                           tblptrh	equ	0xFF7
  1764                           tblptrl	equ	0xFF6
  1765                           tablat	equ	0xFF5
  1766                           prodh	equ	0xFF4
  1767                           prodl	equ	0xFF3
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           postdec1	equ	0xFE5
  1771                           fsr1l	equ	0xFE1
  1772                           
  1773 ;; *************** function _ir_a_pantalla_inicial *****************
  1774 ;; Defined at:
  1775 ;;		line 484 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:   12
  1796 ;; This function calls:
  1797 ;;		_set_reloj_digital
  1798 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  1799 ;;		_titila_texto_insert_password
  1800 ;; This function is called by:
  1801 ;;		_main
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text4
  1806  003B22                     __ptext4:
  1807                           	opt stack 0
  1808  003B22                     _ir_a_pantalla_inicial:
  1809                           	opt stack 18
  1810                           
  1811                           ;main.c: 485: set_reloj_digital();
  1812                           
  1813                           ;incstack = 0
  1814  003B22  ECA5  F01D         	call	_set_reloj_digital	;wreg free
  1815                           
  1816                           ;main.c: 486: titila_texto_insert_password();
  1817  003B26  ECDB  F016         	call	_titila_texto_insert_password	;wreg free
  1818                           
  1819                           ;main.c: 487: si_apreta_numero_va_a_pantalla_contrasenia();
  1820  003B2A  ECA4  F018         	call	_si_apreta_numero_va_a_pantalla_contrasenia	;wreg free
  1821  003B2E  0012               	return		;funcret
  1822  003B30                     __end_of_ir_a_pantalla_inicial:
  1823                           	opt stack 0
  1824                           tblptru	equ	0xFF8
  1825                           tblptrh	equ	0xFF7
  1826                           tblptrl	equ	0xFF6
  1827                           tablat	equ	0xFF5
  1828                           prodh	equ	0xFF4
  1829                           prodl	equ	0xFF3
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           postdec1	equ	0xFE5
  1833                           fsr1l	equ	0xFE1
  1834                           
  1835 ;; *************** function _titila_texto_insert_password *****************
  1836 ;; Defined at:
  1837 ;;		line 98 in file "main.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;		None
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1855 ;;Total ram usage:        1 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    5
  1858 ;; This function calls:
  1859 ;;		_lcd_gotoxy
  1860 ;;		_lcd_putrs
  1861 ;; This function is called by:
  1862 ;;		_ir_a_pantalla_inicial
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           	psect	text5
  1867  002DB6                     __ptext5:
  1868                           	opt stack 0
  1869  002DB6                     _titila_texto_insert_password:
  1870                           	opt stack 24
  1871                           
  1872                           ;main.c: 99: if (txt_insert_pass == 0) {
  1873                           
  1874                           ;incstack = 0
  1875  002DB6  0100               	movlb	0	; () banked
  1876  002DB8  518A               	movf	_txt_insert_pass& (0+255),w,b
  1877  002DBA  0100               	movlb	0	; () banked
  1878  002DBC  118B               	iorwf	(_txt_insert_pass+1)& (0+255),w,b
  1879  002DBE  A4D8               	btfss	status,2,c
  1880  002DC0  D022               	goto	l181
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main.c: 100: txt_insert_pass = 1;
  1884  002DC2  0E00               	movlw	0
  1885  002DC4  0100               	movlb	0	; () banked
  1886  002DC6  6F8B               	movwf	(_txt_insert_pass+1)& (0+255),b
  1887  002DC8  0E01               	movlw	1
  1888  002DCA  6F8A               	movwf	_txt_insert_pass& (0+255),b
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;main.c: 101: lcd_gotoxy(1, 1);
  1892  002DCC  0E01               	movlw	1
  1893  002DCE  6E05               	movwf	lcd_gotoxy@y,c
  1894  002DD0  0E01               	movlw	1
  1895  002DD2  EC42  F01D         	call	_lcd_gotoxy
  1896                           
  1897                           ;main.c: 102: lcd_putrs("Insert");
  1898  002DD6  0ED0               	movlw	low STR_9
  1899  002DD8  6E09               	movwf	lcd_putrs@ptr,c
  1900  002DDA  0E0F               	movlw	high STR_9
  1901  002DDC  6E0A               	movwf	lcd_putrs@ptr+1,c
  1902  002DDE  ECD3  F01B         	call	_lcd_putrs	;wreg free
  1903                           
  1904                           ;main.c: 103: lcd_gotoxy(1, 2);
  1905  002DE2  0E02               	movlw	2
  1906  002DE4  6E05               	movwf	lcd_gotoxy@y,c
  1907  002DE6  0E01               	movlw	1
  1908  002DE8  EC42  F01D         	call	_lcd_gotoxy
  1909                           
  1910                           ;main.c: 104: lcd_putrs("Password");
  1911  002DEC  0EAE               	movlw	low STR_10
  1912  002DEE  6E09               	movwf	lcd_putrs@ptr,c
  1913  002DF0  0E0F               	movlw	high STR_10
  1914  002DF2  6E0A               	movwf	lcd_putrs@ptr+1,c
  1915  002DF4  ECD3  F01B         	call	_lcd_putrs	;wreg free
  1916                           
  1917                           ;main.c: 105: _delay((unsigned long)((80)*(8000000/4000.0)));
  1918  002DF8  0ED0               	movlw	208
  1919  002DFA  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  1920  002DFC  0ECA               	movlw	202
  1921  002DFE                     u6277:
  1922  002DFE  2EE8               	decfsz	wreg,f,c
  1923  002E00  D7FE               	bra	u6277
  1924  002E02  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  1925  002E04  D7FC               	bra	u6277
  1926  002E06                     l181:
  1927                           
  1928                           ;main.c: 106: }
  1929                           ;main.c: 108: if (txt_insert_pass == 1) {
  1930  002E06  0100               	movlb	0	; () banked
  1931  002E08  058A               	decf	_txt_insert_pass& (0+255),w,b
  1932  002E0A  0100               	movlb	0	; () banked
  1933  002E0C  118B               	iorwf	(_txt_insert_pass+1)& (0+255),w,b
  1934  002E0E  A4D8               	btfss	status,2,c
  1935  002E10  0012               	return	
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 109: txt_insert_pass = 0;
  1939  002E12  0E00               	movlw	0
  1940  002E14  0100               	movlb	0	; () banked
  1941  002E16  6F8B               	movwf	(_txt_insert_pass+1)& (0+255),b
  1942  002E18  0E00               	movlw	0
  1943  002E1A  6F8A               	movwf	_txt_insert_pass& (0+255),b
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;main.c: 110: lcd_gotoxy(1, 1);
  1947  002E1C  0E01               	movlw	1
  1948  002E1E  6E05               	movwf	lcd_gotoxy@y,c
  1949  002E20  0E01               	movlw	1
  1950  002E22  EC42  F01D         	call	_lcd_gotoxy
  1951                           
  1952                           ;main.c: 111: lcd_putrs("        ");
  1953  002E26  0E65               	movlw	low (STR_18+8)
  1954  002E28  6E09               	movwf	lcd_putrs@ptr,c
  1955  002E2A  0E0F               	movlw	high (STR_18+8)
  1956  002E2C  6E0A               	movwf	lcd_putrs@ptr+1,c
  1957  002E2E  ECD3  F01B         	call	_lcd_putrs	;wreg free
  1958                           
  1959                           ;main.c: 112: lcd_gotoxy(1, 2);
  1960  002E32  0E02               	movlw	2
  1961  002E34  6E05               	movwf	lcd_gotoxy@y,c
  1962  002E36  0E01               	movlw	1
  1963  002E38  EC42  F01D         	call	_lcd_gotoxy
  1964                           
  1965                           ;main.c: 113: lcd_putrs("        ");
  1966  002E3C  0E65               	movlw	low (STR_18+8)
  1967  002E3E  6E09               	movwf	lcd_putrs@ptr,c
  1968  002E40  0E0F               	movlw	high (STR_18+8)
  1969  002E42  6E0A               	movwf	lcd_putrs@ptr+1,c
  1970  002E44  ECD3  F01B         	call	_lcd_putrs	;wreg free
  1971                           
  1972                           ;main.c: 114: _delay((unsigned long)((60)*(8000000/4000.0)));
  1973  002E48  0E9C               	movlw	156
  1974  002E4A  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  1975  002E4C  0ED7               	movlw	215
  1976  002E4E                     u6287:
  1977  002E4E  2EE8               	decfsz	wreg,f,c
  1978  002E50  D7FE               	bra	u6287
  1979  002E52  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  1980  002E54  D7FC               	bra	u6287
  1981  002E56  F000               	nop	
  1982  002E58  0012               	return	
  1983  002E5A                     __end_of_titila_texto_insert_password:
  1984                           	opt stack 0
  1985                           tblptru	equ	0xFF8
  1986                           tblptrh	equ	0xFF7
  1987                           tblptrl	equ	0xFF6
  1988                           tablat	equ	0xFF5
  1989                           prodh	equ	0xFF4
  1990                           prodl	equ	0xFF3
  1991                           postinc0	equ	0xFEE
  1992                           wreg	equ	0xFE8
  1993                           postdec1	equ	0xFE5
  1994                           fsr1l	equ	0xFE1
  1995                           status	equ	0xFD8
  1996                           
  1997 ;; *************** function _si_apreta_numero_va_a_pantalla_contrasenia *****************
  1998 ;; Defined at:
  1999 ;;		line 433 in file "main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:   11
  2020 ;; This function calls:
  2021 ;;		_ir_a_pantalla_ingresar_contrasenia
  2022 ;; This function is called by:
  2023 ;;		_ir_a_pantalla_inicial
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text6
  2028  003148                     __ptext6:
  2029                           	opt stack 0
  2030  003148                     _si_apreta_numero_va_a_pantalla_contrasenia:
  2031                           	opt stack 18
  2032                           
  2033                           ;main.c: 434: LATAbits.LATA0 = 1;
  2034                           
  2035                           ;incstack = 0
  2036  003148  8089               	bsf	3977,0,c	;volatile
  2037                           
  2038                           ;main.c: 435: LATAbits.LATA1 = 0;
  2039  00314A  9289               	bcf	3977,1,c	;volatile
  2040                           
  2041                           ;main.c: 436: LATAbits.LATA2 = 0;
  2042  00314C  9489               	bcf	3977,2,c	;volatile
  2043                           
  2044                           ;main.c: 437: LATAbits.LATA3 = 0;
  2045  00314E  9689               	bcf	3977,3,c	;volatile
  2046                           
  2047                           ;main.c: 438: {
  2048                           ;main.c: 439: if ((PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) ||
  2049                           ;main.c: 440: (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) ||
  2050                           ;main.c: 441: (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1)) {
  2051  003150  AA80               	btfss	3968,5,c	;volatile
  2052  003152  D002               	goto	u5970
  2053  003154  B089               	btfsc	3977,0,c	;volatile
  2054  003156  D007               	goto	u6010
  2055  003158                     u5970:
  2056  003158  AE80               	btfss	3968,7,c	;volatile
  2057  00315A  D002               	goto	u5990
  2058  00315C  B089               	btfsc	3977,0,c	;volatile
  2059  00315E  D003               	goto	u6010
  2060  003160                     u5990:
  2061  003160  BC80               	btfsc	3968,6,c	;volatile
  2062  003162  A089               	btfss	3977,0,c	;volatile
  2063  003164  D002               	goto	l326
  2064  003166                     u6010:
  2065                           
  2066                           ;main.c: 443: ir_a_pantalla_ingresar_contrasenia();
  2067  003166  EC2D  F017         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2068  00316A                     l326:
  2069                           
  2070                           ;main.c: 444: }
  2071                           ;main.c: 445: }
  2072                           ;main.c: 446: LATAbits.LATA0 = 0;
  2073  00316A  9089               	bcf	3977,0,c	;volatile
  2074                           
  2075                           ;main.c: 447: LATAbits.LATA1 = 1;
  2076  00316C  8289               	bsf	3977,1,c	;volatile
  2077                           
  2078                           ;main.c: 448: LATAbits.LATA2 = 0;
  2079  00316E  9489               	bcf	3977,2,c	;volatile
  2080                           
  2081                           ;main.c: 449: LATAbits.LATA3 = 0;
  2082  003170  9689               	bcf	3977,3,c	;volatile
  2083                           
  2084                           ;main.c: 450: {
  2085                           ;main.c: 451: if ((PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) ||
  2086                           ;main.c: 452: (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) ||
  2087                           ;main.c: 453: (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1)) {
  2088  003172  AA80               	btfss	3968,5,c	;volatile
  2089  003174  D002               	goto	u6030
  2090  003176  B289               	btfsc	3977,1,c	;volatile
  2091  003178  D007               	goto	u6070
  2092  00317A                     u6030:
  2093  00317A  AE80               	btfss	3968,7,c	;volatile
  2094  00317C  D002               	goto	u6050
  2095  00317E  B289               	btfsc	3977,1,c	;volatile
  2096  003180  D003               	goto	u6070
  2097  003182                     u6050:
  2098  003182  BC80               	btfsc	3968,6,c	;volatile
  2099  003184  A289               	btfss	3977,1,c	;volatile
  2100  003186  D002               	goto	l333
  2101  003188                     u6070:
  2102                           
  2103                           ;main.c: 455: ir_a_pantalla_ingresar_contrasenia();
  2104  003188  EC2D  F017         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2105  00318C                     l333:
  2106                           
  2107                           ;main.c: 456: }
  2108                           ;main.c: 457: }
  2109                           ;main.c: 458: LATAbits.LATA0 = 0;
  2110  00318C  9089               	bcf	3977,0,c	;volatile
  2111                           
  2112                           ;main.c: 459: LATAbits.LATA1 = 0;
  2113  00318E  9289               	bcf	3977,1,c	;volatile
  2114                           
  2115                           ;main.c: 460: LATAbits.LATA2 = 1;
  2116  003190  8489               	bsf	3977,2,c	;volatile
  2117                           
  2118                           ;main.c: 461: LATAbits.LATA3 = 0;
  2119  003192  9689               	bcf	3977,3,c	;volatile
  2120                           
  2121                           ;main.c: 462: {
  2122                           ;main.c: 463: if ((PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) ||
  2123                           ;main.c: 464: (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) ||
  2124                           ;main.c: 465: (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1)) {
  2125  003194  AA80               	btfss	3968,5,c	;volatile
  2126  003196  D002               	goto	u6090
  2127  003198  B489               	btfsc	3977,2,c	;volatile
  2128  00319A  D007               	goto	u6130
  2129  00319C                     u6090:
  2130  00319C  AE80               	btfss	3968,7,c	;volatile
  2131  00319E  D002               	goto	u6110
  2132  0031A0  B489               	btfsc	3977,2,c	;volatile
  2133  0031A2  D003               	goto	u6130
  2134  0031A4                     u6110:
  2135  0031A4  BC80               	btfsc	3968,6,c	;volatile
  2136  0031A6  A489               	btfss	3977,2,c	;volatile
  2137  0031A8  D002               	goto	l340
  2138  0031AA                     u6130:
  2139                           
  2140                           ;main.c: 467: ir_a_pantalla_ingresar_contrasenia();
  2141  0031AA  EC2D  F017         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2142  0031AE                     l340:
  2143                           
  2144                           ;main.c: 468: }
  2145                           ;main.c: 469: }
  2146                           ;main.c: 470: LATAbits.LATA0 = 0;
  2147  0031AE  9089               	bcf	3977,0,c	;volatile
  2148                           
  2149                           ;main.c: 471: LATAbits.LATA1 = 0;
  2150  0031B0  9289               	bcf	3977,1,c	;volatile
  2151                           
  2152                           ;main.c: 472: LATAbits.LATA2 = 0;
  2153  0031B2  9489               	bcf	3977,2,c	;volatile
  2154                           
  2155                           ;main.c: 473: LATAbits.LATA3 = 1;
  2156  0031B4  8689               	bsf	3977,3,c	;volatile
  2157                           
  2158                           ;main.c: 474: {
  2159                           ;main.c: 475: if ((PORTAbits.RA5 == 1 && LATAbits.LATA3 == 1) ||
  2160                           ;main.c: 476: (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) ||
  2161                           ;main.c: 477: (PORTAbits.RA6 == 1 && LATAbits.LATA3 == 1)) {
  2162  0031B6  AA80               	btfss	3968,5,c	;volatile
  2163  0031B8  D002               	goto	u6150
  2164  0031BA  B689               	btfsc	3977,3,c	;volatile
  2165  0031BC  D008               	goto	u6190
  2166  0031BE                     u6150:
  2167  0031BE  AE80               	btfss	3968,7,c	;volatile
  2168  0031C0  D002               	goto	u6170
  2169  0031C2  B689               	btfsc	3977,3,c	;volatile
  2170  0031C4  D004               	goto	u6190
  2171  0031C6                     u6170:
  2172  0031C6  AC80               	btfss	3968,6,c	;volatile
  2173  0031C8  0012               	return	
  2174  0031CA  A689               	btfss	3977,3,c	;volatile
  2175  0031CC  0012               	return	
  2176  0031CE                     u6190:
  2177                           
  2178                           ;main.c: 479: ir_a_pantalla_ingresar_contrasenia();
  2179  0031CE  EC2D  F017         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2180  0031D2  0012               	return	
  2181  0031D4                     __end_of_si_apreta_numero_va_a_pantalla_contrasenia:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           prodh	equ	0xFF4
  2188                           prodl	equ	0xFF3
  2189                           postinc0	equ	0xFEE
  2190                           wreg	equ	0xFE8
  2191                           postdec1	equ	0xFE5
  2192                           fsr1l	equ	0xFE1
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _ir_a_pantalla_ingresar_contrasenia *****************
  2196 ;; Defined at:
  2197 ;;		line 404 in file "main.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  intentos_de_    2   19[BANK0 ] int 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2215 ;;Total ram usage:        2 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:   10
  2218 ;; This function calls:
  2219 ;;		_activar_alarma
  2220 ;;		_ingreso_numero
  2221 ;;		_ir_a_pantalla_edicion
  2222 ;;		_lcd_gotoxy
  2223 ;;		_lcd_putrs
  2224 ;;		_mostrar_presionar_a
  2225 ;;		_resetear_pantalla_ingresar_contrasenia
  2226 ;;		_verificar_contrasenia
  2227 ;; This function is called by:
  2228 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  2229 ;; This function uses a non-reentrant model
  2230 ;;
  2231                           
  2232                           	psect	text7
  2233  002E5A                     __ptext7:
  2234                           	opt stack 0
  2235  002E5A                     _ir_a_pantalla_ingresar_contrasenia:
  2236                           	opt stack 18
  2237                           
  2238                           ;main.c: 406: int intentos_de_contrasenias = 0;
  2239                           
  2240                           ;incstack = 0
  2241  002E5A  0E00               	movlw	0
  2242  002E5C  0100               	movlb	0	; () banked
  2243  002E5E  6FD5               	movwf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),b
  2244  002E60  0E00               	movlw	0
  2245  002E62  6FD4               	movwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),b
  2246                           
  2247                           ;main.c: 407: numeros_ingresados = 0;
  2248  002E64  0E00               	movlw	0
  2249  002E66  0100               	movlb	0	; () banked
  2250  002E68  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  2251  002E6A  0E00               	movlw	0
  2252  002E6C  6F94               	movwf	_numeros_ingresados& (0+255),b
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;main.c: 408: lcd_gotoxy(1, 1);
  2256  002E6E  0E01               	movlw	1
  2257  002E70  6E05               	movwf	lcd_gotoxy@y,c
  2258  002E72  0E01               	movlw	1
  2259  002E74  EC42  F01D         	call	_lcd_gotoxy
  2260                           
  2261                           ;main.c: 409: lcd_putrs("Insert Password ");
  2262  002E78  0E7F               	movlw	low STR_22
  2263  002E7A  6E09               	movwf	lcd_putrs@ptr,c
  2264  002E7C  0E0F               	movlw	high STR_22
  2265  002E7E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2266  002E80  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2267                           
  2268                           ;main.c: 410: lcd_gotoxy(1, 2);
  2269  002E84  0E02               	movlw	2
  2270  002E86  6E05               	movwf	lcd_gotoxy@y,c
  2271  002E88  0E01               	movlw	1
  2272  002E8A  EC42  F01D         	call	_lcd_gotoxy
  2273                           
  2274                           ;main.c: 411: lcd_putrs("                ");
  2275  002E8E  0E5D               	movlw	low STR_18
  2276  002E90  6E09               	movwf	lcd_putrs@ptr,c
  2277  002E92  0E0F               	movlw	high STR_18
  2278  002E94  6E0A               	movwf	lcd_putrs@ptr+1,c
  2279  002E96  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2280  002E9A                     
  2281                           ;main.c: 414: if (numeros_ingresados < 4) {
  2282  002E9A  0100               	movlb	0	; () banked
  2283  002E9C  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  2284  002E9E  D008               	goto	u5910
  2285  002EA0  0100               	movlb	0	; () banked
  2286  002EA2  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  2287  002EA4  E108               	bnz	l4947
  2288  002EA6  0E04               	movlw	4
  2289  002EA8  0100               	movlb	0	; () banked
  2290  002EAA  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  2291  002EAC  B0D8               	btfsc	status,0,c
  2292  002EAE  D003               	goto	l316
  2293  002EB0                     u5910:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 415: ingreso_numero();
  2297  002EB0  ECFE  F007         	call	_ingreso_numero	;wreg free
  2298                           
  2299                           ;main.c: 416: } else {
  2300  002EB4  D010               	goto	l320
  2301  002EB6                     l316:
  2302  002EB6                     l4947:
  2303                           
  2304                           ;main.c: 417: mostrar_presionar_a();
  2305  002EB6  EC62  F01D         	call	_mostrar_presionar_a	;wreg free
  2306                           
  2307                           ;main.c: 418: if (verificar_contrasenia() == 1) {
  2308  002EBA  ECB8  F019         	call	_verificar_contrasenia	;wreg free
  2309  002EBE  0401               	decf	?_verificar_contrasenia,w,c
  2310  002EC0  1002               	iorwf	?_verificar_contrasenia+1,w,c
  2311  002EC2  A4D8               	btfss	status,2,c
  2312  002EC4  D003               	goto	l318
  2313                           
  2314                           ;main.c: 419: ir_a_pantalla_edicion();
  2315  002EC6  EC1E  F01B         	call	_ir_a_pantalla_edicion	;wreg free
  2316                           
  2317                           ;main.c: 420: break;
  2318  002ECA  0012               	return	
  2319  002ECC                     l318:
  2320                           
  2321                           ;main.c: 422: intentos_de_contrasenias++;
  2322  002ECC  0100               	movlb	0	; () banked
  2323  002ECE  4BD4               	infsnz	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),f,b
  2324  002ED0  2BD5               	incf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),f,b
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;main.c: 423: resetear_pantalla_ingresar_contrasenia();
  2328  002ED2  EC24  F01C         	call	_resetear_pantalla_ingresar_contrasenia	;wreg free
  2329  002ED6                     l320:
  2330                           
  2331                           ;main.c: 424: }
  2332                           ;main.c: 425: }
  2333                           ;main.c: 426: if(intentos_de_contrasenias >= 3){
  2334  002ED6  0100               	movlb	0	; () banked
  2335  002ED8  BFD5               	btfsc	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),7,b
  2336  002EDA  D7DF               	goto	l315
  2337  002EDC  0100               	movlb	0	; () banked
  2338  002EDE  51D5               	movf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),w,b
  2339  002EE0  E105               	bnz	u5930
  2340  002EE2  0E03               	movlw	3
  2341  002EE4  0100               	movlb	0	; () banked
  2342  002EE6  5DD4               	subwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),w,b
  2343  002EE8  A0D8               	btfss	status,0,c
  2344  002EEA  D7D7               	goto	l315
  2345  002EEC                     u5930:
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;main.c: 427: alarma_sonando = 1;
  2349  002EEC  0E00               	movlw	0
  2350  002EEE  0100               	movlb	0	; () banked
  2351  002EF0  6F8F               	movwf	(_alarma_sonando+1)& (0+255),b
  2352  002EF2  0E01               	movlw	1
  2353  002EF4  6F8E               	movwf	_alarma_sonando& (0+255),b
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;main.c: 428: activar_alarma();
  2357  002EF6  EC68  F00D         	call	_activar_alarma	;wreg free
  2358  002EFA  D7CF               	goto	l315
  2359  002EFC                     __end_of_ir_a_pantalla_ingresar_contrasenia:
  2360                           	opt stack 0
  2361                           tblptru	equ	0xFF8
  2362                           tblptrh	equ	0xFF7
  2363                           tblptrl	equ	0xFF6
  2364                           tablat	equ	0xFF5
  2365                           prodh	equ	0xFF4
  2366                           prodl	equ	0xFF3
  2367                           postinc0	equ	0xFEE
  2368                           wreg	equ	0xFE8
  2369                           postdec1	equ	0xFE5
  2370                           fsr1l	equ	0xFE1
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _resetear_pantalla_ingresar_contrasenia *****************
  2374 ;; Defined at:
  2375 ;;		line 232 in file "main.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  i               2   10[COMRAM] int 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;Total ram usage:        2 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    5
  2396 ;; This function calls:
  2397 ;;		_lcd_gotoxy
  2398 ;;		_lcd_putrs
  2399 ;; This function is called by:
  2400 ;;		_ir_a_pantalla_ingresar_contrasenia
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text8
  2405  003848                     __ptext8:
  2406                           	opt stack 0
  2407  003848                     _resetear_pantalla_ingresar_contrasenia:
  2408                           	opt stack 22
  2409                           
  2410                           ;main.c: 233: lcd_gotoxy(1, 2);
  2411                           
  2412                           ;incstack = 0
  2413  003848  0E02               	movlw	2
  2414  00384A  6E05               	movwf	lcd_gotoxy@y,c
  2415  00384C  0E01               	movlw	1
  2416  00384E  EC42  F01D         	call	_lcd_gotoxy
  2417                           
  2418                           ;main.c: 234: lcd_putrs("              ");
  2419  003852  0E5F               	movlw	low (STR_18+2)
  2420  003854  6E09               	movwf	lcd_putrs@ptr,c
  2421  003856  0E0F               	movlw	high (STR_18+2)
  2422  003858  6E0A               	movwf	lcd_putrs@ptr+1,c
  2423  00385A  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2424                           
  2425                           ;main.c: 236: for (int i = 0; i < 0; i++) {
  2426  00385E  0E00               	movlw	0
  2427  003860  6E0C               	movwf	resetear_pantalla_ingresar_contrasenia@i+1,c
  2428  003862  0E00               	movlw	0
  2429  003864  6E0B               	movwf	resetear_pantalla_ingresar_contrasenia@i,c
  2430  003866                     l4889:
  2431  003866  AE0C               	btfss	resetear_pantalla_ingresar_contrasenia@i+1,7,c
  2432  003868  D010               	goto	u5880
  2433                           
  2434                           ;main.c: 237: array_contrasenia_ingresada[i] = 0;
  2435  00386A  90D8               	bcf	status,0,c
  2436  00386C  340B               	rlcf	resetear_pantalla_ingresar_contrasenia@i,w,c
  2437  00386E  6ED9               	movwf	fsr2l,c
  2438  003870  340C               	rlcf	resetear_pantalla_ingresar_contrasenia@i+1,w,c
  2439  003872  6EDA               	movwf	fsr2h,c
  2440  003874  0E60               	movlw	low _array_contrasenia_ingresada
  2441  003876  26D9               	addwf	fsr2l,f,c
  2442  003878  0E00               	movlw	high _array_contrasenia_ingresada
  2443  00387A  22DA               	addwfc	fsr2h,f,c
  2444  00387C  0E00               	movlw	0
  2445  00387E  6EDE               	movwf	postinc2,c
  2446  003880  0E00               	movlw	0
  2447  003882  6EDD               	movwf	postdec2,c
  2448  003884  4A0B               	infsnz	resetear_pantalla_ingresar_contrasenia@i,f,c
  2449  003886  2A0C               	incf	resetear_pantalla_ingresar_contrasenia@i+1,f,c
  2450  003888  D7EE               	goto	l4889
  2451  00388A                     u5880:
  2452                           
  2453                           ;main.c: 238: }
  2454                           ;main.c: 240: numeros_ingresados = 0;
  2455  00388A  0E00               	movlw	0
  2456  00388C  0100               	movlb	0	; () banked
  2457  00388E  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  2458  003890  0E00               	movlw	0
  2459  003892  6F94               	movwf	_numeros_ingresados& (0+255),b
  2460                           
  2461                           ; BSR set to: 0
  2462  003894  0012               	return		;funcret
  2463  003896                     __end_of_resetear_pantalla_ingresar_contrasenia:
  2464                           	opt stack 0
  2465                           tblptru	equ	0xFF8
  2466                           tblptrh	equ	0xFF7
  2467                           tblptrl	equ	0xFF6
  2468                           tablat	equ	0xFF5
  2469                           prodh	equ	0xFF4
  2470                           prodl	equ	0xFF3
  2471                           postinc0	equ	0xFEE
  2472                           wreg	equ	0xFE8
  2473                           postdec1	equ	0xFE5
  2474                           fsr1l	equ	0xFE1
  2475                           postinc2	equ	0xFDE
  2476                           postdec2	equ	0xFDD
  2477                           fsr2h	equ	0xFDA
  2478                           fsr2l	equ	0xFD9
  2479                           status	equ	0xFD8
  2480                           
  2481 ;; *************** function _mostrar_presionar_a *****************
  2482 ;; Defined at:
  2483 ;;		line 227 in file "main.c"
  2484 ;; Parameters:    Size  Location     Type
  2485 ;;		None
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;		None
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  1    wreg      void 
  2490 ;; Registers used:
  2491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2501 ;;Total ram usage:        0 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    5
  2504 ;; This function calls:
  2505 ;;		_lcd_gotoxy
  2506 ;;		_lcd_putrs
  2507 ;; This function is called by:
  2508 ;;		_ir_a_pantalla_ingresar_contrasenia
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text9
  2513  003AC4                     __ptext9:
  2514                           	opt stack 0
  2515  003AC4                     _mostrar_presionar_a:
  2516                           	opt stack 22
  2517                           
  2518                           ;main.c: 228: lcd_gotoxy(7, 2);
  2519                           
  2520                           ; BSR set to: 0
  2521                           ;incstack = 0
  2522  003AC4  0E02               	movlw	2
  2523  003AC6  6E05               	movwf	lcd_gotoxy@y,c
  2524  003AC8  0E07               	movlw	7
  2525  003ACA  EC42  F01D         	call	_lcd_gotoxy
  2526                           
  2527                           ;main.c: 229: lcd_putrs("Press A");
  2528  003ACE  0EC8               	movlw	low STR_14
  2529  003AD0  6E09               	movwf	lcd_putrs@ptr,c
  2530  003AD2  0E0F               	movlw	high STR_14
  2531  003AD4  6E0A               	movwf	lcd_putrs@ptr+1,c
  2532  003AD6  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2533  003ADA  0012               	return		;funcret
  2534  003ADC                     __end_of_mostrar_presionar_a:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           prodh	equ	0xFF4
  2541                           prodl	equ	0xFF3
  2542                           postinc0	equ	0xFEE
  2543                           wreg	equ	0xFE8
  2544                           postdec1	equ	0xFE5
  2545                           fsr1l	equ	0xFE1
  2546                           postinc2	equ	0xFDE
  2547                           postdec2	equ	0xFDD
  2548                           fsr2h	equ	0xFDA
  2549                           fsr2l	equ	0xFD9
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _ir_a_pantalla_edicion *****************
  2553 ;; Defined at:
  2554 ;;		line 376 in file "main.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;		None
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;		None
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2571 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2572 ;;Total ram usage:        1 bytes
  2573 ;; Hardware stack levels used:    1
  2574 ;; Hardware stack levels required when called:    9
  2575 ;; This function calls:
  2576 ;;		_Read_RTC
  2577 ;;		_cambiar_opcion
  2578 ;;		_lcd_gotoxy
  2579 ;;		_lcd_putrs
  2580 ;;		_seleccionar_opcion
  2581 ;;		_set_reloj_digital
  2582 ;; This function is called by:
  2583 ;;		_ir_a_pantalla_ingresar_contrasenia
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text10
  2588  00363C                     __ptext10:
  2589                           	opt stack 0
  2590  00363C                     _ir_a_pantalla_edicion:
  2591                           	opt stack 18
  2592                           
  2593                           ;main.c: 378: lcd_gotoxy(1, 1);
  2594                           
  2595                           ;incstack = 0
  2596                           ;main.c: 377: while (1) {
  2597  00363C  0E01               	movlw	1
  2598  00363E  6E05               	movwf	lcd_gotoxy@y,c
  2599  003640  0E01               	movlw	1
  2600  003642  EC42  F01D         	call	_lcd_gotoxy
  2601                           
  2602                           ;main.c: 379: lcd_putrs("Active ");
  2603  003646  0EC0               	movlw	low STR_20
  2604  003648  6E09               	movwf	lcd_putrs@ptr,c
  2605  00364A  0E0F               	movlw	high STR_20
  2606  00364C  6E0A               	movwf	lcd_putrs@ptr+1,c
  2607  00364E  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2608                           
  2609                           ;main.c: 380: lcd_gotoxy(1, 2);
  2610  003652  0E02               	movlw	2
  2611  003654  6E05               	movwf	lcd_gotoxy@y,c
  2612  003656  0E01               	movlw	1
  2613  003658  EC42  F01D         	call	_lcd_gotoxy
  2614                           
  2615                           ;main.c: 381: lcd_putrs("Edt Pass");
  2616  00365C  0EB7               	movlw	low STR_21
  2617  00365E  6E09               	movwf	lcd_putrs@ptr,c
  2618  003660  0E0F               	movlw	high STR_21
  2619  003662  6E0A               	movwf	lcd_putrs@ptr+1,c
  2620  003664  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2621                           
  2622                           ;main.c: 383: Read_RTC();
  2623  003668  ECB0  F010         	call	_Read_RTC	;wreg free
  2624                           
  2625                           ;main.c: 385: set_reloj_digital();
  2626  00366C  ECA5  F01D         	call	_set_reloj_digital	;wreg free
  2627                           
  2628                           ;main.c: 386: cambiar_opcion();
  2629  003670  EC22  F016         	call	_cambiar_opcion	;wreg free
  2630                           
  2631                           ;main.c: 387: seleccionar_opcion();
  2632  003674  ECFC  F01B         	call	_seleccionar_opcion	;wreg free
  2633                           
  2634                           ;main.c: 391: LATAbits.LATA0 = 0;
  2635  003678  9089               	bcf	3977,0,c	;volatile
  2636                           
  2637                           ;main.c: 392: LATAbits.LATA1 = 1;
  2638  00367A  8289               	bsf	3977,1,c	;volatile
  2639                           
  2640                           ;main.c: 393: LATAbits.LATA2 = 0;
  2641  00367C  9489               	bcf	3977,2,c	;volatile
  2642                           
  2643                           ;main.c: 394: LATAbits.LATA3 = 0;
  2644  00367E  9689               	bcf	3977,3,c	;volatile
  2645                           
  2646                           ;main.c: 395: if (PORTCbits.RC2 == 1) {
  2647  003680  B482               	btfsc	3970,2,c	;volatile
  2648  003682  0012               	return	
  2649  003684  D7DB               	goto	_ir_a_pantalla_edicion
  2650  003686                     
  2651                           ;main.c: 398: _delay((unsigned long)((98)*(8000000/4000.0)));
  2652  003686  0EFF               	movlw	255
  2653  003688  0100               	movlb	0	; () banked
  2654  00368A  6FD3               	movwf	??_ir_a_pantalla_edicion& (0+255),b
  2655  00368C  0E8A               	movlw	138
  2656  00368E                     u6297:
  2657  00368E  2EE8               	decfsz	wreg,f,c
  2658  003690  D7FE               	bra	u6297
  2659  003692  2FD3               	decfsz	??_ir_a_pantalla_edicion& (0+255),f,b
  2660  003694  D7FC               	bra	u6297
  2661  003696  F000               	nop	
  2662  003698  A482               	btfss	3970,2,c	;volatile
  2663  00369A  D7D0               	goto	_ir_a_pantalla_edicion
  2664  00369C  D7F4               	goto	l309
  2665  00369E                     __end_of_ir_a_pantalla_edicion:
  2666                           	opt stack 0
  2667                           tblptru	equ	0xFF8
  2668                           tblptrh	equ	0xFF7
  2669                           tblptrl	equ	0xFF6
  2670                           tablat	equ	0xFF5
  2671                           prodh	equ	0xFF4
  2672                           prodl	equ	0xFF3
  2673                           postinc0	equ	0xFEE
  2674                           wreg	equ	0xFE8
  2675                           postdec1	equ	0xFE5
  2676                           fsr1l	equ	0xFE1
  2677                           postinc2	equ	0xFDE
  2678                           postdec2	equ	0xFDD
  2679                           fsr2h	equ	0xFDA
  2680                           fsr2l	equ	0xFD9
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _set_reloj_digital *****************
  2684 ;; Defined at:
  2685 ;;		line 93 in file "main.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;		None
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      void 
  2692 ;; Registers used:
  2693 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:    6
  2706 ;; This function calls:
  2707 ;;		_setDiaMesAnio
  2708 ;;		_setHoraMinutoSegundo
  2709 ;; This function is called by:
  2710 ;;		_ir_a_pantalla_edicion
  2711 ;;		_ir_a_pantalla_inicial
  2712 ;;		_setup
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text11
  2717  003B4A                     __ptext11:
  2718                           	opt stack 0
  2719  003B4A                     _set_reloj_digital:
  2720                           	opt stack 23
  2721                           
  2722                           ;main.c: 94: setDiaMesAnio();
  2723                           
  2724                           ;incstack = 0
  2725  003B4A  ECEA  F018         	call	_setDiaMesAnio	;wreg free
  2726                           
  2727                           ;main.c: 95: setHoraMinutoSegundo();
  2728  003B4E  ECF7  F019         	call	_setHoraMinutoSegundo	;wreg free
  2729  003B52  0012               	return		;funcret
  2730  003B54                     __end_of_set_reloj_digital:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           prodh	equ	0xFF4
  2737                           prodl	equ	0xFF3
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           postdec1	equ	0xFE5
  2741                           fsr1l	equ	0xFE1
  2742                           postinc2	equ	0xFDE
  2743                           postdec2	equ	0xFDD
  2744                           fsr2h	equ	0xFDA
  2745                           fsr2l	equ	0xFD9
  2746                           status	equ	0xFD8
  2747                           
  2748 ;; *************** function _seleccionar_opcion *****************
  2749 ;; Defined at:
  2750 ;;		line 355 in file "main.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    8
  2771 ;; This function calls:
  2772 ;;		_activar_alarma
  2773 ;;		_editar_fecha_reloj_digital
  2774 ;;		_editar_hora_reloj_digital
  2775 ;;		_ir_a_pantalla_editar_contrasenia
  2776 ;; This function is called by:
  2777 ;;		_ir_a_pantalla_edicion
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text12
  2782  0037F8                     __ptext12:
  2783                           	opt stack 0
  2784  0037F8                     _seleccionar_opcion:
  2785                           	opt stack 18
  2786                           
  2787                           ;main.c: 356: LATAbits.LATA0 = 1;
  2788                           
  2789                           ;incstack = 0
  2790  0037F8  8089               	bsf	3977,0,c	;volatile
  2791                           
  2792                           ;main.c: 357: LATAbits.LATA1 = 0;
  2793  0037FA  9289               	bcf	3977,1,c	;volatile
  2794                           
  2795                           ;main.c: 358: LATAbits.LATA2 = 0;
  2796  0037FC  9489               	bcf	3977,2,c	;volatile
  2797                           
  2798                           ;main.c: 359: LATAbits.LATA3 = 0;
  2799  0037FE  9689               	bcf	3977,3,c	;volatile
  2800                           
  2801                           ;main.c: 360: if (PORTCbits.RC2 == 1 && LATAbits.LATA0 == 1) {
  2802  003800  A482               	btfss	3970,2,c	;volatile
  2803  003802  0012               	return	
  2804  003804  A089               	btfss	3977,0,c	;volatile
  2805  003806  0012               	return	
  2806                           
  2807                           ;main.c: 361: if (boton_seleccionar == 0) {
  2808  003808  0100               	movlb	0	; () banked
  2809  00380A  518C               	movf	_boton_seleccionar& (0+255),w,b
  2810  00380C  0100               	movlb	0	; () banked
  2811  00380E  118D               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2812  003810  B4D8               	btfsc	status,2,c
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;main.c: 362: activar_alarma();
  2816  003812  EC68  F00D         	call	_activar_alarma	;wreg free
  2817                           
  2818                           ;main.c: 363: }
  2819                           ;main.c: 364: if (boton_seleccionar == 1) {
  2820  003816  0100               	movlb	0	; () banked
  2821  003818  058C               	decf	_boton_seleccionar& (0+255),w,b
  2822  00381A  0100               	movlb	0	; () banked
  2823  00381C  118D               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2824  00381E  B4D8               	btfsc	status,2,c
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;main.c: 365: ir_a_pantalla_editar_contrasenia();
  2828  003820  EC7E  F017         	call	_ir_a_pantalla_editar_contrasenia	;wreg free
  2829                           
  2830                           ;main.c: 366: }
  2831                           ;main.c: 367: if (boton_seleccionar == 2) {
  2832  003824  0E02               	movlw	2
  2833  003826  0100               	movlb	0	; () banked
  2834  003828  198C               	xorwf	_boton_seleccionar& (0+255),w,b
  2835  00382A  0100               	movlb	0	; () banked
  2836  00382C  118D               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2837  00382E  B4D8               	btfsc	status,2,c
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;main.c: 368: editar_fecha_reloj_digital();
  2841  003830  EC32  F009         	call	_editar_fecha_reloj_digital	;wreg free
  2842                           
  2843                           ;main.c: 369: }
  2844                           ;main.c: 370: if (boton_seleccionar == 3) {
  2845  003834  0E03               	movlw	3
  2846  003836  0100               	movlb	0	; () banked
  2847  003838  198C               	xorwf	_boton_seleccionar& (0+255),w,b
  2848  00383A  0100               	movlb	0	; () banked
  2849  00383C  118D               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2850  00383E  A4D8               	btfss	status,2,c
  2851  003840  0012               	return	
  2852                           
  2853                           ; BSR set to: 0
  2854                           ;main.c: 371: editar_hora_reloj_digital();
  2855  003842  EC66  F00B         	call	_editar_hora_reloj_digital	;wreg free
  2856  003846  0012               	return	
  2857  003848                     __end_of_seleccionar_opcion:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           postdec1	equ	0xFE5
  2868                           fsr1l	equ	0xFE1
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _ir_a_pantalla_editar_contrasenia *****************
  2876 ;; Defined at:
  2877 ;;		line 490 in file "main.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  i               2   60[COMRAM] int 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;Total ram usage:        2 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    7
  2898 ;; This function calls:
  2899 ;;		_ingreso_numero
  2900 ;;		_lcd_gotoxy
  2901 ;;		_lcd_putrs
  2902 ;; This function is called by:
  2903 ;;		_seleccionar_opcion
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text13
  2908  002EFC                     __ptext13:
  2909                           	opt stack 0
  2910  002EFC                     _ir_a_pantalla_editar_contrasenia:
  2911                           	opt stack 18
  2912                           
  2913                           ;main.c: 491: numeros_ingresados = 0;
  2914                           
  2915                           ;incstack = 0
  2916  002EFC  0E00               	movlw	0
  2917  002EFE  0100               	movlb	0	; () banked
  2918  002F00  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  2919  002F02  0E00               	movlw	0
  2920  002F04  6F94               	movwf	_numeros_ingresados& (0+255),b
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;main.c: 492: lcd_gotoxy(1, 1);
  2924  002F06  0E01               	movlw	1
  2925  002F08  6E05               	movwf	lcd_gotoxy@y,c
  2926  002F0A  0E01               	movlw	1
  2927  002F0C  EC42  F01D         	call	_lcd_gotoxy
  2928                           
  2929                           ;main.c: 493: lcd_putrs("Insert new Password ");
  2930  002F10  0E48               	movlw	low STR_24
  2931  002F12  6E09               	movwf	lcd_putrs@ptr,c
  2932  002F14  0E0F               	movlw	high STR_24
  2933  002F16  6E0A               	movwf	lcd_putrs@ptr+1,c
  2934  002F18  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2935                           
  2936                           ;main.c: 494: lcd_gotoxy(1, 2);
  2937  002F1C  0E02               	movlw	2
  2938  002F1E  6E05               	movwf	lcd_gotoxy@y,c
  2939  002F20  0E01               	movlw	1
  2940  002F22  EC42  F01D         	call	_lcd_gotoxy
  2941                           
  2942                           ;main.c: 495: lcd_putrs("                ");
  2943  002F26  0E5D               	movlw	low STR_18
  2944  002F28  6E09               	movwf	lcd_putrs@ptr,c
  2945  002F2A  0E0F               	movlw	high STR_18
  2946  002F2C  6E0A               	movwf	lcd_putrs@ptr+1,c
  2947  002F2E  ECD3  F01B         	call	_lcd_putrs	;wreg free
  2948  002F32                     
  2949                           ;main.c: 497: if (numeros_ingresados < 4) {
  2950  002F32  0100               	movlb	0	; () banked
  2951  002F34  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  2952  002F36  D008               	goto	u5380
  2953  002F38  0100               	movlb	0	; () banked
  2954  002F3A  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  2955  002F3C  E108               	bnz	l4583
  2956  002F3E  0E04               	movlw	4
  2957  002F40  0100               	movlb	0	; () banked
  2958  002F42  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  2959  002F44  B0D8               	btfsc	status,0,c
  2960  002F46  D003               	goto	l361
  2961  002F48                     u5380:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;main.c: 498: ingreso_numero();
  2965  002F48  ECFE  F007         	call	_ingreso_numero	;wreg free
  2966                           
  2967                           ;main.c: 499: } else {
  2968  002F4C  D7F2               	goto	l360
  2969  002F4E                     l361:
  2970  002F4E                     l4583:
  2971                           
  2972                           ;main.c: 500: for (int i = 0; i < 4; i++) {
  2973  002F4E  0E00               	movlw	0
  2974  002F50  6E3E               	movwf	ir_a_pantalla_editar_contrasenia@i+1,c
  2975  002F52  0E00               	movlw	0
  2976  002F54  6E3D               	movwf	ir_a_pantalla_editar_contrasenia@i,c
  2977  002F56                     l4585:
  2978  002F56  BE3E               	btfsc	ir_a_pantalla_editar_contrasenia@i+1,7,c
  2979  002F58  D006               	goto	l363
  2980  002F5A  503E               	movf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  2981  002F5C  E11D               	bnz	l367
  2982  002F5E  0E04               	movlw	4
  2983  002F60  5C3D               	subwf	ir_a_pantalla_editar_contrasenia@i,w,c
  2984  002F62  B0D8               	btfsc	status,0,c
  2985  002F64  0012               	return	
  2986  002F66                     l363:
  2987                           
  2988                           ;main.c: 501: array_contrasenia[i] = array_contrasenia_ingresada[i];
  2989  002F66  90D8               	bcf	status,0,c
  2990  002F68  343D               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  2991  002F6A  6ED9               	movwf	fsr2l,c
  2992  002F6C  343E               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  2993  002F6E  6EDA               	movwf	fsr2h,c
  2994  002F70  0E60               	movlw	low _array_contrasenia_ingresada
  2995  002F72  26D9               	addwf	fsr2l,f,c
  2996  002F74  0E00               	movlw	high _array_contrasenia_ingresada
  2997  002F76  22DA               	addwfc	fsr2h,f,c
  2998  002F78  90D8               	bcf	status,0,c
  2999  002F7A  343D               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3000  002F7C  6EE1               	movwf	fsr1l,c
  3001  002F7E  343E               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3002  002F80  6EE2               	movwf	fsr1h,c
  3003  002F82  0ED7               	movlw	low _array_contrasenia
  3004  002F84  26E1               	addwf	fsr1l,f,c
  3005  002F86  0E00               	movlw	high _array_contrasenia
  3006  002F88  22E2               	addwfc	fsr1h,f,c
  3007  002F8A  CFDE FFE6          	movff	postinc2,postinc1
  3008  002F8E  CFDD FFE5          	movff	postdec2,postdec1
  3009  002F92  4A3D               	infsnz	ir_a_pantalla_editar_contrasenia@i,f,c
  3010  002F94  2A3E               	incf	ir_a_pantalla_editar_contrasenia@i+1,f,c
  3011  002F96  D7DF               	goto	l4585
  3012  002F98                     l367:
  3013  002F98  0012               	return		;funcret
  3014  002F9A                     __end_of_ir_a_pantalla_editar_contrasenia:
  3015                           	opt stack 0
  3016                           tblptru	equ	0xFF8
  3017                           tblptrh	equ	0xFF7
  3018                           tblptrl	equ	0xFF6
  3019                           tablat	equ	0xFF5
  3020                           prodh	equ	0xFF4
  3021                           prodl	equ	0xFF3
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           postinc1	equ	0xFE6
  3025                           postdec1	equ	0xFE5
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           postinc2	equ	0xFDE
  3029                           postdec2	equ	0xFDD
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _editar_hora_reloj_digital *****************
  3035 ;; Defined at:
  3036 ;;		line 609 in file "main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  segundo_ingr    2   14[BANK0 ] int 
  3041 ;;  minuto_ingre    2   12[BANK0 ] int 
  3042 ;;  hora_ingresa    2   10[BANK0 ] int 
  3043 ;;  posicion        2   16[BANK0 ] int 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;Total ram usage:        9 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    7
  3060 ;; This function calls:
  3061 ;;		_Write_RTC
  3062 ;;		_covertir_valores_de_array_a_escala_decimal
  3063 ;;		_ingreso_numero
  3064 ;;		_setHoraMinutoSegundo
  3065 ;; This function is called by:
  3066 ;;		_seleccionar_opcion
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text14
  3071  0016CC                     __ptext14:
  3072                           	opt stack 0
  3073  0016CC                     _editar_hora_reloj_digital:
  3074                           	opt stack 18
  3075                           
  3076                           ;main.c: 610: int posicion = 0;
  3077                           
  3078                           ;incstack = 0
  3079  0016CC  0E00               	movlw	0
  3080  0016CE  0100               	movlb	0	; () banked
  3081  0016D0  6FD2               	movwf	(editar_hora_reloj_digital@posicion+1)& (0+255),b
  3082  0016D2  0E00               	movlw	0
  3083  0016D4  6FD1               	movwf	editar_hora_reloj_digital@posicion& (0+255),b
  3084                           
  3085                           ;main.c: 611: motivo_ingreso_de_numeros = 1;
  3086  0016D6  0E00               	movlw	0
  3087  0016D8  0100               	movlb	0	; () banked
  3088  0016DA  6F93               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3089  0016DC  0E01               	movlw	1
  3090  0016DE  6F92               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;main.c: 613: if (posicion == 0) {
  3094  0016E0  0100               	movlb	0	; () banked
  3095  0016E2  51D1               	movf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3096  0016E4  0100               	movlb	0	; () banked
  3097  0016E6  11D2               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3098  0016E8  A4D8               	btfss	status,2,c
  3099  0016EA  D04C               	goto	l406
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;main.c: 614: numeros_ingresados = 0;
  3103  0016EC  0E00               	movlw	0
  3104  0016EE  0100               	movlb	0	; () banked
  3105  0016F0  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3106  0016F2  0E00               	movlw	0
  3107  0016F4  6F94               	movwf	_numeros_ingresados& (0+255),b
  3108                           
  3109                           ;main.c: 615: int hora_ingresada = 0;
  3110  0016F6  0E00               	movlw	0
  3111  0016F8  0100               	movlb	0	; () banked
  3112  0016FA  6FCC               	movwf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),b
  3113  0016FC  0E00               	movlw	0
  3114  0016FE  6FCB               	movwf	editar_hora_reloj_digital@hora_ingresada& (0+255),b
  3115                           
  3116                           ;main.c: 616: while (numeros_ingresados < 3) {
  3117  001700  D02A               	goto	l411
  3118  001702                     
  3119                           ; BSR set to: 0
  3120                           ;main.c: 617: ingreso_numero();
  3121                           
  3122                           ; BSR set to: 0
  3123  001702  ECFE  F007         	call	_ingreso_numero	;wreg free
  3124                           
  3125                           ;main.c: 618: if (numeros_ingresados == 2) {
  3126  001706  0E02               	movlw	2
  3127  001708  0100               	movlb	0	; () banked
  3128  00170A  1994               	xorwf	_numeros_ingresados& (0+255),w,b
  3129  00170C  0100               	movlb	0	; () banked
  3130  00170E  1195               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3131  001710  A4D8               	btfss	status,2,c
  3132  001712  D021               	goto	l411
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;main.c: 619: hora_ingresada = covertir_valores_de_array_a_escala_decimal();
  3136  001714  EC7D  F012         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3137  001718  C05B  F0CB         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@hora_ingre
      +                          sada
  3138  00171C  C05C  F0CC         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@hora_ing
      +                          resada+1
  3139                           
  3140                           ;main.c: 620: if ((0 <= hora_ingresada) && (hora_ingresada <= 23)) {
  3141  001720  0100               	movlb	0	; () banked
  3142  001722  BFCC               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3143  001724  D013               	goto	l410
  3144                           
  3145                           ; BSR set to: 0
  3146  001726  0100               	movlb	0	; () banked
  3147  001728  BFCC               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3148  00172A  D008               	goto	u5590
  3149  00172C  0100               	movlb	0	; () banked
  3150  00172E  51CC               	movf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),w,b
  3151  001730  E10D               	bnz	l4707
  3152  001732  0E18               	movlw	24
  3153  001734  0100               	movlb	0	; () banked
  3154  001736  5DCB               	subwf	editar_hora_reloj_digital@hora_ingresada& (0+255),w,b
  3155  001738  B0D8               	btfsc	status,0,c
  3156  00173A  D008               	goto	l410
  3157  00173C                     u5590:
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;main.c: 621: hora = hora_ingresada;
  3161  00173C  C0CB  F0E1         	movff	editar_hora_reloj_digital@hora_ingresada,_hora
  3162  001740  C0CC  F0E2         	movff	editar_hora_reloj_digital@hora_ingresada+1,_hora+1
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;main.c: 622: numeros_ingresados++;
  3166  001744  0100               	movlb	0	; () banked
  3167  001746  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  3168  001748  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3169                           
  3170                           ;main.c: 623: } else {
  3171  00174A  D005               	goto	l411
  3172  00174C                     l410:
  3173  00174C                     l4707:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;main.c: 624: numeros_ingresados = 0;
  3177  00174C  0E00               	movlw	0
  3178  00174E  0100               	movlb	0	; () banked
  3179  001750  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3180  001752  0E00               	movlw	0
  3181  001754  6F94               	movwf	_numeros_ingresados& (0+255),b
  3182  001756                     l411:
  3183                           
  3184                           ; BSR set to: 0
  3185                           
  3186                           ; BSR set to: 0
  3187                           
  3188                           ; BSR set to: 0
  3189                           
  3190                           ; BSR set to: 0
  3191  001756  0100               	movlb	0	; () banked
  3192  001758  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3193  00175A  D7D3               	goto	l408
  3194  00175C  0100               	movlb	0	; () banked
  3195  00175E  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3196  001760  E105               	bnz	l4711
  3197  001762  0E03               	movlw	3
  3198  001764  0100               	movlb	0	; () banked
  3199  001766  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  3200  001768  A0D8               	btfss	status,0,c
  3201  00176A  D7CB               	goto	l408
  3202  00176C                     l4711:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;main.c: 625: }
  3206                           ;main.c: 626: }
  3207                           ;main.c: 627: }
  3208                           ;main.c: 629: setHoraMinutoSegundo();
  3209  00176C  ECF7  F019         	call	_setHoraMinutoSegundo	;wreg free
  3210                           
  3211                           ;main.c: 630: posicion++;
  3212  001770  0100               	movlb	0	; () banked
  3213  001772  4BD1               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3214  001774  2BD2               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;main.c: 631: _delay((unsigned long)((50)*(8000000/4000.0)));
  3218  001776  0E82               	movlw	130
  3219  001778  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3220  00177A  0EDE               	movlw	222
  3221  00177C                     u6307:
  3222  00177C  2EE8               	decfsz	wreg,f,c
  3223  00177E  D7FE               	bra	u6307
  3224  001780  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3225  001782  D7FC               	bra	u6307
  3226  001784                     l406:
  3227                           
  3228                           ;main.c: 632: }
  3229                           ;main.c: 635: if (posicion == 1) {
  3230  001784  0100               	movlb	0	; () banked
  3231  001786  05D1               	decf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3232  001788  0100               	movlb	0	; () banked
  3233  00178A  11D2               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3234  00178C  A4D8               	btfss	status,2,c
  3235  00178E  D04C               	goto	l413
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;main.c: 636: numeros_ingresados = 0;
  3239  001790  0E00               	movlw	0
  3240  001792  0100               	movlb	0	; () banked
  3241  001794  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3242  001796  0E00               	movlw	0
  3243  001798  6F94               	movwf	_numeros_ingresados& (0+255),b
  3244                           
  3245                           ;main.c: 637: int minuto_ingresado = 0;
  3246  00179A  0E00               	movlw	0
  3247  00179C  0100               	movlb	0	; () banked
  3248  00179E  6FCE               	movwf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),b
  3249  0017A0  0E00               	movlw	0
  3250  0017A2  6FCD               	movwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),b
  3251                           
  3252                           ;main.c: 638: while (numeros_ingresados < 3) {
  3253  0017A4  D02A               	goto	l418
  3254  0017A6                     
  3255                           ; BSR set to: 0
  3256                           ;main.c: 639: ingreso_numero();
  3257                           
  3258                           ; BSR set to: 0
  3259  0017A6  ECFE  F007         	call	_ingreso_numero	;wreg free
  3260                           
  3261                           ;main.c: 640: if (numeros_ingresados == 2) {
  3262  0017AA  0E02               	movlw	2
  3263  0017AC  0100               	movlb	0	; () banked
  3264  0017AE  1994               	xorwf	_numeros_ingresados& (0+255),w,b
  3265  0017B0  0100               	movlb	0	; () banked
  3266  0017B2  1195               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3267  0017B4  A4D8               	btfss	status,2,c
  3268  0017B6  D021               	goto	l418
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;main.c: 641: minuto_ingresado = covertir_valores_de_array_a_escala_decimal();
  3272  0017B8  EC7D  F012         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3273  0017BC  C05B  F0CD         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@minuto_ing
      +                          resado
  3274  0017C0  C05C  F0CE         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@minuto_i
      +                          ngresado+1
  3275                           
  3276                           ;main.c: 642: if ((0 <= minuto_ingresado) && (minuto_ingresado <= 59)) {
  3277  0017C4  0100               	movlb	0	; () banked
  3278  0017C6  BFCE               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3279  0017C8  D013               	goto	l417
  3280                           
  3281                           ; BSR set to: 0
  3282  0017CA  0100               	movlb	0	; () banked
  3283  0017CC  BFCE               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3284  0017CE  D008               	goto	u5640
  3285  0017D0  0100               	movlb	0	; () banked
  3286  0017D2  51CE               	movf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),w,b
  3287  0017D4  E10D               	bnz	l4735
  3288  0017D6  0E3C               	movlw	60
  3289  0017D8  0100               	movlb	0	; () banked
  3290  0017DA  5DCD               	subwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),w,b
  3291  0017DC  B0D8               	btfsc	status,0,c
  3292  0017DE  D008               	goto	l417
  3293  0017E0                     u5640:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;main.c: 643: minuto = minuto_ingresado;
  3297  0017E0  C0CD  F0DF         	movff	editar_hora_reloj_digital@minuto_ingresado,_minuto
  3298  0017E4  C0CE  F0E0         	movff	editar_hora_reloj_digital@minuto_ingresado+1,_minuto+1
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;main.c: 644: numeros_ingresados++;
  3302  0017E8  0100               	movlb	0	; () banked
  3303  0017EA  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  3304  0017EC  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3305                           
  3306                           ;main.c: 645: } else {
  3307  0017EE  D005               	goto	l418
  3308  0017F0                     l417:
  3309  0017F0                     l4735:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;main.c: 646: numeros_ingresados = 0;
  3313  0017F0  0E00               	movlw	0
  3314  0017F2  0100               	movlb	0	; () banked
  3315  0017F4  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3316  0017F6  0E00               	movlw	0
  3317  0017F8  6F94               	movwf	_numeros_ingresados& (0+255),b
  3318  0017FA                     l418:
  3319                           
  3320                           ; BSR set to: 0
  3321                           
  3322                           ; BSR set to: 0
  3323                           
  3324                           ; BSR set to: 0
  3325                           
  3326                           ; BSR set to: 0
  3327  0017FA  0100               	movlb	0	; () banked
  3328  0017FC  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3329  0017FE  D7D3               	goto	l415
  3330  001800  0100               	movlb	0	; () banked
  3331  001802  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3332  001804  E105               	bnz	l4739
  3333  001806  0E03               	movlw	3
  3334  001808  0100               	movlb	0	; () banked
  3335  00180A  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  3336  00180C  A0D8               	btfss	status,0,c
  3337  00180E  D7CB               	goto	l415
  3338  001810                     l4739:
  3339                           
  3340                           ; BSR set to: 0
  3341                           ;main.c: 647: }
  3342                           ;main.c: 648: }
  3343                           ;main.c: 649: }
  3344                           ;main.c: 651: setHoraMinutoSegundo();
  3345  001810  ECF7  F019         	call	_setHoraMinutoSegundo	;wreg free
  3346                           
  3347                           ;main.c: 652: posicion++;
  3348  001814  0100               	movlb	0	; () banked
  3349  001816  4BD1               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3350  001818  2BD2               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;main.c: 653: _delay((unsigned long)((50)*(8000000/4000.0)));
  3354  00181A  0E82               	movlw	130
  3355  00181C  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3356  00181E  0EDE               	movlw	222
  3357  001820                     u6317:
  3358  001820  2EE8               	decfsz	wreg,f,c
  3359  001822  D7FE               	bra	u6317
  3360  001824  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3361  001826  D7FC               	bra	u6317
  3362  001828                     l413:
  3363                           
  3364                           ;main.c: 654: }
  3365                           ;main.c: 657: if (posicion == 2) {
  3366  001828  0E02               	movlw	2
  3367  00182A  0100               	movlb	0	; () banked
  3368  00182C  19D1               	xorwf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3369  00182E  0100               	movlb	0	; () banked
  3370  001830  11D2               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3371  001832  A4D8               	btfss	status,2,c
  3372  001834  D04C               	goto	l420
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;main.c: 658: numeros_ingresados = 0;
  3376  001836  0E00               	movlw	0
  3377  001838  0100               	movlb	0	; () banked
  3378  00183A  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3379  00183C  0E00               	movlw	0
  3380  00183E  6F94               	movwf	_numeros_ingresados& (0+255),b
  3381                           
  3382                           ;main.c: 659: int segundo_ingresado = 0;
  3383  001840  0E00               	movlw	0
  3384  001842  0100               	movlb	0	; () banked
  3385  001844  6FD0               	movwf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),b
  3386  001846  0E00               	movlw	0
  3387  001848  6FCF               	movwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),b
  3388                           
  3389                           ;main.c: 660: while (numeros_ingresados < 3) {
  3390  00184A  D02A               	goto	l425
  3391  00184C                     
  3392                           ; BSR set to: 0
  3393                           ;main.c: 661: ingreso_numero();
  3394                           
  3395                           ; BSR set to: 0
  3396  00184C  ECFE  F007         	call	_ingreso_numero	;wreg free
  3397                           
  3398                           ;main.c: 662: if (numeros_ingresados == 2) {
  3399  001850  0E02               	movlw	2
  3400  001852  0100               	movlb	0	; () banked
  3401  001854  1994               	xorwf	_numeros_ingresados& (0+255),w,b
  3402  001856  0100               	movlb	0	; () banked
  3403  001858  1195               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3404  00185A  A4D8               	btfss	status,2,c
  3405  00185C  D021               	goto	l425
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;main.c: 663: segundo_ingresado = covertir_valores_de_array_a_escala_decimal();
  3409  00185E  EC7D  F012         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3410  001862  C05B  F0CF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@segundo_in
      +                          gresado
  3411  001866  C05C  F0D0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@segundo_
      +                          ingresado+1
  3412                           
  3413                           ;main.c: 664: if ((0 <= segundo_ingresado) && (segundo_ingresado <= 59)) {
  3414  00186A  0100               	movlb	0	; () banked
  3415  00186C  BFD0               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  3416  00186E  D013               	goto	l424
  3417                           
  3418                           ; BSR set to: 0
  3419  001870  0100               	movlb	0	; () banked
  3420  001872  BFD0               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  3421  001874  D008               	goto	u5690
  3422  001876  0100               	movlb	0	; () banked
  3423  001878  51D0               	movf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),w,b
  3424  00187A  E10D               	bnz	l4763
  3425  00187C  0E3C               	movlw	60
  3426  00187E  0100               	movlb	0	; () banked
  3427  001880  5DCF               	subwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),w,b
  3428  001882  B0D8               	btfsc	status,0,c
  3429  001884  D008               	goto	l424
  3430  001886                     u5690:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;main.c: 665: segundo = segundo_ingresado;
  3434  001886  C0CF  F096         	movff	editar_hora_reloj_digital@segundo_ingresado,_segundo
  3435  00188A  C0D0  F097         	movff	editar_hora_reloj_digital@segundo_ingresado+1,_segundo+1
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;main.c: 666: numeros_ingresados++;
  3439  00188E  0100               	movlb	0	; () banked
  3440  001890  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  3441  001892  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3442                           
  3443                           ;main.c: 667: } else {
  3444  001894  D005               	goto	l425
  3445  001896                     l424:
  3446  001896                     l4763:
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;main.c: 668: numeros_ingresados = 0;
  3450  001896  0E00               	movlw	0
  3451  001898  0100               	movlb	0	; () banked
  3452  00189A  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3453  00189C  0E00               	movlw	0
  3454  00189E  6F94               	movwf	_numeros_ingresados& (0+255),b
  3455  0018A0                     l425:
  3456                           
  3457                           ; BSR set to: 0
  3458                           
  3459                           ; BSR set to: 0
  3460                           
  3461                           ; BSR set to: 0
  3462                           
  3463                           ; BSR set to: 0
  3464  0018A0  0100               	movlb	0	; () banked
  3465  0018A2  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3466  0018A4  D7D3               	goto	l422
  3467  0018A6  0100               	movlb	0	; () banked
  3468  0018A8  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3469  0018AA  E105               	bnz	l4767
  3470  0018AC  0E03               	movlw	3
  3471  0018AE  0100               	movlb	0	; () banked
  3472  0018B0  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  3473  0018B2  A0D8               	btfss	status,0,c
  3474  0018B4  D7CB               	goto	l422
  3475  0018B6                     l4767:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;main.c: 669: }
  3479                           ;main.c: 670: }
  3480                           ;main.c: 671: }
  3481                           ;main.c: 673: setHoraMinutoSegundo();
  3482  0018B6  ECF7  F019         	call	_setHoraMinutoSegundo	;wreg free
  3483                           
  3484                           ;main.c: 674: posicion++;
  3485  0018BA  0100               	movlb	0	; () banked
  3486  0018BC  4BD1               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3487  0018BE  2BD2               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;main.c: 675: _delay((unsigned long)((50)*(8000000/4000.0)));
  3491  0018C0  0E82               	movlw	130
  3492  0018C2  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3493  0018C4  0EDE               	movlw	222
  3494  0018C6                     u6327:
  3495  0018C6  2EE8               	decfsz	wreg,f,c
  3496  0018C8  D7FE               	bra	u6327
  3497  0018CA  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3498  0018CC  D7FC               	bra	u6327
  3499  0018CE                     l420:
  3500                           
  3501                           ;main.c: 676: }
  3502                           ;main.c: 677: Write_RTC();
  3503  0018CE  EC27  F00F         	call	_Write_RTC	;wreg free
  3504                           
  3505                           ;main.c: 678: motivo_ingreso_de_numeros = 0;
  3506  0018D2  0E00               	movlw	0
  3507  0018D4  0100               	movlb	0	; () banked
  3508  0018D6  6F93               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3509  0018D8  0E00               	movlw	0
  3510  0018DA  6F92               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;main.c: 679: numeros_ingresados = 0;
  3514  0018DC  0E00               	movlw	0
  3515  0018DE  0100               	movlb	0	; () banked
  3516  0018E0  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3517  0018E2  0E00               	movlw	0
  3518  0018E4  6F94               	movwf	_numeros_ingresados& (0+255),b
  3519                           
  3520                           ; BSR set to: 0
  3521  0018E6  0012               	return		;funcret
  3522  0018E8                     __end_of_editar_hora_reloj_digital:
  3523                           	opt stack 0
  3524                           tblptru	equ	0xFF8
  3525                           tblptrh	equ	0xFF7
  3526                           tblptrl	equ	0xFF6
  3527                           tablat	equ	0xFF5
  3528                           prodh	equ	0xFF4
  3529                           prodl	equ	0xFF3
  3530                           postinc0	equ	0xFEE
  3531                           wreg	equ	0xFE8
  3532                           postinc1	equ	0xFE6
  3533                           postdec1	equ	0xFE5
  3534                           fsr1h	equ	0xFE2
  3535                           fsr1l	equ	0xFE1
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _setHoraMinutoSegundo *****************
  3543 ;; Defined at:
  3544 ;;		line 80 in file "main.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    5
  3565 ;; This function calls:
  3566 ;;		_Write_RTC
  3567 ;;		_lcd_gotoxy
  3568 ;;		_lcd_putrs
  3569 ;;		_sprintf
  3570 ;; This function is called by:
  3571 ;;		_set_reloj_digital
  3572 ;;		_editar_hora_reloj_digital
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           	psect	text15
  3577  0033EE                     __ptext15:
  3578                           	opt stack 0
  3579  0033EE                     _setHoraMinutoSegundo:
  3580                           	opt stack 23
  3581                           
  3582                           ;main.c: 81: if (hora >= 24) {
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;incstack = 0
  3586  0033EE  0100               	movlb	0	; () banked
  3587  0033F0  BFE2               	btfsc	(_hora+1)& (0+255),7,b
  3588  0033F2  D019               	goto	l174
  3589  0033F4  0100               	movlb	0	; () banked
  3590  0033F6  51E2               	movf	(_hora+1)& (0+255),w,b
  3591  0033F8  E105               	bnz	u4660
  3592  0033FA  0E18               	movlw	24
  3593  0033FC  0100               	movlb	0	; () banked
  3594  0033FE  5DE1               	subwf	_hora& (0+255),w,b
  3595  003400  A0D8               	btfss	status,0,c
  3596  003402  D011               	goto	l174
  3597  003404                     u4660:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;main.c: 82: hora = 0;
  3601  003404  0E00               	movlw	0
  3602  003406  0100               	movlb	0	; () banked
  3603  003408  6FE2               	movwf	(_hora+1)& (0+255),b
  3604  00340A  0E00               	movlw	0
  3605  00340C  6FE1               	movwf	_hora& (0+255),b
  3606                           
  3607                           ;main.c: 83: minuto = 0;
  3608  00340E  0E00               	movlw	0
  3609  003410  0100               	movlb	0	; () banked
  3610  003412  6FE0               	movwf	(_minuto+1)& (0+255),b
  3611  003414  0E00               	movlw	0
  3612  003416  6FDF               	movwf	_minuto& (0+255),b
  3613                           
  3614                           ;main.c: 84: segundo = 0;
  3615  003418  0E00               	movlw	0
  3616  00341A  0100               	movlb	0	; () banked
  3617  00341C  6F97               	movwf	(_segundo+1)& (0+255),b
  3618  00341E  0E00               	movlw	0
  3619  003420  6F96               	movwf	_segundo& (0+255),b
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;main.c: 85: Write_RTC();
  3623  003422  EC27  F00F         	call	_Write_RTC	;wreg free
  3624  003426                     l174:
  3625                           
  3626                           ;main.c: 86: }
  3627                           ;main.c: 88: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  3628  003426  0EA5               	movlw	low _buffer2
  3629  003428  6E22               	movwf	sprintf@sp,c
  3630  00342A  0E00               	movlw	high _buffer2
  3631  00342C  6E23               	movwf	sprintf@sp+1,c
  3632  00342E  0E9F               	movlw	low STR_8
  3633  003430  6E24               	movwf	sprintf@f,c
  3634  003432  0E0F               	movlw	high STR_8
  3635  003434  6E25               	movwf	sprintf@f+1,c
  3636  003436  C0E1  F026         	movff	_hora,?_sprintf+4
  3637  00343A  C0E2  F027         	movff	_hora+1,?_sprintf+5
  3638  00343E  C0DF  F028         	movff	_minuto,?_sprintf+6
  3639  003442  C0E0  F029         	movff	_minuto+1,?_sprintf+7
  3640  003446  C096  F02A         	movff	_segundo,?_sprintf+8
  3641  00344A  C097  F02B         	movff	_segundo+1,?_sprintf+9
  3642  00344E  EC4E  F00A         	call	_sprintf	;wreg free
  3643                           
  3644                           ;main.c: 89: lcd_gotoxy(9, 2);
  3645  003452  0E02               	movlw	2
  3646  003454  6E05               	movwf	lcd_gotoxy@y,c
  3647  003456  0E09               	movlw	9
  3648  003458  EC42  F01D         	call	_lcd_gotoxy
  3649                           
  3650                           ;main.c: 90: lcd_putrs(buffer2);
  3651  00345C  0EA5               	movlw	low _buffer2
  3652  00345E  6E09               	movwf	lcd_putrs@ptr,c
  3653  003460  0E00               	movlw	high _buffer2
  3654  003462  6E0A               	movwf	lcd_putrs@ptr+1,c
  3655  003464  ECD3  F01B         	call	_lcd_putrs	;wreg free
  3656  003468  0012               	return		;funcret
  3657  00346A                     __end_of_setHoraMinutoSegundo:
  3658                           	opt stack 0
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           postinc0	equ	0xFEE
  3666                           wreg	equ	0xFE8
  3667                           postinc1	equ	0xFE6
  3668                           postdec1	equ	0xFE5
  3669                           fsr1h	equ	0xFE2
  3670                           fsr1l	equ	0xFE1
  3671                           postinc2	equ	0xFDE
  3672                           postdec2	equ	0xFDD
  3673                           fsr2h	equ	0xFDA
  3674                           fsr2l	equ	0xFD9
  3675                           status	equ	0xFD8
  3676                           
  3677 ;; *************** function _editar_fecha_reloj_digital *****************
  3678 ;; Defined at:
  3679 ;;		line 532 in file "main.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  anio_ingresa    2   14[BANK0 ] int 
  3684 ;;  mes_ingresad    2   12[BANK0 ] int 
  3685 ;;  dia_ingresad    2   10[BANK0 ] int 
  3686 ;;  posicion        2   16[BANK0 ] int 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  1    wreg      void 
  3689 ;; Registers used:
  3690 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3697 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3699 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;Total ram usage:        9 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    7
  3703 ;; This function calls:
  3704 ;;		_Write_RTC
  3705 ;;		_covertir_valores_de_array_a_escala_decimal
  3706 ;;		_ingreso_numero
  3707 ;;		_setDiaMesAnio
  3708 ;; This function is called by:
  3709 ;;		_seleccionar_opcion
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text16
  3714  001264                     __ptext16:
  3715                           	opt stack 0
  3716  001264                     _editar_fecha_reloj_digital:
  3717                           	opt stack 18
  3718                           
  3719                           ;main.c: 533: int posicion = 0;
  3720                           
  3721                           ;incstack = 0
  3722  001264  0E00               	movlw	0
  3723  001266  0100               	movlb	0	; () banked
  3724  001268  6FD2               	movwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),b
  3725  00126A  0E00               	movlw	0
  3726  00126C  6FD1               	movwf	editar_fecha_reloj_digital@posicion& (0+255),b
  3727                           
  3728                           ;main.c: 535: motivo_ingreso_de_numeros = 1;
  3729  00126E  0E00               	movlw	0
  3730  001270  0100               	movlb	0	; () banked
  3731  001272  6F93               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3732  001274  0E01               	movlw	1
  3733  001276  6F92               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;main.c: 538: if (posicion == 0) {
  3737  001278  0100               	movlb	0	; () banked
  3738  00127A  51D1               	movf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  3739  00127C  0100               	movlb	0	; () banked
  3740  00127E  11D2               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  3741  001280  A4D8               	btfss	status,2,c
  3742  001282  D053               	goto	l382
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;main.c: 539: numeros_ingresados = 0;
  3746  001284  0E00               	movlw	0
  3747  001286  0100               	movlb	0	; () banked
  3748  001288  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3749  00128A  0E00               	movlw	0
  3750  00128C  6F94               	movwf	_numeros_ingresados& (0+255),b
  3751                           
  3752                           ;main.c: 540: int dia_ingresado = 0;
  3753  00128E  0E00               	movlw	0
  3754  001290  0100               	movlb	0	; () banked
  3755  001292  6FCC               	movwf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),b
  3756  001294  0E00               	movlw	0
  3757  001296  6FCB               	movwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),b
  3758                           
  3759                           ;main.c: 541: while (numeros_ingresados < 3) {
  3760  001298  D031               	goto	l387
  3761  00129A                     
  3762                           ; BSR set to: 0
  3763                           ;main.c: 543: ingreso_numero();
  3764                           
  3765                           ; BSR set to: 0
  3766  00129A  ECFE  F007         	call	_ingreso_numero	;wreg free
  3767                           
  3768                           ;main.c: 545: if (numeros_ingresados == 2) {
  3769  00129E  0E02               	movlw	2
  3770  0012A0  0100               	movlb	0	; () banked
  3771  0012A2  1994               	xorwf	_numeros_ingresados& (0+255),w,b
  3772  0012A4  0100               	movlb	0	; () banked
  3773  0012A6  1195               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3774  0012A8  A4D8               	btfss	status,2,c
  3775  0012AA  D028               	goto	l387
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;main.c: 546: dia_ingresado = covertir_valores_de_array_a_escala_decimal();
  3779  0012AC  EC7D  F012         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3780  0012B0  C05B  F0CB         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@dia_ingre
      +                          sado
  3781  0012B4  C05C  F0CC         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@dia_ing
      +                          resado+1
  3782                           
  3783                           ;main.c: 547: if ((0 < dia_ingresado) && (dia_ingresado <= 31)) {
  3784  0012B8  0100               	movlb	0	; () banked
  3785  0012BA  BFCC               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  3786  0012BC  D01A               	goto	l386
  3787  0012BE  0100               	movlb	0	; () banked
  3788  0012C0  51CC               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  3789  0012C2  E104               	bnz	u5430
  3790  0012C4  0100               	movlb	0	; () banked
  3791  0012C6  05CB               	decf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  3792  0012C8  A0D8               	btfss	status,0,c
  3793  0012CA  D013               	goto	l386
  3794  0012CC                     u5430:
  3795                           
  3796                           ; BSR set to: 0
  3797  0012CC  0100               	movlb	0	; () banked
  3798  0012CE  BFCC               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  3799  0012D0  D008               	goto	u5440
  3800  0012D2  0100               	movlb	0	; () banked
  3801  0012D4  51CC               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  3802  0012D6  E10D               	bnz	l4615
  3803  0012D8  0E20               	movlw	32
  3804  0012DA  0100               	movlb	0	; () banked
  3805  0012DC  5DCB               	subwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  3806  0012DE  B0D8               	btfsc	status,0,c
  3807  0012E0  D008               	goto	l386
  3808  0012E2                     u5440:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;main.c: 548: dia = dia_ingresado;
  3812  0012E2  C0CB  F0E3         	movff	editar_fecha_reloj_digital@dia_ingresado,_dia
  3813  0012E6  C0CC  F0E4         	movff	editar_fecha_reloj_digital@dia_ingresado+1,_dia+1
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;main.c: 549: numeros_ingresados++;
  3817  0012EA  0100               	movlb	0	; () banked
  3818  0012EC  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  3819  0012EE  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3820                           
  3821                           ;main.c: 550: } else {
  3822  0012F0  D005               	goto	l387
  3823  0012F2                     l386:
  3824  0012F2                     l4615:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;main.c: 551: numeros_ingresados = 0;
  3828  0012F2  0E00               	movlw	0
  3829  0012F4  0100               	movlb	0	; () banked
  3830  0012F6  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3831  0012F8  0E00               	movlw	0
  3832  0012FA  6F94               	movwf	_numeros_ingresados& (0+255),b
  3833  0012FC                     l387:
  3834                           
  3835                           ; BSR set to: 0
  3836                           
  3837                           ; BSR set to: 0
  3838                           
  3839                           ; BSR set to: 0
  3840                           
  3841                           ; BSR set to: 0
  3842  0012FC  0100               	movlb	0	; () banked
  3843  0012FE  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3844  001300  D7CC               	goto	l384
  3845  001302  0100               	movlb	0	; () banked
  3846  001304  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3847  001306  E105               	bnz	l4619
  3848  001308  0E03               	movlw	3
  3849  00130A  0100               	movlb	0	; () banked
  3850  00130C  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  3851  00130E  A0D8               	btfss	status,0,c
  3852  001310  D7C4               	goto	l384
  3853  001312                     l4619:
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;main.c: 552: }
  3857                           ;main.c: 553: }
  3858                           ;main.c: 554: }
  3859                           ;main.c: 556: setDiaMesAnio();
  3860  001312  ECEA  F018         	call	_setDiaMesAnio	;wreg free
  3861                           
  3862                           ;main.c: 557: posicion++;
  3863  001316  0100               	movlb	0	; () banked
  3864  001318  4BD1               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  3865  00131A  2BD2               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;main.c: 558: _delay((unsigned long)((50)*(8000000/4000.0)));
  3869  00131C  0E82               	movlw	130
  3870  00131E  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  3871  001320  0EDE               	movlw	222
  3872  001322                     u6337:
  3873  001322  2EE8               	decfsz	wreg,f,c
  3874  001324  D7FE               	bra	u6337
  3875  001326  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  3876  001328  D7FC               	bra	u6337
  3877  00132A                     l382:
  3878                           
  3879                           ;main.c: 559: }
  3880                           ;main.c: 562: if (posicion == 1) {
  3881  00132A  0100               	movlb	0	; () banked
  3882  00132C  05D1               	decf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  3883  00132E  0100               	movlb	0	; () banked
  3884  001330  11D2               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  3885  001332  A4D8               	btfss	status,2,c
  3886  001334  D053               	goto	l389
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;main.c: 563: numeros_ingresados = 0;
  3890  001336  0E00               	movlw	0
  3891  001338  0100               	movlb	0	; () banked
  3892  00133A  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3893  00133C  0E00               	movlw	0
  3894  00133E  6F94               	movwf	_numeros_ingresados& (0+255),b
  3895                           
  3896                           ;main.c: 564: int mes_ingresado = 0;
  3897  001340  0E00               	movlw	0
  3898  001342  0100               	movlb	0	; () banked
  3899  001344  6FCE               	movwf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),b
  3900  001346  0E00               	movlw	0
  3901  001348  6FCD               	movwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),b
  3902                           
  3903                           ;main.c: 565: while (numeros_ingresados < 3) {
  3904  00134A  D031               	goto	l394
  3905  00134C                     
  3906                           ; BSR set to: 0
  3907                           ;main.c: 566: ingreso_numero();
  3908                           
  3909                           ; BSR set to: 0
  3910  00134C  ECFE  F007         	call	_ingreso_numero	;wreg free
  3911                           
  3912                           ;main.c: 567: if (numeros_ingresados == 2) {
  3913  001350  0E02               	movlw	2
  3914  001352  0100               	movlb	0	; () banked
  3915  001354  1994               	xorwf	_numeros_ingresados& (0+255),w,b
  3916  001356  0100               	movlb	0	; () banked
  3917  001358  1195               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3918  00135A  A4D8               	btfss	status,2,c
  3919  00135C  D028               	goto	l394
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;main.c: 568: mes_ingresado = covertir_valores_de_array_a_escala_decimal();
  3923  00135E  EC7D  F012         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3924  001362  C05B  F0CD         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@mes_ingre
      +                          sado
  3925  001366  C05C  F0CE         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@mes_ing
      +                          resado+1
  3926                           
  3927                           ;main.c: 569: if ((0 < mes_ingresado) && (mes_ingresado <= 12)) {
  3928  00136A  0100               	movlb	0	; () banked
  3929  00136C  BFCE               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  3930  00136E  D01A               	goto	l393
  3931  001370  0100               	movlb	0	; () banked
  3932  001372  51CE               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  3933  001374  E104               	bnz	u5480
  3934  001376  0100               	movlb	0	; () banked
  3935  001378  05CD               	decf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  3936  00137A  A0D8               	btfss	status,0,c
  3937  00137C  D013               	goto	l393
  3938  00137E                     u5480:
  3939                           
  3940                           ; BSR set to: 0
  3941  00137E  0100               	movlb	0	; () banked
  3942  001380  BFCE               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  3943  001382  D008               	goto	u5490
  3944  001384  0100               	movlb	0	; () banked
  3945  001386  51CE               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  3946  001388  E10D               	bnz	l4643
  3947  00138A  0E0D               	movlw	13
  3948  00138C  0100               	movlb	0	; () banked
  3949  00138E  5DCD               	subwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  3950  001390  B0D8               	btfsc	status,0,c
  3951  001392  D008               	goto	l393
  3952  001394                     u5490:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;main.c: 570: mes = mes_ingresado;
  3956  001394  C0CD  F0E7         	movff	editar_fecha_reloj_digital@mes_ingresado,_mes
  3957  001398  C0CE  F0E8         	movff	editar_fecha_reloj_digital@mes_ingresado+1,_mes+1
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;main.c: 571: numeros_ingresados++;
  3961  00139C  0100               	movlb	0	; () banked
  3962  00139E  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  3963  0013A0  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3964                           
  3965                           ;main.c: 572: } else {
  3966  0013A2  D005               	goto	l394
  3967  0013A4                     l393:
  3968  0013A4                     l4643:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;main.c: 573: numeros_ingresados = 0;
  3972  0013A4  0E00               	movlw	0
  3973  0013A6  0100               	movlb	0	; () banked
  3974  0013A8  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  3975  0013AA  0E00               	movlw	0
  3976  0013AC  6F94               	movwf	_numeros_ingresados& (0+255),b
  3977  0013AE                     l394:
  3978                           
  3979                           ; BSR set to: 0
  3980                           
  3981                           ; BSR set to: 0
  3982                           
  3983                           ; BSR set to: 0
  3984                           
  3985                           ; BSR set to: 0
  3986  0013AE  0100               	movlb	0	; () banked
  3987  0013B0  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3988  0013B2  D7CC               	goto	l391
  3989  0013B4  0100               	movlb	0	; () banked
  3990  0013B6  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3991  0013B8  E105               	bnz	l4647
  3992  0013BA  0E03               	movlw	3
  3993  0013BC  0100               	movlb	0	; () banked
  3994  0013BE  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  3995  0013C0  A0D8               	btfss	status,0,c
  3996  0013C2  D7C4               	goto	l391
  3997  0013C4                     l4647:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;main.c: 574: }
  4001                           ;main.c: 575: }
  4002                           ;main.c: 576: }
  4003                           ;main.c: 578: setDiaMesAnio();
  4004  0013C4  ECEA  F018         	call	_setDiaMesAnio	;wreg free
  4005                           
  4006                           ;main.c: 579: posicion++;
  4007  0013C8  0100               	movlb	0	; () banked
  4008  0013CA  4BD1               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4009  0013CC  2BD2               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;main.c: 580: _delay((unsigned long)((50)*(8000000/4000.0)));
  4013  0013CE  0E82               	movlw	130
  4014  0013D0  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4015  0013D2  0EDE               	movlw	222
  4016  0013D4                     u6347:
  4017  0013D4  2EE8               	decfsz	wreg,f,c
  4018  0013D6  D7FE               	bra	u6347
  4019  0013D8  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4020  0013DA  D7FC               	bra	u6347
  4021  0013DC                     l389:
  4022                           
  4023                           ;main.c: 581: }
  4024                           ;main.c: 584: if (posicion == 2) {
  4025  0013DC  0E02               	movlw	2
  4026  0013DE  0100               	movlb	0	; () banked
  4027  0013E0  19D1               	xorwf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4028  0013E2  0100               	movlb	0	; () banked
  4029  0013E4  11D2               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4030  0013E6  A4D8               	btfss	status,2,c
  4031  0013E8  D04C               	goto	l396
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 585: numeros_ingresados = 0;
  4035  0013EA  0E00               	movlw	0
  4036  0013EC  0100               	movlb	0	; () banked
  4037  0013EE  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  4038  0013F0  0E00               	movlw	0
  4039  0013F2  6F94               	movwf	_numeros_ingresados& (0+255),b
  4040                           
  4041                           ;main.c: 586: int anio_ingresado = 0;
  4042  0013F4  0E00               	movlw	0
  4043  0013F6  0100               	movlb	0	; () banked
  4044  0013F8  6FD0               	movwf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),b
  4045  0013FA  0E00               	movlw	0
  4046  0013FC  6FCF               	movwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),b
  4047                           
  4048                           ;main.c: 587: while (numeros_ingresados < 3) {
  4049  0013FE  D02A               	goto	l401
  4050  001400                     
  4051                           ; BSR set to: 0
  4052                           ;main.c: 588: ingreso_numero();
  4053                           
  4054                           ; BSR set to: 0
  4055  001400  ECFE  F007         	call	_ingreso_numero	;wreg free
  4056                           
  4057                           ;main.c: 589: if (numeros_ingresados == 2) {
  4058  001404  0E02               	movlw	2
  4059  001406  0100               	movlb	0	; () banked
  4060  001408  1994               	xorwf	_numeros_ingresados& (0+255),w,b
  4061  00140A  0100               	movlb	0	; () banked
  4062  00140C  1195               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4063  00140E  A4D8               	btfss	status,2,c
  4064  001410  D021               	goto	l401
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;main.c: 590: anio_ingresado = covertir_valores_de_array_a_escala_decimal();
  4068  001412  EC7D  F012         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4069  001416  C05B  F0CF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@anio_ingr
      +                          esado
  4070  00141A  C05C  F0D0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@anio_in
      +                          gresado+1
  4071                           
  4072                           ;main.c: 591: if ((0 <= anio_ingresado) && (anio_ingresado <= 99)) {
  4073  00141E  0100               	movlb	0	; () banked
  4074  001420  BFD0               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4075  001422  D013               	goto	l400
  4076                           
  4077                           ; BSR set to: 0
  4078  001424  0100               	movlb	0	; () banked
  4079  001426  BFD0               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4080  001428  D008               	goto	u5540
  4081  00142A  0100               	movlb	0	; () banked
  4082  00142C  51D0               	movf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),w,b
  4083  00142E  E10D               	bnz	l4671
  4084  001430  0E64               	movlw	100
  4085  001432  0100               	movlb	0	; () banked
  4086  001434  5DCF               	subwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),w,b
  4087  001436  B0D8               	btfsc	status,0,c
  4088  001438  D008               	goto	l400
  4089  00143A                     u5540:
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;main.c: 592: anio = anio_ingresado;
  4093  00143A  C0CF  F0E9         	movff	editar_fecha_reloj_digital@anio_ingresado,_anio
  4094  00143E  C0D0  F0EA         	movff	editar_fecha_reloj_digital@anio_ingresado+1,_anio+1
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;main.c: 593: numeros_ingresados++;
  4098  001442  0100               	movlb	0	; () banked
  4099  001444  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  4100  001446  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4101                           
  4102                           ;main.c: 594: } else {
  4103  001448  D005               	goto	l401
  4104  00144A                     l400:
  4105  00144A                     l4671:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;main.c: 595: numeros_ingresados = 0;
  4109  00144A  0E00               	movlw	0
  4110  00144C  0100               	movlb	0	; () banked
  4111  00144E  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  4112  001450  0E00               	movlw	0
  4113  001452  6F94               	movwf	_numeros_ingresados& (0+255),b
  4114  001454                     l401:
  4115                           
  4116                           ; BSR set to: 0
  4117                           
  4118                           ; BSR set to: 0
  4119                           
  4120                           ; BSR set to: 0
  4121                           
  4122                           ; BSR set to: 0
  4123  001454  0100               	movlb	0	; () banked
  4124  001456  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4125  001458  D7D3               	goto	l398
  4126  00145A  0100               	movlb	0	; () banked
  4127  00145C  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4128  00145E  E105               	bnz	l4675
  4129  001460  0E03               	movlw	3
  4130  001462  0100               	movlb	0	; () banked
  4131  001464  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  4132  001466  A0D8               	btfss	status,0,c
  4133  001468  D7CB               	goto	l398
  4134  00146A                     l4675:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;main.c: 596: }
  4138                           ;main.c: 597: }
  4139                           ;main.c: 598: }
  4140                           ;main.c: 600: setDiaMesAnio();
  4141  00146A  ECEA  F018         	call	_setDiaMesAnio	;wreg free
  4142                           
  4143                           ;main.c: 601: posicion++;
  4144  00146E  0100               	movlb	0	; () banked
  4145  001470  4BD1               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4146  001472  2BD2               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;main.c: 602: _delay((unsigned long)((50)*(8000000/4000.0)));
  4150  001474  0E82               	movlw	130
  4151  001476  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4152  001478  0EDE               	movlw	222
  4153  00147A                     u6357:
  4154  00147A  2EE8               	decfsz	wreg,f,c
  4155  00147C  D7FE               	bra	u6357
  4156  00147E  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4157  001480  D7FC               	bra	u6357
  4158  001482                     l396:
  4159                           
  4160                           ;main.c: 603: }
  4161                           ;main.c: 604: Write_RTC();
  4162  001482  EC27  F00F         	call	_Write_RTC	;wreg free
  4163                           
  4164                           ;main.c: 605: motivo_ingreso_de_numeros = 0;
  4165  001486  0E00               	movlw	0
  4166  001488  0100               	movlb	0	; () banked
  4167  00148A  6F93               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  4168  00148C  0E00               	movlw	0
  4169  00148E  6F92               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;main.c: 606: numeros_ingresados = 0;
  4173  001490  0E00               	movlw	0
  4174  001492  0100               	movlb	0	; () banked
  4175  001494  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  4176  001496  0E00               	movlw	0
  4177  001498  6F94               	movwf	_numeros_ingresados& (0+255),b
  4178                           
  4179                           ; BSR set to: 0
  4180  00149A  0012               	return		;funcret
  4181  00149C                     __end_of_editar_fecha_reloj_digital:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           prodh	equ	0xFF4
  4188                           prodl	equ	0xFF3
  4189                           postinc0	equ	0xFEE
  4190                           wreg	equ	0xFE8
  4191                           postinc1	equ	0xFE6
  4192                           postdec1	equ	0xFE5
  4193                           fsr1h	equ	0xFE2
  4194                           fsr1l	equ	0xFE1
  4195                           postinc2	equ	0xFDE
  4196                           postdec2	equ	0xFDD
  4197                           fsr2h	equ	0xFDA
  4198                           fsr2l	equ	0xFD9
  4199                           status	equ	0xFD8
  4200                           
  4201 ;; *************** function _setDiaMesAnio *****************
  4202 ;; Defined at:
  4203 ;;		line 64 in file "main.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  1    wreg      void 
  4210 ;; Registers used:
  4211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4221 ;;Total ram usage:        0 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    5
  4224 ;; This function calls:
  4225 ;;		_Write_RTC
  4226 ;;		_lcd_gotoxy
  4227 ;;		_lcd_putrs
  4228 ;;		_sprintf
  4229 ;; This function is called by:
  4230 ;;		_set_reloj_digital
  4231 ;;		_editar_fecha_reloj_digital
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text17
  4236  0031D4                     __ptext17:
  4237                           	opt stack 0
  4238  0031D4                     _setDiaMesAnio:
  4239                           	opt stack 23
  4240                           
  4241                           ;main.c: 65: if (dia > 31) {
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;incstack = 0
  4245  0031D4  0100               	movlb	0	; () banked
  4246  0031D6  BFE4               	btfsc	(_dia+1)& (0+255),7,b
  4247  0031D8  D00F               	goto	l169
  4248  0031DA  0100               	movlb	0	; () banked
  4249  0031DC  51E4               	movf	(_dia+1)& (0+255),w,b
  4250  0031DE  E105               	bnz	u4640
  4251  0031E0  0E20               	movlw	32
  4252  0031E2  0100               	movlb	0	; () banked
  4253  0031E4  5DE3               	subwf	_dia& (0+255),w,b
  4254  0031E6  A0D8               	btfss	status,0,c
  4255  0031E8  D007               	goto	l169
  4256  0031EA                     u4640:
  4257                           
  4258                           ; BSR set to: 0
  4259                           ;main.c: 66: dia = 1;
  4260  0031EA  0E00               	movlw	0
  4261  0031EC  0100               	movlb	0	; () banked
  4262  0031EE  6FE4               	movwf	(_dia+1)& (0+255),b
  4263  0031F0  0E01               	movlw	1
  4264  0031F2  6FE3               	movwf	_dia& (0+255),b
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;main.c: 67: Write_RTC();
  4268  0031F4  EC27  F00F         	call	_Write_RTC	;wreg free
  4269  0031F8                     l169:
  4270                           
  4271                           ;main.c: 68: }
  4272                           ;main.c: 70: if (mes > 12) {
  4273  0031F8  0100               	movlb	0	; () banked
  4274  0031FA  BFE8               	btfsc	(_mes+1)& (0+255),7,b
  4275  0031FC  D00F               	goto	l170
  4276  0031FE  0100               	movlb	0	; () banked
  4277  003200  51E8               	movf	(_mes+1)& (0+255),w,b
  4278  003202  E105               	bnz	u4650
  4279  003204  0E0D               	movlw	13
  4280  003206  0100               	movlb	0	; () banked
  4281  003208  5DE7               	subwf	_mes& (0+255),w,b
  4282  00320A  A0D8               	btfss	status,0,c
  4283  00320C  D007               	goto	l170
  4284  00320E                     u4650:
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;main.c: 71: mes = 1;
  4288  00320E  0E00               	movlw	0
  4289  003210  0100               	movlb	0	; () banked
  4290  003212  6FE8               	movwf	(_mes+1)& (0+255),b
  4291  003214  0E01               	movlw	1
  4292  003216  6FE7               	movwf	_mes& (0+255),b
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;main.c: 72: Write_RTC();
  4296  003218  EC27  F00F         	call	_Write_RTC	;wreg free
  4297  00321C                     l170:
  4298                           
  4299                           ;main.c: 73: }
  4300                           ;main.c: 75: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  4301  00321C  0EA5               	movlw	low _buffer2
  4302  00321E  6E22               	movwf	sprintf@sp,c
  4303  003220  0E00               	movlw	high _buffer2
  4304  003222  6E23               	movwf	sprintf@sp+1,c
  4305  003224  0E90               	movlw	low STR_7
  4306  003226  6E24               	movwf	sprintf@f,c
  4307  003228  0E0F               	movlw	high STR_7
  4308  00322A  6E25               	movwf	sprintf@f+1,c
  4309  00322C  C0E3  F026         	movff	_dia,?_sprintf+4
  4310  003230  C0E4  F027         	movff	_dia+1,?_sprintf+5
  4311  003234  C0E7  F028         	movff	_mes,?_sprintf+6
  4312  003238  C0E8  F029         	movff	_mes+1,?_sprintf+7
  4313  00323C  C0E9  F02A         	movff	_anio,?_sprintf+8
  4314  003240  C0EA  F02B         	movff	_anio+1,?_sprintf+9
  4315  003244  EC4E  F00A         	call	_sprintf	;wreg free
  4316                           
  4317                           ;main.c: 76: lcd_gotoxy(9, 1);
  4318  003248  0E01               	movlw	1
  4319  00324A  6E05               	movwf	lcd_gotoxy@y,c
  4320  00324C  0E09               	movlw	9
  4321  00324E  EC42  F01D         	call	_lcd_gotoxy
  4322                           
  4323                           ;main.c: 77: lcd_putrs(buffer2);
  4324  003252  0EA5               	movlw	low _buffer2
  4325  003254  6E09               	movwf	lcd_putrs@ptr,c
  4326  003256  0E00               	movlw	high _buffer2
  4327  003258  6E0A               	movwf	lcd_putrs@ptr+1,c
  4328  00325A  ECD3  F01B         	call	_lcd_putrs	;wreg free
  4329  00325E  0012               	return		;funcret
  4330  003260                     __end_of_setDiaMesAnio:
  4331                           	opt stack 0
  4332                           tblptru	equ	0xFF8
  4333                           tblptrh	equ	0xFF7
  4334                           tblptrl	equ	0xFF6
  4335                           tablat	equ	0xFF5
  4336                           prodh	equ	0xFF4
  4337                           prodl	equ	0xFF3
  4338                           postinc0	equ	0xFEE
  4339                           wreg	equ	0xFE8
  4340                           postinc1	equ	0xFE6
  4341                           postdec1	equ	0xFE5
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function _Write_RTC *****************
  4351 ;; Defined at:
  4352 ;;		line 74 in file "../../headers\unmc_rtcc_01.h"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    2
  4373 ;; This function calls:
  4374 ;;		_RtccWrOn
  4375 ;;		_RtccWriteDate
  4376 ;;		_RtccWriteTime
  4377 ;;		___awdiv
  4378 ;; This function is called by:
  4379 ;;		_setDiaMesAnio
  4380 ;;		_setHoraMinutoSegundo
  4381 ;;		_editar_fecha_reloj_digital
  4382 ;;		_editar_hora_reloj_digital
  4383 ;;		_setup
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text18
  4388  001E4E                     __ptext18:
  4389                           	opt stack 0
  4390  001E4E                     _Write_RTC:
  4391                           	opt stack 25
  4392                           
  4393                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  4394                           
  4395                           ;incstack = 0
  4396  001E4E  EC78  F01D         	call	_RtccWrOn	;wreg free
  4397                           
  4398                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  4399  001E52  80A3               	bsf	4003,0,c	;volatile
  4400                           
  4401                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  4402  001E54  C096  F001         	movff	_segundo,___awdiv@dividend
  4403  001E58  C097  F002         	movff	_segundo+1,___awdiv@dividend+1
  4404  001E5C  0E00               	movlw	0
  4405  001E5E  6E04               	movwf	___awdiv@divisor+1,c
  4406  001E60  0E0A               	movlw	10
  4407  001E62  6E03               	movwf	___awdiv@divisor,c
  4408  001E64  EC76  F019         	call	___awdiv	;wreg free
  4409  001E68  5001               	movf	?___awdiv,w,c
  4410  001E6A  0100               	movlb	0	; () banked
  4411  001E6C  6FF6               	movwf	_segundo_d& (0+255),b
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  4415  001E6E  0100               	movlb	0	; () banked
  4416  001E70  51F6               	movf	_segundo_d& (0+255),w,b
  4417  001E72  0D0A               	mullw	10
  4418  001E74  50F3               	movf	prodl,w,c
  4419  001E76  0800               	sublw	0
  4420  001E78  0100               	movlb	0	; () banked
  4421  001E7A  2596               	addwf	_segundo& (0+255),w,b
  4422  001E7C  0100               	movlb	0	; () banked
  4423  001E7E  6FF7               	movwf	_segundo_u& (0+255),b
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  4427  001E80  0100               	movlb	0	; () banked
  4428  001E82  51F6               	movf	_segundo_d& (0+255),w,b
  4429  001E84  0D10               	mullw	16
  4430  001E86  50F3               	movf	prodl,w,c
  4431  001E88  0100               	movlb	0	; () banked
  4432  001E8A  25F7               	addwf	_segundo_u& (0+255),w,b
  4433  001E8C  0100               	movlb	0	; () banked
  4434  001E8E  6FBE               	movwf	(_RtccTime+1)& (0+255),b
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  4438  001E90  C0DF  F001         	movff	_minuto,___awdiv@dividend
  4439  001E94  C0E0  F002         	movff	_minuto+1,___awdiv@dividend+1
  4440  001E98  0E00               	movlw	0
  4441  001E9A  6E04               	movwf	___awdiv@divisor+1,c
  4442  001E9C  0E0A               	movlw	10
  4443  001E9E  6E03               	movwf	___awdiv@divisor,c
  4444  001EA0  EC76  F019         	call	___awdiv	;wreg free
  4445  001EA4  5001               	movf	?___awdiv,w,c
  4446  001EA6  0100               	movlb	0	; () banked
  4447  001EA8  6FF4               	movwf	_minuto_d& (0+255),b
  4448                           
  4449                           ; BSR set to: 0
  4450                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  4451  001EAA  0100               	movlb	0	; () banked
  4452  001EAC  51F4               	movf	_minuto_d& (0+255),w,b
  4453  001EAE  0D0A               	mullw	10
  4454  001EB0  50F3               	movf	prodl,w,c
  4455  001EB2  0800               	sublw	0
  4456  001EB4  0100               	movlb	0	; () banked
  4457  001EB6  25DF               	addwf	_minuto& (0+255),w,b
  4458  001EB8  0100               	movlb	0	; () banked
  4459  001EBA  6FF5               	movwf	_minuto_u& (0+255),b
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  4463  001EBC  0100               	movlb	0	; () banked
  4464  001EBE  51F4               	movf	_minuto_d& (0+255),w,b
  4465  001EC0  0D10               	mullw	16
  4466  001EC2  50F3               	movf	prodl,w,c
  4467  001EC4  0100               	movlb	0	; () banked
  4468  001EC6  25F5               	addwf	_minuto_u& (0+255),w,b
  4469  001EC8  0100               	movlb	0	; () banked
  4470  001ECA  6FBF               	movwf	(_RtccTime+2)& (0+255),b
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  4474  001ECC  C0E1  F001         	movff	_hora,___awdiv@dividend
  4475  001ED0  C0E2  F002         	movff	_hora+1,___awdiv@dividend+1
  4476  001ED4  0E00               	movlw	0
  4477  001ED6  6E04               	movwf	___awdiv@divisor+1,c
  4478  001ED8  0E0A               	movlw	10
  4479  001EDA  6E03               	movwf	___awdiv@divisor,c
  4480  001EDC  EC76  F019         	call	___awdiv	;wreg free
  4481  001EE0  5001               	movf	?___awdiv,w,c
  4482  001EE2  0100               	movlb	0	; () banked
  4483  001EE4  6FF2               	movwf	_hora_d& (0+255),b
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  4487  001EE6  0100               	movlb	0	; () banked
  4488  001EE8  51F2               	movf	_hora_d& (0+255),w,b
  4489  001EEA  0D0A               	mullw	10
  4490  001EEC  50F3               	movf	prodl,w,c
  4491  001EEE  0800               	sublw	0
  4492  001EF0  0100               	movlb	0	; () banked
  4493  001EF2  25E1               	addwf	_hora& (0+255),w,b
  4494  001EF4  0100               	movlb	0	; () banked
  4495  001EF6  6FF3               	movwf	_hora_u& (0+255),b
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  4499  001EF8  0100               	movlb	0	; () banked
  4500  001EFA  51F2               	movf	_hora_d& (0+255),w,b
  4501  001EFC  0D10               	mullw	16
  4502  001EFE  50F3               	movf	prodl,w,c
  4503  001F00  0100               	movlb	0	; () banked
  4504  001F02  25F3               	addwf	_hora_u& (0+255),w,b
  4505  001F04  0100               	movlb	0	; () banked
  4506  001F06  6FC0               	movwf	(_RtccTime+3)& (0+255),b
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  4510  001F08  C0E9  F001         	movff	_anio,___awdiv@dividend
  4511  001F0C  C0EA  F002         	movff	_anio+1,___awdiv@dividend+1
  4512  001F10  0E00               	movlw	0
  4513  001F12  6E04               	movwf	___awdiv@divisor+1,c
  4514  001F14  0E0A               	movlw	10
  4515  001F16  6E03               	movwf	___awdiv@divisor,c
  4516  001F18  EC76  F019         	call	___awdiv	;wreg free
  4517  001F1C  5001               	movf	?___awdiv,w,c
  4518  001F1E  0100               	movlb	0	; () banked
  4519  001F20  6FEB               	movwf	_anio_d& (0+255),b
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  4523  001F22  0100               	movlb	0	; () banked
  4524  001F24  51EB               	movf	_anio_d& (0+255),w,b
  4525  001F26  0D0A               	mullw	10
  4526  001F28  50F3               	movf	prodl,w,c
  4527  001F2A  0800               	sublw	0
  4528  001F2C  0100               	movlb	0	; () banked
  4529  001F2E  25E9               	addwf	_anio& (0+255),w,b
  4530  001F30  0100               	movlb	0	; () banked
  4531  001F32  6FEC               	movwf	_anio_u& (0+255),b
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  4535  001F34  0100               	movlb	0	; () banked
  4536  001F36  51EB               	movf	_anio_d& (0+255),w,b
  4537  001F38  0D10               	mullw	16
  4538  001F3A  50F3               	movf	prodl,w,c
  4539  001F3C  0100               	movlb	0	; () banked
  4540  001F3E  25EC               	addwf	_anio_u& (0+255),w,b
  4541  001F40  0100               	movlb	0	; () banked
  4542  001F42  6FBC               	movwf	(_RtccDate+3)& (0+255),b
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  4546  001F44  C0E7  F001         	movff	_mes,___awdiv@dividend
  4547  001F48  C0E8  F002         	movff	_mes+1,___awdiv@dividend+1
  4548  001F4C  0E00               	movlw	0
  4549  001F4E  6E04               	movwf	___awdiv@divisor+1,c
  4550  001F50  0E0A               	movlw	10
  4551  001F52  6E03               	movwf	___awdiv@divisor,c
  4552  001F54  EC76  F019         	call	___awdiv	;wreg free
  4553  001F58  5001               	movf	?___awdiv,w,c
  4554  001F5A  0100               	movlb	0	; () banked
  4555  001F5C  6FEE               	movwf	_mes_d& (0+255),b
  4556                           
  4557                           ; BSR set to: 0
  4558                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  4559  001F5E  0100               	movlb	0	; () banked
  4560  001F60  51EE               	movf	_mes_d& (0+255),w,b
  4561  001F62  0D0A               	mullw	10
  4562  001F64  50F3               	movf	prodl,w,c
  4563  001F66  0800               	sublw	0
  4564  001F68  0100               	movlb	0	; () banked
  4565  001F6A  25E7               	addwf	_mes& (0+255),w,b
  4566  001F6C  0100               	movlb	0	; () banked
  4567  001F6E  6FEF               	movwf	_mes_u& (0+255),b
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  4571  001F70  0100               	movlb	0	; () banked
  4572  001F72  51EE               	movf	_mes_d& (0+255),w,b
  4573  001F74  0D10               	mullw	16
  4574  001F76  50F3               	movf	prodl,w,c
  4575  001F78  0100               	movlb	0	; () banked
  4576  001F7A  25EF               	addwf	_mes_u& (0+255),w,b
  4577  001F7C  0100               	movlb	0	; () banked
  4578  001F7E  6FBB               	movwf	(_RtccDate+2)& (0+255),b
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  4582  001F80  C0E3  F001         	movff	_dia,___awdiv@dividend
  4583  001F84  C0E4  F002         	movff	_dia+1,___awdiv@dividend+1
  4584  001F88  0E00               	movlw	0
  4585  001F8A  6E04               	movwf	___awdiv@divisor+1,c
  4586  001F8C  0E0A               	movlw	10
  4587  001F8E  6E03               	movwf	___awdiv@divisor,c
  4588  001F90  EC76  F019         	call	___awdiv	;wreg free
  4589  001F94  5001               	movf	?___awdiv,w,c
  4590  001F96  0100               	movlb	0	; () banked
  4591  001F98  6FF0               	movwf	_fecha_d& (0+255),b
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  4595  001F9A  0100               	movlb	0	; () banked
  4596  001F9C  51F0               	movf	_fecha_d& (0+255),w,b
  4597  001F9E  0D0A               	mullw	10
  4598  001FA0  50F3               	movf	prodl,w,c
  4599  001FA2  0800               	sublw	0
  4600  001FA4  0100               	movlb	0	; () banked
  4601  001FA6  25E3               	addwf	_dia& (0+255),w,b
  4602  001FA8  0100               	movlb	0	; () banked
  4603  001FAA  6FF1               	movwf	_fecha_u& (0+255),b
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  4607  001FAC  0100               	movlb	0	; () banked
  4608  001FAE  51F0               	movf	_fecha_d& (0+255),w,b
  4609  001FB0  0D10               	mullw	16
  4610  001FB2  50F3               	movf	prodl,w,c
  4611  001FB4  0100               	movlb	0	; () banked
  4612  001FB6  25F1               	addwf	_fecha_u& (0+255),w,b
  4613  001FB8  0100               	movlb	0	; () banked
  4614  001FBA  6FBA               	movwf	(_RtccDate+1)& (0+255),b
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  4618  001FBC  C0E5  F0ED         	movff	_diasem,_dia_semana
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  4622  001FC0  C0E5  F0B9         	movff	_diasem,_RtccDate
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  4626  001FC4  0EBD               	movlw	low _RtccTime
  4627  001FC6  6E01               	movwf	RtccWriteTime@pTm,c
  4628  001FC8  0E00               	movlw	high _RtccTime
  4629  001FCA  6E02               	movwf	RtccWriteTime@pTm+1,c
  4630  001FCC  0E01               	movlw	1
  4631  001FCE  6E03               	movwf	RtccWriteTime@di,c
  4632  001FD0  EC02  F013         	call	_RtccWriteTime	;wreg free
  4633                           
  4634                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  4635  001FD4  0EB9               	movlw	low _RtccDate
  4636  001FD6  6E01               	movwf	RtccWriteDate@pDt,c
  4637  001FD8  0E00               	movlw	high _RtccDate
  4638  001FDA  6E02               	movwf	RtccWriteDate@pDt+1,c
  4639  001FDC  0E01               	movlw	1
  4640  001FDE  6E03               	movwf	RtccWriteDate@di,c
  4641  001FE0  EC53  F011         	call	_RtccWriteDate	;wreg free
  4642                           
  4643                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  4644  001FE4  010F               	movlb	15	; () banked
  4645  001FE6  8F3F               	bsf	63,7,b	;volatile
  4646                           
  4647                           ; BSR set to: 15
  4648  001FE8  0012               	return		;funcret
  4649  001FEA                     __end_of_Write_RTC:
  4650                           	opt stack 0
  4651                           tblptru	equ	0xFF8
  4652                           tblptrh	equ	0xFF7
  4653                           tblptrl	equ	0xFF6
  4654                           tablat	equ	0xFF5
  4655                           prodh	equ	0xFF4
  4656                           prodl	equ	0xFF3
  4657                           postinc0	equ	0xFEE
  4658                           wreg	equ	0xFE8
  4659                           postinc1	equ	0xFE6
  4660                           postdec1	equ	0xFE5
  4661                           fsr1h	equ	0xFE2
  4662                           fsr1l	equ	0xFE1
  4663                           postinc2	equ	0xFDE
  4664                           postdec2	equ	0xFDD
  4665                           fsr2h	equ	0xFDA
  4666                           fsr2l	equ	0xFD9
  4667                           status	equ	0xFD8
  4668                           
  4669 ;; *************** function ___awdiv *****************
  4670 ;; Defined at:
  4671 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  dividend        2    0[COMRAM] int 
  4674 ;;  divisor         2    2[COMRAM] int 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  quotient        2    6[COMRAM] int 
  4677 ;;  sign            1    5[COMRAM] unsigned char 
  4678 ;;  counter         1    4[COMRAM] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  2    0[COMRAM] int 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;Total ram usage:        8 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_Write_RTC
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text19
  4702  0032EC                     __ptext19:
  4703                           	opt stack 0
  4704  0032EC                     ___awdiv:
  4705                           	opt stack 26
  4706                           
  4707                           ; BSR set to: 15
  4708                           ;incstack = 0
  4709  0032EC  0E00               	movlw	0
  4710  0032EE  6E06               	movwf	___awdiv@sign,c
  4711  0032F0  AE04               	btfss	___awdiv@divisor+1,7,c
  4712  0032F2  D006               	goto	l800
  4713  0032F4  6C03               	negf	___awdiv@divisor,c
  4714  0032F6  1E04               	comf	___awdiv@divisor+1,f,c
  4715  0032F8  B0D8               	btfsc	status,0,c
  4716  0032FA  2A04               	incf	___awdiv@divisor+1,f,c
  4717  0032FC  0E01               	movlw	1
  4718  0032FE  6E06               	movwf	___awdiv@sign,c
  4719  003300                     l800:
  4720  003300  AE02               	btfss	___awdiv@dividend+1,7,c
  4721  003302  D006               	goto	l801
  4722  003304  6C01               	negf	___awdiv@dividend,c
  4723  003306  1E02               	comf	___awdiv@dividend+1,f,c
  4724  003308  B0D8               	btfsc	status,0,c
  4725  00330A  2A02               	incf	___awdiv@dividend+1,f,c
  4726  00330C  0E01               	movlw	1
  4727  00330E  1A06               	xorwf	___awdiv@sign,f,c
  4728  003310                     l801:
  4729  003310  0E00               	movlw	0
  4730  003312  6E08               	movwf	___awdiv@quotient+1,c
  4731  003314  0E00               	movlw	0
  4732  003316  6E07               	movwf	___awdiv@quotient,c
  4733  003318  5003               	movf	___awdiv@divisor,w,c
  4734  00331A  1004               	iorwf	___awdiv@divisor+1,w,c
  4735  00331C  B4D8               	btfsc	status,2,c
  4736  00331E  D01C               	goto	l808
  4737  003320  0E01               	movlw	1
  4738  003322  6E05               	movwf	___awdiv@counter,c
  4739  003324  D004               	goto	l803
  4740  003326  90D8               	bcf	status,0,c
  4741  003328  3603               	rlcf	___awdiv@divisor,f,c
  4742  00332A  3604               	rlcf	___awdiv@divisor+1,f,c
  4743  00332C  2A05               	incf	___awdiv@counter,f,c
  4744  00332E                     l803:
  4745  00332E  AE04               	btfss	___awdiv@divisor+1,7,c
  4746  003330  D7FA               	goto	l804
  4747  003332                     u4430:
  4748  003332  90D8               	bcf	status,0,c
  4749  003334  3607               	rlcf	___awdiv@quotient,f,c
  4750  003336  3608               	rlcf	___awdiv@quotient+1,f,c
  4751  003338  5003               	movf	___awdiv@divisor,w,c
  4752  00333A  5C01               	subwf	___awdiv@dividend,w,c
  4753  00333C  5004               	movf	___awdiv@divisor+1,w,c
  4754  00333E  5802               	subwfb	___awdiv@dividend+1,w,c
  4755  003340  A0D8               	btfss	status,0,c
  4756  003342  D005               	goto	l807
  4757  003344  5003               	movf	___awdiv@divisor,w,c
  4758  003346  5E01               	subwf	___awdiv@dividend,f,c
  4759  003348  5004               	movf	___awdiv@divisor+1,w,c
  4760  00334A  5A02               	subwfb	___awdiv@dividend+1,f,c
  4761  00334C  8007               	bsf	___awdiv@quotient,0,c
  4762  00334E                     l807:
  4763  00334E  90D8               	bcf	status,0,c
  4764  003350  3204               	rrcf	___awdiv@divisor+1,f,c
  4765  003352  3203               	rrcf	___awdiv@divisor,f,c
  4766  003354  2E05               	decfsz	___awdiv@counter,f,c
  4767  003356  D7ED               	goto	u4430
  4768  003358                     l808:
  4769  003358  5006               	movf	___awdiv@sign,w,c
  4770  00335A  B4D8               	btfsc	status,2,c
  4771  00335C  D004               	goto	l809
  4772  00335E  6C07               	negf	___awdiv@quotient,c
  4773  003360  1E08               	comf	___awdiv@quotient+1,f,c
  4774  003362  B0D8               	btfsc	status,0,c
  4775  003364  2A08               	incf	___awdiv@quotient+1,f,c
  4776  003366                     l809:
  4777  003366  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4778  00336A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4779  00336E  0012               	return	
  4780  003370                     __end_of___awdiv:
  4781                           	opt stack 0
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           postinc0	equ	0xFEE
  4789                           wreg	equ	0xFE8
  4790                           postinc1	equ	0xFE6
  4791                           postdec1	equ	0xFE5
  4792                           fsr1h	equ	0xFE2
  4793                           fsr1l	equ	0xFE1
  4794                           postinc2	equ	0xFDE
  4795                           postdec2	equ	0xFDD
  4796                           fsr2h	equ	0xFDA
  4797                           fsr2l	equ	0xFD9
  4798                           status	equ	0xFD8
  4799                           
  4800 ;; *************** function _RtccWriteTime *****************
  4801 ;; Defined at:
  4802 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  pTm             2    0[COMRAM] PTR const struct .
  4805 ;;		 -> RtccTime(4), 
  4806 ;;  di              1    2[COMRAM] enum E7121
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  tempHourWDay    2    9[COMRAM] struct .
  4809 ;;  tempMinSec      2    7[COMRAM] struct .
  4810 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4811 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4812 ;;  wasOn           1    4[COMRAM] enum E7121
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      enum E6550
  4815 ;; Registers used:
  4816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4822 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;Total ram usage:       11 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    1
  4829 ;; This function calls:
  4830 ;;		_RtccWrOn
  4831 ;; This function is called by:
  4832 ;;		_Write_RTC
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text20
  4837  002604                     __ptext20:
  4838                           	opt stack 0
  4839  002604                     _RtccWriteTime:
  4840                           	opt stack 25
  4841                           
  4842                           ;incstack = 0
  4843  002604  0E00               	movlw	0
  4844  002606  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4845  002608  EE20 F002          	lfsr	2,2
  4846  00260C  5001               	movf	RtccWriteTime@pTm,w,c
  4847  00260E  26D9               	addwf	fsr2l,f,c
  4848  002610  5002               	movf	RtccWriteTime@pTm+1,w,c
  4849  002612  22DA               	addwfc	fsr2h,f,c
  4850  002614  0E5A               	movlw	90
  4851  002616  60DF               	cpfslt	indf2,c
  4852  002618  0012               	return	
  4853  00261A  EE20 F001          	lfsr	2,1
  4854  00261E  5001               	movf	RtccWriteTime@pTm,w,c
  4855  002620  26D9               	addwf	fsr2l,f,c
  4856  002622  5002               	movf	RtccWriteTime@pTm+1,w,c
  4857  002624  22DA               	addwfc	fsr2h,f,c
  4858  002626  0E5A               	movlw	90
  4859  002628  60DF               	cpfslt	indf2,c
  4860  00262A  0012               	return	
  4861  00262C  EE20 F003          	lfsr	2,3
  4862  002630  5001               	movf	RtccWriteTime@pTm,w,c
  4863  002632  26D9               	addwf	fsr2l,f,c
  4864  002634  5002               	movf	RtccWriteTime@pTm+1,w,c
  4865  002636  22DA               	addwfc	fsr2h,f,c
  4866  002638  0E24               	movlw	36
  4867  00263A  64DF               	cpfsgt	indf2,c
  4868  00263C  D001               	goto	l620
  4869  00263E  0012               	return	
  4870  002640                     l620:
  4871  002640  EE20 F002          	lfsr	2,2
  4872  002644  5001               	movf	RtccWriteTime@pTm,w,c
  4873  002646  26D9               	addwf	fsr2l,f,c
  4874  002648  5002               	movf	RtccWriteTime@pTm+1,w,c
  4875  00264A  22DA               	addwfc	fsr2h,f,c
  4876  00264C  50DF               	movf	indf2,w,c
  4877  00264E  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  4878  002650  EE20 F001          	lfsr	2,1
  4879  002654  5001               	movf	RtccWriteTime@pTm,w,c
  4880  002656  26D9               	addwf	fsr2l,f,c
  4881  002658  5002               	movf	RtccWriteTime@pTm+1,w,c
  4882  00265A  22DA               	addwfc	fsr2h,f,c
  4883  00265C  50DF               	movf	indf2,w,c
  4884  00265E  6E08               	movwf	RtccWriteTime@tempMinSec,c
  4885  002660  5003               	movf	RtccWriteTime@di,w,c
  4886  002662  A4D8               	btfss	status,2,c
  4887  002664  9CF2               	bcf	intcon,6,c	;volatile
  4888  002666  010F               	movlb	15	; () banked
  4889  002668  0E00               	movlw	0
  4890  00266A  BB3F               	btfsc	63,5,b	;volatile
  4891  00266C  0E01               	movlw	1
  4892  00266E  6E07               	movwf	RtccWriteTime@wasWrEn,c
  4893  002670  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4894  002672  B4D8               	btfsc	status,2,c
  4895                           
  4896                           ; BSR set to: 15
  4897  002674  EC78  F01D         	call	_RtccWrOn	;wreg free
  4898  002678  010F               	movlb	15	; () banked
  4899  00267A  0E00               	movlw	0
  4900  00267C  BF3F               	btfsc	63,7,b	;volatile
  4901  00267E  0E01               	movlw	1
  4902  002680  6E05               	movwf	RtccWriteTime@wasOn,c
  4903  002682  5005               	movf	RtccWriteTime@wasOn,w,c
  4904  002684  B4D8               	btfsc	status,2,c
  4905  002686  D006               	goto	l626
  4906                           
  4907                           ; BSR set to: 15
  4908  002688  0E00               	movlw	0
  4909  00268A  BE91               	btfsc	3985,7,c	;volatile
  4910  00268C  0E01               	movlw	1
  4911  00268E  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4912                           
  4913                           ; BSR set to: 15
  4914  002690  010F               	movlb	15	; () banked
  4915  002692  9F3F               	bcf	63,7,b	;volatile
  4916  002694                     l626:
  4917                           
  4918                           ; BSR set to: 15
  4919                           
  4920                           ; BSR set to: 15
  4921  002694  0EFC               	movlw	252
  4922  002696  010F               	movlb	15	; () banked
  4923  002698  173F               	andwf	63,f,b	;volatile
  4924  00269A  010F               	movlb	15	; () banked
  4925  00269C  813F               	bsf	63,0,b	;volatile
  4926                           
  4927                           ; BSR set to: 15
  4928  00269E  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  4929                           
  4930                           ; BSR set to: 15
  4931  0026A2  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  4932                           
  4933                           ; BSR set to: 15
  4934  0026A6  EE20 F003          	lfsr	2,3
  4935  0026AA  5001               	movf	RtccWriteTime@pTm,w,c
  4936  0026AC  26D9               	addwf	fsr2l,f,c
  4937  0026AE  5002               	movf	RtccWriteTime@pTm+1,w,c
  4938  0026B0  22DA               	addwfc	fsr2h,f,c
  4939  0026B2  50DF               	movf	indf2,w,c
  4940  0026B4  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  4941                           
  4942                           ; BSR set to: 15
  4943  0026B6  0EFC               	movlw	252
  4944  0026B8  010F               	movlb	15	; () banked
  4945  0026BA  173F               	andwf	63,f,b	;volatile
  4946                           
  4947                           ; BSR set to: 15
  4948  0026BC  010F               	movlb	15	; () banked
  4949  0026BE  813F               	bsf	63,0,b	;volatile
  4950                           
  4951                           ; BSR set to: 15
  4952  0026C0  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  4953                           
  4954                           ; BSR set to: 15
  4955  0026C4  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  4956                           
  4957                           ; BSR set to: 15
  4958  0026C8  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  4959                           
  4960                           ; BSR set to: 15
  4961  0026CC  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  4962                           
  4963                           ; BSR set to: 15
  4964  0026D0  5005               	movf	RtccWriteTime@wasOn,w,c
  4965  0026D2  B4D8               	btfsc	status,2,c
  4966  0026D4  D00B               	goto	l627
  4967                           
  4968                           ; BSR set to: 15
  4969  0026D6  010F               	movlb	15	; () banked
  4970  0026D8  8F3F               	bsf	63,7,b	;volatile
  4971                           
  4972                           ; BSR set to: 15
  4973  0026DA  5006               	movf	RtccWriteTime@wasAlrm,w,c
  4974  0026DC  A4D8               	btfss	status,2,c
  4975                           
  4976                           ; BSR set to: 15
  4977  0026DE  8E91               	bsf	3985,7,c	;volatile
  4978                           
  4979                           ; BSR set to: 15
  4980                           
  4981                           ; BSR set to: 15
  4982  0026E0  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4983  0026E2  B4D8               	btfsc	status,2,c
  4984  0026E4  D008               	goto	l631
  4985                           
  4986                           ; BSR set to: 15
  4987  0026E6  EC78  F01D         	call	_RtccWrOn	;wreg free
  4988  0026EA  D005               	goto	l631
  4989  0026EC                     l627:
  4990  0026EC  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4991  0026EE  A4D8               	btfss	status,2,c
  4992  0026F0  D002               	goto	l631
  4993  0026F2  010F               	movlb	15	; () banked
  4994  0026F4  9B3F               	bcf	63,5,b	;volatile
  4995  0026F6                     l631:
  4996                           
  4997                           ; BSR set to: 15
  4998                           
  4999                           ; BSR set to: 15
  5000  0026F6  5003               	movf	RtccWriteTime@di,w,c
  5001  0026F8  B4D8               	btfsc	status,2,c
  5002  0026FA  0012               	return	
  5003  0026FC  8CF2               	bsf	intcon,6,c	;volatile
  5004  0026FE  0012               	return	
  5005  002700                     __end_of_RtccWriteTime:
  5006                           	opt stack 0
  5007                           tblptru	equ	0xFF8
  5008                           tblptrh	equ	0xFF7
  5009                           tblptrl	equ	0xFF6
  5010                           tablat	equ	0xFF5
  5011                           prodh	equ	0xFF4
  5012                           prodl	equ	0xFF3
  5013                           intcon	equ	0xFF2
  5014                           postinc0	equ	0xFEE
  5015                           wreg	equ	0xFE8
  5016                           postinc1	equ	0xFE6
  5017                           postdec1	equ	0xFE5
  5018                           fsr1h	equ	0xFE2
  5019                           fsr1l	equ	0xFE1
  5020                           indf2	equ	0xFDF
  5021                           postinc2	equ	0xFDE
  5022                           postdec2	equ	0xFDD
  5023                           fsr2h	equ	0xFDA
  5024                           fsr2l	equ	0xFD9
  5025                           status	equ	0xFD8
  5026                           
  5027 ;; *************** function _RtccWriteDate *****************
  5028 ;; Defined at:
  5029 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  pDt             2    0[COMRAM] PTR const struct .
  5032 ;;		 -> RtccDate(4), 
  5033 ;;  di              1    2[COMRAM] enum E7121
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  tempHourWDay    2   11[COMRAM] struct .
  5036 ;;  tempDayMonth    2    9[COMRAM] struct .
  5037 ;;  tempYear        2    6[COMRAM] struct .
  5038 ;;  wasWrEn         1    8[COMRAM] enum E7121
  5039 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5040 ;;  wasOn           1    4[COMRAM] enum E7121
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      enum E6550
  5043 ;; Registers used:
  5044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5050 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5051 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;Total ram usage:       13 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    1
  5057 ;; This function calls:
  5058 ;;		_RtccWrOn
  5059 ;; This function is called by:
  5060 ;;		_Write_RTC
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text21
  5065  0022A6                     __ptext21:
  5066                           	opt stack 0
  5067  0022A6                     _RtccWriteDate:
  5068                           	opt stack 25
  5069                           
  5070                           ;incstack = 0
  5071  0022A6  0E00               	movlw	0
  5072  0022A8  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5073  0022AA  EE20 F002          	lfsr	2,2
  5074  0022AE  5001               	movf	RtccWriteDate@pDt,w,c
  5075  0022B0  26D9               	addwf	fsr2l,f,c
  5076  0022B2  5002               	movf	RtccWriteDate@pDt+1,w,c
  5077  0022B4  22DA               	addwfc	fsr2h,f,c
  5078  0022B6  0E13               	movlw	19
  5079  0022B8  60DF               	cpfslt	indf2,c
  5080  0022BA  0012               	return	
  5081  0022BC  EE20 F002          	lfsr	2,2
  5082  0022C0  5001               	movf	RtccWriteDate@pDt,w,c
  5083  0022C2  26D9               	addwf	fsr2l,f,c
  5084  0022C4  5002               	movf	RtccWriteDate@pDt+1,w,c
  5085  0022C6  22DA               	addwfc	fsr2h,f,c
  5086  0022C8  50DF               	movf	indf2,w,c
  5087  0022CA  B4D8               	btfsc	status,2,c
  5088  0022CC  0012               	return	
  5089  0022CE  EE20 F001          	lfsr	2,1
  5090  0022D2  5001               	movf	RtccWriteDate@pDt,w,c
  5091  0022D4  26D9               	addwf	fsr2l,f,c
  5092  0022D6  5002               	movf	RtccWriteDate@pDt+1,w,c
  5093  0022D8  22DA               	addwfc	fsr2h,f,c
  5094  0022DA  0E32               	movlw	50
  5095  0022DC  60DF               	cpfslt	indf2,c
  5096  0022DE  0012               	return	
  5097  0022E0  EE20 F001          	lfsr	2,1
  5098  0022E4  5001               	movf	RtccWriteDate@pDt,w,c
  5099  0022E6  26D9               	addwf	fsr2l,f,c
  5100  0022E8  5002               	movf	RtccWriteDate@pDt+1,w,c
  5101  0022EA  22DA               	addwfc	fsr2h,f,c
  5102  0022EC  50DF               	movf	indf2,w,c
  5103  0022EE  B4D8               	btfsc	status,2,c
  5104  0022F0  0012               	return	
  5105  0022F2  EE20 F003          	lfsr	2,3
  5106  0022F6  5001               	movf	RtccWriteDate@pDt,w,c
  5107  0022F8  26D9               	addwf	fsr2l,f,c
  5108  0022FA  5002               	movf	RtccWriteDate@pDt+1,w,c
  5109  0022FC  22DA               	addwfc	fsr2h,f,c
  5110  0022FE  0E99               	movlw	153
  5111  002300  64DF               	cpfsgt	indf2,c
  5112  002302  D001               	goto	l591
  5113  002304  0012               	return	
  5114  002306                     l591:
  5115  002306  EE20 F003          	lfsr	2,3
  5116  00230A  5001               	movf	RtccWriteDate@pDt,w,c
  5117  00230C  26D9               	addwf	fsr2l,f,c
  5118  00230E  5002               	movf	RtccWriteDate@pDt+1,w,c
  5119  002310  22DA               	addwfc	fsr2h,f,c
  5120  002312  50DF               	movf	indf2,w,c
  5121  002314  6E07               	movwf	RtccWriteDate@tempYear,c
  5122  002316  EE20 F001          	lfsr	2,1
  5123  00231A  5001               	movf	RtccWriteDate@pDt,w,c
  5124  00231C  26D9               	addwf	fsr2l,f,c
  5125  00231E  5002               	movf	RtccWriteDate@pDt+1,w,c
  5126  002320  22DA               	addwfc	fsr2h,f,c
  5127  002322  50DF               	movf	indf2,w,c
  5128  002324  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  5129  002326  EE20 F002          	lfsr	2,2
  5130  00232A  5001               	movf	RtccWriteDate@pDt,w,c
  5131  00232C  26D9               	addwf	fsr2l,f,c
  5132  00232E  5002               	movf	RtccWriteDate@pDt+1,w,c
  5133  002330  22DA               	addwfc	fsr2h,f,c
  5134  002332  50DF               	movf	indf2,w,c
  5135  002334  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  5136  002336  5003               	movf	RtccWriteDate@di,w,c
  5137  002338  A4D8               	btfss	status,2,c
  5138  00233A  9CF2               	bcf	intcon,6,c	;volatile
  5139  00233C  010F               	movlb	15	; () banked
  5140  00233E  0E00               	movlw	0
  5141  002340  BB3F               	btfsc	63,5,b	;volatile
  5142  002342  0E01               	movlw	1
  5143  002344  6E09               	movwf	RtccWriteDate@wasWrEn,c
  5144  002346  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5145  002348  B4D8               	btfsc	status,2,c
  5146                           
  5147                           ; BSR set to: 15
  5148  00234A  EC78  F01D         	call	_RtccWrOn	;wreg free
  5149  00234E  010F               	movlb	15	; () banked
  5150  002350  0E00               	movlw	0
  5151  002352  BF3F               	btfsc	63,7,b	;volatile
  5152  002354  0E01               	movlw	1
  5153  002356  6E05               	movwf	RtccWriteDate@wasOn,c
  5154  002358  5005               	movf	RtccWriteDate@wasOn,w,c
  5155  00235A  B4D8               	btfsc	status,2,c
  5156  00235C  D006               	goto	l597
  5157                           
  5158                           ; BSR set to: 15
  5159  00235E  0E00               	movlw	0
  5160  002360  BE91               	btfsc	3985,7,c	;volatile
  5161  002362  0E01               	movlw	1
  5162  002364  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5163                           
  5164                           ; BSR set to: 15
  5165  002366  010F               	movlb	15	; () banked
  5166  002368  9F3F               	bcf	63,7,b	;volatile
  5167  00236A                     l597:
  5168                           
  5169                           ; BSR set to: 15
  5170                           
  5171                           ; BSR set to: 15
  5172  00236A  0EFC               	movlw	252
  5173  00236C  010F               	movlb	15	; () banked
  5174  00236E  173F               	andwf	63,f,b	;volatile
  5175  002370  010F               	movlb	15	; () banked
  5176  002372  813F               	bsf	63,0,b	;volatile
  5177                           
  5178                           ; BSR set to: 15
  5179  002374  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  5180                           
  5181                           ; BSR set to: 15
  5182  002378  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  5183                           
  5184                           ; BSR set to: 15
  5185  00237C  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  5186  002380  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  5187  002384  50DF               	movf	indf2,w,c
  5188  002386  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  5189                           
  5190                           ; BSR set to: 15
  5191  002388  0EFC               	movlw	252
  5192  00238A  010F               	movlb	15	; () banked
  5193  00238C  173F               	andwf	63,f,b	;volatile
  5194                           
  5195                           ; BSR set to: 15
  5196  00238E  0E03               	movlw	3
  5197  002390  010F               	movlb	15	; () banked
  5198  002392  133F               	iorwf	63,f,b	;volatile
  5199                           
  5200                           ; BSR set to: 15
  5201  002394  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  5202                           
  5203                           ; BSR set to: 15
  5204  002398  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  5205                           
  5206                           ; BSR set to: 15
  5207  00239C  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  5208                           
  5209                           ; BSR set to: 15
  5210  0023A0  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  5211                           
  5212                           ; BSR set to: 15
  5213  0023A4  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  5214                           
  5215                           ; BSR set to: 15
  5216  0023A8  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  5217                           
  5218                           ; BSR set to: 15
  5219  0023AC  5005               	movf	RtccWriteDate@wasOn,w,c
  5220  0023AE  B4D8               	btfsc	status,2,c
  5221  0023B0  D00B               	goto	l598
  5222                           
  5223                           ; BSR set to: 15
  5224  0023B2  010F               	movlb	15	; () banked
  5225  0023B4  8F3F               	bsf	63,7,b	;volatile
  5226                           
  5227                           ; BSR set to: 15
  5228  0023B6  5006               	movf	RtccWriteDate@wasAlrm,w,c
  5229  0023B8  A4D8               	btfss	status,2,c
  5230                           
  5231                           ; BSR set to: 15
  5232  0023BA  8E91               	bsf	3985,7,c	;volatile
  5233                           
  5234                           ; BSR set to: 15
  5235                           
  5236                           ; BSR set to: 15
  5237  0023BC  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5238  0023BE  B4D8               	btfsc	status,2,c
  5239  0023C0  D008               	goto	l602
  5240                           
  5241                           ; BSR set to: 15
  5242  0023C2  EC78  F01D         	call	_RtccWrOn	;wreg free
  5243  0023C6  D005               	goto	l602
  5244  0023C8                     l598:
  5245  0023C8  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5246  0023CA  A4D8               	btfss	status,2,c
  5247  0023CC  D002               	goto	l602
  5248  0023CE  010F               	movlb	15	; () banked
  5249  0023D0  9B3F               	bcf	63,5,b	;volatile
  5250  0023D2                     l602:
  5251                           
  5252                           ; BSR set to: 15
  5253                           
  5254                           ; BSR set to: 15
  5255  0023D2  5003               	movf	RtccWriteDate@di,w,c
  5256  0023D4  B4D8               	btfsc	status,2,c
  5257  0023D6  0012               	return	
  5258  0023D8  9CF2               	bcf	intcon,6,c	;volatile
  5259  0023DA  0012               	return	
  5260  0023DC                     __end_of_RtccWriteDate:
  5261                           	opt stack 0
  5262                           tblptru	equ	0xFF8
  5263                           tblptrh	equ	0xFF7
  5264                           tblptrl	equ	0xFF6
  5265                           tablat	equ	0xFF5
  5266                           prodh	equ	0xFF4
  5267                           prodl	equ	0xFF3
  5268                           intcon	equ	0xFF2
  5269                           postinc0	equ	0xFEE
  5270                           wreg	equ	0xFE8
  5271                           postinc1	equ	0xFE6
  5272                           postdec1	equ	0xFE5
  5273                           fsr1h	equ	0xFE2
  5274                           fsr1l	equ	0xFE1
  5275                           indf2	equ	0xFDF
  5276                           postinc2	equ	0xFDE
  5277                           postdec2	equ	0xFDD
  5278                           fsr2h	equ	0xFDA
  5279                           fsr2l	equ	0xFD9
  5280                           status	equ	0xFD8
  5281                           
  5282 ;; *************** function _RtccWrOn *****************
  5283 ;; Defined at:
  5284 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;  data            2    0        unsigned int 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_Write_RTC
  5308 ;;		_RtccWriteDate
  5309 ;;		_RtccWriteTime
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text22
  5314  003AF0                     __ptext22:
  5315                           	opt stack 0
  5316  003AF0                     _RtccWrOn:
  5317                           	opt stack 25
  5318                           
  5319                           ;incstack = 0
  5320  003AF0  9CF2               	bcf	intcon,6,c	;volatile
  5321  003AF2  0E55               	movlw	85
  5322  003AF4  6EA7               	movwf	4007,c	;volatile
  5323  003AF6  0EAA               	movlw	170
  5324  003AF8  6EA7               	movwf	4007,c	;volatile
  5325  003AFA  010F               	movlb	15	; () banked
  5326  003AFC  8B3F               	bsf	63,5,b	;volatile
  5327                           
  5328                           ; BSR set to: 15
  5329  003AFE  8CF2               	bsf	intcon,6,c	;volatile
  5330                           
  5331                           ; BSR set to: 15
  5332  003B00  0012               	return		;funcret
  5333  003B02                     __end_of_RtccWrOn:
  5334                           	opt stack 0
  5335                           tblptru	equ	0xFF8
  5336                           tblptrh	equ	0xFF7
  5337                           tblptrl	equ	0xFF6
  5338                           tablat	equ	0xFF5
  5339                           prodh	equ	0xFF4
  5340                           prodl	equ	0xFF3
  5341                           intcon	equ	0xFF2
  5342                           postinc0	equ	0xFEE
  5343                           wreg	equ	0xFE8
  5344                           postinc1	equ	0xFE6
  5345                           postdec1	equ	0xFE5
  5346                           fsr1h	equ	0xFE2
  5347                           fsr1l	equ	0xFE1
  5348                           indf2	equ	0xFDF
  5349                           postinc2	equ	0xFDE
  5350                           postdec2	equ	0xFDD
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _covertir_valores_de_array_a_escala_decimal *****************
  5356 ;; Defined at:
  5357 ;;		line 521 in file "main.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  i               2    8[BANK0 ] int 
  5362 ;;  numero          2    6[BANK0 ] int 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2   90[COMRAM] int 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5376 ;;Total ram usage:       14 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    5
  5379 ;; This function calls:
  5380 ;;		___awtoft
  5381 ;;		___fttol
  5382 ;;		___wmul
  5383 ;;		_lcd_gotoxy
  5384 ;;		_lcd_putrs
  5385 ;;		_pow
  5386 ;;		_sprintf
  5387 ;; This function is called by:
  5388 ;;		_editar_fecha_reloj_digital
  5389 ;;		_editar_hora_reloj_digital
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text23
  5394  0024FA                     __ptext23:
  5395                           	opt stack 0
  5396  0024FA                     _covertir_valores_de_array_a_escala_decimal:
  5397                           	opt stack 19
  5398                           
  5399                           ;main.c: 522: int numero = 0;
  5400                           
  5401                           ; BSR set to: 15
  5402                           ;incstack = 0
  5403  0024FA  0E00               	movlw	0
  5404  0024FC  0100               	movlb	0	; () banked
  5405  0024FE  6FC8               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  5406  002500  0E00               	movlw	0
  5407  002502  6FC7               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  5408                           
  5409                           ;main.c: 523: for (int i = 2 - 1; i >= 0; i--) {
  5410  002504  0E00               	movlw	0
  5411  002506  0100               	movlb	0	; () banked
  5412  002508  6FCA               	movwf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),b
  5413  00250A  0E01               	movlw	1
  5414  00250C  6FC9               	movwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),b
  5415  00250E                     l4417:
  5416                           
  5417                           ; BSR set to: 0
  5418  00250E  0100               	movlb	0	; () banked
  5419  002510  BFCA               	btfsc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),7,b
  5420  002512  D05A               	goto	u5110
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;main.c: 524: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5424                           
  5425                           ; BSR set to: 0
  5426                           
  5427                           ; BSR set to: 0
  5428  002514  0E01               	movlw	1
  5429  002516  0100               	movlb	0	; () banked
  5430  002518  25C9               	addwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  5431  00251A  6E5D               	movwf	??_covertir_valores_de_array_a_escala_decimal& (0+255),c
  5432  00251C  0E00               	movlw	0
  5433  00251E  0100               	movlb	0	; () banked
  5434  002520  21CA               	addwfc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  5435  002522  6E5E               	movwf	(??_covertir_valores_de_array_a_escala_decimal+1)& (0+255),c
  5436  002524  1E5D               	comf	??_covertir_valores_de_array_a_escala_decimal,f,c
  5437  002526  1E5E               	comf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  5438  002528  4A5D               	infsnz	??_covertir_valores_de_array_a_escala_decimal,f,c
  5439  00252A  2A5E               	incf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  5440  00252C  0E02               	movlw	2
  5441  00252E  245D               	addwf	??_covertir_valores_de_array_a_escala_decimal,w,c
  5442  002530  6E09               	movwf	___awtoft@c,c
  5443  002532  0E00               	movlw	0
  5444  002534  205E               	addwfc	??_covertir_valores_de_array_a_escala_decimal+1,w,c
  5445  002536  6E0A               	movwf	___awtoft@c+1,c
  5446  002538  ECD6  F01C         	call	___awtoft	;wreg free
  5447  00253C  C009  F0C1         	movff	?___awtoft,_covertir_valores_de_array_a_escala_decimal$2445
  5448  002540  C00A  F0C2         	movff	?___awtoft+1,_covertir_valores_de_array_a_escala_decimal$2445+1
  5449  002544  C00B  F0C3         	movff	?___awtoft+2,_covertir_valores_de_array_a_escala_decimal$2445+2
  5450                           
  5451                           ;main.c: 524: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5452  002548  C0C1  F04D         	movff	_covertir_valores_de_array_a_escala_decimal$2445,pow@y
  5453  00254C  C0C2  F04E         	movff	_covertir_valores_de_array_a_escala_decimal$2445+1,pow@y+1
  5454  002550  C0C3  F04F         	movff	_covertir_valores_de_array_a_escala_decimal$2445+2,pow@y+2
  5455  002554  0E00               	movlw	0
  5456  002556  6E4A               	movwf	pow@x,c
  5457  002558  0E20               	movlw	32
  5458  00255A  6E4B               	movwf	pow@x+1,c
  5459  00255C  0E41               	movlw	65
  5460  00255E  6E4C               	movwf	pow@x+2,c
  5461  002560  ECF5  F00F         	call	_pow	;wreg free
  5462  002564  C04A  F0C4         	movff	?_pow,_covertir_valores_de_array_a_escala_decimal$2446
  5463  002568  C04B  F0C5         	movff	?_pow+1,_covertir_valores_de_array_a_escala_decimal$2446+1
  5464  00256C  C04C  F0C6         	movff	?_pow+2,_covertir_valores_de_array_a_escala_decimal$2446+2
  5465                           
  5466                           ;main.c: 524: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5467  002570  C0C4  F00D         	movff	_covertir_valores_de_array_a_escala_decimal$2446,___fttol@f1
  5468  002574  C0C5  F00E         	movff	_covertir_valores_de_array_a_escala_decimal$2446+1,___fttol@f1+1
  5469  002578  C0C6  F00F         	movff	_covertir_valores_de_array_a_escala_decimal$2446+2,___fttol@f1+2
  5470  00257C  EC80  F013         	call	___fttol	;wreg free
  5471  002580  C00D  F01C         	movff	?___fttol,___wmul@multiplier
  5472  002584  C00E  F01D         	movff	?___fttol+1,___wmul@multiplier+1
  5473  002588  90D8               	bcf	status,0,c
  5474  00258A  0100               	movlb	0	; () banked
  5475  00258C  35C9               	rlcf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  5476  00258E  6ED9               	movwf	fsr2l,c
  5477  002590  0100               	movlb	0	; () banked
  5478  002592  35CA               	rlcf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  5479  002594  6EDA               	movwf	fsr2h,c
  5480  002596  0E80               	movlw	low _numeros_para_fecha
  5481  002598  26D9               	addwf	fsr2l,f,c
  5482  00259A  0E00               	movlw	high _numeros_para_fecha
  5483  00259C  22DA               	addwfc	fsr2h,f,c
  5484  00259E  CFDE F01E          	movff	postinc2,___wmul@multiplicand
  5485  0025A2  CFDD F01F          	movff	postdec2,___wmul@multiplicand+1
  5486  0025A6  EC0B  F01D         	call	___wmul	;wreg free
  5487  0025AA  0100               	movlb	0	; () banked
  5488  0025AC  51C7               	movf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),w,b
  5489  0025AE  241C               	addwf	?___wmul,w,c
  5490  0025B0  0100               	movlb	0	; () banked
  5491  0025B2  6FC7               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  5492  0025B4  0100               	movlb	0	; () banked
  5493  0025B6  51C8               	movf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),w,b
  5494  0025B8  201D               	addwfc	?___wmul+1,w,c
  5495  0025BA  0100               	movlb	0	; () banked
  5496  0025BC  6FC8               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  5497                           
  5498                           ; BSR set to: 0
  5499  0025BE  0100               	movlb	0	; () banked
  5500  0025C0  07C9               	decf	covertir_valores_de_array_a_escala_decimal@i& (0+255),f,b
  5501  0025C2  A0D8               	btfss	status,0,c
  5502  0025C4  07CA               	decf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),f,b
  5503  0025C6  D7A3               	goto	l4417
  5504  0025C8                     u5110:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;main.c: 525: };
  5508                           ;main.c: 526: sprintf(buffer2, "%02u", numero);
  5509                           
  5510                           ; BSR set to: 0
  5511  0025C8  0EA5               	movlw	low _buffer2
  5512  0025CA  6E22               	movwf	sprintf@sp,c
  5513  0025CC  0E00               	movlw	high _buffer2
  5514  0025CE  6E23               	movwf	sprintf@sp+1,c
  5515  0025D0  0E9A               	movlw	low (STR_7+10)
  5516  0025D2  6E24               	movwf	sprintf@f,c
  5517  0025D4  0E0F               	movlw	high (STR_7+10)
  5518  0025D6  6E25               	movwf	sprintf@f+1,c
  5519  0025D8  C0C7  F026         	movff	covertir_valores_de_array_a_escala_decimal@numero,?_sprintf+4
  5520  0025DC  C0C8  F027         	movff	covertir_valores_de_array_a_escala_decimal@numero+1,?_sprintf+5
  5521  0025E0  EC4E  F00A         	call	_sprintf	;wreg free
  5522                           
  5523                           ;main.c: 527: lcd_gotoxy(8, 2);
  5524  0025E4  0E02               	movlw	2
  5525  0025E6  6E05               	movwf	lcd_gotoxy@y,c
  5526  0025E8  0E08               	movlw	8
  5527  0025EA  EC42  F01D         	call	_lcd_gotoxy
  5528                           
  5529                           ;main.c: 528: lcd_putrs(buffer2);
  5530  0025EE  0EA5               	movlw	low _buffer2
  5531  0025F0  6E09               	movwf	lcd_putrs@ptr,c
  5532  0025F2  0E00               	movlw	high _buffer2
  5533  0025F4  6E0A               	movwf	lcd_putrs@ptr+1,c
  5534  0025F6  ECD3  F01B         	call	_lcd_putrs	;wreg free
  5535                           
  5536                           ;main.c: 529: return numero;
  5537  0025FA  C0C7  F05B         	movff	covertir_valores_de_array_a_escala_decimal@numero,?_covertir_valores_de_array_a_e
      +                          scala_decimal
  5538  0025FE  C0C8  F05C         	movff	covertir_valores_de_array_a_escala_decimal@numero+1,?_covertir_valores_de_array_a
      +                          _escala_decimal+1
  5539  002602  0012               	return	
  5540  002604                     __end_of_covertir_valores_de_array_a_escala_decimal:
  5541                           	opt stack 0
  5542                           tblptru	equ	0xFF8
  5543                           tblptrh	equ	0xFF7
  5544                           tblptrl	equ	0xFF6
  5545                           tablat	equ	0xFF5
  5546                           prodh	equ	0xFF4
  5547                           prodl	equ	0xFF3
  5548                           intcon	equ	0xFF2
  5549                           postinc0	equ	0xFEE
  5550                           wreg	equ	0xFE8
  5551                           postinc1	equ	0xFE6
  5552                           postdec1	equ	0xFE5
  5553                           fsr1h	equ	0xFE2
  5554                           fsr1l	equ	0xFE1
  5555                           indf2	equ	0xFDF
  5556                           postinc2	equ	0xFDE
  5557                           postdec2	equ	0xFDD
  5558                           fsr2h	equ	0xFDA
  5559                           fsr2l	equ	0xFD9
  5560                           status	equ	0xFD8
  5561                           
  5562 ;; *************** function _pow *****************
  5563 ;; Defined at:
  5564 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  x               3   73[COMRAM] int 
  5567 ;;  y               3   76[COMRAM] int 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;  yi              4   86[COMRAM] unsigned long 
  5570 ;;  sign            1   85[COMRAM] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  3   73[COMRAM] unsigned char 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5580 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5581 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5583 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5584 ;;Total ram usage:       17 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    4
  5587 ;; This function calls:
  5588 ;;		___ftge
  5589 ;;		___ftmul
  5590 ;;		___ftneg
  5591 ;;		___fttol
  5592 ;;		___lltoft
  5593 ;;		_exp
  5594 ;;		_log
  5595 ;; This function is called by:
  5596 ;;		_covertir_valores_de_array_a_escala_decimal
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text24
  5601  001FEA                     __ptext24:
  5602                           	opt stack 0
  5603  001FEA                     _pow:
  5604                           	opt stack 19
  5605                           
  5606                           ;incstack = 0
  5607  001FEA  0E00               	movlw	0
  5608  001FEC  6E56               	movwf	pow@sign,c
  5609  001FEE  504A               	movf	pow@x,w,c
  5610  001FF0  104B               	iorwf	pow@x+1,w,c
  5611  001FF2  104C               	iorwf	pow@x+2,w,c
  5612  001FF4  A4D8               	btfss	status,2,c
  5613  001FF6  D01C               	goto	l1092
  5614  001FF8  0E00               	movlw	0
  5615  001FFA  6E01               	movwf	___ftge@ff1,c
  5616  001FFC  0E00               	movlw	0
  5617  001FFE  6E02               	movwf	___ftge@ff1+1,c
  5618  002000  0E00               	movlw	0
  5619  002002  6E03               	movwf	___ftge@ff1+2,c
  5620  002004  C04D  F004         	movff	pow@y,___ftge@ff2
  5621  002008  C04E  F005         	movff	pow@y+1,___ftge@ff2+1
  5622  00200C  C04F  F006         	movff	pow@y+2,___ftge@ff2+2
  5623  002010  EC15  F018         	call	___ftge	;wreg free
  5624  002014  A0D8               	btfss	status,0,c
  5625  002016  D005               	goto	l1093
  5626  002018  0E00               	movlw	0
  5627  00201A  0100               	movlb	0	; () banked
  5628  00201C  6F89               	movwf	(_errno+1)& (0+255),b
  5629  00201E  0E21               	movlw	33
  5630  002020  6F88               	movwf	_errno& (0+255),b
  5631  002022                     l1093:
  5632  002022  0E00               	movlw	0
  5633  002024  6E4A               	movwf	?_pow,c
  5634  002026  0E00               	movlw	0
  5635  002028  6E4B               	movwf	?_pow+1,c
  5636  00202A  0E00               	movlw	0
  5637  00202C  6E4C               	movwf	?_pow+2,c
  5638  00202E  0012               	return	
  5639  002030                     l1092:
  5640  002030  504D               	movf	pow@y,w,c
  5641  002032  104E               	iorwf	pow@y+1,w,c
  5642  002034  104F               	iorwf	pow@y+2,w,c
  5643  002036  A4D8               	btfss	status,2,c
  5644  002038  D007               	goto	l1095
  5645  00203A  0E00               	movlw	0
  5646  00203C  6E4A               	movwf	?_pow,c
  5647  00203E  0E80               	movlw	128
  5648  002040  6E4B               	movwf	?_pow+1,c
  5649  002042  0E3F               	movlw	63
  5650  002044  6E4C               	movwf	?_pow+2,c
  5651  002046  0012               	return	
  5652  002048                     l1095:
  5653  002048  AE4C               	btfss	pow@x+2,7,c
  5654  00204A  D041               	goto	l1096
  5655  00204C  C04D  F00D         	movff	pow@y,___fttol@f1
  5656  002050  C04E  F00E         	movff	pow@y+1,___fttol@f1+1
  5657  002054  C04F  F00F         	movff	pow@y+2,___fttol@f1+2
  5658  002058  EC80  F013         	call	___fttol	;wreg free
  5659  00205C  C00D  F057         	movff	?___fttol,pow@yi
  5660  002060  C00E  F058         	movff	?___fttol+1,pow@yi+1
  5661  002064  C00F  F059         	movff	?___fttol+2,pow@yi+2
  5662  002068  C010  F05A         	movff	?___fttol+3,pow@yi+3
  5663  00206C  C057  F009         	movff	pow@yi,___lltoft@c
  5664  002070  C058  F00A         	movff	pow@yi+1,___lltoft@c+1
  5665  002074  C059  F00B         	movff	pow@yi+2,___lltoft@c+2
  5666  002078  C05A  F00C         	movff	pow@yi+3,___lltoft@c+3
  5667  00207C  EC4F  F01B         	call	___lltoft	;wreg free
  5668  002080  504D               	movf	pow@y,w,c
  5669  002082  1809               	xorwf	?___lltoft,w,c
  5670  002084  E107               	bnz	u4620
  5671  002086  504E               	movf	pow@y+1,w,c
  5672  002088  180A               	xorwf	?___lltoft+1,w,c
  5673  00208A  E104               	bnz	u4620
  5674  00208C  504F               	movf	pow@y+2,w,c
  5675  00208E  180B               	xorwf	?___lltoft+2,w,c
  5676  002090  B4D8               	btfsc	status,2,c
  5677  002092  D00C               	goto	l1097
  5678  002094                     u4620:
  5679  002094  0E00               	movlw	0
  5680  002096  0100               	movlb	0	; () banked
  5681  002098  6F89               	movwf	(_errno+1)& (0+255),b
  5682  00209A  0E21               	movlw	33
  5683  00209C  6F88               	movwf	_errno& (0+255),b
  5684  00209E  0E00               	movlw	0
  5685  0020A0  6E4A               	movwf	?_pow,c
  5686  0020A2  0E00               	movlw	0
  5687  0020A4  6E4B               	movwf	?_pow+1,c
  5688  0020A6  0E00               	movlw	0
  5689  0020A8  6E4C               	movwf	?_pow+2,c
  5690                           
  5691                           ; BSR set to: 0
  5692  0020AA  0012               	return	
  5693  0020AC                     l1097:
  5694                           
  5695                           ; BSR set to: 0
  5696  0020AC  5057               	movf	pow@yi,w,c
  5697  0020AE  0B01               	andlw	1
  5698  0020B0  6E56               	movwf	pow@sign,c
  5699  0020B2  C04A  F001         	movff	pow@x,___ftneg@f1
  5700  0020B6  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  5701  0020BA  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  5702  0020BE  EC30  F01D         	call	___ftneg	;wreg free
  5703  0020C2  C001  F04A         	movff	?___ftneg,pow@x
  5704  0020C6  C002  F04B         	movff	?___ftneg+1,pow@x+1
  5705  0020CA  C003  F04C         	movff	?___ftneg+2,pow@x+2
  5706  0020CE                     l1096:
  5707  0020CE  C04A  F03A         	movff	pow@x,log@x
  5708  0020D2  C04B  F03B         	movff	pow@x+1,log@x+1
  5709  0020D6  C04C  F03C         	movff	pow@x+2,log@x+2
  5710  0020DA  ECEE  F011         	call	_log	;wreg free
  5711  0020DE  C03A  F050         	movff	?_log,_pow$2447
  5712  0020E2  C03B  F051         	movff	?_log+1,_pow$2447+1
  5713  0020E6  C03C  F052         	movff	?_log+2,_pow$2447+2
  5714  0020EA  C050  F00D         	movff	_pow$2447,___ftmul@f1
  5715  0020EE  C051  F00E         	movff	_pow$2447+1,___ftmul@f1+1
  5716  0020F2  C052  F00F         	movff	_pow$2447+2,___ftmul@f1+2
  5717  0020F6  C04D  F010         	movff	pow@y,___ftmul@f2
  5718  0020FA  C04E  F011         	movff	pow@y+1,___ftmul@f2+1
  5719  0020FE  C04F  F012         	movff	pow@y+2,___ftmul@f2+2
  5720  002102  ECFA  F013         	call	___ftmul	;wreg free
  5721  002106  C00D  F053         	movff	?___ftmul,_pow$2448
  5722  00210A  C00E  F054         	movff	?___ftmul+1,_pow$2448+1
  5723  00210E  C00F  F055         	movff	?___ftmul+2,_pow$2448+2
  5724  002112  C053  F041         	movff	_pow$2448,exp@x
  5725  002116  C054  F042         	movff	_pow$2448+1,exp@x+1
  5726  00211A  C055  F043         	movff	_pow$2448+2,exp@x+2
  5727  00211E  EC74  F00C         	call	_exp	;wreg free
  5728  002122  C041  F04A         	movff	?_exp,pow@x
  5729  002126  C042  F04B         	movff	?_exp+1,pow@x+1
  5730  00212A  C043  F04C         	movff	?_exp+2,pow@x+2
  5731  00212E  5056               	movf	pow@sign,w,c
  5732  002130  B4D8               	btfsc	status,2,c
  5733  002132  D00F               	goto	l1098
  5734  002134  C04A  F001         	movff	pow@x,___ftneg@f1
  5735  002138  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  5736  00213C  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  5737  002140  EC30  F01D         	call	___ftneg	;wreg free
  5738  002144  C001  F04A         	movff	?___ftneg,?_pow
  5739  002148  C002  F04B         	movff	?___ftneg+1,?_pow+1
  5740  00214C  C003  F04C         	movff	?___ftneg+2,?_pow+2
  5741  002150  0012               	return	
  5742  002152                     l1098:
  5743  002152  C04A  F04A         	movff	pow@x,?_pow
  5744  002156  C04B  F04B         	movff	pow@x+1,?_pow+1
  5745  00215A  C04C  F04C         	movff	pow@x+2,?_pow+2
  5746  00215E  0012               	return		;funcret
  5747  002160                     __end_of_pow:
  5748                           	opt stack 0
  5749                           tblptru	equ	0xFF8
  5750                           tblptrh	equ	0xFF7
  5751                           tblptrl	equ	0xFF6
  5752                           tablat	equ	0xFF5
  5753                           prodh	equ	0xFF4
  5754                           prodl	equ	0xFF3
  5755                           intcon	equ	0xFF2
  5756                           postinc0	equ	0xFEE
  5757                           wreg	equ	0xFE8
  5758                           postinc1	equ	0xFE6
  5759                           postdec1	equ	0xFE5
  5760                           fsr1h	equ	0xFE2
  5761                           fsr1l	equ	0xFE1
  5762                           indf2	equ	0xFDF
  5763                           postinc2	equ	0xFDE
  5764                           postdec2	equ	0xFDD
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function _log *****************
  5770 ;; Defined at:
  5771 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  x               3   57[COMRAM] unsigned char 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  exponent        2   60[COMRAM] int 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  3   57[COMRAM] int 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5785 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5788 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5789 ;;Total ram usage:        5 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    3
  5792 ;; This function calls:
  5793 ;;		___awtoft
  5794 ;;		___ftadd
  5795 ;;		___ftmul
  5796 ;;		_eval_poly
  5797 ;;		_frexp
  5798 ;; This function is called by:
  5799 ;;		_pow
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text25
  5804  0023DC                     __ptext25:
  5805                           	opt stack 0
  5806  0023DC                     _log:
  5807                           	opt stack 19
  5808                           
  5809                           ;incstack = 0
  5810  0023DC  AE3C               	btfss	log@x+2,7,c
  5811  0023DE  D00C               	goto	l1294
  5812  0023E0  0E00               	movlw	0
  5813  0023E2  0100               	movlb	0	; () banked
  5814  0023E4  6F89               	movwf	(_errno+1)& (0+255),b
  5815  0023E6  0E21               	movlw	33
  5816  0023E8  6F88               	movwf	_errno& (0+255),b
  5817  0023EA  0E00               	movlw	0
  5818  0023EC  6E3A               	movwf	?_log,c
  5819  0023EE  0E00               	movlw	0
  5820  0023F0  6E3B               	movwf	?_log+1,c
  5821  0023F2  0E00               	movlw	0
  5822  0023F4  6E3C               	movwf	?_log+2,c
  5823                           
  5824                           ; BSR set to: 0
  5825  0023F6  0012               	return	
  5826  0023F8                     l1294:
  5827                           
  5828                           ; BSR set to: 0
  5829  0023F8  503A               	movf	log@x,w,c
  5830  0023FA  103B               	iorwf	log@x+1,w,c
  5831  0023FC  103C               	iorwf	log@x+2,w,c
  5832  0023FE  A4D8               	btfss	status,2,c
  5833  002400  D00C               	goto	l1296
  5834  002402  0E00               	movlw	0
  5835  002404  0100               	movlb	0	; () banked
  5836  002406  6F89               	movwf	(_errno+1)& (0+255),b
  5837  002408  0E22               	movlw	34
  5838  00240A  6F88               	movwf	_errno& (0+255),b
  5839  00240C  0E00               	movlw	0
  5840  00240E  6E3A               	movwf	?_log,c
  5841  002410  0E00               	movlw	0
  5842  002412  6E3B               	movwf	?_log+1,c
  5843  002414  0E00               	movlw	0
  5844  002416  6E3C               	movwf	?_log+2,c
  5845                           
  5846                           ; BSR set to: 0
  5847  002418  0012               	return	
  5848  00241A                     l1296:
  5849                           
  5850                           ; BSR set to: 0
  5851  00241A  0E00               	movlw	0
  5852  00241C  6E10               	movwf	___ftmul@f2,c
  5853  00241E  0E00               	movlw	0
  5854  002420  6E11               	movwf	___ftmul@f2+1,c
  5855  002422  0E40               	movlw	64
  5856  002424  6E12               	movwf	___ftmul@f2+2,c
  5857  002426  0E3D               	movlw	low log@exponent
  5858  002428  6E04               	movwf	frexp@eptr,c
  5859  00242A  0E00               	movlw	high log@exponent
  5860  00242C  6E05               	movwf	frexp@eptr+1,c
  5861  00242E  C03A  F001         	movff	log@x,frexp@value
  5862  002432  C03B  F002         	movff	log@x+1,frexp@value+1
  5863  002436  C03C  F003         	movff	log@x+2,frexp@value+2
  5864  00243A  ECCD  F017         	call	_frexp	;wreg free
  5865  00243E  C001  F00D         	movff	?_frexp,___ftmul@f1
  5866  002442  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  5867  002446  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  5868  00244A  ECFA  F013         	call	___ftmul	;wreg free
  5869  00244E  C00D  F022         	movff	?___ftmul,___ftadd@f1
  5870  002452  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  5871  002456  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  5872  00245A  0E00               	movlw	0
  5873  00245C  6E25               	movwf	___ftadd@f2,c
  5874  00245E  0E80               	movlw	128
  5875  002460  6E26               	movwf	___ftadd@f2+1,c
  5876  002462  0EBF               	movlw	191
  5877  002464  6E27               	movwf	___ftadd@f2+2,c
  5878  002466  EC51  F00E         	call	___ftadd	;wreg free
  5879  00246A  C022  F03A         	movff	?___ftadd,log@x
  5880  00246E  C023  F03B         	movff	?___ftadd+1,log@x+1
  5881  002472  C024  F03C         	movff	?___ftadd+2,log@x+2
  5882  002476  063D               	decf	log@exponent,f,c
  5883  002478  A0D8               	btfss	status,0,c
  5884  00247A  063E               	decf	log@exponent+1,f,c
  5885  00247C  C03A  F02E         	movff	log@x,eval_poly@x
  5886  002480  C03B  F02F         	movff	log@x+1,eval_poly@x+1
  5887  002484  C03C  F030         	movff	log@x+2,eval_poly@x+2
  5888  002488  0E2D               	movlw	low log@coeff
  5889  00248A  6E31               	movwf	eval_poly@d,c
  5890  00248C  0E0F               	movlw	high log@coeff
  5891  00248E  6E32               	movwf	eval_poly@d+1,c
  5892  002490  0E00               	movlw	0
  5893  002492  6E34               	movwf	eval_poly@n+1,c
  5894  002494  0E08               	movlw	8
  5895  002496  6E33               	movwf	eval_poly@n,c
  5896  002498  EC56  F015         	call	_eval_poly	;wreg free
  5897  00249C  C02E  F03A         	movff	?_eval_poly,log@x
  5898  0024A0  C02F  F03B         	movff	?_eval_poly+1,log@x+1
  5899  0024A4  C030  F03C         	movff	?_eval_poly+2,log@x+2
  5900  0024A8  0E72               	movlw	114
  5901  0024AA  6E10               	movwf	___ftmul@f2,c
  5902  0024AC  0E31               	movlw	49
  5903  0024AE  6E11               	movwf	___ftmul@f2+1,c
  5904  0024B0  0E3F               	movlw	63
  5905  0024B2  6E12               	movwf	___ftmul@f2+2,c
  5906  0024B4  C03D  F009         	movff	log@exponent,___awtoft@c
  5907  0024B8  C03E  F00A         	movff	log@exponent+1,___awtoft@c+1
  5908  0024BC  ECD6  F01C         	call	___awtoft	;wreg free
  5909  0024C0  C009  F00D         	movff	?___awtoft,___ftmul@f1
  5910  0024C4  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  5911  0024C8  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  5912  0024CC  ECFA  F013         	call	___ftmul	;wreg free
  5913  0024D0  C00D  F022         	movff	?___ftmul,___ftadd@f1
  5914  0024D4  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  5915  0024D8  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  5916  0024DC  C03A  F025         	movff	log@x,___ftadd@f2
  5917  0024E0  C03B  F026         	movff	log@x+1,___ftadd@f2+1
  5918  0024E4  C03C  F027         	movff	log@x+2,___ftadd@f2+2
  5919  0024E8  EC51  F00E         	call	___ftadd	;wreg free
  5920  0024EC  C022  F03A         	movff	?___ftadd,?_log
  5921  0024F0  C023  F03B         	movff	?___ftadd+1,?_log+1
  5922  0024F4  C024  F03C         	movff	?___ftadd+2,?_log+2
  5923  0024F8  0012               	return	
  5924  0024FA                     __end_of_log:
  5925                           	opt stack 0
  5926                           tblptru	equ	0xFF8
  5927                           tblptrh	equ	0xFF7
  5928                           tblptrl	equ	0xFF6
  5929                           tablat	equ	0xFF5
  5930                           prodh	equ	0xFF4
  5931                           prodl	equ	0xFF3
  5932                           intcon	equ	0xFF2
  5933                           postinc0	equ	0xFEE
  5934                           wreg	equ	0xFE8
  5935                           postinc1	equ	0xFE6
  5936                           postdec1	equ	0xFE5
  5937                           fsr1h	equ	0xFE2
  5938                           fsr1l	equ	0xFE1
  5939                           indf2	equ	0xFDF
  5940                           postinc2	equ	0xFDE
  5941                           postdec2	equ	0xFDD
  5942                           fsr2h	equ	0xFDA
  5943                           fsr2l	equ	0xFD9
  5944                           status	equ	0xFD8
  5945                           
  5946 ;; *************** function _exp *****************
  5947 ;; Defined at:
  5948 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  x               3   64[COMRAM] int 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  exponent        2   70[COMRAM] int 
  5953 ;;  sign            1   72[COMRAM] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  3   64[COMRAM] unsigned char 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5963 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5964 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5966 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5967 ;;Total ram usage:        9 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    3
  5970 ;; This function calls:
  5971 ;;		___awtoft
  5972 ;;		___ftdiv
  5973 ;;		___ftge
  5974 ;;		___ftmul
  5975 ;;		___ftneg
  5976 ;;		___ftsub
  5977 ;;		___fttol
  5978 ;;		_eval_poly
  5979 ;;		_floor
  5980 ;;		_ldexp
  5981 ;; This function is called by:
  5982 ;;		_pow
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text26
  5987  0018E8                     __ptext26:
  5988                           	opt stack 0
  5989  0018E8                     _exp:
  5990                           	opt stack 19
  5991                           
  5992                           ;incstack = 0
  5993  0018E8  5041               	movf	exp@x,w,c
  5994  0018EA  1042               	iorwf	exp@x+1,w,c
  5995  0018EC  1043               	iorwf	exp@x+2,w,c
  5996  0018EE  A4D8               	btfss	status,2,c
  5997  0018F0  D007               	goto	l1252
  5998  0018F2  0E00               	movlw	0
  5999  0018F4  6E41               	movwf	?_exp,c
  6000  0018F6  0E80               	movlw	128
  6001  0018F8  6E42               	movwf	?_exp+1,c
  6002  0018FA  0E3F               	movlw	63
  6003  0018FC  6E43               	movwf	?_exp+2,c
  6004  0018FE  0012               	return	
  6005  001900                     l1252:
  6006  001900  0E72               	movlw	114
  6007  001902  6E01               	movwf	___ftge@ff1,c
  6008  001904  0E31               	movlw	49
  6009  001906  6E02               	movwf	___ftge@ff1+1,c
  6010  001908  0E44               	movlw	68
  6011  00190A  6E03               	movwf	___ftge@ff1+2,c
  6012  00190C  C041  F004         	movff	exp@x,___ftge@ff2
  6013  001910  C042  F005         	movff	exp@x+1,___ftge@ff2+1
  6014  001914  C043  F006         	movff	exp@x+2,___ftge@ff2+2
  6015  001918  EC15  F018         	call	___ftge	;wreg free
  6016  00191C  B0D8               	btfsc	status,0,c
  6017  00191E  D00C               	goto	l1254
  6018  001920  0E00               	movlw	0
  6019  001922  0100               	movlb	0	; () banked
  6020  001924  6F89               	movwf	(_errno+1)& (0+255),b
  6021  001926  0E22               	movlw	34
  6022  001928  6F88               	movwf	_errno& (0+255),b
  6023  00192A  0EFF               	movlw	255
  6024  00192C  6E41               	movwf	?_exp,c
  6025  00192E  0E7F               	movlw	127
  6026  001930  6E42               	movwf	?_exp+1,c
  6027  001932  0E7F               	movlw	127
  6028  001934  6E43               	movwf	?_exp+2,c
  6029                           
  6030                           ; BSR set to: 0
  6031  001936  0012               	return	
  6032  001938                     l1254:
  6033                           
  6034                           ; BSR set to: 0
  6035  001938  C041  F001         	movff	exp@x,___ftge@ff1
  6036  00193C  C042  F002         	movff	exp@x+1,___ftge@ff1+1
  6037  001940  C043  F003         	movff	exp@x+2,___ftge@ff1+2
  6038  001944  0E49               	movlw	73
  6039  001946  6E04               	movwf	___ftge@ff2,c
  6040  001948  0E3A               	movlw	58
  6041  00194A  6E05               	movwf	___ftge@ff2+1,c
  6042  00194C  0EC4               	movlw	196
  6043  00194E  6E06               	movwf	___ftge@ff2+2,c
  6044  001950  EC15  F018         	call	___ftge	;wreg free
  6045  001954  B0D8               	btfsc	status,0,c
  6046  001956  D00C               	goto	l1255
  6047  001958  0E00               	movlw	0
  6048  00195A  0100               	movlb	0	; () banked
  6049  00195C  6F89               	movwf	(_errno+1)& (0+255),b
  6050  00195E  0E22               	movlw	34
  6051  001960  6F88               	movwf	_errno& (0+255),b
  6052  001962  0E00               	movlw	0
  6053  001964  6E41               	movwf	?_exp,c
  6054  001966  0E00               	movlw	0
  6055  001968  6E42               	movwf	?_exp+1,c
  6056  00196A  0E00               	movlw	0
  6057  00196C  6E43               	movwf	?_exp+2,c
  6058                           
  6059                           ; BSR set to: 0
  6060  00196E  0012               	return	
  6061  001970                     l1255:
  6062                           
  6063                           ; BSR set to: 0
  6064  001970  AE43               	btfss	exp@x+2,7,c
  6065  001972  D002               	goto	u4520
  6066  001974  0E01               	movlw	1
  6067  001976  D001               	goto	u4530
  6068  001978                     u4520:
  6069  001978  0E00               	movlw	0
  6070  00197A                     u4530:
  6071  00197A  6E49               	movwf	exp@sign,c
  6072  00197C  5049               	movf	exp@sign,w,c
  6073  00197E  B4D8               	btfsc	status,2,c
  6074  001980  D00E               	goto	l1256
  6075  001982  C041  F001         	movff	exp@x,___ftneg@f1
  6076  001986  C042  F002         	movff	exp@x+1,___ftneg@f1+1
  6077  00198A  C043  F003         	movff	exp@x+2,___ftneg@f1+2
  6078  00198E  EC30  F01D         	call	___ftneg	;wreg free
  6079  001992  C001  F041         	movff	?___ftneg,exp@x
  6080  001996  C002  F042         	movff	?___ftneg+1,exp@x+1
  6081  00199A  C003  F043         	movff	?___ftneg+2,exp@x+2
  6082  00199E                     l1256:
  6083  00199E  C041  F00D         	movff	exp@x,___ftmul@f1
  6084  0019A2  C042  F00E         	movff	exp@x+1,___ftmul@f1+1
  6085  0019A6  C043  F00F         	movff	exp@x+2,___ftmul@f1+2
  6086  0019AA  0EAA               	movlw	170
  6087  0019AC  6E10               	movwf	___ftmul@f2,c
  6088  0019AE  0EB8               	movlw	184
  6089  0019B0  6E11               	movwf	___ftmul@f2+1,c
  6090  0019B2  0E3F               	movlw	63
  6091  0019B4  6E12               	movwf	___ftmul@f2+2,c
  6092  0019B6  ECFA  F013         	call	___ftmul	;wreg free
  6093  0019BA  C00D  F041         	movff	?___ftmul,exp@x
  6094  0019BE  C00E  F042         	movff	?___ftmul+1,exp@x+1
  6095  0019C2  C00F  F043         	movff	?___ftmul+2,exp@x+2
  6096  0019C6  C041  F02E         	movff	exp@x,floor@x
  6097  0019CA  C042  F02F         	movff	exp@x+1,floor@x+1
  6098  0019CE  C043  F030         	movff	exp@x+2,floor@x+2
  6099  0019D2  ECE7  F014         	call	_floor	;wreg free
  6100  0019D6  C02E  F044         	movff	?_floor,_exp$2449
  6101  0019DA  C02F  F045         	movff	?_floor+1,_exp$2449+1
  6102  0019DE  C030  F046         	movff	?_floor+2,_exp$2449+2
  6103  0019E2  C044  F00D         	movff	_exp$2449,___fttol@f1
  6104  0019E6  C045  F00E         	movff	_exp$2449+1,___fttol@f1+1
  6105  0019EA  C046  F00F         	movff	_exp$2449+2,___fttol@f1+2
  6106  0019EE  EC80  F013         	call	___fttol	;wreg free
  6107  0019F2  C00D  F047         	movff	?___fttol,exp@exponent
  6108  0019F6  C00E  F048         	movff	?___fttol+1,exp@exponent+1
  6109  0019FA  C041  F02E         	movff	exp@x,___ftsub@f1
  6110  0019FE  C042  F02F         	movff	exp@x+1,___ftsub@f1+1
  6111  001A02  C043  F030         	movff	exp@x+2,___ftsub@f1+2
  6112  001A06  C047  F009         	movff	exp@exponent,___awtoft@c
  6113  001A0A  C048  F00A         	movff	exp@exponent+1,___awtoft@c+1
  6114  001A0E  ECD6  F01C         	call	___awtoft	;wreg free
  6115  001A12  C009  F031         	movff	?___awtoft,___ftsub@f2
  6116  001A16  C00A  F032         	movff	?___awtoft+1,___ftsub@f2+1
  6117  001A1A  C00B  F033         	movff	?___awtoft+2,___ftsub@f2+2
  6118  001A1E  ECB6  F01C         	call	___ftsub	;wreg free
  6119  001A22  C02E  F041         	movff	?___ftsub,exp@x
  6120  001A26  C02F  F042         	movff	?___ftsub+1,exp@x+1
  6121  001A2A  C030  F043         	movff	?___ftsub+2,exp@x+2
  6122  001A2E  C041  F02E         	movff	exp@x,eval_poly@x
  6123  001A32  C042  F02F         	movff	exp@x+1,eval_poly@x+1
  6124  001A36  C043  F030         	movff	exp@x+2,eval_poly@x+2
  6125  001A3A  0E0F               	movlw	low exp@coeff
  6126  001A3C  6E31               	movwf	eval_poly@d,c
  6127  001A3E  0E0F               	movlw	high exp@coeff
  6128  001A40  6E32               	movwf	eval_poly@d+1,c
  6129  001A42  0E00               	movlw	0
  6130  001A44  6E34               	movwf	eval_poly@n+1,c
  6131  001A46  0E09               	movlw	9
  6132  001A48  6E33               	movwf	eval_poly@n,c
  6133  001A4A  EC56  F015         	call	_eval_poly	;wreg free
  6134  001A4E  C02E  F03A         	movff	?_eval_poly,ldexp@value
  6135  001A52  C02F  F03B         	movff	?_eval_poly+1,ldexp@value+1
  6136  001A56  C030  F03C         	movff	?_eval_poly+2,ldexp@value+2
  6137  001A5A  C047  F03D         	movff	exp@exponent,ldexp@newexp
  6138  001A5E  C048  F03E         	movff	exp@exponent+1,ldexp@newexp+1
  6139  001A62  ECBF  F015         	call	_ldexp	;wreg free
  6140  001A66  C03A  F041         	movff	?_ldexp,exp@x
  6141  001A6A  C03B  F042         	movff	?_ldexp+1,exp@x+1
  6142  001A6E  C03C  F043         	movff	?_ldexp+2,exp@x+2
  6143  001A72  5049               	movf	exp@sign,w,c
  6144  001A74  B4D8               	btfsc	status,2,c
  6145  001A76  D025               	goto	l1257
  6146  001A78  2841               	incf	exp@x,w,c
  6147  001A7A  E10E               	bnz	l4135
  6148  001A7C  0E7F               	movlw	127
  6149  001A7E  1842               	xorwf	exp@x+1,w,c
  6150  001A80  E10B               	bnz	l4135
  6151  001A82  0E7F               	movlw	127
  6152  001A84  1843               	xorwf	exp@x+2,w,c
  6153  001A86  A4D8               	btfss	status,2,c
  6154  001A88  D007               	goto	l1258
  6155  001A8A  0E00               	movlw	0
  6156  001A8C  6E41               	movwf	?_exp,c
  6157  001A8E  0E00               	movlw	0
  6158  001A90  6E42               	movwf	?_exp+1,c
  6159  001A92  0E00               	movlw	0
  6160  001A94  6E43               	movwf	?_exp+2,c
  6161  001A96  0012               	return	
  6162  001A98                     l1258:
  6163  001A98                     l4135:
  6164  001A98  0E00               	movlw	0
  6165  001A9A  6E09               	movwf	___ftdiv@f1,c
  6166  001A9C  0E80               	movlw	128
  6167  001A9E  6E0A               	movwf	___ftdiv@f1+1,c
  6168  001AA0  0E3F               	movlw	63
  6169  001AA2  6E0B               	movwf	___ftdiv@f1+2,c
  6170  001AA4  C041  F00C         	movff	exp@x,___ftdiv@f2
  6171  001AA8  C042  F00D         	movff	exp@x+1,___ftdiv@f2+1
  6172  001AAC  C043  F00E         	movff	exp@x+2,___ftdiv@f2+2
  6173  001AB0  EC74  F014         	call	___ftdiv	;wreg free
  6174  001AB4  C009  F041         	movff	?___ftdiv,?_exp
  6175  001AB8  C00A  F042         	movff	?___ftdiv+1,?_exp+1
  6176  001ABC  C00B  F043         	movff	?___ftdiv+2,?_exp+2
  6177  001AC0  0012               	return	
  6178  001AC2                     l1257:
  6179  001AC2  C041  F041         	movff	exp@x,?_exp
  6180  001AC6  C042  F042         	movff	exp@x+1,?_exp+1
  6181  001ACA  C043  F043         	movff	exp@x+2,?_exp+2
  6182  001ACE  0012               	return		;funcret
  6183  001AD0                     __end_of_exp:
  6184                           	opt stack 0
  6185                           tblptru	equ	0xFF8
  6186                           tblptrh	equ	0xFF7
  6187                           tblptrl	equ	0xFF6
  6188                           tablat	equ	0xFF5
  6189                           prodh	equ	0xFF4
  6190                           prodl	equ	0xFF3
  6191                           intcon	equ	0xFF2
  6192                           postinc0	equ	0xFEE
  6193                           wreg	equ	0xFE8
  6194                           postinc1	equ	0xFE6
  6195                           postdec1	equ	0xFE5
  6196                           fsr1h	equ	0xFE2
  6197                           fsr1l	equ	0xFE1
  6198                           indf2	equ	0xFDF
  6199                           postinc2	equ	0xFDE
  6200                           postdec2	equ	0xFDD
  6201                           fsr2h	equ	0xFDA
  6202                           fsr2l	equ	0xFD9
  6203                           status	equ	0xFD8
  6204                           
  6205 ;; *************** function _ldexp *****************
  6206 ;; Defined at:
  6207 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;  value           3   57[COMRAM] unsigned char 
  6210 ;;  newexp          2   60[COMRAM] int 
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  3   57[COMRAM] int 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6222 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;Total ram usage:        7 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; This function calls:
  6229 ;;		Nothing
  6230 ;; This function is called by:
  6231 ;;		_exp
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text27
  6236  002B7E                     __ptext27:
  6237                           	opt stack 0
  6238  002B7E                     _ldexp:
  6239                           	opt stack 21
  6240                           
  6241                           ;incstack = 0
  6242  002B7E  503A               	movf	ldexp@value,w,c
  6243  002B80  103B               	iorwf	ldexp@value+1,w,c
  6244  002B82  103C               	iorwf	ldexp@value+2,w,c
  6245  002B84  A4D8               	btfss	status,2,c
  6246  002B86  D007               	goto	l1276
  6247  002B88  0E00               	movlw	0
  6248  002B8A  6E3A               	movwf	?_ldexp,c
  6249  002B8C  0E00               	movlw	0
  6250  002B8E  6E3B               	movwf	?_ldexp+1,c
  6251  002B90  0E00               	movlw	0
  6252  002B92  6E3C               	movwf	?_ldexp+2,c
  6253  002B94  0012               	return	
  6254  002B96                     l1276:
  6255  002B96  503C               	movf	ldexp@value+2,w,c
  6256  002B98  0B7F               	andlw	127
  6257  002B9A  6E3F               	movwf	??_ldexp& (0+255),c
  6258  002B9C  6A40               	clrf	(??_ldexp+1)& (0+255),c
  6259  002B9E  90D8               	bcf	status,0,c
  6260  002BA0  363F               	rlcf	??_ldexp,f,c
  6261  002BA2  3640               	rlcf	??_ldexp+1,f,c
  6262  002BA4  503F               	movf	??_ldexp,w,c
  6263  002BA6  263D               	addwf	ldexp@newexp,f,c
  6264  002BA8  5040               	movf	??_ldexp+1,w,c
  6265  002BAA  223E               	addwfc	ldexp@newexp+1,f,c
  6266  002BAC  AE3B               	btfss	ldexp@value+1,7,c
  6267  002BAE  D003               	goto	u3950
  6268  002BB0  6A3F               	clrf	??_ldexp& (0+255),c
  6269  002BB2  2A3F               	incf	??_ldexp& (0+255),f,c
  6270  002BB4  D001               	goto	u3958
  6271  002BB6                     u3950:
  6272  002BB6  6A3F               	clrf	??_ldexp& (0+255),c
  6273  002BB8                     u3958:
  6274  002BB8  503F               	movf	??_ldexp,w,c
  6275  002BBA  263D               	addwf	ldexp@newexp,f,c
  6276  002BBC  0E00               	movlw	0
  6277  002BBE  223E               	addwfc	ldexp@newexp+1,f,c
  6278  002BC0  AE3E               	btfss	ldexp@newexp+1,7,c
  6279  002BC2  D00C               	goto	l1278
  6280  002BC4  0E00               	movlw	0
  6281  002BC6  0100               	movlb	0	; () banked
  6282  002BC8  6F89               	movwf	(_errno+1)& (0+255),b
  6283  002BCA  0E22               	movlw	34
  6284  002BCC  6F88               	movwf	_errno& (0+255),b
  6285  002BCE  0E00               	movlw	0
  6286  002BD0  6E3A               	movwf	?_ldexp,c
  6287  002BD2  0E00               	movlw	0
  6288  002BD4  6E3B               	movwf	?_ldexp+1,c
  6289  002BD6  0E00               	movlw	0
  6290  002BD8                     L1:
  6291  002BD8  6E3C               	movwf	?_ldexp+2,c
  6292                           
  6293                           ; BSR set to: 0
  6294  002BDA  0012               	return	
  6295  002BDC                     l1278:
  6296                           
  6297                           ; BSR set to: 0
  6298  002BDC  BE3E               	btfsc	ldexp@newexp+1,7,c
  6299  002BDE  D016               	goto	l1280
  6300  002BE0  043E               	decf	ldexp@newexp+1,w,c
  6301  002BE2  A0D8               	btfss	status,0,c
  6302  002BE4  D013               	goto	l1280
  6303  002BE6  0E00               	movlw	0
  6304  002BE8  0100               	movlb	0	; () banked
  6305  002BEA  6F89               	movwf	(_errno+1)& (0+255),b
  6306  002BEC  0E22               	movlw	34
  6307  002BEE  6F88               	movwf	_errno& (0+255),b
  6308                           
  6309                           ; BSR set to: 0
  6310  002BF0  AE3C               	btfss	ldexp@value+2,7,c
  6311  002BF2  D006               	goto	l1281
  6312                           
  6313                           ; BSR set to: 0
  6314  002BF4  0EFF               	movlw	255
  6315  002BF6  6E3A               	movwf	?_ldexp,c
  6316  002BF8  0E7F               	movlw	127
  6317  002BFA  6E3B               	movwf	?_ldexp+1,c
  6318  002BFC  0EFF               	movlw	255
  6319  002BFE  D7EC               	goto	L1
  6320  002C00                     l1281:
  6321                           
  6322                           ; BSR set to: 0
  6323                           
  6324                           ; BSR set to: 0
  6325  002C00  0EFF               	movlw	255
  6326  002C02  6E3A               	movwf	?_ldexp,c
  6327  002C04  0E7F               	movlw	127
  6328  002C06  6E3B               	movwf	?_ldexp+1,c
  6329  002C08  0E7F               	movlw	127
  6330  002C0A  D7E6               	goto	L1
  6331  002C0C                     l1280:
  6332                           
  6333                           ; BSR set to: 0
  6334  002C0C  343E               	rlcf	ldexp@newexp+1,w,c
  6335  002C0E  303E               	rrcf	ldexp@newexp+1,w,c
  6336  002C10  6E40               	movwf	(??_ldexp+1)& (0+255),c
  6337  002C12  303D               	rrcf	ldexp@newexp,w,c
  6338  002C14  6E3F               	movwf	??_ldexp& (0+255),c
  6339  002C16  503C               	movf	ldexp@value+2,w,c
  6340  002C18  183F               	xorwf	??_ldexp,w,c
  6341  002C1A  0B80               	andlw	-128
  6342  002C1C  183F               	xorwf	??_ldexp,w,c
  6343  002C1E  6E3C               	movwf	ldexp@value+2,c
  6344  002C20  C03D  F03F         	movff	ldexp@newexp,??_ldexp
  6345  002C24  0E01               	movlw	1
  6346  002C26  163F               	andwf	??_ldexp,f,c
  6347  002C28  323F               	rrcf	??_ldexp,f,c
  6348  002C2A  323F               	rrcf	??_ldexp,f,c
  6349  002C2C  503B               	movf	ldexp@value+1,w,c
  6350  002C2E  183F               	xorwf	??_ldexp,w,c
  6351  002C30  0B7F               	andlw	-129
  6352  002C32  183F               	xorwf	??_ldexp,w,c
  6353  002C34  6E3B               	movwf	ldexp@value+1,c
  6354  002C36  C03A  F03A         	movff	ldexp@value,?_ldexp
  6355  002C3A  C03B  F03B         	movff	ldexp@value+1,?_ldexp+1
  6356  002C3E  C03C  F03C         	movff	ldexp@value+2,?_ldexp+2
  6357  002C42  0012               	return	
  6358  002C44                     __end_of_ldexp:
  6359                           	opt stack 0
  6360                           tblptru	equ	0xFF8
  6361                           tblptrh	equ	0xFF7
  6362                           tblptrl	equ	0xFF6
  6363                           tablat	equ	0xFF5
  6364                           prodh	equ	0xFF4
  6365                           prodl	equ	0xFF3
  6366                           intcon	equ	0xFF2
  6367                           postinc0	equ	0xFEE
  6368                           wreg	equ	0xFE8
  6369                           postinc1	equ	0xFE6
  6370                           postdec1	equ	0xFE5
  6371                           fsr1h	equ	0xFE2
  6372                           fsr1l	equ	0xFE1
  6373                           indf2	equ	0xFDF
  6374                           postinc2	equ	0xFDE
  6375                           postdec2	equ	0xFDD
  6376                           fsr2h	equ	0xFDA
  6377                           fsr2l	equ	0xFD9
  6378                           status	equ	0xFD8
  6379                           
  6380 ;; *************** function _floor *****************
  6381 ;; Defined at:
  6382 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  x               3   45[COMRAM] int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  i               3   48[COMRAM] int 
  6387 ;;  expon           2   51[COMRAM] int 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  3   45[COMRAM] int 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6397 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6398 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6400 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6401 ;;Total ram usage:        8 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    2
  6404 ;; This function calls:
  6405 ;;		___altoft
  6406 ;;		___ftadd
  6407 ;;		___ftge
  6408 ;;		___fttol
  6409 ;;		_frexp
  6410 ;; This function is called by:
  6411 ;;		_exp
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text28
  6416  0029CE                     __ptext28:
  6417                           	opt stack 0
  6418  0029CE                     _floor:
  6419                           	opt stack 19
  6420                           
  6421                           ;incstack = 0
  6422  0029CE  C02E  F001         	movff	floor@x,frexp@value
  6423  0029D2  C02F  F002         	movff	floor@x+1,frexp@value+1
  6424  0029D6  C030  F003         	movff	floor@x+2,frexp@value+2
  6425  0029DA  0E34               	movlw	low floor@expon
  6426  0029DC  6E04               	movwf	frexp@eptr,c
  6427  0029DE  0E00               	movlw	high floor@expon
  6428  0029E0  6E05               	movwf	frexp@eptr+1,c
  6429  0029E2  ECCD  F017         	call	_frexp	;wreg free
  6430  0029E6  AE35               	btfss	floor@expon+1,7,c
  6431  0029E8  D010               	goto	l1263
  6432  0029EA  AE30               	btfss	floor@x+2,7,c
  6433  0029EC  D007               	goto	l1264
  6434  0029EE  0E00               	movlw	0
  6435  0029F0  6E2E               	movwf	?_floor,c
  6436  0029F2  0E80               	movlw	128
  6437  0029F4  6E2F               	movwf	?_floor+1,c
  6438  0029F6  0EBF               	movlw	191
  6439  0029F8  6E30               	movwf	?_floor+2,c
  6440  0029FA  0012               	return	
  6441  0029FC                     l1264:
  6442  0029FC  0E00               	movlw	0
  6443  0029FE  6E2E               	movwf	?_floor,c
  6444  002A00  0E00               	movlw	0
  6445  002A02  6E2F               	movwf	?_floor+1,c
  6446  002A04  0E00               	movlw	0
  6447  002A06  6E30               	movwf	?_floor+2,c
  6448  002A08  0012               	return	
  6449  002A0A                     l1263:
  6450  002A0A  5035               	movf	floor@expon+1,w,c
  6451  002A0C  E104               	bnz	u3910
  6452  002A0E  0E15               	movlw	21
  6453  002A10  5C34               	subwf	floor@expon,w,c
  6454  002A12  A0D8               	btfss	status,0,c
  6455  002A14  D007               	goto	l1266
  6456  002A16                     u3910:
  6457  002A16  C02E  F02E         	movff	floor@x,?_floor
  6458  002A1A  C02F  F02F         	movff	floor@x+1,?_floor+1
  6459  002A1E  C030  F030         	movff	floor@x+2,?_floor+2
  6460  002A22  0012               	return	
  6461  002A24                     l1266:
  6462  002A24  C02E  F00D         	movff	floor@x,___fttol@f1
  6463  002A28  C02F  F00E         	movff	floor@x+1,___fttol@f1+1
  6464  002A2C  C030  F00F         	movff	floor@x+2,___fttol@f1+2
  6465  002A30  EC80  F013         	call	___fttol	;wreg free
  6466  002A34  C00D  F01C         	movff	?___fttol,___altoft@c
  6467  002A38  C00E  F01D         	movff	?___fttol+1,___altoft@c+1
  6468  002A3C  C00F  F01E         	movff	?___fttol+2,___altoft@c+2
  6469  002A40  C010  F01F         	movff	?___fttol+3,___altoft@c+3
  6470  002A44  EC35  F01A         	call	___altoft	;wreg free
  6471  002A48  C01C  F031         	movff	?___altoft,floor@i
  6472  002A4C  C01D  F032         	movff	?___altoft+1,floor@i+1
  6473  002A50  C01E  F033         	movff	?___altoft+2,floor@i+2
  6474  002A54  C02E  F001         	movff	floor@x,___ftge@ff1
  6475  002A58  C02F  F002         	movff	floor@x+1,___ftge@ff1+1
  6476  002A5C  C030  F003         	movff	floor@x+2,___ftge@ff1+2
  6477  002A60  C031  F004         	movff	floor@i,___ftge@ff2
  6478  002A64  C032  F005         	movff	floor@i+1,___ftge@ff2+1
  6479  002A68  C033  F006         	movff	floor@i+2,___ftge@ff2+2
  6480  002A6C  EC15  F018         	call	___ftge	;wreg free
  6481  002A70  B0D8               	btfsc	status,0,c
  6482  002A72  D015               	goto	l1267
  6483  002A74  C031  F022         	movff	floor@i,___ftadd@f1
  6484  002A78  C032  F023         	movff	floor@i+1,___ftadd@f1+1
  6485  002A7C  C033  F024         	movff	floor@i+2,___ftadd@f1+2
  6486  002A80  0E00               	movlw	0
  6487  002A82  6E25               	movwf	___ftadd@f2,c
  6488  002A84  0E80               	movlw	128
  6489  002A86  6E26               	movwf	___ftadd@f2+1,c
  6490  002A88  0EBF               	movlw	191
  6491  002A8A  6E27               	movwf	___ftadd@f2+2,c
  6492  002A8C  EC51  F00E         	call	___ftadd	;wreg free
  6493  002A90  C022  F02E         	movff	?___ftadd,?_floor
  6494  002A94  C023  F02F         	movff	?___ftadd+1,?_floor+1
  6495  002A98  C024  F030         	movff	?___ftadd+2,?_floor+2
  6496  002A9C  0012               	return	
  6497  002A9E                     l1267:
  6498  002A9E  C031  F02E         	movff	floor@i,?_floor
  6499  002AA2  C032  F02F         	movff	floor@i+1,?_floor+1
  6500  002AA6  C033  F030         	movff	floor@i+2,?_floor+2
  6501  002AAA  0012               	return		;funcret
  6502  002AAC                     __end_of_floor:
  6503                           	opt stack 0
  6504                           tblptru	equ	0xFF8
  6505                           tblptrh	equ	0xFF7
  6506                           tblptrl	equ	0xFF6
  6507                           tablat	equ	0xFF5
  6508                           prodh	equ	0xFF4
  6509                           prodl	equ	0xFF3
  6510                           intcon	equ	0xFF2
  6511                           postinc0	equ	0xFEE
  6512                           wreg	equ	0xFE8
  6513                           postinc1	equ	0xFE6
  6514                           postdec1	equ	0xFE5
  6515                           fsr1h	equ	0xFE2
  6516                           fsr1l	equ	0xFE1
  6517                           indf2	equ	0xFDF
  6518                           postinc2	equ	0xFDE
  6519                           postdec2	equ	0xFDD
  6520                           fsr2h	equ	0xFDA
  6521                           fsr2l	equ	0xFD9
  6522                           status	equ	0xFD8
  6523                           
  6524 ;; *************** function _frexp *****************
  6525 ;; Defined at:
  6526 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  value           3    0[COMRAM] int 
  6529 ;;  eptr            2    3[COMRAM] PTR int 
  6530 ;;		 -> log@exponent(2), floor@expon(2), 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;		None
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  3    0[COMRAM] PTR int 
  6535 ;; Registers used:
  6536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6542 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6545 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6546 ;;Total ram usage:        7 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_floor
  6552 ;;		_log
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           	psect	text29
  6557  002F9A                     __ptext29:
  6558                           	opt stack 0
  6559  002F9A                     _frexp:
  6560                           	opt stack 21
  6561                           
  6562                           ;incstack = 0
  6563  002F9A  5001               	movf	frexp@value,w,c
  6564  002F9C  1002               	iorwf	frexp@value+1,w,c
  6565  002F9E  1003               	iorwf	frexp@value+2,w,c
  6566  002FA0  A4D8               	btfss	status,2,c
  6567  002FA2  D00F               	goto	l1272
  6568  002FA4  C004  FFD9         	movff	frexp@eptr,fsr2l
  6569  002FA8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6570  002FAC  0E00               	movlw	0
  6571  002FAE  6EDE               	movwf	postinc2,c
  6572  002FB0  0E00               	movlw	0
  6573  002FB2  6EDD               	movwf	postdec2,c
  6574  002FB4  0E00               	movlw	0
  6575  002FB6  6E01               	movwf	?_frexp,c
  6576  002FB8  0E00               	movlw	0
  6577  002FBA  6E02               	movwf	?_frexp+1,c
  6578  002FBC  0E00               	movlw	0
  6579  002FBE  6E03               	movwf	?_frexp+2,c
  6580  002FC0  0012               	return	
  6581  002FC2                     l1272:
  6582  002FC2  5003               	movf	frexp@value+2,w,c
  6583  002FC4  0B7F               	andlw	127
  6584  002FC6  6E06               	movwf	??_frexp& (0+255),c
  6585  002FC8  6A07               	clrf	(??_frexp+1)& (0+255),c
  6586  002FCA  90D8               	bcf	status,0,c
  6587  002FCC  3606               	rlcf	??_frexp,f,c
  6588  002FCE  3607               	rlcf	??_frexp+1,f,c
  6589  002FD0  C004  FFD9         	movff	frexp@eptr,fsr2l
  6590  002FD4  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6591  002FD8  C006  FFDE         	movff	??_frexp,postinc2
  6592  002FDC  C007  FFDD         	movff	??_frexp+1,postdec2
  6593  002FE0  AE02               	btfss	frexp@value+1,7,c
  6594  002FE2  D003               	goto	u3720
  6595  002FE4  6A06               	clrf	??_frexp& (0+255),c
  6596  002FE6  2A06               	incf	??_frexp& (0+255),f,c
  6597  002FE8  D001               	goto	u3728
  6598  002FEA                     u3720:
  6599  002FEA  6A06               	clrf	??_frexp& (0+255),c
  6600  002FEC                     u3728:
  6601  002FEC  5006               	movf	??_frexp,w,c
  6602  002FEE  C004  FFD9         	movff	frexp@eptr,fsr2l
  6603  002FF2  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6604  002FF6  12DE               	iorwf	postinc2,f,c
  6605  002FF8  0E00               	movlw	0
  6606  002FFA  12DD               	iorwf	postdec2,f,c
  6607  002FFC  C004  FFD9         	movff	frexp@eptr,fsr2l
  6608  003000  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6609  003004  0E82               	movlw	130
  6610  003006  26DE               	addwf	postinc2,f,c
  6611  003008  0EFF               	movlw	255
  6612  00300A  22DD               	addwfc	postdec2,f,c
  6613  00300C  8003               	bsf	frexp@value+2,0,c
  6614  00300E  8203               	bsf	frexp@value+2,1,c
  6615  003010  8403               	bsf	frexp@value+2,2,c
  6616  003012  8603               	bsf	frexp@value+2,3,c
  6617  003014  8803               	bsf	frexp@value+2,4,c
  6618  003016  8A03               	bsf	frexp@value+2,5,c
  6619  003018  9C03               	bcf	frexp@value+2,6,c
  6620  00301A  9E02               	bcf	frexp@value+1,7,c
  6621  00301C  C001  F001         	movff	frexp@value,?_frexp
  6622  003020  C002  F002         	movff	frexp@value+1,?_frexp+1
  6623  003024  C003  F003         	movff	frexp@value+2,?_frexp+2
  6624  003028  0012               	return	
  6625  00302A                     __end_of_frexp:
  6626                           	opt stack 0
  6627                           tblptru	equ	0xFF8
  6628                           tblptrh	equ	0xFF7
  6629                           tblptrl	equ	0xFF6
  6630                           tablat	equ	0xFF5
  6631                           prodh	equ	0xFF4
  6632                           prodl	equ	0xFF3
  6633                           intcon	equ	0xFF2
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           postinc1	equ	0xFE6
  6637                           postdec1	equ	0xFE5
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function ___fttol *****************
  6648 ;; Defined at:
  6649 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  f1              3   12[COMRAM] float 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  lval            4   22[COMRAM] unsigned long 
  6654 ;;  exp1            1   26[COMRAM] unsigned char 
  6655 ;;  sign1           1   21[COMRAM] unsigned char 
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  4   12[COMRAM] long 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2, status,0
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6667 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6668 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6669 ;;Total ram usage:       15 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_covertir_valores_de_array_a_escala_decimal
  6675 ;;		_pow
  6676 ;;		_exp
  6677 ;;		_floor
  6678 ;; This function uses a non-reentrant model
  6679 ;;
  6680                           
  6681                           	psect	text30
  6682  002700                     __ptext30:
  6683                           	opt stack 0
  6684  002700                     ___fttol:
  6685                           	opt stack 20
  6686                           
  6687                           ;incstack = 0
  6688  002700  C00F  F011         	movff	___fttol@f1+2,??___fttol
  6689  002704  6A12               	clrf	(??___fttol+1)& (0+255),c
  6690  002706  6A13               	clrf	(??___fttol+2)& (0+255),c
  6691  002708  340E               	rlcf	___fttol@f1+1,w,c
  6692  00270A  3611               	rlcf	??___fttol& (0+255),f,c
  6693  00270C  E301               	bnc	u3631
  6694  00270E  8012               	bsf	(??___fttol+1)& (0+255),0,c
  6695  002710                     u3631:
  6696  002710  5011               	movf	??___fttol,w,c
  6697  002712  6E1B               	movwf	___fttol@exp1,c
  6698  002714  501B               	movf	___fttol@exp1,w,c
  6699  002716  A4D8               	btfss	status,2,c
  6700  002718  D009               	goto	l968
  6701  00271A  0E00               	movlw	0
  6702  00271C  6E0D               	movwf	?___fttol,c
  6703  00271E  0E00               	movlw	0
  6704  002720  6E0E               	movwf	?___fttol+1,c
  6705  002722  0E00               	movlw	0
  6706  002724  6E0F               	movwf	?___fttol+2,c
  6707  002726  0E00               	movlw	0
  6708  002728  6E10               	movwf	?___fttol+3,c
  6709  00272A  0012               	return	
  6710  00272C                     l968:
  6711  00272C  0E17               	movlw	23
  6712  00272E  6E11               	movwf	??___fttol& (0+255),c
  6713  002730  C00D  F012         	movff	___fttol@f1,??___fttol+1
  6714  002734  C00E  F013         	movff	___fttol@f1+1,??___fttol+2
  6715  002738  C00F  F014         	movff	___fttol@f1+2,??___fttol+3
  6716  00273C  2811               	incf	??___fttol,w,c
  6717  00273E  6E15               	movwf	(??___fttol+4)& (0+255),c
  6718  002740  D004               	goto	u3650
  6719  002742                     u3655:
  6720  002742  90D8               	bcf	status,0,c
  6721  002744  3214               	rrcf	??___fttol+3,f,c
  6722  002746  3213               	rrcf	??___fttol+2,f,c
  6723  002748  3212               	rrcf	??___fttol+1,f,c
  6724  00274A                     u3650:
  6725  00274A  2E15               	decfsz	(??___fttol+4)& (0+255),f,c
  6726  00274C  D7FA               	goto	u3655
  6727  00274E  5012               	movf	??___fttol+1,w,c
  6728  002750  6E16               	movwf	___fttol@sign1,c
  6729  002752  8E0E               	bsf	___fttol@f1+1,7,c
  6730  002754  0EFF               	movlw	255
  6731  002756  160D               	andwf	___fttol@f1,f,c
  6732  002758  0EFF               	movlw	255
  6733  00275A  160E               	andwf	___fttol@f1+1,f,c
  6734  00275C  0E00               	movlw	0
  6735  00275E  160F               	andwf	___fttol@f1+2,f,c
  6736  002760  500D               	movf	___fttol@f1,w,c
  6737  002762  6E17               	movwf	___fttol@lval,c
  6738  002764  500E               	movf	___fttol@f1+1,w,c
  6739  002766  6E18               	movwf	___fttol@lval+1,c
  6740  002768  500F               	movf	___fttol@f1+2,w,c
  6741  00276A  6E19               	movwf	___fttol@lval+2,c
  6742  00276C  6A1A               	clrf	___fttol@lval+3,c
  6743  00276E  0E8E               	movlw	142
  6744  002770  5E1B               	subwf	___fttol@exp1,f,c
  6745  002772  AE1B               	btfss	___fttol@exp1,7,c
  6746  002774  D016               	goto	l970
  6747  002776  501B               	movf	___fttol@exp1,w,c
  6748  002778  0A80               	xorlw	128
  6749  00277A  0F8F               	addlw	143
  6750  00277C  B0D8               	btfsc	status,0,c
  6751  00277E  D009               	goto	l971
  6752  002780  0E00               	movlw	0
  6753  002782  6E0D               	movwf	?___fttol,c
  6754  002784  0E00               	movlw	0
  6755  002786  6E0E               	movwf	?___fttol+1,c
  6756  002788  0E00               	movlw	0
  6757  00278A  6E0F               	movwf	?___fttol+2,c
  6758  00278C  0E00               	movlw	0
  6759  00278E  6E10               	movwf	?___fttol+3,c
  6760  002790  0012               	return	
  6761  002792                     l971:
  6762  002792  90D8               	bcf	status,0,c
  6763  002794  321A               	rrcf	___fttol@lval+3,f,c
  6764  002796  3219               	rrcf	___fttol@lval+2,f,c
  6765  002798  3218               	rrcf	___fttol@lval+1,f,c
  6766  00279A  3217               	rrcf	___fttol@lval,f,c
  6767  00279C  3E1B               	incfsz	___fttol@exp1,f,c
  6768  00279E  D7F9               	goto	l971
  6769  0027A0  D015               	goto	u3690
  6770  0027A2                     l970:
  6771  0027A2  0E17               	movlw	23
  6772  0027A4  641B               	cpfsgt	___fttol@exp1,c
  6773  0027A6  D00F               	goto	l976
  6774  0027A8  0E00               	movlw	0
  6775  0027AA  6E0D               	movwf	?___fttol,c
  6776  0027AC  0E00               	movlw	0
  6777  0027AE  6E0E               	movwf	?___fttol+1,c
  6778  0027B0  0E00               	movlw	0
  6779  0027B2  6E0F               	movwf	?___fttol+2,c
  6780  0027B4  0E00               	movlw	0
  6781  0027B6  6E10               	movwf	?___fttol+3,c
  6782  0027B8  0012               	return	
  6783  0027BA  90D8               	bcf	status,0,c
  6784  0027BC  3617               	rlcf	___fttol@lval,f,c
  6785  0027BE  3618               	rlcf	___fttol@lval+1,f,c
  6786  0027C0  3619               	rlcf	___fttol@lval+2,f,c
  6787  0027C2  361A               	rlcf	___fttol@lval+3,f,c
  6788  0027C4  061B               	decf	___fttol@exp1,f,c
  6789  0027C6                     l976:
  6790  0027C6  501B               	movf	___fttol@exp1,w,c
  6791  0027C8  A4D8               	btfss	status,2,c
  6792  0027CA  D7F7               	goto	l977
  6793  0027CC                     u3690:
  6794  0027CC  5016               	movf	___fttol@sign1,w,c
  6795  0027CE  B4D8               	btfsc	status,2,c
  6796  0027D0  D008               	goto	l979
  6797  0027D2  1E1A               	comf	___fttol@lval+3,f,c
  6798  0027D4  1E19               	comf	___fttol@lval+2,f,c
  6799  0027D6  1E18               	comf	___fttol@lval+1,f,c
  6800  0027D8  6C17               	negf	___fttol@lval,c
  6801  0027DA  0E00               	movlw	0
  6802  0027DC  2218               	addwfc	___fttol@lval+1,f,c
  6803  0027DE  2219               	addwfc	___fttol@lval+2,f,c
  6804  0027E0  221A               	addwfc	___fttol@lval+3,f,c
  6805  0027E2                     l979:
  6806  0027E2  C017  F00D         	movff	___fttol@lval,?___fttol
  6807  0027E6  C018  F00E         	movff	___fttol@lval+1,?___fttol+1
  6808  0027EA  C019  F00F         	movff	___fttol@lval+2,?___fttol+2
  6809  0027EE  C01A  F010         	movff	___fttol@lval+3,?___fttol+3
  6810  0027F2  0012               	return	
  6811  0027F4                     __end_of___fttol:
  6812                           	opt stack 0
  6813                           tblptru	equ	0xFF8
  6814                           tblptrh	equ	0xFF7
  6815                           tblptrl	equ	0xFF6
  6816                           tablat	equ	0xFF5
  6817                           prodh	equ	0xFF4
  6818                           prodl	equ	0xFF3
  6819                           intcon	equ	0xFF2
  6820                           postinc0	equ	0xFEE
  6821                           wreg	equ	0xFE8
  6822                           postinc1	equ	0xFE6
  6823                           postdec1	equ	0xFE5
  6824                           fsr1h	equ	0xFE2
  6825                           fsr1l	equ	0xFE1
  6826                           indf2	equ	0xFDF
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function ___ftge *****************
  6834 ;; Defined at:
  6835 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  ff1             3    0[COMRAM] float 
  6838 ;;  ff2             3    3[COMRAM] float 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;		None               void
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6850 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6852 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6853 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;Total ram usage:        9 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_pow
  6860 ;;		_exp
  6861 ;;		_floor
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text31
  6866  00302A                     __ptext31:
  6867                           	opt stack 0
  6868  00302A                     ___ftge:
  6869                           	opt stack 20
  6870                           
  6871                           ;incstack = 0
  6872  00302A  AE03               	btfss	___ftge@ff1+2,7,c
  6873  00302C  D016               	goto	l940
  6874  00302E  C001  F007         	movff	___ftge@ff1,??___ftge
  6875  003032  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  6876  003036  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  6877  00303A  1E07               	comf	??___ftge,f,c
  6878  00303C  1E08               	comf	??___ftge+1,f,c
  6879  00303E  1E09               	comf	??___ftge+2,f,c
  6880  003040  2A07               	incf	??___ftge,f,c
  6881  003042  0E00               	movlw	0
  6882  003044  2208               	addwfc	??___ftge+1,f,c
  6883  003046  2209               	addwfc	??___ftge+2,f,c
  6884  003048  0E00               	movlw	0
  6885  00304A  2407               	addwf	??___ftge,w,c
  6886  00304C  6E01               	movwf	___ftge@ff1,c
  6887  00304E  0E00               	movlw	0
  6888  003050  2008               	addwfc	??___ftge+1,w,c
  6889  003052  6E02               	movwf	___ftge@ff1+1,c
  6890  003054  0E80               	movlw	128
  6891  003056  2009               	addwfc	??___ftge+2,w,c
  6892  003058  6E03               	movwf	___ftge@ff1+2,c
  6893  00305A                     l940:
  6894  00305A  AE06               	btfss	___ftge@ff2+2,7,c
  6895  00305C  D016               	goto	l941
  6896  00305E  C004  F007         	movff	___ftge@ff2,??___ftge
  6897  003062  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  6898  003066  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  6899  00306A  1E07               	comf	??___ftge,f,c
  6900  00306C  1E08               	comf	??___ftge+1,f,c
  6901  00306E  1E09               	comf	??___ftge+2,f,c
  6902  003070  2A07               	incf	??___ftge,f,c
  6903  003072  0E00               	movlw	0
  6904  003074  2208               	addwfc	??___ftge+1,f,c
  6905  003076  2209               	addwfc	??___ftge+2,f,c
  6906  003078  0E00               	movlw	0
  6907  00307A  2407               	addwf	??___ftge,w,c
  6908  00307C  6E04               	movwf	___ftge@ff2,c
  6909  00307E  0E00               	movlw	0
  6910  003080  2008               	addwfc	??___ftge+1,w,c
  6911  003082  6E05               	movwf	___ftge@ff2+1,c
  6912  003084  0E80               	movlw	128
  6913  003086  2009               	addwfc	??___ftge+2,w,c
  6914  003088  6E06               	movwf	___ftge@ff2+2,c
  6915  00308A                     l941:
  6916  00308A  0E00               	movlw	0
  6917  00308C  1A01               	xorwf	___ftge@ff1,f,c
  6918  00308E  0E00               	movlw	0
  6919  003090  1A02               	xorwf	___ftge@ff1+1,f,c
  6920  003092  0E80               	movlw	128
  6921  003094  1A03               	xorwf	___ftge@ff1+2,f,c
  6922  003096  0E00               	movlw	0
  6923  003098  1A04               	xorwf	___ftge@ff2,f,c
  6924  00309A  0E00               	movlw	0
  6925  00309C  1A05               	xorwf	___ftge@ff2+1,f,c
  6926  00309E  0E80               	movlw	128
  6927  0030A0  1A06               	xorwf	___ftge@ff2+2,f,c
  6928  0030A2  5004               	movf	___ftge@ff2,w,c
  6929  0030A4  5C01               	subwf	___ftge@ff1,w,c
  6930  0030A6  5005               	movf	___ftge@ff2+1,w,c
  6931  0030A8  5802               	subwfb	___ftge@ff1+1,w,c
  6932  0030AA  5006               	movf	___ftge@ff2+2,w,c
  6933  0030AC  5803               	subwfb	___ftge@ff1+2,w,c
  6934  0030AE  B0D8               	btfsc	status,0,c
  6935  0030B0  D002               	goto	l3269
  6936  0030B2  90D8               	bcf	status,0,c
  6937  0030B4  0012               	return	
  6938  0030B6                     l3269:
  6939  0030B6  80D8               	bsf	status,0,c
  6940  0030B8  0012               	return	
  6941  0030BA                     __end_of___ftge:
  6942                           	opt stack 0
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           prodh	equ	0xFF4
  6948                           prodl	equ	0xFF3
  6949                           intcon	equ	0xFF2
  6950                           postinc0	equ	0xFEE
  6951                           wreg	equ	0xFE8
  6952                           postinc1	equ	0xFE6
  6953                           postdec1	equ	0xFE5
  6954                           fsr1h	equ	0xFE2
  6955                           fsr1l	equ	0xFE1
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function ___altoft *****************
  6964 ;; Defined at:
  6965 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  c               4   27[COMRAM] long 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  sign            1   36[COMRAM] unsigned char 
  6970 ;;  exp             1   35[COMRAM] unsigned char 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  3   27[COMRAM] float 
  6973 ;; Registers used:
  6974 ;;		wreg, status,2, status,0, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6982 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;Total ram usage:       10 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    1
  6987 ;; This function calls:
  6988 ;;		___ftpack
  6989 ;; This function is called by:
  6990 ;;		_floor
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text32
  6995  00346A                     __ptext32:
  6996                           	opt stack 0
  6997  00346A                     ___altoft:
  6998                           	opt stack 19
  6999                           
  7000                           ;incstack = 0
  7001  00346A  0E00               	movlw	0
  7002  00346C  6E25               	movwf	___altoft@sign,c
  7003  00346E  0E8E               	movlw	142
  7004  003470  6E24               	movwf	___altoft@exp,c
  7005  003472  AE1F               	btfss	___altoft@c+3,7,c
  7006  003474  D011               	goto	l717
  7007  003476  1E1F               	comf	___altoft@c+3,f,c
  7008  003478  1E1E               	comf	___altoft@c+2,f,c
  7009  00347A  1E1D               	comf	___altoft@c+1,f,c
  7010  00347C  6C1C               	negf	___altoft@c,c
  7011  00347E  0E00               	movlw	0
  7012  003480  221D               	addwfc	___altoft@c+1,f,c
  7013  003482  221E               	addwfc	___altoft@c+2,f,c
  7014  003484  221F               	addwfc	___altoft@c+3,f,c
  7015  003486  0E01               	movlw	1
  7016  003488  6E25               	movwf	___altoft@sign,c
  7017  00348A  D006               	goto	l717
  7018  00348C  90D8               	bcf	status,0,c
  7019  00348E  321F               	rrcf	___altoft@c+3,f,c
  7020  003490  321E               	rrcf	___altoft@c+2,f,c
  7021  003492  321D               	rrcf	___altoft@c+1,f,c
  7022  003494  321C               	rrcf	___altoft@c,f,c
  7023  003496  2A24               	incf	___altoft@exp,f,c
  7024  003498                     l717:
  7025  003498  0E00               	movlw	0
  7026  00349A  141C               	andwf	___altoft@c,w,c
  7027  00349C  6E20               	movwf	??___altoft& (0+255),c
  7028  00349E  0E00               	movlw	0
  7029  0034A0  141D               	andwf	___altoft@c+1,w,c
  7030  0034A2  6E21               	movwf	(??___altoft+1)& (0+255),c
  7031  0034A4  0E00               	movlw	0
  7032  0034A6  141E               	andwf	___altoft@c+2,w,c
  7033  0034A8  6E22               	movwf	(??___altoft+2)& (0+255),c
  7034  0034AA  0EFF               	movlw	255
  7035  0034AC  141F               	andwf	___altoft@c+3,w,c
  7036  0034AE  6E23               	movwf	(??___altoft+3)& (0+255),c
  7037  0034B0  5020               	movf	??___altoft,w,c
  7038  0034B2  1021               	iorwf	??___altoft+1,w,c
  7039  0034B4  1022               	iorwf	??___altoft+2,w,c
  7040  0034B6  1023               	iorwf	??___altoft+3,w,c
  7041  0034B8  A4D8               	btfss	status,2,c
  7042  0034BA  D7E8               	goto	l718
  7043  0034BC  C01C  F001         	movff	___altoft@c,___ftpack@arg
  7044  0034C0  C01D  F002         	movff	___altoft@c+1,___ftpack@arg+1
  7045  0034C4  C01E  F003         	movff	___altoft@c+2,___ftpack@arg+2
  7046  0034C8  C024  F004         	movff	___altoft@exp,___ftpack@exp
  7047  0034CC  C025  F005         	movff	___altoft@sign,___ftpack@sign
  7048  0034D0  EC84  F016         	call	___ftpack	;wreg free
  7049  0034D4  C001  F01C         	movff	?___ftpack,?___altoft
  7050  0034D8  C002  F01D         	movff	?___ftpack+1,?___altoft+1
  7051  0034DC  C003  F01E         	movff	?___ftpack+2,?___altoft+2
  7052  0034E0  0012               	return	
  7053  0034E2                     __end_of___altoft:
  7054                           	opt stack 0
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           intcon	equ	0xFF2
  7062                           postinc0	equ	0xFEE
  7063                           wreg	equ	0xFE8
  7064                           postinc1	equ	0xFE6
  7065                           postdec1	equ	0xFE5
  7066                           fsr1h	equ	0xFE2
  7067                           fsr1l	equ	0xFE1
  7068                           indf2	equ	0xFDF
  7069                           postinc2	equ	0xFDE
  7070                           postdec2	equ	0xFDD
  7071                           fsr2h	equ	0xFDA
  7072                           fsr2l	equ	0xFD9
  7073                           status	equ	0xFD8
  7074                           
  7075 ;; *************** function _eval_poly *****************
  7076 ;; Defined at:
  7077 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  x               3   45[COMRAM] float 
  7080 ;;  d               2   48[COMRAM] PTR const 
  7081 ;;		 -> log@coeff(27), exp@coeff(30), 
  7082 ;;  n               2   50[COMRAM] int 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  res             3   54[COMRAM] int 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  3   45[COMRAM] int 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7094 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7095 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7098 ;;Total ram usage:       12 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    2
  7101 ;; This function calls:
  7102 ;;		___ftadd
  7103 ;;		___ftmul
  7104 ;;		___wmul
  7105 ;; This function is called by:
  7106 ;;		_exp
  7107 ;;		_log
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text33
  7112  002AAC                     __ptext33:
  7113                           	opt stack 0
  7114  002AAC                     _eval_poly:
  7115                           	opt stack 19
  7116                           
  7117                           ;incstack = 0
  7118  002AAC  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7119  002AB0  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7120  002AB4  0E00               	movlw	0
  7121  002AB6  6E1F               	movwf	___wmul@multiplicand+1,c
  7122  002AB8  0E03               	movlw	3
  7123  002ABA  6E1E               	movwf	___wmul@multiplicand,c
  7124  002ABC  EC0B  F01D         	call	___wmul	;wreg free
  7125  002AC0  C031  F035         	movff	eval_poly@d,??_eval_poly
  7126  002AC4  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7127  002AC8  501C               	movf	?___wmul,w,c
  7128  002ACA  2635               	addwf	??_eval_poly,f,c
  7129  002ACC  501D               	movf	?___wmul+1,w,c
  7130  002ACE  2236               	addwfc	??_eval_poly+1,f,c
  7131  002AD0  C035  FFF6         	movff	??_eval_poly,tblptrl
  7132  002AD4  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7133  002AD8                     	if	0	;tblptru may be non-zero
  7134  002AD8                     	endif
  7135  002AD8                     	if	0	;tblptru may be non-zero
  7136  002AD8                     	endif
  7137  002AD8  0009               	tblrd		*+
  7138  002ADA  CFF5 F037          	movff	tablat,eval_poly@res
  7139  002ADE  0009               	tblrd		*+
  7140  002AE0  CFF5 F038          	movff	tablat,eval_poly@res+1
  7141  002AE4  000A               	tblrd		*-
  7142  002AE6  CFF5 F039          	movff	tablat,eval_poly@res+2
  7143  002AEA  D03E               	goto	l1302
  7144  002AEC  C037  F010         	movff	eval_poly@res,___ftmul@f2
  7145  002AF0  C038  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  7146  002AF4  C039  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  7147  002AF8  C02E  F00D         	movff	eval_poly@x,___ftmul@f1
  7148  002AFC  C02F  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  7149  002B00  C030  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  7150  002B04  ECFA  F013         	call	___ftmul	;wreg free
  7151  002B08  C00D  F022         	movff	?___ftmul,___ftadd@f1
  7152  002B0C  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  7153  002B10  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  7154  002B14  0E00               	movlw	0
  7155  002B16  6E1F               	movwf	___wmul@multiplicand+1,c
  7156  002B18  0E03               	movlw	3
  7157  002B1A  6E1E               	movwf	___wmul@multiplicand,c
  7158  002B1C  0633               	decf	eval_poly@n,f,c
  7159  002B1E  A0D8               	btfss	status,0,c
  7160  002B20  0634               	decf	eval_poly@n+1,f,c
  7161  002B22  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7162  002B26  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7163  002B2A  EC0B  F01D         	call	___wmul	;wreg free
  7164  002B2E  C031  F035         	movff	eval_poly@d,??_eval_poly
  7165  002B32  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7166  002B36  501C               	movf	?___wmul,w,c
  7167  002B38  2635               	addwf	??_eval_poly,f,c
  7168  002B3A  501D               	movf	?___wmul+1,w,c
  7169  002B3C  2236               	addwfc	??_eval_poly+1,f,c
  7170  002B3E  C035  FFF6         	movff	??_eval_poly,tblptrl
  7171  002B42  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7172  002B46                     	if	0	;tblptru may be non-zero
  7173  002B46                     	endif
  7174  002B46                     	if	0	;tblptru may be non-zero
  7175  002B46                     	endif
  7176  002B46  0009               	tblrd		*+
  7177  002B48  CFF5 F025          	movff	tablat,___ftadd@f2
  7178  002B4C  0009               	tblrd		*+
  7179  002B4E  CFF5 F026          	movff	tablat,___ftadd@f2+1
  7180  002B52  000A               	tblrd		*-
  7181  002B54  CFF5 F027          	movff	tablat,___ftadd@f2+2
  7182  002B58  EC51  F00E         	call	___ftadd	;wreg free
  7183  002B5C  C022  F037         	movff	?___ftadd,eval_poly@res
  7184  002B60  C023  F038         	movff	?___ftadd+1,eval_poly@res+1
  7185  002B64  C024  F039         	movff	?___ftadd+2,eval_poly@res+2
  7186  002B68                     l1302:
  7187  002B68  5033               	movf	eval_poly@n,w,c
  7188  002B6A  1034               	iorwf	eval_poly@n+1,w,c
  7189  002B6C  A4D8               	btfss	status,2,c
  7190  002B6E  D7BE               	goto	l1303
  7191  002B70  C037  F02E         	movff	eval_poly@res,?_eval_poly
  7192  002B74  C038  F02F         	movff	eval_poly@res+1,?_eval_poly+1
  7193  002B78  C039  F030         	movff	eval_poly@res+2,?_eval_poly+2
  7194  002B7C  0012               	return		;funcret
  7195  002B7E                     __end_of_eval_poly:
  7196                           	opt stack 0
  7197                           tblptru	equ	0xFF8
  7198                           tblptrh	equ	0xFF7
  7199                           tblptrl	equ	0xFF6
  7200                           tablat	equ	0xFF5
  7201                           prodh	equ	0xFF4
  7202                           prodl	equ	0xFF3
  7203                           intcon	equ	0xFF2
  7204                           postinc0	equ	0xFEE
  7205                           wreg	equ	0xFE8
  7206                           postinc1	equ	0xFE6
  7207                           postdec1	equ	0xFE5
  7208                           fsr1h	equ	0xFE2
  7209                           fsr1l	equ	0xFE1
  7210                           indf2	equ	0xFDF
  7211                           postinc2	equ	0xFDE
  7212                           postdec2	equ	0xFDD
  7213                           fsr2h	equ	0xFDA
  7214                           fsr2l	equ	0xFD9
  7215                           status	equ	0xFD8
  7216                           
  7217 ;; *************** function ___ftmul *****************
  7218 ;; Defined at:
  7219 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  f1              3   12[COMRAM] float 
  7222 ;;  f2              3   15[COMRAM] float 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  7225 ;;  sign            1   26[COMRAM] unsigned char 
  7226 ;;  cntr            1   25[COMRAM] unsigned char 
  7227 ;;  exp             1   21[COMRAM] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  3   12[COMRAM] float 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7237 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7239 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7241 ;;Total ram usage:       15 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    1
  7244 ;; This function calls:
  7245 ;;		___ftpack
  7246 ;; This function is called by:
  7247 ;;		_pow
  7248 ;;		_exp
  7249 ;;		_log
  7250 ;;		_eval_poly
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text34
  7255  0027F4                     __ptext34:
  7256                           	opt stack 0
  7257  0027F4                     ___ftmul:
  7258                           	opt stack 19
  7259                           
  7260                           ;incstack = 0
  7261  0027F4  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  7262  0027F8  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7263  0027FA  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7264  0027FC  340E               	rlcf	___ftmul@f1+1,w,c
  7265  0027FE  3613               	rlcf	??___ftmul& (0+255),f,c
  7266  002800  E301               	bnc	u3541
  7267  002802  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7268  002804                     u3541:
  7269  002804  5013               	movf	??___ftmul,w,c
  7270  002806  6E16               	movwf	___ftmul@exp,c
  7271  002808  5016               	movf	___ftmul@exp,w,c
  7272  00280A  A4D8               	btfss	status,2,c
  7273  00280C  D007               	goto	l947
  7274  00280E  0E00               	movlw	0
  7275  002810  6E0D               	movwf	?___ftmul,c
  7276  002812  0E00               	movlw	0
  7277  002814  6E0E               	movwf	?___ftmul+1,c
  7278  002816  0E00               	movlw	0
  7279  002818  6E0F               	movwf	?___ftmul+2,c
  7280  00281A  0012               	return	
  7281  00281C                     l947:
  7282  00281C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  7283  002820  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7284  002822  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7285  002824  3411               	rlcf	___ftmul@f2+1,w,c
  7286  002826  3613               	rlcf	??___ftmul& (0+255),f,c
  7287  002828  E301               	bnc	u3561
  7288  00282A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7289  00282C                     u3561:
  7290  00282C  5013               	movf	??___ftmul,w,c
  7291  00282E  6E1B               	movwf	___ftmul@sign,c
  7292  002830  501B               	movf	___ftmul@sign,w,c
  7293  002832  A4D8               	btfss	status,2,c
  7294  002834  D007               	goto	l949
  7295  002836  0E00               	movlw	0
  7296  002838  6E0D               	movwf	?___ftmul,c
  7297  00283A  0E00               	movlw	0
  7298  00283C  6E0E               	movwf	?___ftmul+1,c
  7299  00283E  0E00               	movlw	0
  7300  002840  6E0F               	movwf	?___ftmul+2,c
  7301  002842  0012               	return	
  7302  002844                     l949:
  7303  002844  501B               	movf	___ftmul@sign,w,c
  7304  002846  0F7B               	addlw	123
  7305  002848  2616               	addwf	___ftmul@exp,f,c
  7306  00284A  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  7307  00284E  5012               	movf	___ftmul@f2+2,w,c
  7308  002850  1A1B               	xorwf	___ftmul@sign,f,c
  7309  002852  0E80               	movlw	128
  7310  002854  161B               	andwf	___ftmul@sign,f,c
  7311  002856  8E0E               	bsf	___ftmul@f1+1,7,c
  7312  002858  8E11               	bsf	___ftmul@f2+1,7,c
  7313  00285A  0EFF               	movlw	255
  7314  00285C  1610               	andwf	___ftmul@f2,f,c
  7315  00285E  0EFF               	movlw	255
  7316  002860  1611               	andwf	___ftmul@f2+1,f,c
  7317  002862  0E00               	movlw	0
  7318  002864  1612               	andwf	___ftmul@f2+2,f,c
  7319  002866  0E00               	movlw	0
  7320  002868  6E17               	movwf	___ftmul@f3_as_product,c
  7321  00286A  0E00               	movlw	0
  7322  00286C  6E18               	movwf	___ftmul@f3_as_product+1,c
  7323  00286E  0E00               	movlw	0
  7324  002870  6E19               	movwf	___ftmul@f3_as_product+2,c
  7325  002872  0E07               	movlw	7
  7326  002874  6E1A               	movwf	___ftmul@cntr,c
  7327  002876  A00D               	btfss	___ftmul@f1,0,c
  7328  002878  D006               	goto	l951
  7329  00287A  5010               	movf	___ftmul@f2,w,c
  7330  00287C  2617               	addwf	___ftmul@f3_as_product,f,c
  7331  00287E  5011               	movf	___ftmul@f2+1,w,c
  7332  002880  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7333  002882  5012               	movf	___ftmul@f2+2,w,c
  7334  002884  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7335  002886                     l951:
  7336  002886  90D8               	bcf	status,0,c
  7337  002888  320F               	rrcf	___ftmul@f1+2,f,c
  7338  00288A  320E               	rrcf	___ftmul@f1+1,f,c
  7339  00288C  320D               	rrcf	___ftmul@f1,f,c
  7340  00288E  90D8               	bcf	status,0,c
  7341  002890  3610               	rlcf	___ftmul@f2,f,c
  7342  002892  3611               	rlcf	___ftmul@f2+1,f,c
  7343  002894  3612               	rlcf	___ftmul@f2+2,f,c
  7344  002896  2E1A               	decfsz	___ftmul@cntr,f,c
  7345  002898  D7EE               	goto	l950
  7346  00289A  0E09               	movlw	9
  7347  00289C  6E1A               	movwf	___ftmul@cntr,c
  7348  00289E  A00D               	btfss	___ftmul@f1,0,c
  7349  0028A0  D006               	goto	l954
  7350  0028A2  5010               	movf	___ftmul@f2,w,c
  7351  0028A4  2617               	addwf	___ftmul@f3_as_product,f,c
  7352  0028A6  5011               	movf	___ftmul@f2+1,w,c
  7353  0028A8  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7354  0028AA  5012               	movf	___ftmul@f2+2,w,c
  7355  0028AC  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7356  0028AE                     l954:
  7357  0028AE  90D8               	bcf	status,0,c
  7358  0028B0  320F               	rrcf	___ftmul@f1+2,f,c
  7359  0028B2  320E               	rrcf	___ftmul@f1+1,f,c
  7360  0028B4  320D               	rrcf	___ftmul@f1,f,c
  7361  0028B6  90D8               	bcf	status,0,c
  7362  0028B8  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  7363  0028BA  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  7364  0028BC  3217               	rrcf	___ftmul@f3_as_product,f,c
  7365  0028BE  2E1A               	decfsz	___ftmul@cntr,f,c
  7366  0028C0  D7EE               	goto	l953
  7367  0028C2  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  7368  0028C6  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7369  0028CA  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7370  0028CE  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  7371  0028D2  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  7372  0028D6  EC84  F016         	call	___ftpack	;wreg free
  7373  0028DA  C001  F00D         	movff	?___ftpack,?___ftmul
  7374  0028DE  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  7375  0028E2  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  7376  0028E6  0012               	return	
  7377  0028E8                     __end_of___ftmul:
  7378                           	opt stack 0
  7379                           tblptru	equ	0xFF8
  7380                           tblptrh	equ	0xFF7
  7381                           tblptrl	equ	0xFF6
  7382                           tablat	equ	0xFF5
  7383                           prodh	equ	0xFF4
  7384                           prodl	equ	0xFF3
  7385                           intcon	equ	0xFF2
  7386                           postinc0	equ	0xFEE
  7387                           wreg	equ	0xFE8
  7388                           postinc1	equ	0xFE6
  7389                           postdec1	equ	0xFE5
  7390                           fsr1h	equ	0xFE2
  7391                           fsr1l	equ	0xFE1
  7392                           indf2	equ	0xFDF
  7393                           postinc2	equ	0xFDE
  7394                           postdec2	equ	0xFDD
  7395                           fsr2h	equ	0xFDA
  7396                           fsr2l	equ	0xFD9
  7397                           status	equ	0xFD8
  7398                           
  7399 ;; *************** function ___ftsub *****************
  7400 ;; Defined at:
  7401 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  f1              3   45[COMRAM] float 
  7404 ;;  f2              3   48[COMRAM] float 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  3   45[COMRAM] float 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0, cstack
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7416 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7419 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7420 ;;Total ram usage:        6 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:    2
  7423 ;; This function calls:
  7424 ;;		___ftadd
  7425 ;; This function is called by:
  7426 ;;		_exp
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text35
  7431  00396C                     __ptext35:
  7432                           	opt stack 0
  7433  00396C                     ___ftsub:
  7434                           	opt stack 19
  7435                           
  7436                           ;incstack = 0
  7437  00396C  5031               	movf	___ftsub@f2,w,c
  7438  00396E  1032               	iorwf	___ftsub@f2+1,w,c
  7439  003970  1033               	iorwf	___ftsub@f2+2,w,c
  7440  003972  B4D8               	btfsc	status,2,c
  7441  003974  D006               	goto	l964
  7442  003976  0E00               	movlw	0
  7443  003978  1A31               	xorwf	___ftsub@f2,f,c
  7444  00397A  0E00               	movlw	0
  7445  00397C  1A32               	xorwf	___ftsub@f2+1,f,c
  7446  00397E  0E80               	movlw	128
  7447  003980  1A33               	xorwf	___ftsub@f2+2,f,c
  7448  003982                     l964:
  7449  003982  C02E  F022         	movff	___ftsub@f1,___ftadd@f1
  7450  003986  C02F  F023         	movff	___ftsub@f1+1,___ftadd@f1+1
  7451  00398A  C030  F024         	movff	___ftsub@f1+2,___ftadd@f1+2
  7452  00398E  C031  F025         	movff	___ftsub@f2,___ftadd@f2
  7453  003992  C032  F026         	movff	___ftsub@f2+1,___ftadd@f2+1
  7454  003996  C033  F027         	movff	___ftsub@f2+2,___ftadd@f2+2
  7455  00399A  EC51  F00E         	call	___ftadd	;wreg free
  7456  00399E  C022  F02E         	movff	?___ftadd,?___ftsub
  7457  0039A2  C023  F02F         	movff	?___ftadd+1,?___ftsub+1
  7458  0039A6  C024  F030         	movff	?___ftadd+2,?___ftsub+2
  7459  0039AA  0012               	return	
  7460  0039AC                     __end_of___ftsub:
  7461                           	opt stack 0
  7462                           tblptru	equ	0xFF8
  7463                           tblptrh	equ	0xFF7
  7464                           tblptrl	equ	0xFF6
  7465                           tablat	equ	0xFF5
  7466                           prodh	equ	0xFF4
  7467                           prodl	equ	0xFF3
  7468                           intcon	equ	0xFF2
  7469                           postinc0	equ	0xFEE
  7470                           wreg	equ	0xFE8
  7471                           postinc1	equ	0xFE6
  7472                           postdec1	equ	0xFE5
  7473                           fsr1h	equ	0xFE2
  7474                           fsr1l	equ	0xFE1
  7475                           indf2	equ	0xFDF
  7476                           postinc2	equ	0xFDE
  7477                           postdec2	equ	0xFDD
  7478                           fsr2h	equ	0xFDA
  7479                           fsr2l	equ	0xFD9
  7480                           status	equ	0xFD8
  7481                           
  7482 ;; *************** function ___ftadd *****************
  7483 ;; Defined at:
  7484 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  f1              3   33[COMRAM] float 
  7487 ;;  f2              3   36[COMRAM] float 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  exp1            1   44[COMRAM] unsigned char 
  7490 ;;  exp2            1   43[COMRAM] unsigned char 
  7491 ;;  sign            1   42[COMRAM] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;                  3   33[COMRAM] float 
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0, cstack
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7501 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7503 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;Total ram usage:       12 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    1
  7508 ;; This function calls:
  7509 ;;		___ftpack
  7510 ;; This function is called by:
  7511 ;;		___ftsub
  7512 ;;		_floor
  7513 ;;		_log
  7514 ;;		_eval_poly
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text36
  7519  001CA2                     __ptext36:
  7520                           	opt stack 0
  7521  001CA2                     ___ftadd:
  7522                           	opt stack 19
  7523                           
  7524                           ;incstack = 0
  7525  001CA2  C024  F028         	movff	___ftadd@f1+2,??___ftadd
  7526  001CA6  6A29               	clrf	(??___ftadd+1)& (0+255),c
  7527  001CA8  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  7528  001CAA  3423               	rlcf	___ftadd@f1+1,w,c
  7529  001CAC  3628               	rlcf	??___ftadd& (0+255),f,c
  7530  001CAE  E301               	bnc	u3331
  7531  001CB0  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  7532  001CB2                     u3331:
  7533  001CB2  5028               	movf	??___ftadd,w,c
  7534  001CB4  6E2D               	movwf	___ftadd@exp1,c
  7535  001CB6  C027  F028         	movff	___ftadd@f2+2,??___ftadd
  7536  001CBA  6A29               	clrf	(??___ftadd+1)& (0+255),c
  7537  001CBC  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  7538  001CBE  3426               	rlcf	___ftadd@f2+1,w,c
  7539  001CC0  3628               	rlcf	??___ftadd& (0+255),f,c
  7540  001CC2  E301               	bnc	u3341
  7541  001CC4  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  7542  001CC6                     u3341:
  7543  001CC6  5028               	movf	??___ftadd,w,c
  7544  001CC8  6E2C               	movwf	___ftadd@exp2,c
  7545  001CCA  502D               	movf	___ftadd@exp1,w,c
  7546  001CCC  B4D8               	btfsc	status,2,c
  7547  001CCE  D00B               	goto	u3370
  7548  001CD0  502C               	movf	___ftadd@exp2,w,c
  7549  001CD2  5C2D               	subwf	___ftadd@exp1,w,c
  7550  001CD4  B0D8               	btfsc	status,0,c
  7551  001CD6  D00E               	goto	l899
  7552  001CD8  502D               	movf	___ftadd@exp1,w,c
  7553  001CDA  0800               	sublw	0
  7554  001CDC  242C               	addwf	___ftadd@exp2,w,c
  7555  001CDE  6E28               	movwf	??___ftadd& (0+255),c
  7556  001CE0  0E18               	movlw	24
  7557  001CE2  6428               	cpfsgt	??___ftadd,c
  7558  001CE4  D007               	goto	l899
  7559  001CE6                     u3370:
  7560  001CE6  C025  F022         	movff	___ftadd@f2,?___ftadd
  7561  001CEA  C026  F023         	movff	___ftadd@f2+1,?___ftadd+1
  7562  001CEE  C027  F024         	movff	___ftadd@f2+2,?___ftadd+2
  7563  001CF2  0012               	return	
  7564  001CF4                     l899:
  7565  001CF4  502C               	movf	___ftadd@exp2,w,c
  7566  001CF6  B4D8               	btfsc	status,2,c
  7567  001CF8  D00B               	goto	u3400
  7568  001CFA  502D               	movf	___ftadd@exp1,w,c
  7569  001CFC  5C2C               	subwf	___ftadd@exp2,w,c
  7570  001CFE  B0D8               	btfsc	status,0,c
  7571  001D00  D00E               	goto	l903
  7572  001D02  502C               	movf	___ftadd@exp2,w,c
  7573  001D04  0800               	sublw	0
  7574  001D06  242D               	addwf	___ftadd@exp1,w,c
  7575  001D08  6E28               	movwf	??___ftadd& (0+255),c
  7576  001D0A  0E18               	movlw	24
  7577  001D0C  6428               	cpfsgt	??___ftadd,c
  7578  001D0E  D007               	goto	l903
  7579  001D10                     u3400:
  7580  001D10  C022  F022         	movff	___ftadd@f1,?___ftadd
  7581  001D14  C023  F023         	movff	___ftadd@f1+1,?___ftadd+1
  7582  001D18  C024  F024         	movff	___ftadd@f1+2,?___ftadd+2
  7583  001D1C  0012               	return	
  7584  001D1E                     l903:
  7585  001D1E  0E06               	movlw	6
  7586  001D20  6E2B               	movwf	___ftadd@sign,c
  7587  001D22  BE24               	btfsc	___ftadd@f1+2,7,c
  7588  001D24  8E2B               	bsf	___ftadd@sign,7,c
  7589  001D26  BE27               	btfsc	___ftadd@f2+2,7,c
  7590  001D28  8C2B               	bsf	___ftadd@sign,6,c
  7591  001D2A  8E23               	bsf	___ftadd@f1+1,7,c
  7592  001D2C  0EFF               	movlw	255
  7593  001D2E  1622               	andwf	___ftadd@f1,f,c
  7594  001D30  0EFF               	movlw	255
  7595  001D32  1623               	andwf	___ftadd@f1+1,f,c
  7596  001D34  0E00               	movlw	0
  7597  001D36  1624               	andwf	___ftadd@f1+2,f,c
  7598  001D38  8E26               	bsf	___ftadd@f2+1,7,c
  7599  001D3A  0EFF               	movlw	255
  7600  001D3C  1625               	andwf	___ftadd@f2,f,c
  7601  001D3E  0EFF               	movlw	255
  7602  001D40  1626               	andwf	___ftadd@f2+1,f,c
  7603  001D42  0E00               	movlw	0
  7604  001D44  1627               	andwf	___ftadd@f2+2,f,c
  7605  001D46  502C               	movf	___ftadd@exp2,w,c
  7606  001D48  5C2D               	subwf	___ftadd@exp1,w,c
  7607  001D4A  B0D8               	btfsc	status,0,c
  7608  001D4C  D01B               	goto	l908
  7609  001D4E                     u3430:
  7610  001D4E  90D8               	bcf	status,0,c
  7611  001D50  3625               	rlcf	___ftadd@f2,f,c
  7612  001D52  3626               	rlcf	___ftadd@f2+1,f,c
  7613  001D54  3627               	rlcf	___ftadd@f2+2,f,c
  7614  001D56  062C               	decf	___ftadd@exp2,f,c
  7615  001D58  502D               	movf	___ftadd@exp1,w,c
  7616  001D5A  182C               	xorwf	___ftadd@exp2,w,c
  7617  001D5C  B4D8               	btfsc	status,2,c
  7618  001D5E  D00D               	goto	l913
  7619  001D60  062B               	decf	___ftadd@sign,f,c
  7620  001D62  C02B  F028         	movff	___ftadd@sign,??___ftadd
  7621  001D66  0E07               	movlw	7
  7622  001D68  1628               	andwf	??___ftadd,f,c
  7623  001D6A  B4D8               	btfsc	status,2,c
  7624  001D6C  D006               	goto	l913
  7625  001D6E  D7EF               	goto	u3430
  7626  001D70  90D8               	bcf	status,0,c
  7627  001D72  3224               	rrcf	___ftadd@f1+2,f,c
  7628  001D74  3223               	rrcf	___ftadd@f1+1,f,c
  7629  001D76  3222               	rrcf	___ftadd@f1,f,c
  7630  001D78  2A2D               	incf	___ftadd@exp1,f,c
  7631  001D7A                     l913:
  7632  001D7A  502C               	movf	___ftadd@exp2,w,c
  7633  001D7C  182D               	xorwf	___ftadd@exp1,w,c
  7634  001D7E  B4D8               	btfsc	status,2,c
  7635  001D80  D01F               	goto	u3500
  7636  001D82  D7F6               	goto	l914
  7637  001D84                     l908:
  7638  001D84  502D               	movf	___ftadd@exp1,w,c
  7639  001D86  5C2C               	subwf	___ftadd@exp2,w,c
  7640  001D88  B0D8               	btfsc	status,0,c
  7641  001D8A  D01A               	goto	u3500
  7642  001D8C                     u3470:
  7643  001D8C  90D8               	bcf	status,0,c
  7644  001D8E  3622               	rlcf	___ftadd@f1,f,c
  7645  001D90  3623               	rlcf	___ftadd@f1+1,f,c
  7646  001D92  3624               	rlcf	___ftadd@f1+2,f,c
  7647  001D94  062D               	decf	___ftadd@exp1,f,c
  7648  001D96  502D               	movf	___ftadd@exp1,w,c
  7649  001D98  182C               	xorwf	___ftadd@exp2,w,c
  7650  001D9A  B4D8               	btfsc	status,2,c
  7651  001D9C  D00D               	goto	l922
  7652  001D9E  062B               	decf	___ftadd@sign,f,c
  7653  001DA0  C02B  F028         	movff	___ftadd@sign,??___ftadd
  7654  001DA4  0E07               	movlw	7
  7655  001DA6  1628               	andwf	??___ftadd,f,c
  7656  001DA8  B4D8               	btfsc	status,2,c
  7657  001DAA  D006               	goto	l922
  7658  001DAC  D7EF               	goto	u3470
  7659  001DAE  90D8               	bcf	status,0,c
  7660  001DB0  3227               	rrcf	___ftadd@f2+2,f,c
  7661  001DB2  3226               	rrcf	___ftadd@f2+1,f,c
  7662  001DB4  3225               	rrcf	___ftadd@f2,f,c
  7663  001DB6  2A2C               	incf	___ftadd@exp2,f,c
  7664  001DB8                     l922:
  7665  001DB8  502C               	movf	___ftadd@exp2,w,c
  7666  001DBA  182D               	xorwf	___ftadd@exp1,w,c
  7667  001DBC  A4D8               	btfss	status,2,c
  7668  001DBE  D7F7               	goto	l923
  7669  001DC0                     u3500:
  7670  001DC0  AE2B               	btfss	___ftadd@sign,7,c
  7671  001DC2  D00C               	goto	l925
  7672  001DC4  0EFF               	movlw	255
  7673  001DC6  1A22               	xorwf	___ftadd@f1,f,c
  7674  001DC8  0EFF               	movlw	255
  7675  001DCA  1A23               	xorwf	___ftadd@f1+1,f,c
  7676  001DCC  0EFF               	movlw	255
  7677  001DCE  1A24               	xorwf	___ftadd@f1+2,f,c
  7678  001DD0  0E01               	movlw	1
  7679  001DD2  2622               	addwf	___ftadd@f1,f,c
  7680  001DD4  0E00               	movlw	0
  7681  001DD6  2223               	addwfc	___ftadd@f1+1,f,c
  7682  001DD8  0E00               	movlw	0
  7683  001DDA  2224               	addwfc	___ftadd@f1+2,f,c
  7684  001DDC                     l925:
  7685  001DDC  AC2B               	btfss	___ftadd@sign,6,c
  7686  001DDE  D00C               	goto	l926
  7687  001DE0  0EFF               	movlw	255
  7688  001DE2  1A25               	xorwf	___ftadd@f2,f,c
  7689  001DE4  0EFF               	movlw	255
  7690  001DE6  1A26               	xorwf	___ftadd@f2+1,f,c
  7691  001DE8  0EFF               	movlw	255
  7692  001DEA  1A27               	xorwf	___ftadd@f2+2,f,c
  7693  001DEC  0E01               	movlw	1
  7694  001DEE  2625               	addwf	___ftadd@f2,f,c
  7695  001DF0  0E00               	movlw	0
  7696  001DF2  2226               	addwfc	___ftadd@f2+1,f,c
  7697  001DF4  0E00               	movlw	0
  7698  001DF6  2227               	addwfc	___ftadd@f2+2,f,c
  7699  001DF8                     l926:
  7700  001DF8  0E00               	movlw	0
  7701  001DFA  6E2B               	movwf	___ftadd@sign,c
  7702  001DFC  5022               	movf	___ftadd@f1,w,c
  7703  001DFE  2625               	addwf	___ftadd@f2,f,c
  7704  001E00  5023               	movf	___ftadd@f1+1,w,c
  7705  001E02  2226               	addwfc	___ftadd@f2+1,f,c
  7706  001E04  5024               	movf	___ftadd@f1+2,w,c
  7707  001E06  2227               	addwfc	___ftadd@f2+2,f,c
  7708  001E08  AE27               	btfss	___ftadd@f2+2,7,c
  7709  001E0A  D00E               	goto	l927
  7710  001E0C  0EFF               	movlw	255
  7711  001E0E  1A25               	xorwf	___ftadd@f2,f,c
  7712  001E10  0EFF               	movlw	255
  7713  001E12  1A26               	xorwf	___ftadd@f2+1,f,c
  7714  001E14  0EFF               	movlw	255
  7715  001E16  1A27               	xorwf	___ftadd@f2+2,f,c
  7716  001E18  0E01               	movlw	1
  7717  001E1A  2625               	addwf	___ftadd@f2,f,c
  7718  001E1C  0E00               	movlw	0
  7719  001E1E  2226               	addwfc	___ftadd@f2+1,f,c
  7720  001E20  0E00               	movlw	0
  7721  001E22  2227               	addwfc	___ftadd@f2+2,f,c
  7722  001E24  0E01               	movlw	1
  7723  001E26  6E2B               	movwf	___ftadd@sign,c
  7724  001E28                     l927:
  7725  001E28  C025  F001         	movff	___ftadd@f2,___ftpack@arg
  7726  001E2C  C026  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  7727  001E30  C027  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  7728  001E34  C02D  F004         	movff	___ftadd@exp1,___ftpack@exp
  7729  001E38  C02B  F005         	movff	___ftadd@sign,___ftpack@sign
  7730  001E3C  EC84  F016         	call	___ftpack	;wreg free
  7731  001E40  C001  F022         	movff	?___ftpack,?___ftadd
  7732  001E44  C002  F023         	movff	?___ftpack+1,?___ftadd+1
  7733  001E48  C003  F024         	movff	?___ftpack+2,?___ftadd+2
  7734  001E4C  0012               	return	
  7735  001E4E                     __end_of___ftadd:
  7736                           	opt stack 0
  7737                           tblptru	equ	0xFF8
  7738                           tblptrh	equ	0xFF7
  7739                           tblptrl	equ	0xFF6
  7740                           tablat	equ	0xFF5
  7741                           prodh	equ	0xFF4
  7742                           prodl	equ	0xFF3
  7743                           intcon	equ	0xFF2
  7744                           postinc0	equ	0xFEE
  7745                           wreg	equ	0xFE8
  7746                           postinc1	equ	0xFE6
  7747                           postdec1	equ	0xFE5
  7748                           fsr1h	equ	0xFE2
  7749                           fsr1l	equ	0xFE1
  7750                           indf2	equ	0xFDF
  7751                           postinc2	equ	0xFDE
  7752                           postdec2	equ	0xFDD
  7753                           fsr2h	equ	0xFDA
  7754                           fsr2l	equ	0xFD9
  7755                           status	equ	0xFD8
  7756                           
  7757 ;; *************** function ___ftneg *****************
  7758 ;; Defined at:
  7759 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  f1              3    0[COMRAM] float 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  3    0[COMRAM] float 
  7766 ;; Registers used:
  7767 ;;		wreg, status,2, status,0
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7773 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7776 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;Total ram usage:        3 bytes
  7778 ;; Hardware stack levels used:    1
  7779 ;; This function calls:
  7780 ;;		Nothing
  7781 ;; This function is called by:
  7782 ;;		_pow
  7783 ;;		_exp
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text37
  7788  003A60                     __ptext37:
  7789                           	opt stack 0
  7790  003A60                     ___ftneg:
  7791                           	opt stack 21
  7792                           
  7793                           ;incstack = 0
  7794  003A60  5001               	movf	___ftneg@f1,w,c
  7795  003A62  1002               	iorwf	___ftneg@f1+1,w,c
  7796  003A64  1003               	iorwf	___ftneg@f1+2,w,c
  7797  003A66  B4D8               	btfsc	status,2,c
  7798  003A68  D006               	goto	l958
  7799  003A6A  0E00               	movlw	0
  7800  003A6C  1A01               	xorwf	___ftneg@f1,f,c
  7801  003A6E  0E00               	movlw	0
  7802  003A70  1A02               	xorwf	___ftneg@f1+1,f,c
  7803  003A72  0E80               	movlw	128
  7804  003A74  1A03               	xorwf	___ftneg@f1+2,f,c
  7805  003A76                     l958:
  7806  003A76  C001  F001         	movff	___ftneg@f1,?___ftneg
  7807  003A7A  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  7808  003A7E  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  7809  003A82  0012               	return		;funcret
  7810  003A84                     __end_of___ftneg:
  7811                           	opt stack 0
  7812                           tblptru	equ	0xFF8
  7813                           tblptrh	equ	0xFF7
  7814                           tblptrl	equ	0xFF6
  7815                           tablat	equ	0xFF5
  7816                           prodh	equ	0xFF4
  7817                           prodl	equ	0xFF3
  7818                           intcon	equ	0xFF2
  7819                           postinc0	equ	0xFEE
  7820                           wreg	equ	0xFE8
  7821                           postinc1	equ	0xFE6
  7822                           postdec1	equ	0xFE5
  7823                           fsr1h	equ	0xFE2
  7824                           fsr1l	equ	0xFE1
  7825                           indf2	equ	0xFDF
  7826                           postinc2	equ	0xFDE
  7827                           postdec2	equ	0xFDD
  7828                           fsr2h	equ	0xFDA
  7829                           fsr2l	equ	0xFD9
  7830                           status	equ	0xFD8
  7831                           
  7832 ;; *************** function ___ftdiv *****************
  7833 ;; Defined at:
  7834 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  f1              3    8[COMRAM] float 
  7837 ;;  f2              3   11[COMRAM] float 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  f3              3   18[COMRAM] float 
  7840 ;;  sign            1   22[COMRAM] unsigned char 
  7841 ;;  exp             1   21[COMRAM] unsigned char 
  7842 ;;  cntr            1   17[COMRAM] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  3    8[COMRAM] float 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7852 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7853 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7854 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7855 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7856 ;;Total ram usage:       15 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    1
  7859 ;; This function calls:
  7860 ;;		___ftpack
  7861 ;; This function is called by:
  7862 ;;		_exp
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text38
  7867  0028E8                     __ptext38:
  7868                           	opt stack 0
  7869  0028E8                     ___ftdiv:
  7870                           	opt stack 20
  7871                           
  7872                           ;incstack = 0
  7873  0028E8  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  7874  0028EC  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  7875  0028EE  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  7876  0028F0  340A               	rlcf	___ftdiv@f1+1,w,c
  7877  0028F2  360F               	rlcf	??___ftdiv& (0+255),f,c
  7878  0028F4  E301               	bnc	u3751
  7879  0028F6  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  7880  0028F8                     u3751:
  7881  0028F8  500F               	movf	??___ftdiv,w,c
  7882  0028FA  6E16               	movwf	___ftdiv@exp,c
  7883  0028FC  5016               	movf	___ftdiv@exp,w,c
  7884  0028FE  A4D8               	btfss	status,2,c
  7885  002900  D007               	goto	l932
  7886  002902  0E00               	movlw	0
  7887  002904  6E09               	movwf	?___ftdiv,c
  7888  002906  0E00               	movlw	0
  7889  002908  6E0A               	movwf	?___ftdiv+1,c
  7890  00290A  0E00               	movlw	0
  7891  00290C  6E0B               	movwf	?___ftdiv+2,c
  7892  00290E  0012               	return	
  7893  002910                     l932:
  7894  002910  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  7895  002914  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  7896  002916  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  7897  002918  340D               	rlcf	___ftdiv@f2+1,w,c
  7898  00291A  360F               	rlcf	??___ftdiv& (0+255),f,c
  7899  00291C  E301               	bnc	u3771
  7900  00291E  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  7901  002920                     u3771:
  7902  002920  500F               	movf	??___ftdiv,w,c
  7903  002922  6E17               	movwf	___ftdiv@sign,c
  7904  002924  5017               	movf	___ftdiv@sign,w,c
  7905  002926  A4D8               	btfss	status,2,c
  7906  002928  D007               	goto	l934
  7907  00292A  0E00               	movlw	0
  7908  00292C  6E09               	movwf	?___ftdiv,c
  7909  00292E  0E00               	movlw	0
  7910  002930  6E0A               	movwf	?___ftdiv+1,c
  7911  002932  0E00               	movlw	0
  7912  002934  6E0B               	movwf	?___ftdiv+2,c
  7913  002936  0012               	return	
  7914  002938                     l934:
  7915  002938  0E00               	movlw	0
  7916  00293A  6E13               	movwf	___ftdiv@f3,c
  7917  00293C  0E00               	movlw	0
  7918  00293E  6E14               	movwf	___ftdiv@f3+1,c
  7919  002940  0E00               	movlw	0
  7920  002942  6E15               	movwf	___ftdiv@f3+2,c
  7921  002944  5017               	movf	___ftdiv@sign,w,c
  7922  002946  0F89               	addlw	137
  7923  002948  5E16               	subwf	___ftdiv@exp,f,c
  7924  00294A  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  7925  00294E  500E               	movf	___ftdiv@f2+2,w,c
  7926  002950  1A17               	xorwf	___ftdiv@sign,f,c
  7927  002952  0E80               	movlw	128
  7928  002954  1617               	andwf	___ftdiv@sign,f,c
  7929  002956  8E0A               	bsf	___ftdiv@f1+1,7,c
  7930  002958  0EFF               	movlw	255
  7931  00295A  1609               	andwf	___ftdiv@f1,f,c
  7932  00295C  0EFF               	movlw	255
  7933  00295E  160A               	andwf	___ftdiv@f1+1,f,c
  7934  002960  0E00               	movlw	0
  7935  002962  160B               	andwf	___ftdiv@f1+2,f,c
  7936  002964  8E0D               	bsf	___ftdiv@f2+1,7,c
  7937  002966  0EFF               	movlw	255
  7938  002968  160C               	andwf	___ftdiv@f2,f,c
  7939  00296A  0EFF               	movlw	255
  7940  00296C  160D               	andwf	___ftdiv@f2+1,f,c
  7941  00296E  0E00               	movlw	0
  7942  002970  160E               	andwf	___ftdiv@f2+2,f,c
  7943  002972  0E18               	movlw	24
  7944  002974  6E12               	movwf	___ftdiv@cntr,c
  7945  002976  90D8               	bcf	status,0,c
  7946  002978  3613               	rlcf	___ftdiv@f3,f,c
  7947  00297A  3614               	rlcf	___ftdiv@f3+1,f,c
  7948  00297C  3615               	rlcf	___ftdiv@f3+2,f,c
  7949  00297E  500C               	movf	___ftdiv@f2,w,c
  7950  002980  5C09               	subwf	___ftdiv@f1,w,c
  7951  002982  500D               	movf	___ftdiv@f2+1,w,c
  7952  002984  580A               	subwfb	___ftdiv@f1+1,w,c
  7953  002986  500E               	movf	___ftdiv@f2+2,w,c
  7954  002988  580B               	subwfb	___ftdiv@f1+2,w,c
  7955  00298A  A0D8               	btfss	status,0,c
  7956  00298C  D007               	goto	l936
  7957  00298E  500C               	movf	___ftdiv@f2,w,c
  7958  002990  5E09               	subwf	___ftdiv@f1,f,c
  7959  002992  500D               	movf	___ftdiv@f2+1,w,c
  7960  002994  5A0A               	subwfb	___ftdiv@f1+1,f,c
  7961  002996  500E               	movf	___ftdiv@f2+2,w,c
  7962  002998  5A0B               	subwfb	___ftdiv@f1+2,f,c
  7963  00299A  8013               	bsf	___ftdiv@f3,0,c
  7964  00299C                     l936:
  7965  00299C  90D8               	bcf	status,0,c
  7966  00299E  3609               	rlcf	___ftdiv@f1,f,c
  7967  0029A0  360A               	rlcf	___ftdiv@f1+1,f,c
  7968  0029A2  360B               	rlcf	___ftdiv@f1+2,f,c
  7969  0029A4  2E12               	decfsz	___ftdiv@cntr,f,c
  7970  0029A6  D7E7               	goto	l935
  7971  0029A8  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  7972  0029AC  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7973  0029B0  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7974  0029B4  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  7975  0029B8  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  7976  0029BC  EC84  F016         	call	___ftpack	;wreg free
  7977  0029C0  C001  F009         	movff	?___ftpack,?___ftdiv
  7978  0029C4  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  7979  0029C8  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  7980  0029CC  0012               	return	
  7981  0029CE                     __end_of___ftdiv:
  7982                           	opt stack 0
  7983                           tblptru	equ	0xFF8
  7984                           tblptrh	equ	0xFF7
  7985                           tblptrl	equ	0xFF6
  7986                           tablat	equ	0xFF5
  7987                           prodh	equ	0xFF4
  7988                           prodl	equ	0xFF3
  7989                           intcon	equ	0xFF2
  7990                           postinc0	equ	0xFEE
  7991                           wreg	equ	0xFE8
  7992                           postinc1	equ	0xFE6
  7993                           postdec1	equ	0xFE5
  7994                           fsr1h	equ	0xFE2
  7995                           fsr1l	equ	0xFE1
  7996                           indf2	equ	0xFDF
  7997                           postinc2	equ	0xFDE
  7998                           postdec2	equ	0xFDD
  7999                           fsr2h	equ	0xFDA
  8000                           fsr2l	equ	0xFD9
  8001                           status	equ	0xFD8
  8002                           
  8003 ;; *************** function ___awtoft *****************
  8004 ;; Defined at:
  8005 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  c               2    8[COMRAM] int 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  sign            1   11[COMRAM] unsigned char 
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  3    8[COMRAM] float 
  8012 ;; Registers used:
  8013 ;;		wreg, status,2, status,0, cstack
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8022 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8023 ;;Total ram usage:        4 bytes
  8024 ;; Hardware stack levels used:    1
  8025 ;; Hardware stack levels required when called:    1
  8026 ;; This function calls:
  8027 ;;		___ftpack
  8028 ;; This function is called by:
  8029 ;;		_covertir_valores_de_array_a_escala_decimal
  8030 ;;		_exp
  8031 ;;		_log
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text39
  8036  0039AC                     __ptext39:
  8037                           	opt stack 0
  8038  0039AC                     ___awtoft:
  8039                           	opt stack 20
  8040                           
  8041                           ;incstack = 0
  8042  0039AC  0E00               	movlw	0
  8043  0039AE  6E0C               	movwf	___awtoft@sign,c
  8044  0039B0  AE0A               	btfss	___awtoft@c+1,7,c
  8045  0039B2  D006               	goto	l828
  8046  0039B4  6C09               	negf	___awtoft@c,c
  8047  0039B6  1E0A               	comf	___awtoft@c+1,f,c
  8048  0039B8  B0D8               	btfsc	status,0,c
  8049  0039BA  2A0A               	incf	___awtoft@c+1,f,c
  8050  0039BC  0E01               	movlw	1
  8051  0039BE  6E0C               	movwf	___awtoft@sign,c
  8052  0039C0                     l828:
  8053  0039C0  C009  F001         	movff	___awtoft@c,___ftpack@arg
  8054  0039C4  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  8055  0039C8  6A03               	clrf	___ftpack@arg+2,c
  8056  0039CA  0E8E               	movlw	142
  8057  0039CC  6E04               	movwf	___ftpack@exp,c
  8058  0039CE  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  8059  0039D2  EC84  F016         	call	___ftpack	;wreg free
  8060  0039D6  C001  F009         	movff	?___ftpack,?___awtoft
  8061  0039DA  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  8062  0039DE  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  8063  0039E2  0012               	return	
  8064  0039E4                     __end_of___awtoft:
  8065                           	opt stack 0
  8066                           tblptru	equ	0xFF8
  8067                           tblptrh	equ	0xFF7
  8068                           tblptrl	equ	0xFF6
  8069                           tablat	equ	0xFF5
  8070                           prodh	equ	0xFF4
  8071                           prodl	equ	0xFF3
  8072                           intcon	equ	0xFF2
  8073                           postinc0	equ	0xFEE
  8074                           wreg	equ	0xFE8
  8075                           postinc1	equ	0xFE6
  8076                           postdec1	equ	0xFE5
  8077                           fsr1h	equ	0xFE2
  8078                           fsr1l	equ	0xFE1
  8079                           indf2	equ	0xFDF
  8080                           postinc2	equ	0xFDE
  8081                           postdec2	equ	0xFDD
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function ___lltoft *****************
  8087 ;; Defined at:
  8088 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  c               4    8[COMRAM] unsigned long 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;  exp             1   16[COMRAM] unsigned char 
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  3    8[COMRAM] float 
  8095 ;; Registers used:
  8096 ;;		wreg, status,2, status,0, cstack
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;Total ram usage:        9 bytes
  8107 ;; Hardware stack levels used:    1
  8108 ;; Hardware stack levels required when called:    1
  8109 ;; This function calls:
  8110 ;;		___ftpack
  8111 ;; This function is called by:
  8112 ;;		_pow
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text40
  8117  00369E                     __ptext40:
  8118                           	opt stack 0
  8119  00369E                     ___lltoft:
  8120                           	opt stack 21
  8121                           
  8122                           ;incstack = 0
  8123  00369E  0E8E               	movlw	142
  8124  0036A0  6E11               	movwf	___lltoft@exp,c
  8125  0036A2  D006               	goto	l1030
  8126  0036A4  90D8               	bcf	status,0,c
  8127  0036A6  320C               	rrcf	___lltoft@c+3,f,c
  8128  0036A8  320B               	rrcf	___lltoft@c+2,f,c
  8129  0036AA  320A               	rrcf	___lltoft@c+1,f,c
  8130  0036AC  3209               	rrcf	___lltoft@c,f,c
  8131  0036AE  2A11               	incf	___lltoft@exp,f,c
  8132  0036B0                     l1030:
  8133  0036B0  0E00               	movlw	0
  8134  0036B2  1409               	andwf	___lltoft@c,w,c
  8135  0036B4  6E0D               	movwf	??___lltoft& (0+255),c
  8136  0036B6  0E00               	movlw	0
  8137  0036B8  140A               	andwf	___lltoft@c+1,w,c
  8138  0036BA  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  8139  0036BC  0E00               	movlw	0
  8140  0036BE  140B               	andwf	___lltoft@c+2,w,c
  8141  0036C0  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  8142  0036C2  0EFF               	movlw	255
  8143  0036C4  140C               	andwf	___lltoft@c+3,w,c
  8144  0036C6  6E10               	movwf	(??___lltoft+3)& (0+255),c
  8145  0036C8  500D               	movf	??___lltoft,w,c
  8146  0036CA  100E               	iorwf	??___lltoft+1,w,c
  8147  0036CC  100F               	iorwf	??___lltoft+2,w,c
  8148  0036CE  1010               	iorwf	??___lltoft+3,w,c
  8149  0036D0  A4D8               	btfss	status,2,c
  8150  0036D2  D7E8               	goto	l1031
  8151  0036D4  C009  F001         	movff	___lltoft@c,___ftpack@arg
  8152  0036D8  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  8153  0036DC  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  8154  0036E0  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  8155  0036E4  0E00               	movlw	0
  8156  0036E6  6E05               	movwf	___ftpack@sign,c
  8157  0036E8  EC84  F016         	call	___ftpack	;wreg free
  8158  0036EC  C001  F009         	movff	?___ftpack,?___lltoft
  8159  0036F0  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  8160  0036F4  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  8161  0036F8  0012               	return	
  8162  0036FA                     __end_of___lltoft:
  8163                           	opt stack 0
  8164                           tblptru	equ	0xFF8
  8165                           tblptrh	equ	0xFF7
  8166                           tblptrl	equ	0xFF6
  8167                           tablat	equ	0xFF5
  8168                           prodh	equ	0xFF4
  8169                           prodl	equ	0xFF3
  8170                           intcon	equ	0xFF2
  8171                           postinc0	equ	0xFEE
  8172                           wreg	equ	0xFE8
  8173                           postinc1	equ	0xFE6
  8174                           postdec1	equ	0xFE5
  8175                           fsr1h	equ	0xFE2
  8176                           fsr1l	equ	0xFE1
  8177                           indf2	equ	0xFDF
  8178                           postinc2	equ	0xFDE
  8179                           postdec2	equ	0xFDD
  8180                           fsr2h	equ	0xFDA
  8181                           fsr2l	equ	0xFD9
  8182                           status	equ	0xFD8
  8183                           
  8184 ;; *************** function ___ftpack *****************
  8185 ;; Defined at:
  8186 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  arg             3    0[COMRAM] unsigned um
  8189 ;;  exp             1    3[COMRAM] unsigned char 
  8190 ;;  sign            1    4[COMRAM] unsigned char 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  3    0[COMRAM] float 
  8195 ;; Registers used:
  8196 ;;		wreg, status,2, status,0
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8202 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8204 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8205 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8206 ;;Total ram usage:        8 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		___altoft
  8212 ;;		___awtoft
  8213 ;;		___ftadd
  8214 ;;		___ftdiv
  8215 ;;		___ftmul
  8216 ;;		___lltoft
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text41
  8221  002D08                     __ptext41:
  8222                           	opt stack 0
  8223  002D08                     ___ftpack:
  8224                           	opt stack 19
  8225                           
  8226                           ;incstack = 0
  8227  002D08  5004               	movf	___ftpack@exp,w,c
  8228  002D0A  B4D8               	btfsc	status,2,c
  8229  002D0C  D005               	goto	u3230
  8230  002D0E  5001               	movf	___ftpack@arg,w,c
  8231  002D10  1002               	iorwf	___ftpack@arg+1,w,c
  8232  002D12  1003               	iorwf	___ftpack@arg+2,w,c
  8233  002D14  A4D8               	btfss	status,2,c
  8234  002D16  D00C               	goto	l868
  8235  002D18                     u3230:
  8236  002D18  0E00               	movlw	0
  8237  002D1A  6E01               	movwf	?___ftpack,c
  8238  002D1C  0E00               	movlw	0
  8239  002D1E  6E02               	movwf	?___ftpack+1,c
  8240  002D20  0E00               	movlw	0
  8241  002D22  6E03               	movwf	?___ftpack+2,c
  8242  002D24  0012               	return	
  8243  002D26  2A04               	incf	___ftpack@exp,f,c
  8244  002D28  90D8               	bcf	status,0,c
  8245  002D2A  3203               	rrcf	___ftpack@arg+2,f,c
  8246  002D2C  3202               	rrcf	___ftpack@arg+1,f,c
  8247  002D2E  3201               	rrcf	___ftpack@arg,f,c
  8248  002D30                     l868:
  8249  002D30  0E00               	movlw	0
  8250  002D32  1401               	andwf	___ftpack@arg,w,c
  8251  002D34  6E06               	movwf	??___ftpack& (0+255),c
  8252  002D36  0E00               	movlw	0
  8253  002D38  1402               	andwf	___ftpack@arg+1,w,c
  8254  002D3A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8255  002D3C  0EFE               	movlw	254
  8256  002D3E  1403               	andwf	___ftpack@arg+2,w,c
  8257  002D40  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8258  002D42  5006               	movf	??___ftpack,w,c
  8259  002D44  1007               	iorwf	??___ftpack+1,w,c
  8260  002D46  1008               	iorwf	??___ftpack+2,w,c
  8261  002D48  B4D8               	btfsc	status,2,c
  8262  002D4A  D00C               	goto	l871
  8263  002D4C  D7EC               	goto	l869
  8264  002D4E  2A04               	incf	___ftpack@exp,f,c
  8265  002D50  0E01               	movlw	1
  8266  002D52  2601               	addwf	___ftpack@arg,f,c
  8267  002D54  0E00               	movlw	0
  8268  002D56  2202               	addwfc	___ftpack@arg+1,f,c
  8269  002D58  0E00               	movlw	0
  8270  002D5A  2203               	addwfc	___ftpack@arg+2,f,c
  8271  002D5C  90D8               	bcf	status,0,c
  8272  002D5E  3203               	rrcf	___ftpack@arg+2,f,c
  8273  002D60  3202               	rrcf	___ftpack@arg+1,f,c
  8274  002D62  3201               	rrcf	___ftpack@arg,f,c
  8275  002D64                     l871:
  8276  002D64  0E00               	movlw	0
  8277  002D66  1401               	andwf	___ftpack@arg,w,c
  8278  002D68  6E06               	movwf	??___ftpack& (0+255),c
  8279  002D6A  0E00               	movlw	0
  8280  002D6C  1402               	andwf	___ftpack@arg+1,w,c
  8281  002D6E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8282  002D70  0EFF               	movlw	255
  8283  002D72  1403               	andwf	___ftpack@arg+2,w,c
  8284  002D74  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8285  002D76  5006               	movf	??___ftpack,w,c
  8286  002D78  1007               	iorwf	??___ftpack+1,w,c
  8287  002D7A  1008               	iorwf	??___ftpack+2,w,c
  8288  002D7C  B4D8               	btfsc	status,2,c
  8289  002D7E  D006               	goto	l874
  8290  002D80  D7E6               	goto	l872
  8291  002D82  0604               	decf	___ftpack@exp,f,c
  8292  002D84  90D8               	bcf	status,0,c
  8293  002D86  3601               	rlcf	___ftpack@arg,f,c
  8294  002D88  3602               	rlcf	___ftpack@arg+1,f,c
  8295  002D8A  3603               	rlcf	___ftpack@arg+2,f,c
  8296  002D8C                     l874:
  8297  002D8C  BE02               	btfsc	___ftpack@arg+1,7,c
  8298  002D8E  D003               	goto	u3270
  8299  002D90  0E02               	movlw	2
  8300  002D92  6004               	cpfslt	___ftpack@exp,c
  8301  002D94  D7F6               	goto	l875
  8302  002D96                     u3270:
  8303  002D96  A004               	btfss	___ftpack@exp,0,c
  8304  002D98  9E02               	bcf	___ftpack@arg+1,7,c
  8305  002D9A  90D8               	bcf	status,0,c
  8306  002D9C  3204               	rrcf	___ftpack@exp,f,c
  8307  002D9E  5004               	movf	___ftpack@exp,w,c
  8308  002DA0  1203               	iorwf	___ftpack@arg+2,f,c
  8309  002DA2  5005               	movf	___ftpack@sign,w,c
  8310  002DA4  A4D8               	btfss	status,2,c
  8311  002DA6  8E03               	bsf	___ftpack@arg+2,7,c
  8312  002DA8  C001  F001         	movff	___ftpack@arg,?___ftpack
  8313  002DAC  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  8314  002DB0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  8315  002DB4  0012               	return	
  8316  002DB6                     __end_of___ftpack:
  8317                           	opt stack 0
  8318                           tblptru	equ	0xFF8
  8319                           tblptrh	equ	0xFF7
  8320                           tblptrl	equ	0xFF6
  8321                           tablat	equ	0xFF5
  8322                           prodh	equ	0xFF4
  8323                           prodl	equ	0xFF3
  8324                           intcon	equ	0xFF2
  8325                           postinc0	equ	0xFEE
  8326                           wreg	equ	0xFE8
  8327                           postinc1	equ	0xFE6
  8328                           postdec1	equ	0xFE5
  8329                           fsr1h	equ	0xFE2
  8330                           fsr1l	equ	0xFE1
  8331                           indf2	equ	0xFDF
  8332                           postinc2	equ	0xFDE
  8333                           postdec2	equ	0xFDD
  8334                           fsr2h	equ	0xFDA
  8335                           fsr2l	equ	0xFD9
  8336                           status	equ	0xFD8
  8337                           
  8338 ;; *************** function _activar_alarma *****************
  8339 ;; Defined at:
  8340 ;;		line 279 in file "main.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  intentos_de_    2   61[COMRAM] int 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8357 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8358 ;;Total ram usage:        3 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:    7
  8361 ;; This function calls:
  8362 ;;		_ingreso_numero
  8363 ;;		_lcd_comand
  8364 ;;		_lcd_gotoxy
  8365 ;;		_lcd_putrs
  8366 ;;		_verificar_contrasenia
  8367 ;; This function is called by:
  8368 ;;		_seleccionar_opcion
  8369 ;;		_ir_a_pantalla_ingresar_contrasenia
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text42
  8374  001AD0                     __ptext42:
  8375                           	opt stack 0
  8376  001AD0                     _activar_alarma:
  8377                           	opt stack 18
  8378                           
  8379                           ;main.c: 280: numeros_ingresados = 0;
  8380                           
  8381                           ;incstack = 0
  8382  001AD0  0E00               	movlw	0
  8383  001AD2  0100               	movlb	0	; () banked
  8384  001AD4  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  8385  001AD6  0E00               	movlw	0
  8386  001AD8  6F94               	movwf	_numeros_ingresados& (0+255),b
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;main.c: 281: lcd_gotoxy(1, 1);
  8390  001ADA  0E01               	movlw	1
  8391  001ADC  6E05               	movwf	lcd_gotoxy@y,c
  8392  001ADE  0E01               	movlw	1
  8393  001AE0  EC42  F01D         	call	_lcd_gotoxy
  8394                           
  8395                           ;main.c: 282: lcd_putrs("Alarm activated ");
  8396  001AE4  0E6E               	movlw	low STR_17
  8397  001AE6  6E09               	movwf	lcd_putrs@ptr,c
  8398  001AE8  0E0F               	movlw	high STR_17
  8399  001AEA  6E0A               	movwf	lcd_putrs@ptr+1,c
  8400  001AEC  ECD3  F01B         	call	_lcd_putrs	;wreg free
  8401                           
  8402                           ;main.c: 283: lcd_gotoxy(1, 2);
  8403  001AF0  0E02               	movlw	2
  8404  001AF2  6E05               	movwf	lcd_gotoxy@y,c
  8405  001AF4  0E01               	movlw	1
  8406  001AF6  EC42  F01D         	call	_lcd_gotoxy
  8407                           
  8408                           ;main.c: 284: lcd_putrs("                ");
  8409  001AFA  0E5D               	movlw	low STR_18
  8410  001AFC  6E09               	movwf	lcd_putrs@ptr,c
  8411  001AFE  0E0F               	movlw	high STR_18
  8412  001B00  6E0A               	movwf	lcd_putrs@ptr+1,c
  8413  001B02  ECD3  F01B         	call	_lcd_putrs	;wreg free
  8414                           
  8415                           ;main.c: 286: alarma_activada = 1;
  8416  001B06  0E00               	movlw	0
  8417  001B08  0100               	movlb	0	; () banked
  8418  001B0A  6F91               	movwf	(_alarma_activada+1)& (0+255),b
  8419  001B0C  0E01               	movlw	1
  8420  001B0E  6F90               	movwf	_alarma_activada& (0+255),b
  8421                           
  8422                           ;main.c: 288: int intentos_de_contrasenia = 0;
  8423  001B10  0E00               	movlw	0
  8424  001B12  6E3F               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  8425  001B14  0E00               	movlw	0
  8426  001B16  6E3E               	movwf	activar_alarma@intentos_de_contrasenia,c
  8427                           
  8428                           ;main.c: 289: while (alarma_activada) {
  8429  001B18  D0B4               	goto	l290
  8430  001B1A                     
  8431                           ; BSR set to: 0
  8432                           ;main.c: 291: if (numeros_ingresados < 4) {
  8433                           
  8434                           ; BSR set to: 0
  8435  001B1A  0100               	movlb	0	; () banked
  8436  001B1C  BF95               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  8437  001B1E  D008               	goto	u5140
  8438  001B20  0100               	movlb	0	; () banked
  8439  001B22  5195               	movf	(_numeros_ingresados+1)& (0+255),w,b
  8440  001B24  E12D               	bnz	l4519
  8441  001B26  0E04               	movlw	4
  8442  001B28  0100               	movlb	0	; () banked
  8443  001B2A  5D94               	subwf	_numeros_ingresados& (0+255),w,b
  8444  001B2C  B0D8               	btfsc	status,0,c
  8445  001B2E  D028               	goto	l283
  8446  001B30                     u5140:
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;main.c: 292: if (alarma_sonando == 1) {
  8450  001B30  0100               	movlb	0	; () banked
  8451  001B32  058E               	decf	_alarma_sonando& (0+255),w,b
  8452  001B34  0100               	movlb	0	; () banked
  8453  001B36  118F               	iorwf	(_alarma_sonando+1)& (0+255),w,b
  8454  001B38  A4D8               	btfss	status,2,c
  8455  001B3A  D01F               	goto	l284
  8456                           
  8457                           ; BSR set to: 0
  8458                           ;main.c: 296: LATBbits.LATB1 = !LATBbits.LATB1;;
  8459  001B3C  B28A               	btfsc	3978,1,c	;volatile
  8460  001B3E  D003               	goto	u5160
  8461  001B40  6A3D               	clrf	??_activar_alarma& (0+255),c
  8462  001B42  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8463  001B44  D001               	goto	u5178
  8464  001B46                     u5160:
  8465  001B46  6A3D               	clrf	??_activar_alarma& (0+255),c
  8466  001B48                     u5178:
  8467  001B48  463D               	rlncf	??_activar_alarma,f,c
  8468  001B4A  508A               	movf	3978,w,c	;volatile
  8469  001B4C  183D               	xorwf	??_activar_alarma,w,c
  8470  001B4E  0BFD               	andlw	-3
  8471  001B50  183D               	xorwf	??_activar_alarma,w,c
  8472  001B52  6E8A               	movwf	3978,c	;volatile
  8473                           
  8474                           ;main.c: 297: LATBbits.LATB0 = !LATBbits.LATB0;
  8475  001B54  B08A               	btfsc	3978,0,c	;volatile
  8476  001B56  D003               	goto	u5180
  8477  001B58  6A3D               	clrf	??_activar_alarma& (0+255),c
  8478  001B5A  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8479  001B5C  D001               	goto	u5198
  8480  001B5E                     u5180:
  8481  001B5E  6A3D               	clrf	??_activar_alarma& (0+255),c
  8482  001B60                     u5198:
  8483  001B60  508A               	movf	3978,w,c	;volatile
  8484  001B62  183D               	xorwf	??_activar_alarma,w,c
  8485  001B64  0BFE               	andlw	-2
  8486  001B66  183D               	xorwf	??_activar_alarma,w,c
  8487  001B68  6E8A               	movwf	3978,c	;volatile
  8488                           
  8489                           ;main.c: 298: _delay((unsigned long)((98)*(8000000/4000.0)));
  8490  001B6A  0EFF               	movlw	255
  8491  001B6C  6E3D               	movwf	??_activar_alarma& (0+255),c
  8492  001B6E  0E8A               	movlw	138
  8493  001B70                     u6367:
  8494  001B70  2EE8               	decfsz	wreg,f,c
  8495  001B72  D7FE               	bra	u6367
  8496  001B74  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8497  001B76  D7FC               	bra	u6367
  8498  001B78  D000               	nop2	
  8499  001B7A                     l284:
  8500                           
  8501                           ;main.c: 299: }
  8502                           ;main.c: 300: ingreso_numero();
  8503  001B7A  ECFE  F007         	call	_ingreso_numero	;wreg free
  8504                           
  8505                           ;main.c: 301: } else {
  8506  001B7E  D05D               	goto	l289
  8507  001B80                     l283:
  8508  001B80                     l4519:
  8509                           
  8510                           ;main.c: 302: if (verificar_contrasenia()) {
  8511  001B80  ECB8  F019         	call	_verificar_contrasenia	;wreg free
  8512  001B84  5001               	movf	?_verificar_contrasenia,w,c
  8513  001B86  1002               	iorwf	?_verificar_contrasenia+1,w,c
  8514  001B88  B4D8               	btfsc	status,2,c
  8515  001B8A  D019               	goto	l286
  8516                           
  8517                           ;main.c: 303: alarma_activada = 0;
  8518  001B8C  0E00               	movlw	0
  8519  001B8E  0100               	movlb	0	; () banked
  8520  001B90  6F91               	movwf	(_alarma_activada+1)& (0+255),b
  8521  001B92  0E00               	movlw	0
  8522  001B94  6F90               	movwf	_alarma_activada& (0+255),b
  8523                           
  8524                           ; BSR set to: 0
  8525                           ;main.c: 304: LATBbits.LATB1 = 0;;
  8526  001B96  928A               	bcf	3978,1,c	;volatile
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;main.c: 305: LATBbits.LATB0 = 0;;
  8530  001B98  908A               	bcf	3978,0,c	;volatile
  8531                           
  8532                           ;main.c: 306: alarma_sonando = 0;
  8533  001B9A  0E00               	movlw	0
  8534  001B9C  0100               	movlb	0	; () banked
  8535  001B9E  6F8F               	movwf	(_alarma_sonando+1)& (0+255),b
  8536  001BA0  0E00               	movlw	0
  8537  001BA2  6F8E               	movwf	_alarma_sonando& (0+255),b
  8538                           
  8539                           ;main.c: 307: intentos_de_contrasenia = 0;
  8540  001BA4  0E00               	movlw	0
  8541  001BA6  6E3F               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  8542  001BA8  0E00               	movlw	0
  8543  001BAA  6E3E               	movwf	activar_alarma@intentos_de_contrasenia,c
  8544                           
  8545                           ; BSR set to: 0
  8546                           ;main.c: 308: _delay((unsigned long)((98)*(8000000/4000.0)));
  8547  001BAC  0EFF               	movlw	255
  8548  001BAE  6E3D               	movwf	??_activar_alarma& (0+255),c
  8549  001BB0  0E8A               	movlw	138
  8550  001BB2                     u6377:
  8551  001BB2  2EE8               	decfsz	wreg,f,c
  8552  001BB4  D7FE               	bra	u6377
  8553  001BB6  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8554  001BB8  D7FC               	bra	u6377
  8555  001BBA  D000               	nop2	
  8556                           
  8557                           ;main.c: 309: break;
  8558  001BBC  0012               	return	
  8559  001BBE                     l286:
  8560                           
  8561                           ;main.c: 311: numeros_ingresados = 0;
  8562  001BBE  0E00               	movlw	0
  8563  001BC0  0100               	movlb	0	; () banked
  8564  001BC2  6F95               	movwf	(_numeros_ingresados+1)& (0+255),b
  8565  001BC4  0E00               	movlw	0
  8566  001BC6  6F94               	movwf	_numeros_ingresados& (0+255),b
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;main.c: 312: intentos_de_contrasenia++;
  8570  001BC8  4A3E               	infsnz	activar_alarma@intentos_de_contrasenia,f,c
  8571  001BCA  2A3F               	incf	activar_alarma@intentos_de_contrasenia+1,f,c
  8572                           
  8573                           ; BSR set to: 0
  8574                           ;main.c: 313: lcd_gotoxy(1, 2);
  8575  001BCC  0E02               	movlw	2
  8576  001BCE  6E05               	movwf	lcd_gotoxy@y,c
  8577  001BD0  0E01               	movlw	1
  8578  001BD2  EC42  F01D         	call	_lcd_gotoxy
  8579                           
  8580                           ;main.c: 314: lcd_putrs("                ");
  8581  001BD6  0E5D               	movlw	low STR_18
  8582  001BD8  6E09               	movwf	lcd_putrs@ptr,c
  8583  001BDA  0E0F               	movlw	high STR_18
  8584  001BDC  6E0A               	movwf	lcd_putrs@ptr+1,c
  8585  001BDE  ECD3  F01B         	call	_lcd_putrs	;wreg free
  8586                           
  8587                           ;main.c: 315: if (intentos_de_contrasenia >= 3) {
  8588  001BE2  BE3F               	btfsc	activar_alarma@intentos_de_contrasenia+1,7,c
  8589  001BE4  D02A               	goto	l289
  8590  001BE6  503F               	movf	activar_alarma@intentos_de_contrasenia+1,w,c
  8591  001BE8  E104               	bnz	u5210
  8592  001BEA  0E03               	movlw	3
  8593  001BEC  5C3E               	subwf	activar_alarma@intentos_de_contrasenia,w,c
  8594  001BEE  A0D8               	btfss	status,0,c
  8595  001BF0  D024               	goto	l289
  8596  001BF2                     u5210:
  8597                           
  8598                           ;main.c: 317: alarma_sonando = 1;
  8599  001BF2  0E00               	movlw	0
  8600  001BF4  0100               	movlb	0	; () banked
  8601  001BF6  6F8F               	movwf	(_alarma_sonando+1)& (0+255),b
  8602  001BF8  0E01               	movlw	1
  8603  001BFA  6F8E               	movwf	_alarma_sonando& (0+255),b
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;main.c: 321: LATBbits.LATB1 = !LATBbits.LATB1;;
  8607  001BFC  B28A               	btfsc	3978,1,c	;volatile
  8608  001BFE  D003               	goto	u5220
  8609  001C00  6A3D               	clrf	??_activar_alarma& (0+255),c
  8610  001C02  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8611  001C04  D001               	goto	u5238
  8612  001C06                     u5220:
  8613  001C06  6A3D               	clrf	??_activar_alarma& (0+255),c
  8614  001C08                     u5238:
  8615  001C08  463D               	rlncf	??_activar_alarma,f,c
  8616  001C0A  508A               	movf	3978,w,c	;volatile
  8617  001C0C  183D               	xorwf	??_activar_alarma,w,c
  8618  001C0E  0BFD               	andlw	-3
  8619  001C10  183D               	xorwf	??_activar_alarma,w,c
  8620  001C12  6E8A               	movwf	3978,c	;volatile
  8621                           
  8622                           ;main.c: 322: LATBbits.LATB0 = !LATBbits.LATB0;
  8623  001C14  B08A               	btfsc	3978,0,c	;volatile
  8624  001C16  D003               	goto	u5240
  8625  001C18  6A3D               	clrf	??_activar_alarma& (0+255),c
  8626  001C1A  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8627  001C1C  D001               	goto	u5258
  8628  001C1E                     u5240:
  8629  001C1E  6A3D               	clrf	??_activar_alarma& (0+255),c
  8630  001C20                     u5258:
  8631  001C20  508A               	movf	3978,w,c	;volatile
  8632  001C22  183D               	xorwf	??_activar_alarma,w,c
  8633  001C24  0BFE               	andlw	-2
  8634  001C26  183D               	xorwf	??_activar_alarma,w,c
  8635  001C28  6E8A               	movwf	3978,c	;volatile
  8636                           
  8637                           ;main.c: 323: _delay((unsigned long)((98)*(8000000/4000.0)));
  8638  001C2A  0EFF               	movlw	255
  8639  001C2C  6E3D               	movwf	??_activar_alarma& (0+255),c
  8640  001C2E  0E8A               	movlw	138
  8641  001C30                     u6387:
  8642  001C30  2EE8               	decfsz	wreg,f,c
  8643  001C32  D7FE               	bra	u6387
  8644  001C34  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8645  001C36  D7FC               	bra	u6387
  8646  001C38  D000               	nop2	
  8647  001C3A                     l289:
  8648                           
  8649                           ;main.c: 324: }
  8650                           ;main.c: 326: }
  8651                           ;main.c: 327: }
  8652                           ;main.c: 329: if (PORTCbits.RC5 == 0|| PORTCbits.RC6 == 0 || PORTCbits.RC7 == 0) {
  8653  001C3A  BA82               	btfsc	3970,5,c	;volatile
  8654  001C3C  AC82               	btfss	3970,6,c	;volatile
  8655  001C3E  D002               	goto	u5280
  8656  001C40  BE82               	btfsc	3970,7,c	;volatile
  8657  001C42  D01F               	goto	l290
  8658  001C44                     u5280:
  8659                           
  8660                           ;main.c: 335: LATBbits.LATB1 = !LATBbits.LATB1;;
  8661  001C44  B28A               	btfsc	3978,1,c	;volatile
  8662  001C46  D003               	goto	u5290
  8663  001C48  6A3D               	clrf	??_activar_alarma& (0+255),c
  8664  001C4A  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8665  001C4C  D001               	goto	u5308
  8666  001C4E                     u5290:
  8667  001C4E  6A3D               	clrf	??_activar_alarma& (0+255),c
  8668  001C50                     u5308:
  8669  001C50  463D               	rlncf	??_activar_alarma,f,c
  8670  001C52  508A               	movf	3978,w,c	;volatile
  8671  001C54  183D               	xorwf	??_activar_alarma,w,c
  8672  001C56  0BFD               	andlw	-3
  8673  001C58  183D               	xorwf	??_activar_alarma,w,c
  8674  001C5A  6E8A               	movwf	3978,c	;volatile
  8675                           
  8676                           ;main.c: 336: LATBbits.LATB0 = !LATBbits.LATB0;
  8677  001C5C  B08A               	btfsc	3978,0,c	;volatile
  8678  001C5E  D003               	goto	u5310
  8679  001C60  6A3D               	clrf	??_activar_alarma& (0+255),c
  8680  001C62  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8681  001C64  D001               	goto	u5328
  8682  001C66                     u5310:
  8683  001C66  6A3D               	clrf	??_activar_alarma& (0+255),c
  8684  001C68                     u5328:
  8685  001C68  508A               	movf	3978,w,c	;volatile
  8686  001C6A  183D               	xorwf	??_activar_alarma,w,c
  8687  001C6C  0BFE               	andlw	-2
  8688  001C6E  183D               	xorwf	??_activar_alarma,w,c
  8689  001C70  6E8A               	movwf	3978,c	;volatile
  8690                           
  8691                           ;main.c: 337: _delay((unsigned long)((98)*(8000000/4000.0)));
  8692  001C72  0EFF               	movlw	255
  8693  001C74  6E3D               	movwf	??_activar_alarma& (0+255),c
  8694  001C76  0E8A               	movlw	138
  8695  001C78                     u6397:
  8696  001C78  2EE8               	decfsz	wreg,f,c
  8697  001C7A  D7FE               	bra	u6397
  8698  001C7C  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8699  001C7E  D7FC               	bra	u6397
  8700  001C80  D000               	nop2	
  8701  001C82                     l290:
  8702  001C82  0100               	movlb	0	; () banked
  8703  001C84  5190               	movf	_alarma_activada& (0+255),w,b
  8704  001C86  0100               	movlb	0	; () banked
  8705  001C88  1191               	iorwf	(_alarma_activada+1)& (0+255),w,b
  8706  001C8A  B4D8               	btfsc	status,2,c
  8707  001C8C  0012               	return	
  8708  001C8E  D745               	goto	l282
  8709                           
  8710                           ;main.c: 349: _delay((unsigned long)((98)*(8000000/4000.0)));
  8711                           
  8712                           ;main.c: 348: LATBbits.LATB0 = !LATBbits.LATB0;
  8713                           
  8714                           ;main.c: 347: LATBbits.LATB1 = !LATBbits.LATB1;;
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;main.c: 346: lcd_comand(0b00000010);
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;main.c: 338: }
  8721                           ;main.c: 340: }
  8722                           ;main.c: 344: if (1 != 1) {
  8723  001C90  0EFF               	movlw	255
  8724  001C92  6E3D               	movwf	??_activar_alarma& (0+255),c
  8725  001C94  0E8A               	movlw	138
  8726  001C96                     u6407:
  8727  001C96  2EE8               	decfsz	wreg,f,c
  8728  001C98  D7FE               	bra	u6407
  8729  001C9A  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8730  001C9C  D7FC               	bra	u6407
  8731  001C9E  D000               	nop2	
  8732  001CA0  0012               	return	
  8733  001CA2                     __end_of_activar_alarma:
  8734                           	opt stack 0
  8735                           tblptru	equ	0xFF8
  8736                           tblptrh	equ	0xFF7
  8737                           tblptrl	equ	0xFF6
  8738                           tablat	equ	0xFF5
  8739                           prodh	equ	0xFF4
  8740                           prodl	equ	0xFF3
  8741                           intcon	equ	0xFF2
  8742                           postinc0	equ	0xFEE
  8743                           wreg	equ	0xFE8
  8744                           postinc1	equ	0xFE6
  8745                           postdec1	equ	0xFE5
  8746                           fsr1h	equ	0xFE2
  8747                           fsr1l	equ	0xFE1
  8748                           indf2	equ	0xFDF
  8749                           postinc2	equ	0xFDE
  8750                           postdec2	equ	0xFDD
  8751                           fsr2h	equ	0xFDA
  8752                           fsr2l	equ	0xFD9
  8753                           status	equ	0xFD8
  8754                           
  8755 ;; *************** function _verificar_contrasenia *****************
  8756 ;; Defined at:
  8757 ;;		line 508 in file "main.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;  i               2    8[COMRAM] int 
  8762 ;;  equals          2    6[COMRAM] int 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  2    0[COMRAM] int 
  8765 ;; Registers used:
  8766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8774 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8775 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8776 ;;Total ram usage:       10 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		_activar_alarma
  8782 ;;		_ir_a_pantalla_ingresar_contrasenia
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text43
  8787  003370                     __ptext43:
  8788                           	opt stack 0
  8789  003370                     _verificar_contrasenia:
  8790                           	opt stack 27
  8791                           
  8792                           ;main.c: 509: int equals = 0;
  8793                           
  8794                           ;incstack = 0
  8795  003370  0E00               	movlw	0
  8796  003372  6E08               	movwf	verificar_contrasenia@equals+1,c
  8797  003374  0E00               	movlw	0
  8798  003376  6E07               	movwf	verificar_contrasenia@equals,c
  8799                           
  8800                           ;main.c: 510: for (int i = 0; i < 4; i++) {
  8801  003378  0E00               	movlw	0
  8802  00337A  6E0A               	movwf	verificar_contrasenia@i+1,c
  8803  00337C  0E00               	movlw	0
  8804  00337E  6E09               	movwf	verificar_contrasenia@i,c
  8805  003380  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  8806  003382  D003               	goto	l370
  8807  003384  500A               	movf	verificar_contrasenia@i+1,w,c
  8808  003386  E12E               	bnz	l371
  8809  003388  D029               	goto	L2
  8810  00338A                     l370:
  8811                           
  8812                           ;main.c: 511: if (array_contrasenia[i] == array_contrasenia_ingresada[i]) {
  8813  00338A  90D8               	bcf	status,0,c
  8814  00338C  3409               	rlcf	verificar_contrasenia@i,w,c
  8815  00338E  6ED9               	movwf	fsr2l,c
  8816  003390  340A               	rlcf	verificar_contrasenia@i+1,w,c
  8817  003392  6EDA               	movwf	fsr2h,c
  8818  003394  0E60               	movlw	low _array_contrasenia_ingresada
  8819  003396  26D9               	addwf	fsr2l,f,c
  8820  003398  0E00               	movlw	high _array_contrasenia_ingresada
  8821  00339A  22DA               	addwfc	fsr2h,f,c
  8822  00339C  90D8               	bcf	status,0,c
  8823  00339E  3409               	rlcf	verificar_contrasenia@i,w,c
  8824  0033A0  6EE1               	movwf	fsr1l,c
  8825  0033A2  340A               	rlcf	verificar_contrasenia@i+1,w,c
  8826  0033A4  6EE2               	movwf	fsr1h,c
  8827  0033A6  0ED7               	movlw	low _array_contrasenia
  8828  0033A8  26E1               	addwf	fsr1l,f,c
  8829  0033AA  0E00               	movlw	high _array_contrasenia
  8830  0033AC  22E2               	addwfc	fsr1h,f,c
  8831  0033AE  50DE               	movf	postinc2,w,c
  8832  0033B0  18E6               	xorwf	postinc1,w,c
  8833  0033B2  E109               	bnz	l4407
  8834  0033B4  50DE               	movf	postinc2,w,c
  8835  0033B6  18E6               	xorwf	postinc1,w,c
  8836  0033B8  A4D8               	btfss	status,2,c
  8837  0033BA  D005               	goto	l372
  8838                           
  8839                           ;main.c: 512: equals = 1;
  8840  0033BC  0E00               	movlw	0
  8841  0033BE  6E08               	movwf	verificar_contrasenia@equals+1,c
  8842  0033C0  0E01               	movlw	1
  8843  0033C2  6E07               	movwf	verificar_contrasenia@equals,c
  8844                           
  8845                           ;main.c: 513: } else {
  8846  0033C4  D005               	goto	l373
  8847  0033C6                     l372:
  8848  0033C6                     l4407:
  8849                           
  8850                           ;main.c: 514: equals = 0;
  8851  0033C6  0E00               	movlw	0
  8852  0033C8  6E08               	movwf	verificar_contrasenia@equals+1,c
  8853  0033CA  0E00               	movlw	0
  8854  0033CC  6E07               	movwf	verificar_contrasenia@equals,c
  8855                           
  8856                           ;main.c: 515: break;
  8857  0033CE  D00A               	goto	u5090
  8858  0033D0                     l373:
  8859  0033D0  4A09               	infsnz	verificar_contrasenia@i,f,c
  8860  0033D2  2A0A               	incf	verificar_contrasenia@i+1,f,c
  8861  0033D4  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  8862  0033D6  D7D9               	goto	l370
  8863  0033D8  500A               	movf	verificar_contrasenia@i+1,w,c
  8864  0033DA  E104               	bnz	u5090
  8865  0033DC                     L2:
  8866  0033DC  0E04               	movlw	4
  8867  0033DE  5C09               	subwf	verificar_contrasenia@i,w,c
  8868  0033E0  A0D8               	btfss	status,0,c
  8869  0033E2  D7D3               	goto	l370
  8870  0033E4                     u5090:
  8871  0033E4                     l371:
  8872                           
  8873                           ;main.c: 516: }
  8874                           ;main.c: 517: }
  8875                           ;main.c: 518: return equals;
  8876  0033E4  C007  F001         	movff	verificar_contrasenia@equals,?_verificar_contrasenia
  8877  0033E8  C008  F002         	movff	verificar_contrasenia@equals+1,?_verificar_contrasenia+1
  8878  0033EC  0012               	return		;funcret
  8879  0033EE                     __end_of_verificar_contrasenia:
  8880                           	opt stack 0
  8881                           tblptru	equ	0xFF8
  8882                           tblptrh	equ	0xFF7
  8883                           tblptrl	equ	0xFF6
  8884                           tablat	equ	0xFF5
  8885                           prodh	equ	0xFF4
  8886                           prodl	equ	0xFF3
  8887                           intcon	equ	0xFF2
  8888                           postinc0	equ	0xFEE
  8889                           wreg	equ	0xFE8
  8890                           postinc1	equ	0xFE6
  8891                           postdec1	equ	0xFE5
  8892                           fsr1h	equ	0xFE2
  8893                           fsr1l	equ	0xFE1
  8894                           indf2	equ	0xFDF
  8895                           postinc2	equ	0xFDE
  8896                           postdec2	equ	0xFDD
  8897                           fsr2h	equ	0xFDA
  8898                           fsr2l	equ	0xFD9
  8899                           status	equ	0xFD8
  8900                           
  8901 ;; *************** function _lcd_comand *****************
  8902 ;; Defined at:
  8903 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  d               1    wreg     unsigned char 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  d               1    4[COMRAM] unsigned char 
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, status,2, status,0, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8918 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8921 ;;Total ram usage:        1 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; Hardware stack levels required when called:    2
  8924 ;; This function calls:
  8925 ;;		_lcd_send_byte
  8926 ;; This function is called by:
  8927 ;;		_activar_alarma
  8928 ;;		_setup
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text44
  8933  003B30                     __ptext44:
  8934                           	opt stack 0
  8935  003B30                     _lcd_comand:
  8936                           	opt stack 27
  8937                           
  8938                           ;incstack = 0
  8939                           ;lcd_comand@d stored from wreg
  8940  003B30  6E05               	movwf	lcd_comand@d,c
  8941                           
  8942                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  8943  003B32  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  8944  003B36  0E00               	movlw	0
  8945  003B38  ECF2  F01C         	call	_lcd_send_byte
  8946  003B3C  0012               	return		;funcret
  8947  003B3E                     __end_of_lcd_comand:
  8948                           	opt stack 0
  8949                           tblptru	equ	0xFF8
  8950                           tblptrh	equ	0xFF7
  8951                           tblptrl	equ	0xFF6
  8952                           tablat	equ	0xFF5
  8953                           prodh	equ	0xFF4
  8954                           prodl	equ	0xFF3
  8955                           intcon	equ	0xFF2
  8956                           postinc0	equ	0xFEE
  8957                           wreg	equ	0xFE8
  8958                           postinc1	equ	0xFE6
  8959                           postdec1	equ	0xFE5
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           indf2	equ	0xFDF
  8963                           postinc2	equ	0xFDE
  8964                           postdec2	equ	0xFDD
  8965                           fsr2h	equ	0xFDA
  8966                           fsr2l	equ	0xFD9
  8967                           status	equ	0xFD8
  8968                           
  8969 ;; *************** function _ingreso_numero *****************
  8970 ;; Defined at:
  8971 ;;		line 131 in file "main.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;		None
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8989 ;;Total ram usage:        2 bytes
  8990 ;; Hardware stack levels used:    1
  8991 ;; Hardware stack levels required when called:    6
  8992 ;; This function calls:
  8993 ;;		_guarda_numero_ingresado
  8994 ;; This function is called by:
  8995 ;;		_activar_alarma
  8996 ;;		_ir_a_pantalla_ingresar_contrasenia
  8997 ;;		_ir_a_pantalla_editar_contrasenia
  8998 ;;		_editar_fecha_reloj_digital
  8999 ;;		_editar_hora_reloj_digital
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           	psect	text45
  9004  000FFC                     __ptext45:
  9005                           	opt stack 0
  9006  000FFC                     _ingreso_numero:
  9007                           	opt stack 18
  9008                           
  9009                           ;main.c: 132: LATAbits.LATA0 = 1;
  9010                           
  9011                           ;incstack = 0
  9012  000FFC  8089               	bsf	3977,0,c	;volatile
  9013                           
  9014                           ;main.c: 133: LATAbits.LATA1 = 0;
  9015  000FFE  9289               	bcf	3977,1,c	;volatile
  9016                           
  9017                           ;main.c: 134: LATAbits.LATA2 = 0;
  9018  001000  9489               	bcf	3977,2,c	;volatile
  9019                           
  9020                           ;main.c: 135: LATAbits.LATA3 = 0;
  9021  001002  9689               	bcf	3977,3,c	;volatile
  9022                           
  9023                           ;main.c: 136: {
  9024                           ;main.c: 137: if (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  9025  001004  BA80               	btfsc	3968,5,c	;volatile
  9026  001006  A089               	btfss	3977,0,c	;volatile
  9027  001008  D01A               	goto	u4700
  9028                           
  9029                           ;main.c: 138: key = 1;
  9030  00100A  0E01               	movlw	1
  9031  00100C  0100               	movlb	0	; () banked
  9032  00100E  6FA4               	movwf	_key& (0+255),b
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;main.c: 139: guarda_numero_ingresado(key);
  9036  001010  0100               	movlb	0	; () banked
  9037  001012  51A4               	movf	_key& (0+255),w,b
  9038  001014  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9039  001016  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9040  001018  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9041  00101C  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9042  001020  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9043                           
  9044                           ;main.c: 140: while (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  9045  001024  D008               	goto	l192
  9046  001026                     
  9047                           ;main.c: 141: _delay((unsigned long)((40)*(8000000/4000.0)));
  9048  001026  0E68               	movlw	104
  9049  001028  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9050  00102A  0EE4               	movlw	228
  9051  00102C                     u6417:
  9052  00102C  2EE8               	decfsz	wreg,f,c
  9053  00102E  D7FE               	bra	u6417
  9054  001030  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9055  001032  D7FC               	bra	u6417
  9056  001034  D000               	nop2	
  9057  001036                     l192:
  9058  001036  AA80               	btfss	3968,5,c	;volatile
  9059  001038  D002               	goto	u4700
  9060  00103A  B089               	btfsc	3977,0,c	;volatile
  9061  00103C  D7F4               	goto	l193
  9062  00103E                     u4700:
  9063                           
  9064                           ;main.c: 142: }
  9065                           ;main.c: 143: }
  9066                           ;main.c: 144: if (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  9067  00103E  BE80               	btfsc	3968,7,c	;volatile
  9068  001040  A089               	btfss	3977,0,c	;volatile
  9069  001042  D01A               	goto	u4740
  9070                           
  9071                           ;main.c: 145: key = 2;
  9072  001044  0E02               	movlw	2
  9073  001046  0100               	movlb	0	; () banked
  9074  001048  6FA4               	movwf	_key& (0+255),b
  9075                           
  9076                           ; BSR set to: 0
  9077                           ;main.c: 146: guarda_numero_ingresado(key);
  9078  00104A  0100               	movlb	0	; () banked
  9079  00104C  51A4               	movf	_key& (0+255),w,b
  9080  00104E  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9081  001050  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9082  001052  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9083  001056  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9084  00105A  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9085                           
  9086                           ;main.c: 147: while (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  9087  00105E  D008               	goto	l198
  9088  001060                     
  9089                           ;main.c: 148: _delay((unsigned long)((40)*(8000000/4000.0)));
  9090  001060  0E68               	movlw	104
  9091  001062  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9092  001064  0EE4               	movlw	228
  9093  001066                     u6427:
  9094  001066  2EE8               	decfsz	wreg,f,c
  9095  001068  D7FE               	bra	u6427
  9096  00106A  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9097  00106C  D7FC               	bra	u6427
  9098  00106E  D000               	nop2	
  9099  001070                     l198:
  9100  001070  AE80               	btfss	3968,7,c	;volatile
  9101  001072  D002               	goto	u4740
  9102  001074  B089               	btfsc	3977,0,c	;volatile
  9103  001076  D7F4               	goto	l199
  9104  001078                     u4740:
  9105                           
  9106                           ;main.c: 149: }
  9107                           ;main.c: 150: }
  9108                           ;main.c: 151: if (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  9109  001078  BC80               	btfsc	3968,6,c	;volatile
  9110  00107A  A089               	btfss	3977,0,c	;volatile
  9111  00107C  D01A               	goto	u4780
  9112                           
  9113                           ;main.c: 152: key = 3;
  9114  00107E  0E03               	movlw	3
  9115  001080  0100               	movlb	0	; () banked
  9116  001082  6FA4               	movwf	_key& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;main.c: 153: guarda_numero_ingresado(key);
  9120  001084  0100               	movlb	0	; () banked
  9121  001086  51A4               	movf	_key& (0+255),w,b
  9122  001088  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9123  00108A  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9124  00108C  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9125  001090  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9126  001094  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9127                           
  9128                           ;main.c: 154: while (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  9129  001098  D008               	goto	l204
  9130  00109A                     
  9131                           ;main.c: 155: _delay((unsigned long)((40)*(8000000/4000.0)));
  9132  00109A  0E68               	movlw	104
  9133  00109C  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9134  00109E  0EE4               	movlw	228
  9135  0010A0                     u6437:
  9136  0010A0  2EE8               	decfsz	wreg,f,c
  9137  0010A2  D7FE               	bra	u6437
  9138  0010A4  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9139  0010A6  D7FC               	bra	u6437
  9140  0010A8  D000               	nop2	
  9141  0010AA                     l204:
  9142  0010AA  AC80               	btfss	3968,6,c	;volatile
  9143  0010AC  D002               	goto	u4780
  9144  0010AE  B089               	btfsc	3977,0,c	;volatile
  9145  0010B0  D7F4               	goto	l205
  9146  0010B2                     u4780:
  9147                           
  9148                           ;main.c: 156: }
  9149                           ;main.c: 157: }
  9150                           ;main.c: 158: }
  9151                           ;main.c: 159: LATAbits.LATA0 = 0;
  9152  0010B2  9089               	bcf	3977,0,c	;volatile
  9153                           
  9154                           ;main.c: 160: LATAbits.LATA1 = 1;
  9155  0010B4  8289               	bsf	3977,1,c	;volatile
  9156                           
  9157                           ;main.c: 161: LATAbits.LATA2 = 0;
  9158  0010B6  9489               	bcf	3977,2,c	;volatile
  9159                           
  9160                           ;main.c: 162: LATAbits.LATA3 = 0;
  9161  0010B8  9689               	bcf	3977,3,c	;volatile
  9162                           
  9163                           ;main.c: 163: {
  9164                           ;main.c: 164: if (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  9165  0010BA  BA80               	btfsc	3968,5,c	;volatile
  9166  0010BC  A289               	btfss	3977,1,c	;volatile
  9167  0010BE  D01A               	goto	u4820
  9168                           
  9169                           ;main.c: 165: key = 4;
  9170  0010C0  0E04               	movlw	4
  9171  0010C2  0100               	movlb	0	; () banked
  9172  0010C4  6FA4               	movwf	_key& (0+255),b
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;main.c: 166: guarda_numero_ingresado(key);
  9176  0010C6  0100               	movlb	0	; () banked
  9177  0010C8  51A4               	movf	_key& (0+255),w,b
  9178  0010CA  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9179  0010CC  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9180  0010CE  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9181  0010D2  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9182  0010D6  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9183                           
  9184                           ;main.c: 167: while (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  9185  0010DA  D008               	goto	l210
  9186  0010DC                     
  9187                           ;main.c: 168: _delay((unsigned long)((40)*(8000000/4000.0)));
  9188  0010DC  0E68               	movlw	104
  9189  0010DE  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9190  0010E0  0EE4               	movlw	228
  9191  0010E2                     u6447:
  9192  0010E2  2EE8               	decfsz	wreg,f,c
  9193  0010E4  D7FE               	bra	u6447
  9194  0010E6  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9195  0010E8  D7FC               	bra	u6447
  9196  0010EA  D000               	nop2	
  9197  0010EC                     l210:
  9198  0010EC  AA80               	btfss	3968,5,c	;volatile
  9199  0010EE  D002               	goto	u4820
  9200  0010F0  B289               	btfsc	3977,1,c	;volatile
  9201  0010F2  D7F4               	goto	l211
  9202  0010F4                     u4820:
  9203                           
  9204                           ;main.c: 169: }
  9205                           ;main.c: 170: }
  9206                           ;main.c: 171: if (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  9207  0010F4  BE80               	btfsc	3968,7,c	;volatile
  9208  0010F6  A289               	btfss	3977,1,c	;volatile
  9209  0010F8  D01A               	goto	u4860
  9210                           
  9211                           ;main.c: 172: key = 5;
  9212  0010FA  0E05               	movlw	5
  9213  0010FC  0100               	movlb	0	; () banked
  9214  0010FE  6FA4               	movwf	_key& (0+255),b
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;main.c: 173: guarda_numero_ingresado(key);
  9218  001100  0100               	movlb	0	; () banked
  9219  001102  51A4               	movf	_key& (0+255),w,b
  9220  001104  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9221  001106  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9222  001108  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9223  00110C  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9224  001110  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9225                           
  9226                           ;main.c: 174: while (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  9227  001114  D008               	goto	l216
  9228  001116                     
  9229                           ;main.c: 175: _delay((unsigned long)((40)*(8000000/4000.0)));
  9230  001116  0E68               	movlw	104
  9231  001118  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9232  00111A  0EE4               	movlw	228
  9233  00111C                     u6457:
  9234  00111C  2EE8               	decfsz	wreg,f,c
  9235  00111E  D7FE               	bra	u6457
  9236  001120  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9237  001122  D7FC               	bra	u6457
  9238  001124  D000               	nop2	
  9239  001126                     l216:
  9240  001126  AE80               	btfss	3968,7,c	;volatile
  9241  001128  D002               	goto	u4860
  9242  00112A  B289               	btfsc	3977,1,c	;volatile
  9243  00112C  D7F4               	goto	l217
  9244  00112E                     u4860:
  9245                           
  9246                           ;main.c: 176: }
  9247                           ;main.c: 177: }
  9248                           ;main.c: 178: if (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  9249  00112E  BC80               	btfsc	3968,6,c	;volatile
  9250  001130  A289               	btfss	3977,1,c	;volatile
  9251  001132  D01A               	goto	u4900
  9252                           
  9253                           ;main.c: 179: key = 6;
  9254  001134  0E06               	movlw	6
  9255  001136  0100               	movlb	0	; () banked
  9256  001138  6FA4               	movwf	_key& (0+255),b
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;main.c: 180: guarda_numero_ingresado(key);
  9260  00113A  0100               	movlb	0	; () banked
  9261  00113C  51A4               	movf	_key& (0+255),w,b
  9262  00113E  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9263  001140  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9264  001142  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9265  001146  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9266  00114A  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9267                           
  9268                           ;main.c: 181: while (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  9269  00114E  D008               	goto	l222
  9270  001150                     
  9271                           ;main.c: 182: _delay((unsigned long)((40)*(8000000/4000.0)));
  9272  001150  0E68               	movlw	104
  9273  001152  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9274  001154  0EE4               	movlw	228
  9275  001156                     u6467:
  9276  001156  2EE8               	decfsz	wreg,f,c
  9277  001158  D7FE               	bra	u6467
  9278  00115A  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9279  00115C  D7FC               	bra	u6467
  9280  00115E  D000               	nop2	
  9281  001160                     l222:
  9282  001160  AC80               	btfss	3968,6,c	;volatile
  9283  001162  D002               	goto	u4900
  9284  001164  B289               	btfsc	3977,1,c	;volatile
  9285  001166  D7F4               	goto	l223
  9286  001168                     u4900:
  9287                           
  9288                           ;main.c: 183: }
  9289                           ;main.c: 184: }
  9290                           ;main.c: 185: }
  9291                           ;main.c: 186: LATAbits.LATA0 = 0;
  9292  001168  9089               	bcf	3977,0,c	;volatile
  9293                           
  9294                           ;main.c: 187: LATAbits.LATA1 = 0;
  9295  00116A  9289               	bcf	3977,1,c	;volatile
  9296                           
  9297                           ;main.c: 188: LATAbits.LATA2 = 1;
  9298  00116C  8489               	bsf	3977,2,c	;volatile
  9299                           
  9300                           ;main.c: 189: LATAbits.LATA3 = 0;
  9301  00116E  9689               	bcf	3977,3,c	;volatile
  9302                           
  9303                           ;main.c: 190: {
  9304                           ;main.c: 191: if (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  9305  001170  BA80               	btfsc	3968,5,c	;volatile
  9306  001172  A489               	btfss	3977,2,c	;volatile
  9307  001174  D01A               	goto	u4940
  9308                           
  9309                           ;main.c: 192: key = 7;
  9310  001176  0E07               	movlw	7
  9311  001178  0100               	movlb	0	; () banked
  9312  00117A  6FA4               	movwf	_key& (0+255),b
  9313                           
  9314                           ; BSR set to: 0
  9315                           ;main.c: 193: guarda_numero_ingresado(key);
  9316  00117C  0100               	movlb	0	; () banked
  9317  00117E  51A4               	movf	_key& (0+255),w,b
  9318  001180  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9319  001182  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9320  001184  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9321  001188  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9322  00118C  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9323                           
  9324                           ;main.c: 194: while (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  9325  001190  D008               	goto	l228
  9326  001192                     
  9327                           ;main.c: 195: _delay((unsigned long)((40)*(8000000/4000.0)));
  9328  001192  0E68               	movlw	104
  9329  001194  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9330  001196  0EE4               	movlw	228
  9331  001198                     u6477:
  9332  001198  2EE8               	decfsz	wreg,f,c
  9333  00119A  D7FE               	bra	u6477
  9334  00119C  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9335  00119E  D7FC               	bra	u6477
  9336  0011A0  D000               	nop2	
  9337  0011A2                     l228:
  9338  0011A2  AA80               	btfss	3968,5,c	;volatile
  9339  0011A4  D002               	goto	u4940
  9340  0011A6  B489               	btfsc	3977,2,c	;volatile
  9341  0011A8  D7F4               	goto	l229
  9342  0011AA                     u4940:
  9343                           
  9344                           ;main.c: 196: }
  9345                           ;main.c: 197: }
  9346                           ;main.c: 198: if (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  9347  0011AA  BE80               	btfsc	3968,7,c	;volatile
  9348  0011AC  A489               	btfss	3977,2,c	;volatile
  9349  0011AE  D01A               	goto	u4980
  9350                           
  9351                           ;main.c: 199: key = 8;
  9352  0011B0  0E08               	movlw	8
  9353  0011B2  0100               	movlb	0	; () banked
  9354  0011B4  6FA4               	movwf	_key& (0+255),b
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;main.c: 200: guarda_numero_ingresado(key);
  9358  0011B6  0100               	movlb	0	; () banked
  9359  0011B8  51A4               	movf	_key& (0+255),w,b
  9360  0011BA  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9361  0011BC  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9362  0011BE  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9363  0011C2  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9364  0011C6  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9365                           
  9366                           ;main.c: 201: while (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  9367  0011CA  D008               	goto	l234
  9368  0011CC                     
  9369                           ;main.c: 202: _delay((unsigned long)((40)*(8000000/4000.0)));
  9370  0011CC  0E68               	movlw	104
  9371  0011CE  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9372  0011D0  0EE4               	movlw	228
  9373  0011D2                     u6487:
  9374  0011D2  2EE8               	decfsz	wreg,f,c
  9375  0011D4  D7FE               	bra	u6487
  9376  0011D6  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9377  0011D8  D7FC               	bra	u6487
  9378  0011DA  D000               	nop2	
  9379  0011DC                     l234:
  9380  0011DC  AE80               	btfss	3968,7,c	;volatile
  9381  0011DE  D002               	goto	u4980
  9382  0011E0  B489               	btfsc	3977,2,c	;volatile
  9383  0011E2  D7F4               	goto	l235
  9384  0011E4                     u4980:
  9385                           
  9386                           ;main.c: 203: }
  9387                           ;main.c: 204: }
  9388                           ;main.c: 205: if (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  9389  0011E4  BC80               	btfsc	3968,6,c	;volatile
  9390  0011E6  A489               	btfss	3977,2,c	;volatile
  9391  0011E8  D01A               	goto	u5020
  9392                           
  9393                           ;main.c: 206: key = 9;
  9394  0011EA  0E09               	movlw	9
  9395  0011EC  0100               	movlb	0	; () banked
  9396  0011EE  6FA4               	movwf	_key& (0+255),b
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;main.c: 207: guarda_numero_ingresado(key);
  9400  0011F0  0100               	movlb	0	; () banked
  9401  0011F2  51A4               	movf	_key& (0+255),w,b
  9402  0011F4  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9403  0011F6  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9404  0011F8  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9405  0011FC  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9406  001200  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9407                           
  9408                           ;main.c: 208: while (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  9409  001204  D008               	goto	l240
  9410  001206                     
  9411                           ;main.c: 209: _delay((unsigned long)((40)*(8000000/4000.0)));
  9412  001206  0E68               	movlw	104
  9413  001208  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9414  00120A  0EE4               	movlw	228
  9415  00120C                     u6497:
  9416  00120C  2EE8               	decfsz	wreg,f,c
  9417  00120E  D7FE               	bra	u6497
  9418  001210  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9419  001212  D7FC               	bra	u6497
  9420  001214  D000               	nop2	
  9421  001216                     l240:
  9422  001216  AC80               	btfss	3968,6,c	;volatile
  9423  001218  D002               	goto	u5020
  9424  00121A  B489               	btfsc	3977,2,c	;volatile
  9425  00121C  D7F4               	goto	l241
  9426  00121E                     u5020:
  9427                           
  9428                           ;main.c: 210: }
  9429                           ;main.c: 211: }
  9430                           ;main.c: 212: }
  9431                           ;main.c: 213: LATAbits.LATA0 = 0;
  9432  00121E  9089               	bcf	3977,0,c	;volatile
  9433                           
  9434                           ;main.c: 214: LATAbits.LATA1 = 0;
  9435  001220  9289               	bcf	3977,1,c	;volatile
  9436                           
  9437                           ;main.c: 215: LATAbits.LATA2 = 0;
  9438  001222  9489               	bcf	3977,2,c	;volatile
  9439                           
  9440                           ;main.c: 216: LATAbits.LATA3 = 1;
  9441  001224  8689               	bsf	3977,3,c	;volatile
  9442                           
  9443                           ;main.c: 218: if (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  9444  001226  AE80               	btfss	3968,7,c	;volatile
  9445  001228  0012               	return	
  9446  00122A  A689               	btfss	3977,3,c	;volatile
  9447  00122C  0012               	return	
  9448                           
  9449                           ;main.c: 219: key = 0;
  9450  00122E  0E00               	movlw	0
  9451  001230  0100               	movlb	0	; () banked
  9452  001232  6FA4               	movwf	_key& (0+255),b
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;main.c: 220: guarda_numero_ingresado(key);
  9456  001234  0100               	movlb	0	; () banked
  9457  001236  51A4               	movf	_key& (0+255),w,b
  9458  001238  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9459  00123A  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9460  00123C  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9461  001240  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9462  001244  EC30  F019         	call	_guarda_numero_ingresado	;wreg free
  9463                           
  9464                           ;main.c: 221: while (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  9465  001248  D008               	goto	l246
  9466  00124A                     
  9467                           ;main.c: 222: _delay((unsigned long)((40)*(8000000/4000.0)));
  9468  00124A  0E68               	movlw	104
  9469  00124C  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9470  00124E  0EE4               	movlw	228
  9471  001250                     u6507:
  9472  001250  2EE8               	decfsz	wreg,f,c
  9473  001252  D7FE               	bra	u6507
  9474  001254  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9475  001256  D7FC               	bra	u6507
  9476  001258  D000               	nop2	
  9477  00125A                     l246:
  9478  00125A  AE80               	btfss	3968,7,c	;volatile
  9479  00125C  0012               	return	
  9480  00125E  A689               	btfss	3977,3,c	;volatile
  9481  001260  0012               	return	
  9482  001262  D7F3               	goto	l247
  9483  001264                     __end_of_ingreso_numero:
  9484                           	opt stack 0
  9485                           tblptru	equ	0xFF8
  9486                           tblptrh	equ	0xFF7
  9487                           tblptrl	equ	0xFF6
  9488                           tablat	equ	0xFF5
  9489                           prodh	equ	0xFF4
  9490                           prodl	equ	0xFF3
  9491                           intcon	equ	0xFF2
  9492                           postinc0	equ	0xFEE
  9493                           wreg	equ	0xFE8
  9494                           postinc1	equ	0xFE6
  9495                           postdec1	equ	0xFE5
  9496                           fsr1h	equ	0xFE2
  9497                           fsr1l	equ	0xFE1
  9498                           indf2	equ	0xFDF
  9499                           postinc2	equ	0xFDE
  9500                           postdec2	equ	0xFDD
  9501                           fsr2h	equ	0xFDA
  9502                           fsr2l	equ	0xFD9
  9503                           status	equ	0xFD8
  9504                           
  9505 ;; *************** function _guarda_numero_ingresado *****************
  9506 ;; Defined at:
  9507 ;;		line 118 in file "main.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  num             2   56[COMRAM] PTR int 
  9510 ;;		 -> RAM(3775), 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9526 ;;Total ram usage:        2 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    5
  9529 ;; This function calls:
  9530 ;;		_lcd_gotoxy
  9531 ;;		_lcd_putrs
  9532 ;;		_sprintf
  9533 ;; This function is called by:
  9534 ;;		_ingreso_numero
  9535 ;; This function uses a non-reentrant model
  9536 ;;
  9537                           
  9538                           	psect	text46
  9539  003260                     __ptext46:
  9540                           	opt stack 0
  9541  003260                     _guarda_numero_ingresado:
  9542                           	opt stack 18
  9543                           
  9544                           ;main.c: 119: if (motivo_ingreso_de_numeros == 0) {
  9545                           
  9546                           ;incstack = 0
  9547  003260  0100               	movlb	0	; () banked
  9548  003262  5192               	movf	_motivo_ingreso_de_numeros& (0+255),w,b
  9549  003264  0100               	movlb	0	; () banked
  9550  003266  1193               	iorwf	(_motivo_ingreso_de_numeros+1)& (0+255),w,b
  9551  003268  A4D8               	btfss	status,2,c
  9552  00326A  D02D               	goto	l186
  9553                           
  9554                           ; BSR set to: 0
  9555                           ;main.c: 120: array_contrasenia_ingresada[numeros_ingresados] = num;
  9556  00326C  90D8               	bcf	status,0,c
  9557  00326E  0100               	movlb	0	; () banked
  9558  003270  3594               	rlcf	_numeros_ingresados& (0+255),w,b
  9559  003272  6ED9               	movwf	fsr2l,c
  9560  003274  0100               	movlb	0	; () banked
  9561  003276  3595               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
  9562  003278  6EDA               	movwf	fsr2h,c
  9563  00327A  0E60               	movlw	low _array_contrasenia_ingresada
  9564  00327C  26D9               	addwf	fsr2l,f,c
  9565  00327E  0E00               	movlw	high _array_contrasenia_ingresada
  9566  003280  22DA               	addwfc	fsr2h,f,c
  9567  003282  C039  FFDE         	movff	guarda_numero_ingresado@num,postinc2
  9568  003286  C03A  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;main.c: 121: lcd_gotoxy(numeros_ingresados + 1, 2);
  9572  00328A  0E02               	movlw	2
  9573  00328C  6E05               	movwf	lcd_gotoxy@y,c
  9574  00328E  0100               	movlb	0	; () banked
  9575  003290  2994               	incf	_numeros_ingresados& (0+255),w,b
  9576  003292  EC42  F01D         	call	_lcd_gotoxy
  9577                           
  9578                           ;main.c: 122: sprintf(buffer2, "%01u", num);
  9579  003296  0EA5               	movlw	low _buffer2
  9580  003298  6E22               	movwf	sprintf@sp,c
  9581  00329A  0E00               	movlw	high _buffer2
  9582  00329C  6E23               	movwf	sprintf@sp+1,c
  9583  00329E  0EF5               	movlw	low STR_13
  9584  0032A0  6E24               	movwf	sprintf@f,c
  9585  0032A2  0E0F               	movlw	high STR_13
  9586  0032A4  6E25               	movwf	sprintf@f+1,c
  9587  0032A6  C039  F026         	movff	guarda_numero_ingresado@num,?_sprintf+4
  9588  0032AA  C03A  F027         	movff	guarda_numero_ingresado@num+1,?_sprintf+5
  9589  0032AE  EC4E  F00A         	call	_sprintf	;wreg free
  9590                           
  9591                           ;main.c: 123: lcd_putrs(buffer2);
  9592  0032B2  0EA5               	movlw	low _buffer2
  9593  0032B4  6E09               	movwf	lcd_putrs@ptr,c
  9594  0032B6  0E00               	movlw	high _buffer2
  9595  0032B8  6E0A               	movwf	lcd_putrs@ptr+1,c
  9596  0032BA  ECD3  F01B         	call	_lcd_putrs	;wreg free
  9597                           
  9598                           ;main.c: 124: numeros_ingresados++;
  9599  0032BE  0100               	movlb	0	; () banked
  9600  0032C0  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  9601  0032C2  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  9602                           
  9603                           ;main.c: 125: } else {
  9604  0032C4  0012               	return	
  9605  0032C6                     l186:
  9606                           
  9607                           ; BSR set to: 0
  9608                           ;main.c: 126: numeros_para_fecha[numeros_ingresados] = num;
  9609                           
  9610                           ; BSR set to: 0
  9611  0032C6  90D8               	bcf	status,0,c
  9612  0032C8  0100               	movlb	0	; () banked
  9613  0032CA  3594               	rlcf	_numeros_ingresados& (0+255),w,b
  9614  0032CC  6ED9               	movwf	fsr2l,c
  9615  0032CE  0100               	movlb	0	; () banked
  9616  0032D0  3595               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
  9617  0032D2  6EDA               	movwf	fsr2h,c
  9618  0032D4  0E80               	movlw	low _numeros_para_fecha
  9619  0032D6  26D9               	addwf	fsr2l,f,c
  9620  0032D8  0E00               	movlw	high _numeros_para_fecha
  9621  0032DA  22DA               	addwfc	fsr2h,f,c
  9622  0032DC  C039  FFDE         	movff	guarda_numero_ingresado@num,postinc2
  9623  0032E0  C03A  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;main.c: 127: numeros_ingresados++;
  9627  0032E4  0100               	movlb	0	; () banked
  9628  0032E6  4B94               	infsnz	_numeros_ingresados& (0+255),f,b
  9629  0032E8  2B95               	incf	(_numeros_ingresados+1)& (0+255),f,b
  9630  0032EA  0012               	return	
  9631  0032EC                     __end_of_guarda_numero_ingresado:
  9632                           	opt stack 0
  9633                           tblptru	equ	0xFF8
  9634                           tblptrh	equ	0xFF7
  9635                           tblptrl	equ	0xFF6
  9636                           tablat	equ	0xFF5
  9637                           prodh	equ	0xFF4
  9638                           prodl	equ	0xFF3
  9639                           intcon	equ	0xFF2
  9640                           postinc0	equ	0xFEE
  9641                           wreg	equ	0xFE8
  9642                           postinc1	equ	0xFE6
  9643                           postdec1	equ	0xFE5
  9644                           fsr1h	equ	0xFE2
  9645                           fsr1l	equ	0xFE1
  9646                           indf2	equ	0xFDF
  9647                           postinc2	equ	0xFDE
  9648                           postdec2	equ	0xFDD
  9649                           fsr2h	equ	0xFDA
  9650                           fsr2l	equ	0xFD9
  9651                           status	equ	0xFD8
  9652                           
  9653 ;; *************** function _cambiar_opcion *****************
  9654 ;; Defined at:
  9655 ;;		line 243 in file "main.c"
  9656 ;; Parameters:    Size  Location     Type
  9657 ;;		None
  9658 ;; Auto vars:     Size  Location     Type
  9659 ;;		None
  9660 ;; Return value:  Size  Location     Type
  9661 ;;                  1    wreg      void 
  9662 ;; Registers used:
  9663 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9664 ;; Tracked objects:
  9665 ;;		On entry : 0/0
  9666 ;;		On exit  : 0/0
  9667 ;;		Unchanged: 0/0
  9668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9672 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9673 ;;Total ram usage:        1 bytes
  9674 ;; Hardware stack levels used:    1
  9675 ;; Hardware stack levels required when called:    5
  9676 ;; This function calls:
  9677 ;;		_lcd_gotoxy
  9678 ;;		_lcd_putrs
  9679 ;;		_sprintf
  9680 ;; This function is called by:
  9681 ;;		_ir_a_pantalla_edicion
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text47
  9686  002C44                     __ptext47:
  9687                           	opt stack 0
  9688  002C44                     _cambiar_opcion:
  9689                           	opt stack 21
  9690                           
  9691                           ;main.c: 244: LATAbits.LATA0 = 0;
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;incstack = 0
  9695  002C44  9089               	bcf	3977,0,c	;volatile
  9696                           
  9697                           ;main.c: 245: LATAbits.LATA1 = 0;
  9698  002C46  9289               	bcf	3977,1,c	;volatile
  9699                           
  9700                           ;main.c: 246: LATAbits.LATA2 = 1;
  9701  002C48  8489               	bsf	3977,2,c	;volatile
  9702                           
  9703                           ;main.c: 247: LATAbits.LATA3 = 0;
  9704  002C4A  9689               	bcf	3977,3,c	;volatile
  9705                           
  9706                           ;main.c: 248: if (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
  9707  002C4C  B482               	btfsc	3970,2,c	;volatile
  9708  002C4E  A489               	btfss	3977,2,c	;volatile
  9709  002C50  D01D               	goto	u5750
  9710                           
  9711                           ;main.c: 249: if (boton_seleccionar == 3) {
  9712  002C52  0E03               	movlw	3
  9713  002C54  0100               	movlb	0	; () banked
  9714  002C56  198C               	xorwf	_boton_seleccionar& (0+255),w,b
  9715  002C58  0100               	movlb	0	; () banked
  9716  002C5A  118D               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  9717  002C5C  A4D8               	btfss	status,2,c
  9718  002C5E  D006               	goto	l263
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;main.c: 250: boton_seleccionar = 0;
  9722  002C60  0E00               	movlw	0
  9723  002C62  0100               	movlb	0	; () banked
  9724  002C64  6F8D               	movwf	(_boton_seleccionar+1)& (0+255),b
  9725  002C66  0E00               	movlw	0
  9726  002C68  6F8C               	movwf	_boton_seleccionar& (0+255),b
  9727                           
  9728                           ;main.c: 251: } else {
  9729  002C6A  D00C               	goto	l265
  9730  002C6C                     l263:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;main.c: 252: boton_seleccionar++;
  9734                           
  9735                           ; BSR set to: 0
  9736  002C6C  0100               	movlb	0	; () banked
  9737  002C6E  4B8C               	infsnz	_boton_seleccionar& (0+255),f,b
  9738  002C70  2B8D               	incf	(_boton_seleccionar+1)& (0+255),f,b
  9739                           
  9740                           ; BSR set to: 0
  9741                           ;main.c: 253: }
  9742                           ;main.c: 254: while (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
  9743  002C72  D008               	goto	l265
  9744  002C74                     
  9745                           ;main.c: 255: _delay((unsigned long)((40)*(8000000/4000.0)));
  9746                           
  9747                           ; BSR set to: 0
  9748  002C74  0E68               	movlw	104
  9749  002C76  6E39               	movwf	??_cambiar_opcion& (0+255),c
  9750  002C78  0EE4               	movlw	228
  9751  002C7A                     u6517:
  9752  002C7A  2EE8               	decfsz	wreg,f,c
  9753  002C7C  D7FE               	bra	u6517
  9754  002C7E  2E39               	decfsz	??_cambiar_opcion& (0+255),f,c
  9755  002C80  D7FC               	bra	u6517
  9756  002C82  D000               	nop2	
  9757  002C84                     l265:
  9758  002C84  A482               	btfss	3970,2,c	;volatile
  9759  002C86  D002               	goto	u5750
  9760  002C88  B489               	btfsc	3977,2,c	;volatile
  9761  002C8A  D7F4               	goto	l266
  9762  002C8C                     u5750:
  9763                           
  9764                           ;main.c: 256: }
  9765                           ;main.c: 257: }
  9766                           ;main.c: 259: LATAbits.LATA0 = 0;
  9767  002C8C  9089               	bcf	3977,0,c	;volatile
  9768                           
  9769                           ;main.c: 260: LATAbits.LATA1 = 0;
  9770  002C8E  9289               	bcf	3977,1,c	;volatile
  9771                           
  9772                           ;main.c: 261: LATAbits.LATA2 = 0;
  9773  002C90  9489               	bcf	3977,2,c	;volatile
  9774                           
  9775                           ;main.c: 262: LATAbits.LATA3 = 1;
  9776  002C92  8689               	bsf	3977,3,c	;volatile
  9777                           
  9778                           ;main.c: 263: if (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
  9779  002C94  B482               	btfsc	3970,2,c	;volatile
  9780  002C96  A689               	btfss	3977,3,c	;volatile
  9781  002C98  D01D               	goto	u5800
  9782                           
  9783                           ;main.c: 264: if (boton_seleccionar == 0) {
  9784  002C9A  0100               	movlb	0	; () banked
  9785  002C9C  518C               	movf	_boton_seleccionar& (0+255),w,b
  9786  002C9E  0100               	movlb	0	; () banked
  9787  002CA0  118D               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  9788  002CA2  A4D8               	btfss	status,2,c
  9789  002CA4  D006               	goto	l271
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;main.c: 265: boton_seleccionar = 3;
  9793  002CA6  0E00               	movlw	0
  9794  002CA8  0100               	movlb	0	; () banked
  9795  002CAA  6F8D               	movwf	(_boton_seleccionar+1)& (0+255),b
  9796  002CAC  0E03               	movlw	3
  9797  002CAE  6F8C               	movwf	_boton_seleccionar& (0+255),b
  9798                           
  9799                           ;main.c: 266: } else {
  9800  002CB0  D00D               	goto	l273
  9801  002CB2                     l271:
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;main.c: 267: boton_seleccionar--;
  9805                           
  9806                           ; BSR set to: 0
  9807  002CB2  0100               	movlb	0	; () banked
  9808  002CB4  078C               	decf	_boton_seleccionar& (0+255),f,b
  9809  002CB6  A0D8               	btfss	status,0,c
  9810  002CB8  078D               	decf	(_boton_seleccionar+1)& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;main.c: 268: }
  9814                           ;main.c: 269: while (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
  9815  002CBA  D008               	goto	l273
  9816  002CBC                     
  9817                           ;main.c: 270: _delay((unsigned long)((40)*(8000000/4000.0)));
  9818                           
  9819                           ; BSR set to: 0
  9820  002CBC  0E68               	movlw	104
  9821  002CBE  6E39               	movwf	??_cambiar_opcion& (0+255),c
  9822  002CC0  0EE4               	movlw	228
  9823  002CC2                     u6527:
  9824  002CC2  2EE8               	decfsz	wreg,f,c
  9825  002CC4  D7FE               	bra	u6527
  9826  002CC6  2E39               	decfsz	??_cambiar_opcion& (0+255),f,c
  9827  002CC8  D7FC               	bra	u6527
  9828  002CCA  D000               	nop2	
  9829  002CCC                     l273:
  9830  002CCC  A482               	btfss	3970,2,c	;volatile
  9831  002CCE  D002               	goto	u5800
  9832  002CD0  B689               	btfsc	3977,3,c	;volatile
  9833  002CD2  D7F4               	goto	l274
  9834  002CD4                     u5800:
  9835                           
  9836                           ;main.c: 271: }
  9837                           ;main.c: 272: }
  9838                           ;main.c: 274: sprintf(buffer2, "%01u", boton_seleccionar);
  9839  002CD4  0EA5               	movlw	low _buffer2
  9840  002CD6  6E22               	movwf	sprintf@sp,c
  9841  002CD8  0E00               	movlw	high _buffer2
  9842  002CDA  6E23               	movwf	sprintf@sp+1,c
  9843  002CDC  0EF5               	movlw	low STR_13
  9844  002CDE  6E24               	movwf	sprintf@f,c
  9845  002CE0  0E0F               	movlw	high STR_13
  9846  002CE2  6E25               	movwf	sprintf@f+1,c
  9847  002CE4  C08C  F026         	movff	_boton_seleccionar,?_sprintf+4
  9848  002CE8  C08D  F027         	movff	_boton_seleccionar+1,?_sprintf+5
  9849  002CEC  EC4E  F00A         	call	_sprintf	;wreg free
  9850                           
  9851                           ;main.c: 275: lcd_gotoxy(8, 1);
  9852  002CF0  0E01               	movlw	1
  9853  002CF2  6E05               	movwf	lcd_gotoxy@y,c
  9854  002CF4  0E08               	movlw	8
  9855  002CF6  EC42  F01D         	call	_lcd_gotoxy
  9856                           
  9857                           ;main.c: 276: lcd_putrs(buffer2);
  9858  002CFA  0EA5               	movlw	low _buffer2
  9859  002CFC  6E09               	movwf	lcd_putrs@ptr,c
  9860  002CFE  0E00               	movlw	high _buffer2
  9861  002D00  6E0A               	movwf	lcd_putrs@ptr+1,c
  9862  002D02  ECD3  F01B         	call	_lcd_putrs	;wreg free
  9863  002D06  0012               	return		;funcret
  9864  002D08                     __end_of_cambiar_opcion:
  9865                           	opt stack 0
  9866                           tblptru	equ	0xFF8
  9867                           tblptrh	equ	0xFF7
  9868                           tblptrl	equ	0xFF6
  9869                           tablat	equ	0xFF5
  9870                           prodh	equ	0xFF4
  9871                           prodl	equ	0xFF3
  9872                           intcon	equ	0xFF2
  9873                           postinc0	equ	0xFEE
  9874                           wreg	equ	0xFE8
  9875                           postinc1	equ	0xFE6
  9876                           postdec1	equ	0xFE5
  9877                           fsr1h	equ	0xFE2
  9878                           fsr1l	equ	0xFE1
  9879                           indf2	equ	0xFDF
  9880                           postinc2	equ	0xFDE
  9881                           postdec2	equ	0xFDD
  9882                           fsr2h	equ	0xFDA
  9883                           fsr2l	equ	0xFD9
  9884                           status	equ	0xFD8
  9885                           
  9886 ;; *************** function _sprintf *****************
  9887 ;; Defined at:
  9888 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  sp              2   33[COMRAM] PTR unsigned char 
  9891 ;;		 -> buffer2(20), 
  9892 ;;  f               2   35[COMRAM] PTR const unsigned char 
  9893 ;;		 -> STR_26(5), STR_16(5), STR_13(5), STR_8(15), 
  9894 ;;		 -> STR_7(15), 
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;  tmpval          4    0        struct .
  9897 ;;  cp              3    0        PTR const unsigned char 
  9898 ;;  width           2   53[COMRAM] int 
  9899 ;;  val             2   50[COMRAM] unsigned int 
  9900 ;;  ap              2   47[COMRAM] PTR void [1]
  9901 ;;		 -> ?_sprintf(2), 
  9902 ;;  len             2    0        unsigned int 
  9903 ;;  c               1   55[COMRAM] char 
  9904 ;;  prec            1   52[COMRAM] char 
  9905 ;;  flag            1   49[COMRAM] unsigned char 
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  2   33[COMRAM] int 
  9908 ;; Registers used:
  9909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9915 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9916 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9918 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9919 ;;Total ram usage:       23 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    1
  9922 ;; This function calls:
  9923 ;;		___lwdiv
  9924 ;;		___lwmod
  9925 ;;		___wmul
  9926 ;;		_isdigit
  9927 ;; This function is called by:
  9928 ;;		_setDiaMesAnio
  9929 ;;		_setHoraMinutoSegundo
  9930 ;;		_guarda_numero_ingresado
  9931 ;;		_cambiar_opcion
  9932 ;;		_covertir_valores_de_array_a_escala_decimal
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text48
  9937  00149C                     __ptext48:
  9938                           	opt stack 0
  9939  00149C                     _sprintf:
  9940                           	opt stack 26
  9941                           
  9942                           ;doprnt.c: 494: va_list ap;
  9943                           ;doprnt.c: 499: signed char c;
  9944                           ;doprnt.c: 501: int width;
  9945                           ;doprnt.c: 506: signed char prec;
  9946                           ;doprnt.c: 508: unsigned char flag;
  9947                           ;doprnt.c: 523: union {
  9948                           ;doprnt.c: 524: unsigned long vd;
  9949                           ;doprnt.c: 525: double integ;
  9950                           ;doprnt.c: 526: } tmpval;
  9951                           ;doprnt.c: 528: unsigned int val;
  9952                           ;doprnt.c: 529: unsigned len;
  9953                           ;doprnt.c: 530: const char * cp;
  9954                           ;doprnt.c: 533: *ap = __va_start();
  9955                           
  9956                           ;incstack = 0
  9957  00149C  0E26               	movlw	low (?_sprintf+4)
  9958  00149E  6E30               	movwf	sprintf@ap,c
  9959  0014A0  0E00               	movlw	high (?_sprintf+4)
  9960  0014A2  6E31               	movwf	sprintf@ap+1,c
  9961                           
  9962                           ;doprnt.c: 536: while(c = *f++) {
  9963  0014A4  D100               	goto	u4350
  9964  0014A6                     
  9965                           ;doprnt.c: 538: if(c != '%')
  9966  0014A6  0E25               	movlw	37
  9967  0014A8  1838               	xorwf	sprintf@c,w,c
  9968  0014AA  B4D8               	btfsc	status,2,c
  9969  0014AC  D009               	goto	l510
  9970                           
  9971                           ;doprnt.c: 540: {
  9972                           ;doprnt.c: 541: ((*sp++ = (c)));
  9973  0014AE  C022  FFD9         	movff	sprintf@sp,fsr2l
  9974  0014B2  C023  FFDA         	movff	sprintf@sp+1,fsr2h
  9975  0014B6  C038  FFDF         	movff	sprintf@c,indf2
  9976  0014BA  4A22               	infsnz	sprintf@sp,f,c
  9977  0014BC  2A23               	incf	sprintf@sp+1,f,c
  9978                           
  9979                           ;doprnt.c: 542: continue;
  9980  0014BE  D0F3               	goto	u4350
  9981  0014C0                     l510:
  9982                           
  9983                           ;doprnt.c: 543: }
  9984                           ;doprnt.c: 546: width = 0;
  9985  0014C0  0E00               	movlw	0
  9986  0014C2  6E37               	movwf	sprintf@width+1,c
  9987  0014C4  0E00               	movlw	0
  9988  0014C6  6E36               	movwf	sprintf@width,c
  9989                           
  9990                           ;doprnt.c: 548: flag = 0;
  9991  0014C8  0E00               	movlw	0
  9992  0014CA  6E32               	movwf	sprintf@flag,c
  9993                           
  9994                           ;doprnt.c: 551: switch(*f) {
  9995                           
  9996                           ;doprnt.c: 550: for(;;) {
  9997  0014CC  D003               	goto	l512
  9998  0014CE                     
  9999                           ;doprnt.c: 580: flag |= 0x04;
 10000  0014CE  8432               	bsf	sprintf@flag,2,c
 10001                           
 10002                           ;doprnt.c: 581: f++;
 10003  0014D0  4A24               	infsnz	sprintf@f,f,c
 10004  0014D2  2A25               	incf	sprintf@f+1,f,c
 10005  0014D4                     l512:
 10006  0014D4  C024  FFF6         	movff	sprintf@f,tblptrl
 10007  0014D8  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10008  0014DC                     	if	0	;tblptru may be non-zero
 10009  0014DC                     	endif
 10010  0014DC                     	if	0	;tblptru may be non-zero
 10011  0014DC                     	endif
 10012  0014DC  0008               	tblrd		*
 10013  0014DE  50F5               	movf	tablat,w,c
 10014                           
 10015                           ; Switch size 1, requested type "space"
 10016                           ; Number of cases is 1, Range of values is 48 to 48
 10017                           ; switch strategies available:
 10018                           ; Name         Instructions Cycles
 10019                           ; simple_byte            4     3 (average)
 10020                           ;	Chosen strategy is simple_byte
 10021  0014E0  0A30               	xorlw	48	; case 48
 10022  0014E2  B4D8               	btfsc	status,2,c
 10023  0014E4  D7F4               	goto	l513
 10024                           
 10025                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10026                           
 10027                           ;doprnt.c: 586: }
 10028                           
 10029                           ;doprnt.c: 585: break;
 10030  0014E6  C024  FFF6         	movff	sprintf@f,tblptrl
 10031  0014EA  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10032  0014EE                     	if	0	;tblptru may be non-zero
 10033  0014EE                     	endif
 10034  0014EE                     	if	0	;tblptru may be non-zero
 10035  0014EE                     	endif
 10036  0014EE  0008               	tblrd		*
 10037  0014F0  50F5               	movf	tablat,w,c
 10038  0014F2  EC53  F01D         	call	_isdigit
 10039  0014F6  A0D8               	btfss	status,0,c
 10040  0014F8  D036               	goto	l520
 10041                           
 10042                           ;doprnt.c: 598: width = 0;
 10043  0014FA  0E00               	movlw	0
 10044  0014FC  6E37               	movwf	sprintf@width+1,c
 10045  0014FE  0E00               	movlw	0
 10046  001500  6E36               	movwf	sprintf@width,c
 10047  001502                     
 10048                           ;doprnt.c: 600: width *= 10;
 10049  001502  C036  F01C         	movff	sprintf@width,___wmul@multiplier
 10050  001506  C037  F01D         	movff	sprintf@width+1,___wmul@multiplier+1
 10051  00150A  0E00               	movlw	0
 10052  00150C  6E1F               	movwf	___wmul@multiplicand+1,c
 10053  00150E  0E0A               	movlw	10
 10054  001510  6E1E               	movwf	___wmul@multiplicand,c
 10055  001512  EC0B  F01D         	call	___wmul	;wreg free
 10056  001516  C01C  F036         	movff	?___wmul,sprintf@width
 10057  00151A  C01D  F037         	movff	?___wmul+1,sprintf@width+1
 10058                           
 10059                           ;doprnt.c: 601: width += *f++ - '0';
 10060  00151E  0ED0               	movlw	208
 10061  001520  6E2C               	movwf	??_sprintf& (0+255),c
 10062  001522  0EFF               	movlw	255
 10063  001524  6E2D               	movwf	(??_sprintf+1)& (0+255),c
 10064  001526  C024  FFF6         	movff	sprintf@f,tblptrl
 10065  00152A  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10066  00152E                     	if	0	;tblptru may be non-zero
 10067  00152E                     	endif
 10068  00152E                     	if	0	;tblptru may be non-zero
 10069  00152E                     	endif
 10070  00152E  0008               	tblrd		*
 10071  001530  50F5               	movf	tablat,w,c
 10072  001532  6E2E               	movwf	(??_sprintf+2)& (0+255),c
 10073  001534  6A2F               	clrf	(??_sprintf+3)& (0+255),c
 10074  001536  502C               	movf	??_sprintf,w,c
 10075  001538  262E               	addwf	??_sprintf+2,f,c
 10076  00153A  502D               	movf	??_sprintf+1,w,c
 10077  00153C  222F               	addwfc	??_sprintf+3,f,c
 10078  00153E  502E               	movf	??_sprintf+2,w,c
 10079  001540  2636               	addwf	sprintf@width,f,c
 10080  001542  502F               	movf	??_sprintf+3,w,c
 10081  001544  2237               	addwfc	sprintf@width+1,f,c
 10082  001546  4A24               	infsnz	sprintf@f,f,c
 10083  001548  2A25               	incf	sprintf@f+1,f,c
 10084                           
 10085                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10086  00154A  C024  FFF6         	movff	sprintf@f,tblptrl
 10087  00154E  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10088  001552                     	if	0	;tblptru may be non-zero
 10089  001552                     	endif
 10090  001552                     	if	0	;tblptru may be non-zero
 10091  001552                     	endif
 10092  001552  0008               	tblrd		*
 10093  001554  50F5               	movf	tablat,w,c
 10094  001556  EC53  F01D         	call	_isdigit
 10095  00155A  A0D8               	btfss	status,0,c
 10096  00155C  D004               	goto	l520
 10097  00155E  D7D1               	goto	l518
 10098  001560                     
 10099                           ;doprnt.c: 818: flag |= 0xC0;
 10100  001560  0EC0               	movlw	192
 10101  001562  1232               	iorwf	sprintf@flag,f,c
 10102                           
 10103                           ;doprnt.c: 822: }
 10104                           
 10105                           ;doprnt.c: 819: break;
 10106  001564  D011               	goto	l525
 10107  001566                     l520:
 10108  001566  C024  FFF6         	movff	sprintf@f,tblptrl
 10109  00156A  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10110  00156E  4A24               	infsnz	sprintf@f,f,c
 10111  001570  2A25               	incf	sprintf@f+1,f,c
 10112  001572                     	if	0	;tblptru may be non-zero
 10113  001572                     	endif
 10114  001572                     	if	0	;tblptru may be non-zero
 10115  001572                     	endif
 10116  001572  0008               	tblrd		*
 10117  001574  CFF5 F038          	movff	tablat,sprintf@c
 10118  001578  5038               	movf	sprintf@c,w,c
 10119                           
 10120                           ; Switch size 1, requested type "space"
 10121                           ; Number of cases is 2, Range of values is 0 to 117
 10122                           ; switch strategies available:
 10123                           ; Name         Instructions Cycles
 10124                           ; simple_byte            7     4 (average)
 10125                           ;	Chosen strategy is simple_byte
 10126  00157A  0A00               	xorlw	0	; case 0
 10127  00157C  B4D8               	btfsc	status,2,c
 10128  00157E  D09F               	goto	u4360
 10129  001580  0A75               	xorlw	117	; case 117
 10130  001582  B4D8               	btfsc	status,2,c
 10131  001584  D7ED               	goto	l524
 10132  001586  D08F               	goto	u4350
 10133  001588                     l525:
 10134                           
 10135                           ;doprnt.c: 1273: {
 10136                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10137  001588  C030  FFD9         	movff	sprintf@ap,fsr2l
 10138  00158C  C031  FFDA         	movff	sprintf@ap+1,fsr2h
 10139  001590  CFDE F033          	movff	postinc2,sprintf@val
 10140  001594  CFDD F034          	movff	postdec2,sprintf@val+1
 10141  001598  0E02               	movlw	2
 10142  00159A  2630               	addwf	sprintf@ap,f,c
 10143  00159C  0E00               	movlw	0
 10144  00159E  2231               	addwfc	sprintf@ap+1,f,c
 10145                           
 10146                           ;doprnt.c: 1287: }
 10147                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10148  0015A0  0E01               	movlw	1
 10149  0015A2  6E38               	movwf	sprintf@c,c
 10150  0015A4                     l3961:
 10151  0015A4  0E05               	movlw	5
 10152  0015A6  1838               	xorwf	sprintf@c,w,c
 10153  0015A8  B4D8               	btfsc	status,2,c
 10154  0015AA  D012               	goto	u4280
 10155                           
 10156                           ;doprnt.c: 1306: if(val < dpowers[c])
 10157  0015AC  5038               	movf	sprintf@c,w,c
 10158  0015AE  0D02               	mullw	2
 10159  0015B0  0E01               	movlw	low _dpowers
 10160  0015B2  24F3               	addwf	prodl,w,c
 10161  0015B4  6EF6               	movwf	tblptrl,c
 10162  0015B6  0E0F               	movlw	high _dpowers
 10163  0015B8  20F4               	addwfc	prodh,w,c
 10164  0015BA  6EF7               	movwf	tblptrh,c
 10165  0015BC                     	if	0	;There are less than 3 active tblptr bytes
 10166  0015BC                     	endif
 10167  0015BC  0009               	tblrd		*+
 10168  0015BE  50F5               	movf	tablat,w,c
 10169  0015C0  5C33               	subwf	sprintf@val,w,c
 10170  0015C2  0009               	tblrd		*+
 10171  0015C4  50F5               	movf	tablat,w,c
 10172  0015C6  5834               	subwfb	sprintf@val+1,w,c
 10173  0015C8  A0D8               	btfss	status,0,c
 10174  0015CA  D002               	goto	u4280
 10175                           
 10176                           ;doprnt.c: 1307: break;
 10177  0015CC  2A38               	incf	sprintf@c,f,c
 10178  0015CE  D7EA               	goto	l3961
 10179  0015D0                     u4280:
 10180                           
 10181                           ;doprnt.c: 1381: if(width > c)
 10182  0015D0  0E80               	movlw	128
 10183  0015D2  BE38               	btfsc	sprintf@c,7,c
 10184  0015D4  0E7F               	movlw	127
 10185  0015D6  6E2C               	movwf	??_sprintf& (0+255),c
 10186  0015D8  5036               	movf	sprintf@width,w,c
 10187  0015DA  5C38               	subwf	sprintf@c,w,c
 10188  0015DC  5037               	movf	sprintf@width+1,w,c
 10189  0015DE  0A80               	xorlw	128
 10190  0015E0  582C               	subwfb	??_sprintf& (0+255),w,c
 10191  0015E2  B0D8               	btfsc	status,0,c
 10192  0015E4  D007               	goto	l529
 10193                           
 10194                           ;doprnt.c: 1382: width -= c;
 10195  0015E6  5038               	movf	sprintf@c,w,c
 10196  0015E8  5E36               	subwf	sprintf@width,f,c
 10197  0015EA  0E00               	movlw	0
 10198  0015EC  BE38               	btfsc	sprintf@c,7,c
 10199  0015EE  0EFF               	movlw	255
 10200  0015F0  5A37               	subwfb	sprintf@width+1,f,c
 10201  0015F2  D004               	goto	l530
 10202  0015F4                     l529:
 10203                           
 10204                           ;doprnt.c: 1383: else
 10205                           ;doprnt.c: 1384: width = 0;
 10206  0015F4  0E00               	movlw	0
 10207  0015F6  6E37               	movwf	sprintf@width+1,c
 10208  0015F8  0E00               	movlw	0
 10209  0015FA  6E36               	movwf	sprintf@width,c
 10210  0015FC                     l530:
 10211                           
 10212                           ;doprnt.c: 1387: if(flag & 0x04) {
 10213  0015FC  A432               	btfss	sprintf@flag,2,c
 10214  0015FE  D010               	goto	l531
 10215  001600                     
 10216                           ;doprnt.c: 1415: if(width)
 10217  001600  5036               	movf	sprintf@width,w,c
 10218  001602  1037               	iorwf	sprintf@width+1,w,c
 10219  001604  B4D8               	btfsc	status,2,c
 10220  001606  D01F               	goto	u4340
 10221                           
 10222                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10223                           
 10224                           ;doprnt.c: 1416: do
 10225  001608  C022  FFD9         	movff	sprintf@sp,fsr2l
 10226  00160C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10227  001610  0E30               	movlw	48
 10228  001612  6EDF               	movwf	indf2,c
 10229  001614  4A22               	infsnz	sprintf@sp,f,c
 10230  001616  2A23               	incf	sprintf@sp+1,f,c
 10231                           
 10232                           ;doprnt.c: 1418: while(--width);
 10233  001618  0636               	decf	sprintf@width,f,c
 10234  00161A  A0D8               	btfss	status,0,c
 10235  00161C  0637               	decf	sprintf@width+1,f,c
 10236  00161E  D7F0               	goto	L4
 10237  001620                     l531:
 10238                           
 10239                           ;doprnt.c: 1422: {
 10240                           ;doprnt.c: 1424: if(width
 10241                           ;doprnt.c: 1428: )
 10242  001620  5036               	movf	sprintf@width,w,c
 10243  001622  1037               	iorwf	sprintf@width+1,w,c
 10244  001624  B4D8               	btfsc	status,2,c
 10245  001626  D00F               	goto	u4340
 10246  001628                     u4330:
 10247                           
 10248                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10249                           
 10250                           ;doprnt.c: 1429: do
 10251  001628  C022  FFD9         	movff	sprintf@sp,fsr2l
 10252  00162C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10253  001630  0E20               	movlw	32
 10254  001632  6EDF               	movwf	indf2,c
 10255  001634  4A22               	infsnz	sprintf@sp,f,c
 10256  001636  2A23               	incf	sprintf@sp+1,f,c
 10257                           
 10258                           ;doprnt.c: 1431: while(--width);
 10259  001638  0636               	decf	sprintf@width,f,c
 10260  00163A  A0D8               	btfss	status,0,c
 10261  00163C  0637               	decf	sprintf@width+1,f,c
 10262  00163E  5036               	movf	sprintf@width,w,c
 10263  001640  1037               	iorwf	sprintf@width+1,w,c
 10264  001642  A4D8               	btfss	status,2,c
 10265  001644  D7F1               	goto	u4330
 10266  001646                     u4340:
 10267                           
 10268                           ;doprnt.c: 1469: }
 10269                           ;doprnt.c: 1472: prec = c;
 10270  001646  C038  F035         	movff	sprintf@c,sprintf@prec
 10271                           
 10272                           ;doprnt.c: 1474: while(prec--) {
 10273  00164A  D029               	goto	l539
 10274  00164C                     
 10275                           ;doprnt.c: 1478: {
 10276                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10277  00164C  5035               	movf	sprintf@prec,w,c
 10278  00164E  0D02               	mullw	2
 10279  001650  0E01               	movlw	low _dpowers
 10280  001652  24F3               	addwf	prodl,w,c
 10281  001654  6EF6               	movwf	tblptrl,c
 10282  001656  0E0F               	movlw	high _dpowers
 10283  001658  20F4               	addwfc	prodh,w,c
 10284  00165A  6EF7               	movwf	tblptrh,c
 10285  00165C                     	if	0	;There are less than 3 active tblptr bytes
 10286  00165C                     	endif
 10287  00165C  0009               	tblrd		*+
 10288  00165E  CFF5 F003          	movff	tablat,___lwdiv@divisor
 10289  001662  000A               	tblrd		*-
 10290  001664  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 10291  001668  C033  F001         	movff	sprintf@val,___lwdiv@dividend
 10292  00166C  C034  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
 10293  001670  ECAA  F01B         	call	___lwdiv	;wreg free
 10294  001674  C001  F008         	movff	?___lwdiv,___lwmod@dividend
 10295  001678  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
 10296  00167C  0E00               	movlw	0
 10297  00167E  6E0B               	movwf	___lwmod@divisor+1,c
 10298  001680  0E0A               	movlw	10
 10299  001682  6E0A               	movwf	___lwmod@divisor,c
 10300  001684  EC95  F01C         	call	___lwmod	;wreg free
 10301  001688  5008               	movf	?___lwmod,w,c
 10302  00168A  0F30               	addlw	48
 10303  00168C  6E38               	movwf	sprintf@c,c
 10304                           
 10305                           ;doprnt.c: 1523: }
 10306                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10307  00168E  C022  FFD9         	movff	sprintf@sp,fsr2l
 10308  001692  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10309  001696  C038  FFDF         	movff	sprintf@c,indf2
 10310  00169A  4A22               	infsnz	sprintf@sp,f,c
 10311  00169C  2A23               	incf	sprintf@sp+1,f,c
 10312  00169E                     l539:
 10313  00169E  0635               	decf	sprintf@prec,f,c
 10314  0016A0  2835               	incf	sprintf@prec,w,c
 10315  0016A2  A4D8               	btfss	status,2,c
 10316  0016A4  D7D3               	goto	l540
 10317  0016A6                     u4350:
 10318  0016A6  C024  FFF6         	movff	sprintf@f,tblptrl
 10319  0016AA  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10320  0016AE  4A24               	infsnz	sprintf@f,f,c
 10321  0016B0  2A25               	incf	sprintf@f+1,f,c
 10322  0016B2                     	if	0	;tblptru may be non-zero
 10323  0016B2                     	endif
 10324  0016B2                     	if	0	;tblptru may be non-zero
 10325  0016B2                     	endif
 10326  0016B2  0008               	tblrd		*
 10327  0016B4  CFF5 F038          	movff	tablat,sprintf@c
 10328  0016B8  5038               	movf	sprintf@c,w,c
 10329  0016BA  A4D8               	btfss	status,2,c
 10330  0016BC  D6F4               	goto	l509
 10331  0016BE                     u4360:
 10332                           
 10333                           ;doprnt.c: 1538: *sp = 0;
 10334                           
 10335                           ;doprnt.c: 1525: }
 10336                           ;doprnt.c: 1533: }
 10337                           ;doprnt.c: 1535: alldone:
 10338  0016BE  C022  FFD9         	movff	sprintf@sp,fsr2l
 10339  0016C2  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10340  0016C6  0E00               	movlw	0
 10341  0016C8  6EDF               	movwf	indf2,c
 10342  0016CA  0012               	return	
 10343  0016CC                     __end_of_sprintf:
 10344                           	opt stack 0
 10345                           tblptru	equ	0xFF8
 10346                           tblptrh	equ	0xFF7
 10347                           tblptrl	equ	0xFF6
 10348                           tablat	equ	0xFF5
 10349                           prodh	equ	0xFF4
 10350                           prodl	equ	0xFF3
 10351                           intcon	equ	0xFF2
 10352                           postinc0	equ	0xFEE
 10353                           wreg	equ	0xFE8
 10354                           postinc1	equ	0xFE6
 10355                           postdec1	equ	0xFE5
 10356                           fsr1h	equ	0xFE2
 10357                           fsr1l	equ	0xFE1
 10358                           indf2	equ	0xFDF
 10359                           postinc2	equ	0xFDE
 10360                           postdec2	equ	0xFDD
 10361                           fsr2h	equ	0xFDA
 10362                           fsr2l	equ	0xFD9
 10363                           status	equ	0xFD8
 10364                           
 10365 ;; *************** function _isdigit *****************
 10366 ;; Defined at:
 10367 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  c               1    wreg     unsigned char 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;  c               1    2[COMRAM] unsigned char 
 10372 ;; Return value:  Size  Location     Type
 10373 ;;		None               void
 10374 ;; Registers used:
 10375 ;;		wreg, status,2, status,0
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10384 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10385 ;;Total ram usage:        3 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_sprintf
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           	psect	text49
 10395  003AA6                     __ptext49:
 10396                           	opt stack 0
 10397  003AA6                     _isdigit:
 10398                           	opt stack 26
 10399                           
 10400                           ;incstack = 0
 10401                           ;isdigit@c stored from wreg
 10402  003AA6  6E03               	movwf	isdigit@c,c
 10403  003AA8  0E00               	movlw	0
 10404  003AAA  6E02               	movwf	_isdigit$1974,c
 10405  003AAC  0E3A               	movlw	58
 10406  003AAE  6003               	cpfslt	isdigit@c,c
 10407  003AB0  D005               	goto	l983
 10408  003AB2  0E2F               	movlw	47
 10409  003AB4  6403               	cpfsgt	isdigit@c,c
 10410  003AB6  D002               	goto	l983
 10411  003AB8  0E01               	movlw	1
 10412  003ABA  6E02               	movwf	_isdigit$1974,c
 10413  003ABC                     l983:
 10414  003ABC  C002  F001         	movff	_isdigit$1974,??_isdigit
 10415  003AC0  3001               	rrcf	??_isdigit,w,c
 10416  003AC2  0012               	return	
 10417  003AC4                     __end_of_isdigit:
 10418                           	opt stack 0
 10419                           tblptru	equ	0xFF8
 10420                           tblptrh	equ	0xFF7
 10421                           tblptrl	equ	0xFF6
 10422                           tablat	equ	0xFF5
 10423                           prodh	equ	0xFF4
 10424                           prodl	equ	0xFF3
 10425                           intcon	equ	0xFF2
 10426                           postinc0	equ	0xFEE
 10427                           wreg	equ	0xFE8
 10428                           postinc1	equ	0xFE6
 10429                           postdec1	equ	0xFE5
 10430                           fsr1h	equ	0xFE2
 10431                           fsr1l	equ	0xFE1
 10432                           indf2	equ	0xFDF
 10433                           postinc2	equ	0xFDE
 10434                           postdec2	equ	0xFDD
 10435                           fsr2h	equ	0xFDA
 10436                           fsr2l	equ	0xFD9
 10437                           status	equ	0xFD8
 10438                           
 10439 ;; *************** function ___wmul *****************
 10440 ;; Defined at:
 10441 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;  multiplier      2   27[COMRAM] unsigned int 
 10444 ;;  multiplicand    2   29[COMRAM] unsigned int 
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;  product         2   31[COMRAM] unsigned int 
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  2   27[COMRAM] unsigned int 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2, status,0, prodl, prodh
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10459 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10460 ;;Total ram usage:        6 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_covertir_valores_de_array_a_escala_decimal
 10466 ;;		_sprintf
 10467 ;;		_eval_poly
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           	psect	text50
 10472  003A16                     __ptext50:
 10473                           	opt stack 0
 10474  003A16                     ___wmul:
 10475                           	opt stack 26
 10476                           
 10477                           ;incstack = 0
 10478  003A16  501C               	movf	___wmul@multiplier,w,c
 10479  003A18  021E               	mulwf	___wmul@multiplicand,c
 10480  003A1A  CFF3 F020          	movff	prodl,___wmul@product
 10481  003A1E  CFF4 F021          	movff	prodh,___wmul@product+1
 10482  003A22  501C               	movf	___wmul@multiplier,w,c
 10483  003A24  021F               	mulwf	___wmul@multiplicand+1,c
 10484  003A26  50F3               	movf	prodl,w,c
 10485  003A28  2621               	addwf	___wmul@product+1,f,c
 10486  003A2A  501D               	movf	___wmul@multiplier+1,w,c
 10487  003A2C  021E               	mulwf	___wmul@multiplicand,c
 10488  003A2E  50F3               	movf	prodl,w,c
 10489  003A30  2621               	addwf	___wmul@product+1,f,c
 10490  003A32  C020  F01C         	movff	___wmul@product,?___wmul
 10491  003A36  C021  F01D         	movff	___wmul@product+1,?___wmul+1
 10492  003A3A  0012               	return	
 10493  003A3C                     __end_of___wmul:
 10494                           	opt stack 0
 10495                           tblptru	equ	0xFF8
 10496                           tblptrh	equ	0xFF7
 10497                           tblptrl	equ	0xFF6
 10498                           tablat	equ	0xFF5
 10499                           prodh	equ	0xFF4
 10500                           prodl	equ	0xFF3
 10501                           intcon	equ	0xFF2
 10502                           postinc0	equ	0xFEE
 10503                           wreg	equ	0xFE8
 10504                           postinc1	equ	0xFE6
 10505                           postdec1	equ	0xFE5
 10506                           fsr1h	equ	0xFE2
 10507                           fsr1l	equ	0xFE1
 10508                           indf2	equ	0xFDF
 10509                           postinc2	equ	0xFDE
 10510                           postdec2	equ	0xFDD
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function ___lwmod *****************
 10516 ;; Defined at:
 10517 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;  dividend        2    7[COMRAM] unsigned int 
 10520 ;;  divisor         2    9[COMRAM] unsigned int 
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;  counter         1   11[COMRAM] unsigned char 
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  2    7[COMRAM] unsigned int 
 10525 ;; Registers used:
 10526 ;;		wreg, status,2, status,0
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10535 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10536 ;;Total ram usage:        5 bytes
 10537 ;; Hardware stack levels used:    1
 10538 ;; This function calls:
 10539 ;;		Nothing
 10540 ;; This function is called by:
 10541 ;;		_sprintf
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text51
 10546  00392A                     __ptext51:
 10547                           	opt stack 0
 10548  00392A                     ___lwmod:
 10549                           	opt stack 26
 10550                           
 10551                           ;incstack = 0
 10552  00392A  500A               	movf	___lwmod@divisor,w,c
 10553  00392C  100B               	iorwf	___lwmod@divisor+1,w,c
 10554  00392E  B4D8               	btfsc	status,2,c
 10555  003930  D018               	goto	l1077
 10556  003932  0E01               	movlw	1
 10557  003934  6E0C               	movwf	___lwmod@counter,c
 10558  003936  D004               	goto	l1072
 10559  003938  90D8               	bcf	status,0,c
 10560  00393A  360A               	rlcf	___lwmod@divisor,f,c
 10561  00393C  360B               	rlcf	___lwmod@divisor+1,f,c
 10562  00393E  2A0C               	incf	___lwmod@counter,f,c
 10563  003940                     l1072:
 10564  003940  AE0B               	btfss	___lwmod@divisor+1,7,c
 10565  003942  D7FA               	goto	l1073
 10566  003944                     u3870:
 10567  003944  500A               	movf	___lwmod@divisor,w,c
 10568  003946  5C08               	subwf	___lwmod@dividend,w,c
 10569  003948  500B               	movf	___lwmod@divisor+1,w,c
 10570  00394A  5809               	subwfb	___lwmod@dividend+1,w,c
 10571  00394C  A0D8               	btfss	status,0,c
 10572  00394E  D004               	goto	l1076
 10573  003950  500A               	movf	___lwmod@divisor,w,c
 10574  003952  5E08               	subwf	___lwmod@dividend,f,c
 10575  003954  500B               	movf	___lwmod@divisor+1,w,c
 10576  003956  5A09               	subwfb	___lwmod@dividend+1,f,c
 10577  003958                     l1076:
 10578  003958  90D8               	bcf	status,0,c
 10579  00395A  320B               	rrcf	___lwmod@divisor+1,f,c
 10580  00395C  320A               	rrcf	___lwmod@divisor,f,c
 10581  00395E  2E0C               	decfsz	___lwmod@counter,f,c
 10582  003960  D7F1               	goto	u3870
 10583  003962                     l1077:
 10584  003962  C008  F008         	movff	___lwmod@dividend,?___lwmod
 10585  003966  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
 10586  00396A  0012               	return		;funcret
 10587  00396C                     __end_of___lwmod:
 10588                           	opt stack 0
 10589                           tblptru	equ	0xFF8
 10590                           tblptrh	equ	0xFF7
 10591                           tblptrl	equ	0xFF6
 10592                           tablat	equ	0xFF5
 10593                           prodh	equ	0xFF4
 10594                           prodl	equ	0xFF3
 10595                           intcon	equ	0xFF2
 10596                           postinc0	equ	0xFEE
 10597                           wreg	equ	0xFE8
 10598                           postinc1	equ	0xFE6
 10599                           postdec1	equ	0xFE5
 10600                           fsr1h	equ	0xFE2
 10601                           fsr1l	equ	0xFE1
 10602                           indf2	equ	0xFDF
 10603                           postinc2	equ	0xFDE
 10604                           postdec2	equ	0xFDD
 10605                           fsr2h	equ	0xFDA
 10606                           fsr2l	equ	0xFD9
 10607                           status	equ	0xFD8
 10608                           
 10609 ;; *************** function ___lwdiv *****************
 10610 ;; Defined at:
 10611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  dividend        2    0[COMRAM] unsigned int 
 10614 ;;  divisor         2    2[COMRAM] unsigned int 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  quotient        2    4[COMRAM] unsigned int 
 10617 ;;  counter         1    6[COMRAM] unsigned char 
 10618 ;; Return value:  Size  Location     Type
 10619 ;;                  2    0[COMRAM] unsigned int 
 10620 ;; Registers used:
 10621 ;;		wreg, status,2, status,0
 10622 ;; Tracked objects:
 10623 ;;		On entry : 0/0
 10624 ;;		On exit  : 0/0
 10625 ;;		Unchanged: 0/0
 10626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10631 ;;Total ram usage:        7 bytes
 10632 ;; Hardware stack levels used:    1
 10633 ;; This function calls:
 10634 ;;		Nothing
 10635 ;; This function is called by:
 10636 ;;		_sprintf
 10637 ;; This function uses a non-reentrant model
 10638 ;;
 10639                           
 10640                           	psect	text52
 10641  003754                     __ptext52:
 10642                           	opt stack 0
 10643  003754                     ___lwdiv:
 10644                           	opt stack 26
 10645                           
 10646                           ;incstack = 0
 10647  003754  0E00               	movlw	0
 10648  003756  6E06               	movwf	___lwdiv@quotient+1,c
 10649  003758  0E00               	movlw	0
 10650  00375A  6E05               	movwf	___lwdiv@quotient,c
 10651  00375C  5003               	movf	___lwdiv@divisor,w,c
 10652  00375E  1004               	iorwf	___lwdiv@divisor+1,w,c
 10653  003760  B4D8               	btfsc	status,2,c
 10654  003762  D01C               	goto	l1067
 10655  003764  0E01               	movlw	1
 10656  003766  6E07               	movwf	___lwdiv@counter,c
 10657  003768  D004               	goto	l1062
 10658  00376A  90D8               	bcf	status,0,c
 10659  00376C  3603               	rlcf	___lwdiv@divisor,f,c
 10660  00376E  3604               	rlcf	___lwdiv@divisor+1,f,c
 10661  003770  2A07               	incf	___lwdiv@counter,f,c
 10662  003772                     l1062:
 10663  003772  AE04               	btfss	___lwdiv@divisor+1,7,c
 10664  003774  D7FA               	goto	l1063
 10665  003776                     u3840:
 10666  003776  90D8               	bcf	status,0,c
 10667  003778  3605               	rlcf	___lwdiv@quotient,f,c
 10668  00377A  3606               	rlcf	___lwdiv@quotient+1,f,c
 10669  00377C  5003               	movf	___lwdiv@divisor,w,c
 10670  00377E  5C01               	subwf	___lwdiv@dividend,w,c
 10671  003780  5004               	movf	___lwdiv@divisor+1,w,c
 10672  003782  5802               	subwfb	___lwdiv@dividend+1,w,c
 10673  003784  A0D8               	btfss	status,0,c
 10674  003786  D005               	goto	l1066
 10675  003788  5003               	movf	___lwdiv@divisor,w,c
 10676  00378A  5E01               	subwf	___lwdiv@dividend,f,c
 10677  00378C  5004               	movf	___lwdiv@divisor+1,w,c
 10678  00378E  5A02               	subwfb	___lwdiv@dividend+1,f,c
 10679  003790  8005               	bsf	___lwdiv@quotient,0,c
 10680  003792                     l1066:
 10681  003792  90D8               	bcf	status,0,c
 10682  003794  3204               	rrcf	___lwdiv@divisor+1,f,c
 10683  003796  3203               	rrcf	___lwdiv@divisor,f,c
 10684  003798  2E07               	decfsz	___lwdiv@counter,f,c
 10685  00379A  D7ED               	goto	u3840
 10686  00379C                     l1067:
 10687  00379C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10688  0037A0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10689  0037A4  0012               	return		;funcret
 10690  0037A6                     __end_of___lwdiv:
 10691                           	opt stack 0
 10692                           tblptru	equ	0xFF8
 10693                           tblptrh	equ	0xFF7
 10694                           tblptrl	equ	0xFF6
 10695                           tablat	equ	0xFF5
 10696                           prodh	equ	0xFF4
 10697                           prodl	equ	0xFF3
 10698                           intcon	equ	0xFF2
 10699                           postinc0	equ	0xFEE
 10700                           wreg	equ	0xFE8
 10701                           postinc1	equ	0xFE6
 10702                           postdec1	equ	0xFE5
 10703                           fsr1h	equ	0xFE2
 10704                           fsr1l	equ	0xFE1
 10705                           indf2	equ	0xFDF
 10706                           postinc2	equ	0xFDE
 10707                           postdec2	equ	0xFDD
 10708                           fsr2h	equ	0xFDA
 10709                           fsr2l	equ	0xFD9
 10710                           status	equ	0xFD8
 10711                           
 10712 ;; *************** function _lcd_putrs *****************
 10713 ;; Defined at:
 10714 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
 10717 ;;		 -> STR_25(17), STR_24(21), STR_23(17), STR_22(17), 
 10718 ;;		 -> STR_21(9), STR_20(8), STR_19(17), STR_18(17), 
 10719 ;;		 -> STR_17(17), STR_15(15), STR_14(8), STR_12(9), 
 10720 ;;		 -> STR_11(9), STR_10(9), STR_9(7), buffer2(20), 
 10721 ;; Auto vars:     Size  Location     Type
 10722 ;;		None
 10723 ;; Return value:  Size  Location     Type
 10724 ;;                  1    wreg      void 
 10725 ;; Registers used:
 10726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10727 ;; Tracked objects:
 10728 ;;		On entry : 0/0
 10729 ;;		On exit  : 0/0
 10730 ;;		Unchanged: 0/0
 10731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10735 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10736 ;;Total ram usage:        2 bytes
 10737 ;; Hardware stack levels used:    1
 10738 ;; Hardware stack levels required when called:    4
 10739 ;; This function calls:
 10740 ;;		_lcd_putc
 10741 ;; This function is called by:
 10742 ;;		_setDiaMesAnio
 10743 ;;		_setHoraMinutoSegundo
 10744 ;;		_titila_texto_insert_password
 10745 ;;		_guarda_numero_ingresado
 10746 ;;		_mostrar_presionar_a
 10747 ;;		_resetear_pantalla_ingresar_contrasenia
 10748 ;;		_cambiar_opcion
 10749 ;;		_activar_alarma
 10750 ;;		_ir_a_pantalla_edicion
 10751 ;;		_ir_a_pantalla_ingresar_contrasenia
 10752 ;;		_ir_a_pantalla_editar_contrasenia
 10753 ;;		_covertir_valores_de_array_a_escala_decimal
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text53
 10758  0037A6                     __ptext53:
 10759                           	opt stack 0
 10760  0037A6                     _lcd_putrs:
 10761                           	opt stack 23
 10762                           
 10763                           ;unmc_lcd_216.c: 223: while(*ptr){
 10764                           
 10765                           ;incstack = 0
 10766  0037A6  D014               	goto	l494
 10767  0037A8                     
 10768                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
 10769  0037A8  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 10770  0037AC  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 10771  0037B0  6AF8               	clrf	tblptru,c
 10772  0037B2  0E0E               	movlw	(high __ramtop+-1)
 10773  0037B4  64F7               	cpfsgt	tblptrh,c
 10774  0037B6  D003               	bra	u4377
 10775  0037B8  0008               	tblrd		*
 10776  0037BA  50F5               	movf	tablat,w,c
 10777  0037BC  D005               	bra	u4370
 10778  0037BE                     u4377:
 10779  0037BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 10780  0037C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 10781  0037C6  50EF               	movf	indf0,w,c
 10782  0037C8                     u4370:
 10783  0037C8  EC70  F01C         	call	_lcd_putc
 10784  0037CC  4A09               	infsnz	lcd_putrs@ptr,f,c
 10785  0037CE  2A0A               	incf	lcd_putrs@ptr+1,f,c
 10786  0037D0                     l494:
 10787  0037D0  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 10788  0037D4  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 10789  0037D8  6AF8               	clrf	tblptru,c
 10790  0037DA  0E0E               	movlw	(high __ramtop+-1)
 10791  0037DC  64F7               	cpfsgt	tblptrh,c
 10792  0037DE  D003               	bra	u4387
 10793  0037E0  0008               	tblrd		*
 10794  0037E2  50F5               	movf	tablat,w,c
 10795  0037E4  D005               	bra	u4380
 10796  0037E6                     u4387:
 10797  0037E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 10798  0037EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 10799  0037EE  50EF               	movf	indf0,w,c
 10800  0037F0                     u4380:
 10801  0037F0  0900               	iorlw	0
 10802  0037F2  B4D8               	btfsc	status,2,c
 10803  0037F4  0012               	return	
 10804  0037F6  D7D8               	goto	l495
 10805  0037F8                     __end_of_lcd_putrs:
 10806                           	opt stack 0
 10807                           tblptru	equ	0xFF8
 10808                           tblptrh	equ	0xFF7
 10809                           tblptrl	equ	0xFF6
 10810                           tablat	equ	0xFF5
 10811                           prodh	equ	0xFF4
 10812                           prodl	equ	0xFF3
 10813                           intcon	equ	0xFF2
 10814                           indf0	equ	0xFEF
 10815                           postinc0	equ	0xFEE
 10816                           fsr0h	equ	0xFEA
 10817                           fsr0l	equ	0xFE9
 10818                           wreg	equ	0xFE8
 10819                           postinc1	equ	0xFE6
 10820                           postdec1	equ	0xFE5
 10821                           fsr1h	equ	0xFE2
 10822                           fsr1l	equ	0xFE1
 10823                           indf2	equ	0xFDF
 10824                           postinc2	equ	0xFDE
 10825                           postdec2	equ	0xFDD
 10826                           fsr2h	equ	0xFDA
 10827                           fsr2l	equ	0xFD9
 10828                           status	equ	0xFD8
 10829                           
 10830 ;; *************** function _lcd_putc *****************
 10831 ;; Defined at:
 10832 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  c               1    wreg     unsigned char 
 10835 ;; Auto vars:     Size  Location     Type
 10836 ;;  c               1    7[COMRAM] unsigned char 
 10837 ;; Return value:  Size  Location     Type
 10838 ;;                  1    wreg      void 
 10839 ;; Registers used:
 10840 ;;		wreg, status,2, status,0, cstack
 10841 ;; Tracked objects:
 10842 ;;		On entry : 0/0
 10843 ;;		On exit  : 0/0
 10844 ;;		Unchanged: 0/0
 10845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10850 ;;Total ram usage:        1 bytes
 10851 ;; Hardware stack levels used:    1
 10852 ;; Hardware stack levels required when called:    3
 10853 ;; This function calls:
 10854 ;;		_lcd_gotoxy
 10855 ;;		_lcd_send_byte
 10856 ;; This function is called by:
 10857 ;;		_lcd_putrs
 10858 ;;		_lcd_puts
 10859 ;; This function uses a non-reentrant model
 10860 ;;
 10861                           
 10862                           	psect	text54
 10863  0038E0                     __ptext54:
 10864                           	opt stack 0
 10865  0038E0                     _lcd_putc:
 10866                           	opt stack 23
 10867                           
 10868                           ;incstack = 0
 10869                           ;lcd_putc@c stored from wreg
 10870  0038E0  6E08               	movwf	lcd_putc@c,c
 10871                           
 10872                           ;unmc_lcd_216.c: 173: switch(c){
 10873  0038E2  D018               	goto	l473
 10874  0038E4                     
 10875                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
 10876  0038E4  0E01               	movlw	1
 10877  0038E6  6E03               	movwf	lcd_send_byte@n,c
 10878  0038E8  0E00               	movlw	0
 10879  0038EA  ECF2  F01C         	call	_lcd_send_byte
 10880                           
 10881                           ;unmc_lcd_216.c: 176: break;
 10882  0038EE  0012               	return	
 10883  0038F0                     
 10884                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
 10885  0038F0  0E02               	movlw	2
 10886  0038F2  6E05               	movwf	lcd_gotoxy@y,c
 10887  0038F4  0E01               	movlw	1
 10888  0038F6  EC42  F01D         	call	_lcd_gotoxy
 10889                           
 10890                           ;unmc_lcd_216.c: 179: break;
 10891  0038FA  0012               	return	
 10892  0038FC                     
 10893                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
 10894  0038FC  0E10               	movlw	16
 10895  0038FE  6E03               	movwf	lcd_send_byte@n,c
 10896  003900  0E00               	movlw	0
 10897  003902  ECF2  F01C         	call	_lcd_send_byte
 10898                           
 10899                           ;unmc_lcd_216.c: 182: break;
 10900  003906  0012               	return	
 10901  003908                     
 10902                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
 10903  003908  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
 10904  00390C  0E01               	movlw	1
 10905  00390E  ECF2  F01C         	call	_lcd_send_byte
 10906                           
 10907                           ;unmc_lcd_216.c: 186: }
 10908                           
 10909                           ;unmc_lcd_216.c: 185: break;
 10910  003912  0012               	return	
 10911  003914                     l473:
 10912  003914  5008               	movf	lcd_putc@c,w,c
 10913                           
 10914                           ; Switch size 1, requested type "space"
 10915                           ; Number of cases is 3, Range of values is 8 to 12
 10916                           ; switch strategies available:
 10917                           ; Name         Instructions Cycles
 10918                           ; simple_byte           10     6 (average)
 10919                           ;	Chosen strategy is simple_byte
 10920  003916  0A08               	xorlw	8	; case 8
 10921  003918  B4D8               	btfsc	status,2,c
 10922  00391A  D7F0               	goto	l477
 10923  00391C  0A02               	xorlw	2	; case 10
 10924  00391E  B4D8               	btfsc	status,2,c
 10925  003920  D7E7               	goto	l476
 10926  003922  0A06               	xorlw	6	; case 12
 10927  003924  B4D8               	btfsc	status,2,c
 10928  003926  D7DE               	goto	l474
 10929  003928  D7EF               	goto	l478
 10930  00392A                     __end_of_lcd_putc:
 10931                           	opt stack 0
 10932                           tblptru	equ	0xFF8
 10933                           tblptrh	equ	0xFF7
 10934                           tblptrl	equ	0xFF6
 10935                           tablat	equ	0xFF5
 10936                           prodh	equ	0xFF4
 10937                           prodl	equ	0xFF3
 10938                           intcon	equ	0xFF2
 10939                           indf0	equ	0xFEF
 10940                           postinc0	equ	0xFEE
 10941                           fsr0h	equ	0xFEA
 10942                           fsr0l	equ	0xFE9
 10943                           wreg	equ	0xFE8
 10944                           postinc1	equ	0xFE6
 10945                           postdec1	equ	0xFE5
 10946                           fsr1h	equ	0xFE2
 10947                           fsr1l	equ	0xFE1
 10948                           indf2	equ	0xFDF
 10949                           postinc2	equ	0xFDE
 10950                           postdec2	equ	0xFDD
 10951                           fsr2h	equ	0xFDA
 10952                           fsr2l	equ	0xFD9
 10953                           status	equ	0xFD8
 10954                           
 10955 ;; *************** function _lcd_gotoxy *****************
 10956 ;; Defined at:
 10957 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 10958 ;; Parameters:    Size  Location     Type
 10959 ;;  x               1    wreg     unsigned char 
 10960 ;;  y               1    4[COMRAM] unsigned char 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;  x               1    5[COMRAM] unsigned char 
 10963 ;;  address         1    6[COMRAM] unsigned char 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1    wreg      void 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0, cstack
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10973 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10976 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10977 ;;Total ram usage:        3 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    2
 10980 ;; This function calls:
 10981 ;;		_lcd_send_byte
 10982 ;; This function is called by:
 10983 ;;		_setDiaMesAnio
 10984 ;;		_setHoraMinutoSegundo
 10985 ;;		_titila_texto_insert_password
 10986 ;;		_guarda_numero_ingresado
 10987 ;;		_mostrar_presionar_a
 10988 ;;		_resetear_pantalla_ingresar_contrasenia
 10989 ;;		_cambiar_opcion
 10990 ;;		_activar_alarma
 10991 ;;		_ir_a_pantalla_edicion
 10992 ;;		_ir_a_pantalla_ingresar_contrasenia
 10993 ;;		_ir_a_pantalla_editar_contrasenia
 10994 ;;		_covertir_valores_de_array_a_escala_decimal
 10995 ;;		_lcd_putc
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text55
 11000  003A84                     __ptext55:
 11001                           	opt stack 0
 11002  003A84                     _lcd_gotoxy:
 11003                           	opt stack 23
 11004                           
 11005                           ;incstack = 0
 11006                           ;lcd_gotoxy@x stored from wreg
 11007  003A84  6E06               	movwf	lcd_gotoxy@x,c
 11008                           
 11009                           ;unmc_lcd_216.c: 159: int8 address;
 11010                           ;unmc_lcd_216.c: 161: if(y != 1)
 11011  003A86  0405               	decf	lcd_gotoxy@y,w,c
 11012  003A88  B4D8               	btfsc	status,2,c
 11013  003A8A  D002               	goto	l468
 11014                           
 11015                           ;unmc_lcd_216.c: 162: address = 0x40;
 11016  003A8C  0E40               	movlw	64
 11017  003A8E  D001               	goto	L3
 11018  003A90                     l468:
 11019                           
 11020                           ;unmc_lcd_216.c: 163: else
 11021                           ;unmc_lcd_216.c: 164: address=0;
 11022  003A90  0E00               	movlw	0
 11023  003A92                     L3:
 11024  003A92  6E07               	movwf	lcd_gotoxy@address,c
 11025                           
 11026                           ;unmc_lcd_216.c: 166: address += x-1;
 11027  003A94  0406               	decf	lcd_gotoxy@x,w,c
 11028  003A96  2607               	addwf	lcd_gotoxy@address,f,c
 11029                           
 11030                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
 11031  003A98  5007               	movf	lcd_gotoxy@address,w,c
 11032  003A9A  0980               	iorlw	128
 11033  003A9C  6E03               	movwf	lcd_send_byte@n,c
 11034  003A9E  0E00               	movlw	0
 11035  003AA0  ECF2  F01C         	call	_lcd_send_byte
 11036  003AA4  0012               	return		;funcret
 11037  003AA6                     __end_of_lcd_gotoxy:
 11038                           	opt stack 0
 11039                           tblptru	equ	0xFF8
 11040                           tblptrh	equ	0xFF7
 11041                           tblptrl	equ	0xFF6
 11042                           tablat	equ	0xFF5
 11043                           prodh	equ	0xFF4
 11044                           prodl	equ	0xFF3
 11045                           intcon	equ	0xFF2
 11046                           indf0	equ	0xFEF
 11047                           postinc0	equ	0xFEE
 11048                           fsr0h	equ	0xFEA
 11049                           fsr0l	equ	0xFE9
 11050                           wreg	equ	0xFE8
 11051                           postinc1	equ	0xFE6
 11052                           postdec1	equ	0xFE5
 11053                           fsr1h	equ	0xFE2
 11054                           fsr1l	equ	0xFE1
 11055                           indf2	equ	0xFDF
 11056                           postinc2	equ	0xFDE
 11057                           postdec2	equ	0xFDD
 11058                           fsr2h	equ	0xFDA
 11059                           fsr2l	equ	0xFD9
 11060                           status	equ	0xFD8
 11061                           
 11062 ;; *************** function _lcd_send_byte *****************
 11063 ;; Defined at:
 11064 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11065 ;; Parameters:    Size  Location     Type
 11066 ;;  address         1    wreg     unsigned char 
 11067 ;;  n               1    2[COMRAM] unsigned char 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  address         1    3[COMRAM] unsigned char 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  1    wreg      void 
 11072 ;; Registers used:
 11073 ;;		wreg, status,2, status,0, cstack
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11083 ;;Total ram usage:        2 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:    1
 11086 ;; This function calls:
 11087 ;;		_Delay100TCYx
 11088 ;;		_lcd_send_nibble
 11089 ;; This function is called by:
 11090 ;;		_lcd_init
 11091 ;;		_lcd_gotoxy
 11092 ;;		_lcd_putc
 11093 ;;		_lcd_comand
 11094 ;;		_lcd_setcursor_vb
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           	psect	text56
 11099  0039E4                     __ptext56:
 11100                           	opt stack 0
 11101  0039E4                     _lcd_send_byte:
 11102                           	opt stack 24
 11103                           
 11104                           ;incstack = 0
 11105                           ;lcd_send_byte@address stored from wreg
 11106  0039E4  6E04               	movwf	lcd_send_byte@address,c
 11107                           
 11108                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
 11109  0039E6  968A               	bcf	3978,3,c	;volatile
 11110                           
 11111                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
 11112  0039E8  0E02               	movlw	2
 11113  0039EA  EC89  F01D         	call	_Delay100TCYx
 11114                           
 11115                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
 11116  0039EE  9893               	bcf	3987,4,c	;volatile
 11117                           
 11118                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
 11119  0039F0  9A93               	bcf	3987,5,c	;volatile
 11120                           
 11121                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
 11122  0039F2  9C93               	bcf	3987,6,c	;volatile
 11123                           
 11124                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
 11125  0039F4  9E93               	bcf	3987,7,c	;volatile
 11126                           
 11127                           ;unmc_lcd_216.c: 101: if(address)
 11128  0039F6  5004               	movf	lcd_send_byte@address,w,c
 11129  0039F8  B4D8               	btfsc	status,2,c
 11130  0039FA  D002               	goto	l456
 11131                           
 11132                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
 11133  0039FC  868A               	bsf	3978,3,c	;volatile
 11134  0039FE  D001               	goto	l457
 11135  003A00                     l456:
 11136                           
 11137                           ;unmc_lcd_216.c: 103: else
 11138                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
 11139  003A00  968A               	bcf	3978,3,c	;volatile
 11140  003A02                     l457:
 11141                           
 11142                           ;unmc_lcd_216.c: 106: __nop();
 11143  003A02  F000               	nop	
 11144                           
 11145                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
 11146  003A04  3803               	swapf	lcd_send_byte@n,w,c
 11147  003A06  0B0F               	andlw	15
 11148  003A08  ECAC  F01A         	call	_lcd_send_nibble
 11149                           
 11150                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
 11151  003A0C  5003               	movf	lcd_send_byte@n,w,c
 11152  003A0E  0B0F               	andlw	15
 11153  003A10  ECAC  F01A         	call	_lcd_send_nibble
 11154  003A14  0012               	return		;funcret
 11155  003A16                     __end_of_lcd_send_byte:
 11156                           	opt stack 0
 11157                           tblptru	equ	0xFF8
 11158                           tblptrh	equ	0xFF7
 11159                           tblptrl	equ	0xFF6
 11160                           tablat	equ	0xFF5
 11161                           prodh	equ	0xFF4
 11162                           prodl	equ	0xFF3
 11163                           intcon	equ	0xFF2
 11164                           indf0	equ	0xFEF
 11165                           postinc0	equ	0xFEE
 11166                           fsr0h	equ	0xFEA
 11167                           fsr0l	equ	0xFE9
 11168                           wreg	equ	0xFE8
 11169                           postinc1	equ	0xFE6
 11170                           postdec1	equ	0xFE5
 11171                           fsr1h	equ	0xFE2
 11172                           fsr1l	equ	0xFE1
 11173                           indf2	equ	0xFDF
 11174                           postinc2	equ	0xFDE
 11175                           postdec2	equ	0xFDD
 11176                           fsr2h	equ	0xFDA
 11177                           fsr2l	equ	0xFD9
 11178                           status	equ	0xFD8
 11179                           
 11180 ;; *************** function _lcd_send_nibble *****************
 11181 ;; Defined at:
 11182 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11183 ;; Parameters:    Size  Location     Type
 11184 ;;  nibble          1    wreg     unsigned char 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;  nibble          1    1[COMRAM] unsigned char 
 11187 ;; Return value:  Size  Location     Type
 11188 ;;                  1    wreg      void 
 11189 ;; Registers used:
 11190 ;;		wreg, status,2, status,0
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11200 ;;Total ram usage:        2 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_lcd_send_byte
 11206 ;;		_lcd_init
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text57
 11211  003558                     __ptext57:
 11212                           	opt stack 0
 11213  003558                     _lcd_send_nibble:
 11214                           	opt stack 24
 11215                           
 11216                           ;incstack = 0
 11217                           ;lcd_send_nibble@nibble stored from wreg
 11218  003558  6E02               	movwf	lcd_send_nibble@nibble,c
 11219                           
 11220                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
 11221  00355A  A002               	btfss	lcd_send_nibble@nibble,0,c
 11222  00355C  D003               	goto	u3130
 11223  00355E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11224  003560  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11225  003562  D001               	goto	u3148
 11226  003564                     u3130:
 11227  003564  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11228  003566                     u3148:
 11229  003566  3A01               	swapf	??_lcd_send_nibble,f,c
 11230  003568  508A               	movf	3978,w,c	;volatile
 11231  00356A  1801               	xorwf	??_lcd_send_nibble,w,c
 11232  00356C  0BEF               	andlw	-17
 11233  00356E  1801               	xorwf	??_lcd_send_nibble,w,c
 11234  003570  6E8A               	movwf	3978,c	;volatile
 11235                           
 11236                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
 11237  003572  A202               	btfss	lcd_send_nibble@nibble,1,c
 11238  003574  D003               	goto	u3150
 11239  003576  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11240  003578  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11241  00357A  D001               	goto	u3168
 11242  00357C                     u3150:
 11243  00357C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11244  00357E                     u3168:
 11245  00357E  3A01               	swapf	??_lcd_send_nibble,f,c
 11246  003580  4601               	rlncf	??_lcd_send_nibble,f,c
 11247  003582  508A               	movf	3978,w,c	;volatile
 11248  003584  1801               	xorwf	??_lcd_send_nibble,w,c
 11249  003586  0BDF               	andlw	-33
 11250  003588  1801               	xorwf	??_lcd_send_nibble,w,c
 11251  00358A  6E8A               	movwf	3978,c	;volatile
 11252                           
 11253                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
 11254  00358C  A402               	btfss	lcd_send_nibble@nibble,2,c
 11255  00358E  D003               	goto	u3170
 11256  003590  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11257  003592  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11258  003594  D001               	goto	u3188
 11259  003596                     u3170:
 11260  003596  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11261  003598                     u3188:
 11262  003598  3A01               	swapf	??_lcd_send_nibble,f,c
 11263  00359A  4601               	rlncf	??_lcd_send_nibble,f,c
 11264  00359C  4601               	rlncf	??_lcd_send_nibble,f,c
 11265  00359E  508A               	movf	3978,w,c	;volatile
 11266  0035A0  1801               	xorwf	??_lcd_send_nibble,w,c
 11267  0035A2  0BBF               	andlw	-65
 11268  0035A4  1801               	xorwf	??_lcd_send_nibble,w,c
 11269  0035A6  6E8A               	movwf	3978,c	;volatile
 11270                           
 11271                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
 11272  0035A8  A602               	btfss	lcd_send_nibble@nibble,3,c
 11273  0035AA  D003               	goto	u3190
 11274  0035AC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11275  0035AE  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11276  0035B0  D001               	goto	u3208
 11277  0035B2                     u3190:
 11278  0035B2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11279  0035B4                     u3208:
 11280  0035B4  3201               	rrcf	??_lcd_send_nibble,f,c
 11281  0035B6  3201               	rrcf	??_lcd_send_nibble,f,c
 11282  0035B8  508A               	movf	3978,w,c	;volatile
 11283  0035BA  1801               	xorwf	??_lcd_send_nibble,w,c
 11284  0035BC  0B7F               	andlw	-129
 11285  0035BE  1801               	xorwf	??_lcd_send_nibble,w,c
 11286  0035C0  6E8A               	movwf	3978,c	;volatile
 11287                           
 11288                           ;unmc_lcd_216.c: 32: __nop();
 11289  0035C2  F000               	nop	
 11290                           
 11291                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
 11292  0035C4  848A               	bsf	3978,2,c	;volatile
 11293                           
 11294                           ;unmc_lcd_216.c: 34: __nop();__nop();
 11295  0035C6  F000               	nop	
 11296  0035C8  F000               	nop	
 11297                           
 11298                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
 11299  0035CA  948A               	bcf	3978,2,c	;volatile
 11300  0035CC  0012               	return		;funcret
 11301  0035CE                     __end_of_lcd_send_nibble:
 11302                           	opt stack 0
 11303                           tblptru	equ	0xFF8
 11304                           tblptrh	equ	0xFF7
 11305                           tblptrl	equ	0xFF6
 11306                           tablat	equ	0xFF5
 11307                           prodh	equ	0xFF4
 11308                           prodl	equ	0xFF3
 11309                           intcon	equ	0xFF2
 11310                           indf0	equ	0xFEF
 11311                           postinc0	equ	0xFEE
 11312                           fsr0h	equ	0xFEA
 11313                           fsr0l	equ	0xFE9
 11314                           wreg	equ	0xFE8
 11315                           postinc1	equ	0xFE6
 11316                           postdec1	equ	0xFE5
 11317                           fsr1h	equ	0xFE2
 11318                           fsr1l	equ	0xFE1
 11319                           indf2	equ	0xFDF
 11320                           postinc2	equ	0xFDE
 11321                           postdec2	equ	0xFDD
 11322                           fsr2h	equ	0xFDA
 11323                           fsr2l	equ	0xFD9
 11324                           status	equ	0xFD8
 11325                           
 11326 ;; *************** function _Delay100TCYx *****************
 11327 ;; Defined at:
 11328 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  unit            1    wreg     unsigned char 
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;  unit            1    0[COMRAM] unsigned char 
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11346 ;;Total ram usage:        1 bytes
 11347 ;; Hardware stack levels used:    1
 11348 ;; This function calls:
 11349 ;;		Nothing
 11350 ;; This function is called by:
 11351 ;;		_lcd_send_byte
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text58
 11356  003B12                     __ptext58:
 11357                           	opt stack 0
 11358  003B12                     _Delay100TCYx:
 11359                           	opt stack 24
 11360                           
 11361                           ;incstack = 0
 11362                           ;Delay100TCYx@unit stored from wreg
 11363  003B12  6E01               	movwf	Delay100TCYx@unit,c
 11364  003B14                     l834:
 11365  003B14  0E21               	movlw	33
 11366  003B16                     u6537:
 11367  003B16  2EE8               	decfsz	wreg,f,c
 11368  003B18  D7FE               	bra	u6537
 11369  003B1A  F000               	nop	
 11370  003B1C  2E01               	decfsz	Delay100TCYx@unit,f,c
 11371  003B1E  D7FA               	goto	l834
 11372  003B20  0012               	return	
 11373  003B22                     __end_of_Delay100TCYx:
 11374                           	opt stack 0
 11375                           tblptru	equ	0xFF8
 11376                           tblptrh	equ	0xFF7
 11377                           tblptrl	equ	0xFF6
 11378                           tablat	equ	0xFF5
 11379                           prodh	equ	0xFF4
 11380                           prodl	equ	0xFF3
 11381                           intcon	equ	0xFF2
 11382                           indf0	equ	0xFEF
 11383                           postinc0	equ	0xFEE
 11384                           fsr0h	equ	0xFEA
 11385                           fsr0l	equ	0xFE9
 11386                           wreg	equ	0xFE8
 11387                           postinc1	equ	0xFE6
 11388                           postdec1	equ	0xFE5
 11389                           fsr1h	equ	0xFE2
 11390                           fsr1l	equ	0xFE1
 11391                           indf2	equ	0xFDF
 11392                           postinc2	equ	0xFDE
 11393                           postdec2	equ	0xFDD
 11394                           fsr2h	equ	0xFDA
 11395                           fsr2l	equ	0xFD9
 11396                           status	equ	0xFD8
 11397                           
 11398 ;; *************** function _Read_RTC *****************
 11399 ;; Defined at:
 11400 ;;		line 111 in file "../../headers\unmc_rtcc_01.h"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;		None
 11403 ;; Auto vars:     Size  Location     Type
 11404 ;;		None
 11405 ;; Return value:  Size  Location     Type
 11406 ;;                  1    wreg      void 
 11407 ;; Registers used:
 11408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11409 ;; Tracked objects:
 11410 ;;		On entry : 0/0
 11411 ;;		On exit  : 0/0
 11412 ;;		Unchanged: 0/0
 11413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11418 ;;Total ram usage:        0 bytes
 11419 ;; Hardware stack levels used:    1
 11420 ;; Hardware stack levels required when called:    1
 11421 ;; This function calls:
 11422 ;;		_RtccReadDate
 11423 ;;		_RtccReadTime
 11424 ;; This function is called by:
 11425 ;;		_ir_a_pantalla_edicion
 11426 ;;		_main
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text59
 11431  002160                     __ptext59:
 11432                           	opt stack 0
 11433  002160                     _Read_RTC:
 11434                           	opt stack 25
 11435                           
 11436                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
 11437                           
 11438                           ;incstack = 0
 11439  002160  0EBD               	movlw	low _RtccTime
 11440  002162  6E01               	movwf	RtccReadTime@pTm,c
 11441  002164  0E00               	movlw	high _RtccTime
 11442  002166  6E02               	movwf	RtccReadTime@pTm+1,c
 11443  002168  ECE7  F01A         	call	_RtccReadTime	;wreg free
 11444                           
 11445                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
 11446  00216C  0100               	movlb	0	; () banked
 11447  00216E  51BE               	movf	(_RtccTime+1)& (0+255),w,b
 11448  002170  0B0F               	andlw	15
 11449  002172  0100               	movlb	0	; () banked
 11450  002174  6FF7               	movwf	_segundo_u& (0+255),b
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
 11454  002176  0100               	movlb	0	; () banked
 11455  002178  39BE               	swapf	(_RtccTime+1)& (0+255),w,b
 11456  00217A  0B0F               	andlw	15
 11457  00217C  0B0F               	andlw	15
 11458  00217E  0100               	movlb	0	; () banked
 11459  002180  6FF6               	movwf	_segundo_d& (0+255),b
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
 11463  002182  0100               	movlb	0	; () banked
 11464  002184  51BF               	movf	(_RtccTime+2)& (0+255),w,b
 11465  002186  0B0F               	andlw	15
 11466  002188  0100               	movlb	0	; () banked
 11467  00218A  6FF5               	movwf	_minuto_u& (0+255),b
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
 11471  00218C  0100               	movlb	0	; () banked
 11472  00218E  39BF               	swapf	(_RtccTime+2)& (0+255),w,b
 11473  002190  0B0F               	andlw	15
 11474  002192  0B0F               	andlw	15
 11475  002194  0100               	movlb	0	; () banked
 11476  002196  6FF4               	movwf	_minuto_d& (0+255),b
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
 11480  002198  0100               	movlb	0	; () banked
 11481  00219A  51C0               	movf	(_RtccTime+3)& (0+255),w,b
 11482  00219C  0B0F               	andlw	15
 11483  00219E  0100               	movlb	0	; () banked
 11484  0021A0  6FF3               	movwf	_hora_u& (0+255),b
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
 11488  0021A2  0100               	movlb	0	; () banked
 11489  0021A4  39C0               	swapf	(_RtccTime+3)& (0+255),w,b
 11490  0021A6  0B0F               	andlw	15
 11491  0021A8  0B0F               	andlw	15
 11492  0021AA  0100               	movlb	0	; () banked
 11493  0021AC  6FF2               	movwf	_hora_d& (0+255),b
 11494                           
 11495                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
 11496  0021AE  0EB9               	movlw	low _RtccDate
 11497  0021B0  6E01               	movwf	RtccReadDate@pDt,c
 11498  0021B2  0E00               	movlw	high _RtccDate
 11499  0021B4  6E02               	movwf	RtccReadDate@pDt+1,c
 11500  0021B6  EC5D  F018         	call	_RtccReadDate	;wreg free
 11501                           
 11502                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
 11503  0021BA  0100               	movlb	0	; () banked
 11504  0021BC  51BA               	movf	(_RtccDate+1)& (0+255),w,b
 11505  0021BE  0B0F               	andlw	15
 11506  0021C0  0100               	movlb	0	; () banked
 11507  0021C2  6FF1               	movwf	_fecha_u& (0+255),b
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 11511  0021C4  0100               	movlb	0	; () banked
 11512  0021C6  39BA               	swapf	(_RtccDate+1)& (0+255),w,b
 11513  0021C8  0B0F               	andlw	15
 11514  0021CA  0B0F               	andlw	15
 11515  0021CC  0100               	movlb	0	; () banked
 11516  0021CE  6FF0               	movwf	_fecha_d& (0+255),b
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
 11520  0021D0  0100               	movlb	0	; () banked
 11521  0021D2  51BB               	movf	(_RtccDate+2)& (0+255),w,b
 11522  0021D4  0B0F               	andlw	15
 11523  0021D6  0100               	movlb	0	; () banked
 11524  0021D8  6FEF               	movwf	_mes_u& (0+255),b
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 11528  0021DA  0100               	movlb	0	; () banked
 11529  0021DC  39BB               	swapf	(_RtccDate+2)& (0+255),w,b
 11530  0021DE  0B0F               	andlw	15
 11531  0021E0  0B0F               	andlw	15
 11532  0021E2  0100               	movlb	0	; () banked
 11533  0021E4  6FEE               	movwf	_mes_d& (0+255),b
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
 11537  0021E6  C0B9  F0ED         	movff	_RtccDate,_dia_semana
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
 11541  0021EA  0100               	movlb	0	; () banked
 11542  0021EC  51BC               	movf	(_RtccDate+3)& (0+255),w,b
 11543  0021EE  0B0F               	andlw	15
 11544  0021F0  0100               	movlb	0	; () banked
 11545  0021F2  6FEC               	movwf	_anio_u& (0+255),b
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
 11549  0021F4  0100               	movlb	0	; () banked
 11550  0021F6  39BC               	swapf	(_RtccDate+3)& (0+255),w,b
 11551  0021F8  0B0F               	andlw	15
 11552  0021FA  0B0F               	andlw	15
 11553  0021FC  0100               	movlb	0	; () banked
 11554  0021FE  6FEB               	movwf	_anio_d& (0+255),b
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
 11558  002200  0100               	movlb	0	; () banked
 11559  002202  51F6               	movf	_segundo_d& (0+255),w,b
 11560  002204  0D0A               	mullw	10
 11561  002206  0100               	movlb	0	; () banked
 11562  002208  51F7               	movf	_segundo_u& (0+255),w,b
 11563  00220A  24F3               	addwf	prodl,w,c
 11564  00220C  0100               	movlb	0	; () banked
 11565  00220E  6F96               	movwf	_segundo& (0+255),b
 11566  002210  0100               	movlb	0	; () banked
 11567  002212  0E00               	movlw	0
 11568  002214  20F4               	addwfc	prodh,w,c
 11569  002216  0100               	movlb	0	; () banked
 11570  002218  6F97               	movwf	(_segundo+1)& (0+255),b
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
 11574  00221A  0100               	movlb	0	; () banked
 11575  00221C  51F4               	movf	_minuto_d& (0+255),w,b
 11576  00221E  0D0A               	mullw	10
 11577  002220  0100               	movlb	0	; () banked
 11578  002222  51F5               	movf	_minuto_u& (0+255),w,b
 11579  002224  24F3               	addwf	prodl,w,c
 11580  002226  0100               	movlb	0	; () banked
 11581  002228  6FDF               	movwf	_minuto& (0+255),b
 11582  00222A  0100               	movlb	0	; () banked
 11583  00222C  0E00               	movlw	0
 11584  00222E  20F4               	addwfc	prodh,w,c
 11585  002230  0100               	movlb	0	; () banked
 11586  002232  6FE0               	movwf	(_minuto+1)& (0+255),b
 11587                           
 11588                           ; BSR set to: 0
 11589                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
 11590  002234  0100               	movlb	0	; () banked
 11591  002236  51F2               	movf	_hora_d& (0+255),w,b
 11592  002238  0D0A               	mullw	10
 11593  00223A  0100               	movlb	0	; () banked
 11594  00223C  51F3               	movf	_hora_u& (0+255),w,b
 11595  00223E  24F3               	addwf	prodl,w,c
 11596  002240  0100               	movlb	0	; () banked
 11597  002242  6FE1               	movwf	_hora& (0+255),b
 11598  002244  0100               	movlb	0	; () banked
 11599  002246  0E00               	movlw	0
 11600  002248  20F4               	addwfc	prodh,w,c
 11601  00224A  0100               	movlb	0	; () banked
 11602  00224C  6FE2               	movwf	(_hora+1)& (0+255),b
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
 11606  00224E  0100               	movlb	0	; () banked
 11607  002250  51F0               	movf	_fecha_d& (0+255),w,b
 11608  002252  0D0A               	mullw	10
 11609  002254  0100               	movlb	0	; () banked
 11610  002256  51F1               	movf	_fecha_u& (0+255),w,b
 11611  002258  24F3               	addwf	prodl,w,c
 11612  00225A  0100               	movlb	0	; () banked
 11613  00225C  6FE3               	movwf	_dia& (0+255),b
 11614  00225E  0100               	movlb	0	; () banked
 11615  002260  0E00               	movlw	0
 11616  002262  20F4               	addwfc	prodh,w,c
 11617  002264  0100               	movlb	0	; () banked
 11618  002266  6FE4               	movwf	(_dia+1)& (0+255),b
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
 11622  002268  C0ED  F0E5         	movff	_dia_semana,_diasem
 11623  00226C  0100               	movlb	0	; () banked
 11624  00226E  6BE6               	clrf	(_diasem+1)& (0+255),b
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
 11628  002270  0100               	movlb	0	; () banked
 11629  002272  51EE               	movf	_mes_d& (0+255),w,b
 11630  002274  0D0A               	mullw	10
 11631  002276  0100               	movlb	0	; () banked
 11632  002278  51EF               	movf	_mes_u& (0+255),w,b
 11633  00227A  24F3               	addwf	prodl,w,c
 11634  00227C  0100               	movlb	0	; () banked
 11635  00227E  6FE7               	movwf	_mes& (0+255),b
 11636  002280  0100               	movlb	0	; () banked
 11637  002282  0E00               	movlw	0
 11638  002284  20F4               	addwfc	prodh,w,c
 11639  002286  0100               	movlb	0	; () banked
 11640  002288  6FE8               	movwf	(_mes+1)& (0+255),b
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
 11644  00228A  0100               	movlb	0	; () banked
 11645  00228C  51EB               	movf	_anio_d& (0+255),w,b
 11646  00228E  0D0A               	mullw	10
 11647  002290  0100               	movlb	0	; () banked
 11648  002292  51EC               	movf	_anio_u& (0+255),w,b
 11649  002294  24F3               	addwf	prodl,w,c
 11650  002296  0100               	movlb	0	; () banked
 11651  002298  6FE9               	movwf	_anio& (0+255),b
 11652  00229A  0100               	movlb	0	; () banked
 11653  00229C  0E00               	movlw	0
 11654  00229E  20F4               	addwfc	prodh,w,c
 11655  0022A0  0100               	movlb	0	; () banked
 11656  0022A2  6FEA               	movwf	(_anio+1)& (0+255),b
 11657                           
 11658                           ; BSR set to: 0
 11659  0022A4  0012               	return		;funcret
 11660  0022A6                     __end_of_Read_RTC:
 11661                           	opt stack 0
 11662                           tblptru	equ	0xFF8
 11663                           tblptrh	equ	0xFF7
 11664                           tblptrl	equ	0xFF6
 11665                           tablat	equ	0xFF5
 11666                           prodh	equ	0xFF4
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           indf0	equ	0xFEF
 11670                           postinc0	equ	0xFEE
 11671                           fsr0h	equ	0xFEA
 11672                           fsr0l	equ	0xFE9
 11673                           wreg	equ	0xFE8
 11674                           postinc1	equ	0xFE6
 11675                           postdec1	equ	0xFE5
 11676                           fsr1h	equ	0xFE2
 11677                           fsr1l	equ	0xFE1
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           fsr2h	equ	0xFDA
 11682                           fsr2l	equ	0xFD9
 11683                           status	equ	0xFD8
 11684                           
 11685 ;; *************** function _RtccReadTime *****************
 11686 ;; Defined at:
 11687 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;  pTm             2    0[COMRAM] PTR struct .
 11690 ;;		 -> RtccTime(4), 
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;  rTD0            8   10[COMRAM] struct .
 11693 ;;  rTD1            8    2[COMRAM] struct .
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11704 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11706 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;Total ram usage:       18 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; This function calls:
 11710 ;;		Nothing
 11711 ;; This function is called by:
 11712 ;;		_Read_RTC
 11713 ;; This function uses a non-reentrant model
 11714 ;;
 11715                           
 11716                           	psect	text60
 11717  0035CE                     __ptext60:
 11718                           	opt stack 0
 11719  0035CE                     _RtccReadTime:
 11720                           	opt stack 25
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;incstack = 0
 11724  0035CE  0EFC               	movlw	252
 11725  0035D0  010F               	movlb	15	; () banked
 11726  0035D2  173F               	andwf	63,f,b	;volatile
 11727                           
 11728                           ; BSR set to: 15
 11729  0035D4  010F               	movlb	15	; () banked
 11730  0035D6  813F               	bsf	63,0,b	;volatile
 11731                           
 11732                           ; BSR set to: 15
 11733  0035D8  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 11734                           
 11735                           ; BSR set to: 15
 11736  0035DC  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 11737                           
 11738                           ; BSR set to: 15
 11739  0035E0  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 11740                           
 11741                           ; BSR set to: 15
 11742  0035E4  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 11743                           
 11744                           ; BSR set to: 15
 11745  0035E8  0EFC               	movlw	252
 11746  0035EA  010F               	movlb	15	; () banked
 11747  0035EC  173F               	andwf	63,f,b	;volatile
 11748  0035EE  010F               	movlb	15	; () banked
 11749  0035F0  813F               	bsf	63,0,b	;volatile
 11750                           
 11751                           ; BSR set to: 15
 11752  0035F2  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 11753                           
 11754                           ; BSR set to: 15
 11755  0035F6  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 11756                           
 11757                           ; BSR set to: 15
 11758  0035FA  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 11759                           
 11760                           ; BSR set to: 15
 11761  0035FE  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 11762                           
 11763                           ; BSR set to: 15
 11764  003602  5009               	movf	RtccReadTime@rTD1+6,w,c
 11765  003604  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 11766  003606  A4D8               	btfss	status,2,c
 11767  003608  D7E2               	goto	_RtccReadTime
 11768                           
 11769                           ; BSR set to: 15
 11770                           
 11771                           ; BSR set to: 15
 11772  00360A  EE20 F003          	lfsr	2,3
 11773  00360E  5001               	movf	RtccReadTime@pTm,w,c
 11774  003610  26D9               	addwf	fsr2l,f,c
 11775  003612  5002               	movf	RtccReadTime@pTm+1,w,c
 11776  003614  22DA               	addwfc	fsr2h,f,c
 11777  003616  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 11778  00361A  EE20 F002          	lfsr	2,2
 11779  00361E  5001               	movf	RtccReadTime@pTm,w,c
 11780  003620  26D9               	addwf	fsr2l,f,c
 11781  003622  5002               	movf	RtccReadTime@pTm+1,w,c
 11782  003624  22DA               	addwfc	fsr2h,f,c
 11783  003626  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 11784  00362A  EE20 F001          	lfsr	2,1
 11785  00362E  5001               	movf	RtccReadTime@pTm,w,c
 11786  003630  26D9               	addwf	fsr2l,f,c
 11787  003632  5002               	movf	RtccReadTime@pTm+1,w,c
 11788  003634  22DA               	addwfc	fsr2h,f,c
 11789  003636  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 11790                           
 11791                           ; BSR set to: 15
 11792  00363A  0012               	return		;funcret
 11793  00363C                     __end_of_RtccReadTime:
 11794                           	opt stack 0
 11795                           tblptru	equ	0xFF8
 11796                           tblptrh	equ	0xFF7
 11797                           tblptrl	equ	0xFF6
 11798                           tablat	equ	0xFF5
 11799                           prodh	equ	0xFF4
 11800                           prodl	equ	0xFF3
 11801                           intcon	equ	0xFF2
 11802                           indf0	equ	0xFEF
 11803                           postinc0	equ	0xFEE
 11804                           fsr0h	equ	0xFEA
 11805                           fsr0l	equ	0xFE9
 11806                           wreg	equ	0xFE8
 11807                           postinc1	equ	0xFE6
 11808                           postdec1	equ	0xFE5
 11809                           fsr1h	equ	0xFE2
 11810                           fsr1l	equ	0xFE1
 11811                           indf2	equ	0xFDF
 11812                           postinc2	equ	0xFDE
 11813                           postdec2	equ	0xFDD
 11814                           fsr2h	equ	0xFDA
 11815                           fsr2l	equ	0xFD9
 11816                           status	equ	0xFD8
 11817                           
 11818 ;; *************** function _RtccReadDate *****************
 11819 ;; Defined at:
 11820 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
 11821 ;; Parameters:    Size  Location     Type
 11822 ;;  pDt             2    0[COMRAM] PTR struct .
 11823 ;;		 -> RtccDate(4), 
 11824 ;; Auto vars:     Size  Location     Type
 11825 ;;  rTD0            8   10[COMRAM] struct .
 11826 ;;  rTD1            8    2[COMRAM] struct .
 11827 ;; Return value:  Size  Location     Type
 11828 ;;                  1    wreg      void 
 11829 ;; Registers used:
 11830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11831 ;; Tracked objects:
 11832 ;;		On entry : 0/0
 11833 ;;		On exit  : 0/0
 11834 ;;		Unchanged: 0/0
 11835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11837 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11839 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11840 ;;Total ram usage:       18 bytes
 11841 ;; Hardware stack levels used:    1
 11842 ;; This function calls:
 11843 ;;		Nothing
 11844 ;; This function is called by:
 11845 ;;		_Read_RTC
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           	psect	text61
 11850  0030BA                     __ptext61:
 11851                           	opt stack 0
 11852  0030BA                     _RtccReadDate:
 11853                           	opt stack 25
 11854                           
 11855                           ; BSR set to: 15
 11856                           ;incstack = 0
 11857  0030BA  0EFC               	movlw	252
 11858  0030BC  010F               	movlb	15	; () banked
 11859  0030BE  173F               	andwf	63,f,b	;volatile
 11860  0030C0  0E03               	movlw	3
 11861  0030C2  010F               	movlb	15	; () banked
 11862  0030C4  133F               	iorwf	63,f,b	;volatile
 11863                           
 11864                           ; BSR set to: 15
 11865  0030C6  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 11866                           
 11867                           ; BSR set to: 15
 11868  0030CA  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 11869                           
 11870                           ; BSR set to: 15
 11871  0030CE  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 11872                           
 11873                           ; BSR set to: 15
 11874  0030D2  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 11875                           
 11876                           ; BSR set to: 15
 11877  0030D6  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 11878                           
 11879                           ; BSR set to: 15
 11880  0030DA  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 11881  0030DE  0EFC               	movlw	252
 11882  0030E0  010F               	movlb	15	; () banked
 11883  0030E2  173F               	andwf	63,f,b	;volatile
 11884  0030E4  0E03               	movlw	3
 11885  0030E6  010F               	movlb	15	; () banked
 11886  0030E8  133F               	iorwf	63,f,b	;volatile
 11887                           
 11888                           ; BSR set to: 15
 11889  0030EA  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 11890                           
 11891                           ; BSR set to: 15
 11892  0030EE  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 11893                           
 11894                           ; BSR set to: 15
 11895  0030F2  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 11896                           
 11897                           ; BSR set to: 15
 11898  0030F6  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 11899                           
 11900                           ; BSR set to: 15
 11901  0030FA  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 11902                           
 11903                           ; BSR set to: 15
 11904  0030FE  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 11905  003102  5005               	movf	RtccReadDate@rTD1+2,w,c
 11906  003104  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 11907  003106  A4D8               	btfss	status,2,c
 11908  003108  D7D8               	goto	_RtccReadDate
 11909                           
 11910                           ; BSR set to: 15
 11911                           
 11912                           ; BSR set to: 15
 11913  00310A  EE20 F001          	lfsr	2,1
 11914  00310E  5001               	movf	RtccReadDate@pDt,w,c
 11915  003110  26D9               	addwf	fsr2l,f,c
 11916  003112  5002               	movf	RtccReadDate@pDt+1,w,c
 11917  003114  22DA               	addwfc	fsr2h,f,c
 11918  003116  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 11919  00311A  EE20 F002          	lfsr	2,2
 11920  00311E  5001               	movf	RtccReadDate@pDt,w,c
 11921  003120  26D9               	addwf	fsr2l,f,c
 11922  003122  5002               	movf	RtccReadDate@pDt+1,w,c
 11923  003124  22DA               	addwfc	fsr2h,f,c
 11924  003126  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 11925                           
 11926                           ; BSR set to: 15
 11927  00312A  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 11928  00312E  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 11929  003132  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 11930                           
 11931                           ; BSR set to: 15
 11932  003136  EE20 F003          	lfsr	2,3
 11933  00313A  5001               	movf	RtccReadDate@pDt,w,c
 11934  00313C  26D9               	addwf	fsr2l,f,c
 11935  00313E  5002               	movf	RtccReadDate@pDt+1,w,c
 11936  003140  22DA               	addwfc	fsr2h,f,c
 11937  003142  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 11938                           
 11939                           ; BSR set to: 15
 11940  003146  0012               	return		;funcret
 11941  003148                     __end_of_RtccReadDate:
 11942                           	opt stack 0
 11943                           tblptru	equ	0xFF8
 11944                           tblptrh	equ	0xFF7
 11945                           tblptrl	equ	0xFF6
 11946                           tablat	equ	0xFF5
 11947                           prodh	equ	0xFF4
 11948                           prodl	equ	0xFF3
 11949                           intcon	equ	0xFF2
 11950                           indf0	equ	0xFEF
 11951                           postinc0	equ	0xFEE
 11952                           fsr0h	equ	0xFEA
 11953                           fsr0l	equ	0xFE9
 11954                           wreg	equ	0xFE8
 11955                           postinc1	equ	0xFE6
 11956                           postdec1	equ	0xFE5
 11957                           fsr1h	equ	0xFE2
 11958                           fsr1l	equ	0xFE1
 11959                           indf2	equ	0xFDF
 11960                           postinc2	equ	0xFDE
 11961                           postdec2	equ	0xFDD
 11962                           fsr2h	equ	0xFDA
 11963                           fsr2l	equ	0xFD9
 11964                           status	equ	0xFD8
 11965                           tblptru	equ	0xFF8
 11966                           tblptrh	equ	0xFF7
 11967                           tblptrl	equ	0xFF6
 11968                           tablat	equ	0xFF5
 11969                           prodh	equ	0xFF4
 11970                           prodl	equ	0xFF3
 11971                           intcon	equ	0xFF2
 11972                           indf0	equ	0xFEF
 11973                           postinc0	equ	0xFEE
 11974                           fsr0h	equ	0xFEA
 11975                           fsr0l	equ	0xFE9
 11976                           wreg	equ	0xFE8
 11977                           postinc1	equ	0xFE6
 11978                           postdec1	equ	0xFE5
 11979                           fsr1h	equ	0xFE2
 11980                           fsr1l	equ	0xFE1
 11981                           indf2	equ	0xFDF
 11982                           postinc2	equ	0xFDE
 11983                           postdec2	equ	0xFDD
 11984                           fsr2h	equ	0xFDA
 11985                           fsr2l	equ	0xFD9
 11986                           status	equ	0xFD8
 11987                           
 11988                           	psect	rparam
 11989  0000                     tblptru	equ	0xFF8
 11990                           tblptrh	equ	0xFF7
 11991                           tblptrl	equ	0xFF6
 11992                           tablat	equ	0xFF5
 11993                           prodh	equ	0xFF4
 11994                           prodl	equ	0xFF3
 11995                           intcon	equ	0xFF2
 11996                           indf0	equ	0xFEF
 11997                           postinc0	equ	0xFEE
 11998                           fsr0h	equ	0xFEA
 11999                           fsr0l	equ	0xFE9
 12000                           wreg	equ	0xFE8
 12001                           postinc1	equ	0xFE6
 12002                           postdec1	equ	0xFE5
 12003                           fsr1h	equ	0xFE2
 12004                           fsr1l	equ	0xFE1
 12005                           indf2	equ	0xFDF
 12006                           postinc2	equ	0xFDE
 12007                           postdec2	equ	0xFDD
 12008                           fsr2h	equ	0xFDA
 12009                           fsr2l	equ	0xFD9
 12010                           status	equ	0xFD8


Data Sizes:
    Strings     178
    Constant    71
    Data        32
    BSS         97
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     22     153
    BANK1           256      0      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_26(CODE[5]), STR_16(CODE[5]), STR_13(CODE[5]), STR_8(CODE[15]), 
		 -> STR_7(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_25(CODE[17]), STR_24(CODE[21]), STR_23(CODE[17]), STR_22(CODE[17]), 
		 -> STR_21(CODE[9]), STR_20(CODE[8]), STR_19(CODE[17]), STR_18(CODE[17]), 
		 -> STR_17(CODE[17]), STR_15(CODE[15]), STR_14(CODE[8]), STR_12(CODE[9]), 
		 -> STR_11(CODE[9]), STR_10(CODE[9]), STR_9(CODE[7]), buffer2(BANK0[20]), 

    guarda_numero_ingresado@num	PTR int  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    array_seleccionar	PTR unsigned char [6] size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_send_byte
    _titila_texto_insert_password->_lcd_putrs
    _resetear_pantalla_ingresar_contrasenia->_lcd_putrs
    _mostrar_presionar_a->_lcd_putrs
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _ir_a_pantalla_editar_contrasenia->_ingreso_numero
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setHoraMinutoSegundo->_sprintf
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setDiaMesAnio->_sprintf
    _Write_RTC->_RtccWriteDate
    _covertir_valores_de_array_a_escala_decimal->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _activar_alarma->_ingreso_numero
    _lcd_comand->_lcd_send_byte
    _ingreso_numero->_guarda_numero_ingresado
    _guarda_numero_ingresado->_sprintf
    _cambiar_opcion->_sprintf
    _sprintf->___wmul
    ___wmul->___fttol
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    _si_apreta_numero_va_a_pantalla_contrasenia->_ir_a_pantalla_ingresar_contrasenia
    _ir_a_pantalla_ingresar_contrasenia->_ir_a_pantalla_edicion
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  405176
                                             21 BANK0      1     1      0
                           _Read_RTC
              _ir_a_pantalla_inicial
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   29084
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                  _set_reloj_digital
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     925
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ir_a_pantalla_inicial                                0     0      0  375100
                  _set_reloj_digital
_si_apreta_numero_va_a_pantalla_cont
       _titila_texto_insert_password
 ---------------------------------------------------------------------------------
 (2) _titila_texto_insert_password                         1     1      0    7063
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _si_apreta_numero_va_a_pantalla_contrasenia           0     0      0  343077
 _ir_a_pantalla_ingresar_contrasenia
 ---------------------------------------------------------------------------------
 (3) _ir_a_pantalla_ingresar_contrasenia                   2     2      0  343077
                                             19 BANK0      2     2      0
                     _activar_alarma
                     _ingreso_numero
              _ir_a_pantalla_edicion
                         _lcd_gotoxy
                          _lcd_putrs
                _mostrar_presionar_a
_resetear_pantalla_ingresar_contrase
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _resetear_pantalla_ingresar_contrasenia               2     2      0    7131
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _mostrar_presionar_a                                  0     0      0    7063
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _ir_a_pantalla_edicion                                1     1      0  292074
                                             18 BANK0      1     1      0
                           _Read_RTC
                     _cambiar_opcion
                         _lcd_gotoxy
                          _lcd_putrs
                 _seleccionar_opcion
                  _set_reloj_digital
 ---------------------------------------------------------------------------------
 (2) _set_reloj_digital                                    0     0      0   24960
                      _setDiaMesAnio
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (5) _seleccionar_opcion                                   0     0      0  249048
                     _activar_alarma
         _editar_fecha_reloj_digital
          _editar_hora_reloj_digital
   _ir_a_pantalla_editar_contrasenia
 ---------------------------------------------------------------------------------
 (6) _ir_a_pantalla_editar_contrasenia                     2     2      0   17990
                                             60 COMRAM     2     2      0
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (6) _editar_hora_reloj_digital                            9     9      0  106144
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (3) _setHoraMinutoSegundo                                 0     0      0   12480
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _editar_fecha_reloj_digital                           9     9      0  106144
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
                      _setDiaMesAnio
 ---------------------------------------------------------------------------------
 (3) _setDiaMesAnio                                        0     0      0   12480
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (5) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (7) _covertir_valores_de_array_a_escala_decimal          14    12      2   80084
                                             90 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                           ___awtoft
                            ___fttol
                             ___wmul
                         _lcd_gotoxy
                          _lcd_putrs
                                _pow
                            _sprintf
 ---------------------------------------------------------------------------------
 (8) _pow                                                 17    11      6   65683
                                             73 COMRAM    17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (9) _log                                                  5     2      3   21400
                                             57 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (9) _exp                                                  9     6      3   35628
                                             64 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (10) _ldexp                                               7     2      5     400
                                             57 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (10) _floor                                               8     5      3    9183
                                             45 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (10) _frexp                                               7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (11) ___fttol                                            15    11      4     556
                                             12 COMRAM    15    11      4
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftge                                              9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (11) ___altoft                                           10     6      4    2758
                                             27 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (10) _eval_poly                                          12     5      7    9553
                                             45 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            15     9      6    3882
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftsub                                             6     0      6    4615
                                             45 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                            12     6      6    4270
                                             33 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftneg                                             3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) ___ftdiv                                            15     9      6    3102
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___awtoft                                            4     1      3    2863
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___lltoft                                             9     5      4    2689
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (12) ___ftpack                                            8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) _activar_alarma                                       3     3      0   18770
                                             60 COMRAM     3     3      0
                     _ingreso_numero
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _verificar_contrasenia                               10     8      2     115
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (7) _ingreso_numero                                       2     2      0   10837
                                             58 COMRAM     2     2      0
            _guarda_numero_ingresado
 ---------------------------------------------------------------------------------
 (8) _guarda_numero_ingresado                              2     0      2   10837
                                             56 COMRAM     2     0      2
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (5) _cambiar_opcion                                       1     1      0   10011
                                             56 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             32    22     10    2948
                                             33 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     767
                                             27 COMRAM     6     2      4
                           ___awtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    4690
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    3125
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    2373
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (6) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (6) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _ir_a_pantalla_inicial
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
     _si_apreta_numero_va_a_pantalla_contrasenia
       _ir_a_pantalla_ingresar_contrasenia
         _activar_alarma
           _ingreso_numero
             _guarda_numero_ingresado
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
           _lcd_comand
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _verificar_contrasenia
         _ingreso_numero
           _guarda_numero_ingresado
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
               _isdigit
         _ir_a_pantalla_edicion
           _Read_RTC
             _RtccReadDate
             _RtccReadTime
           _cambiar_opcion
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
               _isdigit
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _seleccionar_opcion
             _activar_alarma
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_comand
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _verificar_contrasenia
             _editar_fecha_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _setDiaMesAnio
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _editar_hora_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _setHoraMinutoSegundo
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _ir_a_pantalla_editar_contrasenia
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _set_reloj_digital
             _setDiaMesAnio
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
             _setHoraMinutoSegundo
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _mostrar_presionar_a
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _resetear_pantalla_ingresar_contrasenia
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _verificar_contrasenia
     _titila_texto_insert_password
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       C       8        4.7%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     16      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104       6        0.0%
DATA                 0      0     104       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Nov 07 15:02:02 2017

                                              ___altoft@exp 0024  
                                                         _a 009E  
                                                         _b 009C  
                                                         _c 009A  
                                                         _i 00A2  
                                                         _j 00A0  
                                                         _k 0098  
                                             ___altoft@sign 0025  
                                            ?_lcd_send_byte 0003  
                                              ___awdiv@sign 0006  
                                guarda_numero_ingresado@num 0039  
                                       ___wmul@multiplicand 001E  
                                               lcd_comand@d 0005  
                                              __CFG_CP0$OFF 000000  
                                              ___ftadd@exp1 002D  
                                              ___ftadd@exp2 002C  
                                              ___ftadd@sign 002B  
                                                       l210 10EC  
                                                       l211 10DC  
                                                       l204 10AA  
                                                       l205 109A  
                                                       l222 1160  
                                                       l223 1150  
                                                       l240 1216  
                                                       l216 1126  
                                                       l400 144A  
                                                       l320 2ED6  
                                                       l241 1206  
                                                       l217 1116  
                                                       l401 1454  
                                                       l234 11DC  
                                                       l170 321C  
                                                       l410 174C  
                                                       l235 11CC  
                                                       l411 1756  
                                                       l315 2E9A  
                                                       l228 11A2  
                                                       l420 18CE  
                                                       l316 2EB6  
                                                       l340 31AE  
                                                       l229 1192  
                                                       l413 1828  
                                                       l309 3686  
                                                       l333 318C  
                                                       l181 2E06  
                                                       l510 14C0  
                                                       l246 125A  
                                                       l174 3426  
                                                       l422 184C  
                                                       l406 1784  
                                                       l318 2ECC  
                                                       l326 316A  
                                                       l271 2CB2  
                                                       l263 2C6C  
                                                       l247 124A  
                                                       l415 17A6  
                                                       l520 1566  
                                                       l512 14D4  
                                                       l192 1036  
                                                       l424 1896  
                                                       l408 1702  
                                                       l360 2F32  
                                                       l513 14CE  
                                                       l273 2CCC  
                                                       l265 2C84  
                                                       l193 1026  
                                                       l169 31F8  
                                                       l425 18A0  
                                                       l417 17F0  
                                                       l361 2F4E  
                                                       l530 15FC  
                                                       l274 2CBC  
                                                       l266 2C74  
                                                       l186 32C6  
                                                       l370 338A  
                                                       l290 1C82  
                                                       l282 1B1A  
                                                       l602 23D2  
                                                       l418 17FA  
                                                       l531 1620  
                                                       l371 33E4  
                                                       l283 1B80  
                                                       l363 2F66  
                                                       l435 3A40  
                                                       l540 164C  
                                                       l524 1560  
                                                       l372 33C6  
                                                       l284 1B7A  
                                                       l620 2640  
                                                       l525 1588  
                                                       l509 14A6  
                                                       l373 33D0  
                                                       l461 3510  
                                                       l518 1502  
                                                       l198 1070  
                                                       l286 1BBE  
                                                       l382 132A  
                                                       l199 1060  
                                                       l631 26F6  
                                                       l391 134C  
                                                       l367 2F98  
                                                       l463 3532  
                                                       l456 3A00  
                                                       l800 3300  
                                                       l384 129A  
                                                       l457 3A02  
                                                       l473 3914  
                                                       l529 15F4  
                                                       l289 1C3A  
                                                       l801 3310  
                                                       l393 13A4  
                                                       l474 38E4  
                                                       l626 2694  
                                                       l394 13AE  
                                                       l386 12F2  
                                                       l539 169E  
                                                       l627 26EC  
                                                       l803 332E  
                                                       l387 12FC  
                                                       l468 3A90  
                                                       l476 38F0  
                                                       l804 3326  
                                                       l396 1482  
                                                       l477 38FC  
                                                       l717 3498  
                                                       l389 13DC  
                                                       l478 3908  
                                                       l494 37D0  
                                                       l718 348C  
                                                       l398 1400  
                                                       l495 37A8  
                                                       l903 1D1E  
                                                       l591 2306  
                                                       l807 334E  
                                                       l808 3358  
                                                       l913 1D7A  
                                                       l809 3366  
                                                       l834 3B14  
                                                       l922 1DB8  
                                                       l914 1D70  
                                                       l923 1DAE  
                                                       l828 39C0  
                                                       l932 2910  
                                                       l908 1D84  
                                                       l940 305A  
                                                       l925 1DDC  
                                                       l941 308A  
                                                       l597 236A  
                                                       l934 2938  
                                                       l926 1DF8  
                                                       l950 2876  
                                                       l598 23C8  
                                                       l871 2D64  
                                                       l935 2976  
                                                       l927 1E28  
                                                       l951 2886  
                                                       l872 2D4E  
                                                       l936 299C  
                                                       l848 3B04  
                                                       l953 289E  
                                                       l874 2D8C  
                                                       l954 28AE  
                                                       l970 27A2  
                                                       l875 2D82  
                                                       l947 281C  
                                                       l971 2792  
                                                       l868 2D30  
                                                       l964 3982  
                                                       l869 2D26  
                                                       l949 2844  
                                                       l958 3A76  
                                                       l983 3ABC  
                                                       l976 27C6  
                                                       l968 272C  
                                                       l977 27BA  
                                                       l899 1CF4  
                                                       l979 27E2  
                                                       _dia 00E3  
                                                       _key 00A4  
                                                       _mes 00E7  
                                                       _exp 18E8  
                                                       _log 23DC  
                                                       _pow 1FEA  
                                                       wreg 000FE8  
                                 _editar_hora_reloj_digital 16CC  
                                           RtccReadDate@pDt 0001  
                                               lcd_gotoxy@x 0006  
                                               lcd_gotoxy@y 0005  
                                              ___ftdiv@cntr 0012  
                                              ___ftdiv@sign 0017  
                                                      l1030 36B0  
                                                      l1031 36A4  
                                                      l1062 3772  
                                                      l1302 2B68  
                                                      l1063 376A  
                                                      l1303 2AEC  
                                                      l1072 3940  
                                                      l1073 3938  
                                                      l1066 3792  
                                                      l1067 379C  
                                                      l1076 3958  
                                                      l1252 1900  
                                                      l1092 2030  
                                                      l1077 3962  
                                                      l1093 2022  
                                                      l1254 1938  
                                                      l1263 2A0A  
                                                      l1255 1970  
                                                      l1095 2048  
                                                      l1272 2FC2  
                                                      l1264 29FC  
                                                      l1280 2C0C  
                                                      l1256 199E  
                                                      l1096 20CE  
                                                      l1281 2C00  
                                                      l1257 1AC2  
                                                      l1097 20AC  
                                                      l1266 2A24  
                                                      l1258 1A98  
                                                      l1098 2152  
                                                      l1267 2A9E  
                                                      l1276 2B96  
                                                      l1278 2BDC  
                                                      l1294 23F8  
                                                      l1296 241A  
                                                      l4135 1A98  
                                                      l3269 30B6  
                                                      l4407 33C6  
                                                      l5063 3508  
                                                      l4417 250E  
                                                      l5077 352A  
                                                      l4519 1B80  
                                                      l4615 12F2  
                                                      l4711 176C  
                                                      l4643 13A4  
                                                      l4619 1312  
                                                      l4707 174C  
                                                      l4671 144A  
                                                      l4647 13C4  
                                                      l4735 17F0  
                                                      l4583 2F4E  
                                                      l3961 15A4  
                                                      l4585 2F56  
                                                      l4675 146A  
                                                      l4763 1896  
                                                      l4739 1810  
                                                      ?_exp 0041  
                                                      ?_log 003A  
                                                      l4767 18B6  
                                                      l4947 2EB6  
                                                      l4889 3866  
                                                      ?_pow 004A  
                                                      STR_1 0FD7  
                                                      STR_2 0FF0  
                                                      STR_3 0FEB  
                                                      STR_4 0FDC  
                                                      STR_5 0FE6  
                                                      STR_6 0FE1  
                                                      STR_7 0F90  
                                                      STR_8 0F9F  
                                                      STR_9 0FD0  
                                                      u3130 3564  
                                                      u3150 357C  
                                                      u3230 2D18  
                                                      u3208 35B4  
                                                      u3400 1D10  
                                                      u3170 3596  
                                                      u3331 1CB2  
                                                      u3148 3566  
                                                      u5020 121E  
                                                      u3500 1DC0  
                                                      u3341 1CC6  
                                                      u3190 35B2  
                                                      u3270 2D96  
                                                      u3430 1D4E  
                                                      u5110 25C8  
                                                      u3168 357E  
                                                      u4330 1628  
                                                      u5210 1BF2  
                                                      u3370 1CE6  
                                                      u6010 3166  
                                                      u3188 3598  
                                                      u4340 1646  
                                                      u5220 1C06  
                                                      u5140 1B30  
                                                      u3541 2804  
                                                      u4350 16A6  
                                                      u5310 1C66  
                                                      u3470 1D8C  
                                                      u4430 3332  
                                                      u6110 31A4  
                                                      u6030 317A  
                                                      u3631 2710  
                                                      u4360 16BE  
                                                      u4280 15D0  
                                                      u5240 1C1E  
                                                      u5160 1B46  
                                                      u3720 2FEA  
                                                      u4520 1978  
                                                      u3561 282C  
                                                      u4370 37C8  
                                                      u5090 33E4  
                                                      u3650 274A  
                                                      u4530 197A  
                                                      u6130 31AA  
                                                      u6050 3182  
                                                      u6210 3520  
                                                      u4380 37F0  
                                                      u4700 103E  
                                                      u5308 1C50  
                                                      u5180 1B5E  
                                                      u4620 2094  
                                                      u5238 1C08  
                                                      u3910 2A16  
                                                      u5430 12CC  
                                                      u6150 31BE  
                                                      u6070 3188  
                                                      u3751 28F8  
                                                      u3655 2742  
                                                      u3840 3776  
                                                      u5328 1C68  
                                                      u5280 1C44  
                                                      u3728 2FEC  
                                                      u4640 31EA  
                                                      u5440 12E2  
                                                      u4377 37BE  
                                                      u5290 1C4E  
                                                      u5258 1C20  
                                                      u5178 1B48  
                                                      u3690 27CC  
                                                      u4650 320E  
                                                      u6170 31C6  
                                                      u6090 319C  
                                                      u4387 37E6  
                                                      u3771 2920  
                                                      u6307 177C  
                                                      u4900 1168  
                                                      u4820 10F4  
                                                      u4740 1078  
                                                      u5540 143A  
                                                      u4660 3404  
                                                      u5380 2F48  
                                                      u6317 1820  
                                                      u3870 3944  
                                                      u5198 1B60  
                                                      u3950 2BB6  
                                                      u6190 31CE  
                                                      u6407 1C96  
                                                      u6327 18C6  
                                                      u5800 2CD4  
                                                      u5480 137E  
                                                      u5640 17E0  
                                                      u6417 102C  
                                                      u6337 1322  
                                                      u6257 3A52  
                                                      u5490 1394  
                                                      u6507 1250  
                                                      u6427 1066  
                                                      u6347 13D4  
                                                      u6267 3B06  
                                                      u4940 11AA  
                                                      u4860 112E  
                                                      u4780 10B2  
                                                      u6517 2C7A  
                                                      u6437 10A0  
                                                      u6357 147A  
                                                      u6277 2DFE  
                                                      u5750 2C8C  
                                                      u3958 2BB8  
                                                      u5590 173C  
                                                      u5910 2EB0  
                                                      u6527 2CC2  
                                                      u6447 10E2  
                                                      u6367 1B70  
                                                      u6287 2E4E  
                                                      u6537 3B16  
                                                      u6457 111C  
                                                      u6377 1BB2  
                                                      u6297 368E  
                                                      u5690 1886  
                                                      u5930 2EEC  
                                                      u6467 1156  
                                                      u6387 1C30  
                                                      u4980 11E4  
                                                      u6477 1198  
                                                      u6397 1C78  
                                                      u6487 11D2  
                                                      u5880 388A  
                                                      u6497 120C  
                                                      u5970 3158  
                                                      u5990 3160  
                                          ?_lcd_send_nibble 0001  
                                                      _anio 00E9  
                                                      _flag 07C0  
                                                      _main 3A3C  
                                                      _hora 00E1  
                                              ___ftpack@arg 0001  
                                              ___ftpack@exp 0004  
                                                      fsr0h 000FEA  
                                                      fsr1h 000FE2  
                                                      indf0 000FEF  
                                                      fsr2h 000FDA  
                                                      fsr0l 000FE9  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      exp@x 0041  
                                                      log@x 003A  
                                             __CFG_T1DIG$ON 000000  
                                  ?_guarda_numero_ingresado 0039  
                                                      pow@x 004A  
                                                      pow@y 004D  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 0000  
                                             __CFG_IESO$OFF 000000  
                                          RtccReadDate@rTD0 000B  
                                          RtccReadDate@rTD1 0003  
                                              ___ftmul@cntr 001A  
                                              ___param_bank 000000  
                                              ___ftmul@sign 001B  
                                           RtccReadTime@pTm 0001  
                                              ___fttol@exp1 001B  
                                                     ??_exp 0044  
                                                     ??_log 003D  
                                              ___fttol@lval 0017  
                                                     ??_pow 0050  
                                               _Delay1KTCYx 3B02  
                                             __CFG_PLLDIV$1 000000  
                                                     ?_main 0001  
                                           __end_of___awdiv 3370  
                                           __end_of___ftadd 1E4E  
                                                     STR_10 0FAE  
                                                     STR_11 0F65  
                                                     STR_12 0F65  
                                                     STR_20 0FC0  
                                                     STR_13 0FF5  
                                                     STR_21 0FB7  
                                                     STR_14 0FC8  
                                                     STR_22 0F7F  
                                                     STR_15 0F5F  
                                                     STR_23 0F5D  
                                                     STR_16 0FF5  
                                                     STR_24 0F48  
                                                     STR_25 0F5D  
                                                     STR_17 0F6E  
                                                     STR_26 0F9A  
                                                     STR_18 0F5D  
                                                     STR_19 0F5D  
                                     __size_of_Delay100TCYx 0010  
                                           __end_of___ftdiv 29CE  
                                           __end_of___ftneg 3A84  
                                           __end_of___ftmul 28E8  
                                           ___awdiv@divisor 0003  
                                           __end_of___ftsub 39AC  
                                           __end_of___fttol 27F4  
               covertir_valores_de_array_a_escala_decimal@i 00C9  
                                           __end_of___lwdiv 37A6  
                                           __end_of___lwmod 396C  
                                           ___awdiv@counter 0005  
                                                     _TRISA 000F92  
                                                     _TRISB 000F93  
                                                     _TRISC 000F94  
                     activar_alarma@intentos_de_contrasenia 003E  
                                              ___lltoft@exp 0011  
                                            __CFG_FCMEN$OFF 000000  
                                             ___awtoft@sign 000C  
                              __size_of_mostrar_presionar_a 0018  
                                           __end_of_dpowers 0F0B  
                                                     _floor 29CE  
                                                     _ldexp 2B7E  
                                                     _frexp 2F9A  
                                                     _mes_d 00EE  
                                                     _errno 0088  
                                                     _mes_u 00EF  
                                           __end_of_isdigit 3AC4  
                                             ___ftpack@sign 0005  
                                                     _setup 3896  
                                                     tablat 000FF5  
                                                     pow@yi 0057  
                                      _setHoraMinutoSegundo 33EE  
                                              lcd_putrs@ptr 0009  
                                                     status 000FD8  
                                           __end_of_sprintf 16CC  
                                 _motivo_ingreso_de_numeros 0092  
                                               exp@exponent 0047  
                                   __CFG_DSWDTOSC$INTOSCREF 000000  
                                               ldexp@newexp 003D  
                                            _activar_alarma 1AD0  
                                           __initialization 36FA  
                                               log@exponent 003D  
                                              _Delay100TCYx 3B12  
                                              __end_of_main 3A60  
                                           ??_lcd_send_byte 0004  
                                          RtccReadTime@rTD0 000B  
                                          RtccReadTime@rTD1 0003  
                                          __end_of_Read_RTC 22A6  
            __end_of_resetear_pantalla_ingresar_contrasenia 3896  
           __size_of_resetear_pantalla_ingresar_contrasenia 004E  
                  ??_resetear_pantalla_ingresar_contrasenia 000B  
                   ?_resetear_pantalla_ingresar_contrasenia 0001  
                    _resetear_pantalla_ingresar_contrasenia 3848  
                                                    ??_main 00D6  
                                             ___fttol@sign1 0016  
                                             __activetblptr 000002  
                                          __end_of_RtccWrOn 3B02  
                                            _alarma_sonando 008E  
                                                    ?_floor 002E  
                                                    ?_ldexp 003A  
                                                    ?_frexp 0001  
                                          __end_of___altoft 34E2  
                                                    _EECON2 000FA7  
                                                    _ANCON0 000F48  
                                                    _ANCON1 000F49  
                                          ___awdiv@dividend 0001  
                                                    ?_setup 0001  
                                          __end_of___awtoft 39E4  
                   editar_fecha_reloj_digital@mes_ingresado 00CD  
                                          __end_of___ftpack 2DB6  
                                __end_of_seleccionar_opcion 3848  
                                          __end_of___lltoft 36FA  
                            __size_of_verificar_contrasenia 007E  
                                     ?_setHoraMinutoSegundo 0001  
                                            __CFG_WDTEN$OFF 000000  
                             __end_of_verificar_contrasenia 33EE  
                                          RtccWriteDate@pDt 0001  
                                                    _RTCCFG 000F3F  
                                            __CFG_WPCFG$OFF 000000  
                                          ??_cambiar_opcion 0039  
                                    __end_of_activar_alarma 1CA2  
                                         _set_reloj_digital 3B4A  
                                            __CFG_WPDIS$OFF 000000  
                   resetear_pantalla_ingresar_contrasenia@i 000B  
                                            __CFG_XINST$OFF 000000  
                                        ?_set_reloj_digital 0001  
                                          __end_of_lcd_init 3558  
                                          __end_of_lcd_putc 392A  
                                                    ___ftge 302A  
                                                    ___wmul 3A16  
                                                 ??___awdiv 0005  
                                                 ??___ftadd 0028  
                                            __CFG_STVREN$ON 000000  
                                                 ??___ftdiv 000F  
                                                 ??___ftneg 0004  
                                                    _diasem 00E5  
                                                 ??___ftmul 0013  
                                                    _anio_d 00EB  
                                                 ??___ftsub 0034  
                                                 ??___fttol 0011  
                                                    _anio_u 00EC  
                                   ??_ir_a_pantalla_edicion 00D3  
                                                 ??___lwdiv 0005  
                                                 ??___lwmod 000C  
                                                    _hora_d 00F2  
                                                    _hora_u 00F3  
                                                    clear_0 3744  
                                       ??_set_reloj_digital 0039  
                                          ___awdiv@quotient 0007  
                                                    _minuto 00DF  
                                   ??_ir_a_pantalla_inicial 0060  
                                     __end_of_RtccWriteDate 23DC  
                                     __end_of_RtccWriteTime 2700  
                                                    floor@i 0031  
                                                    floor@x 002E  
                                     ___ftmul@f3_as_product 0017  
                                          RtccWriteTime@pTm 0001  
                                                 ??_isdigit 0001  
                         editar_hora_reloj_digital@posicion 00D1  
                                              __mediumconst 0000  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                                 ??_sprintf 002C  
                                          __end_ofexp@coeff 0F2D  
                                          __end_oflog@coeff 0F48  
                                 __end_of_set_reloj_digital 3B54  
                                                __accesstop 0060  
                                   __end_of__initialization 374A  
                                                ___altoft@c 001C  
                        __size_of_editar_hora_reloj_digital 021C  
                                                ___ftadd@f1 0022  
                                                ___ftadd@f2 0025  
                                        __size_of_Write_RTC 019C  
                                                ___ftge@ff1 0001  
                                                ___ftge@ff2 0004  
                                           ?_activar_alarma 0001  
                                              eval_poly@res 0037  
                                             ___rparam_used 000001  
                                                ___ftdiv@f1 0009  
                                                ___ftdiv@f2 000C  
                                                ___ftdiv@f3 0013  
                                                ___ftneg@f1 0001  
                                                ___awtoft@c 0009  
                                                ___ftmul@f1 000D  
                                                ___ftmul@f2 0010  
                                                ___ftsub@f1 002E  
                                                ___ftsub@f2 0031  
                                                ___fttol@f1 000D  
                                            __pcstackCOMRAM 0001  
                                              __pidataBANK0 3ADC  
                                              __pidataBANK1 3B3E  
                                                ___lltoft@c 0009  
                                             __end_of_floor 2AAC  
                                             __end_of_ldexp 2C44  
                                             __end_of_frexp 302A  
                      __end_of_titila_texto_insert_password 2E5A  
                     __size_of_titila_texto_insert_password 00A4  
                              _titila_texto_insert_password 2DB6  
                                             __end_of_setup 38E0  
                                           _alarma_activada 0090  
                                           __CFG_DSWDTPS$G2 000000  
                                           __CFG_OSC$INTOSC 000000  
                __end_of_ir_a_pantalla_ingresar_contrasenia 2EFC  
               __size_of_ir_a_pantalla_ingresar_contrasenia 00A2  
                      ??_ir_a_pantalla_ingresar_contrasenia 0060  
                       ?_ir_a_pantalla_ingresar_contrasenia 0001  
                        _ir_a_pantalla_ingresar_contrasenia 2E5A  
                                         lcd_gotoxy@address 0007  
                                        __size_of_lcd_putrs 0052  
                                                   ??_floor 0031  
                                                   ??_ldexp 003F  
                                                   ??_frexp 0006  
                  __end_of_ir_a_pantalla_editar_contrasenia 2F9A  
                 __size_of_ir_a_pantalla_editar_contrasenia 009E  
                        ??_ir_a_pantalla_editar_contrasenia 003D  
                         ?_ir_a_pantalla_editar_contrasenia 0001  
                          _ir_a_pantalla_editar_contrasenia 2EFC  
                                    ??_setHoraMinutoSegundo 0039  
                                              sprintf@width 0036  
                                                   ??_setup 0039  
                                                __pbssBANK0 0060  
                                        __size_of_eval_poly 00D2  
                                                 ?_Read_RTC 0001  
                                                _dia_semana 00ED  
                                 RtccWriteTime@tempHourWDay 000A  
                         __end_of_editar_hora_reloj_digital 18E8  
                                                 ?_RtccWrOn 0001  
                                            lcd_send_byte@n 0003  
                                                   ?___ftge 0001  
                                       _mostrar_presionar_a 3AC4  
                                                   ?___wmul 001C  
                                             ?_RtccReadDate 0001  
                                             ?_RtccReadTime 0001  
                       __size_of_editar_fecha_reloj_digital 0238  
                                              ?_Delay1KTCYx 0001  
                                                 ?___altoft 001C  
                                                 ?___awtoft 0009  
                                    __size_of_setDiaMesAnio 008C  
                                                 ?___ftpack 0001  
                          __size_of_guarda_numero_ingresado 008C  
                                                 ?___lltoft 0009  
                             ?_titila_texto_insert_password 0001  
                                         __end_of_Write_RTC 1FEA  
                                                _lcd_comand 3B30  
                                                _lcd_gotoxy 3A84  
                                      ?_mostrar_presionar_a 0001  
                                                   _RTCVALH 000F99  
                                                   _RTCVALL 000F98  
                                    verificar_contrasenia@i 0009  
                                                 ?_lcd_init 0001  
                                                 ?_lcd_putc 0001  
                                __size_of_set_reloj_digital 000A  
                                                ??_Read_RTC 0013  
                                                   __Hparam 0000  
                   editar_fecha_reloj_digital@dia_ingresado 00CB  
                                                   __Lparam 0000  
                                  __size_of_lcd_send_nibble 0076  
                                                ??_RtccWrOn 0001  
                                            ??_RtccReadDate 0003  
                                           __size_of___ftge 0090  
                                            ??_RtccReadTime 0003  
                                                   ___awdiv 32EC  
                                                   ___ftadd 1CA2  
                                         __end_of_lcd_putrs 37F8  
                                                   ___ftdiv 28E8  
                                                   ___ftneg 3A60  
                                           __size_of___wmul 0026  
                                                   ___ftmul 27F4  
                                                   ___ftsub 396C  
                                                   ___fttol 2700  
                                                   ___lwdiv 3754  
                                                   ___lwmod 392A  
                                   __size_of_ingreso_numero 0268  
                                              __psmallconst 0F00  
                                                ??___altoft 0020  
                                               _RtccTimeVal 0084  
                                                   __pcinit 36FA  
                                                   _fecha_d 00F0  
                                                   _fecha_u 00F1  
                                                ??___awtoft 000C  
                                                ??___ftpack 0006  
                                         __end_of_eval_poly 2B7E  
                                                   __ramtop 0F00  
                                                ??___lltoft 000D  
                                                   __ptext0 3A3C  
                                                   __ptext1 3896  
                                                   __ptext2 34E2  
                                                   __ptext3 3B02  
                                                   __ptext4 3B22  
                                                   __ptext5 2DB6  
                                                   __ptext6 3148  
                                                   __ptext7 2E5A  
                                                   __ptext8 3848  
                                                   __ptext9 3AC4  
                                                   _buffer2 00A5  
                                                 _T1CONbits 000FCD  
                                                   _dpowers 0F01  
                                              __size_of_exp 01E8  
                                              __size_of_log 011E  
                                                   _isdigit 3AA6  
                                              __size_of_pow 0176  
                                        _numeros_ingresados 0094  
                                        _numeros_para_fecha 0080  
                                                   _segundo 0096  
                                     ??_mostrar_presionar_a 000B  
ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias 00D4  
                                                   _sprintf 149C  
                                                ??_lcd_init 0005  
                                                ??_lcd_putc 0008  
                                      end_of_initialization 374A  
                                                   exp@sign 0049  
                                             _setDiaMesAnio 31D4  
                                      lcd_send_byte@address 0004  
                                             __Lmediumconst 0000  
                               verificar_contrasenia@equals 0007  
                                                   pow@sign 0056  
                                                   postdec1 000FE5  
                                                   postdec2 000FDD  
                                        _seleccionar_opcion 37F8  
                                                   postinc0 000FEE  
                                                   postinc1 000FE6  
                                                   postinc2 000FDE  
                                     __end_of_lcd_send_byte 3A16  
                            __size_of_ir_a_pantalla_edicion 0062  
                             __end_of_ir_a_pantalla_edicion 369E  
                                                 _PORTAbits 000F80  
                                                 _PORTCbits 000F82  
                                       ?_seleccionar_opcion 0001  
                                          __CFG_DSBOREN$OFF 000000  
                            __size_of_ir_a_pantalla_inicial 000E  
                             __end_of_ir_a_pantalla_inicial 3B30  
                        __end_of_editar_fecha_reloj_digital 149C  
                                _editar_fecha_reloj_digital 1264  
                                               ?_lcd_comand 0001  
                                          __CFG_CPUDIV$OSC1 000000  
                                                 _TRISBbits 000F93  
                            ??_titila_texto_insert_password 000B  
                                               ?_lcd_gotoxy 0005  
                                           _LCD_INIT_STRING 0F0B  
                                          ??_activar_alarma 003D  
                                            ?_setDiaMesAnio 0001  
                                      ??_seleccionar_opcion 0060  
                                               ___ftdiv@exp 0016  
                                     _verificar_contrasenia 3370  
                                          __CFG_IOL1WAY$OFF 000000  
                                 RtccWriteDate@tempDayMonth 000A  
                                       __CFG_MSSP7B_EN$MSK7 000000  
                                               ___ftmul@exp 0016  
                editar_hora_reloj_digital@segundo_ingresado 00CF  
                                          Delay100TCYx@unit 0001  
                                            __end_of___ftge 30BA  
                                            __end_of___wmul 3A3C  
                                   _guarda_numero_ingresado 3260  
                                 RtccWriteDate@tempHourWDay 000C  
                   editar_hora_reloj_digital@hora_ingresada 00CB  
                                         ??_lcd_send_nibble 0001  
                                             __pbitbssBANK0 07C0  
                                      __size_of_Delay1KTCYx 0010  
                                          __CFG_DSWDTEN$OFF 000000  
                 editar_hora_reloj_digital@minuto_ingresado 00CD  
                                                floor@expon 0034  
                                       start_initialization 36FA  
                                                eval_poly@d 0031  
                                                eval_poly@n 0033  
                                                eval_poly@x 002E  
                                                ldexp@value 003A  
                                               __end_of_exp 1AD0  
                                               __end_of_log 24FA  
                                               __end_of_pow 2160  
                                      __end_of_RtccReadDate 3148  
                                      __end_of_RtccReadTime 363C  
        __end_of_covertir_valores_de_array_a_escala_decimal 2604  
       __size_of_covertir_valores_de_array_a_escala_decimal 010A  
              ??_covertir_valores_de_array_a_escala_decimal 005D  
               ?_covertir_valores_de_array_a_escala_decimal 005B  
                _covertir_valores_de_array_a_escala_decimal 24FA  
                                                frexp@value 0001  
                                      RtccWriteTime@wasAlrm 0006  
                                      RtccWriteTime@wasWrEn 0007  
                                    __size_of_RtccWriteDate 0136  
                                           RtccWriteDate@di 0003  
                                    __size_of_RtccWriteTime 00FC  
                                         __size_of_Read_RTC 0146  
                                       __size_of_lcd_comand 000E  
                                                  ??___ftge 0007  
                                       __size_of_lcd_gotoxy 0022  
                                                  ??___wmul 0020  
                                            _ingreso_numero 0FFC  
                                               __pdataBANK0 00D7  
                                               __pdataBANK1 0100  
                                         __size_of_RtccWrOn 0012  
                                           RtccWriteTime@di 0003  
                                          __CFG_LPT1OSC$OFF 000000  
                                   __size_of_cambiar_opcion 00C4  
                                         __size_of___altoft 0078  
                                               _ALRMCFGbits 000F91  
                                   __end_of_LCD_INIT_STRING 0F0F  
                                         __size_of___awtoft 0038  
                                         __size_of___ftpack 00AE  
                                         __size_of___lltoft 005C  
                                             __pcstackBANK0 00C1  
                                                 _Write_RTC 1E4E  
                                           ??_setDiaMesAnio 0039  
                                              _isdigit$1974 0002  
                                           Delay1KTCYx@unit 0001  
                             __size_of_setHoraMinutoSegundo 007C  
                                    ?_verificar_contrasenia 0001  
                                         __size_of_lcd_init 0076  
                                               sprintf@flag 0032  
                                         __size_of_lcd_putc 004A  
                                               sprintf@prec 0035  
                                         _array_contrasenia 00D7  
                                                 __pnvBANK0 00EB  
                                          ___lwdiv@dividend 0001  
                                ?_editar_hora_reloj_digital 0001  
                                    __end_of_ingreso_numero 1264  
                                             ?_Delay100TCYx 0001  
                                 ??_guarda_numero_ingresado 003B  
                                                  ?___awdiv 0001  
                                                  ?___ftadd 0022  
                                                  ?___ftdiv 0009  
                                                  ?___ftneg 0001  
                                                  ?___ftmul 000D  
                                                  ?___ftsub 002E  
                                                  ?___fttol 000D  
                                                  ?___lwdiv 0001  
                                                  ?___lwmod 0008  
                                   RtccWriteTime@tempMinSec 0008  
                               _array_contrasenia_ingresada 0060  
                                                 _lcd_putrs 37A6  
                                             _RtccWriteDate 22A6  
                                               __smallconst 0F00  
                                             _RtccWriteTime 2604  
                                                  ?_isdigit 0001  
                                                 _eval_poly 2AAC  
                                      __CFG_RTCOSC$T1OSCREF 000000  
                                                ?_Write_RTC 0001  
                                          ___lwdiv@quotient 0005  
                                                  ?_sprintf 0022  
                                            __size_of_floor 00DE  
                                            __size_of_ldexp 00C6  
                                            __size_of_frexp 0090  
                              ??_editar_fecha_reloj_digital 005F  
                                            __size_of_setup 004A  
                                          _RtccAlrmTimeDate 0070  
                                            ___wmul@product 0020  
                                                  _LATAbits 000F89  
                                                  _LATBbits 000F8A  
                                                  _PIE3bits 000FA3  
                                                 _segundo_d 00F6  
                                            ??_Delay100TCYx 0001  
                                                 _segundo_u 00F7  
                                           ?_ingreso_numero 0001  
                                          __CFG_WDTPS$32768 000000  
                        editar_fecha_reloj_digital@posicion 00D1  
                                        RtccWriteDate@wasOn 0005  
                                        _Rtcc_read_TimeDate 0068  
                                            ?_RtccWriteDate 0001  
                               __end_of_mostrar_presionar_a 3ADC  
                                                ?_lcd_putrs 0009  
                                         ___wmul@multiplier 001C  
                                            ?_RtccWriteTime 0001  
                                                 lcd_init@i 0005  
                                     __size_of_RtccReadDate 008E  
                                              ??_lcd_comand 0005  
                                                ?_eval_poly 002E  
                               ?_editar_fecha_reloj_digital 0001  
                  editar_fecha_reloj_digital@anio_ingresado 00CF  
                                                 lcd_putc@c 0008  
                                     __size_of_RtccReadTime 006E  
                                              ??_lcd_gotoxy 0006  
                           __end_of_guarda_numero_ingresado 32EC  
                                                 copy_data0 370E  
                                                 copy_data1 372E  
                                                  _Read_RTC 2160  
                                         _array_seleccionar 0100  
                                                 frexp@eptr 0004  
                                           _lcd_send_nibble 3558  
                                                  __Hrparam 0000  
                                                  _RtccDate 00B9  
                                                  __Lrparam 0000  
                                                  _RtccTime 00BD  
                                                  _RtccWrOn 3AF0  
                                        __end_of_lcd_comand 3B3E  
                                        __end_of_lcd_gotoxy 3AA6  
                                              _RtccReadDate 30BA  
                                            _cambiar_opcion 2C44  
                                          __size_of___awdiv 0084  
                                          __size_of___ftadd 01AC  
                                              _RtccReadTime 35CE  
                                          __size_of___ftdiv 00E6  
                                          __size_of___ftneg 0024  
                                                  ___altoft 346A  
                                          __size_of___ftmul 00F4  
                                          __size_of___ftsub 0040  
                                          __size_of___fttol 00F4  
                                          __size_of___lwdiv 0052  
                                          __size_of___lwmod 0042  
                                                  ___awtoft 39AC  
                                                  ___ftpack 2D08  
                                                  ___lltoft 369E  
                         ir_a_pantalla_editar_contrasenia@i 003D  
                                              _RtccTimeDate 0078  
           _covertir_valores_de_array_a_escala_decimal$2445 00C1  
           _covertir_valores_de_array_a_escala_decimal$2446 00C4  
                                                  _exp$2449 0044  
                                     _ir_a_pantalla_edicion 363C  
                                                sprintf@val 0033  
                                          __size_of_isdigit 001E  
                                           ___lwdiv@divisor 0003  
                                     _ir_a_pantalla_inicial 3B22  
                                               ??_Write_RTC 000E  
                                           ___lwdiv@counter 0007  
                                                  __ptext10 363C  
                                                  __ptext11 3B4A  
                                                  __ptext20 2604  
                                                  __ptext12 37F8  
                                                  __ptext21 22A6  
                                                  __ptext13 2EFC  
                                                  __ptext30 2700  
                                                  __ptext22 3AF0  
                                                  __ptext14 16CC  
                                                  __ptext31 302A  
                                                  __ptext23 24FA  
                                                  __ptext15 33EE  
                                                  __ptext40 369E  
                                                  __ptext32 346A  
                                                  __ptext24 1FEA  
                                                  __ptext16 1264  
                                                  __ptext41 2D08  
                                                  __ptext33 2AAC  
                                                  __ptext25 23DC  
                                                  __ptext17 31D4  
                                                  __ptext50 3A16  
                                                  __ptext42 1AD0  
                                                  __ptext34 27F4  
                                                  __ptext26 18E8  
                                                  __ptext18 1E4E  
                                                  __ptext51 392A  
                                                  __ptext43 3370  
                                                  __ptext35 396C  
                                                  __ptext27 2B7E  
                                                  __ptext19 32EC  
                                                  __ptext60 35CE  
                                                  __ptext52 3754  
                                                  __ptext44 3B30  
                                                  __ptext36 1CA2  
                                                  __ptext28 29CE  
                                                  __ptext61 30BA  
                                                  __ptext53 37A6  
                                                  __ptext45 0FFC  
                                                  __ptext37 3A60  
                                                  __ptext29 2F9A  
                                                  __ptext54 38E0  
                                                  __ptext46 3260  
                                                  __ptext38 28E8  
                                                  __ptext55 3A84  
                                                  __ptext47 2C44  
                                                  __ptext39 39AC  
                                                  __ptext56 39E4  
                                                  __ptext48 149C  
                                                  __ptext57 3558  
                                                  __ptext49 3AA6  
                                                  __ptext58 3B12  
                                                  __ptext59 2160  
                                                  _lcd_init 34E2  
                                                  _lcd_putc 38E0  
                                           _txt_insert_pass 008A  
                                                  _pow$2447 0050  
                                                  _pow$2448 0053  
                                          __size_of_sprintf 0230  
                                    __size_of_lcd_send_byte 0032  
                                             __size_of_main 0024  
                               __size_of_seleccionar_opcion 0050  
                                                  _minuto_d 00F4  
                                                  _minuto_u 00F5  
                                    __end_of_cambiar_opcion 2D08  
                                             ??_Delay1KTCYx 0001  
                                           ??_RtccWriteDate 0004  
                                           ??_RtccWriteTime 0004  
                                               ??_lcd_putrs 000B  
                                                  exp@coeff 0F0F  
                                                  log@coeff 0F2D  
                                               _OSCTUNEbits 000F9B  
                                                _INTCONbits 000FF2  
        __end_of_si_apreta_numero_va_a_pantalla_contrasenia 31D4  
       __size_of_si_apreta_numero_va_a_pantalla_contrasenia 008C  
              ??_si_apreta_numero_va_a_pantalla_contrasenia 0060  
               ?_si_apreta_numero_va_a_pantalla_contrasenia 0001  
                _si_apreta_numero_va_a_pantalla_contrasenia 3148  
                                               ??_eval_poly 0035  
                                        RtccWriteTime@wasOn 0005  
                                      __end_of_Delay100TCYx 3B22  
                                                  isdigit@c 0003  
                                   ??_verificar_contrasenia 0003  
                                                 sprintf@ap 0030  
                                   __end_of_lcd_send_nibble 35CE  
                                                 sprintf@sp 0022  
                                          ___lwmod@dividend 0008  
                                                _OSCCONbits 000FD3  
                               ??_editar_hora_reloj_digital 005F  
                                   __size_of_activar_alarma 01D2  
                                         _boton_seleccionar 008C  
                                           ?_cambiar_opcion 0001  
                                     RtccWriteDate@tempYear 0007  
                              __end_of_setHoraMinutoSegundo 346A  
                                             _lcd_send_byte 39E4  
                                                _RTCCFGbits 000F3F  
                                    ?_ir_a_pantalla_edicion 0001  
                                                  sprintf@c 0038  
                                                  sprintf@f 0024  
                                           ___lwmod@divisor 000A  
                                       __end_of_Delay1KTCYx 3B12  
                                           ___lwmod@counter 000C  
                                    ?_ir_a_pantalla_inicial 0001  
                                      RtccWriteDate@wasAlrm 0006  
                                      RtccWriteDate@wasWrEn 0009  
                                     __end_of_setDiaMesAnio 3260  
          covertir_valores_de_array_a_escala_decimal@numero 00C7  
                                          ??_ingreso_numero 003B  
                                     lcd_send_nibble@nibble 0002  
