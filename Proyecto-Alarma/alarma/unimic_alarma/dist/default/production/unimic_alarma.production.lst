

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Oct 06 21:04:15 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51  0000                     
    52                           ; Version 1.43
    53                           ; Generated 25/07/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F26J50 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	idataCOMRAM
    88  00244A                     __pidataCOMRAM:
    89                           	opt stack 0
    90                           
    91                           ;initializer for _minuto
    92  00244A  001E               	dw	30
    93                           
    94                           ;initializer for _hora
    95  00244C  0012               	dw	18
    96                           
    97                           ;initializer for _dia
    98  00244E  0008               	dw	8
    99                           
   100                           ;initializer for _diasem
   101  002450  0003               	dw	3
   102                           
   103                           ;initializer for _mes
   104  002452  0009               	dw	9
   105                           
   106                           ;initializer for _anio
   107  002454  000F               	dw	15
   108                           
   109                           	psect	idataBANK0
   110  0023F6                     __pidataBANK0:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _array_seleccionar
   114  0023F6  66                 	db	low STR_1
   115  0023F7  0F                 	db	high STR_1
   116  0023F8  7F                 	db	low STR_2
   117  0023F9  0F                 	db	high STR_2
   118  0023FA  7A                 	db	low STR_3
   119  0023FB  0F                 	db	high STR_3
   120  0023FC  6B                 	db	low STR_4
   121  0023FD  0F                 	db	high STR_4
   122  0023FE  75                 	db	low STR_5
   123  0023FF  0F                 	db	high STR_5
   124  002400  70                 	db	low STR_6
   125  002401  0F                 	db	high STR_6
   126                           
   127                           ;initializer for _array_contrasenia
   128  002402  0001               	dw	1
   129  002404  0002               	dw	2
   130  002406  0003               	dw	3
   131  002408  0004               	dw	4
   132                           
   133                           	psect	smallconst
   134  000F00                     __psmallconst:
   135                           	opt stack 0
   136  000F00  00                 	db	0
   137  000F01                     _dpowers:
   138                           	opt stack 0
   139  000F01  0001               	dw	1
   140  000F03  000A               	dw	10
   141  000F05  0064               	dw	100
   142  000F07  03E8               	dw	1000
   143  000F09  2710               	dw	10000
   144  000F0B                     __end_of_dpowers:
   145                           	opt stack 0
   146  000F0B                     _LCD_INIT_STRING:
   147                           	opt stack 0
   148  000F0B  28                 	db	40
   149  000F0C  0C                 	db	12
   150  000F0D  01                 	db	1
   151  000F0E  06                 	db	6
   152  000F0F                     __end_of_LCD_INIT_STRING:
   153                           	opt stack 0
   154  000F0F                     STR_15:
   155                           
   156                           ; BSR set to: 15
   157  000F0F  20                 	db	32
   158  000F10  20                 	db	32
   159  000F11  20                 	db	32
   160  000F12  20                 	db	32
   161  000F13  20                 	db	32
   162  000F14  20                 	db	32
   163  000F15  20                 	db	32
   164  000F16  20                 	db	32
   165  000F17  20                 	db	32
   166  000F18  20                 	db	32
   167  000F19  20                 	db	32
   168  000F1A  20                 	db	32
   169  000F1B  20                 	db	32
   170  000F1C  20                 	db	32
   171  000F1D  20                 	db	32
   172  000F1E  20                 	db	32
   173  000F1F  00                 	db	0
   174  000F20                     STR_14:
   175                           
   176                           ; BSR set to: 15
   177  000F20  49                 	db	73	;'I'
   178  000F21  6E                 	db	110	;'n'
   179  000F22  73                 	db	115	;'s'
   180  000F23  65                 	db	101	;'e'
   181  000F24  72                 	db	114	;'r'
   182  000F25  74                 	db	116	;'t'
   183  000F26  20                 	db	32
   184  000F27  50                 	db	80	;'P'
   185  000F28  61                 	db	97	;'a'
   186  000F29  73                 	db	115	;'s'
   187  000F2A  73                 	db	115	;'s'
   188  000F2B  77                 	db	119	;'w'
   189  000F2C  6F                 	db	111	;'o'
   190  000F2D  72                 	db	114	;'r'
   191  000F2E  64                 	db	100	;'d'
   192  000F2F  20                 	db	32
   193  000F30  00                 	db	0
   194  000F31                     STR_7:
   195                           
   196                           ; BSR set to: 15
   197  000F31  25                 	db	37
   198  000F32  30                 	db	48	;'0'
   199  000F33  32                 	db	50	;'2'
   200  000F34  75                 	db	117	;'u'
   201  000F35  2F                 	db	47
   202  000F36  25                 	db	37
   203  000F37  30                 	db	48	;'0'
   204  000F38  32                 	db	50	;'2'
   205  000F39  75                 	db	117	;'u'
   206  000F3A  2F                 	db	47
   207  000F3B  25                 	db	37
   208  000F3C  30                 	db	48	;'0'
   209  000F3D  32                 	db	50	;'2'
   210  000F3E  75                 	db	117	;'u'
   211  000F3F  00                 	db	0
   212  000F40                     STR_8:
   213                           
   214                           ; BSR set to: 15
   215  000F40  25                 	db	37
   216  000F41  30                 	db	48	;'0'
   217  000F42  32                 	db	50	;'2'
   218  000F43  75                 	db	117	;'u'
   219  000F44  3A                 	db	58	;':'
   220  000F45  25                 	db	37
   221  000F46  30                 	db	48	;'0'
   222  000F47  32                 	db	50	;'2'
   223  000F48  75                 	db	117	;'u'
   224  000F49  3A                 	db	58	;':'
   225  000F4A  25                 	db	37
   226  000F4B  30                 	db	48	;'0'
   227  000F4C  32                 	db	50	;'2'
   228  000F4D  75                 	db	117	;'u'
   229  000F4E  00                 	db	0
   230  000F4F                     STR_10:
   231                           
   232                           ; BSR set to: 15
   233  000F4F  50                 	db	80	;'P'
   234  000F50  61                 	db	97	;'a'
   235  000F51  73                 	db	115	;'s'
   236  000F52  73                 	db	115	;'s'
   237  000F53  77                 	db	119	;'w'
   238  000F54  6F                 	db	111	;'o'
   239  000F55  72                 	db	114	;'r'
   240  000F56  64                 	db	100	;'d'
   241  000F57  00                 	db	0
   242  000F58                     STR_17:
   243                           
   244                           ; BSR set to: 15
   245  000F58  28                 	db	40
   246  000F59  6E                 	db	110	;'n'
   247  000F5A  75                 	db	117	;'u'
   248  000F5B  6C                 	db	108	;'l'
   249  000F5C  6C                 	db	108	;'l'
   250  000F5D  29                 	db	41
   251  000F5E  00                 	db	0
   252  000F5F                     STR_9:
   253                           
   254                           ; BSR set to: 15
   255  000F5F  49                 	db	73	;'I'
   256  000F60  6E                 	db	110	;'n'
   257  000F61  73                 	db	115	;'s'
   258  000F62  65                 	db	101	;'e'
   259  000F63  72                 	db	114	;'r'
   260  000F64  74                 	db	116	;'t'
   261  000F65  00                 	db	0
   262  000F66                     STR_1:
   263                           
   264                           ; BSR set to: 15
   265  000F66  20                 	db	32
   266  000F67  44                 	db	68	;'D'
   267  000F68  69                 	db	105	;'i'
   268  000F69  61                 	db	97	;'a'
   269  000F6A  00                 	db	0
   270  000F6B                     STR_4:
   271                           
   272                           ; BSR set to: 15
   273  000F6B  48                 	db	72	;'H'
   274  000F6C  6F                 	db	111	;'o'
   275  000F6D  72                 	db	114	;'r'
   276  000F6E  61                 	db	97	;'a'
   277  000F6F  00                 	db	0
   278  000F70                     STR_6:
   279                           
   280                           ; BSR set to: 15
   281  000F70  20                 	db	32
   282  000F71  53                 	db	83	;'S'
   283  000F72  65                 	db	101	;'e'
   284  000F73  67                 	db	103	;'g'
   285  000F74  00                 	db	0
   286  000F75                     STR_5:
   287                           
   288                           ; BSR set to: 15
   289  000F75  20                 	db	32
   290  000F76  4D                 	db	77	;'M'
   291  000F77  69                 	db	105	;'i'
   292  000F78  6E                 	db	110	;'n'
   293  000F79  00                 	db	0
   294  000F7A                     STR_3:
   295                           
   296                           ; BSR set to: 15
   297  000F7A  41                 	db	65	;'A'
   298  000F7B  6E                 	db	110	;'n'
   299  000F7C  69                 	db	105	;'i'
   300  000F7D  6F                 	db	111	;'o'
   301  000F7E  00                 	db	0
   302  000F7F                     STR_2:
   303                           
   304                           ; BSR set to: 15
   305  000F7F  20                 	db	32
   306  000F80  4D                 	db	77	;'M'
   307  000F81  65                 	db	101	;'e'
   308  000F82  73                 	db	115	;'s'
   309  000F83  00                 	db	0
   310  000F84                     STR_13:
   311                           
   312                           ; BSR set to: 15
   313  000F84  25                 	db	37
   314  000F85  30                 	db	48	;'0'
   315  000F86  31                 	db	49	;'1'
   316  000F87  75                 	db	117	;'u'
   317  000F88  00                 	db	0
   318  000F89                     STR_16:
   319                           
   320                           ; BSR set to: 15
   321  000F89  25                 	db	37
   322  000F8A  73                 	db	115	;'s'
   323  000F8B  00                 	db	0
   324  0000                     
   325                           ; #config settings
   326  000F8C  00                 	db	0	; dummy byte at the end
   327  0000                     
   328                           	psect	nvCOMRAM
   329  000059                     __pnvCOMRAM:
   330                           	opt stack 0
   331  000059                     _anio_d:
   332                           	opt stack 0
   333  000059                     	ds	1
   334  00005A                     _mes_d:
   335                           	opt stack 0
   336  00005A                     	ds	1
   337  00005B                     _fecha_d:
   338                           	opt stack 0
   339  00005B                     	ds	1
   340  00005C                     _hora_d:
   341                           	opt stack 0
   342  00005C                     	ds	1
   343  00005D                     _minuto_d:
   344                           	opt stack 0
   345  00005D                     	ds	1
   346  00005E                     _segundo_d:
   347                           	opt stack 0
   348  00005E                     	ds	1
   349                           
   350                           	psect	nvBANK0
   351  0000AC                     __pnvBANK0:
   352                           	opt stack 0
   353  0000AC                     _anio_u:
   354                           	opt stack 0
   355  0000AC                     	ds	1
   356  0000AD                     _dia_semana:
   357                           	opt stack 0
   358  0000AD                     	ds	1
   359  0000AE                     _mes_u:
   360                           	opt stack 0
   361  0000AE                     	ds	1
   362  0000AF                     _fecha_u:
   363                           	opt stack 0
   364  0000AF                     	ds	1
   365  0000B0                     _hora_u:
   366                           	opt stack 0
   367  0000B0                     	ds	1
   368  0000B1                     _minuto_u:
   369                           	opt stack 0
   370  0000B1                     	ds	1
   371  0000B2                     _segundo_u:
   372                           	opt stack 0
   373  0000B2                     	ds	1
   374  0000                     _RTCCFG	set	3903
   375  0000                     _ANCON1	set	3913
   376  0000                     _ANCON0	set	3912
   377  0000                     _RTCCFGbits	set	3903
   378  0000                     _ALRMCFGbits	set	3985
   379  0000                     _EECON2	set	4007
   380  0000                     _INTCONbits	set	4082
   381  0000                     _RTCVALH	set	3993
   382  0000                     _RTCVALL	set	3992
   383  0000                     _TRISBbits	set	3987
   384  0000                     _LATBbits	set	3978
   385  0000                     _T1CONbits	set	4045
   386  0000                     _TRISC	set	3988
   387  0000                     _TRISB	set	3987
   388  0000                     _TRISA	set	3986
   389  0000                     _OSCCONbits	set	4051
   390  0000                     _OSCTUNEbits	set	3995
   391  0000                     _LATAbits	set	3977
   392  0000                     _PORTAbits	set	3968
   393  0000                     _PIE3bits	set	4003
   394                           
   395                           	psect	cinit
   396  00212C                     __pcinit:
   397                           	opt stack 0
   398  00212C                     start_initialization:
   399                           	opt stack 0
   400  00212C                     __initialization:
   401                           	opt stack 0
   402                           
   403                           ; Initialize objects allocated to BANK0 (20 bytes)
   404                           ; load TBLPTR registers with __pidataBANK0
   405  00212C  0EF6               	movlw	low __pidataBANK0
   406  00212E  6EF6               	movwf	tblptrl,c
   407  002130  0E23               	movlw	high __pidataBANK0
   408  002132  6EF7               	movwf	tblptrh,c
   409  002134  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   410  002136  6EF8               	movwf	tblptru,c
   411  002138  EE00  F098         	lfsr	0,__pdataBANK0
   412  00213C  EE10 F014          	lfsr	1,20
   413  002140                     copy_data0:
   414  002140  0009               	tblrd		*+
   415  002142  CFF5 FFEE          	movff	tablat,postinc0
   416  002146  50E5               	movf	postdec1,w,c
   417  002148  50E1               	movf	fsr1l,w,c
   418  00214A  E1FA               	bnz	copy_data0
   419                           
   420                           ; Initialize objects allocated to COMRAM (12 bytes)
   421                           ; load TBLPTR registers with __pidataCOMRAM
   422  00214C  0E4A               	movlw	low __pidataCOMRAM
   423  00214E  6EF6               	movwf	tblptrl,c
   424  002150  0E24               	movlw	high __pidataCOMRAM
   425  002152  6EF7               	movwf	tblptrh,c
   426  002154  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   427  002156  6EF8               	movwf	tblptru,c
   428  002158  EE00  F04D         	lfsr	0,__pdataCOMRAM
   429  00215C  EE10 F00C          	lfsr	1,12
   430  002160                     copy_data1:
   431  002160  0009               	tblrd		*+
   432  002162  CFF5 FFEE          	movff	tablat,postinc0
   433  002166  50E5               	movf	postdec1,w,c
   434  002168  50E1               	movf	fsr1l,w,c
   435  00216A  E1FA               	bnz	copy_data1
   436                           
   437                           ; Clear objects allocated to BANK0 (56 bytes)
   438  00216C  EE00  F060         	lfsr	0,__pbssBANK0
   439  002170  0E38               	movlw	56
   440  002172                     clear_0:
   441  002172  6AEE               	clrf	postinc0,c
   442  002174  06E8               	decf	wreg,f,c
   443  002176  E1FD               	bnz	clear_0
   444                           
   445                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   446  002178  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   447                           
   448                           ; Clear objects allocated to COMRAM (27 bytes)
   449  00217A  EE00  F032         	lfsr	0,__pbssCOMRAM
   450  00217E  0E1B               	movlw	27
   451  002180                     clear_1:
   452  002180  6AEE               	clrf	postinc0,c
   453  002182  06E8               	decf	wreg,f,c
   454  002184  E1FD               	bnz	clear_1
   455  002186                     end_of_initialization:
   456                           	opt stack 0
   457  002186                     __end_of__initialization:
   458                           	opt stack 0
   459  002186  0E00               	movlw	low (__Lmediumconst shr (0+16))
   460  002188  6EF8               	movwf	tblptru,c
   461  00218A  0100               	movlb	0
   462  00218C  EFC7  F007         	goto	_main	;jump to C main() function
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           postinc0	equ	0xFEE
   468                           wreg	equ	0xFE8
   469                           postdec1	equ	0xFE5
   470                           fsr1l	equ	0xFE1
   471                           
   472                           	psect	bitbssCOMRAM
   473  0002F8                     __pbitbssCOMRAM:
   474                           	opt stack 0
   475  0002F8                     _flag:
   476                           	opt stack 0
   477  0002F8                     	ds	1
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487                           	psect	bssCOMRAM
   488  000032                     __pbssCOMRAM:
   489                           	opt stack 0
   490  000032                     _txt_insert_pass:
   491                           	opt stack 0
   492  000032                     	ds	2
   493  000034                     _numeros_ingresados:
   494                           	opt stack 0
   495  000034                     	ds	2
   496  000036                     _segundo:
   497                           	opt stack 0
   498  000036                     	ds	2
   499  000038                     _k:
   500                           	opt stack 0
   501  000038                     	ds	2
   502  00003A                     _c:
   503                           	opt stack 0
   504  00003A                     	ds	2
   505  00003C                     _b:
   506                           	opt stack 0
   507  00003C                     	ds	2
   508  00003E                     _a:
   509                           	opt stack 0
   510  00003E                     	ds	2
   511  000040                     _j:
   512                           	opt stack 0
   513  000040                     	ds	2
   514  000042                     _i:
   515                           	opt stack 0
   516  000042                     	ds	2
   517  000044                     _key:
   518                           	opt stack 0
   519  000044                     	ds	1
   520  000045                     _RtccDate:
   521                           	opt stack 0
   522  000045                     	ds	4
   523  000049                     _RtccTime:
   524                           	opt stack 0
   525  000049                     	ds	4
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	dataCOMRAM
   536  00004D                     __pdataCOMRAM:
   537                           	opt stack 0
   538  00004D                     _minuto:
   539                           	opt stack 0
   540  00004D                     	ds	2
   541  00004F                     _hora:
   542                           	opt stack 0
   543  00004F                     	ds	2
   544  000051                     _dia:
   545                           	opt stack 0
   546  000051                     	ds	2
   547  000053                     _diasem:
   548                           	opt stack 0
   549  000053                     	ds	2
   550  000055                     _mes:
   551                           	opt stack 0
   552  000055                     	ds	2
   553  000057                     _anio:
   554                           	opt stack 0
   555  000057                     	ds	2
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           postinc0	equ	0xFEE
   561                           wreg	equ	0xFE8
   562                           postdec1	equ	0xFE5
   563                           fsr1l	equ	0xFE1
   564                           
   565                           	psect	bssBANK0
   566  000060                     __pbssBANK0:
   567                           	opt stack 0
   568  000060                     _array_contrasenia_ingresada:
   569                           	opt stack 0
   570  000060                     	ds	8
   571  000068                     _Rtcc_read_TimeDate:
   572                           	opt stack 0
   573  000068                     	ds	8
   574  000070                     _RtccAlrmTimeDate:
   575                           	opt stack 0
   576  000070                     	ds	8
   577  000078                     _RtccTimeDate:
   578                           	opt stack 0
   579  000078                     	ds	8
   580  000080                     _RtccTimeVal:
   581                           	opt stack 0
   582  000080                     	ds	4
   583  000084                     _buffer2:
   584                           	opt stack 0
   585  000084                     	ds	20
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           postinc0	equ	0xFEE
   591                           wreg	equ	0xFE8
   592                           postdec1	equ	0xFE5
   593                           fsr1l	equ	0xFE1
   594                           
   595                           	psect	dataBANK0
   596  000098                     __pdataBANK0:
   597                           	opt stack 0
   598  000098                     _array_seleccionar:
   599                           	opt stack 0
   600  000098                     	ds	12
   601  0000A4                     _array_contrasenia:
   602                           	opt stack 0
   603  0000A4                     	ds	8
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           postdec1	equ	0xFE5
   611                           fsr1l	equ	0xFE1
   612                           
   613                           	psect	cstackCOMRAM
   614  000001                     __pcstackCOMRAM:
   615                           	opt stack 0
   616  000001                     ??_isdigit:
   617  000001                     ??_lcd_send_nibble:
   618  000001                     ?___wmul:
   619                           	opt stack 0
   620  000001                     ?___awdiv:
   621                           	opt stack 0
   622  000001                     ?___lwdiv:
   623                           	opt stack 0
   624  000001                     Delay100TCYx@unit:
   625                           	opt stack 0
   626  000001                     Delay1KTCYx@unit:
   627                           	opt stack 0
   628  000001                     RtccReadDate@pDt:
   629                           	opt stack 0
   630  000001                     RtccReadTime@pTm:
   631                           	opt stack 0
   632  000001                     RtccWriteDate@pDt:
   633                           	opt stack 0
   634  000001                     RtccWriteTime@pTm:
   635                           	opt stack 0
   636  000001                     ___wmul@multiplier:
   637                           	opt stack 0
   638  000001                     ___awdiv@dividend:
   639                           	opt stack 0
   640  000001                     ___lwdiv@dividend:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x0
   644  000001                     	ds	1
   645  000002                     lcd_send_nibble@nibble:
   646                           	opt stack 0
   647  000002                     _isdigit$1788:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x1
   651  000002                     	ds	1
   652  000003                     lcd_send_byte@n:
   653                           	opt stack 0
   654  000003                     RtccWriteDate@di:
   655                           	opt stack 0
   656  000003                     RtccWriteTime@di:
   657                           	opt stack 0
   658  000003                     isdigit@c:
   659                           	opt stack 0
   660  000003                     ___wmul@multiplicand:
   661                           	opt stack 0
   662  000003                     ___awdiv@divisor:
   663                           	opt stack 0
   664  000003                     ___lwdiv@divisor:
   665                           	opt stack 0
   666  000003                     RtccReadDate@rTD1:
   667                           	opt stack 0
   668  000003                     RtccReadTime@rTD1:
   669                           	opt stack 0
   670                           
   671                           ; 8 bytes @ 0x2
   672  000003                     	ds	1
   673  000004                     lcd_send_byte@address:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x3
   677  000004                     	ds	1
   678  000005                     lcd_init@i:
   679                           	opt stack 0
   680  000005                     lcd_gotoxy@y:
   681                           	opt stack 0
   682  000005                     lcd_comand@d:
   683                           	opt stack 0
   684  000005                     RtccWriteDate@wasOn:
   685                           	opt stack 0
   686  000005                     RtccWriteTime@wasOn:
   687                           	opt stack 0
   688  000005                     ___awdiv@counter:
   689                           	opt stack 0
   690  000005                     ___wmul@product:
   691                           	opt stack 0
   692  000005                     ___lwdiv@quotient:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x4
   696  000005                     	ds	1
   697  000006                     lcd_gotoxy@x:
   698                           	opt stack 0
   699  000006                     RtccWriteDate@wasAlrm:
   700                           	opt stack 0
   701  000006                     RtccWriteTime@wasAlrm:
   702                           	opt stack 0
   703  000006                     ___awdiv@sign:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x5
   707  000006                     	ds	1
   708  000007                     lcd_gotoxy@address:
   709                           	opt stack 0
   710  000007                     RtccWriteTime@wasWrEn:
   711                           	opt stack 0
   712  000007                     ___lwdiv@counter:
   713                           	opt stack 0
   714  000007                     RtccWriteDate@tempYear:
   715                           	opt stack 0
   716  000007                     ___awdiv@quotient:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x6
   720  000007                     	ds	1
   721  000008                     ?___lwmod:
   722                           	opt stack 0
   723  000008                     lcd_putc@c:
   724                           	opt stack 0
   725  000008                     RtccWriteTime@tempMinSec:
   726                           	opt stack 0
   727  000008                     ___lwmod@dividend:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x7
   731  000008                     	ds	1
   732  000009                     RtccWriteDate@wasWrEn:
   733                           	opt stack 0
   734  000009                     lcd_putrs@ptr:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x8
   738  000009                     	ds	1
   739  00000A                     RtccWriteDate@tempDayMonth:
   740                           	opt stack 0
   741  00000A                     RtccWriteTime@tempHourWDay:
   742                           	opt stack 0
   743  00000A                     ___lwmod@divisor:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x9
   747  00000A                     	ds	1
   748  00000B                     ??_titila_texto_insert_password:
   749  00000B                     RtccReadDate@rTD0:
   750                           	opt stack 0
   751  00000B                     RtccReadTime@rTD0:
   752                           	opt stack 0
   753                           
   754                           ; 8 bytes @ 0xA
   755  00000B                     	ds	1
   756  00000C                     ___lwmod@counter:
   757                           	opt stack 0
   758  00000C                     RtccWriteDate@tempHourWDay:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0xB
   762  00000C                     	ds	1
   763  00000D                     ?_sprintf:
   764                           	opt stack 0
   765  00000D                     sprintf@sp:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0xC
   769  00000D                     	ds	1
   770  00000E                     
   771                           ; 1 bytes @ 0xD
   772  00000E                     	ds	1
   773  00000F                     sprintf@f:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0xE
   777  00000F                     	ds	4
   778  000013                     
   779                           ; 1 bytes @ 0x12
   780  000013                     	ds	4
   781  000017                     ??_sprintf:
   782                           
   783                           ; 1 bytes @ 0x16
   784  000017                     	ds	4
   785  00001B                     sprintf@flag:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x1A
   789  00001B                     	ds	1
   790  00001C                     sprintf@val:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x1B
   794  00001C                     	ds	2
   795  00001E                     sprintf@prec:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x1D
   799  00001E                     	ds	1
   800  00001F                     sprintf@ap:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x1E
   804  00001F                     	ds	2
   805  000021                     sprintf@cp:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x20
   809  000021                     	ds	2
   810  000023                     sprintf@len:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x22
   814  000023                     	ds	2
   815  000025                     sprintf@width:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x24
   819  000025                     	ds	2
   820  000027                     sprintf@c:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x26
   824  000027                     	ds	1
   825  000028                     ingreso_numero@num:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x27
   829  000028                     	ds	2
   830  00002A                     ??_ingreso_numero:
   831                           
   832                           ; 1 bytes @ 0x29
   833  00002A                     	ds	1
   834  00002B                     ??_guarda_numero_ingresado:
   835                           
   836                           ; 1 bytes @ 0x2A
   837  00002B                     	ds	2
   838  00002D                     ??_main:
   839                           
   840                           ; 1 bytes @ 0x2C
   841  00002D                     	ds	1
   842  00002E                     main@boton_centro_estado:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x2D
   846  00002E                     	ds	2
   847  000030                     main@boton_seleccionar:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x2F
   851  000030                     	ds	2
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1l	equ	0xFE1
   860                           
   861 ;;
   862 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   863 ;;
   864 ;; *************** function _main *****************
   865 ;; Defined at:
   866 ;;		line 264 in file "main.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  boton_selecc    2   47[COMRAM] int 
   871 ;;  boton_centro    2   45[COMRAM] int 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2  226[None  ] int 
   874 ;; Registers used:
   875 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   882 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   885 ;;Total ram usage:        5 bytes
   886 ;; Hardware stack levels required when called:    9
   887 ;; This function calls:
   888 ;;		_Read_RTC
   889 ;;		_Write_RTC
   890 ;;		_lcd_comand
   891 ;;		_lcd_gotoxy
   892 ;;		_lcd_putrs
   893 ;;		_setRelojDigital
   894 ;;		_setup
   895 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
   896 ;;		_sprintf
   897 ;;		_titila_texto_insert_password
   898 ;; This function is called by:
   899 ;;		Startup code after reset
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text0
   904  000F8E                     __ptext0:
   905                           	opt stack 0
   906  000F8E                     _main:
   907                           	opt stack 22
   908                           
   909                           ;main.c: 265: setup();
   910                           
   911                           ;incstack = 0
   912  000F8E  EC44  F011         	call	_setup	;wreg free
   913                           
   914                           ;main.c: 276: int boton_seleccionar = 0;
   915  000F92  0E00               	movlw	0
   916  000F94  6E31               	movwf	main@boton_seleccionar+1,c
   917  000F96  0E00               	movlw	0
   918  000F98  6E30               	movwf	main@boton_seleccionar,c
   919                           
   920                           ;main.c: 277: int boton_centro_estado = 0;
   921  000F9A  0E00               	movlw	0
   922  000F9C  6E2F               	movwf	main@boton_centro_estado+1,c
   923  000F9E  0E00               	movlw	0
   924  000FA0  6E2E               	movwf	main@boton_centro_estado,c
   925  000FA2                     
   926                           ;main.c: 281: lcd_comand(0b00000010);
   927  000FA2  0E02               	movlw	2
   928  000FA4  EC1E  F012         	call	_lcd_comand
   929                           
   930                           ;main.c: 282: LATBbits.LATB1 = !LATBbits.LATB1;;
   931  000FA8  B28A               	btfsc	3978,1,c	;volatile
   932  000FAA  D003               	goto	u3240
   933  000FAC  6A2D               	clrf	??_main& (0+255),c
   934  000FAE  2A2D               	incf	??_main& (0+255),f,c
   935  000FB0  D001               	goto	u3258
   936  000FB2                     u3240:
   937  000FB2  6A2D               	clrf	??_main& (0+255),c
   938  000FB4                     u3258:
   939  000FB4  462D               	rlncf	??_main,f,c
   940  000FB6  508A               	movf	3978,w,c	;volatile
   941  000FB8  182D               	xorwf	??_main,w,c
   942  000FBA  0BFD               	andlw	-3
   943  000FBC  182D               	xorwf	??_main,w,c
   944  000FBE  6E8A               	movwf	3978,c	;volatile
   945                           
   946                           ;main.c: 283: LATBbits.LATB0 = !LATBbits.LATB0;
   947  000FC0  B08A               	btfsc	3978,0,c	;volatile
   948  000FC2  D003               	goto	u3260
   949  000FC4  6A2D               	clrf	??_main& (0+255),c
   950  000FC6  2A2D               	incf	??_main& (0+255),f,c
   951  000FC8  D001               	goto	u3278
   952  000FCA                     u3260:
   953  000FCA  6A2D               	clrf	??_main& (0+255),c
   954  000FCC                     u3278:
   955  000FCC  508A               	movf	3978,w,c	;volatile
   956  000FCE  182D               	xorwf	??_main,w,c
   957  000FD0  0BFE               	andlw	-2
   958  000FD2  182D               	xorwf	??_main,w,c
   959  000FD4  6E8A               	movwf	3978,c	;volatile
   960                           
   961                           ;main.c: 284: _delay((unsigned long)((98)*(8000000/4000.0)));
   962  000FD6  0EFF               	movlw	255
   963  000FD8  6E2D               	movwf	??_main& (0+255),c
   964  000FDA  0E8A               	movlw	138
   965  000FDC                     u3857:
   966  000FDC  2EE8               	decfsz	wreg,f,c
   967  000FDE  D7FE               	bra	u3857
   968  000FE0  2E2D               	decfsz	??_main& (0+255),f,c
   969  000FE2  D7FC               	bra	u3857
   970  000FE4  D000               	nop2	
   971                           
   972                           ;main.c: 286: Read_RTC();
   973  000FE6  ECA6  F00D         	call	_Read_RTC	;wreg free
   974                           
   975                           ;main.c: 291: titila_texto_insert_password();
   976  000FEA  EC24  F00E         	call	_titila_texto_insert_password	;wreg free
   977                           
   978                           ;main.c: 292: si_apreta_numero_va_a_pantalla_contrasenia();
   979  000FEE  ECB7  F00E         	call	_si_apreta_numero_va_a_pantalla_contrasenia	;wreg free
   980                           
   981                           ;main.c: 294: if (boton_centro_estado == 1) {
   982  000FF2  042E               	decf	main@boton_centro_estado,w,c
   983  000FF4  102F               	iorwf	main@boton_centro_estado+1,w,c
   984  000FF6  A4D8               	btfss	status,2,c
   985  000FF8  D1A5               	goto	l319
   986                           
   987                           ;main.c: 296: if (PORTAbits.RA2 == 0) {
   988  000FFA  B480               	btfsc	3968,2,c	;volatile
   989  000FFC  D00E               	goto	u3310
   990                           
   991                           ;main.c: 297: if (boton_seleccionar == 7) {
   992  000FFE  0E07               	movlw	7
   993  001000  1830               	xorwf	main@boton_seleccionar,w,c
   994  001002  1031               	iorwf	main@boton_seleccionar+1,w,c
   995  001004  A4D8               	btfss	status,2,c
   996  001006  D005               	goto	l230
   997                           
   998                           ;main.c: 298: boton_seleccionar = 0;
   999  001008  0E00               	movlw	0
  1000  00100A  6E31               	movwf	main@boton_seleccionar+1,c
  1001  00100C  0E00               	movlw	0
  1002  00100E  6E30               	movwf	main@boton_seleccionar,c
  1003                           
  1004                           ;main.c: 299: } else {
  1005  001010  D002               	goto	l231
  1006  001012                     l230:
  1007                           
  1008                           ;main.c: 300: boton_seleccionar++;
  1009  001012  4A30               	infsnz	main@boton_seleccionar,f,c
  1010  001014  2A31               	incf	main@boton_seleccionar+1,f,c
  1011  001016                     l231:
  1012                           
  1013                           ;main.c: 301: }
  1014                           ;main.c: 302: while (PORTAbits.RA2 == 0);
  1015  001016  A480               	btfss	3968,2,c	;volatile
  1016  001018  D7FE               	goto	l231
  1017  00101A                     u3310:
  1018                           
  1019                           ;main.c: 303: }
  1020                           ;main.c: 305: if (PORTAbits.RA7 == 0) {
  1021  00101A  BE80               	btfsc	3968,7,c	;volatile
  1022  00101C  D00E               	goto	u3340
  1023                           
  1024                           ;main.c: 306: if (boton_seleccionar == 0) {
  1025  00101E  5030               	movf	main@boton_seleccionar,w,c
  1026  001020  1031               	iorwf	main@boton_seleccionar+1,w,c
  1027  001022  A4D8               	btfss	status,2,c
  1028  001024  D005               	goto	l236
  1029                           
  1030                           ;main.c: 307: boton_seleccionar = 7;
  1031  001026  0E00               	movlw	0
  1032  001028  6E31               	movwf	main@boton_seleccionar+1,c
  1033  00102A  0E07               	movlw	7
  1034  00102C  6E30               	movwf	main@boton_seleccionar,c
  1035                           
  1036                           ;main.c: 308: } else {
  1037  00102E  D003               	goto	l237
  1038  001030                     l236:
  1039                           
  1040                           ;main.c: 309: boton_seleccionar--;
  1041  001030  0630               	decf	main@boton_seleccionar,f,c
  1042  001032  A0D8               	btfss	status,0,c
  1043  001034  0631               	decf	main@boton_seleccionar+1,f,c
  1044  001036                     l237:
  1045                           
  1046                           ;main.c: 310: }
  1047                           ;main.c: 311: while (PORTAbits.RA7 == 0);
  1048  001036  AE80               	btfss	3968,7,c	;volatile
  1049  001038  D7FE               	goto	l237
  1050  00103A                     u3340:
  1051                           
  1052                           ;main.c: 312: }
  1053                           ;main.c: 314: sprintf(buffer2, "%s", array_seleccionar[boton_seleccionar]);
  1054  00103A  0E84               	movlw	low _buffer2
  1055  00103C  6E0D               	movwf	sprintf@sp,c
  1056  00103E  0E00               	movlw	high _buffer2
  1057  001040  6E0E               	movwf	sprintf@sp+1,c
  1058  001042  0E89               	movlw	low STR_16
  1059  001044  6E0F               	movwf	sprintf@f,c
  1060  001046  0E0F               	movlw	high STR_16
  1061  001048  6E10               	movwf	sprintf@f+1,c
  1062  00104A  90D8               	bcf	status,0,c
  1063  00104C  3430               	rlcf	main@boton_seleccionar,w,c
  1064  00104E  6ED9               	movwf	fsr2l,c
  1065  001050  3431               	rlcf	main@boton_seleccionar+1,w,c
  1066  001052  6EDA               	movwf	fsr2h,c
  1067  001054  0E98               	movlw	low _array_seleccionar
  1068  001056  26D9               	addwf	fsr2l,f,c
  1069  001058  0E00               	movlw	high _array_seleccionar
  1070  00105A  22DA               	addwfc	fsr2h,f,c
  1071  00105C  CFDE F011          	movff	postinc2,?_sprintf+4
  1072  001060  CFDD F012          	movff	postdec2,?_sprintf+5
  1073  001064  ECAD  F009         	call	_sprintf	;wreg free
  1074                           
  1075                           ;main.c: 315: lcd_gotoxy(13, 2);
  1076  001068  0E02               	movlw	2
  1077  00106A  6E05               	movwf	lcd_gotoxy@y,c
  1078  00106C  0E0D               	movlw	13
  1079  00106E  ECDB  F011         	call	_lcd_gotoxy
  1080                           
  1081                           ;main.c: 316: lcd_putrs(buffer2);
  1082  001072  0E84               	movlw	low _buffer2
  1083  001074  6E09               	movwf	lcd_putrs@ptr,c
  1084  001076  0E00               	movlw	high _buffer2
  1085  001078  6E0A               	movwf	lcd_putrs@ptr+1,c
  1086  00107A  EC1B  F011         	call	_lcd_putrs	;wreg free
  1087                           
  1088                           ;main.c: 319: if (boton_seleccionar == 0) {
  1089  00107E  5030               	movf	main@boton_seleccionar,w,c
  1090  001080  1031               	iorwf	main@boton_seleccionar+1,w,c
  1091  001082  A4D8               	btfss	status,2,c
  1092  001084  D028               	goto	u3410
  1093                           
  1094                           ;main.c: 321: if (PORTAbits.RA3 == 0) {
  1095  001086  B680               	btfsc	3968,3,c	;volatile
  1096  001088  D012               	goto	u3380
  1097                           
  1098                           ;main.c: 322: if (diasem == 6) {
  1099  00108A  0E06               	movlw	6
  1100  00108C  1853               	xorwf	_diasem,w,c
  1101  00108E  1054               	iorwf	_diasem+1,w,c
  1102  001090  A4D8               	btfss	status,2,c
  1103  001092  D007               	goto	l243
  1104                           
  1105                           ;main.c: 323: diasem = 0;
  1106  001094  0E00               	movlw	0
  1107  001096  6E54               	movwf	_diasem+1,c
  1108  001098  0E00               	movlw	0
  1109  00109A  6E53               	movwf	_diasem,c
  1110                           
  1111                           ;main.c: 324: Write_RTC();
  1112  00109C  EC3F  F00B         	call	_Write_RTC	;wreg free
  1113                           
  1114                           ;main.c: 325: } else {
  1115  0010A0  D004               	goto	l244
  1116  0010A2                     l243:
  1117                           
  1118                           ;main.c: 326: diasem++;
  1119  0010A2  4A53               	infsnz	_diasem,f,c
  1120  0010A4  2A54               	incf	_diasem+1,f,c
  1121                           
  1122                           ;main.c: 327: Write_RTC();
  1123  0010A6  EC3F  F00B         	call	_Write_RTC	;wreg free
  1124  0010AA                     l244:
  1125                           
  1126                           ;main.c: 328: }
  1127                           ;main.c: 329: while (PORTAbits.RA3 == 0);
  1128  0010AA  A680               	btfss	3968,3,c	;volatile
  1129  0010AC  D7FE               	goto	l244
  1130  0010AE                     u3380:
  1131                           
  1132                           ;main.c: 330: }
  1133                           ;main.c: 332: if (PORTAbits.RA6 == 0) {
  1134  0010AE  BC80               	btfsc	3968,6,c	;volatile
  1135  0010B0  D012               	goto	u3410
  1136                           
  1137                           ;main.c: 333: if (diasem == 0) {
  1138  0010B2  5053               	movf	_diasem,w,c
  1139  0010B4  1054               	iorwf	_diasem+1,w,c
  1140  0010B6  A4D8               	btfss	status,2,c
  1141  0010B8  D007               	goto	l249
  1142                           
  1143                           ;main.c: 334: diasem = 6;
  1144  0010BA  0E00               	movlw	0
  1145  0010BC  6E54               	movwf	_diasem+1,c
  1146  0010BE  0E06               	movlw	6
  1147  0010C0  6E53               	movwf	_diasem,c
  1148                           
  1149                           ;main.c: 335: Write_RTC();
  1150  0010C2  EC3F  F00B         	call	_Write_RTC	;wreg free
  1151                           
  1152                           ;main.c: 336: } else {
  1153  0010C6  D005               	goto	l250
  1154  0010C8                     l249:
  1155                           
  1156                           ;main.c: 337: diasem--;
  1157  0010C8  0653               	decf	_diasem,f,c
  1158  0010CA  A0D8               	btfss	status,0,c
  1159  0010CC  0654               	decf	_diasem+1,f,c
  1160                           
  1161                           ;main.c: 338: Write_RTC();
  1162  0010CE  EC3F  F00B         	call	_Write_RTC	;wreg free
  1163  0010D2                     l250:
  1164                           
  1165                           ;main.c: 339: }
  1166                           ;main.c: 340: while (PORTAbits.RA6 == 0);
  1167  0010D2  AC80               	btfss	3968,6,c	;volatile
  1168  0010D4  D7FE               	goto	l250
  1169  0010D6                     u3410:
  1170                           
  1171                           ;main.c: 341: }
  1172                           ;main.c: 342: }
  1173                           ;main.c: 345: if (boton_seleccionar == 1) {
  1174  0010D6  0430               	decf	main@boton_seleccionar,w,c
  1175  0010D8  1031               	iorwf	main@boton_seleccionar+1,w,c
  1176  0010DA  A4D8               	btfss	status,2,c
  1177  0010DC  D02F               	goto	l254
  1178                           
  1179                           ;main.c: 347: if (PORTAbits.RA3 == 0) {
  1180  0010DE  B680               	btfsc	3968,3,c	;volatile
  1181  0010E0  D012               	goto	u3450
  1182                           
  1183                           ;main.c: 348: if (dia == 31) {
  1184  0010E2  0E1F               	movlw	31
  1185  0010E4  1851               	xorwf	_dia,w,c
  1186  0010E6  1052               	iorwf	_dia+1,w,c
  1187  0010E8  A4D8               	btfss	status,2,c
  1188  0010EA  D007               	goto	l256
  1189                           
  1190                           ;main.c: 349: dia = 1;
  1191  0010EC  0E00               	movlw	0
  1192  0010EE  6E52               	movwf	_dia+1,c
  1193  0010F0  0E01               	movlw	1
  1194  0010F2  6E51               	movwf	_dia,c
  1195                           
  1196                           ;main.c: 350: Write_RTC();
  1197  0010F4  EC3F  F00B         	call	_Write_RTC	;wreg free
  1198                           
  1199                           ;main.c: 351: } else {
  1200  0010F8  D004               	goto	l257
  1201  0010FA                     l256:
  1202                           
  1203                           ;main.c: 352: dia++;
  1204  0010FA  4A51               	infsnz	_dia,f,c
  1205  0010FC  2A52               	incf	_dia+1,f,c
  1206                           
  1207                           ;main.c: 353: Write_RTC();
  1208  0010FE  EC3F  F00B         	call	_Write_RTC	;wreg free
  1209  001102                     l257:
  1210                           
  1211                           ;main.c: 354: }
  1212                           ;main.c: 355: while (PORTAbits.RA3 == 0);
  1213  001102  A680               	btfss	3968,3,c	;volatile
  1214  001104  D7FE               	goto	l257
  1215  001106                     u3450:
  1216                           
  1217                           ;main.c: 356: }
  1218                           ;main.c: 358: if (PORTAbits.RA6 == 0) {
  1219  001106  BC80               	btfsc	3968,6,c	;volatile
  1220  001108  D012               	goto	u3480
  1221                           
  1222                           ;main.c: 359: if (dia == 1) {
  1223  00110A  0451               	decf	_dia,w,c
  1224  00110C  1052               	iorwf	_dia+1,w,c
  1225  00110E  A4D8               	btfss	status,2,c
  1226  001110  D007               	goto	l262
  1227                           
  1228                           ;main.c: 360: dia = 31;
  1229  001112  0E00               	movlw	0
  1230  001114  6E52               	movwf	_dia+1,c
  1231  001116  0E1F               	movlw	31
  1232  001118  6E51               	movwf	_dia,c
  1233                           
  1234                           ;main.c: 361: Write_RTC();
  1235  00111A  EC3F  F00B         	call	_Write_RTC	;wreg free
  1236                           
  1237                           ;main.c: 362: } else {
  1238  00111E  D005               	goto	l263
  1239  001120                     l262:
  1240                           
  1241                           ;main.c: 363: dia--;
  1242  001120  0651               	decf	_dia,f,c
  1243  001122  A0D8               	btfss	status,0,c
  1244  001124  0652               	decf	_dia+1,f,c
  1245                           
  1246                           ;main.c: 364: Write_RTC();
  1247  001126  EC3F  F00B         	call	_Write_RTC	;wreg free
  1248  00112A                     l263:
  1249                           
  1250                           ;main.c: 365: }
  1251                           ;main.c: 366: while (PORTAbits.RA6 == 0);
  1252  00112A  AC80               	btfss	3968,6,c	;volatile
  1253  00112C  D7FE               	goto	l263
  1254  00112E                     u3480:
  1255                           
  1256                           ;main.c: 367: }
  1257                           ;main.c: 369: _delay((unsigned long)((50)*(8000000/4000.0)));
  1258  00112E  0E82               	movlw	130
  1259  001130  6E2D               	movwf	??_main& (0+255),c
  1260  001132  0EDE               	movlw	222
  1261  001134                     u3867:
  1262  001134  2EE8               	decfsz	wreg,f,c
  1263  001136  D7FE               	bra	u3867
  1264  001138  2E2D               	decfsz	??_main& (0+255),f,c
  1265  00113A  D7FC               	bra	u3867
  1266  00113C                     l254:
  1267                           
  1268                           ;main.c: 370: }
  1269                           ;main.c: 373: if (boton_seleccionar == 2) {
  1270  00113C  0E02               	movlw	2
  1271  00113E  1830               	xorwf	main@boton_seleccionar,w,c
  1272  001140  1031               	iorwf	main@boton_seleccionar+1,w,c
  1273  001142  A4D8               	btfss	status,2,c
  1274  001144  D02F               	goto	l267
  1275                           
  1276                           ;main.c: 375: if (PORTAbits.RA3 == 0) {
  1277  001146  B680               	btfsc	3968,3,c	;volatile
  1278  001148  D012               	goto	u3520
  1279                           
  1280                           ;main.c: 376: if (mes == 12) {
  1281  00114A  0E0C               	movlw	12
  1282  00114C  1855               	xorwf	_mes,w,c
  1283  00114E  1056               	iorwf	_mes+1,w,c
  1284  001150  A4D8               	btfss	status,2,c
  1285  001152  D007               	goto	l269
  1286                           
  1287                           ;main.c: 377: mes = 1;
  1288  001154  0E00               	movlw	0
  1289  001156  6E56               	movwf	_mes+1,c
  1290  001158  0E01               	movlw	1
  1291  00115A  6E55               	movwf	_mes,c
  1292                           
  1293                           ;main.c: 378: Write_RTC();
  1294  00115C  EC3F  F00B         	call	_Write_RTC	;wreg free
  1295                           
  1296                           ;main.c: 379: } else {
  1297  001160  D004               	goto	l270
  1298  001162                     l269:
  1299                           
  1300                           ;main.c: 380: mes++;
  1301  001162  4A55               	infsnz	_mes,f,c
  1302  001164  2A56               	incf	_mes+1,f,c
  1303                           
  1304                           ;main.c: 381: Write_RTC();
  1305  001166  EC3F  F00B         	call	_Write_RTC	;wreg free
  1306  00116A                     l270:
  1307                           
  1308                           ;main.c: 382: }
  1309                           ;main.c: 383: while (PORTAbits.RA3 == 0);
  1310  00116A  A680               	btfss	3968,3,c	;volatile
  1311  00116C  D7FE               	goto	l270
  1312  00116E                     u3520:
  1313                           
  1314                           ;main.c: 384: }
  1315                           ;main.c: 386: if (PORTAbits.RA6 == 0) {
  1316  00116E  BC80               	btfsc	3968,6,c	;volatile
  1317  001170  D012               	goto	u3550
  1318                           
  1319                           ;main.c: 387: if (mes == 1) {
  1320  001172  0455               	decf	_mes,w,c
  1321  001174  1056               	iorwf	_mes+1,w,c
  1322  001176  A4D8               	btfss	status,2,c
  1323  001178  D007               	goto	l275
  1324                           
  1325                           ;main.c: 388: mes = 12;
  1326  00117A  0E00               	movlw	0
  1327  00117C  6E56               	movwf	_mes+1,c
  1328  00117E  0E0C               	movlw	12
  1329  001180  6E55               	movwf	_mes,c
  1330                           
  1331                           ;main.c: 389: Write_RTC();
  1332  001182  EC3F  F00B         	call	_Write_RTC	;wreg free
  1333                           
  1334                           ;main.c: 390: } else {
  1335  001186  D005               	goto	l276
  1336  001188                     l275:
  1337                           
  1338                           ;main.c: 391: mes--;
  1339  001188  0655               	decf	_mes,f,c
  1340  00118A  A0D8               	btfss	status,0,c
  1341  00118C  0656               	decf	_mes+1,f,c
  1342                           
  1343                           ;main.c: 392: Write_RTC();
  1344  00118E  EC3F  F00B         	call	_Write_RTC	;wreg free
  1345  001192                     l276:
  1346                           
  1347                           ;main.c: 393: }
  1348                           ;main.c: 394: while (PORTAbits.RA6 == 0);
  1349  001192  AC80               	btfss	3968,6,c	;volatile
  1350  001194  D7FE               	goto	l276
  1351  001196                     u3550:
  1352                           
  1353                           ;main.c: 395: }
  1354                           ;main.c: 397: _delay((unsigned long)((50)*(8000000/4000.0)));
  1355  001196  0E82               	movlw	130
  1356  001198  6E2D               	movwf	??_main& (0+255),c
  1357  00119A  0EDE               	movlw	222
  1358  00119C                     u3877:
  1359  00119C  2EE8               	decfsz	wreg,f,c
  1360  00119E  D7FE               	bra	u3877
  1361  0011A0  2E2D               	decfsz	??_main& (0+255),f,c
  1362  0011A2  D7FC               	bra	u3877
  1363  0011A4                     l267:
  1364                           
  1365                           ;main.c: 398: }
  1366                           ;main.c: 401: if (boton_seleccionar == 3) {
  1367  0011A4  0E03               	movlw	3
  1368  0011A6  1830               	xorwf	main@boton_seleccionar,w,c
  1369  0011A8  1031               	iorwf	main@boton_seleccionar+1,w,c
  1370  0011AA  A4D8               	btfss	status,2,c
  1371  0011AC  D02F               	goto	l280
  1372                           
  1373                           ;main.c: 403: if (PORTAbits.RA3 == 0) {
  1374  0011AE  B680               	btfsc	3968,3,c	;volatile
  1375  0011B0  D012               	goto	u3590
  1376                           
  1377                           ;main.c: 404: if (anio == 99) {
  1378  0011B2  0E63               	movlw	99
  1379  0011B4  1857               	xorwf	_anio,w,c
  1380  0011B6  1058               	iorwf	_anio+1,w,c
  1381  0011B8  A4D8               	btfss	status,2,c
  1382  0011BA  D007               	goto	l282
  1383                           
  1384                           ;main.c: 405: anio = 0;
  1385  0011BC  0E00               	movlw	0
  1386  0011BE  6E58               	movwf	_anio+1,c
  1387  0011C0  0E00               	movlw	0
  1388  0011C2  6E57               	movwf	_anio,c
  1389                           
  1390                           ;main.c: 406: Write_RTC();
  1391  0011C4  EC3F  F00B         	call	_Write_RTC	;wreg free
  1392                           
  1393                           ;main.c: 407: } else {
  1394  0011C8  D004               	goto	l283
  1395  0011CA                     l282:
  1396                           
  1397                           ;main.c: 408: anio++;
  1398  0011CA  4A57               	infsnz	_anio,f,c
  1399  0011CC  2A58               	incf	_anio+1,f,c
  1400                           
  1401                           ;main.c: 409: Write_RTC();
  1402  0011CE  EC3F  F00B         	call	_Write_RTC	;wreg free
  1403  0011D2                     l283:
  1404                           
  1405                           ;main.c: 410: }
  1406                           ;main.c: 411: while (PORTAbits.RA3 == 0);
  1407  0011D2  A680               	btfss	3968,3,c	;volatile
  1408  0011D4  D7FE               	goto	l283
  1409  0011D6                     u3590:
  1410                           
  1411                           ;main.c: 412: }
  1412                           ;main.c: 414: if (PORTAbits.RA6 == 0) {
  1413  0011D6  BC80               	btfsc	3968,6,c	;volatile
  1414  0011D8  D012               	goto	u3620
  1415                           
  1416                           ;main.c: 415: if (anio == 0) {
  1417  0011DA  5057               	movf	_anio,w,c
  1418  0011DC  1058               	iorwf	_anio+1,w,c
  1419  0011DE  A4D8               	btfss	status,2,c
  1420  0011E0  D007               	goto	l288
  1421                           
  1422                           ;main.c: 416: anio = 99;
  1423  0011E2  0E00               	movlw	0
  1424  0011E4  6E58               	movwf	_anio+1,c
  1425  0011E6  0E63               	movlw	99
  1426  0011E8  6E57               	movwf	_anio,c
  1427                           
  1428                           ;main.c: 417: Write_RTC();
  1429  0011EA  EC3F  F00B         	call	_Write_RTC	;wreg free
  1430                           
  1431                           ;main.c: 418: } else {
  1432  0011EE  D005               	goto	l289
  1433  0011F0                     l288:
  1434                           
  1435                           ;main.c: 419: anio--;
  1436  0011F0  0657               	decf	_anio,f,c
  1437  0011F2  A0D8               	btfss	status,0,c
  1438  0011F4  0658               	decf	_anio+1,f,c
  1439                           
  1440                           ;main.c: 420: Write_RTC();
  1441  0011F6  EC3F  F00B         	call	_Write_RTC	;wreg free
  1442  0011FA                     l289:
  1443                           
  1444                           ;main.c: 421: }
  1445                           ;main.c: 422: while (PORTAbits.RA6 == 0);
  1446  0011FA  AC80               	btfss	3968,6,c	;volatile
  1447  0011FC  D7FE               	goto	l289
  1448  0011FE                     u3620:
  1449                           
  1450                           ;main.c: 423: }
  1451                           ;main.c: 425: _delay((unsigned long)((50)*(8000000/4000.0)));
  1452  0011FE  0E82               	movlw	130
  1453  001200  6E2D               	movwf	??_main& (0+255),c
  1454  001202  0EDE               	movlw	222
  1455  001204                     u3887:
  1456  001204  2EE8               	decfsz	wreg,f,c
  1457  001206  D7FE               	bra	u3887
  1458  001208  2E2D               	decfsz	??_main& (0+255),f,c
  1459  00120A  D7FC               	bra	u3887
  1460  00120C                     l280:
  1461                           
  1462                           ;main.c: 426: }
  1463                           ;main.c: 429: if (boton_seleccionar == 4) {
  1464  00120C  0E04               	movlw	4
  1465  00120E  1830               	xorwf	main@boton_seleccionar,w,c
  1466  001210  1031               	iorwf	main@boton_seleccionar+1,w,c
  1467  001212  A4D8               	btfss	status,2,c
  1468  001214  D02F               	goto	l293
  1469                           
  1470                           ;main.c: 431: if (PORTAbits.RA3 == 0) {
  1471  001216  B680               	btfsc	3968,3,c	;volatile
  1472  001218  D012               	goto	u3660
  1473                           
  1474                           ;main.c: 432: if (hora == 59) {
  1475  00121A  0E3B               	movlw	59
  1476  00121C  184F               	xorwf	_hora,w,c
  1477  00121E  1050               	iorwf	_hora+1,w,c
  1478  001220  A4D8               	btfss	status,2,c
  1479  001222  D007               	goto	l295
  1480                           
  1481                           ;main.c: 433: hora = 0;
  1482  001224  0E00               	movlw	0
  1483  001226  6E50               	movwf	_hora+1,c
  1484  001228  0E00               	movlw	0
  1485  00122A  6E4F               	movwf	_hora,c
  1486                           
  1487                           ;main.c: 434: Write_RTC();
  1488  00122C  EC3F  F00B         	call	_Write_RTC	;wreg free
  1489                           
  1490                           ;main.c: 435: } else {
  1491  001230  D004               	goto	l296
  1492  001232                     l295:
  1493                           
  1494                           ;main.c: 436: hora++;
  1495  001232  4A4F               	infsnz	_hora,f,c
  1496  001234  2A50               	incf	_hora+1,f,c
  1497                           
  1498                           ;main.c: 437: Write_RTC();
  1499  001236  EC3F  F00B         	call	_Write_RTC	;wreg free
  1500  00123A                     l296:
  1501                           
  1502                           ;main.c: 438: }
  1503                           ;main.c: 439: while (PORTAbits.RA3 == 0);
  1504  00123A  A680               	btfss	3968,3,c	;volatile
  1505  00123C  D7FE               	goto	l296
  1506  00123E                     u3660:
  1507                           
  1508                           ;main.c: 440: }
  1509                           ;main.c: 442: if (PORTAbits.RA6 == 0) {
  1510  00123E  BC80               	btfsc	3968,6,c	;volatile
  1511  001240  D012               	goto	u3690
  1512                           
  1513                           ;main.c: 443: if (hora == 0) {
  1514  001242  504F               	movf	_hora,w,c
  1515  001244  1050               	iorwf	_hora+1,w,c
  1516  001246  A4D8               	btfss	status,2,c
  1517  001248  D007               	goto	l301
  1518                           
  1519                           ;main.c: 444: hora = 59;
  1520  00124A  0E00               	movlw	0
  1521  00124C  6E50               	movwf	_hora+1,c
  1522  00124E  0E3B               	movlw	59
  1523  001250  6E4F               	movwf	_hora,c
  1524                           
  1525                           ;main.c: 445: Write_RTC();
  1526  001252  EC3F  F00B         	call	_Write_RTC	;wreg free
  1527                           
  1528                           ;main.c: 446: } else {
  1529  001256  D005               	goto	l302
  1530  001258                     l301:
  1531                           
  1532                           ;main.c: 447: hora--;
  1533  001258  064F               	decf	_hora,f,c
  1534  00125A  A0D8               	btfss	status,0,c
  1535  00125C  0650               	decf	_hora+1,f,c
  1536                           
  1537                           ;main.c: 448: Write_RTC();
  1538  00125E  EC3F  F00B         	call	_Write_RTC	;wreg free
  1539  001262                     l302:
  1540                           
  1541                           ;main.c: 449: }
  1542                           ;main.c: 450: while (PORTAbits.RA6 == 0);
  1543  001262  AC80               	btfss	3968,6,c	;volatile
  1544  001264  D7FE               	goto	l302
  1545  001266                     u3690:
  1546                           
  1547                           ;main.c: 451: }
  1548                           ;main.c: 453: _delay((unsigned long)((50)*(8000000/4000.0)));
  1549  001266  0E82               	movlw	130
  1550  001268  6E2D               	movwf	??_main& (0+255),c
  1551  00126A  0EDE               	movlw	222
  1552  00126C                     u3897:
  1553  00126C  2EE8               	decfsz	wreg,f,c
  1554  00126E  D7FE               	bra	u3897
  1555  001270  2E2D               	decfsz	??_main& (0+255),f,c
  1556  001272  D7FC               	bra	u3897
  1557  001274                     l293:
  1558                           
  1559                           ;main.c: 454: }
  1560                           ;main.c: 457: if (boton_seleccionar == 5) {
  1561  001274  0E05               	movlw	5
  1562  001276  1830               	xorwf	main@boton_seleccionar,w,c
  1563  001278  1031               	iorwf	main@boton_seleccionar+1,w,c
  1564  00127A  A4D8               	btfss	status,2,c
  1565  00127C  D02F               	goto	l306
  1566                           
  1567                           ;main.c: 459: if (PORTAbits.RA3 == 0) {
  1568  00127E  B680               	btfsc	3968,3,c	;volatile
  1569  001280  D012               	goto	u3730
  1570                           
  1571                           ;main.c: 460: if (minuto == 59) {
  1572  001282  0E3B               	movlw	59
  1573  001284  184D               	xorwf	_minuto,w,c
  1574  001286  104E               	iorwf	_minuto+1,w,c
  1575  001288  A4D8               	btfss	status,2,c
  1576  00128A  D007               	goto	l308
  1577                           
  1578                           ;main.c: 461: minuto = 0;
  1579  00128C  0E00               	movlw	0
  1580  00128E  6E4E               	movwf	_minuto+1,c
  1581  001290  0E00               	movlw	0
  1582  001292  6E4D               	movwf	_minuto,c
  1583                           
  1584                           ;main.c: 462: Write_RTC();
  1585  001294  EC3F  F00B         	call	_Write_RTC	;wreg free
  1586                           
  1587                           ;main.c: 463: } else {
  1588  001298  D004               	goto	l309
  1589  00129A                     l308:
  1590                           
  1591                           ;main.c: 464: minuto++;
  1592  00129A  4A4D               	infsnz	_minuto,f,c
  1593  00129C  2A4E               	incf	_minuto+1,f,c
  1594                           
  1595                           ;main.c: 465: Write_RTC();
  1596  00129E  EC3F  F00B         	call	_Write_RTC	;wreg free
  1597  0012A2                     l309:
  1598                           
  1599                           ;main.c: 466: }
  1600                           ;main.c: 467: while (PORTAbits.RA3 == 0);
  1601  0012A2  A680               	btfss	3968,3,c	;volatile
  1602  0012A4  D7FE               	goto	l309
  1603  0012A6                     u3730:
  1604                           
  1605                           ;main.c: 468: }
  1606                           ;main.c: 470: if (PORTAbits.RA6 == 0) {
  1607  0012A6  BC80               	btfsc	3968,6,c	;volatile
  1608  0012A8  D012               	goto	u3760
  1609                           
  1610                           ;main.c: 471: if (minuto == 0) {
  1611  0012AA  504D               	movf	_minuto,w,c
  1612  0012AC  104E               	iorwf	_minuto+1,w,c
  1613  0012AE  A4D8               	btfss	status,2,c
  1614  0012B0  D007               	goto	l314
  1615                           
  1616                           ;main.c: 472: minuto = 59;
  1617  0012B2  0E00               	movlw	0
  1618  0012B4  6E4E               	movwf	_minuto+1,c
  1619  0012B6  0E3B               	movlw	59
  1620  0012B8  6E4D               	movwf	_minuto,c
  1621                           
  1622                           ;main.c: 473: Write_RTC();
  1623  0012BA  EC3F  F00B         	call	_Write_RTC	;wreg free
  1624                           
  1625                           ;main.c: 474: } else {
  1626  0012BE  D005               	goto	l315
  1627  0012C0                     l314:
  1628                           
  1629                           ;main.c: 475: minuto--;
  1630  0012C0  064D               	decf	_minuto,f,c
  1631  0012C2  A0D8               	btfss	status,0,c
  1632  0012C4  064E               	decf	_minuto+1,f,c
  1633                           
  1634                           ;main.c: 476: Write_RTC();
  1635  0012C6  EC3F  F00B         	call	_Write_RTC	;wreg free
  1636  0012CA                     l315:
  1637                           
  1638                           ;main.c: 477: }
  1639                           ;main.c: 478: while (PORTAbits.RA6 == 0);
  1640  0012CA  AC80               	btfss	3968,6,c	;volatile
  1641  0012CC  D7FE               	goto	l315
  1642  0012CE                     u3760:
  1643                           
  1644                           ;main.c: 479: }
  1645                           ;main.c: 481: _delay((unsigned long)((50)*(8000000/4000.0)));
  1646  0012CE  0E82               	movlw	130
  1647  0012D0  6E2D               	movwf	??_main& (0+255),c
  1648  0012D2  0EDE               	movlw	222
  1649  0012D4                     u3907:
  1650  0012D4  2EE8               	decfsz	wreg,f,c
  1651  0012D6  D7FE               	bra	u3907
  1652  0012D8  2E2D               	decfsz	??_main& (0+255),f,c
  1653  0012DA  D7FC               	bra	u3907
  1654  0012DC                     l306:
  1655                           
  1656                           ;main.c: 482: }
  1657                           ;main.c: 485: if (boton_seleccionar == 6) {
  1658  0012DC  0E06               	movlw	6
  1659  0012DE  1830               	xorwf	main@boton_seleccionar,w,c
  1660  0012E0  1031               	iorwf	main@boton_seleccionar+1,w,c
  1661  0012E2  A4D8               	btfss	status,2,c
  1662  0012E4  D02F               	goto	l319
  1663                           
  1664                           ;main.c: 487: if (PORTAbits.RA3 == 0) {
  1665  0012E6  B680               	btfsc	3968,3,c	;volatile
  1666  0012E8  D012               	goto	u3800
  1667                           
  1668                           ;main.c: 488: if (segundo == 59) {
  1669  0012EA  0E3B               	movlw	59
  1670  0012EC  1836               	xorwf	_segundo,w,c
  1671  0012EE  1037               	iorwf	_segundo+1,w,c
  1672  0012F0  A4D8               	btfss	status,2,c
  1673  0012F2  D007               	goto	l321
  1674                           
  1675                           ;main.c: 489: segundo = 0;
  1676  0012F4  0E00               	movlw	0
  1677  0012F6  6E37               	movwf	_segundo+1,c
  1678  0012F8  0E00               	movlw	0
  1679  0012FA  6E36               	movwf	_segundo,c
  1680                           
  1681                           ;main.c: 490: Write_RTC();
  1682  0012FC  EC3F  F00B         	call	_Write_RTC	;wreg free
  1683                           
  1684                           ;main.c: 491: } else {
  1685  001300  D004               	goto	l322
  1686  001302                     l321:
  1687                           
  1688                           ;main.c: 492: segundo++;
  1689  001302  4A36               	infsnz	_segundo,f,c
  1690  001304  2A37               	incf	_segundo+1,f,c
  1691                           
  1692                           ;main.c: 493: Write_RTC();
  1693  001306  EC3F  F00B         	call	_Write_RTC	;wreg free
  1694  00130A                     l322:
  1695                           
  1696                           ;main.c: 494: }
  1697                           ;main.c: 495: while (PORTAbits.RA3 == 0);
  1698  00130A  A680               	btfss	3968,3,c	;volatile
  1699  00130C  D7FE               	goto	l322
  1700  00130E                     u3800:
  1701                           
  1702                           ;main.c: 496: }
  1703                           ;main.c: 498: if (PORTAbits.RA6 == 0) {
  1704  00130E  BC80               	btfsc	3968,6,c	;volatile
  1705  001310  D012               	goto	u3830
  1706                           
  1707                           ;main.c: 499: if (segundo == 0) {
  1708  001312  5036               	movf	_segundo,w,c
  1709  001314  1037               	iorwf	_segundo+1,w,c
  1710  001316  A4D8               	btfss	status,2,c
  1711  001318  D007               	goto	l327
  1712                           
  1713                           ;main.c: 500: segundo = 59;
  1714  00131A  0E00               	movlw	0
  1715  00131C  6E37               	movwf	_segundo+1,c
  1716  00131E  0E3B               	movlw	59
  1717  001320  6E36               	movwf	_segundo,c
  1718                           
  1719                           ;main.c: 501: Write_RTC();
  1720  001322  EC3F  F00B         	call	_Write_RTC	;wreg free
  1721                           
  1722                           ;main.c: 502: } else {
  1723  001326  D005               	goto	l328
  1724  001328                     l327:
  1725                           
  1726                           ;main.c: 503: segundo--;
  1727  001328  0636               	decf	_segundo,f,c
  1728  00132A  A0D8               	btfss	status,0,c
  1729  00132C  0637               	decf	_segundo+1,f,c
  1730                           
  1731                           ;main.c: 504: Write_RTC();
  1732  00132E  EC3F  F00B         	call	_Write_RTC	;wreg free
  1733  001332                     l328:
  1734                           
  1735                           ;main.c: 505: }
  1736                           ;main.c: 506: while (PORTAbits.RA6 == 0);
  1737  001332  AC80               	btfss	3968,6,c	;volatile
  1738  001334  D7FE               	goto	l328
  1739  001336                     u3830:
  1740                           
  1741                           ;main.c: 507: }
  1742                           ;main.c: 509: _delay((unsigned long)((50)*(8000000/4000.0)));
  1743  001336  0E82               	movlw	130
  1744  001338  6E2D               	movwf	??_main& (0+255),c
  1745  00133A  0EDE               	movlw	222
  1746  00133C                     u3917:
  1747  00133C  2EE8               	decfsz	wreg,f,c
  1748  00133E  D7FE               	bra	u3917
  1749  001340  2E2D               	decfsz	??_main& (0+255),f,c
  1750  001342  D7FC               	bra	u3917
  1751  001344                     l319:
  1752                           
  1753                           ;main.c: 510: }
  1754                           ;main.c: 647: }
  1755                           ;main.c: 649: setRelojDigital();
  1756  001344  EC2B  F012         	call	_setRelojDigital	;wreg free
  1757                           
  1758                           ;main.c: 650: _delay((unsigned long)((98)*(8000000/4000.0)));
  1759  001348  0EFF               	movlw	255
  1760  00134A  6E2D               	movwf	??_main& (0+255),c
  1761  00134C  0E8A               	movlw	138
  1762  00134E                     u3927:
  1763  00134E  2EE8               	decfsz	wreg,f,c
  1764  001350  D7FE               	bra	u3927
  1765  001352  2E2D               	decfsz	??_main& (0+255),f,c
  1766  001354  D7FC               	bra	u3927
  1767  001356  D000               	nop2	
  1768  001358  D624               	goto	l227
  1769  00135A                     __end_of_main:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           postinc0	equ	0xFEE
  1776                           wreg	equ	0xFE8
  1777                           postdec1	equ	0xFE5
  1778                           fsr1l	equ	0xFE1
  1779                           postinc2	equ	0xFDE
  1780                           postdec2	equ	0xFDD
  1781                           fsr2h	equ	0xFDA
  1782                           fsr2l	equ	0xFD9
  1783                           status	equ	0xFD8
  1784                           
  1785 ;; *************** function _titila_texto_insert_password *****************
  1786 ;; Defined at:
  1787 ;;		line 58 in file "main.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      void 
  1794 ;; Registers used:
  1795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;Total ram usage:        1 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    5
  1808 ;; This function calls:
  1809 ;;		_lcd_gotoxy
  1810 ;;		_lcd_putrs
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text1
  1817  001C48                     __ptext1:
  1818                           	opt stack 0
  1819  001C48                     _titila_texto_insert_password:
  1820                           	opt stack 25
  1821                           
  1822                           ;main.c: 59: if (txt_insert_pass == 0) {
  1823                           
  1824                           ;incstack = 0
  1825  001C48  5032               	movf	_txt_insert_pass,w,c
  1826  001C4A  1033               	iorwf	_txt_insert_pass+1,w,c
  1827  001C4C  A4D8               	btfss	status,2,c
  1828  001C4E  D021               	goto	l159
  1829                           
  1830                           ;main.c: 60: txt_insert_pass = 1;
  1831  001C50  0E00               	movlw	0
  1832  001C52  6E33               	movwf	_txt_insert_pass+1,c
  1833  001C54  0E01               	movlw	1
  1834  001C56  6E32               	movwf	_txt_insert_pass,c
  1835                           
  1836                           ;main.c: 61: lcd_gotoxy(1, 1);
  1837  001C58  0E01               	movlw	1
  1838  001C5A  6E05               	movwf	lcd_gotoxy@y,c
  1839  001C5C  0E01               	movlw	1
  1840  001C5E  ECDB  F011         	call	_lcd_gotoxy
  1841                           
  1842                           ;main.c: 62: lcd_putrs("Insert");
  1843  001C62  0E5F               	movlw	low STR_9
  1844  001C64  6E09               	movwf	lcd_putrs@ptr,c
  1845  001C66  0E0F               	movlw	high STR_9
  1846  001C68  6E0A               	movwf	lcd_putrs@ptr+1,c
  1847  001C6A  EC1B  F011         	call	_lcd_putrs	;wreg free
  1848                           
  1849                           ;main.c: 63: lcd_gotoxy(1, 2);
  1850  001C6E  0E02               	movlw	2
  1851  001C70  6E05               	movwf	lcd_gotoxy@y,c
  1852  001C72  0E01               	movlw	1
  1853  001C74  ECDB  F011         	call	_lcd_gotoxy
  1854                           
  1855                           ;main.c: 64: lcd_putrs("Password");
  1856  001C78  0E4F               	movlw	low STR_10
  1857  001C7A  6E09               	movwf	lcd_putrs@ptr,c
  1858  001C7C  0E0F               	movlw	high STR_10
  1859  001C7E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1860  001C80  EC1B  F011         	call	_lcd_putrs	;wreg free
  1861                           
  1862                           ;main.c: 65: _delay((unsigned long)((80)*(8000000/4000.0)));
  1863  001C84  0ED0               	movlw	208
  1864  001C86  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  1865  001C88  0ECA               	movlw	202
  1866  001C8A                     u3937:
  1867  001C8A  2EE8               	decfsz	wreg,f,c
  1868  001C8C  D7FE               	bra	u3937
  1869  001C8E  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  1870  001C90  D7FC               	bra	u3937
  1871  001C92                     l159:
  1872                           
  1873                           ;main.c: 66: }
  1874                           ;main.c: 68: if (txt_insert_pass == 1) {
  1875  001C92  0432               	decf	_txt_insert_pass,w,c
  1876  001C94  1033               	iorwf	_txt_insert_pass+1,w,c
  1877  001C96  A4D8               	btfss	status,2,c
  1878  001C98  0012               	return	
  1879                           
  1880                           ;main.c: 69: txt_insert_pass = 0;
  1881  001C9A  0E00               	movlw	0
  1882  001C9C  6E33               	movwf	_txt_insert_pass+1,c
  1883  001C9E  0E00               	movlw	0
  1884  001CA0  6E32               	movwf	_txt_insert_pass,c
  1885                           
  1886                           ;main.c: 70: lcd_gotoxy(1, 1);
  1887  001CA2  0E01               	movlw	1
  1888  001CA4  6E05               	movwf	lcd_gotoxy@y,c
  1889  001CA6  0E01               	movlw	1
  1890  001CA8  ECDB  F011         	call	_lcd_gotoxy
  1891                           
  1892                           ;main.c: 71: lcd_putrs("        ");
  1893  001CAC  0E17               	movlw	low (STR_15+8)
  1894  001CAE  6E09               	movwf	lcd_putrs@ptr,c
  1895  001CB0  0E0F               	movlw	high (STR_15+8)
  1896  001CB2  6E0A               	movwf	lcd_putrs@ptr+1,c
  1897  001CB4  EC1B  F011         	call	_lcd_putrs	;wreg free
  1898                           
  1899                           ;main.c: 72: lcd_gotoxy(1, 2);
  1900  001CB8  0E02               	movlw	2
  1901  001CBA  6E05               	movwf	lcd_gotoxy@y,c
  1902  001CBC  0E01               	movlw	1
  1903  001CBE  ECDB  F011         	call	_lcd_gotoxy
  1904                           
  1905                           ;main.c: 73: lcd_putrs("        ");
  1906  001CC2  0E17               	movlw	low (STR_15+8)
  1907  001CC4  6E09               	movwf	lcd_putrs@ptr,c
  1908  001CC6  0E0F               	movlw	high (STR_15+8)
  1909  001CC8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1910  001CCA  EC1B  F011         	call	_lcd_putrs	;wreg free
  1911                           
  1912                           ;main.c: 74: _delay((unsigned long)((60)*(8000000/4000.0)));
  1913  001CCE  0E9C               	movlw	156
  1914  001CD0  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  1915  001CD2  0ED7               	movlw	215
  1916  001CD4                     u3947:
  1917  001CD4  2EE8               	decfsz	wreg,f,c
  1918  001CD6  D7FE               	bra	u3947
  1919  001CD8  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  1920  001CDA  D7FC               	bra	u3947
  1921  001CDC  F000               	nop	
  1922  001CDE  0012               	return	
  1923  001CE0                     __end_of_titila_texto_insert_password:
  1924                           	opt stack 0
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           postinc0	equ	0xFEE
  1930                           wreg	equ	0xFE8
  1931                           postdec1	equ	0xFE5
  1932                           fsr1l	equ	0xFE1
  1933                           postinc2	equ	0xFDE
  1934                           postdec2	equ	0xFDD
  1935                           fsr2h	equ	0xFDA
  1936                           fsr2l	equ	0xFD9
  1937                           status	equ	0xFD8
  1938                           
  1939 ;; *************** function _si_apreta_numero_va_a_pantalla_contrasenia *****************
  1940 ;; Defined at:
  1941 ;;		line 180 in file "main.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    8
  1962 ;; This function calls:
  1963 ;;		_pantalla_contrasenia
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text2
  1970  001D6E                     __ptext2:
  1971                           	opt stack 0
  1972  001D6E                     _si_apreta_numero_va_a_pantalla_contrasenia:
  1973                           	opt stack 22
  1974                           
  1975                           ;main.c: 181: LATAbits.LATA0 = 1;
  1976                           
  1977                           ;incstack = 0
  1978  001D6E  8089               	bsf	3977,0,c	;volatile
  1979                           
  1980                           ;main.c: 182: LATAbits.LATA1 = 0;
  1981  001D70  9289               	bcf	3977,1,c	;volatile
  1982                           
  1983                           ;main.c: 183: LATAbits.LATA2 = 0;
  1984  001D72  9489               	bcf	3977,2,c	;volatile
  1985                           
  1986                           ;main.c: 184: LATAbits.LATA3 = 0;
  1987  001D74  9689               	bcf	3977,3,c	;volatile
  1988                           
  1989                           ;main.c: 185: {
  1990                           ;main.c: 186: if ((PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) ||
  1991                           ;main.c: 187: (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) ||
  1992                           ;main.c: 188: (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1)) {
  1993  001D76  AA80               	btfss	3968,5,c	;volatile
  1994  001D78  D002               	goto	u3010
  1995  001D7A  B089               	btfsc	3977,0,c	;volatile
  1996  001D7C  D007               	goto	u3050
  1997  001D7E                     u3010:
  1998  001D7E  AE80               	btfss	3968,7,c	;volatile
  1999  001D80  D002               	goto	u3030
  2000  001D82  B089               	btfsc	3977,0,c	;volatile
  2001  001D84  D003               	goto	u3050
  2002  001D86                     u3030:
  2003  001D86  BC80               	btfsc	3968,6,c	;volatile
  2004  001D88  A089               	btfss	3977,0,c	;volatile
  2005  001D8A  D002               	goto	l191
  2006  001D8C                     u3050:
  2007                           
  2008                           ;main.c: 190: pantalla_contrasenia();
  2009  001D8C  ECC8  F010         	call	_pantalla_contrasenia	;wreg free
  2010  001D90                     l191:
  2011                           
  2012                           ;main.c: 191: }
  2013                           ;main.c: 192: }
  2014                           ;main.c: 193: LATAbits.LATA0 = 0;
  2015  001D90  9089               	bcf	3977,0,c	;volatile
  2016                           
  2017                           ;main.c: 194: LATAbits.LATA1 = 1;
  2018  001D92  8289               	bsf	3977,1,c	;volatile
  2019                           
  2020                           ;main.c: 195: LATAbits.LATA2 = 0;
  2021  001D94  9489               	bcf	3977,2,c	;volatile
  2022                           
  2023                           ;main.c: 196: LATAbits.LATA3 = 0;
  2024  001D96  9689               	bcf	3977,3,c	;volatile
  2025                           
  2026                           ;main.c: 197: {
  2027                           ;main.c: 198: if ((PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) ||
  2028                           ;main.c: 199: (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) ||
  2029                           ;main.c: 200: (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1)) {
  2030  001D98  AA80               	btfss	3968,5,c	;volatile
  2031  001D9A  D002               	goto	u3070
  2032  001D9C  B289               	btfsc	3977,1,c	;volatile
  2033  001D9E  D007               	goto	u3110
  2034  001DA0                     u3070:
  2035  001DA0  AE80               	btfss	3968,7,c	;volatile
  2036  001DA2  D002               	goto	u3090
  2037  001DA4  B289               	btfsc	3977,1,c	;volatile
  2038  001DA6  D003               	goto	u3110
  2039  001DA8                     u3090:
  2040  001DA8  BC80               	btfsc	3968,6,c	;volatile
  2041  001DAA  A289               	btfss	3977,1,c	;volatile
  2042  001DAC  D002               	goto	l198
  2043  001DAE                     u3110:
  2044                           
  2045                           ;main.c: 202: pantalla_contrasenia();
  2046  001DAE  ECC8  F010         	call	_pantalla_contrasenia	;wreg free
  2047  001DB2                     l198:
  2048                           
  2049                           ;main.c: 203: }
  2050                           ;main.c: 204: }
  2051                           ;main.c: 205: LATAbits.LATA0 = 0;
  2052  001DB2  9089               	bcf	3977,0,c	;volatile
  2053                           
  2054                           ;main.c: 206: LATAbits.LATA1 = 0;
  2055  001DB4  9289               	bcf	3977,1,c	;volatile
  2056                           
  2057                           ;main.c: 207: LATAbits.LATA2 = 1;
  2058  001DB6  8489               	bsf	3977,2,c	;volatile
  2059                           
  2060                           ;main.c: 208: LATAbits.LATA3 = 0;
  2061  001DB8  9689               	bcf	3977,3,c	;volatile
  2062                           
  2063                           ;main.c: 209: {
  2064                           ;main.c: 210: if ((PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) ||
  2065                           ;main.c: 211: (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) ||
  2066                           ;main.c: 212: (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1)) {
  2067  001DBA  AA80               	btfss	3968,5,c	;volatile
  2068  001DBC  D002               	goto	u3130
  2069  001DBE  B489               	btfsc	3977,2,c	;volatile
  2070  001DC0  D007               	goto	u3170
  2071  001DC2                     u3130:
  2072  001DC2  AE80               	btfss	3968,7,c	;volatile
  2073  001DC4  D002               	goto	u3150
  2074  001DC6  B489               	btfsc	3977,2,c	;volatile
  2075  001DC8  D003               	goto	u3170
  2076  001DCA                     u3150:
  2077  001DCA  BC80               	btfsc	3968,6,c	;volatile
  2078  001DCC  A489               	btfss	3977,2,c	;volatile
  2079  001DCE  D002               	goto	l205
  2080  001DD0                     u3170:
  2081                           
  2082                           ;main.c: 214: pantalla_contrasenia();
  2083  001DD0  ECC8  F010         	call	_pantalla_contrasenia	;wreg free
  2084  001DD4                     l205:
  2085                           
  2086                           ;main.c: 215: }
  2087                           ;main.c: 216: }
  2088                           ;main.c: 217: LATAbits.LATA0 = 0;
  2089  001DD4  9089               	bcf	3977,0,c	;volatile
  2090                           
  2091                           ;main.c: 218: LATAbits.LATA1 = 0;
  2092  001DD6  9289               	bcf	3977,1,c	;volatile
  2093                           
  2094                           ;main.c: 219: LATAbits.LATA2 = 0;
  2095  001DD8  9489               	bcf	3977,2,c	;volatile
  2096                           
  2097                           ;main.c: 220: LATAbits.LATA3 = 1;
  2098  001DDA  8689               	bsf	3977,3,c	;volatile
  2099                           
  2100                           ;main.c: 221: {
  2101                           ;main.c: 222: if ((PORTAbits.RA5 == 1 && LATAbits.LATA3 == 1) ||
  2102                           ;main.c: 223: (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) ||
  2103                           ;main.c: 224: (PORTAbits.RA6 == 1 && LATAbits.LATA3 == 1)) {
  2104  001DDC  AA80               	btfss	3968,5,c	;volatile
  2105  001DDE  D002               	goto	u3190
  2106  001DE0  B689               	btfsc	3977,3,c	;volatile
  2107  001DE2  D008               	goto	u3230
  2108  001DE4                     u3190:
  2109  001DE4  AE80               	btfss	3968,7,c	;volatile
  2110  001DE6  D002               	goto	u3210
  2111  001DE8  B689               	btfsc	3977,3,c	;volatile
  2112  001DEA  D004               	goto	u3230
  2113  001DEC                     u3210:
  2114  001DEC  AC80               	btfss	3968,6,c	;volatile
  2115  001DEE  0012               	return	
  2116  001DF0  A689               	btfss	3977,3,c	;volatile
  2117  001DF2  0012               	return	
  2118  001DF4                     u3230:
  2119                           
  2120                           ;main.c: 226: pantalla_contrasenia();
  2121  001DF4  ECC8  F010         	call	_pantalla_contrasenia	;wreg free
  2122  001DF8  0012               	return	
  2123  001DFA                     __end_of_si_apreta_numero_va_a_pantalla_contrasenia:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           postdec1	equ	0xFE5
  2132                           fsr1l	equ	0xFE1
  2133                           postinc2	equ	0xFDE
  2134                           postdec2	equ	0xFDD
  2135                           fsr2h	equ	0xFDA
  2136                           fsr2l	equ	0xFD9
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function _pantalla_contrasenia *****************
  2140 ;; Defined at:
  2141 ;;		line 156 in file "main.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;		None
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;		None
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  1    wreg      void 
  2148 ;; Registers used:
  2149 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;Total ram usage:        0 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; Hardware stack levels required when called:    7
  2162 ;; This function calls:
  2163 ;;		_guarda_numero_ingresado
  2164 ;;		_lcd_gotoxy
  2165 ;;		_lcd_putrs
  2166 ;;		_setRelojDigital
  2167 ;; This function is called by:
  2168 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text3
  2173  002190                     __ptext3:
  2174                           	opt stack 0
  2175  002190                     _pantalla_contrasenia:
  2176                           	opt stack 22
  2177                           
  2178                           ;main.c: 158: lcd_gotoxy(1, 1);
  2179                           
  2180                           ;incstack = 0
  2181  002190  0E01               	movlw	1
  2182  002192  6E05               	movwf	lcd_gotoxy@y,c
  2183  002194  0E01               	movlw	1
  2184  002196  ECDB  F011         	call	_lcd_gotoxy
  2185                           
  2186                           ;main.c: 159: lcd_putrs("Insert Password ");
  2187  00219A  0E20               	movlw	low STR_14
  2188  00219C  6E09               	movwf	lcd_putrs@ptr,c
  2189  00219E  0E0F               	movlw	high STR_14
  2190  0021A0  6E0A               	movwf	lcd_putrs@ptr+1,c
  2191  0021A2  EC1B  F011         	call	_lcd_putrs	;wreg free
  2192                           
  2193                           ;main.c: 160: lcd_gotoxy(1, 2);
  2194  0021A6  0E02               	movlw	2
  2195  0021A8  6E05               	movwf	lcd_gotoxy@y,c
  2196  0021AA  0E01               	movlw	1
  2197  0021AC  ECDB  F011         	call	_lcd_gotoxy
  2198                           
  2199                           ;main.c: 161: lcd_putrs("                ");
  2200  0021B0  0E0F               	movlw	low STR_15
  2201  0021B2  6E09               	movwf	lcd_putrs@ptr,c
  2202  0021B4  0E0F               	movlw	high STR_15
  2203  0021B6  6E0A               	movwf	lcd_putrs@ptr+1,c
  2204  0021B8  EC1B  F011         	call	_lcd_putrs	;wreg free
  2205  0021BC                     l3049:
  2206                           
  2207                           ;main.c: 164: if (numeros_ingresados < 4) {
  2208  0021BC  BE35               	btfsc	_numeros_ingresados+1,7,c
  2209  0021BE  D006               	goto	u2910
  2210  0021C0  5035               	movf	_numeros_ingresados+1,w,c
  2211  0021C2  E1FC               	bnz	l3049
  2212  0021C4  0E04               	movlw	4
  2213  0021C6  5C34               	subwf	_numeros_ingresados,w,c
  2214  0021C8  B0D8               	btfsc	status,0,c
  2215  0021CA  D7F8               	goto	l183
  2216  0021CC                     u2910:
  2217                           
  2218                           ;main.c: 165: guarda_numero_ingresado();
  2219  0021CC  ECEF  F00B         	call	_guarda_numero_ingresado	;wreg free
  2220                           
  2221                           ;main.c: 166: LATAbits.LATA0 = 0;
  2222  0021D0  9089               	bcf	3977,0,c	;volatile
  2223                           
  2224                           ;main.c: 167: LATAbits.LATA1 = 0;
  2225  0021D2  9289               	bcf	3977,1,c	;volatile
  2226                           
  2227                           ;main.c: 168: LATAbits.LATA2 = 0;
  2228  0021D4  9489               	bcf	3977,2,c	;volatile
  2229                           
  2230                           ;main.c: 169: LATAbits.LATA3 = 1;
  2231  0021D6  8689               	bsf	3977,3,c	;volatile
  2232                           
  2233                           ;main.c: 171: if (PORTAbits.RA5 == 1 && LATAbits.LATA3 == 1) {
  2234  0021D8  BA80               	btfsc	3968,5,c	;volatile
  2235  0021DA  A689               	btfss	3977,3,c	;volatile
  2236  0021DC  D7EF               	goto	l183
  2237                           
  2238                           ;main.c: 172: setRelojDigital();
  2239  0021DE  EC2B  F012         	call	_setRelojDigital	;wreg free
  2240                           
  2241                           ;main.c: 173: break;
  2242  0021E2  0012               	return	
  2243  0021E4                     __end_of_pantalla_contrasenia:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1l	equ	0xFE1
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _guarda_numero_ingresado *****************
  2260 ;; Defined at:
  2261 ;;		line 89 in file "main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2279 ;;Total ram usage:        2 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    6
  2282 ;; This function calls:
  2283 ;;		_ingreso_numero
  2284 ;; This function is called by:
  2285 ;;		_pantalla_contrasenia
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text4
  2290  0017DE                     __ptext4:
  2291                           	opt stack 0
  2292  0017DE                     _guarda_numero_ingresado:
  2293                           	opt stack 22
  2294                           
  2295                           ;main.c: 90: LATAbits.LATA0 = 1;
  2296                           
  2297                           ;incstack = 0
  2298  0017DE  8089               	bsf	3977,0,c	;volatile
  2299                           
  2300                           ;main.c: 91: LATAbits.LATA1 = 0;
  2301  0017E0  9289               	bcf	3977,1,c	;volatile
  2302                           
  2303                           ;main.c: 92: LATAbits.LATA2 = 0;
  2304  0017E2  9489               	bcf	3977,2,c	;volatile
  2305                           
  2306                           ;main.c: 93: LATAbits.LATA3 = 0;
  2307  0017E4  9689               	bcf	3977,3,c	;volatile
  2308                           
  2309                           ;main.c: 94: {
  2310                           ;main.c: 95: if (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  2311  0017E6  BA80               	btfsc	3968,5,c	;volatile
  2312  0017E8  A089               	btfss	3977,0,c	;volatile
  2313  0017EA  D00B               	goto	l170
  2314                           
  2315                           ;main.c: 96: key = 1;
  2316  0017EC  0E01               	movlw	1
  2317  0017EE  6E44               	movwf	_key,c
  2318                           
  2319                           ;main.c: 97: ingreso_numero(key);
  2320  0017F0  5044               	movf	_key,w,c
  2321  0017F2  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2322  0017F4  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2323  0017F6  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2324  0017FA  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2325  0017FE  EC62  F010         	call	_ingreso_numero	;wreg free
  2326  001802                     l170:
  2327                           
  2328                           ;main.c: 98: }
  2329                           ;main.c: 99: if (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  2330  001802  BE80               	btfsc	3968,7,c	;volatile
  2331  001804  A089               	btfss	3977,0,c	;volatile
  2332  001806  D00B               	goto	l171
  2333                           
  2334                           ;main.c: 100: key = 2;
  2335  001808  0E02               	movlw	2
  2336  00180A  6E44               	movwf	_key,c
  2337                           
  2338                           ;main.c: 101: ingreso_numero(key);
  2339  00180C  5044               	movf	_key,w,c
  2340  00180E  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2341  001810  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2342  001812  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2343  001816  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2344  00181A  EC62  F010         	call	_ingreso_numero	;wreg free
  2345  00181E                     l171:
  2346                           
  2347                           ;main.c: 102: }
  2348                           ;main.c: 103: if (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  2349  00181E  BC80               	btfsc	3968,6,c	;volatile
  2350  001820  A089               	btfss	3977,0,c	;volatile
  2351  001822  D00B               	goto	l172
  2352                           
  2353                           ;main.c: 104: key = 3;
  2354  001824  0E03               	movlw	3
  2355  001826  6E44               	movwf	_key,c
  2356                           
  2357                           ;main.c: 105: ingreso_numero(key);
  2358  001828  5044               	movf	_key,w,c
  2359  00182A  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2360  00182C  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2361  00182E  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2362  001832  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2363  001836  EC62  F010         	call	_ingreso_numero	;wreg free
  2364  00183A                     l172:
  2365                           
  2366                           ;main.c: 106: }
  2367                           ;main.c: 107: }
  2368                           ;main.c: 108: LATAbits.LATA0 = 0;
  2369  00183A  9089               	bcf	3977,0,c	;volatile
  2370                           
  2371                           ;main.c: 109: LATAbits.LATA1 = 1;
  2372  00183C  8289               	bsf	3977,1,c	;volatile
  2373                           
  2374                           ;main.c: 110: LATAbits.LATA2 = 0;
  2375  00183E  9489               	bcf	3977,2,c	;volatile
  2376                           
  2377                           ;main.c: 111: LATAbits.LATA3 = 0;
  2378  001840  9689               	bcf	3977,3,c	;volatile
  2379                           
  2380                           ;main.c: 112: {
  2381                           ;main.c: 113: if (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  2382  001842  BA80               	btfsc	3968,5,c	;volatile
  2383  001844  A289               	btfss	3977,1,c	;volatile
  2384  001846  D00B               	goto	l173
  2385                           
  2386                           ;main.c: 114: key = 4;
  2387  001848  0E04               	movlw	4
  2388  00184A  6E44               	movwf	_key,c
  2389                           
  2390                           ;main.c: 115: ingreso_numero(key);
  2391  00184C  5044               	movf	_key,w,c
  2392  00184E  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2393  001850  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2394  001852  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2395  001856  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2396  00185A  EC62  F010         	call	_ingreso_numero	;wreg free
  2397  00185E                     l173:
  2398                           
  2399                           ;main.c: 116: }
  2400                           ;main.c: 117: if (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  2401  00185E  BE80               	btfsc	3968,7,c	;volatile
  2402  001860  A289               	btfss	3977,1,c	;volatile
  2403  001862  D00B               	goto	l174
  2404                           
  2405                           ;main.c: 118: key = 5;
  2406  001864  0E05               	movlw	5
  2407  001866  6E44               	movwf	_key,c
  2408                           
  2409                           ;main.c: 119: ingreso_numero(key);
  2410  001868  5044               	movf	_key,w,c
  2411  00186A  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2412  00186C  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2413  00186E  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2414  001872  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2415  001876  EC62  F010         	call	_ingreso_numero	;wreg free
  2416  00187A                     l174:
  2417                           
  2418                           ;main.c: 120: }
  2419                           ;main.c: 121: if (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  2420  00187A  BC80               	btfsc	3968,6,c	;volatile
  2421  00187C  A289               	btfss	3977,1,c	;volatile
  2422  00187E  D00B               	goto	l175
  2423                           
  2424                           ;main.c: 122: key = 6;
  2425  001880  0E06               	movlw	6
  2426  001882  6E44               	movwf	_key,c
  2427                           
  2428                           ;main.c: 123: ingreso_numero(key);
  2429  001884  5044               	movf	_key,w,c
  2430  001886  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2431  001888  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2432  00188A  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2433  00188E  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2434  001892  EC62  F010         	call	_ingreso_numero	;wreg free
  2435  001896                     l175:
  2436                           
  2437                           ;main.c: 124: }
  2438                           ;main.c: 125: }
  2439                           ;main.c: 126: LATAbits.LATA0 = 0;
  2440  001896  9089               	bcf	3977,0,c	;volatile
  2441                           
  2442                           ;main.c: 127: LATAbits.LATA1 = 0;
  2443  001898  9289               	bcf	3977,1,c	;volatile
  2444                           
  2445                           ;main.c: 128: LATAbits.LATA2 = 1;
  2446  00189A  8489               	bsf	3977,2,c	;volatile
  2447                           
  2448                           ;main.c: 129: LATAbits.LATA3 = 0;
  2449  00189C  9689               	bcf	3977,3,c	;volatile
  2450                           
  2451                           ;main.c: 130: {
  2452                           ;main.c: 131: if (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  2453  00189E  BA80               	btfsc	3968,5,c	;volatile
  2454  0018A0  A489               	btfss	3977,2,c	;volatile
  2455  0018A2  D00B               	goto	l176
  2456                           
  2457                           ;main.c: 132: key = 7;
  2458  0018A4  0E07               	movlw	7
  2459  0018A6  6E44               	movwf	_key,c
  2460                           
  2461                           ;main.c: 133: ingreso_numero(key);
  2462  0018A8  5044               	movf	_key,w,c
  2463  0018AA  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2464  0018AC  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2465  0018AE  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2466  0018B2  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2467  0018B6  EC62  F010         	call	_ingreso_numero	;wreg free
  2468  0018BA                     l176:
  2469                           
  2470                           ;main.c: 134: }
  2471                           ;main.c: 135: if (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  2472  0018BA  BE80               	btfsc	3968,7,c	;volatile
  2473  0018BC  A489               	btfss	3977,2,c	;volatile
  2474  0018BE  D00B               	goto	l177
  2475                           
  2476                           ;main.c: 136: key = 8;
  2477  0018C0  0E08               	movlw	8
  2478  0018C2  6E44               	movwf	_key,c
  2479                           
  2480                           ;main.c: 137: ingreso_numero(key);
  2481  0018C4  5044               	movf	_key,w,c
  2482  0018C6  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2483  0018C8  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2484  0018CA  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2485  0018CE  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2486  0018D2  EC62  F010         	call	_ingreso_numero	;wreg free
  2487  0018D6                     l177:
  2488                           
  2489                           ;main.c: 138: }
  2490                           ;main.c: 139: if (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  2491  0018D6  BC80               	btfsc	3968,6,c	;volatile
  2492  0018D8  A489               	btfss	3977,2,c	;volatile
  2493  0018DA  D00B               	goto	l178
  2494                           
  2495                           ;main.c: 140: key = 9;
  2496  0018DC  0E09               	movlw	9
  2497  0018DE  6E44               	movwf	_key,c
  2498                           
  2499                           ;main.c: 141: ingreso_numero(key);
  2500  0018E0  5044               	movf	_key,w,c
  2501  0018E2  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2502  0018E4  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2503  0018E6  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2504  0018EA  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2505  0018EE  EC62  F010         	call	_ingreso_numero	;wreg free
  2506  0018F2                     l178:
  2507                           
  2508                           ;main.c: 142: }
  2509                           ;main.c: 143: }
  2510                           ;main.c: 144: LATAbits.LATA0 = 0;
  2511  0018F2  9089               	bcf	3977,0,c	;volatile
  2512                           
  2513                           ;main.c: 145: LATAbits.LATA1 = 0;
  2514  0018F4  9289               	bcf	3977,1,c	;volatile
  2515                           
  2516                           ;main.c: 146: LATAbits.LATA2 = 0;
  2517  0018F6  9489               	bcf	3977,2,c	;volatile
  2518                           
  2519                           ;main.c: 147: LATAbits.LATA3 = 1;
  2520  0018F8  8689               	bsf	3977,3,c	;volatile
  2521                           
  2522                           ;main.c: 149: if (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  2523  0018FA  AE80               	btfss	3968,7,c	;volatile
  2524  0018FC  0012               	return	
  2525  0018FE  A689               	btfss	3977,3,c	;volatile
  2526  001900  0012               	return	
  2527                           
  2528                           ;main.c: 150: key = 0;
  2529  001902  0E00               	movlw	0
  2530  001904  6E44               	movwf	_key,c
  2531                           
  2532                           ;main.c: 151: ingreso_numero(key);
  2533  001906  5044               	movf	_key,w,c
  2534  001908  6E2B               	movwf	??_guarda_numero_ingresado& (0+255),c
  2535  00190A  6A2C               	clrf	(??_guarda_numero_ingresado+1)& (0+255),c
  2536  00190C  C02B  F028         	movff	??_guarda_numero_ingresado,ingreso_numero@num
  2537  001910  C02C  F029         	movff	??_guarda_numero_ingresado+1,ingreso_numero@num+1
  2538  001914  EC62  F010         	call	_ingreso_numero	;wreg free
  2539  001918  0012               	return	
  2540  00191A                     __end_of_guarda_numero_ingresado:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           tblptrh	equ	0xFF7
  2544                           tblptrl	equ	0xFF6
  2545                           tablat	equ	0xFF5
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1l	equ	0xFE1
  2550                           postinc2	equ	0xFDE
  2551                           postdec2	equ	0xFDD
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _ingreso_numero *****************
  2557 ;; Defined at:
  2558 ;;		line 78 in file "main.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  num             2   39[COMRAM] PTR int 
  2561 ;;		 -> RAM(3775), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2575 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2577 ;;Total ram usage:        3 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    5
  2580 ;; This function calls:
  2581 ;;		_lcd_gotoxy
  2582 ;;		_lcd_putrs
  2583 ;;		_sprintf
  2584 ;; This function is called by:
  2585 ;;		_guarda_numero_ingresado
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text5
  2590  0020C4                     __ptext5:
  2591                           	opt stack 0
  2592  0020C4                     _ingreso_numero:
  2593                           	opt stack 22
  2594                           
  2595                           ;main.c: 79: array_contrasenia_ingresada[numeros_ingresados] = num;
  2596                           
  2597                           ;incstack = 0
  2598  0020C4  90D8               	bcf	status,0,c
  2599  0020C6  3434               	rlcf	_numeros_ingresados,w,c
  2600  0020C8  6ED9               	movwf	fsr2l,c
  2601  0020CA  3435               	rlcf	_numeros_ingresados+1,w,c
  2602  0020CC  6EDA               	movwf	fsr2h,c
  2603  0020CE  0E60               	movlw	low _array_contrasenia_ingresada
  2604  0020D0  26D9               	addwf	fsr2l,f,c
  2605  0020D2  0E00               	movlw	high _array_contrasenia_ingresada
  2606  0020D4  22DA               	addwfc	fsr2h,f,c
  2607  0020D6  C028  FFDE         	movff	ingreso_numero@num,postinc2
  2608  0020DA  C029  FFDD         	movff	ingreso_numero@num+1,postdec2
  2609                           
  2610                           ;main.c: 80: lcd_gotoxy(numeros_ingresados + 1, 2);
  2611  0020DE  0E02               	movlw	2
  2612  0020E0  6E05               	movwf	lcd_gotoxy@y,c
  2613  0020E2  2834               	incf	_numeros_ingresados,w,c
  2614  0020E4  ECDB  F011         	call	_lcd_gotoxy
  2615                           
  2616                           ;main.c: 81: sprintf(buffer2, "%01u", num);
  2617  0020E8  0E84               	movlw	low _buffer2
  2618  0020EA  6E0D               	movwf	sprintf@sp,c
  2619  0020EC  0E00               	movlw	high _buffer2
  2620  0020EE  6E0E               	movwf	sprintf@sp+1,c
  2621  0020F0  0E84               	movlw	low STR_13
  2622  0020F2  6E0F               	movwf	sprintf@f,c
  2623  0020F4  0E0F               	movlw	high STR_13
  2624  0020F6  6E10               	movwf	sprintf@f+1,c
  2625  0020F8  C028  F011         	movff	ingreso_numero@num,?_sprintf+4
  2626  0020FC  C029  F012         	movff	ingreso_numero@num+1,?_sprintf+5
  2627  002100  ECAD  F009         	call	_sprintf	;wreg free
  2628                           
  2629                           ;main.c: 82: lcd_putrs(buffer2);
  2630  002104  0E84               	movlw	low _buffer2
  2631  002106  6E09               	movwf	lcd_putrs@ptr,c
  2632  002108  0E00               	movlw	high _buffer2
  2633  00210A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2634  00210C  EC1B  F011         	call	_lcd_putrs	;wreg free
  2635                           
  2636                           ;main.c: 83: numeros_ingresados++;
  2637  002110  4A34               	infsnz	_numeros_ingresados,f,c
  2638  002112  2A35               	incf	_numeros_ingresados+1,f,c
  2639                           
  2640                           ;main.c: 84: while (PORTAbits.RA5 == 1) {
  2641  002114  D008               	goto	l164
  2642  002116                     
  2643                           ;main.c: 85: _delay((unsigned long)((40)*(8000000/4000.0)));
  2644  002116  0E68               	movlw	104
  2645  002118  6E2A               	movwf	??_ingreso_numero& (0+255),c
  2646  00211A  0EE4               	movlw	228
  2647  00211C                     u3957:
  2648  00211C  2EE8               	decfsz	wreg,f,c
  2649  00211E  D7FE               	bra	u3957
  2650  002120  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  2651  002122  D7FC               	bra	u3957
  2652  002124  D000               	nop2	
  2653  002126                     l164:
  2654  002126  AA80               	btfss	3968,5,c	;volatile
  2655  002128  0012               	return	
  2656  00212A  D7F5               	goto	l165
  2657  00212C                     __end_of_ingreso_numero:
  2658                           	opt stack 0
  2659                           tblptru	equ	0xFF8
  2660                           tblptrh	equ	0xFF7
  2661                           tblptrl	equ	0xFF6
  2662                           tablat	equ	0xFF5
  2663                           postinc0	equ	0xFEE
  2664                           wreg	equ	0xFE8
  2665                           postdec1	equ	0xFE5
  2666                           fsr1l	equ	0xFE1
  2667                           postinc2	equ	0xFDE
  2668                           postdec2	equ	0xFDD
  2669                           fsr2h	equ	0xFDA
  2670                           fsr2l	equ	0xFD9
  2671                           status	equ	0xFD8
  2672                           
  2673 ;; *************** function _setup *****************
  2674 ;; Defined at:
  2675 ;;		line 231 in file "main.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    7
  2696 ;; This function calls:
  2697 ;;		_Write_RTC
  2698 ;;		_lcd_comand
  2699 ;;		_lcd_init
  2700 ;;		_setRelojDigital
  2701 ;; This function is called by:
  2702 ;;		_main
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text6
  2707  002288                     __ptext6:
  2708                           	opt stack 0
  2709  002288                     _setup:
  2710                           	opt stack 23
  2711                           
  2712                           ;main.c: 232: OSCTUNEbits.INTSRC = 1;
  2713                           
  2714                           ;incstack = 0
  2715  002288  8E9B               	bsf	3995,7,c	;volatile
  2716                           
  2717                           ;main.c: 233: OSCTUNEbits.PLLEN = 0;
  2718  00228A  9C9B               	bcf	3995,6,c	;volatile
  2719                           
  2720                           ;main.c: 234: OSCCONbits.IRCF0 = 1;
  2721  00228C  88D3               	bsf	4051,4,c	;volatile
  2722                           
  2723                           ;main.c: 235: OSCCONbits.IRCF1 = 1;
  2724  00228E  8AD3               	bsf	4051,5,c	;volatile
  2725                           
  2726                           ;main.c: 236: OSCCONbits.IRCF2 = 1;
  2727  002290  8CD3               	bsf	4051,6,c	;volatile
  2728                           
  2729                           ;main.c: 237: OSCCONbits.SCS0 = 0;
  2730  002292  90D3               	bcf	4051,0,c	;volatile
  2731                           
  2732                           ;main.c: 238: OSCCONbits.SCS1 = 0;
  2733  002294  92D3               	bcf	4051,1,c	;volatile
  2734                           
  2735                           ;main.c: 239: TRISA = 0b11110000;
  2736  002296  0EF0               	movlw	240
  2737  002298  6E92               	movwf	3986,c	;volatile
  2738                           
  2739                           ;main.c: 240: TRISB = 0;
  2740  00229A  0E00               	movlw	0
  2741  00229C  6E93               	movwf	3987,c	;volatile
  2742                           
  2743                           ;main.c: 241: TRISC = 0b00000111;
  2744  00229E  0E07               	movlw	7
  2745  0022A0  6E94               	movwf	3988,c	;volatile
  2746                           
  2747                           ;main.c: 245: ANCON0 = 0b11111111;
  2748  0022A2  010F               	movlb	15	; () banked
  2749  0022A4  6948               	setf	72,b	;volatile
  2750                           
  2751                           ; BSR set to: 15
  2752                           ;main.c: 247: ANCON1 = 0b11111111;
  2753  0022A6  010F               	movlb	15	; () banked
  2754  0022A8  6949               	setf	73,b	;volatile
  2755                           
  2756                           ; BSR set to: 15
  2757                           ;main.c: 250: RTCCFGbits.RTCEN = 1;
  2758  0022AA  010F               	movlb	15	; () banked
  2759  0022AC  8F3F               	bsf	63,7,b	;volatile
  2760                           
  2761                           ; BSR set to: 15
  2762                           ;main.c: 251: RTCCFGbits.RTCWREN = 1;
  2763  0022AE  010F               	movlb	15	; () banked
  2764  0022B0  8B3F               	bsf	63,5,b	;volatile
  2765                           
  2766                           ; BSR set to: 15
  2767                           ;main.c: 252: T1CONbits.T1OSCEN = 1;
  2768  0022B2  86CD               	bsf	4045,3,c	;volatile
  2769                           
  2770                           ; BSR set to: 15
  2771                           ;main.c: 253: Write_RTC();
  2772  0022B4  EC3F  F00B         	call	_Write_RTC	;wreg free
  2773                           
  2774                           ;main.c: 254: lcd_init();
  2775  0022B8  EC7D  F00F         	call	_lcd_init	;wreg free
  2776                           
  2777                           ;main.c: 255: lcd_comand(0b00001100);
  2778  0022BC  0E0C               	movlw	12
  2779  0022BE  EC1E  F012         	call	_lcd_comand
  2780                           
  2781                           ;main.c: 256: LATBbits.LATB2 = 0;;
  2782  0022C2  948A               	bcf	3978,2,c	;volatile
  2783                           
  2784                           ;main.c: 257: LATBbits.LATB1 = 0;;
  2785  0022C4  928A               	bcf	3978,1,c	;volatile
  2786                           
  2787                           ;main.c: 258: LATBbits.LATB0 = 0;;
  2788  0022C6  908A               	bcf	3978,0,c	;volatile
  2789                           
  2790                           ;main.c: 260: setRelojDigital();
  2791  0022C8  EC2B  F012         	call	_setRelojDigital	;wreg free
  2792                           
  2793                           ;main.c: 261: Write_RTC();
  2794  0022CC  EC3F  F00B         	call	_Write_RTC	;wreg free
  2795  0022D0  0012               	return		;funcret
  2796  0022D2                     __end_of_setup:
  2797                           	opt stack 0
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           postinc0	equ	0xFEE
  2803                           wreg	equ	0xFE8
  2804                           postdec1	equ	0xFE5
  2805                           fsr1l	equ	0xFE1
  2806                           postinc2	equ	0xFDE
  2807                           postdec2	equ	0xFDD
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812 ;; *************** function _setRelojDigital *****************
  2813 ;; Defined at:
  2814 ;;		line 53 in file "main.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;		None
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;		None
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2832 ;;Total ram usage:        0 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    6
  2835 ;; This function calls:
  2836 ;;		_setDiaMesAnio
  2837 ;;		_setHoraMinutoSegundo
  2838 ;; This function is called by:
  2839 ;;		_pantalla_contrasenia
  2840 ;;		_setup
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text7
  2846  002456                     __ptext7:
  2847                           	opt stack 0
  2848  002456                     _setRelojDigital:
  2849                           	opt stack 22
  2850                           
  2851                           ;main.c: 54: setDiaMesAnio();
  2852                           
  2853                           ;incstack = 0
  2854  002456  EC3F  F00F         	call	_setDiaMesAnio	;wreg free
  2855                           
  2856                           ;main.c: 55: setHoraMinutoSegundo();
  2857  00245A  ECF3  F00F         	call	_setHoraMinutoSegundo	;wreg free
  2858  00245E  0012               	return		;funcret
  2859  002460                     __end_of_setRelojDigital:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           postdec1	equ	0xFE5
  2868                           fsr1l	equ	0xFE1
  2869                           postinc2	equ	0xFDE
  2870                           postdec2	equ	0xFDD
  2871                           fsr2h	equ	0xFDA
  2872                           fsr2l	equ	0xFD9
  2873                           status	equ	0xFD8
  2874                           
  2875 ;; *************** function _setHoraMinutoSegundo *****************
  2876 ;; Defined at:
  2877 ;;		line 40 in file "main.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;Total ram usage:        0 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    5
  2898 ;; This function calls:
  2899 ;;		_Write_RTC
  2900 ;;		_lcd_gotoxy
  2901 ;;		_lcd_putrs
  2902 ;;		_sprintf
  2903 ;; This function is called by:
  2904 ;;		_setRelojDigital
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text8
  2909  001FE6                     __ptext8:
  2910                           	opt stack 0
  2911  001FE6                     _setHoraMinutoSegundo:
  2912                           	opt stack 22
  2913                           
  2914                           ;main.c: 41: if (hora >= 24) {
  2915                           
  2916                           ;incstack = 0
  2917  001FE6  BE50               	btfsc	_hora+1,7,c
  2918  001FE8  D014               	goto	l152
  2919  001FEA  5050               	movf	_hora+1,w,c
  2920  001FEC  E104               	bnz	u2670
  2921  001FEE  0E18               	movlw	24
  2922  001FF0  5C4F               	subwf	_hora,w,c
  2923  001FF2  A0D8               	btfss	status,0,c
  2924  001FF4  D00E               	goto	l152
  2925  001FF6                     u2670:
  2926                           
  2927                           ;main.c: 42: hora = 0;
  2928  001FF6  0E00               	movlw	0
  2929  001FF8  6E50               	movwf	_hora+1,c
  2930  001FFA  0E00               	movlw	0
  2931  001FFC  6E4F               	movwf	_hora,c
  2932                           
  2933                           ;main.c: 43: minuto = 0;
  2934  001FFE  0E00               	movlw	0
  2935  002000  6E4E               	movwf	_minuto+1,c
  2936  002002  0E00               	movlw	0
  2937  002004  6E4D               	movwf	_minuto,c
  2938                           
  2939                           ;main.c: 44: segundo = 0;
  2940  002006  0E00               	movlw	0
  2941  002008  6E37               	movwf	_segundo+1,c
  2942  00200A  0E00               	movlw	0
  2943  00200C  6E36               	movwf	_segundo,c
  2944                           
  2945                           ;main.c: 45: Write_RTC();
  2946  00200E  EC3F  F00B         	call	_Write_RTC	;wreg free
  2947  002012                     l152:
  2948                           
  2949                           ;main.c: 46: }
  2950                           ;main.c: 48: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  2951  002012  0E84               	movlw	low _buffer2
  2952  002014  6E0D               	movwf	sprintf@sp,c
  2953  002016  0E00               	movlw	high _buffer2
  2954  002018  6E0E               	movwf	sprintf@sp+1,c
  2955  00201A  0E40               	movlw	low STR_8
  2956  00201C  6E0F               	movwf	sprintf@f,c
  2957  00201E  0E0F               	movlw	high STR_8
  2958  002020  6E10               	movwf	sprintf@f+1,c
  2959  002022  C04F  F011         	movff	_hora,?_sprintf+4
  2960  002026  C050  F012         	movff	_hora+1,?_sprintf+5
  2961  00202A  C04D  F013         	movff	_minuto,?_sprintf+6
  2962  00202E  C04E  F014         	movff	_minuto+1,?_sprintf+7
  2963  002032  C036  F015         	movff	_segundo,?_sprintf+8
  2964  002036  C037  F016         	movff	_segundo+1,?_sprintf+9
  2965  00203A  ECAD  F009         	call	_sprintf	;wreg free
  2966                           
  2967                           ;main.c: 49: lcd_gotoxy(9, 2);
  2968  00203E  0E02               	movlw	2
  2969  002040  6E05               	movwf	lcd_gotoxy@y,c
  2970  002042  0E09               	movlw	9
  2971  002044  ECDB  F011         	call	_lcd_gotoxy
  2972                           
  2973                           ;main.c: 50: lcd_putrs(buffer2);
  2974  002048  0E84               	movlw	low _buffer2
  2975  00204A  6E09               	movwf	lcd_putrs@ptr,c
  2976  00204C  0E00               	movlw	high _buffer2
  2977  00204E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2978  002050  EC1B  F011         	call	_lcd_putrs	;wreg free
  2979  002054  0012               	return		;funcret
  2980  002056                     __end_of_setHoraMinutoSegundo:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           postinc0	equ	0xFEE
  2987                           wreg	equ	0xFE8
  2988                           postdec1	equ	0xFE5
  2989                           fsr1l	equ	0xFE1
  2990                           postinc2	equ	0xFDE
  2991                           postdec2	equ	0xFDD
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _setDiaMesAnio *****************
  2997 ;; Defined at:
  2998 ;;		line 24 in file "main.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    5
  3019 ;; This function calls:
  3020 ;;		_Write_RTC
  3021 ;;		_lcd_gotoxy
  3022 ;;		_lcd_putrs
  3023 ;;		_sprintf
  3024 ;; This function is called by:
  3025 ;;		_setRelojDigital
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text9
  3030  001E7E                     __ptext9:
  3031                           	opt stack 0
  3032  001E7E                     _setDiaMesAnio:
  3033                           	opt stack 22
  3034                           
  3035                           ;main.c: 25: if (dia > 31) {
  3036                           
  3037                           ;incstack = 0
  3038  001E7E  BE52               	btfsc	_dia+1,7,c
  3039  001E80  D00C               	goto	l147
  3040  001E82  5052               	movf	_dia+1,w,c
  3041  001E84  E104               	bnz	u2650
  3042  001E86  0E20               	movlw	32
  3043  001E88  5C51               	subwf	_dia,w,c
  3044  001E8A  A0D8               	btfss	status,0,c
  3045  001E8C  D006               	goto	l147
  3046  001E8E                     u2650:
  3047                           
  3048                           ;main.c: 26: dia = 1;
  3049  001E8E  0E00               	movlw	0
  3050  001E90  6E52               	movwf	_dia+1,c
  3051  001E92  0E01               	movlw	1
  3052  001E94  6E51               	movwf	_dia,c
  3053                           
  3054                           ;main.c: 27: Write_RTC();
  3055  001E96  EC3F  F00B         	call	_Write_RTC	;wreg free
  3056  001E9A                     l147:
  3057                           
  3058                           ;main.c: 28: }
  3059                           ;main.c: 30: if (mes > 12) {
  3060  001E9A  BE56               	btfsc	_mes+1,7,c
  3061  001E9C  D00C               	goto	l148
  3062  001E9E  5056               	movf	_mes+1,w,c
  3063  001EA0  E104               	bnz	u2660
  3064  001EA2  0E0D               	movlw	13
  3065  001EA4  5C55               	subwf	_mes,w,c
  3066  001EA6  A0D8               	btfss	status,0,c
  3067  001EA8  D006               	goto	l148
  3068  001EAA                     u2660:
  3069                           
  3070                           ;main.c: 31: mes = 1;
  3071  001EAA  0E00               	movlw	0
  3072  001EAC  6E56               	movwf	_mes+1,c
  3073  001EAE  0E01               	movlw	1
  3074  001EB0  6E55               	movwf	_mes,c
  3075                           
  3076                           ;main.c: 32: Write_RTC();
  3077  001EB2  EC3F  F00B         	call	_Write_RTC	;wreg free
  3078  001EB6                     l148:
  3079                           
  3080                           ;main.c: 33: }
  3081                           ;main.c: 35: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  3082  001EB6  0E84               	movlw	low _buffer2
  3083  001EB8  6E0D               	movwf	sprintf@sp,c
  3084  001EBA  0E00               	movlw	high _buffer2
  3085  001EBC  6E0E               	movwf	sprintf@sp+1,c
  3086  001EBE  0E31               	movlw	low STR_7
  3087  001EC0  6E0F               	movwf	sprintf@f,c
  3088  001EC2  0E0F               	movlw	high STR_7
  3089  001EC4  6E10               	movwf	sprintf@f+1,c
  3090  001EC6  C051  F011         	movff	_dia,?_sprintf+4
  3091  001ECA  C052  F012         	movff	_dia+1,?_sprintf+5
  3092  001ECE  C055  F013         	movff	_mes,?_sprintf+6
  3093  001ED2  C056  F014         	movff	_mes+1,?_sprintf+7
  3094  001ED6  C057  F015         	movff	_anio,?_sprintf+8
  3095  001EDA  C058  F016         	movff	_anio+1,?_sprintf+9
  3096  001EDE  ECAD  F009         	call	_sprintf	;wreg free
  3097                           
  3098                           ;main.c: 36: lcd_gotoxy(9, 1);
  3099  001EE2  0E01               	movlw	1
  3100  001EE4  6E05               	movwf	lcd_gotoxy@y,c
  3101  001EE6  0E09               	movlw	9
  3102  001EE8  ECDB  F011         	call	_lcd_gotoxy
  3103                           
  3104                           ;main.c: 37: lcd_putrs(buffer2);
  3105  001EEC  0E84               	movlw	low _buffer2
  3106  001EEE  6E09               	movwf	lcd_putrs@ptr,c
  3107  001EF0  0E00               	movlw	high _buffer2
  3108  001EF2  6E0A               	movwf	lcd_putrs@ptr+1,c
  3109  001EF4  EC1B  F011         	call	_lcd_putrs	;wreg free
  3110  001EF8  0012               	return		;funcret
  3111  001EFA                     __end_of_setDiaMesAnio:
  3112                           	opt stack 0
  3113                           tblptru	equ	0xFF8
  3114                           tblptrh	equ	0xFF7
  3115                           tblptrl	equ	0xFF6
  3116                           tablat	equ	0xFF5
  3117                           postinc0	equ	0xFEE
  3118                           wreg	equ	0xFE8
  3119                           postdec1	equ	0xFE5
  3120                           fsr1l	equ	0xFE1
  3121                           postinc2	equ	0xFDE
  3122                           postdec2	equ	0xFDD
  3123                           fsr2h	equ	0xFDA
  3124                           fsr2l	equ	0xFD9
  3125                           status	equ	0xFD8
  3126                           
  3127 ;; *************** function _sprintf *****************
  3128 ;; Defined at:
  3129 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3132 ;;		 -> buffer2(20), 
  3133 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3134 ;;		 -> STR_16(3), STR_13(5), STR_8(15), STR_7(15), 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  tmpval          4    0        struct .
  3137 ;;  width           2   36[COMRAM] int 
  3138 ;;  len             2   34[COMRAM] unsigned int 
  3139 ;;  cp              2   32[COMRAM] PTR const unsigned char 
  3140 ;;		 -> STR_17(7), RAM(3775), STR_6(5), STR_5(5), 
  3141 ;;		 -> STR_4(5), STR_3(5), STR_2(5), STR_1(5), 
  3142 ;;  ap              2   30[COMRAM] PTR void [1]
  3143 ;;		 -> ?_sprintf(2), 
  3144 ;;  val             2   27[COMRAM] unsigned int 
  3145 ;;  c               1   38[COMRAM] char 
  3146 ;;  prec            1   29[COMRAM] char 
  3147 ;;  flag            1   26[COMRAM] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  2   12[COMRAM] int 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3157 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;Total ram usage:       27 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    1
  3164 ;; This function calls:
  3165 ;;		___lwdiv
  3166 ;;		___lwmod
  3167 ;;		___wmul
  3168 ;;		_isdigit
  3169 ;; This function is called by:
  3170 ;;		_setDiaMesAnio
  3171 ;;		_setHoraMinutoSegundo
  3172 ;;		_ingreso_numero
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text10
  3178  00135A                     __ptext10:
  3179                           	opt stack 0
  3180  00135A                     _sprintf:
  3181                           	opt stack 29
  3182                           
  3183                           ;doprnt.c: 494: va_list ap;
  3184                           ;doprnt.c: 499: signed char c;
  3185                           ;doprnt.c: 501: int width;
  3186                           ;doprnt.c: 506: signed char prec;
  3187                           ;doprnt.c: 508: unsigned char flag;
  3188                           ;doprnt.c: 523: union {
  3189                           ;doprnt.c: 524: unsigned long vd;
  3190                           ;doprnt.c: 525: double integ;
  3191                           ;doprnt.c: 526: } tmpval;
  3192                           ;doprnt.c: 528: unsigned int val;
  3193                           ;doprnt.c: 529: unsigned len;
  3194                           ;doprnt.c: 530: const char * cp;
  3195                           ;doprnt.c: 533: *ap = __va_start();
  3196                           
  3197                           ;incstack = 0
  3198  00135A  0E11               	movlw	low (?_sprintf+4)
  3199  00135C  6E1F               	movwf	sprintf@ap,c
  3200  00135E  0E00               	movlw	high (?_sprintf+4)
  3201  001360  6E20               	movwf	sprintf@ap+1,c
  3202                           
  3203                           ;doprnt.c: 536: while(c = *f++) {
  3204  001362  D17A               	goto	u2600
  3205  001364                     
  3206                           ;doprnt.c: 538: if(c != '%')
  3207  001364  0E25               	movlw	37
  3208  001366  1827               	xorwf	sprintf@c,w,c
  3209  001368  B4D8               	btfsc	status,2,c
  3210  00136A  D009               	goto	l406
  3211                           
  3212                           ;doprnt.c: 540: {
  3213                           ;doprnt.c: 541: ((*sp++ = (c)));
  3214  00136C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3215  001370  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3216  001374  C027  FFDF         	movff	sprintf@c,indf2
  3217  001378  4A0D               	infsnz	sprintf@sp,f,c
  3218  00137A  2A0E               	incf	sprintf@sp+1,f,c
  3219                           
  3220                           ;doprnt.c: 542: continue;
  3221  00137C  D16D               	goto	u2600
  3222  00137E                     l406:
  3223                           
  3224                           ;doprnt.c: 543: }
  3225                           ;doprnt.c: 546: width = 0;
  3226  00137E  0E00               	movlw	0
  3227  001380  6E26               	movwf	sprintf@width+1,c
  3228  001382  0E00               	movlw	0
  3229  001384  6E25               	movwf	sprintf@width,c
  3230                           
  3231                           ;doprnt.c: 548: flag = 0;
  3232  001386  0E00               	movlw	0
  3233  001388  6E1B               	movwf	sprintf@flag,c
  3234                           
  3235                           ;doprnt.c: 551: switch(*f) {
  3236                           
  3237                           ;doprnt.c: 550: for(;;) {
  3238  00138A  D003               	goto	l408
  3239  00138C                     
  3240                           ;doprnt.c: 580: flag |= 0x04;
  3241  00138C  841B               	bsf	sprintf@flag,2,c
  3242                           
  3243                           ;doprnt.c: 581: f++;
  3244  00138E  4A0F               	infsnz	sprintf@f,f,c
  3245  001390  2A10               	incf	sprintf@f+1,f,c
  3246  001392                     l408:
  3247  001392  C00F  FFF6         	movff	sprintf@f,tblptrl
  3248  001396  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3249  00139A                     	if	0	;tblptru may be non-zero
  3250  00139A                     	endif
  3251  00139A                     	if	0	;tblptru may be non-zero
  3252  00139A                     	endif
  3253  00139A  0008               	tblrd		*
  3254  00139C  50F5               	movf	tablat,w,c
  3255                           
  3256                           ; Switch size 1, requested type "space"
  3257                           ; Number of cases is 1, Range of values is 48 to 48
  3258                           ; switch strategies available:
  3259                           ; Name         Instructions Cycles
  3260                           ; simple_byte            4     3 (average)
  3261                           ;	Chosen strategy is simple_byte
  3262  00139E  0A30               	xorlw	48	; case 48
  3263  0013A0  B4D8               	btfsc	status,2,c
  3264  0013A2  D7F4               	goto	l409
  3265                           
  3266                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3267                           
  3268                           ;doprnt.c: 586: }
  3269                           
  3270                           ;doprnt.c: 585: break;
  3271  0013A4  C00F  FFF6         	movff	sprintf@f,tblptrl
  3272  0013A8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3273  0013AC                     	if	0	;tblptru may be non-zero
  3274  0013AC                     	endif
  3275  0013AC                     	if	0	;tblptru may be non-zero
  3276  0013AC                     	endif
  3277  0013AC  0008               	tblrd		*
  3278  0013AE  50F5               	movf	tablat,w,c
  3279  0013B0  ECEC  F011         	call	_isdigit
  3280  0013B4  A0D8               	btfss	status,0,c
  3281  0013B6  D0AD               	goto	l416
  3282                           
  3283                           ;doprnt.c: 598: width = 0;
  3284  0013B8  0E00               	movlw	0
  3285  0013BA  6E26               	movwf	sprintf@width+1,c
  3286  0013BC  0E00               	movlw	0
  3287  0013BE  6E25               	movwf	sprintf@width,c
  3288  0013C0                     
  3289                           ;doprnt.c: 600: width *= 10;
  3290  0013C0  C025  F001         	movff	sprintf@width,___wmul@multiplier
  3291  0013C4  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  3292  0013C8  0E00               	movlw	0
  3293  0013CA  6E04               	movwf	___wmul@multiplicand+1,c
  3294  0013CC  0E0A               	movlw	10
  3295  0013CE  6E03               	movwf	___wmul@multiplicand,c
  3296  0013D0  ECC8  F011         	call	___wmul	;wreg free
  3297  0013D4  C001  F025         	movff	?___wmul,sprintf@width
  3298  0013D8  C002  F026         	movff	?___wmul+1,sprintf@width+1
  3299                           
  3300                           ;doprnt.c: 601: width += *f++ - '0';
  3301  0013DC  0ED0               	movlw	208
  3302  0013DE  6E17               	movwf	??_sprintf& (0+255),c
  3303  0013E0  0EFF               	movlw	255
  3304  0013E2  6E18               	movwf	(??_sprintf+1)& (0+255),c
  3305  0013E4  C00F  FFF6         	movff	sprintf@f,tblptrl
  3306  0013E8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3307  0013EC                     	if	0	;tblptru may be non-zero
  3308  0013EC                     	endif
  3309  0013EC                     	if	0	;tblptru may be non-zero
  3310  0013EC                     	endif
  3311  0013EC  0008               	tblrd		*
  3312  0013EE  50F5               	movf	tablat,w,c
  3313  0013F0  6E19               	movwf	(??_sprintf+2)& (0+255),c
  3314  0013F2  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  3315  0013F4  5017               	movf	??_sprintf,w,c
  3316  0013F6  2619               	addwf	??_sprintf+2,f,c
  3317  0013F8  5018               	movf	??_sprintf+1,w,c
  3318  0013FA  221A               	addwfc	??_sprintf+3,f,c
  3319  0013FC  5019               	movf	??_sprintf+2,w,c
  3320  0013FE  2625               	addwf	sprintf@width,f,c
  3321  001400  501A               	movf	??_sprintf+3,w,c
  3322  001402  2226               	addwfc	sprintf@width+1,f,c
  3323  001404  4A0F               	infsnz	sprintf@f,f,c
  3324  001406  2A10               	incf	sprintf@f+1,f,c
  3325                           
  3326                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3327  001408  C00F  FFF6         	movff	sprintf@f,tblptrl
  3328  00140C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3329  001410                     	if	0	;tblptru may be non-zero
  3330  001410                     	endif
  3331  001410                     	if	0	;tblptru may be non-zero
  3332  001410                     	endif
  3333  001410  0008               	tblrd		*
  3334  001412  50F5               	movf	tablat,w,c
  3335  001414  ECEC  F011         	call	_isdigit
  3336  001418  A0D8               	btfss	status,0,c
  3337  00141A  D07B               	goto	l416
  3338  00141C  D7D1               	goto	l414
  3339  00141E                     
  3340                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3341  00141E  C01F  FFD9         	movff	sprintf@ap,fsr2l
  3342  001422  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  3343  001426  CFDE F021          	movff	postinc2,sprintf@cp
  3344  00142A  CFDD F022          	movff	postdec2,sprintf@cp+1
  3345  00142E  0E02               	movlw	2
  3346  001430  261F               	addwf	sprintf@ap,f,c
  3347  001432  0E00               	movlw	0
  3348  001434  2220               	addwfc	sprintf@ap+1,f,c
  3349                           
  3350                           ;doprnt.c: 740: if(!cp)
  3351  001436  5021               	movf	sprintf@cp,w,c
  3352  001438  1022               	iorwf	sprintf@cp+1,w,c
  3353  00143A  A4D8               	btfss	status,2,c
  3354  00143C  D004               	goto	l420
  3355                           
  3356                           ;doprnt.c: 741: cp = "(null)";
  3357  00143E  0E58               	movlw	low STR_17
  3358  001440  6E21               	movwf	sprintf@cp,c
  3359  001442  0E0F               	movlw	high STR_17
  3360  001444  6E22               	movwf	sprintf@cp+1,c
  3361  001446                     l420:
  3362                           
  3363                           ;doprnt.c: 745: len = 0;
  3364  001446  0E00               	movlw	0
  3365  001448  6E24               	movwf	sprintf@len+1,c
  3366  00144A  0E00               	movlw	0
  3367  00144C  6E23               	movwf	sprintf@len,c
  3368                           
  3369                           ;doprnt.c: 746: while(cp[len])
  3370  00144E  D002               	goto	l421
  3371  001450                     
  3372                           ;doprnt.c: 747: len++;
  3373  001450  4A23               	infsnz	sprintf@len,f,c
  3374  001452  2A24               	incf	sprintf@len+1,f,c
  3375  001454                     l421:
  3376  001454  5023               	movf	sprintf@len,w,c
  3377  001456  2421               	addwf	sprintf@cp,w,c
  3378  001458  6E17               	movwf	??_sprintf& (0+255),c
  3379  00145A  5024               	movf	sprintf@len+1,w,c
  3380  00145C  2022               	addwfc	sprintf@cp+1,w,c
  3381  00145E  6E18               	movwf	(??_sprintf+1)& (0+255),c
  3382  001460  C017  FFF6         	movff	??_sprintf,tblptrl
  3383  001464  C018  FFF7         	movff	??_sprintf+1,tblptrh
  3384  001468  6AF8               	clrf	tblptru,c
  3385  00146A  0E0E               	movlw	(high __ramtop+-1)
  3386  00146C  64F7               	cpfsgt	tblptrh,c
  3387  00146E  D003               	bra	u2457
  3388  001470  0008               	tblrd		*
  3389  001472  50F5               	movf	tablat,w,c
  3390  001474  D005               	bra	u2450
  3391  001476                     u2457:
  3392  001476  CFF6 FFE9          	movff	tblptrl,fsr0l
  3393  00147A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3394  00147E  50EF               	movf	indf0,w,c
  3395  001480                     u2450:
  3396  001480  0900               	iorlw	0
  3397  001482  A4D8               	btfss	status,2,c
  3398  001484  D7E5               	goto	l422
  3399                           
  3400                           ;doprnt.c: 757: if(width > len)
  3401  001486  5025               	movf	sprintf@width,w,c
  3402  001488  5C23               	subwf	sprintf@len,w,c
  3403  00148A  5026               	movf	sprintf@width+1,w,c
  3404  00148C  5824               	subwfb	sprintf@len+1,w,c
  3405  00148E  B0D8               	btfsc	status,0,c
  3406  001490  D005               	goto	l424
  3407                           
  3408                           ;doprnt.c: 758: width -= len;
  3409  001492  5023               	movf	sprintf@len,w,c
  3410  001494  5E25               	subwf	sprintf@width,f,c
  3411  001496  5024               	movf	sprintf@len+1,w,c
  3412  001498  5A26               	subwfb	sprintf@width+1,f,c
  3413  00149A  D00D               	goto	l426
  3414  00149C                     l424:
  3415                           
  3416                           ;doprnt.c: 759: else
  3417                           ;doprnt.c: 760: width = 0;
  3418  00149C  0E00               	movlw	0
  3419  00149E  6E26               	movwf	sprintf@width+1,c
  3420  0014A0  0E00               	movlw	0
  3421  0014A2  6E25               	movwf	sprintf@width,c
  3422                           
  3423                           ;doprnt.c: 764: while(width--)
  3424  0014A4  D008               	goto	l426
  3425  0014A6                     l2747:
  3426                           
  3427                           ;doprnt.c: 765: ((*sp++ = (' ')));
  3428  0014A6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3429  0014AA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3430  0014AE  0E20               	movlw	32
  3431  0014B0  6EDF               	movwf	indf2,c
  3432  0014B2  4A0D               	infsnz	sprintf@sp,f,c
  3433  0014B4  2A0E               	incf	sprintf@sp+1,f,c
  3434  0014B6                     l426:
  3435  0014B6  0625               	decf	sprintf@width,f,c
  3436  0014B8  A0D8               	btfss	status,0,c
  3437  0014BA  0626               	decf	sprintf@width+1,f,c
  3438  0014BC  2825               	incf	sprintf@width,w,c
  3439  0014BE  E1F3               	bnz	l2747
  3440  0014C0  2826               	incf	sprintf@width+1,w,c
  3441  0014C2  B4D8               	btfsc	status,2,c
  3442  0014C4  D01A               	goto	l429
  3443  0014C6  D7EF               	goto	l427
  3444  0014C8                     l2753:
  3445                           
  3446                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  3447  0014C8  C021  FFF6         	movff	sprintf@cp,tblptrl
  3448  0014CC  C022  FFF7         	movff	sprintf@cp+1,tblptrh
  3449  0014D0  6AF8               	clrf	tblptru,c
  3450  0014D2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3451  0014D6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3452  0014DA  0E0E               	movlw	(high __ramtop+-1)
  3453  0014DC  64F7               	cpfsgt	tblptrh,c
  3454  0014DE  D003               	bra	u2497
  3455  0014E0  0008               	tblrd		*
  3456  0014E2  50F5               	movf	tablat,w,c
  3457  0014E4  D005               	bra	u2490
  3458  0014E6                     u2497:
  3459  0014E6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3460  0014EA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3461  0014EE  50EF               	movf	indf0,w,c
  3462  0014F0                     u2490:
  3463  0014F0  6EDF               	movwf	indf2,c
  3464  0014F2  4A21               	infsnz	sprintf@cp,f,c
  3465  0014F4  2A22               	incf	sprintf@cp+1,f,c
  3466  0014F6  4A0D               	infsnz	sprintf@sp,f,c
  3467  0014F8  2A0E               	incf	sprintf@sp+1,f,c
  3468  0014FA                     l429:
  3469  0014FA  0623               	decf	sprintf@len,f,c
  3470  0014FC  A0D8               	btfss	status,0,c
  3471  0014FE  0624               	decf	sprintf@len+1,f,c
  3472  001500  2823               	incf	sprintf@len,w,c
  3473  001502  E1E2               	bnz	l2753
  3474  001504  2824               	incf	sprintf@len+1,w,c
  3475  001506  B4D8               	btfsc	status,2,c
  3476  001508  D0A7               	goto	u2600
  3477  00150A  D7DE               	goto	l430
  3478  00150C                     
  3479                           ;doprnt.c: 818: flag |= 0xC0;
  3480  00150C  0EC0               	movlw	192
  3481  00150E  121B               	iorwf	sprintf@flag,f,c
  3482                           
  3483                           ;doprnt.c: 822: }
  3484                           
  3485                           ;doprnt.c: 819: break;
  3486  001510  D014               	goto	l434
  3487  001512                     l416:
  3488  001512  C00F  FFF6         	movff	sprintf@f,tblptrl
  3489  001516  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3490  00151A  4A0F               	infsnz	sprintf@f,f,c
  3491  00151C  2A10               	incf	sprintf@f+1,f,c
  3492  00151E                     	if	0	;tblptru may be non-zero
  3493  00151E                     	endif
  3494  00151E                     	if	0	;tblptru may be non-zero
  3495  00151E                     	endif
  3496  00151E  0008               	tblrd		*
  3497  001520  CFF5 F027          	movff	tablat,sprintf@c
  3498  001524  5027               	movf	sprintf@c,w,c
  3499                           
  3500                           ; Switch size 1, requested type "space"
  3501                           ; Number of cases is 3, Range of values is 0 to 117
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte           10     6 (average)
  3505                           ;	Chosen strategy is simple_byte
  3506  001526  0A00               	xorlw	0	; case 0
  3507  001528  B4D8               	btfsc	status,2,c
  3508  00152A  D0A2               	goto	u2610
  3509  00152C  0A73               	xorlw	115	; case 115
  3510  00152E  B4D8               	btfsc	status,2,c
  3511  001530  D776               	goto	l419
  3512  001532  0A06               	xorlw	6	; case 117
  3513  001534  B4D8               	btfsc	status,2,c
  3514  001536  D7EA               	goto	l433
  3515  001538  D08F               	goto	u2600
  3516  00153A                     l434:
  3517                           
  3518                           ;doprnt.c: 1273: {
  3519                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3520  00153A  C01F  FFD9         	movff	sprintf@ap,fsr2l
  3521  00153E  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  3522  001542  CFDE F01C          	movff	postinc2,sprintf@val
  3523  001546  CFDD F01D          	movff	postdec2,sprintf@val+1
  3524  00154A  0E02               	movlw	2
  3525  00154C  261F               	addwf	sprintf@ap,f,c
  3526  00154E  0E00               	movlw	0
  3527  001550  2220               	addwfc	sprintf@ap+1,f,c
  3528                           
  3529                           ;doprnt.c: 1287: }
  3530                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3531  001552  0E01               	movlw	1
  3532  001554  6E27               	movwf	sprintf@c,c
  3533  001556                     l2773:
  3534  001556  0E05               	movlw	5
  3535  001558  1827               	xorwf	sprintf@c,w,c
  3536  00155A  B4D8               	btfsc	status,2,c
  3537  00155C  D012               	goto	u2530
  3538                           
  3539                           ;doprnt.c: 1306: if(val < dpowers[c])
  3540  00155E  5027               	movf	sprintf@c,w,c
  3541  001560  0D02               	mullw	2
  3542  001562  0E01               	movlw	low _dpowers
  3543  001564  24F3               	addwf	prodl,w,c
  3544  001566  6EF6               	movwf	tblptrl,c
  3545  001568  0E0F               	movlw	high _dpowers
  3546  00156A  20F4               	addwfc	prodh,w,c
  3547  00156C  6EF7               	movwf	tblptrh,c
  3548  00156E                     	if	0	;There are less than 3 active tblptr bytes
  3549  00156E                     	endif
  3550  00156E  0009               	tblrd		*+
  3551  001570  50F5               	movf	tablat,w,c
  3552  001572  5C1C               	subwf	sprintf@val,w,c
  3553  001574  0009               	tblrd		*+
  3554  001576  50F5               	movf	tablat,w,c
  3555  001578  581D               	subwfb	sprintf@val+1,w,c
  3556  00157A  A0D8               	btfss	status,0,c
  3557  00157C  D002               	goto	u2530
  3558                           
  3559                           ;doprnt.c: 1307: break;
  3560  00157E  2A27               	incf	sprintf@c,f,c
  3561  001580  D7EA               	goto	l2773
  3562  001582                     u2530:
  3563                           
  3564                           ;doprnt.c: 1381: if(width > c)
  3565  001582  0E80               	movlw	128
  3566  001584  BE27               	btfsc	sprintf@c,7,c
  3567  001586  0E7F               	movlw	127
  3568  001588  6E17               	movwf	??_sprintf& (0+255),c
  3569  00158A  5025               	movf	sprintf@width,w,c
  3570  00158C  5C27               	subwf	sprintf@c,w,c
  3571  00158E  5026               	movf	sprintf@width+1,w,c
  3572  001590  0A80               	xorlw	128
  3573  001592  5817               	subwfb	??_sprintf& (0+255),w,c
  3574  001594  B0D8               	btfsc	status,0,c
  3575  001596  D007               	goto	l438
  3576                           
  3577                           ;doprnt.c: 1382: width -= c;
  3578  001598  5027               	movf	sprintf@c,w,c
  3579  00159A  5E25               	subwf	sprintf@width,f,c
  3580  00159C  0E00               	movlw	0
  3581  00159E  BE27               	btfsc	sprintf@c,7,c
  3582  0015A0  0EFF               	movlw	255
  3583  0015A2  5A26               	subwfb	sprintf@width+1,f,c
  3584  0015A4  D004               	goto	l439
  3585  0015A6                     l438:
  3586                           
  3587                           ;doprnt.c: 1383: else
  3588                           ;doprnt.c: 1384: width = 0;
  3589  0015A6  0E00               	movlw	0
  3590  0015A8  6E26               	movwf	sprintf@width+1,c
  3591  0015AA  0E00               	movlw	0
  3592  0015AC  6E25               	movwf	sprintf@width,c
  3593  0015AE                     l439:
  3594                           
  3595                           ;doprnt.c: 1387: if(flag & 0x04) {
  3596  0015AE  A41B               	btfss	sprintf@flag,2,c
  3597  0015B0  D010               	goto	l440
  3598  0015B2                     
  3599                           ;doprnt.c: 1415: if(width)
  3600  0015B2  5025               	movf	sprintf@width,w,c
  3601  0015B4  1026               	iorwf	sprintf@width+1,w,c
  3602  0015B6  B4D8               	btfsc	status,2,c
  3603  0015B8  D01F               	goto	u2590
  3604                           
  3605                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  3606                           
  3607                           ;doprnt.c: 1416: do
  3608  0015BA  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3609  0015BE  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3610  0015C2  0E30               	movlw	48
  3611  0015C4  6EDF               	movwf	indf2,c
  3612  0015C6  4A0D               	infsnz	sprintf@sp,f,c
  3613  0015C8  2A0E               	incf	sprintf@sp+1,f,c
  3614                           
  3615                           ;doprnt.c: 1418: while(--width);
  3616  0015CA  0625               	decf	sprintf@width,f,c
  3617  0015CC  A0D8               	btfss	status,0,c
  3618  0015CE  0626               	decf	sprintf@width+1,f,c
  3619  0015D0  D7F0               	goto	L2
  3620  0015D2                     l440:
  3621                           
  3622                           ;doprnt.c: 1422: {
  3623                           ;doprnt.c: 1424: if(width
  3624                           ;doprnt.c: 1428: )
  3625  0015D2  5025               	movf	sprintf@width,w,c
  3626  0015D4  1026               	iorwf	sprintf@width+1,w,c
  3627  0015D6  B4D8               	btfsc	status,2,c
  3628  0015D8  D00F               	goto	u2590
  3629  0015DA                     u2580:
  3630                           
  3631                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3632                           
  3633                           ;doprnt.c: 1429: do
  3634  0015DA  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3635  0015DE  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3636  0015E2  0E20               	movlw	32
  3637  0015E4  6EDF               	movwf	indf2,c
  3638  0015E6  4A0D               	infsnz	sprintf@sp,f,c
  3639  0015E8  2A0E               	incf	sprintf@sp+1,f,c
  3640                           
  3641                           ;doprnt.c: 1431: while(--width);
  3642  0015EA  0625               	decf	sprintf@width,f,c
  3643  0015EC  A0D8               	btfss	status,0,c
  3644  0015EE  0626               	decf	sprintf@width+1,f,c
  3645  0015F0  5025               	movf	sprintf@width,w,c
  3646  0015F2  1026               	iorwf	sprintf@width+1,w,c
  3647  0015F4  A4D8               	btfss	status,2,c
  3648  0015F6  D7F1               	goto	u2580
  3649  0015F8                     u2590:
  3650                           
  3651                           ;doprnt.c: 1469: }
  3652                           ;doprnt.c: 1472: prec = c;
  3653  0015F8  C027  F01E         	movff	sprintf@c,sprintf@prec
  3654                           
  3655                           ;doprnt.c: 1474: while(prec--) {
  3656  0015FC  D029               	goto	l448
  3657  0015FE                     
  3658                           ;doprnt.c: 1478: {
  3659                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3660  0015FE  501E               	movf	sprintf@prec,w,c
  3661  001600  0D02               	mullw	2
  3662  001602  0E01               	movlw	low _dpowers
  3663  001604  24F3               	addwf	prodl,w,c
  3664  001606  6EF6               	movwf	tblptrl,c
  3665  001608  0E0F               	movlw	high _dpowers
  3666  00160A  20F4               	addwfc	prodh,w,c
  3667  00160C  6EF7               	movwf	tblptrh,c
  3668  00160E                     	if	0	;There are less than 3 active tblptr bytes
  3669  00160E                     	endif
  3670  00160E  0009               	tblrd		*+
  3671  001610  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3672  001614  000A               	tblrd		*-
  3673  001616  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3674  00161A  C01C  F001         	movff	sprintf@val,___lwdiv@dividend
  3675  00161E  C01D  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3676  001622  ECF2  F010         	call	___lwdiv	;wreg free
  3677  001626  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3678  00162A  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3679  00162E  0E00               	movlw	0
  3680  001630  6E0B               	movwf	___lwmod@divisor+1,c
  3681  001632  0E0A               	movlw	10
  3682  001634  6E0A               	movwf	___lwmod@divisor,c
  3683  001636  EC8E  F011         	call	___lwmod	;wreg free
  3684  00163A  5008               	movf	?___lwmod,w,c
  3685  00163C  0F30               	addlw	48
  3686  00163E  6E27               	movwf	sprintf@c,c
  3687                           
  3688                           ;doprnt.c: 1523: }
  3689                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3690  001640  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3691  001644  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3692  001648  C027  FFDF         	movff	sprintf@c,indf2
  3693  00164C  4A0D               	infsnz	sprintf@sp,f,c
  3694  00164E  2A0E               	incf	sprintf@sp+1,f,c
  3695  001650                     l448:
  3696  001650  061E               	decf	sprintf@prec,f,c
  3697  001652  281E               	incf	sprintf@prec,w,c
  3698  001654  A4D8               	btfss	status,2,c
  3699  001656  D7D3               	goto	l449
  3700  001658                     u2600:
  3701  001658  C00F  FFF6         	movff	sprintf@f,tblptrl
  3702  00165C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3703  001660  4A0F               	infsnz	sprintf@f,f,c
  3704  001662  2A10               	incf	sprintf@f+1,f,c
  3705  001664                     	if	0	;tblptru may be non-zero
  3706  001664                     	endif
  3707  001664                     	if	0	;tblptru may be non-zero
  3708  001664                     	endif
  3709  001664  0008               	tblrd		*
  3710  001666  CFF5 F027          	movff	tablat,sprintf@c
  3711  00166A  5027               	movf	sprintf@c,w,c
  3712  00166C  A4D8               	btfss	status,2,c
  3713  00166E  D67A               	goto	l405
  3714  001670                     u2610:
  3715                           
  3716                           ;doprnt.c: 1538: *sp = 0;
  3717                           
  3718                           ;doprnt.c: 1525: }
  3719                           ;doprnt.c: 1533: }
  3720                           ;doprnt.c: 1535: alldone:
  3721  001670  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3722  001674  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3723  001678  0E00               	movlw	0
  3724  00167A  6EDF               	movwf	indf2,c
  3725  00167C  0012               	return	
  3726  00167E                     __end_of_sprintf:
  3727                           	opt stack 0
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           indf0	equ	0xFEF
  3735                           postinc0	equ	0xFEE
  3736                           fsr0h	equ	0xFEA
  3737                           fsr0l	equ	0xFE9
  3738                           wreg	equ	0xFE8
  3739                           postdec1	equ	0xFE5
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _isdigit *****************
  3749 ;; Defined at:
  3750 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  c               1    wreg     unsigned char 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  c               1    2[COMRAM] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;		None               void
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3767 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3768 ;;Total ram usage:        3 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_sprintf
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text11
  3778  0023D8                     __ptext11:
  3779                           	opt stack 0
  3780  0023D8                     _isdigit:
  3781                           	opt stack 29
  3782                           
  3783                           ;incstack = 0
  3784                           ;isdigit@c stored from wreg
  3785  0023D8  6E03               	movwf	isdigit@c,c
  3786  0023DA  0E00               	movlw	0
  3787  0023DC  6E02               	movwf	_isdigit$1788,c
  3788  0023DE  0E3A               	movlw	58
  3789  0023E0  6003               	cpfslt	isdigit@c,c
  3790  0023E2  D005               	goto	l892
  3791  0023E4  0E2F               	movlw	47
  3792  0023E6  6403               	cpfsgt	isdigit@c,c
  3793  0023E8  D002               	goto	l892
  3794  0023EA  0E01               	movlw	1
  3795  0023EC  6E02               	movwf	_isdigit$1788,c
  3796  0023EE                     l892:
  3797  0023EE  C002  F001         	movff	_isdigit$1788,??_isdigit
  3798  0023F2  3001               	rrcf	??_isdigit,w,c
  3799  0023F4  0012               	return	
  3800  0023F6                     __end_of_isdigit:
  3801                           	opt stack 0
  3802                           tblptru	equ	0xFF8
  3803                           tblptrh	equ	0xFF7
  3804                           tblptrl	equ	0xFF6
  3805                           tablat	equ	0xFF5
  3806                           prodh	equ	0xFF4
  3807                           prodl	equ	0xFF3
  3808                           indf0	equ	0xFEF
  3809                           postinc0	equ	0xFEE
  3810                           fsr0h	equ	0xFEA
  3811                           fsr0l	equ	0xFE9
  3812                           wreg	equ	0xFE8
  3813                           postdec1	equ	0xFE5
  3814                           fsr1l	equ	0xFE1
  3815                           indf2	equ	0xFDF
  3816                           postinc2	equ	0xFDE
  3817                           postdec2	equ	0xFDD
  3818                           fsr2h	equ	0xFDA
  3819                           fsr2l	equ	0xFD9
  3820                           status	equ	0xFD8
  3821                           
  3822 ;; *************** function ___wmul *****************
  3823 ;; Defined at:
  3824 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  multiplier      2    0[COMRAM] unsigned int 
  3827 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;  product         2    4[COMRAM] unsigned int 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  2    0[COMRAM] unsigned int 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, prodl, prodh
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3839 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3842 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3843 ;;Total ram usage:        6 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_sprintf
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text12
  3853  002390                     __ptext12:
  3854                           	opt stack 0
  3855  002390                     ___wmul:
  3856                           	opt stack 29
  3857                           
  3858                           ;incstack = 0
  3859  002390  5001               	movf	___wmul@multiplier,w,c
  3860  002392  0203               	mulwf	___wmul@multiplicand,c
  3861  002394  CFF3 F005          	movff	prodl,___wmul@product
  3862  002398  CFF4 F006          	movff	prodh,___wmul@product+1
  3863  00239C  5001               	movf	___wmul@multiplier,w,c
  3864  00239E  0204               	mulwf	___wmul@multiplicand+1,c
  3865  0023A0  50F3               	movf	prodl,w,c
  3866  0023A2  2606               	addwf	___wmul@product+1,f,c
  3867  0023A4  5002               	movf	___wmul@multiplier+1,w,c
  3868  0023A6  0203               	mulwf	___wmul@multiplicand,c
  3869  0023A8  50F3               	movf	prodl,w,c
  3870  0023AA  2606               	addwf	___wmul@product+1,f,c
  3871  0023AC  C005  F001         	movff	___wmul@product,?___wmul
  3872  0023B0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3873  0023B4  0012               	return	
  3874  0023B6                     __end_of___wmul:
  3875                           	opt stack 0
  3876                           tblptru	equ	0xFF8
  3877                           tblptrh	equ	0xFF7
  3878                           tblptrl	equ	0xFF6
  3879                           tablat	equ	0xFF5
  3880                           prodh	equ	0xFF4
  3881                           prodl	equ	0xFF3
  3882                           indf0	equ	0xFEF
  3883                           postinc0	equ	0xFEE
  3884                           fsr0h	equ	0xFEA
  3885                           fsr0l	equ	0xFE9
  3886                           wreg	equ	0xFE8
  3887                           postdec1	equ	0xFE5
  3888                           fsr1l	equ	0xFE1
  3889                           indf2	equ	0xFDF
  3890                           postinc2	equ	0xFDE
  3891                           postdec2	equ	0xFDD
  3892                           fsr2h	equ	0xFDA
  3893                           fsr2l	equ	0xFD9
  3894                           status	equ	0xFD8
  3895                           
  3896 ;; *************** function ___lwmod *****************
  3897 ;; Defined at:
  3898 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  dividend        2    7[COMRAM] unsigned int 
  3901 ;;  divisor         2    9[COMRAM] unsigned int 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  counter         1   11[COMRAM] unsigned char 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2    7[COMRAM] unsigned int 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;Total ram usage:        5 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; This function calls:
  3920 ;;		Nothing
  3921 ;; This function is called by:
  3922 ;;		_sprintf
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text13
  3927  00231C                     __ptext13:
  3928                           	opt stack 0
  3929  00231C                     ___lwmod:
  3930                           	opt stack 29
  3931                           
  3932                           ;incstack = 0
  3933  00231C  500A               	movf	___lwmod@divisor,w,c
  3934  00231E  100B               	iorwf	___lwmod@divisor+1,w,c
  3935  002320  B4D8               	btfsc	status,2,c
  3936  002322  D018               	goto	l986
  3937  002324  0E01               	movlw	1
  3938  002326  6E0C               	movwf	___lwmod@counter,c
  3939  002328  D004               	goto	l981
  3940  00232A  90D8               	bcf	status,0,c
  3941  00232C  360A               	rlcf	___lwmod@divisor,f,c
  3942  00232E  360B               	rlcf	___lwmod@divisor+1,f,c
  3943  002330  2A0C               	incf	___lwmod@counter,f,c
  3944  002332                     l981:
  3945  002332  AE0B               	btfss	___lwmod@divisor+1,7,c
  3946  002334  D7FA               	goto	l982
  3947  002336                     u2390:
  3948  002336  500A               	movf	___lwmod@divisor,w,c
  3949  002338  5C08               	subwf	___lwmod@dividend,w,c
  3950  00233A  500B               	movf	___lwmod@divisor+1,w,c
  3951  00233C  5809               	subwfb	___lwmod@dividend+1,w,c
  3952  00233E  A0D8               	btfss	status,0,c
  3953  002340  D004               	goto	l985
  3954  002342  500A               	movf	___lwmod@divisor,w,c
  3955  002344  5E08               	subwf	___lwmod@dividend,f,c
  3956  002346  500B               	movf	___lwmod@divisor+1,w,c
  3957  002348  5A09               	subwfb	___lwmod@dividend+1,f,c
  3958  00234A                     l985:
  3959  00234A  90D8               	bcf	status,0,c
  3960  00234C  320B               	rrcf	___lwmod@divisor+1,f,c
  3961  00234E  320A               	rrcf	___lwmod@divisor,f,c
  3962  002350  2E0C               	decfsz	___lwmod@counter,f,c
  3963  002352  D7F1               	goto	u2390
  3964  002354                     l986:
  3965  002354  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3966  002358  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3967  00235C  0012               	return		;funcret
  3968  00235E                     __end_of___lwmod:
  3969                           	opt stack 0
  3970                           tblptru	equ	0xFF8
  3971                           tblptrh	equ	0xFF7
  3972                           tblptrl	equ	0xFF6
  3973                           tablat	equ	0xFF5
  3974                           prodh	equ	0xFF4
  3975                           prodl	equ	0xFF3
  3976                           indf0	equ	0xFEF
  3977                           postinc0	equ	0xFEE
  3978                           fsr0h	equ	0xFEA
  3979                           fsr0l	equ	0xFE9
  3980                           wreg	equ	0xFE8
  3981                           postdec1	equ	0xFE5
  3982                           fsr1l	equ	0xFE1
  3983                           indf2	equ	0xFDF
  3984                           postinc2	equ	0xFDE
  3985                           postdec2	equ	0xFDD
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990 ;; *************** function ___lwdiv *****************
  3991 ;; Defined at:
  3992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  dividend        2    0[COMRAM] unsigned int 
  3995 ;;  divisor         2    2[COMRAM] unsigned int 
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  quotient        2    4[COMRAM] unsigned int 
  3998 ;;  counter         1    6[COMRAM] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  2    0[COMRAM] unsigned int 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4009 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4011 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4012 ;;Total ram usage:        7 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_sprintf
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text14
  4022  0021E4                     __ptext14:
  4023                           	opt stack 0
  4024  0021E4                     ___lwdiv:
  4025                           	opt stack 29
  4026                           
  4027                           ;incstack = 0
  4028  0021E4  0E00               	movlw	0
  4029  0021E6  6E06               	movwf	___lwdiv@quotient+1,c
  4030  0021E8  0E00               	movlw	0
  4031  0021EA  6E05               	movwf	___lwdiv@quotient,c
  4032  0021EC  5003               	movf	___lwdiv@divisor,w,c
  4033  0021EE  1004               	iorwf	___lwdiv@divisor+1,w,c
  4034  0021F0  B4D8               	btfsc	status,2,c
  4035  0021F2  D01C               	goto	l976
  4036  0021F4  0E01               	movlw	1
  4037  0021F6  6E07               	movwf	___lwdiv@counter,c
  4038  0021F8  D004               	goto	l971
  4039  0021FA  90D8               	bcf	status,0,c
  4040  0021FC  3603               	rlcf	___lwdiv@divisor,f,c
  4041  0021FE  3604               	rlcf	___lwdiv@divisor+1,f,c
  4042  002200  2A07               	incf	___lwdiv@counter,f,c
  4043  002202                     l971:
  4044  002202  AE04               	btfss	___lwdiv@divisor+1,7,c
  4045  002204  D7FA               	goto	l972
  4046  002206                     u2360:
  4047  002206  90D8               	bcf	status,0,c
  4048  002208  3605               	rlcf	___lwdiv@quotient,f,c
  4049  00220A  3606               	rlcf	___lwdiv@quotient+1,f,c
  4050  00220C  5003               	movf	___lwdiv@divisor,w,c
  4051  00220E  5C01               	subwf	___lwdiv@dividend,w,c
  4052  002210  5004               	movf	___lwdiv@divisor+1,w,c
  4053  002212  5802               	subwfb	___lwdiv@dividend+1,w,c
  4054  002214  A0D8               	btfss	status,0,c
  4055  002216  D005               	goto	l975
  4056  002218  5003               	movf	___lwdiv@divisor,w,c
  4057  00221A  5E01               	subwf	___lwdiv@dividend,f,c
  4058  00221C  5004               	movf	___lwdiv@divisor+1,w,c
  4059  00221E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  4060  002220  8005               	bsf	___lwdiv@quotient,0,c
  4061  002222                     l975:
  4062  002222  90D8               	bcf	status,0,c
  4063  002224  3204               	rrcf	___lwdiv@divisor+1,f,c
  4064  002226  3203               	rrcf	___lwdiv@divisor,f,c
  4065  002228  2E07               	decfsz	___lwdiv@counter,f,c
  4066  00222A  D7ED               	goto	u2360
  4067  00222C                     l976:
  4068  00222C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4069  002230  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4070  002234  0012               	return		;funcret
  4071  002236                     __end_of___lwdiv:
  4072                           	opt stack 0
  4073                           tblptru	equ	0xFF8
  4074                           tblptrh	equ	0xFF7
  4075                           tblptrl	equ	0xFF6
  4076                           tablat	equ	0xFF5
  4077                           prodh	equ	0xFF4
  4078                           prodl	equ	0xFF3
  4079                           indf0	equ	0xFEF
  4080                           postinc0	equ	0xFEE
  4081                           fsr0h	equ	0xFEA
  4082                           fsr0l	equ	0xFE9
  4083                           wreg	equ	0xFE8
  4084                           postdec1	equ	0xFE5
  4085                           fsr1l	equ	0xFE1
  4086                           indf2	equ	0xFDF
  4087                           postinc2	equ	0xFDE
  4088                           postdec2	equ	0xFDD
  4089                           fsr2h	equ	0xFDA
  4090                           fsr2l	equ	0xFD9
  4091                           status	equ	0xFD8
  4092                           
  4093 ;; *************** function _lcd_putrs *****************
  4094 ;; Defined at:
  4095 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  4098 ;;		 -> STR_15(17), STR_14(17), STR_12(9), STR_11(9), 
  4099 ;;		 -> STR_10(9), STR_9(7), buffer2(20), 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;		None
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4115 ;;Total ram usage:        2 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    4
  4118 ;; This function calls:
  4119 ;;		_lcd_putc
  4120 ;; This function is called by:
  4121 ;;		_setDiaMesAnio
  4122 ;;		_setHoraMinutoSegundo
  4123 ;;		_titila_texto_insert_password
  4124 ;;		_ingreso_numero
  4125 ;;		_pantalla_contrasenia
  4126 ;;		_main
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text15
  4131  002236                     __ptext15:
  4132                           	opt stack 0
  4133  002236                     _lcd_putrs:
  4134                           	opt stack 25
  4135                           
  4136                           ;unmc_lcd_216.c: 223: while(*ptr){
  4137                           
  4138                           ;incstack = 0
  4139  002236  D014               	goto	l390
  4140  002238                     
  4141                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  4142  002238  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4143  00223C  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4144  002240  6AF8               	clrf	tblptru,c
  4145  002242  0E0E               	movlw	(high __ramtop+-1)
  4146  002244  64F7               	cpfsgt	tblptrh,c
  4147  002246  D003               	bra	u2627
  4148  002248  0008               	tblrd		*
  4149  00224A  50F5               	movf	tablat,w,c
  4150  00224C  D005               	bra	u2620
  4151  00224E                     u2627:
  4152  00224E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4153  002252  CFF7 FFEA          	movff	tblptrh,fsr0h
  4154  002256  50EF               	movf	indf0,w,c
  4155  002258                     u2620:
  4156  002258  EC69  F011         	call	_lcd_putc
  4157  00225C  4A09               	infsnz	lcd_putrs@ptr,f,c
  4158  00225E  2A0A               	incf	lcd_putrs@ptr+1,f,c
  4159  002260                     l390:
  4160  002260  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4161  002264  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4162  002268  6AF8               	clrf	tblptru,c
  4163  00226A  0E0E               	movlw	(high __ramtop+-1)
  4164  00226C  64F7               	cpfsgt	tblptrh,c
  4165  00226E  D003               	bra	u2637
  4166  002270  0008               	tblrd		*
  4167  002272  50F5               	movf	tablat,w,c
  4168  002274  D005               	bra	u2630
  4169  002276                     u2637:
  4170  002276  CFF6 FFE9          	movff	tblptrl,fsr0l
  4171  00227A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4172  00227E  50EF               	movf	indf0,w,c
  4173  002280                     u2630:
  4174  002280  0900               	iorlw	0
  4175  002282  B4D8               	btfsc	status,2,c
  4176  002284  0012               	return	
  4177  002286  D7D8               	goto	l391
  4178  002288                     __end_of_lcd_putrs:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           prodh	equ	0xFF4
  4185                           prodl	equ	0xFF3
  4186                           indf0	equ	0xFEF
  4187                           postinc0	equ	0xFEE
  4188                           fsr0h	equ	0xFEA
  4189                           fsr0l	equ	0xFE9
  4190                           wreg	equ	0xFE8
  4191                           postdec1	equ	0xFE5
  4192                           fsr1l	equ	0xFE1
  4193                           indf2	equ	0xFDF
  4194                           postinc2	equ	0xFDE
  4195                           postdec2	equ	0xFDD
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function _lcd_putc *****************
  4201 ;; Defined at:
  4202 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  c               1    wreg     unsigned char 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  c               1    7[COMRAM] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;                  1    wreg      void 
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;Total ram usage:        1 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    3
  4223 ;; This function calls:
  4224 ;;		_lcd_gotoxy
  4225 ;;		_lcd_send_byte
  4226 ;; This function is called by:
  4227 ;;		_lcd_putrs
  4228 ;;		_lcd_puts
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text16
  4233  0022D2                     __ptext16:
  4234                           	opt stack 0
  4235  0022D2                     _lcd_putc:
  4236                           	opt stack 25
  4237                           
  4238                           ;incstack = 0
  4239                           ;lcd_putc@c stored from wreg
  4240  0022D2  6E08               	movwf	lcd_putc@c,c
  4241                           
  4242                           ;unmc_lcd_216.c: 173: switch(c){
  4243  0022D4  D018               	goto	l369
  4244  0022D6                     
  4245                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  4246  0022D6  0E01               	movlw	1
  4247  0022D8  6E03               	movwf	lcd_send_byte@n,c
  4248  0022DA  0E00               	movlw	0
  4249  0022DC  ECAF  F011         	call	_lcd_send_byte
  4250                           
  4251                           ;unmc_lcd_216.c: 176: break;
  4252  0022E0  0012               	return	
  4253  0022E2                     
  4254                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  4255  0022E2  0E02               	movlw	2
  4256  0022E4  6E05               	movwf	lcd_gotoxy@y,c
  4257  0022E6  0E01               	movlw	1
  4258  0022E8  ECDB  F011         	call	_lcd_gotoxy
  4259                           
  4260                           ;unmc_lcd_216.c: 179: break;
  4261  0022EC  0012               	return	
  4262  0022EE                     
  4263                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  4264  0022EE  0E10               	movlw	16
  4265  0022F0  6E03               	movwf	lcd_send_byte@n,c
  4266  0022F2  0E00               	movlw	0
  4267  0022F4  ECAF  F011         	call	_lcd_send_byte
  4268                           
  4269                           ;unmc_lcd_216.c: 182: break;
  4270  0022F8  0012               	return	
  4271  0022FA                     
  4272                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  4273  0022FA  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  4274  0022FE  0E01               	movlw	1
  4275  002300  ECAF  F011         	call	_lcd_send_byte
  4276                           
  4277                           ;unmc_lcd_216.c: 186: }
  4278                           
  4279                           ;unmc_lcd_216.c: 185: break;
  4280  002304  0012               	return	
  4281  002306                     l369:
  4282  002306  5008               	movf	lcd_putc@c,w,c
  4283                           
  4284                           ; Switch size 1, requested type "space"
  4285                           ; Number of cases is 3, Range of values is 8 to 12
  4286                           ; switch strategies available:
  4287                           ; Name         Instructions Cycles
  4288                           ; simple_byte           10     6 (average)
  4289                           ;	Chosen strategy is simple_byte
  4290  002308  0A08               	xorlw	8	; case 8
  4291  00230A  B4D8               	btfsc	status,2,c
  4292  00230C  D7F0               	goto	l373
  4293  00230E  0A02               	xorlw	2	; case 10
  4294  002310  B4D8               	btfsc	status,2,c
  4295  002312  D7E7               	goto	l372
  4296  002314  0A06               	xorlw	6	; case 12
  4297  002316  B4D8               	btfsc	status,2,c
  4298  002318  D7DE               	goto	l370
  4299  00231A  D7EF               	goto	l374
  4300  00231C                     __end_of_lcd_putc:
  4301                           	opt stack 0
  4302                           tblptru	equ	0xFF8
  4303                           tblptrh	equ	0xFF7
  4304                           tblptrl	equ	0xFF6
  4305                           tablat	equ	0xFF5
  4306                           prodh	equ	0xFF4
  4307                           prodl	equ	0xFF3
  4308                           indf0	equ	0xFEF
  4309                           postinc0	equ	0xFEE
  4310                           fsr0h	equ	0xFEA
  4311                           fsr0l	equ	0xFE9
  4312                           wreg	equ	0xFE8
  4313                           postdec1	equ	0xFE5
  4314                           fsr1l	equ	0xFE1
  4315                           indf2	equ	0xFDF
  4316                           postinc2	equ	0xFDE
  4317                           postdec2	equ	0xFDD
  4318                           fsr2h	equ	0xFDA
  4319                           fsr2l	equ	0xFD9
  4320                           status	equ	0xFD8
  4321                           
  4322 ;; *************** function _lcd_gotoxy *****************
  4323 ;; Defined at:
  4324 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  x               1    wreg     unsigned char 
  4327 ;;  y               1    4[COMRAM] unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  x               1    5[COMRAM] unsigned char 
  4330 ;;  address         1    6[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4340 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4343 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4344 ;;Total ram usage:        3 bytes
  4345 ;; Hardware stack levels used:    1
  4346 ;; Hardware stack levels required when called:    2
  4347 ;; This function calls:
  4348 ;;		_lcd_send_byte
  4349 ;; This function is called by:
  4350 ;;		_setDiaMesAnio
  4351 ;;		_setHoraMinutoSegundo
  4352 ;;		_titila_texto_insert_password
  4353 ;;		_ingreso_numero
  4354 ;;		_pantalla_contrasenia
  4355 ;;		_main
  4356 ;;		_lcd_putc
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text17
  4361  0023B6                     __ptext17:
  4362                           	opt stack 0
  4363  0023B6                     _lcd_gotoxy:
  4364                           	opt stack 25
  4365                           
  4366                           ;incstack = 0
  4367                           ;lcd_gotoxy@x stored from wreg
  4368  0023B6  6E06               	movwf	lcd_gotoxy@x,c
  4369                           
  4370                           ;unmc_lcd_216.c: 159: int8 address;
  4371                           ;unmc_lcd_216.c: 161: if(y != 1)
  4372  0023B8  0405               	decf	lcd_gotoxy@y,w,c
  4373  0023BA  B4D8               	btfsc	status,2,c
  4374  0023BC  D002               	goto	l364
  4375                           
  4376                           ;unmc_lcd_216.c: 162: address = 0x40;
  4377  0023BE  0E40               	movlw	64
  4378  0023C0  D001               	goto	L1
  4379  0023C2                     l364:
  4380                           
  4381                           ;unmc_lcd_216.c: 163: else
  4382                           ;unmc_lcd_216.c: 164: address=0;
  4383  0023C2  0E00               	movlw	0
  4384  0023C4                     L1:
  4385  0023C4  6E07               	movwf	lcd_gotoxy@address,c
  4386                           
  4387                           ;unmc_lcd_216.c: 166: address += x-1;
  4388  0023C6  0406               	decf	lcd_gotoxy@x,w,c
  4389  0023C8  2607               	addwf	lcd_gotoxy@address,f,c
  4390                           
  4391                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  4392  0023CA  5007               	movf	lcd_gotoxy@address,w,c
  4393  0023CC  0980               	iorlw	128
  4394  0023CE  6E03               	movwf	lcd_send_byte@n,c
  4395  0023D0  0E00               	movlw	0
  4396  0023D2  ECAF  F011         	call	_lcd_send_byte
  4397  0023D6  0012               	return		;funcret
  4398  0023D8                     __end_of_lcd_gotoxy:
  4399                           	opt stack 0
  4400                           tblptru	equ	0xFF8
  4401                           tblptrh	equ	0xFF7
  4402                           tblptrl	equ	0xFF6
  4403                           tablat	equ	0xFF5
  4404                           prodh	equ	0xFF4
  4405                           prodl	equ	0xFF3
  4406                           indf0	equ	0xFEF
  4407                           postinc0	equ	0xFEE
  4408                           fsr0h	equ	0xFEA
  4409                           fsr0l	equ	0xFE9
  4410                           wreg	equ	0xFE8
  4411                           postdec1	equ	0xFE5
  4412                           fsr1l	equ	0xFE1
  4413                           indf2	equ	0xFDF
  4414                           postinc2	equ	0xFDE
  4415                           postdec2	equ	0xFDD
  4416                           fsr2h	equ	0xFDA
  4417                           fsr2l	equ	0xFD9
  4418                           status	equ	0xFD8
  4419                           
  4420 ;; *************** function _Write_RTC *****************
  4421 ;; Defined at:
  4422 ;;		line 74 in file "../../headers\unmc_rtcc_01.h"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;		None
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4440 ;;Total ram usage:        0 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    2
  4443 ;; This function calls:
  4444 ;;		_RtccWrOn
  4445 ;;		_RtccWriteDate
  4446 ;;		_RtccWriteTime
  4447 ;;		___awdiv
  4448 ;; This function is called by:
  4449 ;;		_setDiaMesAnio
  4450 ;;		_setHoraMinutoSegundo
  4451 ;;		_setup
  4452 ;;		_main
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text18
  4457  00167E                     __ptext18:
  4458                           	opt stack 0
  4459  00167E                     _Write_RTC:
  4460                           	opt stack 24
  4461                           
  4462                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  4463                           
  4464                           ;incstack = 0
  4465  00167E  EC05  F012         	call	_RtccWrOn	;wreg free
  4466                           
  4467                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  4468  001682  80A3               	bsf	4003,0,c	;volatile
  4469                           
  4470                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  4471  001684  C036  F001         	movff	_segundo,___awdiv@dividend
  4472  001688  C037  F002         	movff	_segundo+1,___awdiv@dividend+1
  4473  00168C  0E00               	movlw	0
  4474  00168E  6E04               	movwf	___awdiv@divisor+1,c
  4475  001690  0E0A               	movlw	10
  4476  001692  6E03               	movwf	___awdiv@divisor,c
  4477  001694  ECFD  F00E         	call	___awdiv	;wreg free
  4478  001698  5001               	movf	?___awdiv,w,c
  4479  00169A  6E5E               	movwf	_segundo_d,c
  4480                           
  4481                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  4482  00169C  505E               	movf	_segundo_d,w,c
  4483  00169E  0D0A               	mullw	10
  4484  0016A0  50F3               	movf	prodl,w,c
  4485  0016A2  0800               	sublw	0
  4486  0016A4  2436               	addwf	_segundo,w,c
  4487  0016A6  0100               	movlb	0	; () banked
  4488  0016A8  6FB2               	movwf	_segundo_u& (0+255),b
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  4492  0016AA  505E               	movf	_segundo_d,w,c
  4493  0016AC  0D10               	mullw	16
  4494  0016AE  50F3               	movf	prodl,w,c
  4495  0016B0  0100               	movlb	0	; () banked
  4496  0016B2  25B2               	addwf	_segundo_u& (0+255),w,b
  4497  0016B4  6E4A               	movwf	_RtccTime+1,c
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  4501  0016B6  C04D  F001         	movff	_minuto,___awdiv@dividend
  4502  0016BA  C04E  F002         	movff	_minuto+1,___awdiv@dividend+1
  4503  0016BE  0E00               	movlw	0
  4504  0016C0  6E04               	movwf	___awdiv@divisor+1,c
  4505  0016C2  0E0A               	movlw	10
  4506  0016C4  6E03               	movwf	___awdiv@divisor,c
  4507  0016C6  ECFD  F00E         	call	___awdiv	;wreg free
  4508  0016CA  5001               	movf	?___awdiv,w,c
  4509  0016CC  6E5D               	movwf	_minuto_d,c
  4510                           
  4511                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  4512  0016CE  505D               	movf	_minuto_d,w,c
  4513  0016D0  0D0A               	mullw	10
  4514  0016D2  50F3               	movf	prodl,w,c
  4515  0016D4  0800               	sublw	0
  4516  0016D6  244D               	addwf	_minuto,w,c
  4517  0016D8  0100               	movlb	0	; () banked
  4518  0016DA  6FB1               	movwf	_minuto_u& (0+255),b
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  4522  0016DC  505D               	movf	_minuto_d,w,c
  4523  0016DE  0D10               	mullw	16
  4524  0016E0  50F3               	movf	prodl,w,c
  4525  0016E2  0100               	movlb	0	; () banked
  4526  0016E4  25B1               	addwf	_minuto_u& (0+255),w,b
  4527  0016E6  6E4B               	movwf	_RtccTime+2,c
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  4531  0016E8  C04F  F001         	movff	_hora,___awdiv@dividend
  4532  0016EC  C050  F002         	movff	_hora+1,___awdiv@dividend+1
  4533  0016F0  0E00               	movlw	0
  4534  0016F2  6E04               	movwf	___awdiv@divisor+1,c
  4535  0016F4  0E0A               	movlw	10
  4536  0016F6  6E03               	movwf	___awdiv@divisor,c
  4537  0016F8  ECFD  F00E         	call	___awdiv	;wreg free
  4538  0016FC  5001               	movf	?___awdiv,w,c
  4539  0016FE  6E5C               	movwf	_hora_d,c
  4540                           
  4541                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  4542  001700  505C               	movf	_hora_d,w,c
  4543  001702  0D0A               	mullw	10
  4544  001704  50F3               	movf	prodl,w,c
  4545  001706  0800               	sublw	0
  4546  001708  244F               	addwf	_hora,w,c
  4547  00170A  0100               	movlb	0	; () banked
  4548  00170C  6FB0               	movwf	_hora_u& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  4552  00170E  505C               	movf	_hora_d,w,c
  4553  001710  0D10               	mullw	16
  4554  001712  50F3               	movf	prodl,w,c
  4555  001714  0100               	movlb	0	; () banked
  4556  001716  25B0               	addwf	_hora_u& (0+255),w,b
  4557  001718  6E4C               	movwf	_RtccTime+3,c
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  4561  00171A  C057  F001         	movff	_anio,___awdiv@dividend
  4562  00171E  C058  F002         	movff	_anio+1,___awdiv@dividend+1
  4563  001722  0E00               	movlw	0
  4564  001724  6E04               	movwf	___awdiv@divisor+1,c
  4565  001726  0E0A               	movlw	10
  4566  001728  6E03               	movwf	___awdiv@divisor,c
  4567  00172A  ECFD  F00E         	call	___awdiv	;wreg free
  4568  00172E  5001               	movf	?___awdiv,w,c
  4569  001730  6E59               	movwf	_anio_d,c
  4570                           
  4571                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  4572  001732  5059               	movf	_anio_d,w,c
  4573  001734  0D0A               	mullw	10
  4574  001736  50F3               	movf	prodl,w,c
  4575  001738  0800               	sublw	0
  4576  00173A  2457               	addwf	_anio,w,c
  4577  00173C  0100               	movlb	0	; () banked
  4578  00173E  6FAC               	movwf	_anio_u& (0+255),b
  4579                           
  4580                           ; BSR set to: 0
  4581                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  4582  001740  5059               	movf	_anio_d,w,c
  4583  001742  0D10               	mullw	16
  4584  001744  50F3               	movf	prodl,w,c
  4585  001746  0100               	movlb	0	; () banked
  4586  001748  25AC               	addwf	_anio_u& (0+255),w,b
  4587  00174A  6E48               	movwf	_RtccDate+3,c
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  4591  00174C  C055  F001         	movff	_mes,___awdiv@dividend
  4592  001750  C056  F002         	movff	_mes+1,___awdiv@dividend+1
  4593  001754  0E00               	movlw	0
  4594  001756  6E04               	movwf	___awdiv@divisor+1,c
  4595  001758  0E0A               	movlw	10
  4596  00175A  6E03               	movwf	___awdiv@divisor,c
  4597  00175C  ECFD  F00E         	call	___awdiv	;wreg free
  4598  001760  5001               	movf	?___awdiv,w,c
  4599  001762  6E5A               	movwf	_mes_d,c
  4600                           
  4601                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  4602  001764  505A               	movf	_mes_d,w,c
  4603  001766  0D0A               	mullw	10
  4604  001768  50F3               	movf	prodl,w,c
  4605  00176A  0800               	sublw	0
  4606  00176C  2455               	addwf	_mes,w,c
  4607  00176E  0100               	movlb	0	; () banked
  4608  001770  6FAE               	movwf	_mes_u& (0+255),b
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  4612  001772  505A               	movf	_mes_d,w,c
  4613  001774  0D10               	mullw	16
  4614  001776  50F3               	movf	prodl,w,c
  4615  001778  0100               	movlb	0	; () banked
  4616  00177A  25AE               	addwf	_mes_u& (0+255),w,b
  4617  00177C  6E47               	movwf	_RtccDate+2,c
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  4621  00177E  C051  F001         	movff	_dia,___awdiv@dividend
  4622  001782  C052  F002         	movff	_dia+1,___awdiv@dividend+1
  4623  001786  0E00               	movlw	0
  4624  001788  6E04               	movwf	___awdiv@divisor+1,c
  4625  00178A  0E0A               	movlw	10
  4626  00178C  6E03               	movwf	___awdiv@divisor,c
  4627  00178E  ECFD  F00E         	call	___awdiv	;wreg free
  4628  001792  5001               	movf	?___awdiv,w,c
  4629  001794  6E5B               	movwf	_fecha_d,c
  4630                           
  4631                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  4632  001796  505B               	movf	_fecha_d,w,c
  4633  001798  0D0A               	mullw	10
  4634  00179A  50F3               	movf	prodl,w,c
  4635  00179C  0800               	sublw	0
  4636  00179E  2451               	addwf	_dia,w,c
  4637  0017A0  0100               	movlb	0	; () banked
  4638  0017A2  6FAF               	movwf	_fecha_u& (0+255),b
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  4642  0017A4  505B               	movf	_fecha_d,w,c
  4643  0017A6  0D10               	mullw	16
  4644  0017A8  50F3               	movf	prodl,w,c
  4645  0017AA  0100               	movlb	0	; () banked
  4646  0017AC  25AF               	addwf	_fecha_u& (0+255),w,b
  4647  0017AE  6E46               	movwf	_RtccDate+1,c
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  4651  0017B0  C053  F0AD         	movff	_diasem,_dia_semana
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  4655  0017B4  C053  F045         	movff	_diasem,_RtccDate
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  4659  0017B8  0E49               	movlw	low _RtccTime
  4660  0017BA  6E01               	movwf	RtccWriteTime@pTm,c
  4661  0017BC  0E00               	movlw	high _RtccTime
  4662  0017BE  6E02               	movwf	RtccWriteTime@pTm+1,c
  4663  0017C0  0E01               	movlw	1
  4664  0017C2  6E03               	movwf	RtccWriteTime@di,c
  4665  0017C4  EC28  F00D         	call	_RtccWriteTime	;wreg free
  4666                           
  4667                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  4668  0017C8  0E45               	movlw	low _RtccDate
  4669  0017CA  6E01               	movwf	RtccWriteDate@pDt,c
  4670  0017CC  0E00               	movlw	high _RtccDate
  4671  0017CE  6E02               	movwf	RtccWriteDate@pDt+1,c
  4672  0017D0  0E01               	movlw	1
  4673  0017D2  6E03               	movwf	RtccWriteDate@di,c
  4674  0017D4  EC8D  F00C         	call	_RtccWriteDate	;wreg free
  4675                           
  4676                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  4677  0017D8  010F               	movlb	15	; () banked
  4678  0017DA  8F3F               	bsf	63,7,b	;volatile
  4679                           
  4680                           ; BSR set to: 15
  4681  0017DC  0012               	return		;funcret
  4682  0017DE                     __end_of_Write_RTC:
  4683                           	opt stack 0
  4684                           tblptru	equ	0xFF8
  4685                           tblptrh	equ	0xFF7
  4686                           tblptrl	equ	0xFF6
  4687                           tablat	equ	0xFF5
  4688                           prodh	equ	0xFF4
  4689                           prodl	equ	0xFF3
  4690                           indf0	equ	0xFEF
  4691                           postinc0	equ	0xFEE
  4692                           fsr0h	equ	0xFEA
  4693                           fsr0l	equ	0xFE9
  4694                           wreg	equ	0xFE8
  4695                           postdec1	equ	0xFE5
  4696                           fsr1l	equ	0xFE1
  4697                           indf2	equ	0xFDF
  4698                           postinc2	equ	0xFDE
  4699                           postdec2	equ	0xFDD
  4700                           fsr2h	equ	0xFDA
  4701                           fsr2l	equ	0xFD9
  4702                           status	equ	0xFD8
  4703                           
  4704 ;; *************** function ___awdiv *****************
  4705 ;; Defined at:
  4706 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;  dividend        2    0[COMRAM] int 
  4709 ;;  divisor         2    2[COMRAM] int 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  quotient        2    6[COMRAM] int 
  4712 ;;  sign            1    5[COMRAM] unsigned char 
  4713 ;;  counter         1    4[COMRAM] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  2    0[COMRAM] int 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4724 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;Total ram usage:        8 bytes
  4728 ;; Hardware stack levels used:    1
  4729 ;; This function calls:
  4730 ;;		Nothing
  4731 ;; This function is called by:
  4732 ;;		_Write_RTC
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735                           
  4736                           	psect	text19
  4737  001DFA                     __ptext19:
  4738                           	opt stack 0
  4739  001DFA                     ___awdiv:
  4740                           	opt stack 25
  4741                           
  4742                           ; BSR set to: 15
  4743                           ;incstack = 0
  4744  001DFA  0E00               	movlw	0
  4745  001DFC  6E06               	movwf	___awdiv@sign,c
  4746  001DFE  AE04               	btfss	___awdiv@divisor+1,7,c
  4747  001E00  D006               	goto	l709
  4748  001E02  6C03               	negf	___awdiv@divisor,c
  4749  001E04  1E04               	comf	___awdiv@divisor+1,f,c
  4750  001E06  B0D8               	btfsc	status,0,c
  4751  001E08  2A04               	incf	___awdiv@divisor+1,f,c
  4752  001E0A  0E01               	movlw	1
  4753  001E0C  6E06               	movwf	___awdiv@sign,c
  4754  001E0E                     l709:
  4755  001E0E  AE02               	btfss	___awdiv@dividend+1,7,c
  4756  001E10  D006               	goto	l710
  4757  001E12  6C01               	negf	___awdiv@dividend,c
  4758  001E14  1E02               	comf	___awdiv@dividend+1,f,c
  4759  001E16  B0D8               	btfsc	status,0,c
  4760  001E18  2A02               	incf	___awdiv@dividend+1,f,c
  4761  001E1A  0E01               	movlw	1
  4762  001E1C  1A06               	xorwf	___awdiv@sign,f,c
  4763  001E1E                     l710:
  4764  001E1E  0E00               	movlw	0
  4765  001E20  6E08               	movwf	___awdiv@quotient+1,c
  4766  001E22  0E00               	movlw	0
  4767  001E24  6E07               	movwf	___awdiv@quotient,c
  4768  001E26  5003               	movf	___awdiv@divisor,w,c
  4769  001E28  1004               	iorwf	___awdiv@divisor+1,w,c
  4770  001E2A  B4D8               	btfsc	status,2,c
  4771  001E2C  D01C               	goto	l717
  4772  001E2E  0E01               	movlw	1
  4773  001E30  6E05               	movwf	___awdiv@counter,c
  4774  001E32  D004               	goto	l712
  4775  001E34  90D8               	bcf	status,0,c
  4776  001E36  3603               	rlcf	___awdiv@divisor,f,c
  4777  001E38  3604               	rlcf	___awdiv@divisor+1,f,c
  4778  001E3A  2A05               	incf	___awdiv@counter,f,c
  4779  001E3C                     l712:
  4780  001E3C  AE04               	btfss	___awdiv@divisor+1,7,c
  4781  001E3E  D7FA               	goto	l713
  4782  001E40                     u2320:
  4783  001E40  90D8               	bcf	status,0,c
  4784  001E42  3607               	rlcf	___awdiv@quotient,f,c
  4785  001E44  3608               	rlcf	___awdiv@quotient+1,f,c
  4786  001E46  5003               	movf	___awdiv@divisor,w,c
  4787  001E48  5C01               	subwf	___awdiv@dividend,w,c
  4788  001E4A  5004               	movf	___awdiv@divisor+1,w,c
  4789  001E4C  5802               	subwfb	___awdiv@dividend+1,w,c
  4790  001E4E  A0D8               	btfss	status,0,c
  4791  001E50  D005               	goto	l716
  4792  001E52  5003               	movf	___awdiv@divisor,w,c
  4793  001E54  5E01               	subwf	___awdiv@dividend,f,c
  4794  001E56  5004               	movf	___awdiv@divisor+1,w,c
  4795  001E58  5A02               	subwfb	___awdiv@dividend+1,f,c
  4796  001E5A  8007               	bsf	___awdiv@quotient,0,c
  4797  001E5C                     l716:
  4798  001E5C  90D8               	bcf	status,0,c
  4799  001E5E  3204               	rrcf	___awdiv@divisor+1,f,c
  4800  001E60  3203               	rrcf	___awdiv@divisor,f,c
  4801  001E62  2E05               	decfsz	___awdiv@counter,f,c
  4802  001E64  D7ED               	goto	u2320
  4803  001E66                     l717:
  4804  001E66  5006               	movf	___awdiv@sign,w,c
  4805  001E68  B4D8               	btfsc	status,2,c
  4806  001E6A  D004               	goto	l718
  4807  001E6C  6C07               	negf	___awdiv@quotient,c
  4808  001E6E  1E08               	comf	___awdiv@quotient+1,f,c
  4809  001E70  B0D8               	btfsc	status,0,c
  4810  001E72  2A08               	incf	___awdiv@quotient+1,f,c
  4811  001E74                     l718:
  4812  001E74  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4813  001E78  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4814  001E7C  0012               	return	
  4815  001E7E                     __end_of___awdiv:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           indf0	equ	0xFEF
  4824                           postinc0	equ	0xFEE
  4825                           fsr0h	equ	0xFEA
  4826                           fsr0l	equ	0xFE9
  4827                           wreg	equ	0xFE8
  4828                           postdec1	equ	0xFE5
  4829                           fsr1l	equ	0xFE1
  4830                           indf2	equ	0xFDF
  4831                           postinc2	equ	0xFDE
  4832                           postdec2	equ	0xFDD
  4833                           fsr2h	equ	0xFDA
  4834                           fsr2l	equ	0xFD9
  4835                           status	equ	0xFD8
  4836                           
  4837 ;; *************** function _RtccWriteTime *****************
  4838 ;; Defined at:
  4839 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  pTm             2    0[COMRAM] PTR const struct .
  4842 ;;		 -> RtccTime(4), 
  4843 ;;  di              1    2[COMRAM] enum E7121
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  tempHourWDay    2    9[COMRAM] struct .
  4846 ;;  tempMinSec      2    7[COMRAM] struct .
  4847 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4848 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4849 ;;  wasOn           1    4[COMRAM] enum E7121
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      enum E6550
  4852 ;; Registers used:
  4853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4859 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4860 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4862 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;Total ram usage:       11 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    1
  4866 ;; This function calls:
  4867 ;;		_RtccWrOn
  4868 ;; This function is called by:
  4869 ;;		_Write_RTC
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text20
  4874  001A50                     __ptext20:
  4875                           	opt stack 0
  4876  001A50                     _RtccWriteTime:
  4877                           	opt stack 24
  4878                           
  4879                           ;incstack = 0
  4880  001A50  0E00               	movlw	0
  4881  001A52  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4882  001A54  EE20 F002          	lfsr	2,2
  4883  001A58  5001               	movf	RtccWriteTime@pTm,w,c
  4884  001A5A  26D9               	addwf	fsr2l,f,c
  4885  001A5C  5002               	movf	RtccWriteTime@pTm+1,w,c
  4886  001A5E  22DA               	addwfc	fsr2h,f,c
  4887  001A60  0E5A               	movlw	90
  4888  001A62  60DF               	cpfslt	indf2,c
  4889  001A64  0012               	return	
  4890  001A66  EE20 F001          	lfsr	2,1
  4891  001A6A  5001               	movf	RtccWriteTime@pTm,w,c
  4892  001A6C  26D9               	addwf	fsr2l,f,c
  4893  001A6E  5002               	movf	RtccWriteTime@pTm+1,w,c
  4894  001A70  22DA               	addwfc	fsr2h,f,c
  4895  001A72  0E5A               	movlw	90
  4896  001A74  60DF               	cpfslt	indf2,c
  4897  001A76  0012               	return	
  4898  001A78  EE20 F003          	lfsr	2,3
  4899  001A7C  5001               	movf	RtccWriteTime@pTm,w,c
  4900  001A7E  26D9               	addwf	fsr2l,f,c
  4901  001A80  5002               	movf	RtccWriteTime@pTm+1,w,c
  4902  001A82  22DA               	addwfc	fsr2h,f,c
  4903  001A84  0E24               	movlw	36
  4904  001A86  64DF               	cpfsgt	indf2,c
  4905  001A88  D001               	goto	l529
  4906  001A8A  0012               	return	
  4907  001A8C                     l529:
  4908  001A8C  EE20 F002          	lfsr	2,2
  4909  001A90  5001               	movf	RtccWriteTime@pTm,w,c
  4910  001A92  26D9               	addwf	fsr2l,f,c
  4911  001A94  5002               	movf	RtccWriteTime@pTm+1,w,c
  4912  001A96  22DA               	addwfc	fsr2h,f,c
  4913  001A98  50DF               	movf	indf2,w,c
  4914  001A9A  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  4915  001A9C  EE20 F001          	lfsr	2,1
  4916  001AA0  5001               	movf	RtccWriteTime@pTm,w,c
  4917  001AA2  26D9               	addwf	fsr2l,f,c
  4918  001AA4  5002               	movf	RtccWriteTime@pTm+1,w,c
  4919  001AA6  22DA               	addwfc	fsr2h,f,c
  4920  001AA8  50DF               	movf	indf2,w,c
  4921  001AAA  6E08               	movwf	RtccWriteTime@tempMinSec,c
  4922  001AAC  5003               	movf	RtccWriteTime@di,w,c
  4923  001AAE  A4D8               	btfss	status,2,c
  4924  001AB0  9CF2               	bcf	intcon,6,c	;volatile
  4925  001AB2  010F               	movlb	15	; () banked
  4926  001AB4  0E00               	movlw	0
  4927  001AB6  BB3F               	btfsc	63,5,b	;volatile
  4928  001AB8  0E01               	movlw	1
  4929  001ABA  6E07               	movwf	RtccWriteTime@wasWrEn,c
  4930  001ABC  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4931  001ABE  B4D8               	btfsc	status,2,c
  4932                           
  4933                           ; BSR set to: 15
  4934  001AC0  EC05  F012         	call	_RtccWrOn	;wreg free
  4935  001AC4  010F               	movlb	15	; () banked
  4936  001AC6  0E00               	movlw	0
  4937  001AC8  BF3F               	btfsc	63,7,b	;volatile
  4938  001ACA  0E01               	movlw	1
  4939  001ACC  6E05               	movwf	RtccWriteTime@wasOn,c
  4940  001ACE  5005               	movf	RtccWriteTime@wasOn,w,c
  4941  001AD0  B4D8               	btfsc	status,2,c
  4942  001AD2  D006               	goto	l535
  4943                           
  4944                           ; BSR set to: 15
  4945  001AD4  0E00               	movlw	0
  4946  001AD6  BE91               	btfsc	3985,7,c	;volatile
  4947  001AD8  0E01               	movlw	1
  4948  001ADA  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4949                           
  4950                           ; BSR set to: 15
  4951  001ADC  010F               	movlb	15	; () banked
  4952  001ADE  9F3F               	bcf	63,7,b	;volatile
  4953  001AE0                     l535:
  4954                           
  4955                           ; BSR set to: 15
  4956                           
  4957                           ; BSR set to: 15
  4958  001AE0  0EFC               	movlw	252
  4959  001AE2  010F               	movlb	15	; () banked
  4960  001AE4  173F               	andwf	63,f,b	;volatile
  4961  001AE6  010F               	movlb	15	; () banked
  4962  001AE8  813F               	bsf	63,0,b	;volatile
  4963                           
  4964                           ; BSR set to: 15
  4965  001AEA  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  4966                           
  4967                           ; BSR set to: 15
  4968  001AEE  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  4969                           
  4970                           ; BSR set to: 15
  4971  001AF2  EE20 F003          	lfsr	2,3
  4972  001AF6  5001               	movf	RtccWriteTime@pTm,w,c
  4973  001AF8  26D9               	addwf	fsr2l,f,c
  4974  001AFA  5002               	movf	RtccWriteTime@pTm+1,w,c
  4975  001AFC  22DA               	addwfc	fsr2h,f,c
  4976  001AFE  50DF               	movf	indf2,w,c
  4977  001B00  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  4978                           
  4979                           ; BSR set to: 15
  4980  001B02  0EFC               	movlw	252
  4981  001B04  010F               	movlb	15	; () banked
  4982  001B06  173F               	andwf	63,f,b	;volatile
  4983                           
  4984                           ; BSR set to: 15
  4985  001B08  010F               	movlb	15	; () banked
  4986  001B0A  813F               	bsf	63,0,b	;volatile
  4987                           
  4988                           ; BSR set to: 15
  4989  001B0C  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  4990                           
  4991                           ; BSR set to: 15
  4992  001B10  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  4993                           
  4994                           ; BSR set to: 15
  4995  001B14  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  4996                           
  4997                           ; BSR set to: 15
  4998  001B18  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  4999                           
  5000                           ; BSR set to: 15
  5001  001B1C  5005               	movf	RtccWriteTime@wasOn,w,c
  5002  001B1E  B4D8               	btfsc	status,2,c
  5003  001B20  D00B               	goto	l536
  5004                           
  5005                           ; BSR set to: 15
  5006  001B22  010F               	movlb	15	; () banked
  5007  001B24  8F3F               	bsf	63,7,b	;volatile
  5008                           
  5009                           ; BSR set to: 15
  5010  001B26  5006               	movf	RtccWriteTime@wasAlrm,w,c
  5011  001B28  A4D8               	btfss	status,2,c
  5012                           
  5013                           ; BSR set to: 15
  5014  001B2A  8E91               	bsf	3985,7,c	;volatile
  5015                           
  5016                           ; BSR set to: 15
  5017                           
  5018                           ; BSR set to: 15
  5019  001B2C  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5020  001B2E  B4D8               	btfsc	status,2,c
  5021  001B30  D008               	goto	l540
  5022                           
  5023                           ; BSR set to: 15
  5024  001B32  EC05  F012         	call	_RtccWrOn	;wreg free
  5025  001B36  D005               	goto	l540
  5026  001B38                     l536:
  5027  001B38  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5028  001B3A  A4D8               	btfss	status,2,c
  5029  001B3C  D002               	goto	l540
  5030  001B3E  010F               	movlb	15	; () banked
  5031  001B40  9B3F               	bcf	63,5,b	;volatile
  5032  001B42                     l540:
  5033                           
  5034                           ; BSR set to: 15
  5035                           
  5036                           ; BSR set to: 15
  5037  001B42  5003               	movf	RtccWriteTime@di,w,c
  5038  001B44  B4D8               	btfsc	status,2,c
  5039  001B46  0012               	return	
  5040  001B48  8CF2               	bsf	intcon,6,c	;volatile
  5041  001B4A  0012               	return	
  5042  001B4C                     __end_of_RtccWriteTime:
  5043                           	opt stack 0
  5044                           tblptru	equ	0xFF8
  5045                           tblptrh	equ	0xFF7
  5046                           tblptrl	equ	0xFF6
  5047                           tablat	equ	0xFF5
  5048                           prodh	equ	0xFF4
  5049                           prodl	equ	0xFF3
  5050                           intcon	equ	0xFF2
  5051                           indf0	equ	0xFEF
  5052                           postinc0	equ	0xFEE
  5053                           fsr0h	equ	0xFEA
  5054                           fsr0l	equ	0xFE9
  5055                           wreg	equ	0xFE8
  5056                           postdec1	equ	0xFE5
  5057                           fsr1l	equ	0xFE1
  5058                           indf2	equ	0xFDF
  5059                           postinc2	equ	0xFDE
  5060                           postdec2	equ	0xFDD
  5061                           fsr2h	equ	0xFDA
  5062                           fsr2l	equ	0xFD9
  5063                           status	equ	0xFD8
  5064                           
  5065 ;; *************** function _RtccWriteDate *****************
  5066 ;; Defined at:
  5067 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  pDt             2    0[COMRAM] PTR const struct .
  5070 ;;		 -> RtccDate(4), 
  5071 ;;  di              1    2[COMRAM] enum E7121
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  tempHourWDay    2   11[COMRAM] struct .
  5074 ;;  tempDayMonth    2    9[COMRAM] struct .
  5075 ;;  tempYear        2    6[COMRAM] struct .
  5076 ;;  wasWrEn         1    8[COMRAM] enum E7121
  5077 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5078 ;;  wasOn           1    4[COMRAM] enum E7121
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      enum E6550
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;Total ram usage:       13 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    1
  5095 ;; This function calls:
  5096 ;;		_RtccWrOn
  5097 ;; This function is called by:
  5098 ;;		_Write_RTC
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text21
  5103  00191A                     __ptext21:
  5104                           	opt stack 0
  5105  00191A                     _RtccWriteDate:
  5106                           	opt stack 24
  5107                           
  5108                           ;incstack = 0
  5109  00191A  0E00               	movlw	0
  5110  00191C  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5111  00191E  EE20 F002          	lfsr	2,2
  5112  001922  5001               	movf	RtccWriteDate@pDt,w,c
  5113  001924  26D9               	addwf	fsr2l,f,c
  5114  001926  5002               	movf	RtccWriteDate@pDt+1,w,c
  5115  001928  22DA               	addwfc	fsr2h,f,c
  5116  00192A  0E13               	movlw	19
  5117  00192C  60DF               	cpfslt	indf2,c
  5118  00192E  0012               	return	
  5119  001930  EE20 F002          	lfsr	2,2
  5120  001934  5001               	movf	RtccWriteDate@pDt,w,c
  5121  001936  26D9               	addwf	fsr2l,f,c
  5122  001938  5002               	movf	RtccWriteDate@pDt+1,w,c
  5123  00193A  22DA               	addwfc	fsr2h,f,c
  5124  00193C  50DF               	movf	indf2,w,c
  5125  00193E  B4D8               	btfsc	status,2,c
  5126  001940  0012               	return	
  5127  001942  EE20 F001          	lfsr	2,1
  5128  001946  5001               	movf	RtccWriteDate@pDt,w,c
  5129  001948  26D9               	addwf	fsr2l,f,c
  5130  00194A  5002               	movf	RtccWriteDate@pDt+1,w,c
  5131  00194C  22DA               	addwfc	fsr2h,f,c
  5132  00194E  0E32               	movlw	50
  5133  001950  60DF               	cpfslt	indf2,c
  5134  001952  0012               	return	
  5135  001954  EE20 F001          	lfsr	2,1
  5136  001958  5001               	movf	RtccWriteDate@pDt,w,c
  5137  00195A  26D9               	addwf	fsr2l,f,c
  5138  00195C  5002               	movf	RtccWriteDate@pDt+1,w,c
  5139  00195E  22DA               	addwfc	fsr2h,f,c
  5140  001960  50DF               	movf	indf2,w,c
  5141  001962  B4D8               	btfsc	status,2,c
  5142  001964  0012               	return	
  5143  001966  EE20 F003          	lfsr	2,3
  5144  00196A  5001               	movf	RtccWriteDate@pDt,w,c
  5145  00196C  26D9               	addwf	fsr2l,f,c
  5146  00196E  5002               	movf	RtccWriteDate@pDt+1,w,c
  5147  001970  22DA               	addwfc	fsr2h,f,c
  5148  001972  0E99               	movlw	153
  5149  001974  64DF               	cpfsgt	indf2,c
  5150  001976  D001               	goto	l500
  5151  001978  0012               	return	
  5152  00197A                     l500:
  5153  00197A  EE20 F003          	lfsr	2,3
  5154  00197E  5001               	movf	RtccWriteDate@pDt,w,c
  5155  001980  26D9               	addwf	fsr2l,f,c
  5156  001982  5002               	movf	RtccWriteDate@pDt+1,w,c
  5157  001984  22DA               	addwfc	fsr2h,f,c
  5158  001986  50DF               	movf	indf2,w,c
  5159  001988  6E07               	movwf	RtccWriteDate@tempYear,c
  5160  00198A  EE20 F001          	lfsr	2,1
  5161  00198E  5001               	movf	RtccWriteDate@pDt,w,c
  5162  001990  26D9               	addwf	fsr2l,f,c
  5163  001992  5002               	movf	RtccWriteDate@pDt+1,w,c
  5164  001994  22DA               	addwfc	fsr2h,f,c
  5165  001996  50DF               	movf	indf2,w,c
  5166  001998  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  5167  00199A  EE20 F002          	lfsr	2,2
  5168  00199E  5001               	movf	RtccWriteDate@pDt,w,c
  5169  0019A0  26D9               	addwf	fsr2l,f,c
  5170  0019A2  5002               	movf	RtccWriteDate@pDt+1,w,c
  5171  0019A4  22DA               	addwfc	fsr2h,f,c
  5172  0019A6  50DF               	movf	indf2,w,c
  5173  0019A8  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  5174  0019AA  5003               	movf	RtccWriteDate@di,w,c
  5175  0019AC  A4D8               	btfss	status,2,c
  5176  0019AE  9CF2               	bcf	intcon,6,c	;volatile
  5177  0019B0  010F               	movlb	15	; () banked
  5178  0019B2  0E00               	movlw	0
  5179  0019B4  BB3F               	btfsc	63,5,b	;volatile
  5180  0019B6  0E01               	movlw	1
  5181  0019B8  6E09               	movwf	RtccWriteDate@wasWrEn,c
  5182  0019BA  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5183  0019BC  B4D8               	btfsc	status,2,c
  5184                           
  5185                           ; BSR set to: 15
  5186  0019BE  EC05  F012         	call	_RtccWrOn	;wreg free
  5187  0019C2  010F               	movlb	15	; () banked
  5188  0019C4  0E00               	movlw	0
  5189  0019C6  BF3F               	btfsc	63,7,b	;volatile
  5190  0019C8  0E01               	movlw	1
  5191  0019CA  6E05               	movwf	RtccWriteDate@wasOn,c
  5192  0019CC  5005               	movf	RtccWriteDate@wasOn,w,c
  5193  0019CE  B4D8               	btfsc	status,2,c
  5194  0019D0  D006               	goto	l506
  5195                           
  5196                           ; BSR set to: 15
  5197  0019D2  0E00               	movlw	0
  5198  0019D4  BE91               	btfsc	3985,7,c	;volatile
  5199  0019D6  0E01               	movlw	1
  5200  0019D8  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5201                           
  5202                           ; BSR set to: 15
  5203  0019DA  010F               	movlb	15	; () banked
  5204  0019DC  9F3F               	bcf	63,7,b	;volatile
  5205  0019DE                     l506:
  5206                           
  5207                           ; BSR set to: 15
  5208                           
  5209                           ; BSR set to: 15
  5210  0019DE  0EFC               	movlw	252
  5211  0019E0  010F               	movlb	15	; () banked
  5212  0019E2  173F               	andwf	63,f,b	;volatile
  5213  0019E4  010F               	movlb	15	; () banked
  5214  0019E6  813F               	bsf	63,0,b	;volatile
  5215                           
  5216                           ; BSR set to: 15
  5217  0019E8  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  5218                           
  5219                           ; BSR set to: 15
  5220  0019EC  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  5221                           
  5222                           ; BSR set to: 15
  5223  0019F0  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  5224  0019F4  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  5225  0019F8  50DF               	movf	indf2,w,c
  5226  0019FA  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  5227                           
  5228                           ; BSR set to: 15
  5229  0019FC  0EFC               	movlw	252
  5230  0019FE  010F               	movlb	15	; () banked
  5231  001A00  173F               	andwf	63,f,b	;volatile
  5232                           
  5233                           ; BSR set to: 15
  5234  001A02  0E03               	movlw	3
  5235  001A04  010F               	movlb	15	; () banked
  5236  001A06  133F               	iorwf	63,f,b	;volatile
  5237                           
  5238                           ; BSR set to: 15
  5239  001A08  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  5240                           
  5241                           ; BSR set to: 15
  5242  001A0C  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  5243                           
  5244                           ; BSR set to: 15
  5245  001A10  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  5246                           
  5247                           ; BSR set to: 15
  5248  001A14  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  5249                           
  5250                           ; BSR set to: 15
  5251  001A18  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  5252                           
  5253                           ; BSR set to: 15
  5254  001A1C  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  5255                           
  5256                           ; BSR set to: 15
  5257  001A20  5005               	movf	RtccWriteDate@wasOn,w,c
  5258  001A22  B4D8               	btfsc	status,2,c
  5259  001A24  D00B               	goto	l507
  5260                           
  5261                           ; BSR set to: 15
  5262  001A26  010F               	movlb	15	; () banked
  5263  001A28  8F3F               	bsf	63,7,b	;volatile
  5264                           
  5265                           ; BSR set to: 15
  5266  001A2A  5006               	movf	RtccWriteDate@wasAlrm,w,c
  5267  001A2C  A4D8               	btfss	status,2,c
  5268                           
  5269                           ; BSR set to: 15
  5270  001A2E  8E91               	bsf	3985,7,c	;volatile
  5271                           
  5272                           ; BSR set to: 15
  5273                           
  5274                           ; BSR set to: 15
  5275  001A30  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5276  001A32  B4D8               	btfsc	status,2,c
  5277  001A34  D008               	goto	l511
  5278                           
  5279                           ; BSR set to: 15
  5280  001A36  EC05  F012         	call	_RtccWrOn	;wreg free
  5281  001A3A  D005               	goto	l511
  5282  001A3C                     l507:
  5283  001A3C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5284  001A3E  A4D8               	btfss	status,2,c
  5285  001A40  D002               	goto	l511
  5286  001A42  010F               	movlb	15	; () banked
  5287  001A44  9B3F               	bcf	63,5,b	;volatile
  5288  001A46                     l511:
  5289                           
  5290                           ; BSR set to: 15
  5291                           
  5292                           ; BSR set to: 15
  5293  001A46  5003               	movf	RtccWriteDate@di,w,c
  5294  001A48  B4D8               	btfsc	status,2,c
  5295  001A4A  0012               	return	
  5296  001A4C  9CF2               	bcf	intcon,6,c	;volatile
  5297  001A4E  0012               	return	
  5298  001A50                     __end_of_RtccWriteDate:
  5299                           	opt stack 0
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           prodh	equ	0xFF4
  5305                           prodl	equ	0xFF3
  5306                           intcon	equ	0xFF2
  5307                           indf0	equ	0xFEF
  5308                           postinc0	equ	0xFEE
  5309                           fsr0h	equ	0xFEA
  5310                           fsr0l	equ	0xFE9
  5311                           wreg	equ	0xFE8
  5312                           postdec1	equ	0xFE5
  5313                           fsr1l	equ	0xFE1
  5314                           indf2	equ	0xFDF
  5315                           postinc2	equ	0xFDE
  5316                           postdec2	equ	0xFDD
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _RtccWrOn *****************
  5322 ;; Defined at:
  5323 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  data            2    0        unsigned int 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_Write_RTC
  5347 ;;		_RtccWriteDate
  5348 ;;		_RtccWriteTime
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text22
  5353  00240A                     __ptext22:
  5354                           	opt stack 0
  5355  00240A                     _RtccWrOn:
  5356                           	opt stack 24
  5357                           
  5358                           ;incstack = 0
  5359  00240A  9CF2               	bcf	intcon,6,c	;volatile
  5360  00240C  0E55               	movlw	85
  5361  00240E  6EA7               	movwf	4007,c	;volatile
  5362  002410  0EAA               	movlw	170
  5363  002412  6EA7               	movwf	4007,c	;volatile
  5364  002414  010F               	movlb	15	; () banked
  5365  002416  8B3F               	bsf	63,5,b	;volatile
  5366                           
  5367                           ; BSR set to: 15
  5368  002418  8CF2               	bsf	intcon,6,c	;volatile
  5369                           
  5370                           ; BSR set to: 15
  5371  00241A  0012               	return		;funcret
  5372  00241C                     __end_of_RtccWrOn:
  5373                           	opt stack 0
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           indf0	equ	0xFEF
  5382                           postinc0	equ	0xFEE
  5383                           fsr0h	equ	0xFEA
  5384                           fsr0l	equ	0xFE9
  5385                           wreg	equ	0xFE8
  5386                           postdec1	equ	0xFE5
  5387                           fsr1l	equ	0xFE1
  5388                           indf2	equ	0xFDF
  5389                           postinc2	equ	0xFDE
  5390                           postdec2	equ	0xFDD
  5391                           fsr2h	equ	0xFDA
  5392                           fsr2l	equ	0xFD9
  5393                           status	equ	0xFD8
  5394                           
  5395 ;; *************** function _lcd_init *****************
  5396 ;; Defined at:
  5397 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;  i               1    4[COMRAM] unsigned char 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5415 ;;Total ram usage:        1 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    2
  5418 ;; This function calls:
  5419 ;;		_Delay1KTCYx
  5420 ;;		_lcd_send_byte
  5421 ;;		_lcd_send_nibble
  5422 ;; This function is called by:
  5423 ;;		_setup
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text23
  5428  001EFA                     __ptext23:
  5429                           	opt stack 0
  5430  001EFA                     _lcd_init:
  5431                           	opt stack 27
  5432                           
  5433                           ;unmc_lcd_216.c: 120: int8 i;
  5434                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  5435                           
  5436                           ; BSR set to: 15
  5437                           ;incstack = 0
  5438  001EFA  9693               	bcf	3987,3,c	;volatile
  5439                           
  5440                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  5441  001EFC  9493               	bcf	3987,2,c	;volatile
  5442                           
  5443                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  5444  001EFE  968A               	bcf	3978,3,c	;volatile
  5445                           
  5446                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  5447  001F00  948A               	bcf	3978,2,c	;volatile
  5448                           
  5449                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  5450  001F02  9893               	bcf	3987,4,c	;volatile
  5451                           
  5452                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  5453  001F04  9A93               	bcf	3987,5,c	;volatile
  5454                           
  5455                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  5456  001F06  9C93               	bcf	3987,6,c	;volatile
  5457                           
  5458                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  5459  001F08  9E93               	bcf	3987,7,c	;volatile
  5460                           
  5461                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  5462  001F0A  0E0A               	movlw	10
  5463  001F0C  EC0E  F012         	call	_Delay1KTCYx
  5464                           
  5465                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  5466  001F10  0E0A               	movlw	10
  5467  001F12  EC0E  F012         	call	_Delay1KTCYx
  5468                           
  5469                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  5470  001F16  0E0A               	movlw	10
  5471  001F18  EC0E  F012         	call	_Delay1KTCYx
  5472                           
  5473                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  5474  001F1C  0E00               	movlw	0
  5475  001F1E  6E05               	movwf	lcd_init@i,c
  5476  001F20                     l3073:
  5477  001F20  0E02               	movlw	2
  5478  001F22  6405               	cpfsgt	lcd_init@i,c
  5479  001F24  D001               	goto	l357
  5480  001F26  D008               	goto	u2950
  5481  001F28                     l357:
  5482                           
  5483                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  5484  001F28  0E03               	movlw	3
  5485  001F2A  ECB8  F00F         	call	_lcd_send_nibble
  5486                           
  5487                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  5488  001F2E  0E0A               	movlw	10
  5489  001F30  EC0E  F012         	call	_Delay1KTCYx
  5490  001F34  2A05               	incf	lcd_init@i,f,c
  5491  001F36  D7F4               	goto	l3073
  5492  001F38                     u2950:
  5493                           
  5494                           ;unmc_lcd_216.c: 146: }
  5495                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  5496  001F38  0E02               	movlw	2
  5497  001F3A  ECB8  F00F         	call	_lcd_send_nibble
  5498                           
  5499                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  5500  001F3E  0E00               	movlw	0
  5501  001F40  6E05               	movwf	lcd_init@i,c
  5502  001F42                     l3087:
  5503  001F42  0E03               	movlw	3
  5504  001F44  6405               	cpfsgt	lcd_init@i,c
  5505  001F46  D001               	goto	l359
  5506  001F48  0012               	return	
  5507  001F4A                     l359:
  5508                           
  5509                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  5510  001F4A  5005               	movf	lcd_init@i,w,c
  5511  001F4C  0D01               	mullw	1
  5512  001F4E  0E0B               	movlw	low _LCD_INIT_STRING
  5513  001F50  24F3               	addwf	prodl,w,c
  5514  001F52  6EF6               	movwf	tblptrl,c
  5515  001F54  0E0F               	movlw	high _LCD_INIT_STRING
  5516  001F56  20F4               	addwfc	prodh,w,c
  5517  001F58  6EF7               	movwf	tblptrh,c
  5518  001F5A                     	if	0	;There are less than 3 active tblptr bytes
  5519  001F5A                     	endif
  5520  001F5A  0008               	tblrd		*
  5521  001F5C  CFF5 F003          	movff	tablat,lcd_send_byte@n
  5522  001F60  0E00               	movlw	0
  5523  001F62  ECAF  F011         	call	_lcd_send_byte
  5524                           
  5525                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  5526  001F66  0E0A               	movlw	10
  5527  001F68  EC0E  F012         	call	_Delay1KTCYx
  5528  001F6C  2A05               	incf	lcd_init@i,f,c
  5529  001F6E  D7E9               	goto	l3087
  5530  001F70                     __end_of_lcd_init:
  5531                           	opt stack 0
  5532                           tblptru	equ	0xFF8
  5533                           tblptrh	equ	0xFF7
  5534                           tblptrl	equ	0xFF6
  5535                           tablat	equ	0xFF5
  5536                           prodh	equ	0xFF4
  5537                           prodl	equ	0xFF3
  5538                           intcon	equ	0xFF2
  5539                           indf0	equ	0xFEF
  5540                           postinc0	equ	0xFEE
  5541                           fsr0h	equ	0xFEA
  5542                           fsr0l	equ	0xFE9
  5543                           wreg	equ	0xFE8
  5544                           postdec1	equ	0xFE5
  5545                           fsr1l	equ	0xFE1
  5546                           indf2	equ	0xFDF
  5547                           postinc2	equ	0xFDE
  5548                           postdec2	equ	0xFDD
  5549                           fsr2h	equ	0xFDA
  5550                           fsr2l	equ	0xFD9
  5551                           status	equ	0xFD8
  5552                           
  5553 ;; *************** function _Delay1KTCYx *****************
  5554 ;; Defined at:
  5555 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  unit            1    wreg     unsigned char 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  unit            1    0[COMRAM] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5573 ;;Total ram usage:        1 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; This function calls:
  5576 ;;		Nothing
  5577 ;; This function is called by:
  5578 ;;		_lcd_init
  5579 ;;		_DelayPORXLCD
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text24
  5584  00241C                     __ptext24:
  5585                           	opt stack 0
  5586  00241C                     _Delay1KTCYx:
  5587                           	opt stack 28
  5588                           
  5589                           ;incstack = 0
  5590                           ;Delay1KTCYx@unit stored from wreg
  5591  00241C  6E01               	movwf	Delay1KTCYx@unit,c
  5592  00241E                     l757:
  5593  00241E  0EC8               	movlw	200
  5594  002420                     u3967:
  5595  002420  D000               	nop2	
  5596  002422  2EE8               	decfsz	wreg,f,c
  5597  002424  D7FD               	bra	u3967
  5598  002426  2E01               	decfsz	Delay1KTCYx@unit,f,c
  5599  002428  D7FA               	goto	l757
  5600  00242A  0012               	return	
  5601  00242C                     __end_of_Delay1KTCYx:
  5602                           	opt stack 0
  5603                           tblptru	equ	0xFF8
  5604                           tblptrh	equ	0xFF7
  5605                           tblptrl	equ	0xFF6
  5606                           tablat	equ	0xFF5
  5607                           prodh	equ	0xFF4
  5608                           prodl	equ	0xFF3
  5609                           intcon	equ	0xFF2
  5610                           indf0	equ	0xFEF
  5611                           postinc0	equ	0xFEE
  5612                           fsr0h	equ	0xFEA
  5613                           fsr0l	equ	0xFE9
  5614                           wreg	equ	0xFE8
  5615                           postdec1	equ	0xFE5
  5616                           fsr1l	equ	0xFE1
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function _lcd_comand *****************
  5625 ;; Defined at:
  5626 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  d               1    wreg     unsigned char 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  d               1    4[COMRAM] unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5644 ;;Total ram usage:        1 bytes
  5645 ;; Hardware stack levels used:    1
  5646 ;; Hardware stack levels required when called:    2
  5647 ;; This function calls:
  5648 ;;		_lcd_send_byte
  5649 ;; This function is called by:
  5650 ;;		_setup
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text25
  5656  00243C                     __ptext25:
  5657                           	opt stack 0
  5658  00243C                     _lcd_comand:
  5659                           	opt stack 27
  5660                           
  5661                           ;incstack = 0
  5662                           ;lcd_comand@d stored from wreg
  5663  00243C  6E05               	movwf	lcd_comand@d,c
  5664                           
  5665                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  5666  00243E  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  5667  002442  0E00               	movlw	0
  5668  002444  ECAF  F011         	call	_lcd_send_byte
  5669  002448  0012               	return		;funcret
  5670  00244A                     __end_of_lcd_comand:
  5671                           	opt stack 0
  5672                           tblptru	equ	0xFF8
  5673                           tblptrh	equ	0xFF7
  5674                           tblptrl	equ	0xFF6
  5675                           tablat	equ	0xFF5
  5676                           prodh	equ	0xFF4
  5677                           prodl	equ	0xFF3
  5678                           intcon	equ	0xFF2
  5679                           indf0	equ	0xFEF
  5680                           postinc0	equ	0xFEE
  5681                           fsr0h	equ	0xFEA
  5682                           fsr0l	equ	0xFE9
  5683                           wreg	equ	0xFE8
  5684                           postdec1	equ	0xFE5
  5685                           fsr1l	equ	0xFE1
  5686                           indf2	equ	0xFDF
  5687                           postinc2	equ	0xFDE
  5688                           postdec2	equ	0xFDD
  5689                           fsr2h	equ	0xFDA
  5690                           fsr2l	equ	0xFD9
  5691                           status	equ	0xFD8
  5692                           
  5693 ;; *************** function _lcd_send_byte *****************
  5694 ;; Defined at:
  5695 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  address         1    wreg     unsigned char 
  5698 ;;  n               1    2[COMRAM] unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;  address         1    3[COMRAM] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5710 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5714 ;;Total ram usage:        2 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    1
  5717 ;; This function calls:
  5718 ;;		_Delay100TCYx
  5719 ;;		_lcd_send_nibble
  5720 ;; This function is called by:
  5721 ;;		_lcd_init
  5722 ;;		_lcd_gotoxy
  5723 ;;		_lcd_putc
  5724 ;;		_lcd_comand
  5725 ;;		_lcd_setcursor_vb
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text26
  5730  00235E                     __ptext26:
  5731                           	opt stack 0
  5732  00235E                     _lcd_send_byte:
  5733                           	opt stack 26
  5734                           
  5735                           ;incstack = 0
  5736                           ;lcd_send_byte@address stored from wreg
  5737  00235E  6E04               	movwf	lcd_send_byte@address,c
  5738                           
  5739                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  5740  002360  968A               	bcf	3978,3,c	;volatile
  5741                           
  5742                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  5743  002362  0E02               	movlw	2
  5744  002364  EC16  F012         	call	_Delay100TCYx
  5745                           
  5746                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  5747  002368  9893               	bcf	3987,4,c	;volatile
  5748                           
  5749                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  5750  00236A  9A93               	bcf	3987,5,c	;volatile
  5751                           
  5752                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  5753  00236C  9C93               	bcf	3987,6,c	;volatile
  5754                           
  5755                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5756  00236E  9E93               	bcf	3987,7,c	;volatile
  5757                           
  5758                           ;unmc_lcd_216.c: 101: if(address)
  5759  002370  5004               	movf	lcd_send_byte@address,w,c
  5760  002372  B4D8               	btfsc	status,2,c
  5761  002374  D002               	goto	l352
  5762                           
  5763                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5764  002376  868A               	bsf	3978,3,c	;volatile
  5765  002378  D001               	goto	l353
  5766  00237A                     l352:
  5767                           
  5768                           ;unmc_lcd_216.c: 103: else
  5769                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5770  00237A  968A               	bcf	3978,3,c	;volatile
  5771  00237C                     l353:
  5772                           
  5773                           ;unmc_lcd_216.c: 106: __nop();
  5774  00237C  F000               	nop	
  5775                           
  5776                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  5777  00237E  3803               	swapf	lcd_send_byte@n,w,c
  5778  002380  0B0F               	andlw	15
  5779  002382  ECB8  F00F         	call	_lcd_send_nibble
  5780                           
  5781                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  5782  002386  5003               	movf	lcd_send_byte@n,w,c
  5783  002388  0B0F               	andlw	15
  5784  00238A  ECB8  F00F         	call	_lcd_send_nibble
  5785  00238E  0012               	return		;funcret
  5786  002390                     __end_of_lcd_send_byte:
  5787                           	opt stack 0
  5788                           tblptru	equ	0xFF8
  5789                           tblptrh	equ	0xFF7
  5790                           tblptrl	equ	0xFF6
  5791                           tablat	equ	0xFF5
  5792                           prodh	equ	0xFF4
  5793                           prodl	equ	0xFF3
  5794                           intcon	equ	0xFF2
  5795                           indf0	equ	0xFEF
  5796                           postinc0	equ	0xFEE
  5797                           fsr0h	equ	0xFEA
  5798                           fsr0l	equ	0xFE9
  5799                           wreg	equ	0xFE8
  5800                           postdec1	equ	0xFE5
  5801                           fsr1l	equ	0xFE1
  5802                           indf2	equ	0xFDF
  5803                           postinc2	equ	0xFDE
  5804                           postdec2	equ	0xFDD
  5805                           fsr2h	equ	0xFDA
  5806                           fsr2l	equ	0xFD9
  5807                           status	equ	0xFD8
  5808                           
  5809 ;; *************** function _lcd_send_nibble *****************
  5810 ;; Defined at:
  5811 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  nibble          1    wreg     unsigned char 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  nibble          1    1[COMRAM] unsigned char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, status,2, status,0
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;Total ram usage:        2 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_lcd_send_byte
  5835 ;;		_lcd_init
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text27
  5840  001F70                     __ptext27:
  5841                           	opt stack 0
  5842  001F70                     _lcd_send_nibble:
  5843                           	opt stack 26
  5844                           
  5845                           ;incstack = 0
  5846                           ;lcd_send_nibble@nibble stored from wreg
  5847  001F70  6E02               	movwf	lcd_send_nibble@nibble,c
  5848                           
  5849                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  5850  001F72  A002               	btfss	lcd_send_nibble@nibble,0,c
  5851  001F74  D003               	goto	u1930
  5852  001F76  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5853  001F78  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5854  001F7A  D001               	goto	u1948
  5855  001F7C                     u1930:
  5856  001F7C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5857  001F7E                     u1948:
  5858  001F7E  3A01               	swapf	??_lcd_send_nibble,f,c
  5859  001F80  508A               	movf	3978,w,c	;volatile
  5860  001F82  1801               	xorwf	??_lcd_send_nibble,w,c
  5861  001F84  0BEF               	andlw	-17
  5862  001F86  1801               	xorwf	??_lcd_send_nibble,w,c
  5863  001F88  6E8A               	movwf	3978,c	;volatile
  5864                           
  5865                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  5866  001F8A  A202               	btfss	lcd_send_nibble@nibble,1,c
  5867  001F8C  D003               	goto	u1950
  5868  001F8E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5869  001F90  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5870  001F92  D001               	goto	u1968
  5871  001F94                     u1950:
  5872  001F94  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5873  001F96                     u1968:
  5874  001F96  3A01               	swapf	??_lcd_send_nibble,f,c
  5875  001F98  4601               	rlncf	??_lcd_send_nibble,f,c
  5876  001F9A  508A               	movf	3978,w,c	;volatile
  5877  001F9C  1801               	xorwf	??_lcd_send_nibble,w,c
  5878  001F9E  0BDF               	andlw	-33
  5879  001FA0  1801               	xorwf	??_lcd_send_nibble,w,c
  5880  001FA2  6E8A               	movwf	3978,c	;volatile
  5881                           
  5882                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  5883  001FA4  A402               	btfss	lcd_send_nibble@nibble,2,c
  5884  001FA6  D003               	goto	u1970
  5885  001FA8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5886  001FAA  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5887  001FAC  D001               	goto	u1988
  5888  001FAE                     u1970:
  5889  001FAE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5890  001FB0                     u1988:
  5891  001FB0  3A01               	swapf	??_lcd_send_nibble,f,c
  5892  001FB2  4601               	rlncf	??_lcd_send_nibble,f,c
  5893  001FB4  4601               	rlncf	??_lcd_send_nibble,f,c
  5894  001FB6  508A               	movf	3978,w,c	;volatile
  5895  001FB8  1801               	xorwf	??_lcd_send_nibble,w,c
  5896  001FBA  0BBF               	andlw	-65
  5897  001FBC  1801               	xorwf	??_lcd_send_nibble,w,c
  5898  001FBE  6E8A               	movwf	3978,c	;volatile
  5899                           
  5900                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  5901  001FC0  A602               	btfss	lcd_send_nibble@nibble,3,c
  5902  001FC2  D003               	goto	u1990
  5903  001FC4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5904  001FC6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5905  001FC8  D001               	goto	u2008
  5906  001FCA                     u1990:
  5907  001FCA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5908  001FCC                     u2008:
  5909  001FCC  3201               	rrcf	??_lcd_send_nibble,f,c
  5910  001FCE  3201               	rrcf	??_lcd_send_nibble,f,c
  5911  001FD0  508A               	movf	3978,w,c	;volatile
  5912  001FD2  1801               	xorwf	??_lcd_send_nibble,w,c
  5913  001FD4  0B7F               	andlw	-129
  5914  001FD6  1801               	xorwf	??_lcd_send_nibble,w,c
  5915  001FD8  6E8A               	movwf	3978,c	;volatile
  5916                           
  5917                           ;unmc_lcd_216.c: 32: __nop();
  5918  001FDA  F000               	nop	
  5919                           
  5920                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  5921  001FDC  848A               	bsf	3978,2,c	;volatile
  5922                           
  5923                           ;unmc_lcd_216.c: 34: __nop();__nop();
  5924  001FDE  F000               	nop	
  5925  001FE0  F000               	nop	
  5926                           
  5927                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  5928  001FE2  948A               	bcf	3978,2,c	;volatile
  5929  001FE4  0012               	return		;funcret
  5930  001FE6                     __end_of_lcd_send_nibble:
  5931                           	opt stack 0
  5932                           tblptru	equ	0xFF8
  5933                           tblptrh	equ	0xFF7
  5934                           tblptrl	equ	0xFF6
  5935                           tablat	equ	0xFF5
  5936                           prodh	equ	0xFF4
  5937                           prodl	equ	0xFF3
  5938                           intcon	equ	0xFF2
  5939                           indf0	equ	0xFEF
  5940                           postinc0	equ	0xFEE
  5941                           fsr0h	equ	0xFEA
  5942                           fsr0l	equ	0xFE9
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           fsr1l	equ	0xFE1
  5946                           indf2	equ	0xFDF
  5947                           postinc2	equ	0xFDE
  5948                           postdec2	equ	0xFDD
  5949                           fsr2h	equ	0xFDA
  5950                           fsr2l	equ	0xFD9
  5951                           status	equ	0xFD8
  5952                           
  5953 ;; *************** function _Delay100TCYx *****************
  5954 ;; Defined at:
  5955 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  unit            1    wreg     unsigned char 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  unit            1    0[COMRAM] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5970 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5972 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5973 ;;Total ram usage:        1 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_lcd_send_byte
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text28
  5983  00242C                     __ptext28:
  5984                           	opt stack 0
  5985  00242C                     _Delay100TCYx:
  5986                           	opt stack 26
  5987                           
  5988                           ;incstack = 0
  5989                           ;Delay100TCYx@unit stored from wreg
  5990  00242C  6E01               	movwf	Delay100TCYx@unit,c
  5991  00242E                     l743:
  5992  00242E  0E21               	movlw	33
  5993  002430                     u3977:
  5994  002430  2EE8               	decfsz	wreg,f,c
  5995  002432  D7FE               	bra	u3977
  5996  002434  F000               	nop	
  5997  002436  2E01               	decfsz	Delay100TCYx@unit,f,c
  5998  002438  D7FA               	goto	l743
  5999  00243A  0012               	return	
  6000  00243C                     __end_of_Delay100TCYx:
  6001                           	opt stack 0
  6002                           tblptru	equ	0xFF8
  6003                           tblptrh	equ	0xFF7
  6004                           tblptrl	equ	0xFF6
  6005                           tablat	equ	0xFF5
  6006                           prodh	equ	0xFF4
  6007                           prodl	equ	0xFF3
  6008                           intcon	equ	0xFF2
  6009                           indf0	equ	0xFEF
  6010                           postinc0	equ	0xFEE
  6011                           fsr0h	equ	0xFEA
  6012                           fsr0l	equ	0xFE9
  6013                           wreg	equ	0xFE8
  6014                           postdec1	equ	0xFE5
  6015                           fsr1l	equ	0xFE1
  6016                           indf2	equ	0xFDF
  6017                           postinc2	equ	0xFDE
  6018                           postdec2	equ	0xFDD
  6019                           fsr2h	equ	0xFDA
  6020                           fsr2l	equ	0xFD9
  6021                           status	equ	0xFD8
  6022                           
  6023 ;; *************** function _Read_RTC *****************
  6024 ;; Defined at:
  6025 ;;		line 111 in file "../../headers\unmc_rtcc_01.h"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;		None
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;		None
  6030 ;; Return value:  Size  Location     Type
  6031 ;;                  1    wreg      void 
  6032 ;; Registers used:
  6033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6043 ;;Total ram usage:        0 bytes
  6044 ;; Hardware stack levels used:    1
  6045 ;; Hardware stack levels required when called:    1
  6046 ;; This function calls:
  6047 ;;		_RtccReadDate
  6048 ;;		_RtccReadTime
  6049 ;; This function is called by:
  6050 ;;		_main
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           	psect	text29
  6055  001B4C                     __ptext29:
  6056                           	opt stack 0
  6057  001B4C                     _Read_RTC:
  6058                           	opt stack 29
  6059                           
  6060                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  6061                           
  6062                           ;incstack = 0
  6063  001B4C  0E49               	movlw	low _RtccTime
  6064  001B4E  6E01               	movwf	RtccReadTime@pTm,c
  6065  001B50  0E00               	movlw	high _RtccTime
  6066  001B52  6E02               	movwf	RtccReadTime@pTm+1,c
  6067  001B54  EC2B  F010         	call	_RtccReadTime	;wreg free
  6068                           
  6069                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  6070  001B58  504A               	movf	_RtccTime+1,w,c
  6071  001B5A  0B0F               	andlw	15
  6072  001B5C  0100               	movlb	0	; () banked
  6073  001B5E  6FB2               	movwf	_segundo_u& (0+255),b
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  6077  001B60  384A               	swapf	_RtccTime+1,w,c
  6078  001B62  0B0F               	andlw	15
  6079  001B64  0B0F               	andlw	15
  6080  001B66  6E5E               	movwf	_segundo_d,c
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  6084  001B68  504B               	movf	_RtccTime+2,w,c
  6085  001B6A  0B0F               	andlw	15
  6086  001B6C  0100               	movlb	0	; () banked
  6087  001B6E  6FB1               	movwf	_minuto_u& (0+255),b
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  6091  001B70  384B               	swapf	_RtccTime+2,w,c
  6092  001B72  0B0F               	andlw	15
  6093  001B74  0B0F               	andlw	15
  6094  001B76  6E5D               	movwf	_minuto_d,c
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  6098  001B78  504C               	movf	_RtccTime+3,w,c
  6099  001B7A  0B0F               	andlw	15
  6100  001B7C  0100               	movlb	0	; () banked
  6101  001B7E  6FB0               	movwf	_hora_u& (0+255),b
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  6105  001B80  384C               	swapf	_RtccTime+3,w,c
  6106  001B82  0B0F               	andlw	15
  6107  001B84  0B0F               	andlw	15
  6108  001B86  6E5C               	movwf	_hora_d,c
  6109                           
  6110                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  6111  001B88  0E45               	movlw	low _RtccDate
  6112  001B8A  6E01               	movwf	RtccReadDate@pDt,c
  6113  001B8C  0E00               	movlw	high _RtccDate
  6114  001B8E  6E02               	movwf	RtccReadDate@pDt+1,c
  6115  001B90  EC70  F00E         	call	_RtccReadDate	;wreg free
  6116                           
  6117                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  6118  001B94  5046               	movf	_RtccDate+1,w,c
  6119  001B96  0B0F               	andlw	15
  6120  001B98  0100               	movlb	0	; () banked
  6121  001B9A  6FAF               	movwf	_fecha_u& (0+255),b
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  6125  001B9C  3846               	swapf	_RtccDate+1,w,c
  6126  001B9E  0B0F               	andlw	15
  6127  001BA0  0B0F               	andlw	15
  6128  001BA2  6E5B               	movwf	_fecha_d,c
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  6132  001BA4  5047               	movf	_RtccDate+2,w,c
  6133  001BA6  0B0F               	andlw	15
  6134  001BA8  0100               	movlb	0	; () banked
  6135  001BAA  6FAE               	movwf	_mes_u& (0+255),b
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  6139  001BAC  3847               	swapf	_RtccDate+2,w,c
  6140  001BAE  0B0F               	andlw	15
  6141  001BB0  0B0F               	andlw	15
  6142  001BB2  6E5A               	movwf	_mes_d,c
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  6146  001BB4  C045  F0AD         	movff	_RtccDate,_dia_semana
  6147                           
  6148                           ; BSR set to: 0
  6149                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  6150  001BB8  5048               	movf	_RtccDate+3,w,c
  6151  001BBA  0B0F               	andlw	15
  6152  001BBC  0100               	movlb	0	; () banked
  6153  001BBE  6FAC               	movwf	_anio_u& (0+255),b
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  6157  001BC0  3848               	swapf	_RtccDate+3,w,c
  6158  001BC2  0B0F               	andlw	15
  6159  001BC4  0B0F               	andlw	15
  6160  001BC6  6E59               	movwf	_anio_d,c
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  6164  001BC8  505E               	movf	_segundo_d,w,c
  6165  001BCA  0D0A               	mullw	10
  6166  001BCC  0100               	movlb	0	; () banked
  6167  001BCE  51B2               	movf	_segundo_u& (0+255),w,b
  6168  001BD0  24F3               	addwf	prodl,w,c
  6169  001BD2  6E36               	movwf	_segundo,c
  6170  001BD4  0100               	movlb	0	; () banked
  6171  001BD6  0E00               	movlw	0
  6172  001BD8  20F4               	addwfc	prodh,w,c
  6173  001BDA  6E37               	movwf	_segundo+1,c
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  6177  001BDC  505D               	movf	_minuto_d,w,c
  6178  001BDE  0D0A               	mullw	10
  6179  001BE0  0100               	movlb	0	; () banked
  6180  001BE2  51B1               	movf	_minuto_u& (0+255),w,b
  6181  001BE4  24F3               	addwf	prodl,w,c
  6182  001BE6  6E4D               	movwf	_minuto,c
  6183  001BE8  0100               	movlb	0	; () banked
  6184  001BEA  0E00               	movlw	0
  6185  001BEC  20F4               	addwfc	prodh,w,c
  6186  001BEE  6E4E               	movwf	_minuto+1,c
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  6190  001BF0  505C               	movf	_hora_d,w,c
  6191  001BF2  0D0A               	mullw	10
  6192  001BF4  0100               	movlb	0	; () banked
  6193  001BF6  51B0               	movf	_hora_u& (0+255),w,b
  6194  001BF8  24F3               	addwf	prodl,w,c
  6195  001BFA  6E4F               	movwf	_hora,c
  6196  001BFC  0100               	movlb	0	; () banked
  6197  001BFE  0E00               	movlw	0
  6198  001C00  20F4               	addwfc	prodh,w,c
  6199  001C02  6E50               	movwf	_hora+1,c
  6200                           
  6201                           ; BSR set to: 0
  6202                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  6203  001C04  505B               	movf	_fecha_d,w,c
  6204  001C06  0D0A               	mullw	10
  6205  001C08  0100               	movlb	0	; () banked
  6206  001C0A  51AF               	movf	_fecha_u& (0+255),w,b
  6207  001C0C  24F3               	addwf	prodl,w,c
  6208  001C0E  6E51               	movwf	_dia,c
  6209  001C10  0100               	movlb	0	; () banked
  6210  001C12  0E00               	movlw	0
  6211  001C14  20F4               	addwfc	prodh,w,c
  6212  001C16  6E52               	movwf	_dia+1,c
  6213                           
  6214                           ; BSR set to: 0
  6215                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  6216  001C18  C0AD  F053         	movff	_dia_semana,_diasem
  6217  001C1C  6A54               	clrf	_diasem+1,c
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  6221  001C1E  505A               	movf	_mes_d,w,c
  6222  001C20  0D0A               	mullw	10
  6223  001C22  0100               	movlb	0	; () banked
  6224  001C24  51AE               	movf	_mes_u& (0+255),w,b
  6225  001C26  24F3               	addwf	prodl,w,c
  6226  001C28  6E55               	movwf	_mes,c
  6227  001C2A  0100               	movlb	0	; () banked
  6228  001C2C  0E00               	movlw	0
  6229  001C2E  20F4               	addwfc	prodh,w,c
  6230  001C30  6E56               	movwf	_mes+1,c
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  6234  001C32  5059               	movf	_anio_d,w,c
  6235  001C34  0D0A               	mullw	10
  6236  001C36  0100               	movlb	0	; () banked
  6237  001C38  51AC               	movf	_anio_u& (0+255),w,b
  6238  001C3A  24F3               	addwf	prodl,w,c
  6239  001C3C  6E57               	movwf	_anio,c
  6240  001C3E  0100               	movlb	0	; () banked
  6241  001C40  0E00               	movlw	0
  6242  001C42  20F4               	addwfc	prodh,w,c
  6243  001C44  6E58               	movwf	_anio+1,c
  6244                           
  6245                           ; BSR set to: 0
  6246  001C46  0012               	return		;funcret
  6247  001C48                     __end_of_Read_RTC:
  6248                           	opt stack 0
  6249                           tblptru	equ	0xFF8
  6250                           tblptrh	equ	0xFF7
  6251                           tblptrl	equ	0xFF6
  6252                           tablat	equ	0xFF5
  6253                           prodh	equ	0xFF4
  6254                           prodl	equ	0xFF3
  6255                           intcon	equ	0xFF2
  6256                           indf0	equ	0xFEF
  6257                           postinc0	equ	0xFEE
  6258                           fsr0h	equ	0xFEA
  6259                           fsr0l	equ	0xFE9
  6260                           wreg	equ	0xFE8
  6261                           postdec1	equ	0xFE5
  6262                           fsr1l	equ	0xFE1
  6263                           indf2	equ	0xFDF
  6264                           postinc2	equ	0xFDE
  6265                           postdec2	equ	0xFDD
  6266                           fsr2h	equ	0xFDA
  6267                           fsr2l	equ	0xFD9
  6268                           status	equ	0xFD8
  6269                           
  6270 ;; *************** function _RtccReadTime *****************
  6271 ;; Defined at:
  6272 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  pTm             2    0[COMRAM] PTR struct .
  6275 ;;		 -> RtccTime(4), 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  rTD0            8   10[COMRAM] struct .
  6278 ;;  rTD1            8    2[COMRAM] struct .
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6289 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6291 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;Total ram usage:       18 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_Read_RTC
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text30
  6302  002056                     __ptext30:
  6303                           	opt stack 0
  6304  002056                     _RtccReadTime:
  6305                           	opt stack 29
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;incstack = 0
  6309  002056  0EFC               	movlw	252
  6310  002058  010F               	movlb	15	; () banked
  6311  00205A  173F               	andwf	63,f,b	;volatile
  6312                           
  6313                           ; BSR set to: 15
  6314  00205C  010F               	movlb	15	; () banked
  6315  00205E  813F               	bsf	63,0,b	;volatile
  6316                           
  6317                           ; BSR set to: 15
  6318  002060  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  6319                           
  6320                           ; BSR set to: 15
  6321  002064  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  6322                           
  6323                           ; BSR set to: 15
  6324  002068  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  6325                           
  6326                           ; BSR set to: 15
  6327  00206C  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  6328                           
  6329                           ; BSR set to: 15
  6330  002070  0EFC               	movlw	252
  6331  002072  010F               	movlb	15	; () banked
  6332  002074  173F               	andwf	63,f,b	;volatile
  6333  002076  010F               	movlb	15	; () banked
  6334  002078  813F               	bsf	63,0,b	;volatile
  6335                           
  6336                           ; BSR set to: 15
  6337  00207A  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  6338                           
  6339                           ; BSR set to: 15
  6340  00207E  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  6341                           
  6342                           ; BSR set to: 15
  6343  002082  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  6344                           
  6345                           ; BSR set to: 15
  6346  002086  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  6347                           
  6348                           ; BSR set to: 15
  6349  00208A  5009               	movf	RtccReadTime@rTD1+6,w,c
  6350  00208C  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  6351  00208E  A4D8               	btfss	status,2,c
  6352  002090  D7E2               	goto	_RtccReadTime
  6353                           
  6354                           ; BSR set to: 15
  6355                           
  6356                           ; BSR set to: 15
  6357  002092  EE20 F003          	lfsr	2,3
  6358  002096  5001               	movf	RtccReadTime@pTm,w,c
  6359  002098  26D9               	addwf	fsr2l,f,c
  6360  00209A  5002               	movf	RtccReadTime@pTm+1,w,c
  6361  00209C  22DA               	addwfc	fsr2h,f,c
  6362  00209E  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  6363  0020A2  EE20 F002          	lfsr	2,2
  6364  0020A6  5001               	movf	RtccReadTime@pTm,w,c
  6365  0020A8  26D9               	addwf	fsr2l,f,c
  6366  0020AA  5002               	movf	RtccReadTime@pTm+1,w,c
  6367  0020AC  22DA               	addwfc	fsr2h,f,c
  6368  0020AE  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  6369  0020B2  EE20 F001          	lfsr	2,1
  6370  0020B6  5001               	movf	RtccReadTime@pTm,w,c
  6371  0020B8  26D9               	addwf	fsr2l,f,c
  6372  0020BA  5002               	movf	RtccReadTime@pTm+1,w,c
  6373  0020BC  22DA               	addwfc	fsr2h,f,c
  6374  0020BE  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  6375                           
  6376                           ; BSR set to: 15
  6377  0020C2  0012               	return		;funcret
  6378  0020C4                     __end_of_RtccReadTime:
  6379                           	opt stack 0
  6380                           tblptru	equ	0xFF8
  6381                           tblptrh	equ	0xFF7
  6382                           tblptrl	equ	0xFF6
  6383                           tablat	equ	0xFF5
  6384                           prodh	equ	0xFF4
  6385                           prodl	equ	0xFF3
  6386                           intcon	equ	0xFF2
  6387                           indf0	equ	0xFEF
  6388                           postinc0	equ	0xFEE
  6389                           fsr0h	equ	0xFEA
  6390                           fsr0l	equ	0xFE9
  6391                           wreg	equ	0xFE8
  6392                           postdec1	equ	0xFE5
  6393                           fsr1l	equ	0xFE1
  6394                           indf2	equ	0xFDF
  6395                           postinc2	equ	0xFDE
  6396                           postdec2	equ	0xFDD
  6397                           fsr2h	equ	0xFDA
  6398                           fsr2l	equ	0xFD9
  6399                           status	equ	0xFD8
  6400                           
  6401 ;; *************** function _RtccReadDate *****************
  6402 ;; Defined at:
  6403 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  pDt             2    0[COMRAM] PTR struct .
  6406 ;;		 -> RtccDate(4), 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  rTD0            8   10[COMRAM] struct .
  6409 ;;  rTD1            8    2[COMRAM] struct .
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      void 
  6412 ;; Registers used:
  6413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6420 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6422 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6423 ;;Total ram usage:       18 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_Read_RTC
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text31
  6433  001CE0                     __ptext31:
  6434                           	opt stack 0
  6435  001CE0                     _RtccReadDate:
  6436                           	opt stack 29
  6437                           
  6438                           ; BSR set to: 15
  6439                           ;incstack = 0
  6440  001CE0  0EFC               	movlw	252
  6441  001CE2  010F               	movlb	15	; () banked
  6442  001CE4  173F               	andwf	63,f,b	;volatile
  6443  001CE6  0E03               	movlw	3
  6444  001CE8  010F               	movlb	15	; () banked
  6445  001CEA  133F               	iorwf	63,f,b	;volatile
  6446                           
  6447                           ; BSR set to: 15
  6448  001CEC  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  6449                           
  6450                           ; BSR set to: 15
  6451  001CF0  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  6452                           
  6453                           ; BSR set to: 15
  6454  001CF4  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  6455                           
  6456                           ; BSR set to: 15
  6457  001CF8  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  6458                           
  6459                           ; BSR set to: 15
  6460  001CFC  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  6461                           
  6462                           ; BSR set to: 15
  6463  001D00  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  6464  001D04  0EFC               	movlw	252
  6465  001D06  010F               	movlb	15	; () banked
  6466  001D08  173F               	andwf	63,f,b	;volatile
  6467  001D0A  0E03               	movlw	3
  6468  001D0C  010F               	movlb	15	; () banked
  6469  001D0E  133F               	iorwf	63,f,b	;volatile
  6470                           
  6471                           ; BSR set to: 15
  6472  001D10  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  6473                           
  6474                           ; BSR set to: 15
  6475  001D14  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  6476                           
  6477                           ; BSR set to: 15
  6478  001D18  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  6479                           
  6480                           ; BSR set to: 15
  6481  001D1C  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  6482                           
  6483                           ; BSR set to: 15
  6484  001D20  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  6485                           
  6486                           ; BSR set to: 15
  6487  001D24  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  6488  001D28  5005               	movf	RtccReadDate@rTD1+2,w,c
  6489  001D2A  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  6490  001D2C  A4D8               	btfss	status,2,c
  6491  001D2E  D7D8               	goto	_RtccReadDate
  6492                           
  6493                           ; BSR set to: 15
  6494                           
  6495                           ; BSR set to: 15
  6496  001D30  EE20 F001          	lfsr	2,1
  6497  001D34  5001               	movf	RtccReadDate@pDt,w,c
  6498  001D36  26D9               	addwf	fsr2l,f,c
  6499  001D38  5002               	movf	RtccReadDate@pDt+1,w,c
  6500  001D3A  22DA               	addwfc	fsr2h,f,c
  6501  001D3C  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  6502  001D40  EE20 F002          	lfsr	2,2
  6503  001D44  5001               	movf	RtccReadDate@pDt,w,c
  6504  001D46  26D9               	addwf	fsr2l,f,c
  6505  001D48  5002               	movf	RtccReadDate@pDt+1,w,c
  6506  001D4A  22DA               	addwfc	fsr2h,f,c
  6507  001D4C  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  6508                           
  6509                           ; BSR set to: 15
  6510  001D50  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  6511  001D54  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  6512  001D58  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  6513                           
  6514                           ; BSR set to: 15
  6515  001D5C  EE20 F003          	lfsr	2,3
  6516  001D60  5001               	movf	RtccReadDate@pDt,w,c
  6517  001D62  26D9               	addwf	fsr2l,f,c
  6518  001D64  5002               	movf	RtccReadDate@pDt+1,w,c
  6519  001D66  22DA               	addwfc	fsr2h,f,c
  6520  001D68  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  6521                           
  6522                           ; BSR set to: 15
  6523  001D6C  0012               	return		;funcret
  6524  001D6E                     __end_of_RtccReadDate:
  6525                           	opt stack 0
  6526                           tblptru	equ	0xFF8
  6527                           tblptrh	equ	0xFF7
  6528                           tblptrl	equ	0xFF6
  6529                           tablat	equ	0xFF5
  6530                           prodh	equ	0xFF4
  6531                           prodl	equ	0xFF3
  6532                           intcon	equ	0xFF2
  6533                           indf0	equ	0xFEF
  6534                           postinc0	equ	0xFEE
  6535                           fsr0h	equ	0xFEA
  6536                           fsr0l	equ	0xFE9
  6537                           wreg	equ	0xFE8
  6538                           postdec1	equ	0xFE5
  6539                           fsr1l	equ	0xFE1
  6540                           indf2	equ	0xFDF
  6541                           postinc2	equ	0xFDE
  6542                           postdec2	equ	0xFDD
  6543                           fsr2h	equ	0xFDA
  6544                           fsr2l	equ	0xFD9
  6545                           status	equ	0xFD8
  6546                           tblptru	equ	0xFF8
  6547                           tblptrh	equ	0xFF7
  6548                           tblptrl	equ	0xFF6
  6549                           tablat	equ	0xFF5
  6550                           prodh	equ	0xFF4
  6551                           prodl	equ	0xFF3
  6552                           intcon	equ	0xFF2
  6553                           indf0	equ	0xFEF
  6554                           postinc0	equ	0xFEE
  6555                           fsr0h	equ	0xFEA
  6556                           fsr0l	equ	0xFE9
  6557                           wreg	equ	0xFE8
  6558                           postdec1	equ	0xFE5
  6559                           fsr1l	equ	0xFE1
  6560                           indf2	equ	0xFDF
  6561                           postinc2	equ	0xFDE
  6562                           postdec2	equ	0xFDD
  6563                           fsr2h	equ	0xFDA
  6564                           fsr2l	equ	0xFD9
  6565                           status	equ	0xFD8
  6566                           
  6567                           	psect	rparam
  6568  0000                     tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           indf0	equ	0xFEF
  6576                           postinc0	equ	0xFEE
  6577                           fsr0h	equ	0xFEA
  6578                           fsr0l	equ	0xFE9
  6579                           wreg	equ	0xFE8
  6580                           postdec1	equ	0xFE5
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8


Data Sizes:
    Strings     125
    Constant    14
    Data        32
    BSS         83
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      95
    BANK0           160      0      83
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    main$2149	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 3775
		 -> STR_17(CODE[7]), RAM(DATA[3775]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_16(CODE[3]), STR_13(CODE[5]), STR_8(CODE[15]), STR_7(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_12(CODE[9]), STR_11(CODE[9]), 
		 -> STR_10(CODE[9]), STR_9(CODE[7]), buffer2(BANK0[20]), 

    ingreso_numero@num	PTR int  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    array_seleccionar	PTR unsigned char [6] size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _titila_texto_insert_password->_lcd_putrs
    _pantalla_contrasenia->_guarda_numero_ingresado
    _guarda_numero_ingresado->_ingreso_numero
    _ingreso_numero->_sprintf
    _setHoraMinutoSegundo->_sprintf
    _setDiaMesAnio->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _Write_RTC->_RtccWriteDate
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   93730
                                             44 COMRAM     5     5      0
                           _Read_RTC
                          _Write_RTC
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
                    _setRelojDigital
                              _setup
_si_apreta_numero_va_a_pantalla_cont
                            _sprintf
       _titila_texto_insert_password
 ---------------------------------------------------------------------------------
 (1) _titila_texto_insert_password                         1     1      0    4783
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (1) _si_apreta_numero_va_a_pantalla_contrasenia           0     0      0   33016
               _pantalla_contrasenia
 ---------------------------------------------------------------------------------
 (2) _pantalla_contrasenia                                 0     0      0   33016
            _guarda_numero_ingresado
                         _lcd_gotoxy
                          _lcd_putrs
                    _setRelojDigital
 ---------------------------------------------------------------------------------
 (3) _guarda_numero_ingresado                              2     2      0    8301
                                             42 COMRAM     2     2      0
                     _ingreso_numero
 ---------------------------------------------------------------------------------
 (4) _ingreso_numero                                       3     1      2    8301
                                             39 COMRAM     3     1      2
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   24063
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                    _setRelojDigital
 ---------------------------------------------------------------------------------
 (3) _setRelojDigital                                      0     0      0   19932
                      _setDiaMesAnio
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (4) _setHoraMinutoSegundo                                 0     0      0    9966
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _setDiaMesAnio                                        0     0      0    9966
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    2714
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     411
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _lcd_putrs                                            2     0      2    3170
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (3) _lcd_putc                                             1     1      0    2365
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_gotoxy                                           3     2      1    1613
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (7) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     932
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _lcd_comand
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _setRelojDigital
     _setDiaMesAnio
       _Write_RTC
         _RtccWrOn
         _RtccWriteDate
           _RtccWrOn
         _RtccWriteTime
           _RtccWrOn
         ___awdiv
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _setHoraMinutoSegundo
       _Write_RTC
         _RtccWrOn
         _RtccWriteDate
           _RtccWrOn
         _RtccWriteTime
           _RtccWrOn
         ___awdiv
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _setRelojDigital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
   _si_apreta_numero_va_a_pantalla_contrasenia
     _pantalla_contrasenia
       _guarda_numero_ingresado
         _ingreso_numero
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _setRelojDigital
         _setDiaMesAnio
           _Write_RTC
             _RtccWrOn
             _RtccWriteDate
               _RtccWrOn
             _RtccWriteTime
               _RtccWrOn
             ___awdiv
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
         _setHoraMinutoSegundo
           _Write_RTC
             _RtccWrOn
             _RtccWriteDate
               _RtccWrOn
             _RtccWriteTime
               _RtccWrOn
             ___awdiv
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _titila_texto_insert_password
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      53       5       51.9%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     31      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B2       6        0.0%
DATA                 0      0      B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Oct 06 21:04:15 2017

                                                  _a 003E                                                    _b 003C  
                                                  _c 003A                                                    _i 0042  
                                                  _j 0040                                                    _k 0038  
                                     ?_lcd_send_byte 0003                                         ___awdiv@sign 0006  
                                ___wmul@multiplicand 0003                                          lcd_comand@d 0005  
                                       __CFG_CP0$OFF 000000                             __size_of_setRelojDigital 000A  
                                                l205 1DD4                                                  l301 1258  
                                                l302 1262                                                  l230 1012  
                                                l231 1016                                                  l152 2012  
                                                l321 1302                                                  l170 1802  
                                                l322 130A                                                  l306 12DC  
                                                l314 12C0                                                  l250 10D2  
                                                l147 1E9A                                                  l171 181E  
                                                l315 12CA                                                  l243 10A2  
                                                l227 0FA2                                                  l500 197A  
                                                l420 1446                                                  l148 1EB6  
                                                l164 2126                                                  l172 183A  
                                                l308 129A                                                  l244 10AA  
                                                l236 1030                                                  l421 1454  
                                                l405 1364                                                  l165 2116  
                                                l173 185E                                                  l309 12A2  
                                                l237 1036                                                  l430 14C8  
                                                l422 1450                                                  l414 13C0  
                                                l406 137E                                                  l174 187A  
                                                l270 116A                                                  l254 113C  
                                                l262 1120                                                  l511 1A46  
                                                l175 1896                                                  l183 21BC  
                                                l191 1D90                                                  l159 1C92  
                                                l319 1344                                                  l327 1328  
                                                l263 112A                                                  l352 237A  
                                                l440 15D2                                                  l416 1512  
                                                l424 149C                                                  l408 1392  
                                                l176 18BA                                                  l328 1332  
                                                l280 120C                                                  l256 10FA  
                                                l353 237C                                                  l433 150C  
                                                l409 138C                                                  l177 18D6  
                                                l257 1102                                                  l249 10C8  
                                                l506 19DE                                                  l370 22D6  
                                                l434 153A                                                  l426 14B6  
                                                l178 18F2                                                  l282 11CA  
                                                l507 1A3C                                                  l427 14A6  
                                                l419 141E                                                  l283 11D2  
                                                l267 11A4                                                  l275 1188  
                                                l540 1B42                                                  l364 23C2  
                                                l372 22E2                                                  l276 1192  
                                                l357 1F28                                                  l373 22EE  
                                                l429 14FA                                                  l293 1274  
                                                l269 1162                                                  l710 1E1E  
                                                l374 22FA                                                  l390 2260  
                                                l438 15A6                                                  l198 1DB2  
                                                l359 1F4A                                                  l535 1AE0  
                                                l391 2238                                                  l439 15AE  
                                                l295 1232                                                  l536 1B38  
                                                l712 1E3C                                                  l448 1650  
                                                l296 123A                                                  l288 11F0  
                                                l529 1A8C                                                  l713 1E34  
                                                l369 2306                                                  l449 15FE  
                                                l289 11FA                                                  l716 1E5C  
                                                l717 1E66                                                  l709 1E0E  
                                                l718 1E74                                                  l743 242E  
                                                l757 241E                                                  l971 2202  
                                                l972 21FA                                                  l892 23EE  
                                                l981 2332                                                  l982 232A  
                                                l975 2222                                                  l976 222C  
                                                l985 234A                                                  l986 2354  
                                                _dia 0051                                                  _key 0044  
                                                _mes 0055                                                  wreg 000FE8  
                                    RtccReadDate@pDt 0001                                          lcd_gotoxy@x 0006  
                                        lcd_gotoxy@y 0005                                                 l3073 1F20  
                                               l3049 21BC                                                 l3087 1F42  
                                               l2753 14C8                                                 l2747 14A6  
                                               l2773 1556                                                 STR_1 0F66  
                                               STR_2 0F7F                                                 STR_3 0F7A  
                                               STR_4 0F6B                                                 STR_5 0F75  
                                               STR_6 0F70                                                 STR_7 0F31  
                                               STR_8 0F40                                                 STR_9 0F5F  
                                               u2008 1FCC                                                 u3010 1D7E  
                                               u3110 1DAE                                                 u3030 1D86  
                                               u2320 1E40                                                 u3210 1DEC  
                                               u3130 1DC2                                                 u3050 1D8C  
                                               u3230 1DF4                                                 u3150 1DCA  
                                               u3070 1DA0                                                 u3310 101A  
                                               u2360 2206                                                 u2600 1658  
                                               u3240 0FB2                                                 u2610 1670  
                                               u2530 1582                                                 u2450 1480  
                                               u3170 1DD0                                                 u3090 1DA8  
                                               u3410 10D6                                                 u2620 2258  
                                               u3340 103A                                                 u3260 0FCA  
                                               u2630 2280                                                 u2390 2336  
                                               u3190 1DE4                                                 u3520 116E  
                                               u2457 1476                                                 u1930 1F7C  
                                               u2490 14F0                                                 u2650 1E8E  
                                               u3450 1106                                                 u3258 0FB4  
                                               u2627 224E                                                 u2580 15DA  
                                               u2660 1EAA                                                 u3620 11FE  
                                               u3380 10AE                                                 u2637 2276  
                                               u1950 1F94                                                 u2590 15F8  
                                               u2670 1FF6                                                 u2910 21CC  
                                               u3550 1196                                                 u3278 0FCC  
                                               u3800 130E                                                 u3480 112E  
                                               u2497 14E6                                                 u1970 1FAE  
                                               u3730 12A6                                                 u1948 1F7E  
                                               u3660 123E                                                 u1990 1FCA  
                                               u2950 1F38                                                 u3830 1336  
                                               u3590 11D6                                                 u1968 1F96  
                                               u3760 12CE                                                 u3690 1266  
                                               u3907 12D4                                                 u1988 1FB0  
                                               u3917 133C                                                 u3927 134E  
                                               u3937 1C8A                                                 u3857 0FDC  
                                               u3947 1CD4                                                 u3867 1134  
                                               u3957 211C                                                 u3877 119C  
                                               u3967 2420                                                 u3887 1204  
                                               u3977 2430                                                 u3897 126C  
                                   ?_lcd_send_nibble 0001                                                 _anio 0057  
                                               _flag 02F8                                    ingreso_numero@num 0028  
                                               _main 0F8E                                                 _hora 004F  
                                               fsr0h 000FEA                                                 indf0 000FEF  
                                               fsr2h 000FDA                                                 fsr0l 000FE9  
                                               indf2 000FDF                                                 fsr1l 000FE1  
                                               fsr2l 000FD9                                        __CFG_T1DIG$ON 000000  
                           ?_guarda_numero_ingresado 0001                                                 prodh 000FF4  
                      __size_of_pantalla_contrasenia 0054                                                 prodl 000FF3  
                                               start 0000                                        __CFG_IESO$OFF 000000  
                                   RtccReadDate@rTD0 000B                                     RtccReadDate@rTD1 0003  
                                       ___param_bank 000000                                      RtccReadTime@pTm 0001  
                                        _Delay1KTCYx 241C                                        __CFG_PLLDIV$1 000000  
                                              ?_main 0001                                      __end_of___awdiv 1E7E  
                                              STR_10 0F4F                                                STR_11 0F17  
                                              STR_12 0F17                                                STR_13 0F84  
                                              STR_14 0F20                                                STR_15 0F0F  
                                              STR_16 0F89                                                STR_17 0F58  
                              __size_of_Delay100TCYx 0010                                      ___awdiv@divisor 0003  
                                    __end_of___lwdiv 2236                                      __end_of___lwmod 235E  
                                    ___awdiv@counter 0005                                                _TRISA 000F92  
                                              _TRISB 000F93                                                _TRISC 000F94  
                                     __CFG_FCMEN$OFF 000000                                      __end_of_dpowers 0F0B  
                                              _mes_d 005A                                                _mes_u 00AE  
                                    __end_of_isdigit 23F6                                                _setup 2288  
                                     __pbitbssCOMRAM 02F8                                                tablat 000FF5  
                               _setHoraMinutoSegundo 1FE6                                         lcd_putrs@ptr 0009  
                                              status 000FD8                                      __end_of_sprintf 167E  
                            __CFG_DSWDTOSC$INTOSCREF 000000                                      __initialization 212C  
                                       _Delay100TCYx 242C                                         __end_of_main 135A  
                                    ??_lcd_send_byte 0004                                     RtccReadTime@rTD0 000B  
                                   RtccReadTime@rTD1 0003                                     __end_of_Read_RTC 1C48  
                                             ??_main 002D                                        __activetblptr 000002  
                                   __end_of_RtccWrOn 241C                                    ??_setRelojDigital 0028  
                                             _EECON2 000FA7                                               _ANCON0 000F48  
                                             _ANCON1 000F49                                     ___awdiv@dividend 0001  
                                             ?_setup 0001                                ?_setHoraMinutoSegundo 0001  
                                     __CFG_WDTEN$OFF 000000                                     RtccWriteDate@pDt 0001  
                                             _RTCCFG 000F3F                                       __CFG_WPCFG$OFF 000000  
                                     __CFG_WPDIS$OFF 000000                                       __CFG_XINST$OFF 000000  
                                   __end_of_lcd_init 1F70                                     __end_of_lcd_putc 231C  
                                             ___wmul 2390                                            ??___awdiv 0005  
                                     __CFG_STVREN$ON 000000                                               _diasem 0053  
                                             _anio_d 0059                                               _anio_u 00AC  
                                          ??___lwdiv 0005                                            ??___lwmod 000C  
                                             _hora_d 005C                                               _hora_u 00B0  
                                             clear_0 2172                                               clear_1 2180  
                                   ___awdiv@quotient 0007                                               _minuto 004D  
                              __end_of_RtccWriteDate 1A50                                __end_of_RtccWriteTime 1B4C  
                                   RtccWriteTime@pTm 0001                                         __pdataCOMRAM 004D  
                                          ??_isdigit 0001                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                            ??_sprintf 0017  
                                         __accesstop 0060                              __end_of__initialization 2186  
                                 __size_of_Write_RTC 0160                                        ___rparam_used 000001  
                                     __pcstackCOMRAM 0001                                         __pidataBANK0 23F6  
               __end_of_titila_texto_insert_password 1CE0                __size_of_titila_texto_insert_password 0098  
                       _titila_texto_insert_password 1C48                                        __end_of_setup 22D2  
                                    __CFG_DSWDTPS$G2 000000                                      __CFG_OSC$INTOSC 000000  
                                  lcd_gotoxy@address 0007                                   __size_of_lcd_putrs 0052  
                             ??_setHoraMinutoSegundo 0028                                         sprintf@width 0025  
                                            ??_setup 0028                                           __pbssBANK0 0060  
                                          ?_Read_RTC 0001                                           _dia_semana 00AD  
                          RtccWriteTime@tempHourWDay 000A                                           __pnvCOMRAM 0059  
                                          ?_RtccWrOn 0001                                       lcd_send_byte@n 0003  
                                            ?___wmul 0001                                        ?_RtccReadDate 0001  
                                      ?_RtccReadTime 0001                                         ?_Delay1KTCYx 0001  
                             __size_of_setDiaMesAnio 007C                     __size_of_guarda_numero_ingresado 013C  
                      ?_titila_texto_insert_password 0001                         __end_of_pantalla_contrasenia 21E4  
                                  __end_of_Write_RTC 17DE                                           _lcd_comand 243C  
                                         _lcd_gotoxy 23B6                                              _RTCVALH 000F99  
                                            _RTCVALL 000F98                                            ?_lcd_init 0001  
                                          ?_lcd_putc 0001                                           ??_Read_RTC 0013  
                                            __Hparam 0000                                              __Lparam 0000  
                           __size_of_lcd_send_nibble 0076                                           ??_RtccWrOn 0001  
                                     ??_RtccReadDate 0003                                       ??_RtccReadTime 0003  
                                            ___awdiv 1DFA                                    __end_of_lcd_putrs 2288  
                                    __size_of___wmul 0026                                              ___lwdiv 21E4  
                                            ___lwmod 231C                              __size_of_ingreso_numero 0068  
                                       __psmallconst 0F00                                          _RtccTimeVal 0080  
                                            __pcinit 212C                                              _fecha_d 005B  
                                    _setRelojDigital 2456                                              _fecha_u 00AF  
                                            __ramtop 0F00                                              __ptext0 0F8E  
                                            __ptext1 1C48                                              __ptext2 1D6E  
                                            __ptext3 2190                                              __ptext4 17DE  
                                            __ptext5 20C4                                              __ptext6 2288  
                                            __ptext7 2456                                              __ptext8 1FE6  
                                            __ptext9 1E7E                                              _buffer2 0084  
                                          _T1CONbits 000FCD                                              _dpowers 0F01  
                                            _isdigit 23D8                                   _numeros_ingresados 0034  
                                            _segundo 0036                                              _sprintf 135A  
                                         ??_lcd_init 0005                                           ??_lcd_putc 0008  
                               end_of_initialization 2186                                        _setDiaMesAnio 1E7E  
                               lcd_send_byte@address 0004                                        __Lmediumconst 0000  
                                            postdec1 000FE5                                              postdec2 000FDD  
                                            postinc0 000FEE                                              postinc2 000FDE  
                              __end_of_lcd_send_byte 2390                                            _PORTAbits 000F80  
                                   __CFG_DSBOREN$OFF 000000                                          ?_lcd_comand 0001  
                                   __CFG_CPUDIV$OSC1 000000                                            _TRISBbits 000F93  
                     ??_titila_texto_insert_password 000B                                          ?_lcd_gotoxy 0005  
                                    _LCD_INIT_STRING 0F0B                                       ?_setDiaMesAnio 0001  
                                   __CFG_IOL1WAY$OFF 000000                            RtccWriteDate@tempDayMonth 000A  
                               _pantalla_contrasenia 2190                              __end_of_setRelojDigital 2460  
                                __CFG_MSSP7B_EN$MSK7 000000                                     Delay100TCYx@unit 0001  
                                     __end_of___wmul 23B6                              _guarda_numero_ingresado 17DE  
                                      __pidataCOMRAM 244A                            RtccWriteDate@tempHourWDay 000C  
                                  ??_lcd_send_nibble 0001                                 __size_of_Delay1KTCYx 0010  
                                   __CFG_DSWDTEN$OFF 000000                                  start_initialization 212C  
                               __end_of_RtccReadDate 1D6E                                 __end_of_RtccReadTime 20C4  
                               RtccWriteTime@wasAlrm 0006                                 RtccWriteTime@wasWrEn 0007  
                              ?_pantalla_contrasenia 0001                               __size_of_RtccWriteDate 0136  
                                    RtccWriteDate@di 0003                               __size_of_RtccWriteTime 00FC  
                                  __size_of_Read_RTC 00FC                                  __size_of_lcd_comand 000E  
                                __size_of_lcd_gotoxy 0022                                             ??___wmul 0005  
                                     _ingreso_numero 20C4                                          __pdataBANK0 0098  
                                  __size_of_RtccWrOn 0012                                      RtccWriteTime@di 0003  
                                   __CFG_LPT1OSC$OFF 000000                                          _ALRMCFGbits 000F91  
                            __end_of_LCD_INIT_STRING 0F0F                                          __pbssCOMRAM 0032  
                              main@boton_seleccionar 0030                                            _Write_RTC 167E  
                                    ??_setDiaMesAnio 0028                                         _isdigit$1788 0002  
                                    Delay1KTCYx@unit 0001                        __size_of_setHoraMinutoSegundo 0070  
                                  __size_of_lcd_init 0076                                          sprintf@flag 001B  
                                  __size_of_lcd_putc 004A                                          sprintf@prec 001E  
                                  _array_contrasenia 00A4                                            __pnvBANK0 00AC  
                                   ___lwdiv@dividend 0001                               __end_of_ingreso_numero 212C  
                                   ?_setRelojDigital 0001                                        ?_Delay100TCYx 0001  
                          ??_guarda_numero_ingresado 002B                                             ?___awdiv 0001  
                                           ?___lwdiv 0001                                             ?___lwmod 0008  
                            RtccWriteTime@tempMinSec 0008                          _array_contrasenia_ingresada 0060  
                                          _lcd_putrs 2236                              main@boton_centro_estado 002E  
                                      _RtccWriteDate 191A                                          __smallconst 0F00  
                                      _RtccWriteTime 1A50                                             ?_isdigit 0001  
                               __CFG_RTCOSC$T1OSCREF 000000                                           ?_Write_RTC 0001  
                                   ___lwdiv@quotient 0005                                             ?_sprintf 000D  
                                     __size_of_setup 004A                                     _RtccAlrmTimeDate 0070  
                             ??_pantalla_contrasenia 002D                                       ___wmul@product 0005  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _PIE3bits 000FA3                                            _segundo_d 005E  
                                     ??_Delay100TCYx 0001                                            _segundo_u 00B2  
                                    ?_ingreso_numero 0028                                     __CFG_WDTPS$32768 000000  
                                 RtccWriteDate@wasOn 0005                                   _Rtcc_read_TimeDate 0068  
                                     ?_RtccWriteDate 0001                                           ?_lcd_putrs 0009  
                                  ___wmul@multiplier 0001                                       ?_RtccWriteTime 0001  
                                          lcd_init@i 0005                                __size_of_RtccReadDate 008E  
                                       ??_lcd_comand 0005                                            lcd_putc@c 0008  
                              __size_of_RtccReadTime 006E                                         ??_lcd_gotoxy 0006  
                    __end_of_guarda_numero_ingresado 191A                                            copy_data0 2140  
                                          copy_data1 2160                                             _Read_RTC 1B4C  
                                  _array_seleccionar 0098                                      _lcd_send_nibble 1F70  
                                           __Hrparam 0000                                             _RtccDate 0045  
                                           __Lrparam 0000                                             _RtccTime 0049  
                                           _RtccWrOn 240A                                   __end_of_lcd_comand 244A  
                                 __end_of_lcd_gotoxy 23D8                                         _RtccReadDate 1CE0  
                                   __size_of___awdiv 0084                                         _RtccReadTime 2056  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                                       _RtccTimeDate 0078                                           sprintf@len 0023  
                                         sprintf@val 001C                                     __size_of_isdigit 001E  
                                    ___lwdiv@divisor 0003                                          ??_Write_RTC 000E  
                                    ___lwdiv@counter 0007                                             __ptext10 135A  
                                           __ptext11 23D8                                             __ptext20 1A50  
                                           __ptext12 2390                                             __ptext21 191A  
                                           __ptext13 231C                                             __ptext30 2056  
                                           __ptext22 240A                                             __ptext14 21E4  
                                           __ptext31 1CE0                                             __ptext23 1EFA  
                                           __ptext15 2236                                             __ptext24 241C  
                                           __ptext16 22D2                                             __ptext25 243C  
                                           __ptext17 23B6                                             __ptext26 235E  
                                           __ptext18 167E                                             __ptext27 1F70  
                                           __ptext19 1DFA                                             __ptext28 242C  
                                           __ptext29 1B4C                                             _lcd_init 1EFA  
                                           _lcd_putc 22D2                                      _txt_insert_pass 0032  
                                   __size_of_sprintf 0324                               __size_of_lcd_send_byte 0032  
                                      __size_of_main 03CC                                             _minuto_d 005D  
                                           _minuto_u 00B1                                        ??_Delay1KTCYx 0001  
                                    ??_RtccWriteDate 0004                                      ??_RtccWriteTime 0004  
                                        ??_lcd_putrs 000B                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2   __end_of_si_apreta_numero_va_a_pantalla_contrasenia 1DFA  
__size_of_si_apreta_numero_va_a_pantalla_contrasenia 008C         ??_si_apreta_numero_va_a_pantalla_contrasenia 002D  
        ?_si_apreta_numero_va_a_pantalla_contrasenia 0001           _si_apreta_numero_va_a_pantalla_contrasenia 1D6E  
                                 RtccWriteTime@wasOn 0005                                 __end_of_Delay100TCYx 243C  
                                           isdigit@c 0003                                            sprintf@ap 001F  
                                          sprintf@cp 0021                              __end_of_lcd_send_nibble 1FE6  
                                          sprintf@sp 000D                                     ___lwmod@dividend 0008  
                                         _OSCCONbits 000FD3                                RtccWriteDate@tempYear 0007  
                       __end_of_setHoraMinutoSegundo 2056                                        _lcd_send_byte 235E  
                                         _RTCCFGbits 000F3F                                             sprintf@c 0027  
                                           sprintf@f 000F                                      ___lwmod@divisor 000A  
                                __end_of_Delay1KTCYx 242C                                      ___lwmod@counter 000C  
                               RtccWriteDate@wasAlrm 0006                                 RtccWriteDate@wasWrEn 0009  
                              __end_of_setDiaMesAnio 1EFA                                     ??_ingreso_numero 002A  
                              lcd_send_nibble@nibble 0002  
