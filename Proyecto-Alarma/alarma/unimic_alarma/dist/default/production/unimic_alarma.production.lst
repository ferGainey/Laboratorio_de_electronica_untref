

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Oct 20 21:05:59 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60  0000                     
    61                           ; Version 1.43
    62                           ; Generated 25/07/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F26J50 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  0024B8                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _minuto
   101  0024B8  001E               	dw	30
   102                           
   103                           ;initializer for _hora
   104  0024BA  0012               	dw	18
   105                           
   106                           ;initializer for _dia
   107  0024BC  0008               	dw	8
   108                           
   109                           ;initializer for _diasem
   110  0024BE  0003               	dw	3
   111                           
   112                           ;initializer for _mes
   113  0024C0  0009               	dw	9
   114                           
   115                           ;initializer for _anio
   116  0024C2  000F               	dw	15
   117                           
   118                           	psect	idataBANK0
   119  002456                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for _array_seleccionar
   123  002456  A5                 	db	low STR_1
   124  002457  0F                 	db	high STR_1
   125  002458  BE                 	db	low STR_2
   126  002459  0F                 	db	high STR_2
   127  00245A  B9                 	db	low STR_3
   128  00245B  0F                 	db	high STR_3
   129  00245C  AA                 	db	low STR_4
   130  00245D  0F                 	db	high STR_4
   131  00245E  B4                 	db	low STR_5
   132  00245F  0F                 	db	high STR_5
   133  002460  AF                 	db	low STR_6
   134  002461  0F                 	db	high STR_6
   135                           
   136                           ;initializer for _array_contrasenia
   137  002462  0001               	dw	1
   138  002464  0002               	dw	2
   139  002466  0003               	dw	3
   140  002468  0004               	dw	4
   141                           
   142                           	psect	smallconst
   143  000F00                     __psmallconst:
   144                           	opt stack 0
   145  000F00  00                 	db	0
   146  000F01                     _dpowers:
   147                           	opt stack 0
   148  000F01  0001               	dw	1
   149  000F03  000A               	dw	10
   150  000F05  0064               	dw	100
   151  000F07  03E8               	dw	1000
   152  000F09  2710               	dw	10000
   153  000F0B                     __end_of_dpowers:
   154                           	opt stack 0
   155  000F0B                     _LCD_INIT_STRING:
   156                           	opt stack 0
   157  000F0B  28                 	db	40
   158  000F0C  0C                 	db	12
   159  000F0D  01                 	db	1
   160  000F0E  06                 	db	6
   161  000F0F                     __end_of_LCD_INIT_STRING:
   162                           	opt stack 0
   163  000F0F                     STR_23:
   164                           
   165                           ; BSR set to: 15
   166  000F0F  49                 	db	73	;'I'
   167  000F10  6E                 	db	110	;'n'
   168  000F11  73                 	db	115	;'s'
   169  000F12  65                 	db	101	;'e'
   170  000F13  72                 	db	114	;'r'
   171  000F14  74                 	db	116	;'t'
   172  000F15  20                 	db	32
   173  000F16  6E                 	db	110	;'n'
   174  000F17  65                 	db	101	;'e'
   175  000F18  77                 	db	119	;'w'
   176  000F19  20                 	db	32
   177  000F1A  50                 	db	80	;'P'
   178  000F1B  61                 	db	97	;'a'
   179  000F1C  73                 	db	115	;'s'
   180  000F1D  73                 	db	115	;'s'
   181  000F1E  77                 	db	119	;'w'
   182  000F1F  6F                 	db	111	;'o'
   183  000F20  72                 	db	114	;'r'
   184  000F21  64                 	db	100	;'d'
   185  000F22  20                 	db	32
   186  000F23  00                 	db	0
   187  000F24                     STR_18:
   188                           
   189                           ; BSR set to: 15
   190  000F24  20                 	db	32
   191  000F25  20                 	db	32
   192  000F26  20                 	db	32
   193  000F27  20                 	db	32
   194  000F28  20                 	db	32
   195  000F29  20                 	db	32
   196  000F2A  20                 	db	32
   197  000F2B  20                 	db	32
   198  000F2C  20                 	db	32
   199  000F2D  20                 	db	32
   200  000F2E  20                 	db	32
   201  000F2F  20                 	db	32
   202  000F30  20                 	db	32
   203  000F31  20                 	db	32
   204  000F32  20                 	db	32
   205  000F33  20                 	db	32
   206  000F34  00                 	db	0
   207  000F35                     STR_17:
   208                           
   209                           ; BSR set to: 15
   210  000F35  41                 	db	65	;'A'
   211  000F36  6C                 	db	108	;'l'
   212  000F37  61                 	db	97	;'a'
   213  000F38  72                 	db	114	;'r'
   214  000F39  6D                 	db	109	;'m'
   215  000F3A  20                 	db	32
   216  000F3B  61                 	db	97	;'a'
   217  000F3C  63                 	db	99	;'c'
   218  000F3D  74                 	db	116	;'t'
   219  000F3E  69                 	db	105	;'i'
   220  000F3F  76                 	db	118	;'v'
   221  000F40  61                 	db	97	;'a'
   222  000F41  74                 	db	116	;'t'
   223  000F42  65                 	db	101	;'e'
   224  000F43  64                 	db	100	;'d'
   225  000F44  20                 	db	32
   226  000F45  00                 	db	0
   227  000F46                     STR_21:
   228                           
   229                           ; BSR set to: 15
   230  000F46  49                 	db	73	;'I'
   231  000F47  6E                 	db	110	;'n'
   232  000F48  73                 	db	115	;'s'
   233  000F49  65                 	db	101	;'e'
   234  000F4A  72                 	db	114	;'r'
   235  000F4B  74                 	db	116	;'t'
   236  000F4C  20                 	db	32
   237  000F4D  50                 	db	80	;'P'
   238  000F4E  61                 	db	97	;'a'
   239  000F4F  73                 	db	115	;'s'
   240  000F50  73                 	db	115	;'s'
   241  000F51  77                 	db	119	;'w'
   242  000F52  6F                 	db	111	;'o'
   243  000F53  72                 	db	114	;'r'
   244  000F54  64                 	db	100	;'d'
   245  000F55  20                 	db	32
   246  000F56  00                 	db	0
   247  000F57                     STR_7:
   248                           
   249                           ; BSR set to: 15
   250  000F57  25                 	db	37
   251  000F58  30                 	db	48	;'0'
   252  000F59  32                 	db	50	;'2'
   253  000F5A  75                 	db	117	;'u'
   254  000F5B  2F                 	db	47
   255  000F5C  25                 	db	37
   256  000F5D  30                 	db	48	;'0'
   257  000F5E  32                 	db	50	;'2'
   258  000F5F  75                 	db	117	;'u'
   259  000F60  2F                 	db	47
   260  000F61  25                 	db	37
   261  000F62  30                 	db	48	;'0'
   262  000F63  32                 	db	50	;'2'
   263  000F64  75                 	db	117	;'u'
   264  000F65  00                 	db	0
   265  000F66                     STR_8:
   266                           
   267                           ; BSR set to: 15
   268  000F66  25                 	db	37
   269  000F67  30                 	db	48	;'0'
   270  000F68  32                 	db	50	;'2'
   271  000F69  75                 	db	117	;'u'
   272  000F6A  3A                 	db	58	;':'
   273  000F6B  25                 	db	37
   274  000F6C  30                 	db	48	;'0'
   275  000F6D  32                 	db	50	;'2'
   276  000F6E  75                 	db	117	;'u'
   277  000F6F  3A                 	db	58	;':'
   278  000F70  25                 	db	37
   279  000F71  30                 	db	48	;'0'
   280  000F72  32                 	db	50	;'2'
   281  000F73  75                 	db	117	;'u'
   282  000F74  00                 	db	0
   283  000F75                     STR_10:
   284                           
   285                           ; BSR set to: 15
   286  000F75  50                 	db	80	;'P'
   287  000F76  61                 	db	97	;'a'
   288  000F77  73                 	db	115	;'s'
   289  000F78  73                 	db	115	;'s'
   290  000F79  77                 	db	119	;'w'
   291  000F7A  6F                 	db	111	;'o'
   292  000F7B  72                 	db	114	;'r'
   293  000F7C  64                 	db	100	;'d'
   294  000F7D  00                 	db	0
   295  000F7E                     STR_20:
   296                           
   297                           ; BSR set to: 15
   298  000F7E  45                 	db	69	;'E'
   299  000F7F  64                 	db	100	;'d'
   300  000F80  74                 	db	116	;'t'
   301  000F81  20                 	db	32
   302  000F82  50                 	db	80	;'P'
   303  000F83  61                 	db	97	;'a'
   304  000F84  73                 	db	115	;'s'
   305  000F85  73                 	db	115	;'s'
   306  000F86  00                 	db	0
   307  000F87                     STR_19:
   308                           
   309                           ; BSR set to: 15
   310  000F87  41                 	db	65	;'A'
   311  000F88  63                 	db	99	;'c'
   312  000F89  74                 	db	116	;'t'
   313  000F8A  69                 	db	105	;'i'
   314  000F8B  76                 	db	118	;'v'
   315  000F8C  65                 	db	101	;'e'
   316  000F8D  20                 	db	32
   317  000F8E  00                 	db	0
   318  000F8F                     STR_14:
   319                           
   320                           ; BSR set to: 15
   321  000F8F  50                 	db	80	;'P'
   322  000F90  72                 	db	114	;'r'
   323  000F91  65                 	db	101	;'e'
   324  000F92  73                 	db	115	;'s'
   325  000F93  73                 	db	115	;'s'
   326  000F94  20                 	db	32
   327  000F95  41                 	db	65	;'A'
   328  000F96  00                 	db	0
   329  000F97                     STR_26:
   330                           
   331                           ; BSR set to: 15
   332  000F97  28                 	db	40
   333  000F98  6E                 	db	110	;'n'
   334  000F99  75                 	db	117	;'u'
   335  000F9A  6C                 	db	108	;'l'
   336  000F9B  6C                 	db	108	;'l'
   337  000F9C  29                 	db	41
   338  000F9D  00                 	db	0
   339  000F9E                     STR_9:
   340                           
   341                           ; BSR set to: 15
   342  000F9E  49                 	db	73	;'I'
   343  000F9F  6E                 	db	110	;'n'
   344  000FA0  73                 	db	115	;'s'
   345  000FA1  65                 	db	101	;'e'
   346  000FA2  72                 	db	114	;'r'
   347  000FA3  74                 	db	116	;'t'
   348  000FA4  00                 	db	0
   349  000FA5                     STR_1:
   350                           
   351                           ; BSR set to: 15
   352  000FA5  20                 	db	32
   353  000FA6  44                 	db	68	;'D'
   354  000FA7  69                 	db	105	;'i'
   355  000FA8  61                 	db	97	;'a'
   356  000FA9  00                 	db	0
   357  000FAA                     STR_4:
   358                           
   359                           ; BSR set to: 15
   360  000FAA  48                 	db	72	;'H'
   361  000FAB  6F                 	db	111	;'o'
   362  000FAC  72                 	db	114	;'r'
   363  000FAD  61                 	db	97	;'a'
   364  000FAE  00                 	db	0
   365  000FAF                     STR_6:
   366                           
   367                           ; BSR set to: 15
   368  000FAF  20                 	db	32
   369  000FB0  53                 	db	83	;'S'
   370  000FB1  65                 	db	101	;'e'
   371  000FB2  67                 	db	103	;'g'
   372  000FB3  00                 	db	0
   373  000FB4                     STR_5:
   374                           
   375                           ; BSR set to: 15
   376  000FB4  20                 	db	32
   377  000FB5  4D                 	db	77	;'M'
   378  000FB6  69                 	db	105	;'i'
   379  000FB7  6E                 	db	110	;'n'
   380  000FB8  00                 	db	0
   381  000FB9                     STR_3:
   382                           
   383                           ; BSR set to: 15
   384  000FB9  41                 	db	65	;'A'
   385  000FBA  6E                 	db	110	;'n'
   386  000FBB  69                 	db	105	;'i'
   387  000FBC  6F                 	db	111	;'o'
   388  000FBD  00                 	db	0
   389  000FBE                     STR_2:
   390                           
   391                           ; BSR set to: 15
   392  000FBE  20                 	db	32
   393  000FBF  4D                 	db	77	;'M'
   394  000FC0  65                 	db	101	;'e'
   395  000FC1  73                 	db	115	;'s'
   396  000FC2  00                 	db	0
   397  000FC3                     STR_13:
   398                           
   399                           ; BSR set to: 15
   400  000FC3  25                 	db	37
   401  000FC4  30                 	db	48	;'0'
   402  000FC5  31                 	db	49	;'1'
   403  000FC6  75                 	db	117	;'u'
   404  000FC7  00                 	db	0
   405  000FC8                     
   406                           ; BSR set to: 15
   407  000FC8  25                 	db	37
   408  000FC9  73                 	db	115	;'s'
   409  000FCA  00                 	db	0
   410  0000                     
   411                           ; #config settings
   412  000FCB  00                 	db	0	; dummy byte at the end
   413  0000                     
   414                           	psect	nvCOMRAM
   415  000058                     __pnvCOMRAM:
   416                           	opt stack 0
   417  000058                     _anio_d:
   418                           	opt stack 0
   419  000058                     	ds	1
   420  000059                     _mes_d:
   421                           	opt stack 0
   422  000059                     	ds	1
   423  00005A                     _fecha_d:
   424                           	opt stack 0
   425  00005A                     	ds	1
   426  00005B                     _hora_d:
   427                           	opt stack 0
   428  00005B                     	ds	1
   429  00005C                     _minuto_d:
   430                           	opt stack 0
   431  00005C                     	ds	1
   432  00005D                     _segundo_d:
   433                           	opt stack 0
   434  00005D                     	ds	1
   435  00005E                     _segundo_u:
   436                           	opt stack 0
   437  00005E                     	ds	1
   438                           
   439                           	psect	nvBANK0
   440  0000AE                     __pnvBANK0:
   441                           	opt stack 0
   442  0000AE                     _anio_u:
   443                           	opt stack 0
   444  0000AE                     	ds	1
   445  0000AF                     _dia_semana:
   446                           	opt stack 0
   447  0000AF                     	ds	1
   448  0000B0                     _mes_u:
   449                           	opt stack 0
   450  0000B0                     	ds	1
   451  0000B1                     _fecha_u:
   452                           	opt stack 0
   453  0000B1                     	ds	1
   454  0000B2                     _hora_u:
   455                           	opt stack 0
   456  0000B2                     	ds	1
   457  0000B3                     _minuto_u:
   458                           	opt stack 0
   459  0000B3                     	ds	1
   460  0000                     _RTCCFG	set	3903
   461  0000                     _ANCON1	set	3913
   462  0000                     _ANCON0	set	3912
   463  0000                     _RTCCFGbits	set	3903
   464  0000                     _ALRMCFGbits	set	3985
   465  0000                     _EECON2	set	4007
   466  0000                     _INTCONbits	set	4082
   467  0000                     _RTCVALH	set	3993
   468  0000                     _RTCVALL	set	3992
   469  0000                     _TRISBbits	set	3987
   470  0000                     _T1CONbits	set	4045
   471  0000                     _TRISC	set	3988
   472  0000                     _TRISB	set	3987
   473  0000                     _TRISA	set	3986
   474  0000                     _OSCCONbits	set	4051
   475  0000                     _OSCTUNEbits	set	3995
   476  0000                     _LATBbits	set	3978
   477  0000                     _PORTCbits	set	3970
   478  0000                     _PORTAbits	set	3968
   479  0000                     _LATAbits	set	3977
   480  0000                     _PIE3bits	set	4003
   481                           
   482                           	psect	cinit
   483  00205A                     __pcinit:
   484                           	opt stack 0
   485  00205A                     start_initialization:
   486                           	opt stack 0
   487  00205A                     __initialization:
   488                           	opt stack 0
   489                           
   490                           ; Initialize objects allocated to BANK0 (20 bytes)
   491                           ; load TBLPTR registers with __pidataBANK0
   492  00205A  0E56               	movlw	low __pidataBANK0
   493  00205C  6EF6               	movwf	tblptrl,c
   494  00205E  0E24               	movlw	high __pidataBANK0
   495  002060  6EF7               	movwf	tblptrh,c
   496  002062  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   497  002064  6EF8               	movwf	tblptru,c
   498  002066  EE00  F09A         	lfsr	0,__pdataBANK0
   499  00206A  EE10 F014          	lfsr	1,20
   500  00206E                     copy_data0:
   501  00206E  0009               	tblrd		*+
   502  002070  CFF5 FFEE          	movff	tablat,postinc0
   503  002074  50E5               	movf	postdec1,w,c
   504  002076  50E1               	movf	fsr1l,w,c
   505  002078  E1FA               	bnz	copy_data0
   506                           
   507                           ; Initialize objects allocated to COMRAM (12 bytes)
   508                           ; load TBLPTR registers with __pidataCOMRAM
   509  00207A  0EB8               	movlw	low __pidataCOMRAM
   510  00207C  6EF6               	movwf	tblptrl,c
   511  00207E  0E24               	movlw	high __pidataCOMRAM
   512  002080  6EF7               	movwf	tblptrh,c
   513  002082  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   514  002084  6EF8               	movwf	tblptru,c
   515  002086  EE00  F04C         	lfsr	0,__pdataCOMRAM
   516  00208A  EE10 F00C          	lfsr	1,12
   517  00208E                     copy_data1:
   518  00208E  0009               	tblrd		*+
   519  002090  CFF5 FFEE          	movff	tablat,postinc0
   520  002094  50E5               	movf	postdec1,w,c
   521  002096  50E1               	movf	fsr1l,w,c
   522  002098  E1FA               	bnz	copy_data1
   523                           
   524                           ; Clear objects allocated to BANK0 (58 bytes)
   525  00209A  EE00  F060         	lfsr	0,__pbssBANK0
   526  00209E  0E3A               	movlw	58
   527  0020A0                     clear_0:
   528  0020A0  6AEE               	clrf	postinc0,c
   529  0020A2  06E8               	decf	wreg,f,c
   530  0020A4  E1FD               	bnz	clear_0
   531                           
   532                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   533  0020A6  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   534                           
   535                           ; Clear objects allocated to COMRAM (29 bytes)
   536  0020A8  EE00  F02F         	lfsr	0,__pbssCOMRAM
   537  0020AC  0E1D               	movlw	29
   538  0020AE                     clear_1:
   539  0020AE  6AEE               	clrf	postinc0,c
   540  0020B0  06E8               	decf	wreg,f,c
   541  0020B2  E1FD               	bnz	clear_1
   542  0020B4                     end_of_initialization:
   543                           	opt stack 0
   544  0020B4                     __end_of__initialization:
   545                           	opt stack 0
   546  0020B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   547  0020B6  6EF8               	movwf	tblptru,c
   548  0020B8  0100               	movlb	0
   549  0020BA  EFEE  F011         	goto	_main	;jump to C main() function
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           
   559                           	psect	bitbssCOMRAM
   560  0002F8                     __pbitbssCOMRAM:
   561                           	opt stack 0
   562  0002F8                     _flag:
   563                           	opt stack 0
   564  0002F8                     	ds	1
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           
   574                           	psect	bssCOMRAM
   575  00002F                     __pbssCOMRAM:
   576                           	opt stack 0
   577  00002F                     _txt_insert_pass:
   578                           	opt stack 0
   579  00002F                     	ds	2
   580  000031                     _boton_seleccionar:
   581                           	opt stack 0
   582  000031                     	ds	2
   583  000033                     _numeros_ingresados:
   584                           	opt stack 0
   585  000033                     	ds	2
   586  000035                     _segundo:
   587                           	opt stack 0
   588  000035                     	ds	2
   589  000037                     _k:
   590                           	opt stack 0
   591  000037                     	ds	2
   592  000039                     _c:
   593                           	opt stack 0
   594  000039                     	ds	2
   595  00003B                     _b:
   596                           	opt stack 0
   597  00003B                     	ds	2
   598  00003D                     _a:
   599                           	opt stack 0
   600  00003D                     	ds	2
   601  00003F                     _j:
   602                           	opt stack 0
   603  00003F                     	ds	2
   604  000041                     _i:
   605                           	opt stack 0
   606  000041                     	ds	2
   607  000043                     _key:
   608                           	opt stack 0
   609  000043                     	ds	1
   610  000044                     _RtccDate:
   611                           	opt stack 0
   612  000044                     	ds	4
   613  000048                     _RtccTime:
   614                           	opt stack 0
   615  000048                     	ds	4
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1l	equ	0xFE1
   624                           
   625                           	psect	dataCOMRAM
   626  00004C                     __pdataCOMRAM:
   627                           	opt stack 0
   628  00004C                     _minuto:
   629                           	opt stack 0
   630  00004C                     	ds	2
   631  00004E                     _hora:
   632                           	opt stack 0
   633  00004E                     	ds	2
   634  000050                     _dia:
   635                           	opt stack 0
   636  000050                     	ds	2
   637  000052                     _diasem:
   638                           	opt stack 0
   639  000052                     	ds	2
   640  000054                     _mes:
   641                           	opt stack 0
   642  000054                     	ds	2
   643  000056                     _anio:
   644                           	opt stack 0
   645  000056                     	ds	2
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           postinc0	equ	0xFEE
   651                           wreg	equ	0xFE8
   652                           postdec1	equ	0xFE5
   653                           fsr1l	equ	0xFE1
   654                           
   655                           	psect	bssBANK0
   656  000060                     __pbssBANK0:
   657                           	opt stack 0
   658  000060                     _array_contrasenia_ingresada:
   659                           	opt stack 0
   660  000060                     	ds	8
   661  000068                     _Rtcc_read_TimeDate:
   662                           	opt stack 0
   663  000068                     	ds	8
   664  000070                     _RtccAlrmTimeDate:
   665                           	opt stack 0
   666  000070                     	ds	8
   667  000078                     _RtccTimeDate:
   668                           	opt stack 0
   669  000078                     	ds	8
   670  000080                     _RtccTimeVal:
   671                           	opt stack 0
   672  000080                     	ds	4
   673  000084                     _boton_centro_estado:
   674                           	opt stack 0
   675  000084                     	ds	2
   676  000086                     _buffer2:
   677                           	opt stack 0
   678  000086                     	ds	20
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           postdec1	equ	0xFE5
   686                           fsr1l	equ	0xFE1
   687                           
   688                           	psect	dataBANK0
   689  00009A                     __pdataBANK0:
   690                           	opt stack 0
   691  00009A                     _array_seleccionar:
   692                           	opt stack 0
   693  00009A                     	ds	12
   694  0000A6                     _array_contrasenia:
   695                           	opt stack 0
   696  0000A6                     	ds	8
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           postdec1	equ	0xFE5
   704                           fsr1l	equ	0xFE1
   705                           
   706                           	psect	cstackCOMRAM
   707  000001                     __pcstackCOMRAM:
   708                           	opt stack 0
   709  000001                     ??_isdigit:
   710  000001                     ??_lcd_send_nibble:
   711  000001                     ?_verificar_contrasenia:
   712                           	opt stack 0
   713  000001                     ?___wmul:
   714                           	opt stack 0
   715  000001                     ?___awdiv:
   716                           	opt stack 0
   717  000001                     ?___lwdiv:
   718                           	opt stack 0
   719  000001                     Delay100TCYx@unit:
   720                           	opt stack 0
   721  000001                     Delay1KTCYx@unit:
   722                           	opt stack 0
   723  000001                     RtccReadDate@pDt:
   724                           	opt stack 0
   725  000001                     RtccReadTime@pTm:
   726                           	opt stack 0
   727  000001                     RtccWriteDate@pDt:
   728                           	opt stack 0
   729  000001                     RtccWriteTime@pTm:
   730                           	opt stack 0
   731  000001                     ___wmul@multiplier:
   732                           	opt stack 0
   733  000001                     ___awdiv@dividend:
   734                           	opt stack 0
   735  000001                     ___lwdiv@dividend:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0x0
   739  000001                     	ds	1
   740  000002                     lcd_send_nibble@nibble:
   741                           	opt stack 0
   742  000002                     _isdigit$1948:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x1
   746  000002                     	ds	1
   747  000003                     lcd_send_byte@n:
   748                           	opt stack 0
   749  000003                     RtccWriteDate@di:
   750                           	opt stack 0
   751  000003                     RtccWriteTime@di:
   752                           	opt stack 0
   753  000003                     isdigit@c:
   754                           	opt stack 0
   755  000003                     ___wmul@multiplicand:
   756                           	opt stack 0
   757  000003                     ___awdiv@divisor:
   758                           	opt stack 0
   759  000003                     ___lwdiv@divisor:
   760                           	opt stack 0
   761  000003                     RtccReadDate@rTD1:
   762                           	opt stack 0
   763  000003                     RtccReadTime@rTD1:
   764                           	opt stack 0
   765                           
   766                           ; 8 bytes @ 0x2
   767  000003                     	ds	1
   768  000004                     lcd_send_byte@address:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x3
   772  000004                     	ds	1
   773  000005                     lcd_init@i:
   774                           	opt stack 0
   775  000005                     lcd_gotoxy@y:
   776                           	opt stack 0
   777  000005                     lcd_comand@d:
   778                           	opt stack 0
   779  000005                     RtccWriteDate@wasOn:
   780                           	opt stack 0
   781  000005                     RtccWriteTime@wasOn:
   782                           	opt stack 0
   783  000005                     ___awdiv@counter:
   784                           	opt stack 0
   785  000005                     ___wmul@product:
   786                           	opt stack 0
   787  000005                     ___lwdiv@quotient:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x4
   791  000005                     	ds	1
   792  000006                     lcd_gotoxy@x:
   793                           	opt stack 0
   794  000006                     RtccWriteDate@wasAlrm:
   795                           	opt stack 0
   796  000006                     RtccWriteTime@wasAlrm:
   797                           	opt stack 0
   798  000006                     ___awdiv@sign:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x5
   802  000006                     	ds	1
   803  000007                     lcd_gotoxy@address:
   804                           	opt stack 0
   805  000007                     RtccWriteTime@wasWrEn:
   806                           	opt stack 0
   807  000007                     ___lwdiv@counter:
   808                           	opt stack 0
   809  000007                     verificar_contrasenia@equals:
   810                           	opt stack 0
   811  000007                     RtccWriteDate@tempYear:
   812                           	opt stack 0
   813  000007                     ___awdiv@quotient:
   814                           	opt stack 0
   815                           
   816                           ; 2 bytes @ 0x6
   817  000007                     	ds	1
   818  000008                     ?___lwmod:
   819                           	opt stack 0
   820  000008                     lcd_putc@c:
   821                           	opt stack 0
   822  000008                     RtccWriteTime@tempMinSec:
   823                           	opt stack 0
   824  000008                     ___lwmod@dividend:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x7
   828  000008                     	ds	1
   829  000009                     RtccWriteDate@wasWrEn:
   830                           	opt stack 0
   831  000009                     verificar_contrasenia@i:
   832                           	opt stack 0
   833  000009                     lcd_putrs@ptr:
   834                           	opt stack 0
   835                           
   836                           ; 2 bytes @ 0x8
   837  000009                     	ds	1
   838  00000A                     RtccWriteDate@tempDayMonth:
   839                           	opt stack 0
   840  00000A                     RtccWriteTime@tempHourWDay:
   841                           	opt stack 0
   842  00000A                     ___lwmod@divisor:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0x9
   846  00000A                     	ds	1
   847  00000B                     ??_titila_texto_insert_password:
   848  00000B                     ??_activar_alarma:
   849  00000B                     resetear_pantalla_ingresar_contrasenia@i:
   850                           	opt stack 0
   851  00000B                     RtccReadDate@rTD0:
   852                           	opt stack 0
   853  00000B                     RtccReadTime@rTD0:
   854                           	opt stack 0
   855                           
   856                           ; 8 bytes @ 0xA
   857  00000B                     	ds	1
   858  00000C                     ___lwmod@counter:
   859                           	opt stack 0
   860  00000C                     RtccWriteDate@tempHourWDay:
   861                           	opt stack 0
   862                           
   863                           ; 2 bytes @ 0xB
   864  00000C                     	ds	1
   865  00000D                     ?_sprintf:
   866                           	opt stack 0
   867  00000D                     sprintf@sp:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0xC
   871  00000D                     	ds	1
   872  00000E                     
   873                           ; 1 bytes @ 0xD
   874  00000E                     	ds	1
   875  00000F                     sprintf@f:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0xE
   879  00000F                     	ds	4
   880  000013                     
   881                           ; 1 bytes @ 0x12
   882  000013                     	ds	4
   883  000017                     ??_sprintf:
   884                           
   885                           ; 1 bytes @ 0x16
   886  000017                     	ds	4
   887  00001B                     sprintf@flag:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0x1A
   891  00001B                     	ds	1
   892  00001C                     sprintf@val:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0x1B
   896  00001C                     	ds	2
   897  00001E                     sprintf@prec:
   898                           	opt stack 0
   899                           
   900                           ; 1 bytes @ 0x1D
   901  00001E                     	ds	1
   902  00001F                     sprintf@ap:
   903                           	opt stack 0
   904                           
   905                           ; 2 bytes @ 0x1E
   906  00001F                     	ds	2
   907  000021                     sprintf@cp:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x20
   911  000021                     	ds	2
   912  000023                     sprintf@len:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x22
   916  000023                     	ds	2
   917  000025                     sprintf@width:
   918                           	opt stack 0
   919                           
   920                           ; 2 bytes @ 0x24
   921  000025                     	ds	2
   922  000027                     sprintf@c:
   923                           	opt stack 0
   924                           
   925                           ; 1 bytes @ 0x26
   926  000027                     	ds	1
   927  000028                     ??_cambiar_opcion:
   928  000028                     guarda_numero_ingresado@num:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x27
   932  000028                     	ds	2
   933  00002A                     ??_ingreso_numero:
   934                           
   935                           ; 1 bytes @ 0x29
   936  00002A                     	ds	2
   937  00002C                     ir_a_pantalla_editar_contrasenia@i:
   938                           	opt stack 0
   939                           
   940                           ; 2 bytes @ 0x2B
   941  00002C                     	ds	2
   942  00002E                     ??_main:
   943                           
   944                           ; 1 bytes @ 0x2D
   945  00002E                     	ds	1
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           postdec1	equ	0xFE5
   953                           fsr1l	equ	0xFE1
   954                           
   955 ;;
   956 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   957 ;;
   958 ;; *************** function _main *****************
   959 ;; Defined at:
   960 ;;		line 579 in file "main.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2  365[None  ] int 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;Total ram usage:        1 bytes
   979 ;; Hardware stack levels required when called:   13
   980 ;; This function calls:
   981 ;;		_Read_RTC
   982 ;;		_ir_a_pantalla_inicial
   983 ;;		_setup
   984 ;; This function is called by:
   985 ;;		Startup code after reset
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text0
   990  0023DC                     __ptext0:
   991                           	opt stack 0
   992  0023DC                     _main:
   993                           	opt stack 18
   994                           
   995                           ;main.c: 580: setup();
   996                           
   997                           ;incstack = 0
   998  0023DC  EC00  F011         	call	_setup	;wreg free
   999  0023E0                     
  1000                           ;main.c: 584: Read_RTC();
  1001  0023E0  EC5F  F00C         	call	_Read_RTC	;wreg free
  1002                           
  1003                           ;main.c: 586: ir_a_pantalla_inicial();
  1004  0023E4  EC4E  F012         	call	_ir_a_pantalla_inicial	;wreg free
  1005  0023E8  D7FB               	goto	l366
  1006                           
  1007                           ;main.c: 587: }
  1008                           ;main.c: 589: _delay((unsigned long)((98)*(8000000/4000.0)));
  1009  0023EA  0EFF               	movlw	255
  1010  0023EC  6E2E               	movwf	??_main& (0+255),c
  1011  0023EE  0E8A               	movlw	138
  1012  0023F0                     u3627:
  1013  0023F0  2EE8               	decfsz	wreg,f,c
  1014  0023F2  D7FE               	bra	u3627
  1015  0023F4  2E2E               	decfsz	??_main& (0+255),f,c
  1016  0023F6  D7FC               	bra	u3627
  1017  0023F8  D000               	nop2	
  1018                           
  1019                           ;main.c: 590: return 0;
  1020                           ;	Return value of _main is never used
  1021  0023FA  EF00  F000         	goto	start
  1022  0023FE                     __end_of_main:
  1023                           	opt stack 0
  1024                           tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           postinc0	equ	0xFEE
  1029                           wreg	equ	0xFE8
  1030                           postdec1	equ	0xFE5
  1031                           fsr1l	equ	0xFE1
  1032                           
  1033 ;; *************** function _setup *****************
  1034 ;; Defined at:
  1035 ;;		line 546 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    7
  1056 ;; This function calls:
  1057 ;;		_Write_RTC
  1058 ;;		_lcd_comand
  1059 ;;		_lcd_init
  1060 ;;		_set_reloj_digital
  1061 ;; This function is called by:
  1062 ;;		_main
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text1
  1067  002200                     __ptext1:
  1068                           	opt stack 0
  1069  002200                     _setup:
  1070                           	opt stack 23
  1071                           
  1072                           ;main.c: 547: OSCTUNEbits.INTSRC = 1;
  1073                           
  1074                           ;incstack = 0
  1075  002200  8E9B               	bsf	3995,7,c	;volatile
  1076                           
  1077                           ;main.c: 548: OSCTUNEbits.PLLEN = 0;
  1078  002202  9C9B               	bcf	3995,6,c	;volatile
  1079                           
  1080                           ;main.c: 549: OSCCONbits.IRCF0 = 1;
  1081  002204  88D3               	bsf	4051,4,c	;volatile
  1082                           
  1083                           ;main.c: 550: OSCCONbits.IRCF1 = 1;
  1084  002206  8AD3               	bsf	4051,5,c	;volatile
  1085                           
  1086                           ;main.c: 551: OSCCONbits.IRCF2 = 1;
  1087  002208  8CD3               	bsf	4051,6,c	;volatile
  1088                           
  1089                           ;main.c: 552: OSCCONbits.SCS0 = 0;
  1090  00220A  90D3               	bcf	4051,0,c	;volatile
  1091                           
  1092                           ;main.c: 553: OSCCONbits.SCS1 = 0;
  1093  00220C  92D3               	bcf	4051,1,c	;volatile
  1094                           
  1095                           ;main.c: 554: TRISA = 0b11110000;
  1096  00220E  0EF0               	movlw	240
  1097  002210  6E92               	movwf	3986,c	;volatile
  1098                           
  1099                           ;main.c: 555: TRISB = 0;
  1100  002212  0E00               	movlw	0
  1101  002214  6E93               	movwf	3987,c	;volatile
  1102                           
  1103                           ;main.c: 556: TRISC = 0b00000111;
  1104  002216  0E07               	movlw	7
  1105  002218  6E94               	movwf	3988,c	;volatile
  1106                           
  1107                           ;main.c: 560: ANCON0 = 0b11111111;
  1108  00221A  010F               	movlb	15	; () banked
  1109  00221C  6948               	setf	72,b	;volatile
  1110                           
  1111                           ; BSR set to: 15
  1112                           ;main.c: 562: ANCON1 = 0b11111111;
  1113  00221E  010F               	movlb	15	; () banked
  1114  002220  6949               	setf	73,b	;volatile
  1115                           
  1116                           ; BSR set to: 15
  1117                           ;main.c: 565: RTCCFGbits.RTCEN = 1;
  1118  002222  010F               	movlb	15	; () banked
  1119  002224  8F3F               	bsf	63,7,b	;volatile
  1120                           
  1121                           ; BSR set to: 15
  1122                           ;main.c: 566: RTCCFGbits.RTCWREN = 1;
  1123  002226  010F               	movlb	15	; () banked
  1124  002228  8B3F               	bsf	63,5,b	;volatile
  1125                           
  1126                           ; BSR set to: 15
  1127                           ;main.c: 567: T1CONbits.T1OSCEN = 1;
  1128  00222A  86CD               	bsf	4045,3,c	;volatile
  1129                           
  1130                           ; BSR set to: 15
  1131                           ;main.c: 568: Write_RTC();
  1132  00222C  EC98  F00A         	call	_Write_RTC	;wreg free
  1133                           
  1134                           ;main.c: 569: lcd_init();
  1135  002230  EC15  F00F         	call	_lcd_init	;wreg free
  1136                           
  1137                           ;main.c: 570: lcd_comand(0b00001100);
  1138  002234  0E0C               	movlw	12
  1139  002236  EC55  F012         	call	_lcd_comand
  1140                           
  1141                           ;main.c: 571: LATBbits.LATB2 = 0;;
  1142  00223A  948A               	bcf	3978,2,c	;volatile
  1143                           
  1144                           ;main.c: 572: LATBbits.LATB1 = 0;;
  1145  00223C  928A               	bcf	3978,1,c	;volatile
  1146                           
  1147                           ;main.c: 573: LATBbits.LATB0 = 0;;
  1148  00223E  908A               	bcf	3978,0,c	;volatile
  1149                           
  1150                           ;main.c: 575: set_reloj_digital();
  1151  002240  EC62  F012         	call	_set_reloj_digital	;wreg free
  1152                           
  1153                           ;main.c: 576: Write_RTC();
  1154  002244  EC98  F00A         	call	_Write_RTC	;wreg free
  1155  002248  0012               	return		;funcret
  1156  00224A                     __end_of_setup:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1l	equ	0xFE1
  1166                           
  1167 ;; *************** function _lcd_init *****************
  1168 ;; Defined at:
  1169 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  i               1    4[COMRAM] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1187 ;;Total ram usage:        1 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    2
  1190 ;; This function calls:
  1191 ;;		_Delay1KTCYx
  1192 ;;		_lcd_send_byte
  1193 ;;		_lcd_send_nibble
  1194 ;; This function is called by:
  1195 ;;		_setup
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text2
  1200  001E2A                     __ptext2:
  1201                           	opt stack 0
  1202  001E2A                     _lcd_init:
  1203                           	opt stack 27
  1204                           
  1205                           ;unmc_lcd_216.c: 120: int8 i;
  1206                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  1207                           
  1208                           ;incstack = 0
  1209  001E2A  9693               	bcf	3987,3,c	;volatile
  1210                           
  1211                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  1212  001E2C  9493               	bcf	3987,2,c	;volatile
  1213                           
  1214                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  1215  001E2E  968A               	bcf	3978,3,c	;volatile
  1216                           
  1217                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  1218  001E30  948A               	bcf	3978,2,c	;volatile
  1219                           
  1220                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  1221  001E32  9893               	bcf	3987,4,c	;volatile
  1222                           
  1223                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  1224  001E34  9A93               	bcf	3987,5,c	;volatile
  1225                           
  1226                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  1227  001E36  9C93               	bcf	3987,6,c	;volatile
  1228                           
  1229                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  1230  001E38  9E93               	bcf	3987,7,c	;volatile
  1231                           
  1232                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  1233  001E3A  0E0A               	movlw	10
  1234  001E3C  EC3E  F012         	call	_Delay1KTCYx
  1235                           
  1236                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  1237  001E40  0E0A               	movlw	10
  1238  001E42  EC3E  F012         	call	_Delay1KTCYx
  1239                           
  1240                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  1241  001E46  0E0A               	movlw	10
  1242  001E48  EC3E  F012         	call	_Delay1KTCYx
  1243                           
  1244                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  1245  001E4C  0E00               	movlw	0
  1246  001E4E  6E05               	movwf	lcd_init@i,c
  1247  001E50                     l3388:
  1248  001E50  0E02               	movlw	2
  1249  001E52  6405               	cpfsgt	lcd_init@i,c
  1250  001E54  D001               	goto	l392
  1251  001E56  D008               	goto	u3550
  1252  001E58                     l392:
  1253                           
  1254                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  1255  001E58  0E03               	movlw	3
  1256  001E5A  EC50  F00F         	call	_lcd_send_nibble
  1257                           
  1258                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  1259  001E5E  0E0A               	movlw	10
  1260  001E60  EC3E  F012         	call	_Delay1KTCYx
  1261  001E64  2A05               	incf	lcd_init@i,f,c
  1262  001E66  D7F4               	goto	l3388
  1263  001E68                     u3550:
  1264                           
  1265                           ;unmc_lcd_216.c: 146: }
  1266                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  1267  001E68  0E02               	movlw	2
  1268  001E6A  EC50  F00F         	call	_lcd_send_nibble
  1269                           
  1270                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  1271  001E6E  0E00               	movlw	0
  1272  001E70  6E05               	movwf	lcd_init@i,c
  1273  001E72                     l3402:
  1274  001E72  0E03               	movlw	3
  1275  001E74  6405               	cpfsgt	lcd_init@i,c
  1276  001E76  D001               	goto	l394
  1277  001E78  0012               	return	
  1278  001E7A                     l394:
  1279                           
  1280                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1281  001E7A  5005               	movf	lcd_init@i,w,c
  1282  001E7C  0D01               	mullw	1
  1283  001E7E  0E0B               	movlw	low _LCD_INIT_STRING
  1284  001E80  24F3               	addwf	prodl,w,c
  1285  001E82  6EF6               	movwf	tblptrl,c
  1286  001E84  0E0F               	movlw	high _LCD_INIT_STRING
  1287  001E86  20F4               	addwfc	prodh,w,c
  1288  001E88  6EF7               	movwf	tblptrh,c
  1289  001E8A                     	if	0	;There are less than 3 active tblptr bytes
  1290  001E8A                     	endif
  1291  001E8A  0008               	tblrd		*
  1292  001E8C  CFF5 F003          	movff	tablat,lcd_send_byte@n
  1293  001E90  0E00               	movlw	0
  1294  001E92  ECAE  F011         	call	_lcd_send_byte
  1295                           
  1296                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  1297  001E96  0E0A               	movlw	10
  1298  001E98  EC3E  F012         	call	_Delay1KTCYx
  1299  001E9C  2A05               	incf	lcd_init@i,f,c
  1300  001E9E  D7E9               	goto	l3402
  1301  001EA0                     __end_of_lcd_init:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           prodh	equ	0xFF4
  1308                           prodl	equ	0xFF3
  1309                           postinc0	equ	0xFEE
  1310                           wreg	equ	0xFE8
  1311                           postdec1	equ	0xFE5
  1312                           fsr1l	equ	0xFE1
  1313                           
  1314 ;; *************** function _Delay1KTCYx *****************
  1315 ;; Defined at:
  1316 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  unit            1    wreg     unsigned char 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;  unit            1    0[COMRAM] unsigned char 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1334 ;;Total ram usage:        1 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_lcd_init
  1340 ;;		_DelayPORXLCD
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           
  1344                           	psect	text3
  1345  00247C                     __ptext3:
  1346                           	opt stack 0
  1347  00247C                     _Delay1KTCYx:
  1348                           	opt stack 28
  1349                           
  1350                           ;incstack = 0
  1351                           ;Delay1KTCYx@unit stored from wreg
  1352  00247C  6E01               	movwf	Delay1KTCYx@unit,c
  1353  00247E                     l792:
  1354  00247E  0EC8               	movlw	200
  1355  002480                     u3637:
  1356  002480  D000               	nop2	
  1357  002482  2EE8               	decfsz	wreg,f,c
  1358  002484  D7FD               	bra	u3637
  1359  002486  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1360  002488  D7FA               	goto	l792
  1361  00248A  0012               	return	
  1362  00248C                     __end_of_Delay1KTCYx:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           prodh	equ	0xFF4
  1369                           prodl	equ	0xFF3
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           
  1375 ;; *************** function _ir_a_pantalla_inicial *****************
  1376 ;; Defined at:
  1377 ;;		line 401 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:   12
  1398 ;; This function calls:
  1399 ;;		_set_reloj_digital
  1400 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  1401 ;;		_titila_texto_insert_password
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text4
  1408  00249C                     __ptext4:
  1409                           	opt stack 0
  1410  00249C                     _ir_a_pantalla_inicial:
  1411                           	opt stack 18
  1412                           
  1413                           ;main.c: 402: set_reloj_digital();
  1414                           
  1415                           ;incstack = 0
  1416  00249C  EC62  F012         	call	_set_reloj_digital	;wreg free
  1417                           
  1418                           ;main.c: 403: titila_texto_insert_password();
  1419  0024A0  EC34  F00D         	call	_titila_texto_insert_password	;wreg free
  1420                           
  1421                           ;main.c: 404: si_apreta_numero_va_a_pantalla_contrasenia();
  1422  0024A4  EC12  F00E         	call	_si_apreta_numero_va_a_pantalla_contrasenia	;wreg free
  1423  0024A8  0012               	return		;funcret
  1424  0024AA                     __end_of_ir_a_pantalla_inicial:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           prodh	equ	0xFF4
  1431                           prodl	equ	0xFF3
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           postdec1	equ	0xFE5
  1435                           fsr1l	equ	0xFE1
  1436                           
  1437 ;; *************** function _titila_texto_insert_password *****************
  1438 ;; Defined at:
  1439 ;;		line 92 in file "main.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1457 ;;Total ram usage:        1 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    5
  1460 ;; This function calls:
  1461 ;;		_lcd_gotoxy
  1462 ;;		_lcd_putrs
  1463 ;; This function is called by:
  1464 ;;		_ir_a_pantalla_inicial
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text5
  1469  001A68                     __ptext5:
  1470                           	opt stack 0
  1471  001A68                     _titila_texto_insert_password:
  1472                           	opt stack 24
  1473                           
  1474                           ;main.c: 93: if (txt_insert_pass == 0) {
  1475                           
  1476                           ;incstack = 0
  1477  001A68  502F               	movf	_txt_insert_pass,w,c
  1478  001A6A  1030               	iorwf	_txt_insert_pass+1,w,c
  1479  001A6C  A4D8               	btfss	status,2,c
  1480  001A6E  D021               	goto	l169
  1481                           
  1482                           ;main.c: 94: txt_insert_pass = 1;
  1483  001A70  0E00               	movlw	0
  1484  001A72  6E30               	movwf	_txt_insert_pass+1,c
  1485  001A74  0E01               	movlw	1
  1486  001A76  6E2F               	movwf	_txt_insert_pass,c
  1487                           
  1488                           ;main.c: 95: lcd_gotoxy(1, 1);
  1489  001A78  0E01               	movlw	1
  1490  001A7A  6E05               	movwf	lcd_gotoxy@y,c
  1491  001A7C  0E01               	movlw	1
  1492  001A7E  ECFF  F011         	call	_lcd_gotoxy
  1493                           
  1494                           ;main.c: 96: lcd_putrs("Insert");
  1495  001A82  0E9E               	movlw	low STR_9
  1496  001A84  6E09               	movwf	lcd_putrs@ptr,c
  1497  001A86  0E0F               	movlw	high STR_9
  1498  001A88  6E0A               	movwf	lcd_putrs@ptr+1,c
  1499  001A8A  ECB1  F010         	call	_lcd_putrs	;wreg free
  1500                           
  1501                           ;main.c: 97: lcd_gotoxy(1, 2);
  1502  001A8E  0E02               	movlw	2
  1503  001A90  6E05               	movwf	lcd_gotoxy@y,c
  1504  001A92  0E01               	movlw	1
  1505  001A94  ECFF  F011         	call	_lcd_gotoxy
  1506                           
  1507                           ;main.c: 98: lcd_putrs("Password");
  1508  001A98  0E75               	movlw	low STR_10
  1509  001A9A  6E09               	movwf	lcd_putrs@ptr,c
  1510  001A9C  0E0F               	movlw	high STR_10
  1511  001A9E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1512  001AA0  ECB1  F010         	call	_lcd_putrs	;wreg free
  1513                           
  1514                           ;main.c: 99: _delay((unsigned long)((80)*(8000000/4000.0)));
  1515  001AA4  0ED0               	movlw	208
  1516  001AA6  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  1517  001AA8  0ECA               	movlw	202
  1518  001AAA                     u3647:
  1519  001AAA  2EE8               	decfsz	wreg,f,c
  1520  001AAC  D7FE               	bra	u3647
  1521  001AAE  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  1522  001AB0  D7FC               	bra	u3647
  1523  001AB2                     l169:
  1524                           
  1525                           ;main.c: 100: }
  1526                           ;main.c: 102: if (txt_insert_pass == 1) {
  1527  001AB2  042F               	decf	_txt_insert_pass,w,c
  1528  001AB4  1030               	iorwf	_txt_insert_pass+1,w,c
  1529  001AB6  A4D8               	btfss	status,2,c
  1530  001AB8  0012               	return	
  1531                           
  1532                           ;main.c: 103: txt_insert_pass = 0;
  1533  001ABA  0E00               	movlw	0
  1534  001ABC  6E30               	movwf	_txt_insert_pass+1,c
  1535  001ABE  0E00               	movlw	0
  1536  001AC0  6E2F               	movwf	_txt_insert_pass,c
  1537                           
  1538                           ;main.c: 104: lcd_gotoxy(1, 1);
  1539  001AC2  0E01               	movlw	1
  1540  001AC4  6E05               	movwf	lcd_gotoxy@y,c
  1541  001AC6  0E01               	movlw	1
  1542  001AC8  ECFF  F011         	call	_lcd_gotoxy
  1543                           
  1544                           ;main.c: 105: lcd_putrs("        ");
  1545  001ACC  0E2C               	movlw	low (STR_18+8)
  1546  001ACE  6E09               	movwf	lcd_putrs@ptr,c
  1547  001AD0  0E0F               	movlw	high (STR_18+8)
  1548  001AD2  6E0A               	movwf	lcd_putrs@ptr+1,c
  1549  001AD4  ECB1  F010         	call	_lcd_putrs	;wreg free
  1550                           
  1551                           ;main.c: 106: lcd_gotoxy(1, 2);
  1552  001AD8  0E02               	movlw	2
  1553  001ADA  6E05               	movwf	lcd_gotoxy@y,c
  1554  001ADC  0E01               	movlw	1
  1555  001ADE  ECFF  F011         	call	_lcd_gotoxy
  1556                           
  1557                           ;main.c: 107: lcd_putrs("        ");
  1558  001AE2  0E2C               	movlw	low (STR_18+8)
  1559  001AE4  6E09               	movwf	lcd_putrs@ptr,c
  1560  001AE6  0E0F               	movlw	high (STR_18+8)
  1561  001AE8  6E0A               	movwf	lcd_putrs@ptr+1,c
  1562  001AEA  ECB1  F010         	call	_lcd_putrs	;wreg free
  1563                           
  1564                           ;main.c: 108: _delay((unsigned long)((60)*(8000000/4000.0)));
  1565  001AEE  0E9C               	movlw	156
  1566  001AF0  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  1567  001AF2  0ED7               	movlw	215
  1568  001AF4                     u3657:
  1569  001AF4  2EE8               	decfsz	wreg,f,c
  1570  001AF6  D7FE               	bra	u3657
  1571  001AF8  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  1572  001AFA  D7FC               	bra	u3657
  1573  001AFC  F000               	nop	
  1574  001AFE  0012               	return	
  1575  001B00                     __end_of_titila_texto_insert_password:
  1576                           	opt stack 0
  1577                           tblptru	equ	0xFF8
  1578                           tblptrh	equ	0xFF7
  1579                           tblptrl	equ	0xFF6
  1580                           tablat	equ	0xFF5
  1581                           prodh	equ	0xFF4
  1582                           prodl	equ	0xFF3
  1583                           postinc0	equ	0xFEE
  1584                           wreg	equ	0xFE8
  1585                           postdec1	equ	0xFE5
  1586                           fsr1l	equ	0xFE1
  1587                           status	equ	0xFD8
  1588                           
  1589 ;; *************** function _si_apreta_numero_va_a_pantalla_contrasenia *****************
  1590 ;; Defined at:
  1591 ;;		line 350 in file "main.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;		None
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;		None
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1609 ;;Total ram usage:        0 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:   11
  1612 ;; This function calls:
  1613 ;;		_ir_a_pantalla_ingresar_contrasenia
  1614 ;; This function is called by:
  1615 ;;		_ir_a_pantalla_inicial
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text6
  1620  001C24                     __ptext6:
  1621                           	opt stack 0
  1622  001C24                     _si_apreta_numero_va_a_pantalla_contrasenia:
  1623                           	opt stack 18
  1624                           
  1625                           ;main.c: 351: LATAbits.LATA0 = 1;
  1626                           
  1627                           ;incstack = 0
  1628  001C24  8089               	bsf	3977,0,c	;volatile
  1629                           
  1630                           ;main.c: 352: LATAbits.LATA1 = 0;
  1631  001C26  9289               	bcf	3977,1,c	;volatile
  1632                           
  1633                           ;main.c: 353: LATAbits.LATA2 = 0;
  1634  001C28  9489               	bcf	3977,2,c	;volatile
  1635                           
  1636                           ;main.c: 354: LATAbits.LATA3 = 0;
  1637  001C2A  9689               	bcf	3977,3,c	;volatile
  1638                           
  1639                           ;main.c: 355: {
  1640                           ;main.c: 356: if ((PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) ||
  1641                           ;main.c: 357: (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) ||
  1642                           ;main.c: 358: (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1)) {
  1643  001C2C  AA80               	btfss	3968,5,c	;volatile
  1644  001C2E  D002               	goto	u3310
  1645  001C30  B089               	btfsc	3977,0,c	;volatile
  1646  001C32  D007               	goto	u3350
  1647  001C34                     u3310:
  1648  001C34  AE80               	btfss	3968,7,c	;volatile
  1649  001C36  D002               	goto	u3330
  1650  001C38  B089               	btfsc	3977,0,c	;volatile
  1651  001C3A  D003               	goto	u3350
  1652  001C3C                     u3330:
  1653  001C3C  BC80               	btfsc	3968,6,c	;volatile
  1654  001C3E  A089               	btfss	3977,0,c	;volatile
  1655  001C40  D002               	goto	l298
  1656  001C42                     u3350:
  1657                           
  1658                           ;main.c: 360: ir_a_pantalla_ingresar_contrasenia();
  1659  001C42  ECFA  F00F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  1660  001C46                     l298:
  1661                           
  1662                           ;main.c: 361: }
  1663                           ;main.c: 362: }
  1664                           ;main.c: 363: LATAbits.LATA0 = 0;
  1665  001C46  9089               	bcf	3977,0,c	;volatile
  1666                           
  1667                           ;main.c: 364: LATAbits.LATA1 = 1;
  1668  001C48  8289               	bsf	3977,1,c	;volatile
  1669                           
  1670                           ;main.c: 365: LATAbits.LATA2 = 0;
  1671  001C4A  9489               	bcf	3977,2,c	;volatile
  1672                           
  1673                           ;main.c: 366: LATAbits.LATA3 = 0;
  1674  001C4C  9689               	bcf	3977,3,c	;volatile
  1675                           
  1676                           ;main.c: 367: {
  1677                           ;main.c: 368: if ((PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) ||
  1678                           ;main.c: 369: (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) ||
  1679                           ;main.c: 370: (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1)) {
  1680  001C4E  AA80               	btfss	3968,5,c	;volatile
  1681  001C50  D002               	goto	u3370
  1682  001C52  B289               	btfsc	3977,1,c	;volatile
  1683  001C54  D007               	goto	u3410
  1684  001C56                     u3370:
  1685  001C56  AE80               	btfss	3968,7,c	;volatile
  1686  001C58  D002               	goto	u3390
  1687  001C5A  B289               	btfsc	3977,1,c	;volatile
  1688  001C5C  D003               	goto	u3410
  1689  001C5E                     u3390:
  1690  001C5E  BC80               	btfsc	3968,6,c	;volatile
  1691  001C60  A289               	btfss	3977,1,c	;volatile
  1692  001C62  D002               	goto	l305
  1693  001C64                     u3410:
  1694                           
  1695                           ;main.c: 372: ir_a_pantalla_ingresar_contrasenia();
  1696  001C64  ECFA  F00F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  1697  001C68                     l305:
  1698                           
  1699                           ;main.c: 373: }
  1700                           ;main.c: 374: }
  1701                           ;main.c: 375: LATAbits.LATA0 = 0;
  1702  001C68  9089               	bcf	3977,0,c	;volatile
  1703                           
  1704                           ;main.c: 376: LATAbits.LATA1 = 0;
  1705  001C6A  9289               	bcf	3977,1,c	;volatile
  1706                           
  1707                           ;main.c: 377: LATAbits.LATA2 = 1;
  1708  001C6C  8489               	bsf	3977,2,c	;volatile
  1709                           
  1710                           ;main.c: 378: LATAbits.LATA3 = 0;
  1711  001C6E  9689               	bcf	3977,3,c	;volatile
  1712                           
  1713                           ;main.c: 379: {
  1714                           ;main.c: 380: if ((PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) ||
  1715                           ;main.c: 381: (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) ||
  1716                           ;main.c: 382: (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1)) {
  1717  001C70  AA80               	btfss	3968,5,c	;volatile
  1718  001C72  D002               	goto	u3430
  1719  001C74  B489               	btfsc	3977,2,c	;volatile
  1720  001C76  D007               	goto	u3470
  1721  001C78                     u3430:
  1722  001C78  AE80               	btfss	3968,7,c	;volatile
  1723  001C7A  D002               	goto	u3450
  1724  001C7C  B489               	btfsc	3977,2,c	;volatile
  1725  001C7E  D003               	goto	u3470
  1726  001C80                     u3450:
  1727  001C80  BC80               	btfsc	3968,6,c	;volatile
  1728  001C82  A489               	btfss	3977,2,c	;volatile
  1729  001C84  D002               	goto	l312
  1730  001C86                     u3470:
  1731                           
  1732                           ;main.c: 384: ir_a_pantalla_ingresar_contrasenia();
  1733  001C86  ECFA  F00F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  1734  001C8A                     l312:
  1735                           
  1736                           ;main.c: 385: }
  1737                           ;main.c: 386: }
  1738                           ;main.c: 387: LATAbits.LATA0 = 0;
  1739  001C8A  9089               	bcf	3977,0,c	;volatile
  1740                           
  1741                           ;main.c: 388: LATAbits.LATA1 = 0;
  1742  001C8C  9289               	bcf	3977,1,c	;volatile
  1743                           
  1744                           ;main.c: 389: LATAbits.LATA2 = 0;
  1745  001C8E  9489               	bcf	3977,2,c	;volatile
  1746                           
  1747                           ;main.c: 390: LATAbits.LATA3 = 1;
  1748  001C90  8689               	bsf	3977,3,c	;volatile
  1749                           
  1750                           ;main.c: 391: {
  1751                           ;main.c: 392: if ((PORTAbits.RA5 == 1 && LATAbits.LATA3 == 1) ||
  1752                           ;main.c: 393: (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) ||
  1753                           ;main.c: 394: (PORTAbits.RA6 == 1 && LATAbits.LATA3 == 1)) {
  1754  001C92  AA80               	btfss	3968,5,c	;volatile
  1755  001C94  D002               	goto	u3490
  1756  001C96  B689               	btfsc	3977,3,c	;volatile
  1757  001C98  D008               	goto	u3530
  1758  001C9A                     u3490:
  1759  001C9A  AE80               	btfss	3968,7,c	;volatile
  1760  001C9C  D002               	goto	u3510
  1761  001C9E  B689               	btfsc	3977,3,c	;volatile
  1762  001CA0  D004               	goto	u3530
  1763  001CA2                     u3510:
  1764  001CA2  AC80               	btfss	3968,6,c	;volatile
  1765  001CA4  0012               	return	
  1766  001CA6  A689               	btfss	3977,3,c	;volatile
  1767  001CA8  0012               	return	
  1768  001CAA                     u3530:
  1769                           
  1770                           ;main.c: 396: ir_a_pantalla_ingresar_contrasenia();
  1771  001CAA  ECFA  F00F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  1772  001CAE  0012               	return	
  1773  001CB0                     __end_of_si_apreta_numero_va_a_pantalla_contrasenia:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           postinc0	equ	0xFEE
  1782                           wreg	equ	0xFE8
  1783                           postdec1	equ	0xFE5
  1784                           fsr1l	equ	0xFE1
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _ir_a_pantalla_ingresar_contrasenia *****************
  1788 ;; Defined at:
  1789 ;;		line 328 in file "main.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:   10
  1810 ;; This function calls:
  1811 ;;		_ingreso_numero
  1812 ;;		_ir_a_pantalla_edicion
  1813 ;;		_lcd_gotoxy
  1814 ;;		_lcd_putrs
  1815 ;;		_mostrar_presionar_a
  1816 ;;		_resetear_pantalla_ingresar_contrasenia
  1817 ;;		_verificar_contrasenia
  1818 ;; This function is called by:
  1819 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text7
  1824  001FF4                     __ptext7:
  1825                           	opt stack 0
  1826  001FF4                     _ir_a_pantalla_ingresar_contrasenia:
  1827                           	opt stack 18
  1828                           
  1829                           ;main.c: 330: numeros_ingresados = 0;
  1830                           
  1831                           ;incstack = 0
  1832  001FF4  0E00               	movlw	0
  1833  001FF6  6E34               	movwf	_numeros_ingresados+1,c
  1834  001FF8  0E00               	movlw	0
  1835  001FFA  6E33               	movwf	_numeros_ingresados,c
  1836                           
  1837                           ;main.c: 331: lcd_gotoxy(1, 1);
  1838  001FFC  0E01               	movlw	1
  1839  001FFE  6E05               	movwf	lcd_gotoxy@y,c
  1840  002000  0E01               	movlw	1
  1841  002002  ECFF  F011         	call	_lcd_gotoxy
  1842                           
  1843                           ;main.c: 332: lcd_putrs("Insert Password ");
  1844  002006  0E46               	movlw	low STR_21
  1845  002008  6E09               	movwf	lcd_putrs@ptr,c
  1846  00200A  0E0F               	movlw	high STR_21
  1847  00200C  6E0A               	movwf	lcd_putrs@ptr+1,c
  1848  00200E  ECB1  F010         	call	_lcd_putrs	;wreg free
  1849                           
  1850                           ;main.c: 333: lcd_gotoxy(1, 2);
  1851  002012  0E02               	movlw	2
  1852  002014  6E05               	movwf	lcd_gotoxy@y,c
  1853  002016  0E01               	movlw	1
  1854  002018  ECFF  F011         	call	_lcd_gotoxy
  1855                           
  1856                           ;main.c: 334: lcd_putrs("                ");
  1857  00201C  0E24               	movlw	low STR_18
  1858  00201E  6E09               	movwf	lcd_putrs@ptr,c
  1859  002020  0E0F               	movlw	high STR_18
  1860  002022  6E0A               	movwf	lcd_putrs@ptr+1,c
  1861  002024  ECB1  F010         	call	_lcd_putrs	;wreg free
  1862  002028                     
  1863                           ;main.c: 337: if (numeros_ingresados < 4) {
  1864  002028  BE34               	btfsc	_numeros_ingresados+1,7,c
  1865  00202A  D006               	goto	u3260
  1866  00202C  5034               	movf	_numeros_ingresados+1,w,c
  1867  00202E  E107               	bnz	l3282
  1868  002030  0E04               	movlw	4
  1869  002032  5C33               	subwf	_numeros_ingresados,w,c
  1870  002034  B0D8               	btfsc	status,0,c
  1871  002036  D003               	goto	l289
  1872  002038                     u3260:
  1873                           
  1874                           ;main.c: 338: ingreso_numero();
  1875  002038  EC78  F009         	call	_ingreso_numero	;wreg free
  1876                           
  1877                           ;main.c: 339: } else {
  1878  00203C  D7F5               	goto	l288
  1879  00203E                     l289:
  1880  00203E                     l3282:
  1881                           
  1882                           ;main.c: 340: mostrar_presionar_a();
  1883  00203E  EC1F  F012         	call	_mostrar_presionar_a	;wreg free
  1884                           
  1885                           ;main.c: 341: if (verificar_contrasenia() == 1) {
  1886  002042  ECD8  F00E         	call	_verificar_contrasenia	;wreg free
  1887  002046  0401               	decf	?_verificar_contrasenia,w,c
  1888  002048  1002               	iorwf	?_verificar_contrasenia+1,w,c
  1889  00204A  A4D8               	btfss	status,2,c
  1890  00204C  D003               	goto	l291
  1891                           
  1892                           ;main.c: 342: ir_a_pantalla_edicion();
  1893  00204E  EC8F  F011         	call	_ir_a_pantalla_edicion	;wreg free
  1894                           
  1895                           ;main.c: 343: } else {
  1896  002052  D7EA               	goto	l288
  1897  002054                     l291:
  1898                           
  1899                           ;main.c: 344: resetear_pantalla_ingresar_contrasenia();
  1900  002054  ECDA  F010         	call	_resetear_pantalla_ingresar_contrasenia	;wreg free
  1901  002058  D7E7               	goto	l288
  1902  00205A                     __end_of_ir_a_pantalla_ingresar_contrasenia:
  1903                           	opt stack 0
  1904                           tblptru	equ	0xFF8
  1905                           tblptrh	equ	0xFF7
  1906                           tblptrl	equ	0xFF6
  1907                           tablat	equ	0xFF5
  1908                           prodh	equ	0xFF4
  1909                           prodl	equ	0xFF3
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1l	equ	0xFE1
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function _verificar_contrasenia *****************
  1917 ;; Defined at:
  1918 ;;		line 425 in file "main.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;		None
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  i               2    8[COMRAM] int 
  1923 ;;  equals          2    6[COMRAM] int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  2    0[COMRAM] int 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1934 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1936 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1937 ;;Total ram usage:       10 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; This function calls:
  1940 ;;		Nothing
  1941 ;; This function is called by:
  1942 ;;		_ir_a_pantalla_ingresar_contrasenia
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text8
  1947  001DB0                     __ptext8:
  1948                           	opt stack 0
  1949  001DB0                     _verificar_contrasenia:
  1950                           	opt stack 27
  1951                           
  1952                           ;main.c: 426: int equals = 0;
  1953                           
  1954                           ;incstack = 0
  1955  001DB0  0E00               	movlw	0
  1956  001DB2  6E08               	movwf	verificar_contrasenia@equals+1,c
  1957  001DB4  0E00               	movlw	0
  1958  001DB6  6E07               	movwf	verificar_contrasenia@equals,c
  1959                           
  1960                           ;main.c: 427: for (int i = 0; i < 4; i++) {
  1961  001DB8  0E00               	movlw	0
  1962  001DBA  6E0A               	movwf	verificar_contrasenia@i+1,c
  1963  001DBC  0E00               	movlw	0
  1964  001DBE  6E09               	movwf	verificar_contrasenia@i,c
  1965  001DC0  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  1966  001DC2  D003               	goto	l342
  1967  001DC4  500A               	movf	verificar_contrasenia@i+1,w,c
  1968  001DC6  E12C               	bnz	l343
  1969  001DC8  D027               	goto	L1
  1970  001DCA                     l342:
  1971                           
  1972                           ;main.c: 428: if (array_contrasenia[i] == array_contrasenia_ingresada[i]) {
  1973  001DCA  90D8               	bcf	status,0,c
  1974  001DCC  3409               	rlcf	verificar_contrasenia@i,w,c
  1975  001DCE  6ED9               	movwf	fsr2l,c
  1976  001DD0  340A               	rlcf	verificar_contrasenia@i+1,w,c
  1977  001DD2  6EDA               	movwf	fsr2h,c
  1978  001DD4  0E60               	movlw	low _array_contrasenia_ingresada
  1979  001DD6  26D9               	addwf	fsr2l,f,c
  1980  001DD8  0E00               	movlw	high _array_contrasenia_ingresada
  1981  001DDA  22DA               	addwfc	fsr2h,f,c
  1982  001DDC  90D8               	bcf	status,0,c
  1983  001DDE  3409               	rlcf	verificar_contrasenia@i,w,c
  1984  001DE0  6EE1               	movwf	fsr1l,c
  1985  001DE2  340A               	rlcf	verificar_contrasenia@i+1,w,c
  1986  001DE4  6EE2               	movwf	fsr1h,c
  1987  001DE6  0EA6               	movlw	low _array_contrasenia
  1988  001DE8  26E1               	addwf	fsr1l,f,c
  1989  001DEA  0E00               	movlw	high _array_contrasenia
  1990  001DEC  22E2               	addwfc	fsr1h,f,c
  1991  001DEE  50DE               	movf	postinc2,w,c
  1992  001DF0  18E6               	xorwf	postinc1,w,c
  1993  001DF2  E108               	bnz	l3262
  1994  001DF4  50DE               	movf	postinc2,w,c
  1995  001DF6  18E6               	xorwf	postinc1,w,c
  1996  001DF8  A4D8               	btfss	status,2,c
  1997  001DFA  D004               	goto	l344
  1998                           
  1999                           ;main.c: 429: equals = 1;
  2000  001DFC  0E00               	movlw	0
  2001  001DFE  6E08               	movwf	verificar_contrasenia@equals+1,c
  2002  001E00  0E01               	movlw	1
  2003  001E02  D003               	goto	L2
  2004  001E04                     l344:
  2005  001E04                     l3262:
  2006                           
  2007                           ;main.c: 431: equals = 0;
  2008  001E04  0E00               	movlw	0
  2009  001E06  6E08               	movwf	verificar_contrasenia@equals+1,c
  2010  001E08  0E00               	movlw	0
  2011  001E0A                     L2:
  2012  001E0A  6E07               	movwf	verificar_contrasenia@equals,c
  2013  001E0C  4A09               	infsnz	verificar_contrasenia@i,f,c
  2014  001E0E  2A0A               	incf	verificar_contrasenia@i+1,f,c
  2015  001E10  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  2016  001E12  D7DB               	goto	l342
  2017  001E14  500A               	movf	verificar_contrasenia@i+1,w,c
  2018  001E16  E104               	bnz	u3250
  2019  001E18                     L1:
  2020  001E18  0E04               	movlw	4
  2021  001E1A  5C09               	subwf	verificar_contrasenia@i,w,c
  2022  001E1C  A0D8               	btfss	status,0,c
  2023  001E1E  D7D5               	goto	l342
  2024  001E20                     u3250:
  2025  001E20                     l343:
  2026                           
  2027                           ;main.c: 432: }
  2028                           ;main.c: 433: }
  2029                           ;main.c: 434: return equals;
  2030  001E20  C007  F001         	movff	verificar_contrasenia@equals,?_verificar_contrasenia
  2031  001E24  C008  F002         	movff	verificar_contrasenia@equals+1,?_verificar_contrasenia+1
  2032  001E28  0012               	return		;funcret
  2033  001E2A                     __end_of_verificar_contrasenia:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           postinc0	equ	0xFEE
  2042                           wreg	equ	0xFE8
  2043                           postinc1	equ	0xFE6
  2044                           postdec1	equ	0xFE5
  2045                           fsr1h	equ	0xFE2
  2046                           fsr1l	equ	0xFE1
  2047                           postinc2	equ	0xFDE
  2048                           fsr2h	equ	0xFDA
  2049                           fsr2l	equ	0xFD9
  2050                           status	equ	0xFD8
  2051                           
  2052 ;; *************** function _resetear_pantalla_ingresar_contrasenia *****************
  2053 ;; Defined at:
  2054 ;;		line 221 in file "main.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;		None
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  i               2   10[COMRAM] int 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;Total ram usage:        2 bytes
  2073 ;; Hardware stack levels used:    1
  2074 ;; Hardware stack levels required when called:    5
  2075 ;; This function calls:
  2076 ;;		_lcd_gotoxy
  2077 ;;		_lcd_putrs
  2078 ;; This function is called by:
  2079 ;;		_ir_a_pantalla_ingresar_contrasenia
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text9
  2084  0021B4                     __ptext9:
  2085                           	opt stack 0
  2086  0021B4                     _resetear_pantalla_ingresar_contrasenia:
  2087                           	opt stack 22
  2088                           
  2089                           ;main.c: 222: lcd_gotoxy(1, 2);
  2090                           
  2091                           ;incstack = 0
  2092  0021B4  0E02               	movlw	2
  2093  0021B6  6E05               	movwf	lcd_gotoxy@y,c
  2094  0021B8  0E01               	movlw	1
  2095  0021BA  ECFF  F011         	call	_lcd_gotoxy
  2096                           
  2097                           ;main.c: 223: lcd_putrs("              ");
  2098  0021BE  0E26               	movlw	low (STR_18+2)
  2099  0021C0  6E09               	movwf	lcd_putrs@ptr,c
  2100  0021C2  0E0F               	movlw	high (STR_18+2)
  2101  0021C4  6E0A               	movwf	lcd_putrs@ptr+1,c
  2102  0021C6  ECB1  F010         	call	_lcd_putrs	;wreg free
  2103                           
  2104                           ;main.c: 225: for (int i = 0; i < 0; i++) {
  2105  0021CA  0E00               	movlw	0
  2106  0021CC  6E0C               	movwf	resetear_pantalla_ingresar_contrasenia@i+1,c
  2107  0021CE  0E00               	movlw	0
  2108  0021D0  6E0B               	movwf	resetear_pantalla_ingresar_contrasenia@i,c
  2109  0021D2                     l3226:
  2110  0021D2  AE0C               	btfss	resetear_pantalla_ingresar_contrasenia@i+1,7,c
  2111  0021D4  D010               	goto	u3220
  2112                           
  2113                           ;main.c: 226: array_contrasenia_ingresada[i] = 0;
  2114  0021D6  90D8               	bcf	status,0,c
  2115  0021D8  340B               	rlcf	resetear_pantalla_ingresar_contrasenia@i,w,c
  2116  0021DA  6ED9               	movwf	fsr2l,c
  2117  0021DC  340C               	rlcf	resetear_pantalla_ingresar_contrasenia@i+1,w,c
  2118  0021DE  6EDA               	movwf	fsr2h,c
  2119  0021E0  0E60               	movlw	low _array_contrasenia_ingresada
  2120  0021E2  26D9               	addwf	fsr2l,f,c
  2121  0021E4  0E00               	movlw	high _array_contrasenia_ingresada
  2122  0021E6  22DA               	addwfc	fsr2h,f,c
  2123  0021E8  0E00               	movlw	0
  2124  0021EA  6EDE               	movwf	postinc2,c
  2125  0021EC  0E00               	movlw	0
  2126  0021EE  6EDD               	movwf	postdec2,c
  2127  0021F0  4A0B               	infsnz	resetear_pantalla_ingresar_contrasenia@i,f,c
  2128  0021F2  2A0C               	incf	resetear_pantalla_ingresar_contrasenia@i+1,f,c
  2129  0021F4  D7EE               	goto	l3226
  2130  0021F6                     u3220:
  2131                           
  2132                           ;main.c: 227: }
  2133                           ;main.c: 229: numeros_ingresados = 0;
  2134  0021F6  0E00               	movlw	0
  2135  0021F8  6E34               	movwf	_numeros_ingresados+1,c
  2136  0021FA  0E00               	movlw	0
  2137  0021FC  6E33               	movwf	_numeros_ingresados,c
  2138  0021FE  0012               	return		;funcret
  2139  002200                     __end_of_resetear_pantalla_ingresar_contrasenia:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           prodh	equ	0xFF4
  2146                           prodl	equ	0xFF3
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postinc1	equ	0xFE6
  2150                           postdec1	equ	0xFE5
  2151                           fsr1h	equ	0xFE2
  2152                           fsr1l	equ	0xFE1
  2153                           postinc2	equ	0xFDE
  2154                           postdec2	equ	0xFDD
  2155                           fsr2h	equ	0xFDA
  2156                           fsr2l	equ	0xFD9
  2157                           status	equ	0xFD8
  2158                           
  2159 ;; *************** function _mostrar_presionar_a *****************
  2160 ;; Defined at:
  2161 ;;		line 216 in file "main.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;		None
  2166 ;; Return value:  Size  Location     Type
  2167 ;;                  1    wreg      void 
  2168 ;; Registers used:
  2169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2179 ;;Total ram usage:        0 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    5
  2182 ;; This function calls:
  2183 ;;		_lcd_gotoxy
  2184 ;;		_lcd_putrs
  2185 ;; This function is called by:
  2186 ;;		_ir_a_pantalla_ingresar_contrasenia
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text10
  2191  00243E                     __ptext10:
  2192                           	opt stack 0
  2193  00243E                     _mostrar_presionar_a:
  2194                           	opt stack 22
  2195                           
  2196                           ;main.c: 217: lcd_gotoxy(7, 2);
  2197                           
  2198                           ;incstack = 0
  2199  00243E  0E02               	movlw	2
  2200  002440  6E05               	movwf	lcd_gotoxy@y,c
  2201  002442  0E07               	movlw	7
  2202  002444  ECFF  F011         	call	_lcd_gotoxy
  2203                           
  2204                           ;main.c: 218: lcd_putrs("Press A");
  2205  002448  0E8F               	movlw	low STR_14
  2206  00244A  6E09               	movwf	lcd_putrs@ptr,c
  2207  00244C  0E0F               	movlw	high STR_14
  2208  00244E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2209  002450  ECB1  F010         	call	_lcd_putrs	;wreg free
  2210  002454  0012               	return		;funcret
  2211  002456                     __end_of_mostrar_presionar_a:
  2212                           	opt stack 0
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           prodh	equ	0xFF4
  2218                           prodl	equ	0xFF3
  2219                           postinc0	equ	0xFEE
  2220                           wreg	equ	0xFE8
  2221                           postinc1	equ	0xFE6
  2222                           postdec1	equ	0xFE5
  2223                           fsr1h	equ	0xFE2
  2224                           fsr1l	equ	0xFE1
  2225                           postinc2	equ	0xFDE
  2226                           postdec2	equ	0xFDD
  2227                           fsr2h	equ	0xFDA
  2228                           fsr2l	equ	0xFD9
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function _ir_a_pantalla_edicion *****************
  2232 ;; Defined at:
  2233 ;;		line 313 in file "main.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    9
  2254 ;; This function calls:
  2255 ;;		_Read_RTC
  2256 ;;		_cambiar_opcion
  2257 ;;		_lcd_gotoxy
  2258 ;;		_lcd_putrs
  2259 ;;		_seleccionar_opcion
  2260 ;;		_set_reloj_digital
  2261 ;; This function is called by:
  2262 ;;		_ir_a_pantalla_ingresar_contrasenia
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text11
  2267  00231E                     __ptext11:
  2268                           	opt stack 0
  2269  00231E                     _ir_a_pantalla_edicion:
  2270                           	opt stack 18
  2271                           
  2272                           ;main.c: 315: lcd_gotoxy(1, 1);
  2273                           
  2274                           ;incstack = 0
  2275                           ;main.c: 314: while (1) {
  2276  00231E  0E01               	movlw	1
  2277  002320  6E05               	movwf	lcd_gotoxy@y,c
  2278  002322  0E01               	movlw	1
  2279  002324  ECFF  F011         	call	_lcd_gotoxy
  2280                           
  2281                           ;main.c: 316: lcd_putrs("Active ");
  2282  002328  0E87               	movlw	low STR_19
  2283  00232A  6E09               	movwf	lcd_putrs@ptr,c
  2284  00232C  0E0F               	movlw	high STR_19
  2285  00232E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2286  002330  ECB1  F010         	call	_lcd_putrs	;wreg free
  2287                           
  2288                           ;main.c: 317: lcd_gotoxy(1, 2);
  2289  002334  0E02               	movlw	2
  2290  002336  6E05               	movwf	lcd_gotoxy@y,c
  2291  002338  0E01               	movlw	1
  2292  00233A  ECFF  F011         	call	_lcd_gotoxy
  2293                           
  2294                           ;main.c: 318: lcd_putrs("Edt Pass");
  2295  00233E  0E7E               	movlw	low STR_20
  2296  002340  6E09               	movwf	lcd_putrs@ptr,c
  2297  002342  0E0F               	movlw	high STR_20
  2298  002344  6E0A               	movwf	lcd_putrs@ptr+1,c
  2299  002346  ECB1  F010         	call	_lcd_putrs	;wreg free
  2300                           
  2301                           ;main.c: 320: Read_RTC();
  2302  00234A  EC5F  F00C         	call	_Read_RTC	;wreg free
  2303                           
  2304                           ;main.c: 322: set_reloj_digital();
  2305  00234E  EC62  F012         	call	_set_reloj_digital	;wreg free
  2306                           
  2307                           ;main.c: 323: cambiar_opcion();
  2308  002352  ECDA  F00C         	call	_cambiar_opcion	;wreg free
  2309                           
  2310                           ;main.c: 324: seleccionar_opcion();
  2311  002356  ECC7  F011         	call	_seleccionar_opcion	;wreg free
  2312  00235A  D7E1               	goto	_ir_a_pantalla_edicion
  2313  00235C                     __end_of_ir_a_pantalla_edicion:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           prodh	equ	0xFF4
  2320                           prodl	equ	0xFF3
  2321                           postinc0	equ	0xFEE
  2322                           wreg	equ	0xFE8
  2323                           postinc1	equ	0xFE6
  2324                           postdec1	equ	0xFE5
  2325                           fsr1h	equ	0xFE2
  2326                           fsr1l	equ	0xFE1
  2327                           postinc2	equ	0xFDE
  2328                           postdec2	equ	0xFDD
  2329                           fsr2h	equ	0xFDA
  2330                           fsr2l	equ	0xFD9
  2331                           status	equ	0xFD8
  2332                           
  2333 ;; *************** function _set_reloj_digital *****************
  2334 ;; Defined at:
  2335 ;;		line 87 in file "main.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  1    wreg      void 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2353 ;;Total ram usage:        0 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; Hardware stack levels required when called:    6
  2356 ;; This function calls:
  2357 ;;		_setDiaMesAnio
  2358 ;;		_setHoraMinutoSegundo
  2359 ;; This function is called by:
  2360 ;;		_ir_a_pantalla_edicion
  2361 ;;		_ir_a_pantalla_inicial
  2362 ;;		_setup
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text12
  2367  0024C4                     __ptext12:
  2368                           	opt stack 0
  2369  0024C4                     _set_reloj_digital:
  2370                           	opt stack 23
  2371                           
  2372                           ;main.c: 88: setDiaMesAnio();
  2373                           
  2374                           ;incstack = 0
  2375  0024C4  EC9A  F00E         	call	_setDiaMesAnio	;wreg free
  2376                           
  2377                           ;main.c: 89: setHoraMinutoSegundo();
  2378  0024C8  EC8B  F00F         	call	_setHoraMinutoSegundo	;wreg free
  2379  0024CC  0012               	return		;funcret
  2380  0024CE                     __end_of_set_reloj_digital:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           postinc0	equ	0xFEE
  2389                           wreg	equ	0xFE8
  2390                           postinc1	equ	0xFE6
  2391                           postdec1	equ	0xFE5
  2392                           fsr1h	equ	0xFE2
  2393                           fsr1l	equ	0xFE1
  2394                           postinc2	equ	0xFDE
  2395                           postdec2	equ	0xFDD
  2396                           fsr2h	equ	0xFDA
  2397                           fsr2l	equ	0xFD9
  2398                           status	equ	0xFD8
  2399                           
  2400 ;; *************** function _setHoraMinutoSegundo *****************
  2401 ;; Defined at:
  2402 ;;		line 74 in file "main.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;		None
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;		None
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2420 ;;Total ram usage:        0 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    5
  2423 ;; This function calls:
  2424 ;;		_Write_RTC
  2425 ;;		_lcd_gotoxy
  2426 ;;		_lcd_putrs
  2427 ;;		_sprintf
  2428 ;; This function is called by:
  2429 ;;		_set_reloj_digital
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text13
  2434  001F16                     __ptext13:
  2435                           	opt stack 0
  2436  001F16                     _setHoraMinutoSegundo:
  2437                           	opt stack 23
  2438                           
  2439                           ;main.c: 75: if (hora >= 24) {
  2440                           
  2441                           ;incstack = 0
  2442  001F16  BE4F               	btfsc	_hora+1,7,c
  2443  001F18  D014               	goto	l162
  2444  001F1A  504F               	movf	_hora+1,w,c
  2445  001F1C  E104               	bnz	u2990
  2446  001F1E  0E18               	movlw	24
  2447  001F20  5C4E               	subwf	_hora,w,c
  2448  001F22  A0D8               	btfss	status,0,c
  2449  001F24  D00E               	goto	l162
  2450  001F26                     u2990:
  2451                           
  2452                           ;main.c: 76: hora = 0;
  2453  001F26  0E00               	movlw	0
  2454  001F28  6E4F               	movwf	_hora+1,c
  2455  001F2A  0E00               	movlw	0
  2456  001F2C  6E4E               	movwf	_hora,c
  2457                           
  2458                           ;main.c: 77: minuto = 0;
  2459  001F2E  0E00               	movlw	0
  2460  001F30  6E4D               	movwf	_minuto+1,c
  2461  001F32  0E00               	movlw	0
  2462  001F34  6E4C               	movwf	_minuto,c
  2463                           
  2464                           ;main.c: 78: segundo = 0;
  2465  001F36  0E00               	movlw	0
  2466  001F38  6E36               	movwf	_segundo+1,c
  2467  001F3A  0E00               	movlw	0
  2468  001F3C  6E35               	movwf	_segundo,c
  2469                           
  2470                           ;main.c: 79: Write_RTC();
  2471  001F3E  EC98  F00A         	call	_Write_RTC	;wreg free
  2472  001F42                     l162:
  2473                           
  2474                           ;main.c: 80: }
  2475                           ;main.c: 82: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  2476  001F42  0E86               	movlw	low _buffer2
  2477  001F44  6E0D               	movwf	sprintf@sp,c
  2478  001F46  0E00               	movlw	high _buffer2
  2479  001F48  6E0E               	movwf	sprintf@sp+1,c
  2480  001F4A  0E66               	movlw	low STR_8
  2481  001F4C  6E0F               	movwf	sprintf@f,c
  2482  001F4E  0E0F               	movlw	high STR_8
  2483  001F50  6E10               	movwf	sprintf@f+1,c
  2484  001F52  C04E  F011         	movff	_hora,?_sprintf+4
  2485  001F56  C04F  F012         	movff	_hora+1,?_sprintf+5
  2486  001F5A  C04C  F013         	movff	_minuto,?_sprintf+6
  2487  001F5E  C04D  F014         	movff	_minuto+1,?_sprintf+7
  2488  001F62  C035  F015         	movff	_segundo,?_sprintf+8
  2489  001F66  C036  F016         	movff	_segundo+1,?_sprintf+9
  2490  001F6A  ECE6  F007         	call	_sprintf	;wreg free
  2491                           
  2492                           ;main.c: 83: lcd_gotoxy(9, 2);
  2493  001F6E  0E02               	movlw	2
  2494  001F70  6E05               	movwf	lcd_gotoxy@y,c
  2495  001F72  0E09               	movlw	9
  2496  001F74  ECFF  F011         	call	_lcd_gotoxy
  2497                           
  2498                           ;main.c: 84: lcd_putrs(buffer2);
  2499  001F78  0E86               	movlw	low _buffer2
  2500  001F7A  6E09               	movwf	lcd_putrs@ptr,c
  2501  001F7C  0E00               	movlw	high _buffer2
  2502  001F7E  6E0A               	movwf	lcd_putrs@ptr+1,c
  2503  001F80  ECB1  F010         	call	_lcd_putrs	;wreg free
  2504  001F84  0012               	return		;funcret
  2505  001F86                     __end_of_setHoraMinutoSegundo:
  2506                           	opt stack 0
  2507                           tblptru	equ	0xFF8
  2508                           tblptrh	equ	0xFF7
  2509                           tblptrl	equ	0xFF6
  2510                           tablat	equ	0xFF5
  2511                           prodh	equ	0xFF4
  2512                           prodl	equ	0xFF3
  2513                           postinc0	equ	0xFEE
  2514                           wreg	equ	0xFE8
  2515                           postinc1	equ	0xFE6
  2516                           postdec1	equ	0xFE5
  2517                           fsr1h	equ	0xFE2
  2518                           fsr1l	equ	0xFE1
  2519                           postinc2	equ	0xFDE
  2520                           postdec2	equ	0xFDD
  2521                           fsr2h	equ	0xFDA
  2522                           fsr2l	equ	0xFD9
  2523                           status	equ	0xFD8
  2524                           
  2525 ;; *************** function _setDiaMesAnio *****************
  2526 ;; Defined at:
  2527 ;;		line 58 in file "main.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;		None
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    5
  2548 ;; This function calls:
  2549 ;;		_Write_RTC
  2550 ;;		_lcd_gotoxy
  2551 ;;		_lcd_putrs
  2552 ;;		_sprintf
  2553 ;; This function is called by:
  2554 ;;		_set_reloj_digital
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text14
  2559  001D34                     __ptext14:
  2560                           	opt stack 0
  2561  001D34                     _setDiaMesAnio:
  2562                           	opt stack 23
  2563                           
  2564                           ;main.c: 59: if (dia > 31) {
  2565                           
  2566                           ;incstack = 0
  2567  001D34  BE51               	btfsc	_dia+1,7,c
  2568  001D36  D00C               	goto	l157
  2569  001D38  5051               	movf	_dia+1,w,c
  2570  001D3A  E104               	bnz	u2970
  2571  001D3C  0E20               	movlw	32
  2572  001D3E  5C50               	subwf	_dia,w,c
  2573  001D40  A0D8               	btfss	status,0,c
  2574  001D42  D006               	goto	l157
  2575  001D44                     u2970:
  2576                           
  2577                           ;main.c: 60: dia = 1;
  2578  001D44  0E00               	movlw	0
  2579  001D46  6E51               	movwf	_dia+1,c
  2580  001D48  0E01               	movlw	1
  2581  001D4A  6E50               	movwf	_dia,c
  2582                           
  2583                           ;main.c: 61: Write_RTC();
  2584  001D4C  EC98  F00A         	call	_Write_RTC	;wreg free
  2585  001D50                     l157:
  2586                           
  2587                           ;main.c: 62: }
  2588                           ;main.c: 64: if (mes > 12) {
  2589  001D50  BE55               	btfsc	_mes+1,7,c
  2590  001D52  D00C               	goto	l158
  2591  001D54  5055               	movf	_mes+1,w,c
  2592  001D56  E104               	bnz	u2980
  2593  001D58  0E0D               	movlw	13
  2594  001D5A  5C54               	subwf	_mes,w,c
  2595  001D5C  A0D8               	btfss	status,0,c
  2596  001D5E  D006               	goto	l158
  2597  001D60                     u2980:
  2598                           
  2599                           ;main.c: 65: mes = 1;
  2600  001D60  0E00               	movlw	0
  2601  001D62  6E55               	movwf	_mes+1,c
  2602  001D64  0E01               	movlw	1
  2603  001D66  6E54               	movwf	_mes,c
  2604                           
  2605                           ;main.c: 66: Write_RTC();
  2606  001D68  EC98  F00A         	call	_Write_RTC	;wreg free
  2607  001D6C                     l158:
  2608                           
  2609                           ;main.c: 67: }
  2610                           ;main.c: 69: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  2611  001D6C  0E86               	movlw	low _buffer2
  2612  001D6E  6E0D               	movwf	sprintf@sp,c
  2613  001D70  0E00               	movlw	high _buffer2
  2614  001D72  6E0E               	movwf	sprintf@sp+1,c
  2615  001D74  0E57               	movlw	low STR_7
  2616  001D76  6E0F               	movwf	sprintf@f,c
  2617  001D78  0E0F               	movlw	high STR_7
  2618  001D7A  6E10               	movwf	sprintf@f+1,c
  2619  001D7C  C050  F011         	movff	_dia,?_sprintf+4
  2620  001D80  C051  F012         	movff	_dia+1,?_sprintf+5
  2621  001D84  C054  F013         	movff	_mes,?_sprintf+6
  2622  001D88  C055  F014         	movff	_mes+1,?_sprintf+7
  2623  001D8C  C056  F015         	movff	_anio,?_sprintf+8
  2624  001D90  C057  F016         	movff	_anio+1,?_sprintf+9
  2625  001D94  ECE6  F007         	call	_sprintf	;wreg free
  2626                           
  2627                           ;main.c: 70: lcd_gotoxy(9, 1);
  2628  001D98  0E01               	movlw	1
  2629  001D9A  6E05               	movwf	lcd_gotoxy@y,c
  2630  001D9C  0E09               	movlw	9
  2631  001D9E  ECFF  F011         	call	_lcd_gotoxy
  2632                           
  2633                           ;main.c: 71: lcd_putrs(buffer2);
  2634  001DA2  0E86               	movlw	low _buffer2
  2635  001DA4  6E09               	movwf	lcd_putrs@ptr,c
  2636  001DA6  0E00               	movlw	high _buffer2
  2637  001DA8  6E0A               	movwf	lcd_putrs@ptr+1,c
  2638  001DAA  ECB1  F010         	call	_lcd_putrs	;wreg free
  2639  001DAE  0012               	return		;funcret
  2640  001DB0                     __end_of_setDiaMesAnio:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           postinc1	equ	0xFE6
  2651                           postdec1	equ	0xFE5
  2652                           fsr1h	equ	0xFE2
  2653                           fsr1l	equ	0xFE1
  2654                           postinc2	equ	0xFDE
  2655                           postdec2	equ	0xFDD
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function _Write_RTC *****************
  2661 ;; Defined at:
  2662 ;;		line 74 in file "../../headers\unmc_rtcc_01.h"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    2
  2683 ;; This function calls:
  2684 ;;		_RtccWrOn
  2685 ;;		_RtccWriteDate
  2686 ;;		_RtccWriteTime
  2687 ;;		___awdiv
  2688 ;; This function is called by:
  2689 ;;		_setDiaMesAnio
  2690 ;;		_setHoraMinutoSegundo
  2691 ;;		_setup
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text15
  2696  001530                     __ptext15:
  2697                           	opt stack 0
  2698  001530                     _Write_RTC:
  2699                           	opt stack 25
  2700                           
  2701                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2702                           
  2703                           ;incstack = 0
  2704  001530  EC35  F012         	call	_RtccWrOn	;wreg free
  2705                           
  2706                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2707  001534  80A3               	bsf	4003,0,c	;volatile
  2708                           
  2709                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2710  001536  C035  F001         	movff	_segundo,___awdiv@dividend
  2711  00153A  C036  F002         	movff	_segundo+1,___awdiv@dividend+1
  2712  00153E  0E00               	movlw	0
  2713  001540  6E04               	movwf	___awdiv@divisor+1,c
  2714  001542  0E0A               	movlw	10
  2715  001544  6E03               	movwf	___awdiv@divisor,c
  2716  001546  EC58  F00E         	call	___awdiv	;wreg free
  2717  00154A  5001               	movf	?___awdiv,w,c
  2718  00154C  6E5D               	movwf	_segundo_d,c
  2719                           
  2720                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2721  00154E  505D               	movf	_segundo_d,w,c
  2722  001550  0D0A               	mullw	10
  2723  001552  50F3               	movf	prodl,w,c
  2724  001554  0800               	sublw	0
  2725  001556  2435               	addwf	_segundo,w,c
  2726  001558  6E5E               	movwf	_segundo_u,c
  2727                           
  2728                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2729  00155A  505D               	movf	_segundo_d,w,c
  2730  00155C  0D10               	mullw	16
  2731  00155E  50F3               	movf	prodl,w,c
  2732  001560  245E               	addwf	_segundo_u,w,c
  2733  001562  6E49               	movwf	_RtccTime+1,c
  2734                           
  2735                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2736  001564  C04C  F001         	movff	_minuto,___awdiv@dividend
  2737  001568  C04D  F002         	movff	_minuto+1,___awdiv@dividend+1
  2738  00156C  0E00               	movlw	0
  2739  00156E  6E04               	movwf	___awdiv@divisor+1,c
  2740  001570  0E0A               	movlw	10
  2741  001572  6E03               	movwf	___awdiv@divisor,c
  2742  001574  EC58  F00E         	call	___awdiv	;wreg free
  2743  001578  5001               	movf	?___awdiv,w,c
  2744  00157A  6E5C               	movwf	_minuto_d,c
  2745                           
  2746                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2747  00157C  505C               	movf	_minuto_d,w,c
  2748  00157E  0D0A               	mullw	10
  2749  001580  50F3               	movf	prodl,w,c
  2750  001582  0800               	sublw	0
  2751  001584  244C               	addwf	_minuto,w,c
  2752  001586  0100               	movlb	0	; () banked
  2753  001588  6FB3               	movwf	_minuto_u& (0+255),b
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2757  00158A  505C               	movf	_minuto_d,w,c
  2758  00158C  0D10               	mullw	16
  2759  00158E  50F3               	movf	prodl,w,c
  2760  001590  0100               	movlb	0	; () banked
  2761  001592  25B3               	addwf	_minuto_u& (0+255),w,b
  2762  001594  6E4A               	movwf	_RtccTime+2,c
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2766  001596  C04E  F001         	movff	_hora,___awdiv@dividend
  2767  00159A  C04F  F002         	movff	_hora+1,___awdiv@dividend+1
  2768  00159E  0E00               	movlw	0
  2769  0015A0  6E04               	movwf	___awdiv@divisor+1,c
  2770  0015A2  0E0A               	movlw	10
  2771  0015A4  6E03               	movwf	___awdiv@divisor,c
  2772  0015A6  EC58  F00E         	call	___awdiv	;wreg free
  2773  0015AA  5001               	movf	?___awdiv,w,c
  2774  0015AC  6E5B               	movwf	_hora_d,c
  2775                           
  2776                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2777  0015AE  505B               	movf	_hora_d,w,c
  2778  0015B0  0D0A               	mullw	10
  2779  0015B2  50F3               	movf	prodl,w,c
  2780  0015B4  0800               	sublw	0
  2781  0015B6  244E               	addwf	_hora,w,c
  2782  0015B8  0100               	movlb	0	; () banked
  2783  0015BA  6FB2               	movwf	_hora_u& (0+255),b
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2787  0015BC  505B               	movf	_hora_d,w,c
  2788  0015BE  0D10               	mullw	16
  2789  0015C0  50F3               	movf	prodl,w,c
  2790  0015C2  0100               	movlb	0	; () banked
  2791  0015C4  25B2               	addwf	_hora_u& (0+255),w,b
  2792  0015C6  6E4B               	movwf	_RtccTime+3,c
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2796  0015C8  C056  F001         	movff	_anio,___awdiv@dividend
  2797  0015CC  C057  F002         	movff	_anio+1,___awdiv@dividend+1
  2798  0015D0  0E00               	movlw	0
  2799  0015D2  6E04               	movwf	___awdiv@divisor+1,c
  2800  0015D4  0E0A               	movlw	10
  2801  0015D6  6E03               	movwf	___awdiv@divisor,c
  2802  0015D8  EC58  F00E         	call	___awdiv	;wreg free
  2803  0015DC  5001               	movf	?___awdiv,w,c
  2804  0015DE  6E58               	movwf	_anio_d,c
  2805                           
  2806                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2807  0015E0  5058               	movf	_anio_d,w,c
  2808  0015E2  0D0A               	mullw	10
  2809  0015E4  50F3               	movf	prodl,w,c
  2810  0015E6  0800               	sublw	0
  2811  0015E8  2456               	addwf	_anio,w,c
  2812  0015EA  0100               	movlb	0	; () banked
  2813  0015EC  6FAE               	movwf	_anio_u& (0+255),b
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2817  0015EE  5058               	movf	_anio_d,w,c
  2818  0015F0  0D10               	mullw	16
  2819  0015F2  50F3               	movf	prodl,w,c
  2820  0015F4  0100               	movlb	0	; () banked
  2821  0015F6  25AE               	addwf	_anio_u& (0+255),w,b
  2822  0015F8  6E47               	movwf	_RtccDate+3,c
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2826  0015FA  C054  F001         	movff	_mes,___awdiv@dividend
  2827  0015FE  C055  F002         	movff	_mes+1,___awdiv@dividend+1
  2828  001602  0E00               	movlw	0
  2829  001604  6E04               	movwf	___awdiv@divisor+1,c
  2830  001606  0E0A               	movlw	10
  2831  001608  6E03               	movwf	___awdiv@divisor,c
  2832  00160A  EC58  F00E         	call	___awdiv	;wreg free
  2833  00160E  5001               	movf	?___awdiv,w,c
  2834  001610  6E59               	movwf	_mes_d,c
  2835                           
  2836                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  2837  001612  5059               	movf	_mes_d,w,c
  2838  001614  0D0A               	mullw	10
  2839  001616  50F3               	movf	prodl,w,c
  2840  001618  0800               	sublw	0
  2841  00161A  2454               	addwf	_mes,w,c
  2842  00161C  0100               	movlb	0	; () banked
  2843  00161E  6FB0               	movwf	_mes_u& (0+255),b
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  2847  001620  5059               	movf	_mes_d,w,c
  2848  001622  0D10               	mullw	16
  2849  001624  50F3               	movf	prodl,w,c
  2850  001626  0100               	movlb	0	; () banked
  2851  001628  25B0               	addwf	_mes_u& (0+255),w,b
  2852  00162A  6E46               	movwf	_RtccDate+2,c
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  2856  00162C  C050  F001         	movff	_dia,___awdiv@dividend
  2857  001630  C051  F002         	movff	_dia+1,___awdiv@dividend+1
  2858  001634  0E00               	movlw	0
  2859  001636  6E04               	movwf	___awdiv@divisor+1,c
  2860  001638  0E0A               	movlw	10
  2861  00163A  6E03               	movwf	___awdiv@divisor,c
  2862  00163C  EC58  F00E         	call	___awdiv	;wreg free
  2863  001640  5001               	movf	?___awdiv,w,c
  2864  001642  6E5A               	movwf	_fecha_d,c
  2865                           
  2866                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  2867  001644  505A               	movf	_fecha_d,w,c
  2868  001646  0D0A               	mullw	10
  2869  001648  50F3               	movf	prodl,w,c
  2870  00164A  0800               	sublw	0
  2871  00164C  2450               	addwf	_dia,w,c
  2872  00164E  0100               	movlb	0	; () banked
  2873  001650  6FB1               	movwf	_fecha_u& (0+255),b
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  2877  001652  505A               	movf	_fecha_d,w,c
  2878  001654  0D10               	mullw	16
  2879  001656  50F3               	movf	prodl,w,c
  2880  001658  0100               	movlb	0	; () banked
  2881  00165A  25B1               	addwf	_fecha_u& (0+255),w,b
  2882  00165C  6E45               	movwf	_RtccDate+1,c
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  2886  00165E  C052  F0AF         	movff	_diasem,_dia_semana
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  2890  001662  C052  F044         	movff	_diasem,_RtccDate
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  2894  001666  0E48               	movlw	low _RtccTime
  2895  001668  6E01               	movwf	RtccWriteTime@pTm,c
  2896  00166A  0E00               	movlw	high _RtccTime
  2897  00166C  6E02               	movwf	RtccWriteTime@pTm+1,c
  2898  00166E  0E01               	movlw	1
  2899  001670  6E03               	movwf	RtccWriteTime@di,c
  2900  001672  ECE1  F00B         	call	_RtccWriteTime	;wreg free
  2901                           
  2902                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  2903  001676  0E44               	movlw	low _RtccDate
  2904  001678  6E01               	movwf	RtccWriteDate@pDt,c
  2905  00167A  0E00               	movlw	high _RtccDate
  2906  00167C  6E02               	movwf	RtccWriteDate@pDt+1,c
  2907  00167E  0E01               	movlw	1
  2908  001680  6E03               	movwf	RtccWriteDate@di,c
  2909  001682  EC46  F00B         	call	_RtccWriteDate	;wreg free
  2910                           
  2911                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  2912  001686  010F               	movlb	15	; () banked
  2913  001688  8F3F               	bsf	63,7,b	;volatile
  2914                           
  2915                           ; BSR set to: 15
  2916  00168A  0012               	return		;funcret
  2917  00168C                     __end_of_Write_RTC:
  2918                           	opt stack 0
  2919                           tblptru	equ	0xFF8
  2920                           tblptrh	equ	0xFF7
  2921                           tblptrl	equ	0xFF6
  2922                           tablat	equ	0xFF5
  2923                           prodh	equ	0xFF4
  2924                           prodl	equ	0xFF3
  2925                           postinc0	equ	0xFEE
  2926                           wreg	equ	0xFE8
  2927                           postinc1	equ	0xFE6
  2928                           postdec1	equ	0xFE5
  2929                           fsr1h	equ	0xFE2
  2930                           fsr1l	equ	0xFE1
  2931                           postinc2	equ	0xFDE
  2932                           postdec2	equ	0xFDD
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function ___awdiv *****************
  2938 ;; Defined at:
  2939 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  dividend        2    0[COMRAM] int 
  2942 ;;  divisor         2    2[COMRAM] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  quotient        2    6[COMRAM] int 
  2945 ;;  sign            1    5[COMRAM] unsigned char 
  2946 ;;  counter         1    4[COMRAM] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  2    0[COMRAM] int 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2957 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2959 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2960 ;;Total ram usage:        8 bytes
  2961 ;; Hardware stack levels used:    1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_Write_RTC
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text16
  2970  001CB0                     __ptext16:
  2971                           	opt stack 0
  2972  001CB0                     ___awdiv:
  2973                           	opt stack 26
  2974                           
  2975                           ; BSR set to: 15
  2976                           ;incstack = 0
  2977  001CB0  0E00               	movlw	0
  2978  001CB2  6E06               	movwf	___awdiv@sign,c
  2979  001CB4  AE04               	btfss	___awdiv@divisor+1,7,c
  2980  001CB6  D006               	goto	l744
  2981  001CB8  6C03               	negf	___awdiv@divisor,c
  2982  001CBA  1E04               	comf	___awdiv@divisor+1,f,c
  2983  001CBC  B0D8               	btfsc	status,0,c
  2984  001CBE  2A04               	incf	___awdiv@divisor+1,f,c
  2985  001CC0  0E01               	movlw	1
  2986  001CC2  6E06               	movwf	___awdiv@sign,c
  2987  001CC4                     l744:
  2988  001CC4  AE02               	btfss	___awdiv@dividend+1,7,c
  2989  001CC6  D006               	goto	l745
  2990  001CC8  6C01               	negf	___awdiv@dividend,c
  2991  001CCA  1E02               	comf	___awdiv@dividend+1,f,c
  2992  001CCC  B0D8               	btfsc	status,0,c
  2993  001CCE  2A02               	incf	___awdiv@dividend+1,f,c
  2994  001CD0  0E01               	movlw	1
  2995  001CD2  1A06               	xorwf	___awdiv@sign,f,c
  2996  001CD4                     l745:
  2997  001CD4  0E00               	movlw	0
  2998  001CD6  6E08               	movwf	___awdiv@quotient+1,c
  2999  001CD8  0E00               	movlw	0
  3000  001CDA  6E07               	movwf	___awdiv@quotient,c
  3001  001CDC  5003               	movf	___awdiv@divisor,w,c
  3002  001CDE  1004               	iorwf	___awdiv@divisor+1,w,c
  3003  001CE0  B4D8               	btfsc	status,2,c
  3004  001CE2  D01C               	goto	l752
  3005  001CE4  0E01               	movlw	1
  3006  001CE6  6E05               	movwf	___awdiv@counter,c
  3007  001CE8  D004               	goto	l747
  3008  001CEA  90D8               	bcf	status,0,c
  3009  001CEC  3603               	rlcf	___awdiv@divisor,f,c
  3010  001CEE  3604               	rlcf	___awdiv@divisor+1,f,c
  3011  001CF0  2A05               	incf	___awdiv@counter,f,c
  3012  001CF2                     l747:
  3013  001CF2  AE04               	btfss	___awdiv@divisor+1,7,c
  3014  001CF4  D7FA               	goto	l748
  3015  001CF6                     u2520:
  3016  001CF6  90D8               	bcf	status,0,c
  3017  001CF8  3607               	rlcf	___awdiv@quotient,f,c
  3018  001CFA  3608               	rlcf	___awdiv@quotient+1,f,c
  3019  001CFC  5003               	movf	___awdiv@divisor,w,c
  3020  001CFE  5C01               	subwf	___awdiv@dividend,w,c
  3021  001D00  5004               	movf	___awdiv@divisor+1,w,c
  3022  001D02  5802               	subwfb	___awdiv@dividend+1,w,c
  3023  001D04  A0D8               	btfss	status,0,c
  3024  001D06  D005               	goto	l751
  3025  001D08  5003               	movf	___awdiv@divisor,w,c
  3026  001D0A  5E01               	subwf	___awdiv@dividend,f,c
  3027  001D0C  5004               	movf	___awdiv@divisor+1,w,c
  3028  001D0E  5A02               	subwfb	___awdiv@dividend+1,f,c
  3029  001D10  8007               	bsf	___awdiv@quotient,0,c
  3030  001D12                     l751:
  3031  001D12  90D8               	bcf	status,0,c
  3032  001D14  3204               	rrcf	___awdiv@divisor+1,f,c
  3033  001D16  3203               	rrcf	___awdiv@divisor,f,c
  3034  001D18  2E05               	decfsz	___awdiv@counter,f,c
  3035  001D1A  D7ED               	goto	u2520
  3036  001D1C                     l752:
  3037  001D1C  5006               	movf	___awdiv@sign,w,c
  3038  001D1E  B4D8               	btfsc	status,2,c
  3039  001D20  D004               	goto	l753
  3040  001D22  6C07               	negf	___awdiv@quotient,c
  3041  001D24  1E08               	comf	___awdiv@quotient+1,f,c
  3042  001D26  B0D8               	btfsc	status,0,c
  3043  001D28  2A08               	incf	___awdiv@quotient+1,f,c
  3044  001D2A                     l753:
  3045  001D2A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3046  001D2E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3047  001D32  0012               	return	
  3048  001D34                     __end_of___awdiv:
  3049                           	opt stack 0
  3050                           tblptru	equ	0xFF8
  3051                           tblptrh	equ	0xFF7
  3052                           tblptrl	equ	0xFF6
  3053                           tablat	equ	0xFF5
  3054                           prodh	equ	0xFF4
  3055                           prodl	equ	0xFF3
  3056                           postinc0	equ	0xFEE
  3057                           wreg	equ	0xFE8
  3058                           postinc1	equ	0xFE6
  3059                           postdec1	equ	0xFE5
  3060                           fsr1h	equ	0xFE2
  3061                           fsr1l	equ	0xFE1
  3062                           postinc2	equ	0xFDE
  3063                           postdec2	equ	0xFDD
  3064                           fsr2h	equ	0xFDA
  3065                           fsr2l	equ	0xFD9
  3066                           status	equ	0xFD8
  3067                           
  3068 ;; *************** function _RtccWriteTime *****************
  3069 ;; Defined at:
  3070 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  pTm             2    0[COMRAM] PTR const struct .
  3073 ;;		 -> RtccTime(4), 
  3074 ;;  di              1    2[COMRAM] enum E7121
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  tempHourWDay    2    9[COMRAM] struct .
  3077 ;;  tempMinSec      2    7[COMRAM] struct .
  3078 ;;  wasWrEn         1    6[COMRAM] enum E7121
  3079 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3080 ;;  wasOn           1    4[COMRAM] enum E7121
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      enum E6550
  3083 ;; Registers used:
  3084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3090 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3091 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3093 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3094 ;;Total ram usage:       11 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		_RtccWrOn
  3099 ;; This function is called by:
  3100 ;;		_Write_RTC
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	text17
  3105  0017C2                     __ptext17:
  3106                           	opt stack 0
  3107  0017C2                     _RtccWriteTime:
  3108                           	opt stack 25
  3109                           
  3110                           ;incstack = 0
  3111  0017C2  0E00               	movlw	0
  3112  0017C4  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3113  0017C6  EE20 F002          	lfsr	2,2
  3114  0017CA  5001               	movf	RtccWriteTime@pTm,w,c
  3115  0017CC  26D9               	addwf	fsr2l,f,c
  3116  0017CE  5002               	movf	RtccWriteTime@pTm+1,w,c
  3117  0017D0  22DA               	addwfc	fsr2h,f,c
  3118  0017D2  0E5A               	movlw	90
  3119  0017D4  60DF               	cpfslt	indf2,c
  3120  0017D6  0012               	return	
  3121  0017D8  EE20 F001          	lfsr	2,1
  3122  0017DC  5001               	movf	RtccWriteTime@pTm,w,c
  3123  0017DE  26D9               	addwf	fsr2l,f,c
  3124  0017E0  5002               	movf	RtccWriteTime@pTm+1,w,c
  3125  0017E2  22DA               	addwfc	fsr2h,f,c
  3126  0017E4  0E5A               	movlw	90
  3127  0017E6  60DF               	cpfslt	indf2,c
  3128  0017E8  0012               	return	
  3129  0017EA  EE20 F003          	lfsr	2,3
  3130  0017EE  5001               	movf	RtccWriteTime@pTm,w,c
  3131  0017F0  26D9               	addwf	fsr2l,f,c
  3132  0017F2  5002               	movf	RtccWriteTime@pTm+1,w,c
  3133  0017F4  22DA               	addwfc	fsr2h,f,c
  3134  0017F6  0E24               	movlw	36
  3135  0017F8  64DF               	cpfsgt	indf2,c
  3136  0017FA  D001               	goto	l564
  3137  0017FC  0012               	return	
  3138  0017FE                     l564:
  3139  0017FE  EE20 F002          	lfsr	2,2
  3140  001802  5001               	movf	RtccWriteTime@pTm,w,c
  3141  001804  26D9               	addwf	fsr2l,f,c
  3142  001806  5002               	movf	RtccWriteTime@pTm+1,w,c
  3143  001808  22DA               	addwfc	fsr2h,f,c
  3144  00180A  50DF               	movf	indf2,w,c
  3145  00180C  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  3146  00180E  EE20 F001          	lfsr	2,1
  3147  001812  5001               	movf	RtccWriteTime@pTm,w,c
  3148  001814  26D9               	addwf	fsr2l,f,c
  3149  001816  5002               	movf	RtccWriteTime@pTm+1,w,c
  3150  001818  22DA               	addwfc	fsr2h,f,c
  3151  00181A  50DF               	movf	indf2,w,c
  3152  00181C  6E08               	movwf	RtccWriteTime@tempMinSec,c
  3153  00181E  5003               	movf	RtccWriteTime@di,w,c
  3154  001820  A4D8               	btfss	status,2,c
  3155  001822  9CF2               	bcf	intcon,6,c	;volatile
  3156  001824  010F               	movlb	15	; () banked
  3157  001826  0E00               	movlw	0
  3158  001828  BB3F               	btfsc	63,5,b	;volatile
  3159  00182A  0E01               	movlw	1
  3160  00182C  6E07               	movwf	RtccWriteTime@wasWrEn,c
  3161  00182E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3162  001830  B4D8               	btfsc	status,2,c
  3163                           
  3164                           ; BSR set to: 15
  3165  001832  EC35  F012         	call	_RtccWrOn	;wreg free
  3166  001836  010F               	movlb	15	; () banked
  3167  001838  0E00               	movlw	0
  3168  00183A  BF3F               	btfsc	63,7,b	;volatile
  3169  00183C  0E01               	movlw	1
  3170  00183E  6E05               	movwf	RtccWriteTime@wasOn,c
  3171  001840  5005               	movf	RtccWriteTime@wasOn,w,c
  3172  001842  B4D8               	btfsc	status,2,c
  3173  001844  D006               	goto	l570
  3174                           
  3175                           ; BSR set to: 15
  3176  001846  0E00               	movlw	0
  3177  001848  BE91               	btfsc	3985,7,c	;volatile
  3178  00184A  0E01               	movlw	1
  3179  00184C  6E06               	movwf	RtccWriteTime@wasAlrm,c
  3180                           
  3181                           ; BSR set to: 15
  3182  00184E  010F               	movlb	15	; () banked
  3183  001850  9F3F               	bcf	63,7,b	;volatile
  3184  001852                     l570:
  3185                           
  3186                           ; BSR set to: 15
  3187                           
  3188                           ; BSR set to: 15
  3189  001852  0EFC               	movlw	252
  3190  001854  010F               	movlb	15	; () banked
  3191  001856  173F               	andwf	63,f,b	;volatile
  3192  001858  010F               	movlb	15	; () banked
  3193  00185A  813F               	bsf	63,0,b	;volatile
  3194                           
  3195                           ; BSR set to: 15
  3196  00185C  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  3197                           
  3198                           ; BSR set to: 15
  3199  001860  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  3200                           
  3201                           ; BSR set to: 15
  3202  001864  EE20 F003          	lfsr	2,3
  3203  001868  5001               	movf	RtccWriteTime@pTm,w,c
  3204  00186A  26D9               	addwf	fsr2l,f,c
  3205  00186C  5002               	movf	RtccWriteTime@pTm+1,w,c
  3206  00186E  22DA               	addwfc	fsr2h,f,c
  3207  001870  50DF               	movf	indf2,w,c
  3208  001872  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  3209                           
  3210                           ; BSR set to: 15
  3211  001874  0EFC               	movlw	252
  3212  001876  010F               	movlb	15	; () banked
  3213  001878  173F               	andwf	63,f,b	;volatile
  3214                           
  3215                           ; BSR set to: 15
  3216  00187A  010F               	movlb	15	; () banked
  3217  00187C  813F               	bsf	63,0,b	;volatile
  3218                           
  3219                           ; BSR set to: 15
  3220  00187E  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  3221                           
  3222                           ; BSR set to: 15
  3223  001882  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  3224                           
  3225                           ; BSR set to: 15
  3226  001886  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  3227                           
  3228                           ; BSR set to: 15
  3229  00188A  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  3230                           
  3231                           ; BSR set to: 15
  3232  00188E  5005               	movf	RtccWriteTime@wasOn,w,c
  3233  001890  B4D8               	btfsc	status,2,c
  3234  001892  D00B               	goto	l571
  3235                           
  3236                           ; BSR set to: 15
  3237  001894  010F               	movlb	15	; () banked
  3238  001896  8F3F               	bsf	63,7,b	;volatile
  3239                           
  3240                           ; BSR set to: 15
  3241  001898  5006               	movf	RtccWriteTime@wasAlrm,w,c
  3242  00189A  A4D8               	btfss	status,2,c
  3243                           
  3244                           ; BSR set to: 15
  3245  00189C  8E91               	bsf	3985,7,c	;volatile
  3246                           
  3247                           ; BSR set to: 15
  3248                           
  3249                           ; BSR set to: 15
  3250  00189E  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3251  0018A0  B4D8               	btfsc	status,2,c
  3252  0018A2  D008               	goto	l575
  3253                           
  3254                           ; BSR set to: 15
  3255  0018A4  EC35  F012         	call	_RtccWrOn	;wreg free
  3256  0018A8  D005               	goto	l575
  3257  0018AA                     l571:
  3258  0018AA  5007               	movf	RtccWriteTime@wasWrEn,w,c
  3259  0018AC  A4D8               	btfss	status,2,c
  3260  0018AE  D002               	goto	l575
  3261  0018B0  010F               	movlb	15	; () banked
  3262  0018B2  9B3F               	bcf	63,5,b	;volatile
  3263  0018B4                     l575:
  3264                           
  3265                           ; BSR set to: 15
  3266                           
  3267                           ; BSR set to: 15
  3268  0018B4  5003               	movf	RtccWriteTime@di,w,c
  3269  0018B6  B4D8               	btfsc	status,2,c
  3270  0018B8  0012               	return	
  3271  0018BA  8CF2               	bsf	intcon,6,c	;volatile
  3272  0018BC  0012               	return	
  3273  0018BE                     __end_of_RtccWriteTime:
  3274                           	opt stack 0
  3275                           tblptru	equ	0xFF8
  3276                           tblptrh	equ	0xFF7
  3277                           tblptrl	equ	0xFF6
  3278                           tablat	equ	0xFF5
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           intcon	equ	0xFF2
  3282                           postinc0	equ	0xFEE
  3283                           wreg	equ	0xFE8
  3284                           postinc1	equ	0xFE6
  3285                           postdec1	equ	0xFE5
  3286                           fsr1h	equ	0xFE2
  3287                           fsr1l	equ	0xFE1
  3288                           indf2	equ	0xFDF
  3289                           postinc2	equ	0xFDE
  3290                           postdec2	equ	0xFDD
  3291                           fsr2h	equ	0xFDA
  3292                           fsr2l	equ	0xFD9
  3293                           status	equ	0xFD8
  3294                           
  3295 ;; *************** function _RtccWriteDate *****************
  3296 ;; Defined at:
  3297 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  pDt             2    0[COMRAM] PTR const struct .
  3300 ;;		 -> RtccDate(4), 
  3301 ;;  di              1    2[COMRAM] enum E7121
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  tempHourWDay    2   11[COMRAM] struct .
  3304 ;;  tempDayMonth    2    9[COMRAM] struct .
  3305 ;;  tempYear        2    6[COMRAM] struct .
  3306 ;;  wasWrEn         1    8[COMRAM] enum E7121
  3307 ;;  wasAlrm         1    5[COMRAM] enum E7121
  3308 ;;  wasOn           1    4[COMRAM] enum E7121
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      enum E6550
  3311 ;; Registers used:
  3312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3318 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3321 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3322 ;;Total ram usage:       13 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    1
  3325 ;; This function calls:
  3326 ;;		_RtccWrOn
  3327 ;; This function is called by:
  3328 ;;		_Write_RTC
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text18
  3333  00168C                     __ptext18:
  3334                           	opt stack 0
  3335  00168C                     _RtccWriteDate:
  3336                           	opt stack 25
  3337                           
  3338                           ;incstack = 0
  3339  00168C  0E00               	movlw	0
  3340  00168E  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3341  001690  EE20 F002          	lfsr	2,2
  3342  001694  5001               	movf	RtccWriteDate@pDt,w,c
  3343  001696  26D9               	addwf	fsr2l,f,c
  3344  001698  5002               	movf	RtccWriteDate@pDt+1,w,c
  3345  00169A  22DA               	addwfc	fsr2h,f,c
  3346  00169C  0E13               	movlw	19
  3347  00169E  60DF               	cpfslt	indf2,c
  3348  0016A0  0012               	return	
  3349  0016A2  EE20 F002          	lfsr	2,2
  3350  0016A6  5001               	movf	RtccWriteDate@pDt,w,c
  3351  0016A8  26D9               	addwf	fsr2l,f,c
  3352  0016AA  5002               	movf	RtccWriteDate@pDt+1,w,c
  3353  0016AC  22DA               	addwfc	fsr2h,f,c
  3354  0016AE  50DF               	movf	indf2,w,c
  3355  0016B0  B4D8               	btfsc	status,2,c
  3356  0016B2  0012               	return	
  3357  0016B4  EE20 F001          	lfsr	2,1
  3358  0016B8  5001               	movf	RtccWriteDate@pDt,w,c
  3359  0016BA  26D9               	addwf	fsr2l,f,c
  3360  0016BC  5002               	movf	RtccWriteDate@pDt+1,w,c
  3361  0016BE  22DA               	addwfc	fsr2h,f,c
  3362  0016C0  0E32               	movlw	50
  3363  0016C2  60DF               	cpfslt	indf2,c
  3364  0016C4  0012               	return	
  3365  0016C6  EE20 F001          	lfsr	2,1
  3366  0016CA  5001               	movf	RtccWriteDate@pDt,w,c
  3367  0016CC  26D9               	addwf	fsr2l,f,c
  3368  0016CE  5002               	movf	RtccWriteDate@pDt+1,w,c
  3369  0016D0  22DA               	addwfc	fsr2h,f,c
  3370  0016D2  50DF               	movf	indf2,w,c
  3371  0016D4  B4D8               	btfsc	status,2,c
  3372  0016D6  0012               	return	
  3373  0016D8  EE20 F003          	lfsr	2,3
  3374  0016DC  5001               	movf	RtccWriteDate@pDt,w,c
  3375  0016DE  26D9               	addwf	fsr2l,f,c
  3376  0016E0  5002               	movf	RtccWriteDate@pDt+1,w,c
  3377  0016E2  22DA               	addwfc	fsr2h,f,c
  3378  0016E4  0E99               	movlw	153
  3379  0016E6  64DF               	cpfsgt	indf2,c
  3380  0016E8  D001               	goto	l535
  3381  0016EA  0012               	return	
  3382  0016EC                     l535:
  3383  0016EC  EE20 F003          	lfsr	2,3
  3384  0016F0  5001               	movf	RtccWriteDate@pDt,w,c
  3385  0016F2  26D9               	addwf	fsr2l,f,c
  3386  0016F4  5002               	movf	RtccWriteDate@pDt+1,w,c
  3387  0016F6  22DA               	addwfc	fsr2h,f,c
  3388  0016F8  50DF               	movf	indf2,w,c
  3389  0016FA  6E07               	movwf	RtccWriteDate@tempYear,c
  3390  0016FC  EE20 F001          	lfsr	2,1
  3391  001700  5001               	movf	RtccWriteDate@pDt,w,c
  3392  001702  26D9               	addwf	fsr2l,f,c
  3393  001704  5002               	movf	RtccWriteDate@pDt+1,w,c
  3394  001706  22DA               	addwfc	fsr2h,f,c
  3395  001708  50DF               	movf	indf2,w,c
  3396  00170A  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  3397  00170C  EE20 F002          	lfsr	2,2
  3398  001710  5001               	movf	RtccWriteDate@pDt,w,c
  3399  001712  26D9               	addwf	fsr2l,f,c
  3400  001714  5002               	movf	RtccWriteDate@pDt+1,w,c
  3401  001716  22DA               	addwfc	fsr2h,f,c
  3402  001718  50DF               	movf	indf2,w,c
  3403  00171A  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  3404  00171C  5003               	movf	RtccWriteDate@di,w,c
  3405  00171E  A4D8               	btfss	status,2,c
  3406  001720  9CF2               	bcf	intcon,6,c	;volatile
  3407  001722  010F               	movlb	15	; () banked
  3408  001724  0E00               	movlw	0
  3409  001726  BB3F               	btfsc	63,5,b	;volatile
  3410  001728  0E01               	movlw	1
  3411  00172A  6E09               	movwf	RtccWriteDate@wasWrEn,c
  3412  00172C  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3413  00172E  B4D8               	btfsc	status,2,c
  3414                           
  3415                           ; BSR set to: 15
  3416  001730  EC35  F012         	call	_RtccWrOn	;wreg free
  3417  001734  010F               	movlb	15	; () banked
  3418  001736  0E00               	movlw	0
  3419  001738  BF3F               	btfsc	63,7,b	;volatile
  3420  00173A  0E01               	movlw	1
  3421  00173C  6E05               	movwf	RtccWriteDate@wasOn,c
  3422  00173E  5005               	movf	RtccWriteDate@wasOn,w,c
  3423  001740  B4D8               	btfsc	status,2,c
  3424  001742  D006               	goto	l541
  3425                           
  3426                           ; BSR set to: 15
  3427  001744  0E00               	movlw	0
  3428  001746  BE91               	btfsc	3985,7,c	;volatile
  3429  001748  0E01               	movlw	1
  3430  00174A  6E06               	movwf	RtccWriteDate@wasAlrm,c
  3431                           
  3432                           ; BSR set to: 15
  3433  00174C  010F               	movlb	15	; () banked
  3434  00174E  9F3F               	bcf	63,7,b	;volatile
  3435  001750                     l541:
  3436                           
  3437                           ; BSR set to: 15
  3438                           
  3439                           ; BSR set to: 15
  3440  001750  0EFC               	movlw	252
  3441  001752  010F               	movlb	15	; () banked
  3442  001754  173F               	andwf	63,f,b	;volatile
  3443  001756  010F               	movlb	15	; () banked
  3444  001758  813F               	bsf	63,0,b	;volatile
  3445                           
  3446                           ; BSR set to: 15
  3447  00175A  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3448                           
  3449                           ; BSR set to: 15
  3450  00175E  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3451                           
  3452                           ; BSR set to: 15
  3453  001762  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3454  001766  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3455  00176A  50DF               	movf	indf2,w,c
  3456  00176C  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  3457                           
  3458                           ; BSR set to: 15
  3459  00176E  0EFC               	movlw	252
  3460  001770  010F               	movlb	15	; () banked
  3461  001772  173F               	andwf	63,f,b	;volatile
  3462                           
  3463                           ; BSR set to: 15
  3464  001774  0E03               	movlw	3
  3465  001776  010F               	movlb	15	; () banked
  3466  001778  133F               	iorwf	63,f,b	;volatile
  3467                           
  3468                           ; BSR set to: 15
  3469  00177A  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3470                           
  3471                           ; BSR set to: 15
  3472  00177E  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3473                           
  3474                           ; BSR set to: 15
  3475  001782  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3476                           
  3477                           ; BSR set to: 15
  3478  001786  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3479                           
  3480                           ; BSR set to: 15
  3481  00178A  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3482                           
  3483                           ; BSR set to: 15
  3484  00178E  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3485                           
  3486                           ; BSR set to: 15
  3487  001792  5005               	movf	RtccWriteDate@wasOn,w,c
  3488  001794  B4D8               	btfsc	status,2,c
  3489  001796  D00B               	goto	l542
  3490                           
  3491                           ; BSR set to: 15
  3492  001798  010F               	movlb	15	; () banked
  3493  00179A  8F3F               	bsf	63,7,b	;volatile
  3494                           
  3495                           ; BSR set to: 15
  3496  00179C  5006               	movf	RtccWriteDate@wasAlrm,w,c
  3497  00179E  A4D8               	btfss	status,2,c
  3498                           
  3499                           ; BSR set to: 15
  3500  0017A0  8E91               	bsf	3985,7,c	;volatile
  3501                           
  3502                           ; BSR set to: 15
  3503                           
  3504                           ; BSR set to: 15
  3505  0017A2  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3506  0017A4  B4D8               	btfsc	status,2,c
  3507  0017A6  D008               	goto	l546
  3508                           
  3509                           ; BSR set to: 15
  3510  0017A8  EC35  F012         	call	_RtccWrOn	;wreg free
  3511  0017AC  D005               	goto	l546
  3512  0017AE                     l542:
  3513  0017AE  5009               	movf	RtccWriteDate@wasWrEn,w,c
  3514  0017B0  A4D8               	btfss	status,2,c
  3515  0017B2  D002               	goto	l546
  3516  0017B4  010F               	movlb	15	; () banked
  3517  0017B6  9B3F               	bcf	63,5,b	;volatile
  3518  0017B8                     l546:
  3519                           
  3520                           ; BSR set to: 15
  3521                           
  3522                           ; BSR set to: 15
  3523  0017B8  5003               	movf	RtccWriteDate@di,w,c
  3524  0017BA  B4D8               	btfsc	status,2,c
  3525  0017BC  0012               	return	
  3526  0017BE  9CF2               	bcf	intcon,6,c	;volatile
  3527  0017C0  0012               	return	
  3528  0017C2                     __end_of_RtccWriteDate:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           prodh	equ	0xFF4
  3535                           prodl	equ	0xFF3
  3536                           intcon	equ	0xFF2
  3537                           postinc0	equ	0xFEE
  3538                           wreg	equ	0xFE8
  3539                           postinc1	equ	0xFE6
  3540                           postdec1	equ	0xFE5
  3541                           fsr1h	equ	0xFE2
  3542                           fsr1l	equ	0xFE1
  3543                           indf2	equ	0xFDF
  3544                           postinc2	equ	0xFDE
  3545                           postdec2	equ	0xFDD
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function _RtccWrOn *****************
  3551 ;; Defined at:
  3552 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  data            2    0        unsigned int 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_Write_RTC
  3576 ;;		_RtccWriteDate
  3577 ;;		_RtccWriteTime
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text19
  3582  00246A                     __ptext19:
  3583                           	opt stack 0
  3584  00246A                     _RtccWrOn:
  3585                           	opt stack 25
  3586                           
  3587                           ;incstack = 0
  3588  00246A  9CF2               	bcf	intcon,6,c	;volatile
  3589  00246C  0E55               	movlw	85
  3590  00246E  6EA7               	movwf	4007,c	;volatile
  3591  002470  0EAA               	movlw	170
  3592  002472  6EA7               	movwf	4007,c	;volatile
  3593  002474  010F               	movlb	15	; () banked
  3594  002476  8B3F               	bsf	63,5,b	;volatile
  3595                           
  3596                           ; BSR set to: 15
  3597  002478  8CF2               	bsf	intcon,6,c	;volatile
  3598                           
  3599                           ; BSR set to: 15
  3600  00247A  0012               	return		;funcret
  3601  00247C                     __end_of_RtccWrOn:
  3602                           	opt stack 0
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postinc1	equ	0xFE6
  3613                           postdec1	equ	0xFE5
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           postinc2	equ	0xFDE
  3618                           postdec2	equ	0xFDD
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function _seleccionar_opcion *****************
  3624 ;; Defined at:
  3625 ;;		line 292 in file "main.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3643 ;;Total ram usage:        0 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    8
  3646 ;; This function calls:
  3647 ;;		_activar_alarma
  3648 ;;		_ir_a_pantalla_editar_contrasenia
  3649 ;; This function is called by:
  3650 ;;		_ir_a_pantalla_edicion
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text20
  3655  00238E                     __ptext20:
  3656                           	opt stack 0
  3657  00238E                     _seleccionar_opcion:
  3658                           	opt stack 18
  3659                           
  3660                           ;main.c: 293: LATAbits.LATA0 = 1;
  3661                           
  3662                           ; BSR set to: 15
  3663                           ;incstack = 0
  3664  00238E  8089               	bsf	3977,0,c	;volatile
  3665                           
  3666                           ;main.c: 294: LATAbits.LATA1 = 0;
  3667  002390  9289               	bcf	3977,1,c	;volatile
  3668                           
  3669                           ;main.c: 295: LATAbits.LATA2 = 0;
  3670  002392  9489               	bcf	3977,2,c	;volatile
  3671                           
  3672                           ;main.c: 296: LATAbits.LATA3 = 0;
  3673  002394  9689               	bcf	3977,3,c	;volatile
  3674                           
  3675                           ;main.c: 297: if (PORTCbits.RC2 == 1 && LATAbits.LATA0 == 1) {
  3676  002396  A482               	btfss	3970,2,c	;volatile
  3677  002398  0012               	return	
  3678  00239A  A089               	btfss	3977,0,c	;volatile
  3679  00239C  0012               	return	
  3680                           
  3681                           ;main.c: 298: if (boton_seleccionar == 0) {
  3682  00239E  5031               	movf	_boton_seleccionar,w,c
  3683  0023A0  1032               	iorwf	_boton_seleccionar+1,w,c
  3684  0023A2  B4D8               	btfsc	status,2,c
  3685                           
  3686                           ;main.c: 299: activar_alarma();
  3687  0023A4  EC4A  F011         	call	_activar_alarma	;wreg free
  3688                           
  3689                           ;main.c: 300: }
  3690                           ;main.c: 301: if (boton_seleccionar == 1) {
  3691  0023A8  0431               	decf	_boton_seleccionar,w,c
  3692  0023AA  1032               	iorwf	_boton_seleccionar+1,w,c
  3693  0023AC  A4D8               	btfss	status,2,c
  3694  0023AE  0012               	return	
  3695                           
  3696                           ;main.c: 302: ir_a_pantalla_editar_contrasenia();
  3697  0023B0  EC80  F00D         	call	_ir_a_pantalla_editar_contrasenia	;wreg free
  3698  0023B4  0012               	return	
  3699  0023B6                     __end_of_seleccionar_opcion:
  3700                           	opt stack 0
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           intcon	equ	0xFF2
  3708                           postinc0	equ	0xFEE
  3709                           wreg	equ	0xFE8
  3710                           postinc1	equ	0xFE6
  3711                           postdec1	equ	0xFE5
  3712                           fsr1h	equ	0xFE2
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           postinc2	equ	0xFDE
  3716                           postdec2	equ	0xFDD
  3717                           fsr2h	equ	0xFDA
  3718                           fsr2l	equ	0xFD9
  3719                           status	equ	0xFD8
  3720                           
  3721 ;; *************** function _ir_a_pantalla_editar_contrasenia *****************
  3722 ;; Defined at:
  3723 ;;		line 407 in file "main.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  i               2   43[COMRAM] int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    7
  3744 ;; This function calls:
  3745 ;;		_ingreso_numero
  3746 ;;		_lcd_gotoxy
  3747 ;;		_lcd_putrs
  3748 ;; This function is called by:
  3749 ;;		_seleccionar_opcion
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text21
  3754  001B00                     __ptext21:
  3755                           	opt stack 0
  3756  001B00                     _ir_a_pantalla_editar_contrasenia:
  3757                           	opt stack 18
  3758                           
  3759                           ;main.c: 408: numeros_ingresados = 0;
  3760                           
  3761                           ;incstack = 0
  3762  001B00  0E00               	movlw	0
  3763  001B02  6E34               	movwf	_numeros_ingresados+1,c
  3764  001B04  0E00               	movlw	0
  3765  001B06  6E33               	movwf	_numeros_ingresados,c
  3766                           
  3767                           ;main.c: 409: lcd_gotoxy(1, 1);
  3768  001B08  0E01               	movlw	1
  3769  001B0A  6E05               	movwf	lcd_gotoxy@y,c
  3770  001B0C  0E01               	movlw	1
  3771  001B0E  ECFF  F011         	call	_lcd_gotoxy
  3772                           
  3773                           ;main.c: 410: lcd_putrs("Insert new Password ");
  3774  001B12  0E0F               	movlw	low STR_23
  3775  001B14  6E09               	movwf	lcd_putrs@ptr,c
  3776  001B16  0E0F               	movlw	high STR_23
  3777  001B18  6E0A               	movwf	lcd_putrs@ptr+1,c
  3778  001B1A  ECB1  F010         	call	_lcd_putrs	;wreg free
  3779                           
  3780                           ;main.c: 411: lcd_gotoxy(1, 2);
  3781  001B1E  0E02               	movlw	2
  3782  001B20  6E05               	movwf	lcd_gotoxy@y,c
  3783  001B22  0E01               	movlw	1
  3784  001B24  ECFF  F011         	call	_lcd_gotoxy
  3785                           
  3786                           ;main.c: 412: lcd_putrs("                ");
  3787  001B28  0E24               	movlw	low STR_18
  3788  001B2A  6E09               	movwf	lcd_putrs@ptr,c
  3789  001B2C  0E0F               	movlw	high STR_18
  3790  001B2E  6E0A               	movwf	lcd_putrs@ptr+1,c
  3791  001B30  ECB1  F010         	call	_lcd_putrs	;wreg free
  3792  001B34                     
  3793                           ;main.c: 414: if (numeros_ingresados < 4) {
  3794  001B34  BE34               	btfsc	_numeros_ingresados+1,7,c
  3795  001B36  D006               	goto	u3040
  3796  001B38  5034               	movf	_numeros_ingresados+1,w,c
  3797  001B3A  E107               	bnz	l3108
  3798  001B3C  0E04               	movlw	4
  3799  001B3E  5C33               	subwf	_numeros_ingresados,w,c
  3800  001B40  B0D8               	btfsc	status,0,c
  3801  001B42  D003               	goto	l333
  3802  001B44                     u3040:
  3803                           
  3804                           ;main.c: 415: ingreso_numero();
  3805  001B44  EC78  F009         	call	_ingreso_numero	;wreg free
  3806                           
  3807                           ;main.c: 416: } else {
  3808  001B48  D7F5               	goto	l332
  3809  001B4A                     l333:
  3810  001B4A                     l3108:
  3811                           
  3812                           ;main.c: 417: for (int i = 0; i < 4; i++) {
  3813  001B4A  0E00               	movlw	0
  3814  001B4C  6E2D               	movwf	ir_a_pantalla_editar_contrasenia@i+1,c
  3815  001B4E  0E00               	movlw	0
  3816  001B50  6E2C               	movwf	ir_a_pantalla_editar_contrasenia@i,c
  3817  001B52                     l3110:
  3818  001B52  BE2D               	btfsc	ir_a_pantalla_editar_contrasenia@i+1,7,c
  3819  001B54  D006               	goto	l335
  3820  001B56  502D               	movf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3821  001B58  E11D               	bnz	l339
  3822  001B5A  0E04               	movlw	4
  3823  001B5C  5C2C               	subwf	ir_a_pantalla_editar_contrasenia@i,w,c
  3824  001B5E  B0D8               	btfsc	status,0,c
  3825  001B60  0012               	return	
  3826  001B62                     l335:
  3827                           
  3828                           ;main.c: 418: array_contrasenia[i] = array_contrasenia_ingresada[i];
  3829  001B62  90D8               	bcf	status,0,c
  3830  001B64  342C               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3831  001B66  6ED9               	movwf	fsr2l,c
  3832  001B68  342D               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3833  001B6A  6EDA               	movwf	fsr2h,c
  3834  001B6C  0E60               	movlw	low _array_contrasenia_ingresada
  3835  001B6E  26D9               	addwf	fsr2l,f,c
  3836  001B70  0E00               	movlw	high _array_contrasenia_ingresada
  3837  001B72  22DA               	addwfc	fsr2h,f,c
  3838  001B74  90D8               	bcf	status,0,c
  3839  001B76  342C               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3840  001B78  6EE1               	movwf	fsr1l,c
  3841  001B7A  342D               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3842  001B7C  6EE2               	movwf	fsr1h,c
  3843  001B7E  0EA6               	movlw	low _array_contrasenia
  3844  001B80  26E1               	addwf	fsr1l,f,c
  3845  001B82  0E00               	movlw	high _array_contrasenia
  3846  001B84  22E2               	addwfc	fsr1h,f,c
  3847  001B86  CFDE FFE6          	movff	postinc2,postinc1
  3848  001B8A  CFDD FFE5          	movff	postdec2,postdec1
  3849  001B8E  4A2C               	infsnz	ir_a_pantalla_editar_contrasenia@i,f,c
  3850  001B90  2A2D               	incf	ir_a_pantalla_editar_contrasenia@i+1,f,c
  3851  001B92  D7DF               	goto	l3110
  3852  001B94                     l339:
  3853  001B94  0012               	return		;funcret
  3854  001B96                     __end_of_ir_a_pantalla_editar_contrasenia:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           postinc1	equ	0xFE6
  3866                           postdec1	equ	0xFE5
  3867                           fsr1h	equ	0xFE2
  3868                           fsr1l	equ	0xFE1
  3869                           indf2	equ	0xFDF
  3870                           postinc2	equ	0xFDE
  3871                           postdec2	equ	0xFDD
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function _ingreso_numero *****************
  3877 ;; Defined at:
  3878 ;;		line 120 in file "main.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;		None
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;		None
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3896 ;;Total ram usage:        2 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    6
  3899 ;; This function calls:
  3900 ;;		_guarda_numero_ingresado
  3901 ;; This function is called by:
  3902 ;;		_ir_a_pantalla_ingresar_contrasenia
  3903 ;;		_ir_a_pantalla_editar_contrasenia
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text22
  3908  0012F0                     __ptext22:
  3909                           	opt stack 0
  3910  0012F0                     _ingreso_numero:
  3911                           	opt stack 18
  3912                           
  3913                           ;main.c: 121: LATAbits.LATA0 = 1;
  3914                           
  3915                           ;incstack = 0
  3916  0012F0  8089               	bsf	3977,0,c	;volatile
  3917                           
  3918                           ;main.c: 122: LATAbits.LATA1 = 0;
  3919  0012F2  9289               	bcf	3977,1,c	;volatile
  3920                           
  3921                           ;main.c: 123: LATAbits.LATA2 = 0;
  3922  0012F4  9489               	bcf	3977,2,c	;volatile
  3923                           
  3924                           ;main.c: 124: LATAbits.LATA3 = 0;
  3925  0012F6  9689               	bcf	3977,3,c	;volatile
  3926                           
  3927                           ;main.c: 125: {
  3928                           ;main.c: 126: if (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  3929  0012F8  BA80               	btfsc	3968,5,c	;volatile
  3930  0012FA  A089               	btfss	3977,0,c	;volatile
  3931  0012FC  D018               	goto	u2580
  3932                           
  3933                           ;main.c: 127: key = 1;
  3934  0012FE  0E01               	movlw	1
  3935  001300  6E43               	movwf	_key,c
  3936                           
  3937                           ;main.c: 128: guarda_numero_ingresado(key);
  3938  001302  5043               	movf	_key,w,c
  3939  001304  6E2A               	movwf	??_ingreso_numero& (0+255),c
  3940  001306  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  3941  001308  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  3942  00130C  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  3943  001310  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  3944                           
  3945                           ;main.c: 129: while (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  3946  001314  D008               	goto	l178
  3947  001316                     
  3948                           ;main.c: 130: _delay((unsigned long)((40)*(8000000/4000.0)));
  3949  001316  0E68               	movlw	104
  3950  001318  6E2A               	movwf	??_ingreso_numero& (0+255),c
  3951  00131A  0EE4               	movlw	228
  3952  00131C                     u3667:
  3953  00131C  2EE8               	decfsz	wreg,f,c
  3954  00131E  D7FE               	bra	u3667
  3955  001320  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  3956  001322  D7FC               	bra	u3667
  3957  001324  D000               	nop2	
  3958  001326                     l178:
  3959  001326  AA80               	btfss	3968,5,c	;volatile
  3960  001328  D002               	goto	u2580
  3961  00132A  B089               	btfsc	3977,0,c	;volatile
  3962  00132C  D7F4               	goto	l179
  3963  00132E                     u2580:
  3964                           
  3965                           ;main.c: 131: }
  3966                           ;main.c: 132: }
  3967                           ;main.c: 133: if (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  3968  00132E  BE80               	btfsc	3968,7,c	;volatile
  3969  001330  A089               	btfss	3977,0,c	;volatile
  3970  001332  D018               	goto	u2620
  3971                           
  3972                           ;main.c: 134: key = 2;
  3973  001334  0E02               	movlw	2
  3974  001336  6E43               	movwf	_key,c
  3975                           
  3976                           ;main.c: 135: guarda_numero_ingresado(key);
  3977  001338  5043               	movf	_key,w,c
  3978  00133A  6E2A               	movwf	??_ingreso_numero& (0+255),c
  3979  00133C  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  3980  00133E  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  3981  001342  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  3982  001346  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  3983                           
  3984                           ;main.c: 136: while (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  3985  00134A  D008               	goto	l184
  3986  00134C                     
  3987                           ;main.c: 137: _delay((unsigned long)((40)*(8000000/4000.0)));
  3988  00134C  0E68               	movlw	104
  3989  00134E  6E2A               	movwf	??_ingreso_numero& (0+255),c
  3990  001350  0EE4               	movlw	228
  3991  001352                     u3677:
  3992  001352  2EE8               	decfsz	wreg,f,c
  3993  001354  D7FE               	bra	u3677
  3994  001356  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  3995  001358  D7FC               	bra	u3677
  3996  00135A  D000               	nop2	
  3997  00135C                     l184:
  3998  00135C  AE80               	btfss	3968,7,c	;volatile
  3999  00135E  D002               	goto	u2620
  4000  001360  B089               	btfsc	3977,0,c	;volatile
  4001  001362  D7F4               	goto	l185
  4002  001364                     u2620:
  4003                           
  4004                           ;main.c: 138: }
  4005                           ;main.c: 139: }
  4006                           ;main.c: 140: if (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  4007  001364  BC80               	btfsc	3968,6,c	;volatile
  4008  001366  A089               	btfss	3977,0,c	;volatile
  4009  001368  D018               	goto	u2660
  4010                           
  4011                           ;main.c: 141: key = 3;
  4012  00136A  0E03               	movlw	3
  4013  00136C  6E43               	movwf	_key,c
  4014                           
  4015                           ;main.c: 142: guarda_numero_ingresado(key);
  4016  00136E  5043               	movf	_key,w,c
  4017  001370  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4018  001372  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4019  001374  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4020  001378  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4021  00137C  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4022                           
  4023                           ;main.c: 143: while (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  4024  001380  D008               	goto	l190
  4025  001382                     
  4026                           ;main.c: 144: _delay((unsigned long)((40)*(8000000/4000.0)));
  4027  001382  0E68               	movlw	104
  4028  001384  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4029  001386  0EE4               	movlw	228
  4030  001388                     u3687:
  4031  001388  2EE8               	decfsz	wreg,f,c
  4032  00138A  D7FE               	bra	u3687
  4033  00138C  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4034  00138E  D7FC               	bra	u3687
  4035  001390  D000               	nop2	
  4036  001392                     l190:
  4037  001392  AC80               	btfss	3968,6,c	;volatile
  4038  001394  D002               	goto	u2660
  4039  001396  B089               	btfsc	3977,0,c	;volatile
  4040  001398  D7F4               	goto	l191
  4041  00139A                     u2660:
  4042                           
  4043                           ;main.c: 145: }
  4044                           ;main.c: 146: }
  4045                           ;main.c: 147: }
  4046                           ;main.c: 148: LATAbits.LATA0 = 0;
  4047  00139A  9089               	bcf	3977,0,c	;volatile
  4048                           
  4049                           ;main.c: 149: LATAbits.LATA1 = 1;
  4050  00139C  8289               	bsf	3977,1,c	;volatile
  4051                           
  4052                           ;main.c: 150: LATAbits.LATA2 = 0;
  4053  00139E  9489               	bcf	3977,2,c	;volatile
  4054                           
  4055                           ;main.c: 151: LATAbits.LATA3 = 0;
  4056  0013A0  9689               	bcf	3977,3,c	;volatile
  4057                           
  4058                           ;main.c: 152: {
  4059                           ;main.c: 153: if (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  4060  0013A2  BA80               	btfsc	3968,5,c	;volatile
  4061  0013A4  A289               	btfss	3977,1,c	;volatile
  4062  0013A6  D018               	goto	u2700
  4063                           
  4064                           ;main.c: 154: key = 4;
  4065  0013A8  0E04               	movlw	4
  4066  0013AA  6E43               	movwf	_key,c
  4067                           
  4068                           ;main.c: 155: guarda_numero_ingresado(key);
  4069  0013AC  5043               	movf	_key,w,c
  4070  0013AE  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4071  0013B0  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4072  0013B2  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4073  0013B6  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4074  0013BA  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4075                           
  4076                           ;main.c: 156: while (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  4077  0013BE  D008               	goto	l196
  4078  0013C0                     
  4079                           ;main.c: 157: _delay((unsigned long)((40)*(8000000/4000.0)));
  4080  0013C0  0E68               	movlw	104
  4081  0013C2  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4082  0013C4  0EE4               	movlw	228
  4083  0013C6                     u3697:
  4084  0013C6  2EE8               	decfsz	wreg,f,c
  4085  0013C8  D7FE               	bra	u3697
  4086  0013CA  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4087  0013CC  D7FC               	bra	u3697
  4088  0013CE  D000               	nop2	
  4089  0013D0                     l196:
  4090  0013D0  AA80               	btfss	3968,5,c	;volatile
  4091  0013D2  D002               	goto	u2700
  4092  0013D4  B289               	btfsc	3977,1,c	;volatile
  4093  0013D6  D7F4               	goto	l197
  4094  0013D8                     u2700:
  4095                           
  4096                           ;main.c: 158: }
  4097                           ;main.c: 159: }
  4098                           ;main.c: 160: if (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  4099  0013D8  BE80               	btfsc	3968,7,c	;volatile
  4100  0013DA  A289               	btfss	3977,1,c	;volatile
  4101  0013DC  D018               	goto	u2740
  4102                           
  4103                           ;main.c: 161: key = 5;
  4104  0013DE  0E05               	movlw	5
  4105  0013E0  6E43               	movwf	_key,c
  4106                           
  4107                           ;main.c: 162: guarda_numero_ingresado(key);
  4108  0013E2  5043               	movf	_key,w,c
  4109  0013E4  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4110  0013E6  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4111  0013E8  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4112  0013EC  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4113  0013F0  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4114                           
  4115                           ;main.c: 163: while (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  4116  0013F4  D008               	goto	l202
  4117  0013F6                     
  4118                           ;main.c: 164: _delay((unsigned long)((40)*(8000000/4000.0)));
  4119  0013F6  0E68               	movlw	104
  4120  0013F8  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4121  0013FA  0EE4               	movlw	228
  4122  0013FC                     u3707:
  4123  0013FC  2EE8               	decfsz	wreg,f,c
  4124  0013FE  D7FE               	bra	u3707
  4125  001400  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4126  001402  D7FC               	bra	u3707
  4127  001404  D000               	nop2	
  4128  001406                     l202:
  4129  001406  AE80               	btfss	3968,7,c	;volatile
  4130  001408  D002               	goto	u2740
  4131  00140A  B289               	btfsc	3977,1,c	;volatile
  4132  00140C  D7F4               	goto	l203
  4133  00140E                     u2740:
  4134                           
  4135                           ;main.c: 165: }
  4136                           ;main.c: 166: }
  4137                           ;main.c: 167: if (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  4138  00140E  BC80               	btfsc	3968,6,c	;volatile
  4139  001410  A289               	btfss	3977,1,c	;volatile
  4140  001412  D018               	goto	u2780
  4141                           
  4142                           ;main.c: 168: key = 6;
  4143  001414  0E06               	movlw	6
  4144  001416  6E43               	movwf	_key,c
  4145                           
  4146                           ;main.c: 169: guarda_numero_ingresado(key);
  4147  001418  5043               	movf	_key,w,c
  4148  00141A  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4149  00141C  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4150  00141E  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4151  001422  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4152  001426  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4153                           
  4154                           ;main.c: 170: while (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  4155  00142A  D008               	goto	l208
  4156  00142C                     
  4157                           ;main.c: 171: _delay((unsigned long)((40)*(8000000/4000.0)));
  4158  00142C  0E68               	movlw	104
  4159  00142E  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4160  001430  0EE4               	movlw	228
  4161  001432                     u3717:
  4162  001432  2EE8               	decfsz	wreg,f,c
  4163  001434  D7FE               	bra	u3717
  4164  001436  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4165  001438  D7FC               	bra	u3717
  4166  00143A  D000               	nop2	
  4167  00143C                     l208:
  4168  00143C  AC80               	btfss	3968,6,c	;volatile
  4169  00143E  D002               	goto	u2780
  4170  001440  B289               	btfsc	3977,1,c	;volatile
  4171  001442  D7F4               	goto	l209
  4172  001444                     u2780:
  4173                           
  4174                           ;main.c: 172: }
  4175                           ;main.c: 173: }
  4176                           ;main.c: 174: }
  4177                           ;main.c: 175: LATAbits.LATA0 = 0;
  4178  001444  9089               	bcf	3977,0,c	;volatile
  4179                           
  4180                           ;main.c: 176: LATAbits.LATA1 = 0;
  4181  001446  9289               	bcf	3977,1,c	;volatile
  4182                           
  4183                           ;main.c: 177: LATAbits.LATA2 = 1;
  4184  001448  8489               	bsf	3977,2,c	;volatile
  4185                           
  4186                           ;main.c: 178: LATAbits.LATA3 = 0;
  4187  00144A  9689               	bcf	3977,3,c	;volatile
  4188                           
  4189                           ;main.c: 179: {
  4190                           ;main.c: 180: if (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  4191  00144C  BA80               	btfsc	3968,5,c	;volatile
  4192  00144E  A489               	btfss	3977,2,c	;volatile
  4193  001450  D018               	goto	u2820
  4194                           
  4195                           ;main.c: 181: key = 7;
  4196  001452  0E07               	movlw	7
  4197  001454  6E43               	movwf	_key,c
  4198                           
  4199                           ;main.c: 182: guarda_numero_ingresado(key);
  4200  001456  5043               	movf	_key,w,c
  4201  001458  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4202  00145A  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4203  00145C  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4204  001460  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4205  001464  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4206                           
  4207                           ;main.c: 183: while (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  4208  001468  D008               	goto	l214
  4209  00146A                     
  4210                           ;main.c: 184: _delay((unsigned long)((40)*(8000000/4000.0)));
  4211  00146A  0E68               	movlw	104
  4212  00146C  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4213  00146E  0EE4               	movlw	228
  4214  001470                     u3727:
  4215  001470  2EE8               	decfsz	wreg,f,c
  4216  001472  D7FE               	bra	u3727
  4217  001474  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4218  001476  D7FC               	bra	u3727
  4219  001478  D000               	nop2	
  4220  00147A                     l214:
  4221  00147A  AA80               	btfss	3968,5,c	;volatile
  4222  00147C  D002               	goto	u2820
  4223  00147E  B489               	btfsc	3977,2,c	;volatile
  4224  001480  D7F4               	goto	l215
  4225  001482                     u2820:
  4226                           
  4227                           ;main.c: 185: }
  4228                           ;main.c: 186: }
  4229                           ;main.c: 187: if (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  4230  001482  BE80               	btfsc	3968,7,c	;volatile
  4231  001484  A489               	btfss	3977,2,c	;volatile
  4232  001486  D018               	goto	u2860
  4233                           
  4234                           ;main.c: 188: key = 8;
  4235  001488  0E08               	movlw	8
  4236  00148A  6E43               	movwf	_key,c
  4237                           
  4238                           ;main.c: 189: guarda_numero_ingresado(key);
  4239  00148C  5043               	movf	_key,w,c
  4240  00148E  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4241  001490  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4242  001492  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4243  001496  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4244  00149A  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4245                           
  4246                           ;main.c: 190: while (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  4247  00149E  D008               	goto	l220
  4248  0014A0                     
  4249                           ;main.c: 191: _delay((unsigned long)((40)*(8000000/4000.0)));
  4250  0014A0  0E68               	movlw	104
  4251  0014A2  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4252  0014A4  0EE4               	movlw	228
  4253  0014A6                     u3737:
  4254  0014A6  2EE8               	decfsz	wreg,f,c
  4255  0014A8  D7FE               	bra	u3737
  4256  0014AA  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4257  0014AC  D7FC               	bra	u3737
  4258  0014AE  D000               	nop2	
  4259  0014B0                     l220:
  4260  0014B0  AE80               	btfss	3968,7,c	;volatile
  4261  0014B2  D002               	goto	u2860
  4262  0014B4  B489               	btfsc	3977,2,c	;volatile
  4263  0014B6  D7F4               	goto	l221
  4264  0014B8                     u2860:
  4265                           
  4266                           ;main.c: 192: }
  4267                           ;main.c: 193: }
  4268                           ;main.c: 194: if (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  4269  0014B8  BC80               	btfsc	3968,6,c	;volatile
  4270  0014BA  A489               	btfss	3977,2,c	;volatile
  4271  0014BC  D018               	goto	u2900
  4272                           
  4273                           ;main.c: 195: key = 9;
  4274  0014BE  0E09               	movlw	9
  4275  0014C0  6E43               	movwf	_key,c
  4276                           
  4277                           ;main.c: 196: guarda_numero_ingresado(key);
  4278  0014C2  5043               	movf	_key,w,c
  4279  0014C4  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4280  0014C6  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4281  0014C8  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4282  0014CC  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4283  0014D0  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4284                           
  4285                           ;main.c: 197: while (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  4286  0014D4  D008               	goto	l226
  4287  0014D6                     
  4288                           ;main.c: 198: _delay((unsigned long)((40)*(8000000/4000.0)));
  4289  0014D6  0E68               	movlw	104
  4290  0014D8  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4291  0014DA  0EE4               	movlw	228
  4292  0014DC                     u3747:
  4293  0014DC  2EE8               	decfsz	wreg,f,c
  4294  0014DE  D7FE               	bra	u3747
  4295  0014E0  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4296  0014E2  D7FC               	bra	u3747
  4297  0014E4  D000               	nop2	
  4298  0014E6                     l226:
  4299  0014E6  AC80               	btfss	3968,6,c	;volatile
  4300  0014E8  D002               	goto	u2900
  4301  0014EA  B489               	btfsc	3977,2,c	;volatile
  4302  0014EC  D7F4               	goto	l227
  4303  0014EE                     u2900:
  4304                           
  4305                           ;main.c: 199: }
  4306                           ;main.c: 200: }
  4307                           ;main.c: 201: }
  4308                           ;main.c: 202: LATAbits.LATA0 = 0;
  4309  0014EE  9089               	bcf	3977,0,c	;volatile
  4310                           
  4311                           ;main.c: 203: LATAbits.LATA1 = 0;
  4312  0014F0  9289               	bcf	3977,1,c	;volatile
  4313                           
  4314                           ;main.c: 204: LATAbits.LATA2 = 0;
  4315  0014F2  9489               	bcf	3977,2,c	;volatile
  4316                           
  4317                           ;main.c: 205: LATAbits.LATA3 = 1;
  4318  0014F4  8689               	bsf	3977,3,c	;volatile
  4319                           
  4320                           ;main.c: 207: if (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  4321  0014F6  AE80               	btfss	3968,7,c	;volatile
  4322  0014F8  0012               	return	
  4323  0014FA  A689               	btfss	3977,3,c	;volatile
  4324  0014FC  0012               	return	
  4325                           
  4326                           ;main.c: 208: key = 0;
  4327  0014FE  0E00               	movlw	0
  4328  001500  6E43               	movwf	_key,c
  4329                           
  4330                           ;main.c: 209: guarda_numero_ingresado(key);
  4331  001502  5043               	movf	_key,w,c
  4332  001504  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4333  001506  6A2B               	clrf	(??_ingreso_numero+1)& (0+255),c
  4334  001508  C02A  F028         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  4335  00150C  C02B  F029         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  4336  001510  EC5F  F010         	call	_guarda_numero_ingresado	;wreg free
  4337                           
  4338                           ;main.c: 210: while (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  4339  001514  D008               	goto	l232
  4340  001516                     
  4341                           ;main.c: 211: _delay((unsigned long)((40)*(8000000/4000.0)));
  4342  001516  0E68               	movlw	104
  4343  001518  6E2A               	movwf	??_ingreso_numero& (0+255),c
  4344  00151A  0EE4               	movlw	228
  4345  00151C                     u3757:
  4346  00151C  2EE8               	decfsz	wreg,f,c
  4347  00151E  D7FE               	bra	u3757
  4348  001520  2E2A               	decfsz	??_ingreso_numero& (0+255),f,c
  4349  001522  D7FC               	bra	u3757
  4350  001524  D000               	nop2	
  4351  001526                     l232:
  4352  001526  AE80               	btfss	3968,7,c	;volatile
  4353  001528  0012               	return	
  4354  00152A  A689               	btfss	3977,3,c	;volatile
  4355  00152C  0012               	return	
  4356  00152E  D7F3               	goto	l233
  4357  001530                     __end_of_ingreso_numero:
  4358                           	opt stack 0
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           intcon	equ	0xFF2
  4366                           postinc0	equ	0xFEE
  4367                           wreg	equ	0xFE8
  4368                           postinc1	equ	0xFE6
  4369                           postdec1	equ	0xFE5
  4370                           fsr1h	equ	0xFE2
  4371                           fsr1l	equ	0xFE1
  4372                           indf2	equ	0xFDF
  4373                           postinc2	equ	0xFDE
  4374                           postdec2	equ	0xFDD
  4375                           fsr2h	equ	0xFDA
  4376                           fsr2l	equ	0xFD9
  4377                           status	equ	0xFD8
  4378                           
  4379 ;; *************** function _guarda_numero_ingresado *****************
  4380 ;; Defined at:
  4381 ;;		line 112 in file "main.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  num             2   39[COMRAM] PTR int 
  4384 ;;		 -> RAM(3775), 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4391 ;; Tracked objects:
  4392 ;;		On entry : 0/0
  4393 ;;		On exit  : 0/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4400 ;;Total ram usage:        2 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    5
  4403 ;; This function calls:
  4404 ;;		_lcd_gotoxy
  4405 ;;		_lcd_putrs
  4406 ;;		_sprintf
  4407 ;; This function is called by:
  4408 ;;		_ingreso_numero
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text23
  4413  0020BE                     __ptext23:
  4414                           	opt stack 0
  4415  0020BE                     _guarda_numero_ingresado:
  4416                           	opt stack 18
  4417                           
  4418                           ;main.c: 113: array_contrasenia_ingresada[numeros_ingresados] = num;
  4419                           
  4420                           ;incstack = 0
  4421  0020BE  90D8               	bcf	status,0,c
  4422  0020C0  3433               	rlcf	_numeros_ingresados,w,c
  4423  0020C2  6ED9               	movwf	fsr2l,c
  4424  0020C4  3434               	rlcf	_numeros_ingresados+1,w,c
  4425  0020C6  6EDA               	movwf	fsr2h,c
  4426  0020C8  0E60               	movlw	low _array_contrasenia_ingresada
  4427  0020CA  26D9               	addwf	fsr2l,f,c
  4428  0020CC  0E00               	movlw	high _array_contrasenia_ingresada
  4429  0020CE  22DA               	addwfc	fsr2h,f,c
  4430  0020D0  C028  FFDE         	movff	guarda_numero_ingresado@num,postinc2
  4431  0020D4  C029  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
  4432                           
  4433                           ;main.c: 114: lcd_gotoxy(numeros_ingresados + 1, 2);
  4434  0020D8  0E02               	movlw	2
  4435  0020DA  6E05               	movwf	lcd_gotoxy@y,c
  4436  0020DC  2833               	incf	_numeros_ingresados,w,c
  4437  0020DE  ECFF  F011         	call	_lcd_gotoxy
  4438                           
  4439                           ;main.c: 115: sprintf(buffer2, "%01u", num);
  4440  0020E2  0E86               	movlw	low _buffer2
  4441  0020E4  6E0D               	movwf	sprintf@sp,c
  4442  0020E6  0E00               	movlw	high _buffer2
  4443  0020E8  6E0E               	movwf	sprintf@sp+1,c
  4444  0020EA  0EC3               	movlw	low STR_13
  4445  0020EC  6E0F               	movwf	sprintf@f,c
  4446  0020EE  0E0F               	movlw	high STR_13
  4447  0020F0  6E10               	movwf	sprintf@f+1,c
  4448  0020F2  C028  F011         	movff	guarda_numero_ingresado@num,?_sprintf+4
  4449  0020F6  C029  F012         	movff	guarda_numero_ingresado@num+1,?_sprintf+5
  4450  0020FA  ECE6  F007         	call	_sprintf	;wreg free
  4451                           
  4452                           ;main.c: 116: lcd_putrs(buffer2);
  4453  0020FE  0E86               	movlw	low _buffer2
  4454  002100  6E09               	movwf	lcd_putrs@ptr,c
  4455  002102  0E00               	movlw	high _buffer2
  4456  002104  6E0A               	movwf	lcd_putrs@ptr+1,c
  4457  002106  ECB1  F010         	call	_lcd_putrs	;wreg free
  4458                           
  4459                           ;main.c: 117: numeros_ingresados++;
  4460  00210A  4A33               	infsnz	_numeros_ingresados,f,c
  4461  00210C  2A34               	incf	_numeros_ingresados+1,f,c
  4462  00210E  0012               	return		;funcret
  4463  002110                     __end_of_guarda_numero_ingresado:
  4464                           	opt stack 0
  4465                           tblptru	equ	0xFF8
  4466                           tblptrh	equ	0xFF7
  4467                           tblptrl	equ	0xFF6
  4468                           tablat	equ	0xFF5
  4469                           prodh	equ	0xFF4
  4470                           prodl	equ	0xFF3
  4471                           intcon	equ	0xFF2
  4472                           postinc0	equ	0xFEE
  4473                           wreg	equ	0xFE8
  4474                           postinc1	equ	0xFE6
  4475                           postdec1	equ	0xFE5
  4476                           fsr1h	equ	0xFE2
  4477                           fsr1l	equ	0xFE1
  4478                           indf2	equ	0xFDF
  4479                           postinc2	equ	0xFDE
  4480                           postdec2	equ	0xFDD
  4481                           fsr2h	equ	0xFDA
  4482                           fsr2l	equ	0xFD9
  4483                           status	equ	0xFD8
  4484                           
  4485 ;; *************** function _activar_alarma *****************
  4486 ;; Defined at:
  4487 ;;		line 268 in file "main.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4504 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4505 ;;Total ram usage:        1 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    5
  4508 ;; This function calls:
  4509 ;;		_lcd_comand
  4510 ;;		_lcd_gotoxy
  4511 ;;		_lcd_putrs
  4512 ;; This function is called by:
  4513 ;;		_seleccionar_opcion
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text24
  4518  002294                     __ptext24:
  4519                           	opt stack 0
  4520  002294                     _activar_alarma:
  4521                           	opt stack 20
  4522                           
  4523                           ;main.c: 269: numeros_ingresados = 0;
  4524                           
  4525                           ;incstack = 0
  4526  002294  0E00               	movlw	0
  4527  002296  6E34               	movwf	_numeros_ingresados+1,c
  4528  002298  0E00               	movlw	0
  4529  00229A  6E33               	movwf	_numeros_ingresados,c
  4530                           
  4531                           ;main.c: 270: lcd_gotoxy(1, 1);
  4532  00229C  0E01               	movlw	1
  4533  00229E  6E05               	movwf	lcd_gotoxy@y,c
  4534  0022A0  0E01               	movlw	1
  4535  0022A2  ECFF  F011         	call	_lcd_gotoxy
  4536                           
  4537                           ;main.c: 271: lcd_putrs("Alarm activated ");
  4538  0022A6  0E35               	movlw	low STR_17
  4539  0022A8  6E09               	movwf	lcd_putrs@ptr,c
  4540  0022AA  0E0F               	movlw	high STR_17
  4541  0022AC  6E0A               	movwf	lcd_putrs@ptr+1,c
  4542  0022AE  ECB1  F010         	call	_lcd_putrs	;wreg free
  4543                           
  4544                           ;main.c: 272: lcd_gotoxy(1, 2);
  4545  0022B2  0E02               	movlw	2
  4546  0022B4  6E05               	movwf	lcd_gotoxy@y,c
  4547  0022B6  0E01               	movlw	1
  4548  0022B8  ECFF  F011         	call	_lcd_gotoxy
  4549                           
  4550                           ;main.c: 273: lcd_putrs("                ");
  4551  0022BC  0E24               	movlw	low STR_18
  4552  0022BE  6E09               	movwf	lcd_putrs@ptr,c
  4553  0022C0  0E0F               	movlw	high STR_18
  4554  0022C2  6E0A               	movwf	lcd_putrs@ptr+1,c
  4555  0022C4  ECB1  F010         	call	_lcd_putrs	;wreg free
  4556                           
  4557                           ;main.c: 278: }
  4558                           ;main.c: 281: if(1!=1){
  4559                           
  4560                           ;main.c: 277: break;
  4561                           
  4562                           ;main.c: 275: while(1) {
  4563  0022C8  0012               	return	
  4564                           
  4565                           ;main.c: 286: _delay((unsigned long)((98)*(8000000/4000.0)));
  4566                           
  4567                           ;main.c: 285: LATBbits.LATB0 = !LATBbits.LATB0;
  4568                           
  4569                           ;main.c: 284: LATBbits.LATB1 = !LATBbits.LATB1;;
  4570                           
  4571                           ;main.c: 283: lcd_comand(0b00000010);
  4572  0022CA  0EFF               	movlw	255
  4573  0022CC  6E0B               	movwf	??_activar_alarma& (0+255),c
  4574  0022CE  0E8A               	movlw	138
  4575  0022D0                     u3767:
  4576  0022D0  2EE8               	decfsz	wreg,f,c
  4577  0022D2  D7FE               	bra	u3767
  4578  0022D4  2E0B               	decfsz	??_activar_alarma& (0+255),f,c
  4579  0022D6  D7FC               	bra	u3767
  4580  0022D8  D000               	nop2	
  4581  0022DA  0012               	return	
  4582  0022DC                     __end_of_activar_alarma:
  4583                           	opt stack 0
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postinc1	equ	0xFE6
  4594                           postdec1	equ	0xFE5
  4595                           fsr1h	equ	0xFE2
  4596                           fsr1l	equ	0xFE1
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _lcd_comand *****************
  4605 ;; Defined at:
  4606 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  d               1    wreg     unsigned char 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  d               1    4[COMRAM] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4624 ;;Total ram usage:        1 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    2
  4627 ;; This function calls:
  4628 ;;		_lcd_send_byte
  4629 ;; This function is called by:
  4630 ;;		_activar_alarma
  4631 ;;		_setup
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text25
  4636  0024AA                     __ptext25:
  4637                           	opt stack 0
  4638  0024AA                     _lcd_comand:
  4639                           	opt stack 27
  4640                           
  4641                           ;incstack = 0
  4642                           ;lcd_comand@d stored from wreg
  4643  0024AA  6E05               	movwf	lcd_comand@d,c
  4644                           
  4645                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  4646  0024AC  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  4647  0024B0  0E00               	movlw	0
  4648  0024B2  ECAE  F011         	call	_lcd_send_byte
  4649  0024B6  0012               	return		;funcret
  4650  0024B8                     __end_of_lcd_comand:
  4651                           	opt stack 0
  4652                           tblptru	equ	0xFF8
  4653                           tblptrh	equ	0xFF7
  4654                           tblptrl	equ	0xFF6
  4655                           tablat	equ	0xFF5
  4656                           prodh	equ	0xFF4
  4657                           prodl	equ	0xFF3
  4658                           intcon	equ	0xFF2
  4659                           postinc0	equ	0xFEE
  4660                           wreg	equ	0xFE8
  4661                           postinc1	equ	0xFE6
  4662                           postdec1	equ	0xFE5
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           indf2	equ	0xFDF
  4666                           postinc2	equ	0xFDE
  4667                           postdec2	equ	0xFDD
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8
  4671                           
  4672 ;; *************** function _cambiar_opcion *****************
  4673 ;; Defined at:
  4674 ;;		line 232 in file "main.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;Total ram usage:        1 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    5
  4695 ;; This function calls:
  4696 ;;		_lcd_gotoxy
  4697 ;;		_lcd_putrs
  4698 ;;		_sprintf
  4699 ;; This function is called by:
  4700 ;;		_ir_a_pantalla_edicion
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703                           
  4704                           	psect	text26
  4705  0019B4                     __ptext26:
  4706                           	opt stack 0
  4707  0019B4                     _cambiar_opcion:
  4708                           	opt stack 21
  4709                           
  4710                           ;main.c: 233: LATAbits.LATA0 = 0;
  4711                           
  4712                           ;incstack = 0
  4713  0019B4  9089               	bcf	3977,0,c	;volatile
  4714                           
  4715                           ;main.c: 234: LATAbits.LATA1 = 0;
  4716  0019B6  9289               	bcf	3977,1,c	;volatile
  4717                           
  4718                           ;main.c: 235: LATAbits.LATA2 = 1;
  4719  0019B8  8489               	bsf	3977,2,c	;volatile
  4720                           
  4721                           ;main.c: 236: LATAbits.LATA3 = 0;
  4722  0019BA  9689               	bcf	3977,3,c	;volatile
  4723                           
  4724                           ;main.c: 237: if (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
  4725  0019BC  B482               	btfsc	3970,2,c	;volatile
  4726  0019BE  A489               	btfss	3977,2,c	;volatile
  4727  0019C0  D019               	goto	u3110
  4728                           
  4729                           ;main.c: 238: if (boton_seleccionar == 3) {
  4730  0019C2  0E03               	movlw	3
  4731  0019C4  1831               	xorwf	_boton_seleccionar,w,c
  4732  0019C6  1032               	iorwf	_boton_seleccionar+1,w,c
  4733  0019C8  A4D8               	btfss	status,2,c
  4734  0019CA  D005               	goto	l249
  4735                           
  4736                           ;main.c: 239: boton_seleccionar = 0;
  4737  0019CC  0E00               	movlw	0
  4738  0019CE  6E32               	movwf	_boton_seleccionar+1,c
  4739  0019D0  0E00               	movlw	0
  4740  0019D2  6E31               	movwf	_boton_seleccionar,c
  4741                           
  4742                           ;main.c: 240: } else {
  4743  0019D4  D00B               	goto	l251
  4744  0019D6                     l249:
  4745                           
  4746                           ;main.c: 241: boton_seleccionar++;
  4747  0019D6  4A31               	infsnz	_boton_seleccionar,f,c
  4748  0019D8  2A32               	incf	_boton_seleccionar+1,f,c
  4749                           
  4750                           ;main.c: 242: }
  4751                           ;main.c: 243: while (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
  4752  0019DA  D008               	goto	l251
  4753  0019DC                     
  4754                           ;main.c: 244: _delay((unsigned long)((40)*(8000000/4000.0)));
  4755  0019DC  0E68               	movlw	104
  4756  0019DE  6E28               	movwf	??_cambiar_opcion& (0+255),c
  4757  0019E0  0EE4               	movlw	228
  4758  0019E2                     u3777:
  4759  0019E2  2EE8               	decfsz	wreg,f,c
  4760  0019E4  D7FE               	bra	u3777
  4761  0019E6  2E28               	decfsz	??_cambiar_opcion& (0+255),f,c
  4762  0019E8  D7FC               	bra	u3777
  4763  0019EA  D000               	nop2	
  4764  0019EC                     l251:
  4765  0019EC  A482               	btfss	3970,2,c	;volatile
  4766  0019EE  D002               	goto	u3110
  4767  0019F0  B489               	btfsc	3977,2,c	;volatile
  4768  0019F2  D7F4               	goto	l252
  4769  0019F4                     u3110:
  4770                           
  4771                           ;main.c: 245: }
  4772                           ;main.c: 246: }
  4773                           ;main.c: 248: LATAbits.LATA0 = 0;
  4774  0019F4  9089               	bcf	3977,0,c	;volatile
  4775                           
  4776                           ;main.c: 249: LATAbits.LATA1 = 0;
  4777  0019F6  9289               	bcf	3977,1,c	;volatile
  4778                           
  4779                           ;main.c: 250: LATAbits.LATA2 = 0;
  4780  0019F8  9489               	bcf	3977,2,c	;volatile
  4781                           
  4782                           ;main.c: 251: LATAbits.LATA3 = 1;
  4783  0019FA  8689               	bsf	3977,3,c	;volatile
  4784                           
  4785                           ;main.c: 252: if (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
  4786  0019FC  B482               	btfsc	3970,2,c	;volatile
  4787  0019FE  A689               	btfss	3977,3,c	;volatile
  4788  001A00  D019               	goto	u3160
  4789                           
  4790                           ;main.c: 253: if (boton_seleccionar == 0) {
  4791  001A02  5031               	movf	_boton_seleccionar,w,c
  4792  001A04  1032               	iorwf	_boton_seleccionar+1,w,c
  4793  001A06  A4D8               	btfss	status,2,c
  4794  001A08  D005               	goto	l257
  4795                           
  4796                           ;main.c: 254: boton_seleccionar = 3;
  4797  001A0A  0E00               	movlw	0
  4798  001A0C  6E32               	movwf	_boton_seleccionar+1,c
  4799  001A0E  0E03               	movlw	3
  4800  001A10  6E31               	movwf	_boton_seleccionar,c
  4801                           
  4802                           ;main.c: 255: } else {
  4803  001A12  D00C               	goto	l259
  4804  001A14                     l257:
  4805                           
  4806                           ;main.c: 256: boton_seleccionar--;
  4807  001A14  0631               	decf	_boton_seleccionar,f,c
  4808  001A16  A0D8               	btfss	status,0,c
  4809  001A18  0632               	decf	_boton_seleccionar+1,f,c
  4810                           
  4811                           ;main.c: 257: }
  4812                           ;main.c: 258: while (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
  4813  001A1A  D008               	goto	l259
  4814  001A1C                     
  4815                           ;main.c: 259: _delay((unsigned long)((40)*(8000000/4000.0)));
  4816  001A1C  0E68               	movlw	104
  4817  001A1E  6E28               	movwf	??_cambiar_opcion& (0+255),c
  4818  001A20  0EE4               	movlw	228
  4819  001A22                     u3787:
  4820  001A22  2EE8               	decfsz	wreg,f,c
  4821  001A24  D7FE               	bra	u3787
  4822  001A26  2E28               	decfsz	??_cambiar_opcion& (0+255),f,c
  4823  001A28  D7FC               	bra	u3787
  4824  001A2A  D000               	nop2	
  4825  001A2C                     l259:
  4826  001A2C  A482               	btfss	3970,2,c	;volatile
  4827  001A2E  D002               	goto	u3160
  4828  001A30  B689               	btfsc	3977,3,c	;volatile
  4829  001A32  D7F4               	goto	l260
  4830  001A34                     u3160:
  4831                           
  4832                           ;main.c: 260: }
  4833                           ;main.c: 261: }
  4834                           ;main.c: 263: sprintf(buffer2, "%01u", boton_seleccionar);
  4835  001A34  0E86               	movlw	low _buffer2
  4836  001A36  6E0D               	movwf	sprintf@sp,c
  4837  001A38  0E00               	movlw	high _buffer2
  4838  001A3A  6E0E               	movwf	sprintf@sp+1,c
  4839  001A3C  0EC3               	movlw	low STR_13
  4840  001A3E  6E0F               	movwf	sprintf@f,c
  4841  001A40  0E0F               	movlw	high STR_13
  4842  001A42  6E10               	movwf	sprintf@f+1,c
  4843  001A44  C031  F011         	movff	_boton_seleccionar,?_sprintf+4
  4844  001A48  C032  F012         	movff	_boton_seleccionar+1,?_sprintf+5
  4845  001A4C  ECE6  F007         	call	_sprintf	;wreg free
  4846                           
  4847                           ;main.c: 264: lcd_gotoxy(8, 1);
  4848  001A50  0E01               	movlw	1
  4849  001A52  6E05               	movwf	lcd_gotoxy@y,c
  4850  001A54  0E08               	movlw	8
  4851  001A56  ECFF  F011         	call	_lcd_gotoxy
  4852                           
  4853                           ;main.c: 265: lcd_putrs(buffer2);
  4854  001A5A  0E86               	movlw	low _buffer2
  4855  001A5C  6E09               	movwf	lcd_putrs@ptr,c
  4856  001A5E  0E00               	movlw	high _buffer2
  4857  001A60  6E0A               	movwf	lcd_putrs@ptr+1,c
  4858  001A62  ECB1  F010         	call	_lcd_putrs	;wreg free
  4859  001A66  0012               	return		;funcret
  4860  001A68                     __end_of_cambiar_opcion:
  4861                           	opt stack 0
  4862                           tblptru	equ	0xFF8
  4863                           tblptrh	equ	0xFF7
  4864                           tblptrl	equ	0xFF6
  4865                           tablat	equ	0xFF5
  4866                           prodh	equ	0xFF4
  4867                           prodl	equ	0xFF3
  4868                           intcon	equ	0xFF2
  4869                           postinc0	equ	0xFEE
  4870                           wreg	equ	0xFE8
  4871                           postinc1	equ	0xFE6
  4872                           postdec1	equ	0xFE5
  4873                           fsr1h	equ	0xFE2
  4874                           fsr1l	equ	0xFE1
  4875                           indf2	equ	0xFDF
  4876                           postinc2	equ	0xFDE
  4877                           postdec2	equ	0xFDD
  4878                           fsr2h	equ	0xFDA
  4879                           fsr2l	equ	0xFD9
  4880                           status	equ	0xFD8
  4881                           
  4882 ;; *************** function _sprintf *****************
  4883 ;; Defined at:
  4884 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  sp              2   12[COMRAM] PTR unsigned char 
  4887 ;;		 -> buffer2(20), 
  4888 ;;  f               2   14[COMRAM] PTR const unsigned char 
  4889 ;;		 -> STR_25(3), STR_16(5), STR_13(5), STR_8(15), 
  4890 ;;		 -> STR_7(15), 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  tmpval          4    0        struct .
  4893 ;;  width           2   36[COMRAM] int 
  4894 ;;  len             2   34[COMRAM] unsigned int 
  4895 ;;  cp              2   32[COMRAM] PTR const unsigned char 
  4896 ;;		 -> STR_26(7), RAM(3775), STR_6(5), STR_5(5), 
  4897 ;;		 -> STR_4(5), STR_3(5), STR_2(5), STR_1(5), 
  4898 ;;  ap              2   30[COMRAM] PTR void [1]
  4899 ;;		 -> ?_sprintf(2), 
  4900 ;;  val             2   27[COMRAM] unsigned int 
  4901 ;;  c               1   38[COMRAM] char 
  4902 ;;  prec            1   29[COMRAM] char 
  4903 ;;  flag            1   26[COMRAM] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  2   12[COMRAM] int 
  4906 ;; Registers used:
  4907 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4913 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4914 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4916 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4917 ;;Total ram usage:       27 bytes
  4918 ;; Hardware stack levels used:    1
  4919 ;; Hardware stack levels required when called:    1
  4920 ;; This function calls:
  4921 ;;		___lwdiv
  4922 ;;		___lwmod
  4923 ;;		___wmul
  4924 ;;		_isdigit
  4925 ;; This function is called by:
  4926 ;;		_setDiaMesAnio
  4927 ;;		_setHoraMinutoSegundo
  4928 ;;		_guarda_numero_ingresado
  4929 ;;		_cambiar_opcion
  4930 ;;		_editar_hora_reloj_digital
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text27
  4935  000FCC                     __ptext27:
  4936                           	opt stack 0
  4937  000FCC                     _sprintf:
  4938                           	opt stack 26
  4939                           
  4940                           ;doprnt.c: 494: va_list ap;
  4941                           ;doprnt.c: 499: signed char c;
  4942                           ;doprnt.c: 501: int width;
  4943                           ;doprnt.c: 506: signed char prec;
  4944                           ;doprnt.c: 508: unsigned char flag;
  4945                           ;doprnt.c: 523: union {
  4946                           ;doprnt.c: 524: unsigned long vd;
  4947                           ;doprnt.c: 525: double integ;
  4948                           ;doprnt.c: 526: } tmpval;
  4949                           ;doprnt.c: 528: unsigned int val;
  4950                           ;doprnt.c: 529: unsigned len;
  4951                           ;doprnt.c: 530: const char * cp;
  4952                           ;doprnt.c: 533: *ap = __va_start();
  4953                           
  4954                           ;incstack = 0
  4955  000FCC  0E11               	movlw	low (?_sprintf+4)
  4956  000FCE  6E1F               	movwf	sprintf@ap,c
  4957  000FD0  0E00               	movlw	high (?_sprintf+4)
  4958  000FD2  6E20               	movwf	sprintf@ap+1,c
  4959                           
  4960                           ;doprnt.c: 536: while(c = *f++) {
  4961  000FD4  D17A               	goto	u2200
  4962  000FD6                     
  4963                           ;doprnt.c: 538: if(c != '%')
  4964  000FD6  0E25               	movlw	37
  4965  000FD8  1827               	xorwf	sprintf@c,w,c
  4966  000FDA  B4D8               	btfsc	status,2,c
  4967  000FDC  D009               	goto	l441
  4968                           
  4969                           ;doprnt.c: 540: {
  4970                           ;doprnt.c: 541: ((*sp++ = (c)));
  4971  000FDE  C00D  FFD9         	movff	sprintf@sp,fsr2l
  4972  000FE2  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  4973  000FE6  C027  FFDF         	movff	sprintf@c,indf2
  4974  000FEA  4A0D               	infsnz	sprintf@sp,f,c
  4975  000FEC  2A0E               	incf	sprintf@sp+1,f,c
  4976                           
  4977                           ;doprnt.c: 542: continue;
  4978  000FEE  D16D               	goto	u2200
  4979  000FF0                     l441:
  4980                           
  4981                           ;doprnt.c: 543: }
  4982                           ;doprnt.c: 546: width = 0;
  4983  000FF0  0E00               	movlw	0
  4984  000FF2  6E26               	movwf	sprintf@width+1,c
  4985  000FF4  0E00               	movlw	0
  4986  000FF6  6E25               	movwf	sprintf@width,c
  4987                           
  4988                           ;doprnt.c: 548: flag = 0;
  4989  000FF8  0E00               	movlw	0
  4990  000FFA  6E1B               	movwf	sprintf@flag,c
  4991                           
  4992                           ;doprnt.c: 551: switch(*f) {
  4993                           
  4994                           ;doprnt.c: 550: for(;;) {
  4995  000FFC  D003               	goto	l443
  4996  000FFE                     
  4997                           ;doprnt.c: 580: flag |= 0x04;
  4998  000FFE  841B               	bsf	sprintf@flag,2,c
  4999                           
  5000                           ;doprnt.c: 581: f++;
  5001  001000  4A0F               	infsnz	sprintf@f,f,c
  5002  001002  2A10               	incf	sprintf@f+1,f,c
  5003  001004                     l443:
  5004  001004  C00F  FFF6         	movff	sprintf@f,tblptrl
  5005  001008  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5006  00100C                     	if	0	;tblptru may be non-zero
  5007  00100C                     	endif
  5008  00100C                     	if	0	;tblptru may be non-zero
  5009  00100C                     	endif
  5010  00100C  0008               	tblrd		*
  5011  00100E  50F5               	movf	tablat,w,c
  5012                           
  5013                           ; Switch size 1, requested type "space"
  5014                           ; Number of cases is 1, Range of values is 48 to 48
  5015                           ; switch strategies available:
  5016                           ; Name         Instructions Cycles
  5017                           ; simple_byte            4     3 (average)
  5018                           ;	Chosen strategy is simple_byte
  5019  001010  0A30               	xorlw	48	; case 48
  5020  001012  B4D8               	btfsc	status,2,c
  5021  001014  D7F4               	goto	l444
  5022                           
  5023                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5024                           
  5025                           ;doprnt.c: 586: }
  5026                           
  5027                           ;doprnt.c: 585: break;
  5028  001016  C00F  FFF6         	movff	sprintf@f,tblptrl
  5029  00101A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5030  00101E                     	if	0	;tblptru may be non-zero
  5031  00101E                     	endif
  5032  00101E                     	if	0	;tblptru may be non-zero
  5033  00101E                     	endif
  5034  00101E  0008               	tblrd		*
  5035  001020  50F5               	movf	tablat,w,c
  5036  001022  EC10  F012         	call	_isdigit
  5037  001026  A0D8               	btfss	status,0,c
  5038  001028  D0AD               	goto	l451
  5039                           
  5040                           ;doprnt.c: 598: width = 0;
  5041  00102A  0E00               	movlw	0
  5042  00102C  6E26               	movwf	sprintf@width+1,c
  5043  00102E  0E00               	movlw	0
  5044  001030  6E25               	movwf	sprintf@width,c
  5045  001032                     
  5046                           ;doprnt.c: 600: width *= 10;
  5047  001032  C025  F001         	movff	sprintf@width,___wmul@multiplier
  5048  001036  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  5049  00103A  0E00               	movlw	0
  5050  00103C  6E04               	movwf	___wmul@multiplicand+1,c
  5051  00103E  0E0A               	movlw	10
  5052  001040  6E03               	movwf	___wmul@multiplicand,c
  5053  001042  ECDB  F011         	call	___wmul	;wreg free
  5054  001046  C001  F025         	movff	?___wmul,sprintf@width
  5055  00104A  C002  F026         	movff	?___wmul+1,sprintf@width+1
  5056                           
  5057                           ;doprnt.c: 601: width += *f++ - '0';
  5058  00104E  0ED0               	movlw	208
  5059  001050  6E17               	movwf	??_sprintf& (0+255),c
  5060  001052  0EFF               	movlw	255
  5061  001054  6E18               	movwf	(??_sprintf+1)& (0+255),c
  5062  001056  C00F  FFF6         	movff	sprintf@f,tblptrl
  5063  00105A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5064  00105E                     	if	0	;tblptru may be non-zero
  5065  00105E                     	endif
  5066  00105E                     	if	0	;tblptru may be non-zero
  5067  00105E                     	endif
  5068  00105E  0008               	tblrd		*
  5069  001060  50F5               	movf	tablat,w,c
  5070  001062  6E19               	movwf	(??_sprintf+2)& (0+255),c
  5071  001064  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  5072  001066  5017               	movf	??_sprintf,w,c
  5073  001068  2619               	addwf	??_sprintf+2,f,c
  5074  00106A  5018               	movf	??_sprintf+1,w,c
  5075  00106C  221A               	addwfc	??_sprintf+3,f,c
  5076  00106E  5019               	movf	??_sprintf+2,w,c
  5077  001070  2625               	addwf	sprintf@width,f,c
  5078  001072  501A               	movf	??_sprintf+3,w,c
  5079  001074  2226               	addwfc	sprintf@width+1,f,c
  5080  001076  4A0F               	infsnz	sprintf@f,f,c
  5081  001078  2A10               	incf	sprintf@f+1,f,c
  5082                           
  5083                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5084  00107A  C00F  FFF6         	movff	sprintf@f,tblptrl
  5085  00107E  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5086  001082                     	if	0	;tblptru may be non-zero
  5087  001082                     	endif
  5088  001082                     	if	0	;tblptru may be non-zero
  5089  001082                     	endif
  5090  001082  0008               	tblrd		*
  5091  001084  50F5               	movf	tablat,w,c
  5092  001086  EC10  F012         	call	_isdigit
  5093  00108A  A0D8               	btfss	status,0,c
  5094  00108C  D07B               	goto	l451
  5095  00108E  D7D1               	goto	l449
  5096  001090                     
  5097                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  5098  001090  C01F  FFD9         	movff	sprintf@ap,fsr2l
  5099  001094  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  5100  001098  CFDE F021          	movff	postinc2,sprintf@cp
  5101  00109C  CFDD F022          	movff	postdec2,sprintf@cp+1
  5102  0010A0  0E02               	movlw	2
  5103  0010A2  261F               	addwf	sprintf@ap,f,c
  5104  0010A4  0E00               	movlw	0
  5105  0010A6  2220               	addwfc	sprintf@ap+1,f,c
  5106                           
  5107                           ;doprnt.c: 740: if(!cp)
  5108  0010A8  5021               	movf	sprintf@cp,w,c
  5109  0010AA  1022               	iorwf	sprintf@cp+1,w,c
  5110  0010AC  A4D8               	btfss	status,2,c
  5111  0010AE  D004               	goto	l455
  5112                           
  5113                           ;doprnt.c: 741: cp = "(null)";
  5114  0010B0  0E97               	movlw	low STR_26
  5115  0010B2  6E21               	movwf	sprintf@cp,c
  5116  0010B4  0E0F               	movlw	high STR_26
  5117  0010B6  6E22               	movwf	sprintf@cp+1,c
  5118  0010B8                     l455:
  5119                           
  5120                           ;doprnt.c: 745: len = 0;
  5121  0010B8  0E00               	movlw	0
  5122  0010BA  6E24               	movwf	sprintf@len+1,c
  5123  0010BC  0E00               	movlw	0
  5124  0010BE  6E23               	movwf	sprintf@len,c
  5125                           
  5126                           ;doprnt.c: 746: while(cp[len])
  5127  0010C0  D002               	goto	l456
  5128  0010C2                     
  5129                           ;doprnt.c: 747: len++;
  5130  0010C2  4A23               	infsnz	sprintf@len,f,c
  5131  0010C4  2A24               	incf	sprintf@len+1,f,c
  5132  0010C6                     l456:
  5133  0010C6  5023               	movf	sprintf@len,w,c
  5134  0010C8  2421               	addwf	sprintf@cp,w,c
  5135  0010CA  6E17               	movwf	??_sprintf& (0+255),c
  5136  0010CC  5024               	movf	sprintf@len+1,w,c
  5137  0010CE  2022               	addwfc	sprintf@cp+1,w,c
  5138  0010D0  6E18               	movwf	(??_sprintf+1)& (0+255),c
  5139  0010D2  C017  FFF6         	movff	??_sprintf,tblptrl
  5140  0010D6  C018  FFF7         	movff	??_sprintf+1,tblptrh
  5141  0010DA  6AF8               	clrf	tblptru,c
  5142  0010DC  0E0E               	movlw	(high __ramtop+-1)
  5143  0010DE  64F7               	cpfsgt	tblptrh,c
  5144  0010E0  D003               	bra	u2057
  5145  0010E2  0008               	tblrd		*
  5146  0010E4  50F5               	movf	tablat,w,c
  5147  0010E6  D005               	bra	u2050
  5148  0010E8                     u2057:
  5149  0010E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5150  0010EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5151  0010F0  50EF               	movf	indf0,w,c
  5152  0010F2                     u2050:
  5153  0010F2  0900               	iorlw	0
  5154  0010F4  A4D8               	btfss	status,2,c
  5155  0010F6  D7E5               	goto	l457
  5156                           
  5157                           ;doprnt.c: 757: if(width > len)
  5158  0010F8  5025               	movf	sprintf@width,w,c
  5159  0010FA  5C23               	subwf	sprintf@len,w,c
  5160  0010FC  5026               	movf	sprintf@width+1,w,c
  5161  0010FE  5824               	subwfb	sprintf@len+1,w,c
  5162  001100  B0D8               	btfsc	status,0,c
  5163  001102  D005               	goto	l459
  5164                           
  5165                           ;doprnt.c: 758: width -= len;
  5166  001104  5023               	movf	sprintf@len,w,c
  5167  001106  5E25               	subwf	sprintf@width,f,c
  5168  001108  5024               	movf	sprintf@len+1,w,c
  5169  00110A  5A26               	subwfb	sprintf@width+1,f,c
  5170  00110C  D00D               	goto	l461
  5171  00110E                     l459:
  5172                           
  5173                           ;doprnt.c: 759: else
  5174                           ;doprnt.c: 760: width = 0;
  5175  00110E  0E00               	movlw	0
  5176  001110  6E26               	movwf	sprintf@width+1,c
  5177  001112  0E00               	movlw	0
  5178  001114  6E25               	movwf	sprintf@width,c
  5179                           
  5180                           ;doprnt.c: 764: while(width--)
  5181  001116  D008               	goto	l461
  5182  001118                     l2540:
  5183                           
  5184                           ;doprnt.c: 765: ((*sp++ = (' ')));
  5185  001118  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5186  00111C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5187  001120  0E20               	movlw	32
  5188  001122  6EDF               	movwf	indf2,c
  5189  001124  4A0D               	infsnz	sprintf@sp,f,c
  5190  001126  2A0E               	incf	sprintf@sp+1,f,c
  5191  001128                     l461:
  5192  001128  0625               	decf	sprintf@width,f,c
  5193  00112A  A0D8               	btfss	status,0,c
  5194  00112C  0626               	decf	sprintf@width+1,f,c
  5195  00112E  2825               	incf	sprintf@width,w,c
  5196  001130  E1F3               	bnz	l2540
  5197  001132  2826               	incf	sprintf@width+1,w,c
  5198  001134  B4D8               	btfsc	status,2,c
  5199  001136  D01A               	goto	l464
  5200  001138  D7EF               	goto	l462
  5201  00113A                     l2546:
  5202                           
  5203                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  5204  00113A  C021  FFF6         	movff	sprintf@cp,tblptrl
  5205  00113E  C022  FFF7         	movff	sprintf@cp+1,tblptrh
  5206  001142  6AF8               	clrf	tblptru,c
  5207  001144  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5208  001148  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5209  00114C  0E0E               	movlw	(high __ramtop+-1)
  5210  00114E  64F7               	cpfsgt	tblptrh,c
  5211  001150  D003               	bra	u2097
  5212  001152  0008               	tblrd		*
  5213  001154  50F5               	movf	tablat,w,c
  5214  001156  D005               	bra	u2090
  5215  001158                     u2097:
  5216  001158  CFF6 FFE9          	movff	tblptrl,fsr0l
  5217  00115C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5218  001160  50EF               	movf	indf0,w,c
  5219  001162                     u2090:
  5220  001162  6EDF               	movwf	indf2,c
  5221  001164  4A21               	infsnz	sprintf@cp,f,c
  5222  001166  2A22               	incf	sprintf@cp+1,f,c
  5223  001168  4A0D               	infsnz	sprintf@sp,f,c
  5224  00116A  2A0E               	incf	sprintf@sp+1,f,c
  5225  00116C                     l464:
  5226  00116C  0623               	decf	sprintf@len,f,c
  5227  00116E  A0D8               	btfss	status,0,c
  5228  001170  0624               	decf	sprintf@len+1,f,c
  5229  001172  2823               	incf	sprintf@len,w,c
  5230  001174  E1E2               	bnz	l2546
  5231  001176  2824               	incf	sprintf@len+1,w,c
  5232  001178  B4D8               	btfsc	status,2,c
  5233  00117A  D0A7               	goto	u2200
  5234  00117C  D7DE               	goto	l465
  5235  00117E                     
  5236                           ;doprnt.c: 818: flag |= 0xC0;
  5237  00117E  0EC0               	movlw	192
  5238  001180  121B               	iorwf	sprintf@flag,f,c
  5239                           
  5240                           ;doprnt.c: 822: }
  5241                           
  5242                           ;doprnt.c: 819: break;
  5243  001182  D014               	goto	l469
  5244  001184                     l451:
  5245  001184  C00F  FFF6         	movff	sprintf@f,tblptrl
  5246  001188  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5247  00118C  4A0F               	infsnz	sprintf@f,f,c
  5248  00118E  2A10               	incf	sprintf@f+1,f,c
  5249  001190                     	if	0	;tblptru may be non-zero
  5250  001190                     	endif
  5251  001190                     	if	0	;tblptru may be non-zero
  5252  001190                     	endif
  5253  001190  0008               	tblrd		*
  5254  001192  CFF5 F027          	movff	tablat,sprintf@c
  5255  001196  5027               	movf	sprintf@c,w,c
  5256                           
  5257                           ; Switch size 1, requested type "space"
  5258                           ; Number of cases is 3, Range of values is 0 to 117
  5259                           ; switch strategies available:
  5260                           ; Name         Instructions Cycles
  5261                           ; simple_byte           10     6 (average)
  5262                           ;	Chosen strategy is simple_byte
  5263  001198  0A00               	xorlw	0	; case 0
  5264  00119A  B4D8               	btfsc	status,2,c
  5265  00119C  D0A2               	goto	u2210
  5266  00119E  0A73               	xorlw	115	; case 115
  5267  0011A0  B4D8               	btfsc	status,2,c
  5268  0011A2  D776               	goto	l454
  5269  0011A4  0A06               	xorlw	6	; case 117
  5270  0011A6  B4D8               	btfsc	status,2,c
  5271  0011A8  D7EA               	goto	l468
  5272  0011AA  D08F               	goto	u2200
  5273  0011AC                     l469:
  5274                           
  5275                           ;doprnt.c: 1273: {
  5276                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5277  0011AC  C01F  FFD9         	movff	sprintf@ap,fsr2l
  5278  0011B0  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  5279  0011B4  CFDE F01C          	movff	postinc2,sprintf@val
  5280  0011B8  CFDD F01D          	movff	postdec2,sprintf@val+1
  5281  0011BC  0E02               	movlw	2
  5282  0011BE  261F               	addwf	sprintf@ap,f,c
  5283  0011C0  0E00               	movlw	0
  5284  0011C2  2220               	addwfc	sprintf@ap+1,f,c
  5285                           
  5286                           ;doprnt.c: 1287: }
  5287                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5288  0011C4  0E01               	movlw	1
  5289  0011C6  6E27               	movwf	sprintf@c,c
  5290  0011C8                     l2566:
  5291  0011C8  0E05               	movlw	5
  5292  0011CA  1827               	xorwf	sprintf@c,w,c
  5293  0011CC  B4D8               	btfsc	status,2,c
  5294  0011CE  D012               	goto	u2130
  5295                           
  5296                           ;doprnt.c: 1306: if(val < dpowers[c])
  5297  0011D0  5027               	movf	sprintf@c,w,c
  5298  0011D2  0D02               	mullw	2
  5299  0011D4  0E01               	movlw	low _dpowers
  5300  0011D6  24F3               	addwf	prodl,w,c
  5301  0011D8  6EF6               	movwf	tblptrl,c
  5302  0011DA  0E0F               	movlw	high _dpowers
  5303  0011DC  20F4               	addwfc	prodh,w,c
  5304  0011DE  6EF7               	movwf	tblptrh,c
  5305  0011E0                     	if	0	;There are less than 3 active tblptr bytes
  5306  0011E0                     	endif
  5307  0011E0  0009               	tblrd		*+
  5308  0011E2  50F5               	movf	tablat,w,c
  5309  0011E4  5C1C               	subwf	sprintf@val,w,c
  5310  0011E6  0009               	tblrd		*+
  5311  0011E8  50F5               	movf	tablat,w,c
  5312  0011EA  581D               	subwfb	sprintf@val+1,w,c
  5313  0011EC  A0D8               	btfss	status,0,c
  5314  0011EE  D002               	goto	u2130
  5315                           
  5316                           ;doprnt.c: 1307: break;
  5317  0011F0  2A27               	incf	sprintf@c,f,c
  5318  0011F2  D7EA               	goto	l2566
  5319  0011F4                     u2130:
  5320                           
  5321                           ;doprnt.c: 1381: if(width > c)
  5322  0011F4  0E80               	movlw	128
  5323  0011F6  BE27               	btfsc	sprintf@c,7,c
  5324  0011F8  0E7F               	movlw	127
  5325  0011FA  6E17               	movwf	??_sprintf& (0+255),c
  5326  0011FC  5025               	movf	sprintf@width,w,c
  5327  0011FE  5C27               	subwf	sprintf@c,w,c
  5328  001200  5026               	movf	sprintf@width+1,w,c
  5329  001202  0A80               	xorlw	128
  5330  001204  5817               	subwfb	??_sprintf& (0+255),w,c
  5331  001206  B0D8               	btfsc	status,0,c
  5332  001208  D007               	goto	l473
  5333                           
  5334                           ;doprnt.c: 1382: width -= c;
  5335  00120A  5027               	movf	sprintf@c,w,c
  5336  00120C  5E25               	subwf	sprintf@width,f,c
  5337  00120E  0E00               	movlw	0
  5338  001210  BE27               	btfsc	sprintf@c,7,c
  5339  001212  0EFF               	movlw	255
  5340  001214  5A26               	subwfb	sprintf@width+1,f,c
  5341  001216  D004               	goto	l474
  5342  001218                     l473:
  5343                           
  5344                           ;doprnt.c: 1383: else
  5345                           ;doprnt.c: 1384: width = 0;
  5346  001218  0E00               	movlw	0
  5347  00121A  6E26               	movwf	sprintf@width+1,c
  5348  00121C  0E00               	movlw	0
  5349  00121E  6E25               	movwf	sprintf@width,c
  5350  001220                     l474:
  5351                           
  5352                           ;doprnt.c: 1387: if(flag & 0x04) {
  5353  001220  A41B               	btfss	sprintf@flag,2,c
  5354  001222  D010               	goto	l475
  5355  001224                     
  5356                           ;doprnt.c: 1415: if(width)
  5357  001224  5025               	movf	sprintf@width,w,c
  5358  001226  1026               	iorwf	sprintf@width+1,w,c
  5359  001228  B4D8               	btfsc	status,2,c
  5360  00122A  D01F               	goto	u2190
  5361                           
  5362                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  5363                           
  5364                           ;doprnt.c: 1416: do
  5365  00122C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5366  001230  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5367  001234  0E30               	movlw	48
  5368  001236  6EDF               	movwf	indf2,c
  5369  001238  4A0D               	infsnz	sprintf@sp,f,c
  5370  00123A  2A0E               	incf	sprintf@sp+1,f,c
  5371                           
  5372                           ;doprnt.c: 1418: while(--width);
  5373  00123C  0625               	decf	sprintf@width,f,c
  5374  00123E  A0D8               	btfss	status,0,c
  5375  001240  0626               	decf	sprintf@width+1,f,c
  5376  001242  D7F0               	goto	L4
  5377  001244                     l475:
  5378                           
  5379                           ;doprnt.c: 1422: {
  5380                           ;doprnt.c: 1424: if(width
  5381                           ;doprnt.c: 1428: )
  5382  001244  5025               	movf	sprintf@width,w,c
  5383  001246  1026               	iorwf	sprintf@width+1,w,c
  5384  001248  B4D8               	btfsc	status,2,c
  5385  00124A  D00F               	goto	u2190
  5386  00124C                     u2180:
  5387                           
  5388                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  5389                           
  5390                           ;doprnt.c: 1429: do
  5391  00124C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5392  001250  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5393  001254  0E20               	movlw	32
  5394  001256  6EDF               	movwf	indf2,c
  5395  001258  4A0D               	infsnz	sprintf@sp,f,c
  5396  00125A  2A0E               	incf	sprintf@sp+1,f,c
  5397                           
  5398                           ;doprnt.c: 1431: while(--width);
  5399  00125C  0625               	decf	sprintf@width,f,c
  5400  00125E  A0D8               	btfss	status,0,c
  5401  001260  0626               	decf	sprintf@width+1,f,c
  5402  001262  5025               	movf	sprintf@width,w,c
  5403  001264  1026               	iorwf	sprintf@width+1,w,c
  5404  001266  A4D8               	btfss	status,2,c
  5405  001268  D7F1               	goto	u2180
  5406  00126A                     u2190:
  5407                           
  5408                           ;doprnt.c: 1469: }
  5409                           ;doprnt.c: 1472: prec = c;
  5410  00126A  C027  F01E         	movff	sprintf@c,sprintf@prec
  5411                           
  5412                           ;doprnt.c: 1474: while(prec--) {
  5413  00126E  D029               	goto	l483
  5414  001270                     
  5415                           ;doprnt.c: 1478: {
  5416                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5417  001270  501E               	movf	sprintf@prec,w,c
  5418  001272  0D02               	mullw	2
  5419  001274  0E01               	movlw	low _dpowers
  5420  001276  24F3               	addwf	prodl,w,c
  5421  001278  6EF6               	movwf	tblptrl,c
  5422  00127A  0E0F               	movlw	high _dpowers
  5423  00127C  20F4               	addwfc	prodh,w,c
  5424  00127E  6EF7               	movwf	tblptrh,c
  5425  001280                     	if	0	;There are less than 3 active tblptr bytes
  5426  001280                     	endif
  5427  001280  0009               	tblrd		*+
  5428  001282  CFF5 F003          	movff	tablat,___lwdiv@divisor
  5429  001286  000A               	tblrd		*-
  5430  001288  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  5431  00128C  C01C  F001         	movff	sprintf@val,___lwdiv@dividend
  5432  001290  C01D  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  5433  001294  EC88  F010         	call	___lwdiv	;wreg free
  5434  001298  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  5435  00129C  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  5436  0012A0  0E00               	movlw	0
  5437  0012A2  6E0B               	movwf	___lwmod@divisor+1,c
  5438  0012A4  0E0A               	movlw	10
  5439  0012A6  6E0A               	movwf	___lwmod@divisor,c
  5440  0012A8  EC6E  F011         	call	___lwmod	;wreg free
  5441  0012AC  5008               	movf	?___lwmod,w,c
  5442  0012AE  0F30               	addlw	48
  5443  0012B0  6E27               	movwf	sprintf@c,c
  5444                           
  5445                           ;doprnt.c: 1523: }
  5446                           ;doprnt.c: 1524: ((*sp++ = (c)));
  5447  0012B2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5448  0012B6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5449  0012BA  C027  FFDF         	movff	sprintf@c,indf2
  5450  0012BE  4A0D               	infsnz	sprintf@sp,f,c
  5451  0012C0  2A0E               	incf	sprintf@sp+1,f,c
  5452  0012C2                     l483:
  5453  0012C2  061E               	decf	sprintf@prec,f,c
  5454  0012C4  281E               	incf	sprintf@prec,w,c
  5455  0012C6  A4D8               	btfss	status,2,c
  5456  0012C8  D7D3               	goto	l484
  5457  0012CA                     u2200:
  5458  0012CA  C00F  FFF6         	movff	sprintf@f,tblptrl
  5459  0012CE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  5460  0012D2  4A0F               	infsnz	sprintf@f,f,c
  5461  0012D4  2A10               	incf	sprintf@f+1,f,c
  5462  0012D6                     	if	0	;tblptru may be non-zero
  5463  0012D6                     	endif
  5464  0012D6                     	if	0	;tblptru may be non-zero
  5465  0012D6                     	endif
  5466  0012D6  0008               	tblrd		*
  5467  0012D8  CFF5 F027          	movff	tablat,sprintf@c
  5468  0012DC  5027               	movf	sprintf@c,w,c
  5469  0012DE  A4D8               	btfss	status,2,c
  5470  0012E0  D67A               	goto	l440
  5471  0012E2                     u2210:
  5472                           
  5473                           ;doprnt.c: 1538: *sp = 0;
  5474                           
  5475                           ;doprnt.c: 1525: }
  5476                           ;doprnt.c: 1533: }
  5477                           ;doprnt.c: 1535: alldone:
  5478  0012E2  C00D  FFD9         	movff	sprintf@sp,fsr2l
  5479  0012E6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  5480  0012EA  0E00               	movlw	0
  5481  0012EC  6EDF               	movwf	indf2,c
  5482  0012EE  0012               	return	
  5483  0012F0                     __end_of_sprintf:
  5484                           	opt stack 0
  5485                           tblptru	equ	0xFF8
  5486                           tblptrh	equ	0xFF7
  5487                           tblptrl	equ	0xFF6
  5488                           tablat	equ	0xFF5
  5489                           prodh	equ	0xFF4
  5490                           prodl	equ	0xFF3
  5491                           intcon	equ	0xFF2
  5492                           indf0	equ	0xFEF
  5493                           postinc0	equ	0xFEE
  5494                           fsr0h	equ	0xFEA
  5495                           fsr0l	equ	0xFE9
  5496                           wreg	equ	0xFE8
  5497                           postinc1	equ	0xFE6
  5498                           postdec1	equ	0xFE5
  5499                           fsr1h	equ	0xFE2
  5500                           fsr1l	equ	0xFE1
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _isdigit *****************
  5509 ;; Defined at:
  5510 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  c               1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  c               1    2[COMRAM] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5526 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5527 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5528 ;;Total ram usage:        3 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		_sprintf
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text28
  5538  002420                     __ptext28:
  5539                           	opt stack 0
  5540  002420                     _isdigit:
  5541                           	opt stack 26
  5542                           
  5543                           ;incstack = 0
  5544                           ;isdigit@c stored from wreg
  5545  002420  6E03               	movwf	isdigit@c,c
  5546  002422  0E00               	movlw	0
  5547  002424  6E02               	movwf	_isdigit$1948,c
  5548  002426  0E3A               	movlw	58
  5549  002428  6003               	cpfslt	isdigit@c,c
  5550  00242A  D005               	goto	l927
  5551  00242C  0E2F               	movlw	47
  5552  00242E  6403               	cpfsgt	isdigit@c,c
  5553  002430  D002               	goto	l927
  5554  002432  0E01               	movlw	1
  5555  002434  6E02               	movwf	_isdigit$1948,c
  5556  002436                     l927:
  5557  002436  C002  F001         	movff	_isdigit$1948,??_isdigit
  5558  00243A  3001               	rrcf	??_isdigit,w,c
  5559  00243C  0012               	return	
  5560  00243E                     __end_of_isdigit:
  5561                           	opt stack 0
  5562                           tblptru	equ	0xFF8
  5563                           tblptrh	equ	0xFF7
  5564                           tblptrl	equ	0xFF6
  5565                           tablat	equ	0xFF5
  5566                           prodh	equ	0xFF4
  5567                           prodl	equ	0xFF3
  5568                           intcon	equ	0xFF2
  5569                           indf0	equ	0xFEF
  5570                           postinc0	equ	0xFEE
  5571                           fsr0h	equ	0xFEA
  5572                           fsr0l	equ	0xFE9
  5573                           wreg	equ	0xFE8
  5574                           postinc1	equ	0xFE6
  5575                           postdec1	equ	0xFE5
  5576                           fsr1h	equ	0xFE2
  5577                           fsr1l	equ	0xFE1
  5578                           indf2	equ	0xFDF
  5579                           postinc2	equ	0xFDE
  5580                           postdec2	equ	0xFDD
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function ___wmul *****************
  5586 ;; Defined at:
  5587 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  multiplier      2    0[COMRAM] unsigned int 
  5590 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  product         2    4[COMRAM] unsigned int 
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  2    0[COMRAM] unsigned int 
  5595 ;; Registers used:
  5596 ;;		wreg, status,2, status,0, prodl, prodh
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;Total ram usage:        6 bytes
  5607 ;; Hardware stack levels used:    1
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_sprintf
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text29
  5616  0023B6                     __ptext29:
  5617                           	opt stack 0
  5618  0023B6                     ___wmul:
  5619                           	opt stack 26
  5620                           
  5621                           ;incstack = 0
  5622  0023B6  5001               	movf	___wmul@multiplier,w,c
  5623  0023B8  0203               	mulwf	___wmul@multiplicand,c
  5624  0023BA  CFF3 F005          	movff	prodl,___wmul@product
  5625  0023BE  CFF4 F006          	movff	prodh,___wmul@product+1
  5626  0023C2  5001               	movf	___wmul@multiplier,w,c
  5627  0023C4  0204               	mulwf	___wmul@multiplicand+1,c
  5628  0023C6  50F3               	movf	prodl,w,c
  5629  0023C8  2606               	addwf	___wmul@product+1,f,c
  5630  0023CA  5002               	movf	___wmul@multiplier+1,w,c
  5631  0023CC  0203               	mulwf	___wmul@multiplicand,c
  5632  0023CE  50F3               	movf	prodl,w,c
  5633  0023D0  2606               	addwf	___wmul@product+1,f,c
  5634  0023D2  C005  F001         	movff	___wmul@product,?___wmul
  5635  0023D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5636  0023DA  0012               	return	
  5637  0023DC                     __end_of___wmul:
  5638                           	opt stack 0
  5639                           tblptru	equ	0xFF8
  5640                           tblptrh	equ	0xFF7
  5641                           tblptrl	equ	0xFF6
  5642                           tablat	equ	0xFF5
  5643                           prodh	equ	0xFF4
  5644                           prodl	equ	0xFF3
  5645                           intcon	equ	0xFF2
  5646                           indf0	equ	0xFEF
  5647                           postinc0	equ	0xFEE
  5648                           fsr0h	equ	0xFEA
  5649                           fsr0l	equ	0xFE9
  5650                           wreg	equ	0xFE8
  5651                           postinc1	equ	0xFE6
  5652                           postdec1	equ	0xFE5
  5653                           fsr1h	equ	0xFE2
  5654                           fsr1l	equ	0xFE1
  5655                           indf2	equ	0xFDF
  5656                           postinc2	equ	0xFDE
  5657                           postdec2	equ	0xFDD
  5658                           fsr2h	equ	0xFDA
  5659                           fsr2l	equ	0xFD9
  5660                           status	equ	0xFD8
  5661                           
  5662 ;; *************** function ___lwmod *****************
  5663 ;; Defined at:
  5664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  dividend        2    7[COMRAM] unsigned int 
  5667 ;;  divisor         2    9[COMRAM] unsigned int 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  counter         1   11[COMRAM] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  2    7[COMRAM] unsigned int 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5682 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;Total ram usage:        5 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_sprintf
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text30
  5693  0022DC                     __ptext30:
  5694                           	opt stack 0
  5695  0022DC                     ___lwmod:
  5696                           	opt stack 26
  5697                           
  5698                           ;incstack = 0
  5699  0022DC  500A               	movf	___lwmod@divisor,w,c
  5700  0022DE  100B               	iorwf	___lwmod@divisor+1,w,c
  5701  0022E0  B4D8               	btfsc	status,2,c
  5702  0022E2  D018               	goto	l1021
  5703  0022E4  0E01               	movlw	1
  5704  0022E6  6E0C               	movwf	___lwmod@counter,c
  5705  0022E8  D004               	goto	l1016
  5706  0022EA  90D8               	bcf	status,0,c
  5707  0022EC  360A               	rlcf	___lwmod@divisor,f,c
  5708  0022EE  360B               	rlcf	___lwmod@divisor+1,f,c
  5709  0022F0  2A0C               	incf	___lwmod@counter,f,c
  5710  0022F2                     l1016:
  5711  0022F2  AE0B               	btfss	___lwmod@divisor+1,7,c
  5712  0022F4  D7FA               	goto	l1017
  5713  0022F6                     u1990:
  5714  0022F6  500A               	movf	___lwmod@divisor,w,c
  5715  0022F8  5C08               	subwf	___lwmod@dividend,w,c
  5716  0022FA  500B               	movf	___lwmod@divisor+1,w,c
  5717  0022FC  5809               	subwfb	___lwmod@dividend+1,w,c
  5718  0022FE  A0D8               	btfss	status,0,c
  5719  002300  D004               	goto	l1020
  5720  002302  500A               	movf	___lwmod@divisor,w,c
  5721  002304  5E08               	subwf	___lwmod@dividend,f,c
  5722  002306  500B               	movf	___lwmod@divisor+1,w,c
  5723  002308  5A09               	subwfb	___lwmod@dividend+1,f,c
  5724  00230A                     l1020:
  5725  00230A  90D8               	bcf	status,0,c
  5726  00230C  320B               	rrcf	___lwmod@divisor+1,f,c
  5727  00230E  320A               	rrcf	___lwmod@divisor,f,c
  5728  002310  2E0C               	decfsz	___lwmod@counter,f,c
  5729  002312  D7F1               	goto	u1990
  5730  002314                     l1021:
  5731  002314  C008  F008         	movff	___lwmod@dividend,?___lwmod
  5732  002318  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  5733  00231C  0012               	return		;funcret
  5734  00231E                     __end_of___lwmod:
  5735                           	opt stack 0
  5736                           tblptru	equ	0xFF8
  5737                           tblptrh	equ	0xFF7
  5738                           tblptrl	equ	0xFF6
  5739                           tablat	equ	0xFF5
  5740                           prodh	equ	0xFF4
  5741                           prodl	equ	0xFF3
  5742                           intcon	equ	0xFF2
  5743                           indf0	equ	0xFEF
  5744                           postinc0	equ	0xFEE
  5745                           fsr0h	equ	0xFEA
  5746                           fsr0l	equ	0xFE9
  5747                           wreg	equ	0xFE8
  5748                           postinc1	equ	0xFE6
  5749                           postdec1	equ	0xFE5
  5750                           fsr1h	equ	0xFE2
  5751                           fsr1l	equ	0xFE1
  5752                           indf2	equ	0xFDF
  5753                           postinc2	equ	0xFDE
  5754                           postdec2	equ	0xFDD
  5755                           fsr2h	equ	0xFDA
  5756                           fsr2l	equ	0xFD9
  5757                           status	equ	0xFD8
  5758                           
  5759 ;; *************** function ___lwdiv *****************
  5760 ;; Defined at:
  5761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  dividend        2    0[COMRAM] unsigned int 
  5764 ;;  divisor         2    2[COMRAM] unsigned int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  quotient        2    4[COMRAM] unsigned int 
  5767 ;;  counter         1    6[COMRAM] unsigned char 
  5768 ;; Return value:  Size  Location     Type
  5769 ;;                  2    0[COMRAM] unsigned int 
  5770 ;; Registers used:
  5771 ;;		wreg, status,2, status,0
  5772 ;; Tracked objects:
  5773 ;;		On entry : 0/0
  5774 ;;		On exit  : 0/0
  5775 ;;		Unchanged: 0/0
  5776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5778 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5780 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5781 ;;Total ram usage:        7 bytes
  5782 ;; Hardware stack levels used:    1
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_sprintf
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text31
  5791  002110                     __ptext31:
  5792                           	opt stack 0
  5793  002110                     ___lwdiv:
  5794                           	opt stack 26
  5795                           
  5796                           ;incstack = 0
  5797  002110  0E00               	movlw	0
  5798  002112  6E06               	movwf	___lwdiv@quotient+1,c
  5799  002114  0E00               	movlw	0
  5800  002116  6E05               	movwf	___lwdiv@quotient,c
  5801  002118  5003               	movf	___lwdiv@divisor,w,c
  5802  00211A  1004               	iorwf	___lwdiv@divisor+1,w,c
  5803  00211C  B4D8               	btfsc	status,2,c
  5804  00211E  D01C               	goto	l1011
  5805  002120  0E01               	movlw	1
  5806  002122  6E07               	movwf	___lwdiv@counter,c
  5807  002124  D004               	goto	l1006
  5808  002126  90D8               	bcf	status,0,c
  5809  002128  3603               	rlcf	___lwdiv@divisor,f,c
  5810  00212A  3604               	rlcf	___lwdiv@divisor+1,f,c
  5811  00212C  2A07               	incf	___lwdiv@counter,f,c
  5812  00212E                     l1006:
  5813  00212E  AE04               	btfss	___lwdiv@divisor+1,7,c
  5814  002130  D7FA               	goto	l1007
  5815  002132                     u1960:
  5816  002132  90D8               	bcf	status,0,c
  5817  002134  3605               	rlcf	___lwdiv@quotient,f,c
  5818  002136  3606               	rlcf	___lwdiv@quotient+1,f,c
  5819  002138  5003               	movf	___lwdiv@divisor,w,c
  5820  00213A  5C01               	subwf	___lwdiv@dividend,w,c
  5821  00213C  5004               	movf	___lwdiv@divisor+1,w,c
  5822  00213E  5802               	subwfb	___lwdiv@dividend+1,w,c
  5823  002140  A0D8               	btfss	status,0,c
  5824  002142  D005               	goto	l1010
  5825  002144  5003               	movf	___lwdiv@divisor,w,c
  5826  002146  5E01               	subwf	___lwdiv@dividend,f,c
  5827  002148  5004               	movf	___lwdiv@divisor+1,w,c
  5828  00214A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5829  00214C  8005               	bsf	___lwdiv@quotient,0,c
  5830  00214E                     l1010:
  5831  00214E  90D8               	bcf	status,0,c
  5832  002150  3204               	rrcf	___lwdiv@divisor+1,f,c
  5833  002152  3203               	rrcf	___lwdiv@divisor,f,c
  5834  002154  2E07               	decfsz	___lwdiv@counter,f,c
  5835  002156  D7ED               	goto	u1960
  5836  002158                     l1011:
  5837  002158  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5838  00215C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5839  002160  0012               	return		;funcret
  5840  002162                     __end_of___lwdiv:
  5841                           	opt stack 0
  5842                           tblptru	equ	0xFF8
  5843                           tblptrh	equ	0xFF7
  5844                           tblptrl	equ	0xFF6
  5845                           tablat	equ	0xFF5
  5846                           prodh	equ	0xFF4
  5847                           prodl	equ	0xFF3
  5848                           intcon	equ	0xFF2
  5849                           indf0	equ	0xFEF
  5850                           postinc0	equ	0xFEE
  5851                           fsr0h	equ	0xFEA
  5852                           fsr0l	equ	0xFE9
  5853                           wreg	equ	0xFE8
  5854                           postinc1	equ	0xFE6
  5855                           postdec1	equ	0xFE5
  5856                           fsr1h	equ	0xFE2
  5857                           fsr1l	equ	0xFE1
  5858                           indf2	equ	0xFDF
  5859                           postinc2	equ	0xFDE
  5860                           postdec2	equ	0xFDD
  5861                           fsr2h	equ	0xFDA
  5862                           fsr2l	equ	0xFD9
  5863                           status	equ	0xFD8
  5864                           
  5865 ;; *************** function _lcd_putrs *****************
  5866 ;; Defined at:
  5867 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  5870 ;;		 -> STR_24(17), STR_23(21), STR_22(17), STR_21(17), 
  5871 ;;		 -> STR_20(9), STR_19(8), STR_18(17), STR_17(17), 
  5872 ;;		 -> STR_15(15), STR_14(8), STR_12(9), STR_11(9), 
  5873 ;;		 -> STR_10(9), STR_9(7), buffer2(20), 
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;Total ram usage:        2 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:    4
  5892 ;; This function calls:
  5893 ;;		_lcd_putc
  5894 ;; This function is called by:
  5895 ;;		_setDiaMesAnio
  5896 ;;		_setHoraMinutoSegundo
  5897 ;;		_titila_texto_insert_password
  5898 ;;		_guarda_numero_ingresado
  5899 ;;		_mostrar_presionar_a
  5900 ;;		_resetear_pantalla_ingresar_contrasenia
  5901 ;;		_cambiar_opcion
  5902 ;;		_activar_alarma
  5903 ;;		_ir_a_pantalla_edicion
  5904 ;;		_ir_a_pantalla_ingresar_contrasenia
  5905 ;;		_ir_a_pantalla_editar_contrasenia
  5906 ;;		_editar_hora_reloj_digital
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text32
  5911  002162                     __ptext32:
  5912                           	opt stack 0
  5913  002162                     _lcd_putrs:
  5914                           	opt stack 23
  5915                           
  5916                           ;unmc_lcd_216.c: 223: while(*ptr){
  5917                           
  5918                           ;incstack = 0
  5919  002162  D014               	goto	l425
  5920  002164                     
  5921                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  5922  002164  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5923  002168  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5924  00216C  6AF8               	clrf	tblptru,c
  5925  00216E  0E0E               	movlw	(high __ramtop+-1)
  5926  002170  64F7               	cpfsgt	tblptrh,c
  5927  002172  D003               	bra	u2227
  5928  002174  0008               	tblrd		*
  5929  002176  50F5               	movf	tablat,w,c
  5930  002178  D005               	bra	u2220
  5931  00217A                     u2227:
  5932  00217A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5933  00217E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5934  002182  50EF               	movf	indf0,w,c
  5935  002184                     u2220:
  5936  002184  EC25  F011         	call	_lcd_putc
  5937  002188  4A09               	infsnz	lcd_putrs@ptr,f,c
  5938  00218A  2A0A               	incf	lcd_putrs@ptr+1,f,c
  5939  00218C                     l425:
  5940  00218C  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  5941  002190  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  5942  002194  6AF8               	clrf	tblptru,c
  5943  002196  0E0E               	movlw	(high __ramtop+-1)
  5944  002198  64F7               	cpfsgt	tblptrh,c
  5945  00219A  D003               	bra	u2237
  5946  00219C  0008               	tblrd		*
  5947  00219E  50F5               	movf	tablat,w,c
  5948  0021A0  D005               	bra	u2230
  5949  0021A2                     u2237:
  5950  0021A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5951  0021A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5952  0021AA  50EF               	movf	indf0,w,c
  5953  0021AC                     u2230:
  5954  0021AC  0900               	iorlw	0
  5955  0021AE  B4D8               	btfsc	status,2,c
  5956  0021B0  0012               	return	
  5957  0021B2  D7D8               	goto	l426
  5958  0021B4                     __end_of_lcd_putrs:
  5959                           	opt stack 0
  5960                           tblptru	equ	0xFF8
  5961                           tblptrh	equ	0xFF7
  5962                           tblptrl	equ	0xFF6
  5963                           tablat	equ	0xFF5
  5964                           prodh	equ	0xFF4
  5965                           prodl	equ	0xFF3
  5966                           intcon	equ	0xFF2
  5967                           indf0	equ	0xFEF
  5968                           postinc0	equ	0xFEE
  5969                           fsr0h	equ	0xFEA
  5970                           fsr0l	equ	0xFE9
  5971                           wreg	equ	0xFE8
  5972                           postinc1	equ	0xFE6
  5973                           postdec1	equ	0xFE5
  5974                           fsr1h	equ	0xFE2
  5975                           fsr1l	equ	0xFE1
  5976                           indf2	equ	0xFDF
  5977                           postinc2	equ	0xFDE
  5978                           postdec2	equ	0xFDD
  5979                           fsr2h	equ	0xFDA
  5980                           fsr2l	equ	0xFD9
  5981                           status	equ	0xFD8
  5982                           
  5983 ;; *************** function _lcd_putc *****************
  5984 ;; Defined at:
  5985 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  c               1    wreg     unsigned char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  c               1    7[COMRAM] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;Total ram usage:        1 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    3
  6006 ;; This function calls:
  6007 ;;		_lcd_gotoxy
  6008 ;;		_lcd_send_byte
  6009 ;; This function is called by:
  6010 ;;		_lcd_putrs
  6011 ;;		_lcd_puts
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text33
  6016  00224A                     __ptext33:
  6017                           	opt stack 0
  6018  00224A                     _lcd_putc:
  6019                           	opt stack 23
  6020                           
  6021                           ;incstack = 0
  6022                           ;lcd_putc@c stored from wreg
  6023  00224A  6E08               	movwf	lcd_putc@c,c
  6024                           
  6025                           ;unmc_lcd_216.c: 173: switch(c){
  6026  00224C  D018               	goto	l404
  6027  00224E                     
  6028                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  6029  00224E  0E01               	movlw	1
  6030  002250  6E03               	movwf	lcd_send_byte@n,c
  6031  002252  0E00               	movlw	0
  6032  002254  ECAE  F011         	call	_lcd_send_byte
  6033                           
  6034                           ;unmc_lcd_216.c: 176: break;
  6035  002258  0012               	return	
  6036  00225A                     
  6037                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  6038  00225A  0E02               	movlw	2
  6039  00225C  6E05               	movwf	lcd_gotoxy@y,c
  6040  00225E  0E01               	movlw	1
  6041  002260  ECFF  F011         	call	_lcd_gotoxy
  6042                           
  6043                           ;unmc_lcd_216.c: 179: break;
  6044  002264  0012               	return	
  6045  002266                     
  6046                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  6047  002266  0E10               	movlw	16
  6048  002268  6E03               	movwf	lcd_send_byte@n,c
  6049  00226A  0E00               	movlw	0
  6050  00226C  ECAE  F011         	call	_lcd_send_byte
  6051                           
  6052                           ;unmc_lcd_216.c: 182: break;
  6053  002270  0012               	return	
  6054  002272                     
  6055                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  6056  002272  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  6057  002276  0E01               	movlw	1
  6058  002278  ECAE  F011         	call	_lcd_send_byte
  6059                           
  6060                           ;unmc_lcd_216.c: 186: }
  6061                           
  6062                           ;unmc_lcd_216.c: 185: break;
  6063  00227C  0012               	return	
  6064  00227E                     l404:
  6065  00227E  5008               	movf	lcd_putc@c,w,c
  6066                           
  6067                           ; Switch size 1, requested type "space"
  6068                           ; Number of cases is 3, Range of values is 8 to 12
  6069                           ; switch strategies available:
  6070                           ; Name         Instructions Cycles
  6071                           ; simple_byte           10     6 (average)
  6072                           ;	Chosen strategy is simple_byte
  6073  002280  0A08               	xorlw	8	; case 8
  6074  002282  B4D8               	btfsc	status,2,c
  6075  002284  D7F0               	goto	l408
  6076  002286  0A02               	xorlw	2	; case 10
  6077  002288  B4D8               	btfsc	status,2,c
  6078  00228A  D7E7               	goto	l407
  6079  00228C  0A06               	xorlw	6	; case 12
  6080  00228E  B4D8               	btfsc	status,2,c
  6081  002290  D7DE               	goto	l405
  6082  002292  D7EF               	goto	l409
  6083  002294                     __end_of_lcd_putc:
  6084                           	opt stack 0
  6085                           tblptru	equ	0xFF8
  6086                           tblptrh	equ	0xFF7
  6087                           tblptrl	equ	0xFF6
  6088                           tablat	equ	0xFF5
  6089                           prodh	equ	0xFF4
  6090                           prodl	equ	0xFF3
  6091                           intcon	equ	0xFF2
  6092                           indf0	equ	0xFEF
  6093                           postinc0	equ	0xFEE
  6094                           fsr0h	equ	0xFEA
  6095                           fsr0l	equ	0xFE9
  6096                           wreg	equ	0xFE8
  6097                           postinc1	equ	0xFE6
  6098                           postdec1	equ	0xFE5
  6099                           fsr1h	equ	0xFE2
  6100                           fsr1l	equ	0xFE1
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           fsr2h	equ	0xFDA
  6105                           fsr2l	equ	0xFD9
  6106                           status	equ	0xFD8
  6107                           
  6108 ;; *************** function _lcd_gotoxy *****************
  6109 ;; Defined at:
  6110 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  x               1    wreg     unsigned char 
  6113 ;;  y               1    4[COMRAM] unsigned char 
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;  x               1    5[COMRAM] unsigned char 
  6116 ;;  address         1    6[COMRAM] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  1    wreg      void 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6126 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6130 ;;Total ram usage:        3 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    2
  6133 ;; This function calls:
  6134 ;;		_lcd_send_byte
  6135 ;; This function is called by:
  6136 ;;		_setDiaMesAnio
  6137 ;;		_setHoraMinutoSegundo
  6138 ;;		_titila_texto_insert_password
  6139 ;;		_guarda_numero_ingresado
  6140 ;;		_mostrar_presionar_a
  6141 ;;		_resetear_pantalla_ingresar_contrasenia
  6142 ;;		_cambiar_opcion
  6143 ;;		_activar_alarma
  6144 ;;		_ir_a_pantalla_edicion
  6145 ;;		_ir_a_pantalla_ingresar_contrasenia
  6146 ;;		_ir_a_pantalla_editar_contrasenia
  6147 ;;		_lcd_putc
  6148 ;;		_editar_hora_reloj_digital
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text34
  6153  0023FE                     __ptext34:
  6154                           	opt stack 0
  6155  0023FE                     _lcd_gotoxy:
  6156                           	opt stack 23
  6157                           
  6158                           ;incstack = 0
  6159                           ;lcd_gotoxy@x stored from wreg
  6160  0023FE  6E06               	movwf	lcd_gotoxy@x,c
  6161                           
  6162                           ;unmc_lcd_216.c: 159: int8 address;
  6163                           ;unmc_lcd_216.c: 161: if(y != 1)
  6164  002400  0405               	decf	lcd_gotoxy@y,w,c
  6165  002402  B4D8               	btfsc	status,2,c
  6166  002404  D002               	goto	l399
  6167                           
  6168                           ;unmc_lcd_216.c: 162: address = 0x40;
  6169  002406  0E40               	movlw	64
  6170  002408  D001               	goto	L3
  6171  00240A                     l399:
  6172                           
  6173                           ;unmc_lcd_216.c: 163: else
  6174                           ;unmc_lcd_216.c: 164: address=0;
  6175  00240A  0E00               	movlw	0
  6176  00240C                     L3:
  6177  00240C  6E07               	movwf	lcd_gotoxy@address,c
  6178                           
  6179                           ;unmc_lcd_216.c: 166: address += x-1;
  6180  00240E  0406               	decf	lcd_gotoxy@x,w,c
  6181  002410  2607               	addwf	lcd_gotoxy@address,f,c
  6182                           
  6183                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  6184  002412  5007               	movf	lcd_gotoxy@address,w,c
  6185  002414  0980               	iorlw	128
  6186  002416  6E03               	movwf	lcd_send_byte@n,c
  6187  002418  0E00               	movlw	0
  6188  00241A  ECAE  F011         	call	_lcd_send_byte
  6189  00241E  0012               	return		;funcret
  6190  002420                     __end_of_lcd_gotoxy:
  6191                           	opt stack 0
  6192                           tblptru	equ	0xFF8
  6193                           tblptrh	equ	0xFF7
  6194                           tblptrl	equ	0xFF6
  6195                           tablat	equ	0xFF5
  6196                           prodh	equ	0xFF4
  6197                           prodl	equ	0xFF3
  6198                           intcon	equ	0xFF2
  6199                           indf0	equ	0xFEF
  6200                           postinc0	equ	0xFEE
  6201                           fsr0h	equ	0xFEA
  6202                           fsr0l	equ	0xFE9
  6203                           wreg	equ	0xFE8
  6204                           postinc1	equ	0xFE6
  6205                           postdec1	equ	0xFE5
  6206                           fsr1h	equ	0xFE2
  6207                           fsr1l	equ	0xFE1
  6208                           indf2	equ	0xFDF
  6209                           postinc2	equ	0xFDE
  6210                           postdec2	equ	0xFDD
  6211                           fsr2h	equ	0xFDA
  6212                           fsr2l	equ	0xFD9
  6213                           status	equ	0xFD8
  6214                           
  6215 ;; *************** function _lcd_send_byte *****************
  6216 ;; Defined at:
  6217 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  address         1    wreg     unsigned char 
  6220 ;;  n               1    2[COMRAM] unsigned char 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  address         1    3[COMRAM] unsigned char 
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2, status,0, cstack
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6232 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6236 ;;Total ram usage:        2 bytes
  6237 ;; Hardware stack levels used:    1
  6238 ;; Hardware stack levels required when called:    1
  6239 ;; This function calls:
  6240 ;;		_Delay100TCYx
  6241 ;;		_lcd_send_nibble
  6242 ;; This function is called by:
  6243 ;;		_lcd_init
  6244 ;;		_lcd_gotoxy
  6245 ;;		_lcd_putc
  6246 ;;		_lcd_comand
  6247 ;;		_lcd_setcursor_vb
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text35
  6252  00235C                     __ptext35:
  6253                           	opt stack 0
  6254  00235C                     _lcd_send_byte:
  6255                           	opt stack 24
  6256                           
  6257                           ;incstack = 0
  6258                           ;lcd_send_byte@address stored from wreg
  6259  00235C  6E04               	movwf	lcd_send_byte@address,c
  6260                           
  6261                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  6262  00235E  968A               	bcf	3978,3,c	;volatile
  6263                           
  6264                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  6265  002360  0E02               	movlw	2
  6266  002362  EC46  F012         	call	_Delay100TCYx
  6267                           
  6268                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  6269  002366  9893               	bcf	3987,4,c	;volatile
  6270                           
  6271                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  6272  002368  9A93               	bcf	3987,5,c	;volatile
  6273                           
  6274                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  6275  00236A  9C93               	bcf	3987,6,c	;volatile
  6276                           
  6277                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  6278  00236C  9E93               	bcf	3987,7,c	;volatile
  6279                           
  6280                           ;unmc_lcd_216.c: 101: if(address)
  6281  00236E  5004               	movf	lcd_send_byte@address,w,c
  6282  002370  B4D8               	btfsc	status,2,c
  6283  002372  D002               	goto	l387
  6284                           
  6285                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  6286  002374  868A               	bsf	3978,3,c	;volatile
  6287  002376  D001               	goto	l388
  6288  002378                     l387:
  6289                           
  6290                           ;unmc_lcd_216.c: 103: else
  6291                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  6292  002378  968A               	bcf	3978,3,c	;volatile
  6293  00237A                     l388:
  6294                           
  6295                           ;unmc_lcd_216.c: 106: __nop();
  6296  00237A  F000               	nop	
  6297                           
  6298                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  6299  00237C  3803               	swapf	lcd_send_byte@n,w,c
  6300  00237E  0B0F               	andlw	15
  6301  002380  EC50  F00F         	call	_lcd_send_nibble
  6302                           
  6303                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  6304  002384  5003               	movf	lcd_send_byte@n,w,c
  6305  002386  0B0F               	andlw	15
  6306  002388  EC50  F00F         	call	_lcd_send_nibble
  6307  00238C  0012               	return		;funcret
  6308  00238E                     __end_of_lcd_send_byte:
  6309                           	opt stack 0
  6310                           tblptru	equ	0xFF8
  6311                           tblptrh	equ	0xFF7
  6312                           tblptrl	equ	0xFF6
  6313                           tablat	equ	0xFF5
  6314                           prodh	equ	0xFF4
  6315                           prodl	equ	0xFF3
  6316                           intcon	equ	0xFF2
  6317                           indf0	equ	0xFEF
  6318                           postinc0	equ	0xFEE
  6319                           fsr0h	equ	0xFEA
  6320                           fsr0l	equ	0xFE9
  6321                           wreg	equ	0xFE8
  6322                           postinc1	equ	0xFE6
  6323                           postdec1	equ	0xFE5
  6324                           fsr1h	equ	0xFE2
  6325                           fsr1l	equ	0xFE1
  6326                           indf2	equ	0xFDF
  6327                           postinc2	equ	0xFDE
  6328                           postdec2	equ	0xFDD
  6329                           fsr2h	equ	0xFDA
  6330                           fsr2l	equ	0xFD9
  6331                           status	equ	0xFD8
  6332                           
  6333 ;; *************** function _lcd_send_nibble *****************
  6334 ;; Defined at:
  6335 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  nibble          1    wreg     unsigned char 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  nibble          1    1[COMRAM] unsigned char 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6352 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6353 ;;Total ram usage:        2 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_lcd_send_byte
  6359 ;;		_lcd_init
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text36
  6364  001EA0                     __ptext36:
  6365                           	opt stack 0
  6366  001EA0                     _lcd_send_nibble:
  6367                           	opt stack 24
  6368                           
  6369                           ;incstack = 0
  6370                           ;lcd_send_nibble@nibble stored from wreg
  6371  001EA0  6E02               	movwf	lcd_send_nibble@nibble,c
  6372                           
  6373                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  6374  001EA2  A002               	btfss	lcd_send_nibble@nibble,0,c
  6375  001EA4  D003               	goto	u1830
  6376  001EA6  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6377  001EA8  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6378  001EAA  D001               	goto	u1848
  6379  001EAC                     u1830:
  6380  001EAC  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6381  001EAE                     u1848:
  6382  001EAE  3A01               	swapf	??_lcd_send_nibble,f,c
  6383  001EB0  508A               	movf	3978,w,c	;volatile
  6384  001EB2  1801               	xorwf	??_lcd_send_nibble,w,c
  6385  001EB4  0BEF               	andlw	-17
  6386  001EB6  1801               	xorwf	??_lcd_send_nibble,w,c
  6387  001EB8  6E8A               	movwf	3978,c	;volatile
  6388                           
  6389                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  6390  001EBA  A202               	btfss	lcd_send_nibble@nibble,1,c
  6391  001EBC  D003               	goto	u1850
  6392  001EBE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6393  001EC0  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6394  001EC2  D001               	goto	u1868
  6395  001EC4                     u1850:
  6396  001EC4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6397  001EC6                     u1868:
  6398  001EC6  3A01               	swapf	??_lcd_send_nibble,f,c
  6399  001EC8  4601               	rlncf	??_lcd_send_nibble,f,c
  6400  001ECA  508A               	movf	3978,w,c	;volatile
  6401  001ECC  1801               	xorwf	??_lcd_send_nibble,w,c
  6402  001ECE  0BDF               	andlw	-33
  6403  001ED0  1801               	xorwf	??_lcd_send_nibble,w,c
  6404  001ED2  6E8A               	movwf	3978,c	;volatile
  6405                           
  6406                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  6407  001ED4  A402               	btfss	lcd_send_nibble@nibble,2,c
  6408  001ED6  D003               	goto	u1870
  6409  001ED8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6410  001EDA  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6411  001EDC  D001               	goto	u1888
  6412  001EDE                     u1870:
  6413  001EDE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6414  001EE0                     u1888:
  6415  001EE0  3A01               	swapf	??_lcd_send_nibble,f,c
  6416  001EE2  4601               	rlncf	??_lcd_send_nibble,f,c
  6417  001EE4  4601               	rlncf	??_lcd_send_nibble,f,c
  6418  001EE6  508A               	movf	3978,w,c	;volatile
  6419  001EE8  1801               	xorwf	??_lcd_send_nibble,w,c
  6420  001EEA  0BBF               	andlw	-65
  6421  001EEC  1801               	xorwf	??_lcd_send_nibble,w,c
  6422  001EEE  6E8A               	movwf	3978,c	;volatile
  6423                           
  6424                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  6425  001EF0  A602               	btfss	lcd_send_nibble@nibble,3,c
  6426  001EF2  D003               	goto	u1890
  6427  001EF4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6428  001EF6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6429  001EF8  D001               	goto	u1908
  6430  001EFA                     u1890:
  6431  001EFA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6432  001EFC                     u1908:
  6433  001EFC  3201               	rrcf	??_lcd_send_nibble,f,c
  6434  001EFE  3201               	rrcf	??_lcd_send_nibble,f,c
  6435  001F00  508A               	movf	3978,w,c	;volatile
  6436  001F02  1801               	xorwf	??_lcd_send_nibble,w,c
  6437  001F04  0B7F               	andlw	-129
  6438  001F06  1801               	xorwf	??_lcd_send_nibble,w,c
  6439  001F08  6E8A               	movwf	3978,c	;volatile
  6440                           
  6441                           ;unmc_lcd_216.c: 32: __nop();
  6442  001F0A  F000               	nop	
  6443                           
  6444                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  6445  001F0C  848A               	bsf	3978,2,c	;volatile
  6446                           
  6447                           ;unmc_lcd_216.c: 34: __nop();__nop();
  6448  001F0E  F000               	nop	
  6449  001F10  F000               	nop	
  6450                           
  6451                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  6452  001F12  948A               	bcf	3978,2,c	;volatile
  6453  001F14  0012               	return		;funcret
  6454  001F16                     __end_of_lcd_send_nibble:
  6455                           	opt stack 0
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           indf0	equ	0xFEF
  6464                           postinc0	equ	0xFEE
  6465                           fsr0h	equ	0xFEA
  6466                           fsr0l	equ	0xFE9
  6467                           wreg	equ	0xFE8
  6468                           postinc1	equ	0xFE6
  6469                           postdec1	equ	0xFE5
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           indf2	equ	0xFDF
  6473                           postinc2	equ	0xFDE
  6474                           postdec2	equ	0xFDD
  6475                           fsr2h	equ	0xFDA
  6476                           fsr2l	equ	0xFD9
  6477                           status	equ	0xFD8
  6478                           
  6479 ;; *************** function _Delay100TCYx *****************
  6480 ;; Defined at:
  6481 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  unit            1    wreg     unsigned char 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  unit            1    0[COMRAM] unsigned char 
  6486 ;; Return value:  Size  Location     Type
  6487 ;;                  1    wreg      void 
  6488 ;; Registers used:
  6489 ;;		wreg
  6490 ;; Tracked objects:
  6491 ;;		On entry : 0/0
  6492 ;;		On exit  : 0/0
  6493 ;;		Unchanged: 0/0
  6494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;Total ram usage:        1 bytes
  6500 ;; Hardware stack levels used:    1
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_lcd_send_byte
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text37
  6509  00248C                     __ptext37:
  6510                           	opt stack 0
  6511  00248C                     _Delay100TCYx:
  6512                           	opt stack 24
  6513                           
  6514                           ;incstack = 0
  6515                           ;Delay100TCYx@unit stored from wreg
  6516  00248C  6E01               	movwf	Delay100TCYx@unit,c
  6517  00248E                     l778:
  6518  00248E  0E21               	movlw	33
  6519  002490                     u3797:
  6520  002490  2EE8               	decfsz	wreg,f,c
  6521  002492  D7FE               	bra	u3797
  6522  002494  F000               	nop	
  6523  002496  2E01               	decfsz	Delay100TCYx@unit,f,c
  6524  002498  D7FA               	goto	l778
  6525  00249A  0012               	return	
  6526  00249C                     __end_of_Delay100TCYx:
  6527                           	opt stack 0
  6528                           tblptru	equ	0xFF8
  6529                           tblptrh	equ	0xFF7
  6530                           tblptrl	equ	0xFF6
  6531                           tablat	equ	0xFF5
  6532                           prodh	equ	0xFF4
  6533                           prodl	equ	0xFF3
  6534                           intcon	equ	0xFF2
  6535                           indf0	equ	0xFEF
  6536                           postinc0	equ	0xFEE
  6537                           fsr0h	equ	0xFEA
  6538                           fsr0l	equ	0xFE9
  6539                           wreg	equ	0xFE8
  6540                           postinc1	equ	0xFE6
  6541                           postdec1	equ	0xFE5
  6542                           fsr1h	equ	0xFE2
  6543                           fsr1l	equ	0xFE1
  6544                           indf2	equ	0xFDF
  6545                           postinc2	equ	0xFDE
  6546                           postdec2	equ	0xFDD
  6547                           fsr2h	equ	0xFDA
  6548                           fsr2l	equ	0xFD9
  6549                           status	equ	0xFD8
  6550                           
  6551 ;; *************** function _Read_RTC *****************
  6552 ;; Defined at:
  6553 ;;		line 111 in file "../../headers\unmc_rtcc_01.h"
  6554 ;; Parameters:    Size  Location     Type
  6555 ;;		None
  6556 ;; Auto vars:     Size  Location     Type
  6557 ;;		None
  6558 ;; Return value:  Size  Location     Type
  6559 ;;                  1    wreg      void 
  6560 ;; Registers used:
  6561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6562 ;; Tracked objects:
  6563 ;;		On entry : 0/0
  6564 ;;		On exit  : 0/0
  6565 ;;		Unchanged: 0/0
  6566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6571 ;;Total ram usage:        0 bytes
  6572 ;; Hardware stack levels used:    1
  6573 ;; Hardware stack levels required when called:    1
  6574 ;; This function calls:
  6575 ;;		_RtccReadDate
  6576 ;;		_RtccReadTime
  6577 ;; This function is called by:
  6578 ;;		_ir_a_pantalla_edicion
  6579 ;;		_main
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text38
  6584  0018BE                     __ptext38:
  6585                           	opt stack 0
  6586  0018BE                     _Read_RTC:
  6587                           	opt stack 25
  6588                           
  6589                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  6590                           
  6591                           ;incstack = 0
  6592  0018BE  0E48               	movlw	low _RtccTime
  6593  0018C0  6E01               	movwf	RtccReadTime@pTm,c
  6594  0018C2  0E00               	movlw	high _RtccTime
  6595  0018C4  6E02               	movwf	RtccReadTime@pTm+1,c
  6596  0018C6  ECC3  F00F         	call	_RtccReadTime	;wreg free
  6597                           
  6598                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  6599  0018CA  5049               	movf	_RtccTime+1,w,c
  6600  0018CC  0B0F               	andlw	15
  6601  0018CE  6E5E               	movwf	_segundo_u,c
  6602                           
  6603                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  6604  0018D0  3849               	swapf	_RtccTime+1,w,c
  6605  0018D2  0B0F               	andlw	15
  6606  0018D4  0B0F               	andlw	15
  6607  0018D6  6E5D               	movwf	_segundo_d,c
  6608                           
  6609                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  6610  0018D8  504A               	movf	_RtccTime+2,w,c
  6611  0018DA  0B0F               	andlw	15
  6612  0018DC  0100               	movlb	0	; () banked
  6613  0018DE  6FB3               	movwf	_minuto_u& (0+255),b
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  6617  0018E0  384A               	swapf	_RtccTime+2,w,c
  6618  0018E2  0B0F               	andlw	15
  6619  0018E4  0B0F               	andlw	15
  6620  0018E6  6E5C               	movwf	_minuto_d,c
  6621                           
  6622                           ; BSR set to: 0
  6623                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  6624  0018E8  504B               	movf	_RtccTime+3,w,c
  6625  0018EA  0B0F               	andlw	15
  6626  0018EC  0100               	movlb	0	; () banked
  6627  0018EE  6FB2               	movwf	_hora_u& (0+255),b
  6628                           
  6629                           ; BSR set to: 0
  6630                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  6631  0018F0  384B               	swapf	_RtccTime+3,w,c
  6632  0018F2  0B0F               	andlw	15
  6633  0018F4  0B0F               	andlw	15
  6634  0018F6  6E5B               	movwf	_hora_d,c
  6635                           
  6636                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  6637  0018F8  0E44               	movlw	low _RtccDate
  6638  0018FA  6E01               	movwf	RtccReadDate@pDt,c
  6639  0018FC  0E00               	movlw	high _RtccDate
  6640  0018FE  6E02               	movwf	RtccReadDate@pDt+1,c
  6641  001900  ECCB  F00D         	call	_RtccReadDate	;wreg free
  6642                           
  6643                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  6644  001904  5045               	movf	_RtccDate+1,w,c
  6645  001906  0B0F               	andlw	15
  6646  001908  0100               	movlb	0	; () banked
  6647  00190A  6FB1               	movwf	_fecha_u& (0+255),b
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  6651  00190C  3845               	swapf	_RtccDate+1,w,c
  6652  00190E  0B0F               	andlw	15
  6653  001910  0B0F               	andlw	15
  6654  001912  6E5A               	movwf	_fecha_d,c
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  6658  001914  5046               	movf	_RtccDate+2,w,c
  6659  001916  0B0F               	andlw	15
  6660  001918  0100               	movlb	0	; () banked
  6661  00191A  6FB0               	movwf	_mes_u& (0+255),b
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  6665  00191C  3846               	swapf	_RtccDate+2,w,c
  6666  00191E  0B0F               	andlw	15
  6667  001920  0B0F               	andlw	15
  6668  001922  6E59               	movwf	_mes_d,c
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  6672  001924  C044  F0AF         	movff	_RtccDate,_dia_semana
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  6676  001928  5047               	movf	_RtccDate+3,w,c
  6677  00192A  0B0F               	andlw	15
  6678  00192C  0100               	movlb	0	; () banked
  6679  00192E  6FAE               	movwf	_anio_u& (0+255),b
  6680                           
  6681                           ; BSR set to: 0
  6682                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  6683  001930  3847               	swapf	_RtccDate+3,w,c
  6684  001932  0B0F               	andlw	15
  6685  001934  0B0F               	andlw	15
  6686  001936  6E58               	movwf	_anio_d,c
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  6690  001938  505D               	movf	_segundo_d,w,c
  6691  00193A  0D0A               	mullw	10
  6692  00193C  505E               	movf	_segundo_u,w,c
  6693  00193E  24F3               	addwf	prodl,w,c
  6694  001940  6E35               	movwf	_segundo,c
  6695  001942  0E00               	movlw	0
  6696  001944  20F4               	addwfc	prodh,w,c
  6697  001946  6E36               	movwf	_segundo+1,c
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  6701  001948  505C               	movf	_minuto_d,w,c
  6702  00194A  0D0A               	mullw	10
  6703  00194C  0100               	movlb	0	; () banked
  6704  00194E  51B3               	movf	_minuto_u& (0+255),w,b
  6705  001950  24F3               	addwf	prodl,w,c
  6706  001952  6E4C               	movwf	_minuto,c
  6707  001954  0100               	movlb	0	; () banked
  6708  001956  0E00               	movlw	0
  6709  001958  20F4               	addwfc	prodh,w,c
  6710  00195A  6E4D               	movwf	_minuto+1,c
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  6714  00195C  505B               	movf	_hora_d,w,c
  6715  00195E  0D0A               	mullw	10
  6716  001960  0100               	movlb	0	; () banked
  6717  001962  51B2               	movf	_hora_u& (0+255),w,b
  6718  001964  24F3               	addwf	prodl,w,c
  6719  001966  6E4E               	movwf	_hora,c
  6720  001968  0100               	movlb	0	; () banked
  6721  00196A  0E00               	movlw	0
  6722  00196C  20F4               	addwfc	prodh,w,c
  6723  00196E  6E4F               	movwf	_hora+1,c
  6724                           
  6725                           ; BSR set to: 0
  6726                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  6727  001970  505A               	movf	_fecha_d,w,c
  6728  001972  0D0A               	mullw	10
  6729  001974  0100               	movlb	0	; () banked
  6730  001976  51B1               	movf	_fecha_u& (0+255),w,b
  6731  001978  24F3               	addwf	prodl,w,c
  6732  00197A  6E50               	movwf	_dia,c
  6733  00197C  0100               	movlb	0	; () banked
  6734  00197E  0E00               	movlw	0
  6735  001980  20F4               	addwfc	prodh,w,c
  6736  001982  6E51               	movwf	_dia+1,c
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  6740  001984  C0AF  F052         	movff	_dia_semana,_diasem
  6741  001988  6A53               	clrf	_diasem+1,c
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  6745  00198A  5059               	movf	_mes_d,w,c
  6746  00198C  0D0A               	mullw	10
  6747  00198E  0100               	movlb	0	; () banked
  6748  001990  51B0               	movf	_mes_u& (0+255),w,b
  6749  001992  24F3               	addwf	prodl,w,c
  6750  001994  6E54               	movwf	_mes,c
  6751  001996  0100               	movlb	0	; () banked
  6752  001998  0E00               	movlw	0
  6753  00199A  20F4               	addwfc	prodh,w,c
  6754  00199C  6E55               	movwf	_mes+1,c
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  6758  00199E  5058               	movf	_anio_d,w,c
  6759  0019A0  0D0A               	mullw	10
  6760  0019A2  0100               	movlb	0	; () banked
  6761  0019A4  51AE               	movf	_anio_u& (0+255),w,b
  6762  0019A6  24F3               	addwf	prodl,w,c
  6763  0019A8  6E56               	movwf	_anio,c
  6764  0019AA  0100               	movlb	0	; () banked
  6765  0019AC  0E00               	movlw	0
  6766  0019AE  20F4               	addwfc	prodh,w,c
  6767  0019B0  6E57               	movwf	_anio+1,c
  6768                           
  6769                           ; BSR set to: 0
  6770  0019B2  0012               	return		;funcret
  6771  0019B4                     __end_of_Read_RTC:
  6772                           	opt stack 0
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           indf0	equ	0xFEF
  6781                           postinc0	equ	0xFEE
  6782                           fsr0h	equ	0xFEA
  6783                           fsr0l	equ	0xFE9
  6784                           wreg	equ	0xFE8
  6785                           postinc1	equ	0xFE6
  6786                           postdec1	equ	0xFE5
  6787                           fsr1h	equ	0xFE2
  6788                           fsr1l	equ	0xFE1
  6789                           indf2	equ	0xFDF
  6790                           postinc2	equ	0xFDE
  6791                           postdec2	equ	0xFDD
  6792                           fsr2h	equ	0xFDA
  6793                           fsr2l	equ	0xFD9
  6794                           status	equ	0xFD8
  6795                           
  6796 ;; *************** function _RtccReadTime *****************
  6797 ;; Defined at:
  6798 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  pTm             2    0[COMRAM] PTR struct .
  6801 ;;		 -> RtccTime(4), 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  rTD0            8   10[COMRAM] struct .
  6804 ;;  rTD1            8    2[COMRAM] struct .
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;Total ram usage:       18 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_Read_RTC
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text39
  6828  001F86                     __ptext39:
  6829                           	opt stack 0
  6830  001F86                     _RtccReadTime:
  6831                           	opt stack 25
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;incstack = 0
  6835  001F86  0EFC               	movlw	252
  6836  001F88  010F               	movlb	15	; () banked
  6837  001F8A  173F               	andwf	63,f,b	;volatile
  6838                           
  6839                           ; BSR set to: 15
  6840  001F8C  010F               	movlb	15	; () banked
  6841  001F8E  813F               	bsf	63,0,b	;volatile
  6842                           
  6843                           ; BSR set to: 15
  6844  001F90  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  6845                           
  6846                           ; BSR set to: 15
  6847  001F94  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  6848                           
  6849                           ; BSR set to: 15
  6850  001F98  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  6851                           
  6852                           ; BSR set to: 15
  6853  001F9C  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  6854                           
  6855                           ; BSR set to: 15
  6856  001FA0  0EFC               	movlw	252
  6857  001FA2  010F               	movlb	15	; () banked
  6858  001FA4  173F               	andwf	63,f,b	;volatile
  6859  001FA6  010F               	movlb	15	; () banked
  6860  001FA8  813F               	bsf	63,0,b	;volatile
  6861                           
  6862                           ; BSR set to: 15
  6863  001FAA  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  6864                           
  6865                           ; BSR set to: 15
  6866  001FAE  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  6867                           
  6868                           ; BSR set to: 15
  6869  001FB2  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  6870                           
  6871                           ; BSR set to: 15
  6872  001FB6  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  6873                           
  6874                           ; BSR set to: 15
  6875  001FBA  5009               	movf	RtccReadTime@rTD1+6,w,c
  6876  001FBC  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  6877  001FBE  A4D8               	btfss	status,2,c
  6878  001FC0  D7E2               	goto	_RtccReadTime
  6879                           
  6880                           ; BSR set to: 15
  6881                           
  6882                           ; BSR set to: 15
  6883  001FC2  EE20 F003          	lfsr	2,3
  6884  001FC6  5001               	movf	RtccReadTime@pTm,w,c
  6885  001FC8  26D9               	addwf	fsr2l,f,c
  6886  001FCA  5002               	movf	RtccReadTime@pTm+1,w,c
  6887  001FCC  22DA               	addwfc	fsr2h,f,c
  6888  001FCE  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  6889  001FD2  EE20 F002          	lfsr	2,2
  6890  001FD6  5001               	movf	RtccReadTime@pTm,w,c
  6891  001FD8  26D9               	addwf	fsr2l,f,c
  6892  001FDA  5002               	movf	RtccReadTime@pTm+1,w,c
  6893  001FDC  22DA               	addwfc	fsr2h,f,c
  6894  001FDE  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  6895  001FE2  EE20 F001          	lfsr	2,1
  6896  001FE6  5001               	movf	RtccReadTime@pTm,w,c
  6897  001FE8  26D9               	addwf	fsr2l,f,c
  6898  001FEA  5002               	movf	RtccReadTime@pTm+1,w,c
  6899  001FEC  22DA               	addwfc	fsr2h,f,c
  6900  001FEE  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  6901                           
  6902                           ; BSR set to: 15
  6903  001FF2  0012               	return		;funcret
  6904  001FF4                     __end_of_RtccReadTime:
  6905                           	opt stack 0
  6906                           tblptru	equ	0xFF8
  6907                           tblptrh	equ	0xFF7
  6908                           tblptrl	equ	0xFF6
  6909                           tablat	equ	0xFF5
  6910                           prodh	equ	0xFF4
  6911                           prodl	equ	0xFF3
  6912                           intcon	equ	0xFF2
  6913                           indf0	equ	0xFEF
  6914                           postinc0	equ	0xFEE
  6915                           fsr0h	equ	0xFEA
  6916                           fsr0l	equ	0xFE9
  6917                           wreg	equ	0xFE8
  6918                           postinc1	equ	0xFE6
  6919                           postdec1	equ	0xFE5
  6920                           fsr1h	equ	0xFE2
  6921                           fsr1l	equ	0xFE1
  6922                           indf2	equ	0xFDF
  6923                           postinc2	equ	0xFDE
  6924                           postdec2	equ	0xFDD
  6925                           fsr2h	equ	0xFDA
  6926                           fsr2l	equ	0xFD9
  6927                           status	equ	0xFD8
  6928                           
  6929 ;; *************** function _RtccReadDate *****************
  6930 ;; Defined at:
  6931 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  pDt             2    0[COMRAM] PTR struct .
  6934 ;;		 -> RtccDate(4), 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  rTD0            8   10[COMRAM] struct .
  6937 ;;  rTD1            8    2[COMRAM] struct .
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6948 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6950 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;Total ram usage:       18 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_Read_RTC
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text40
  6961  001B96                     __ptext40:
  6962                           	opt stack 0
  6963  001B96                     _RtccReadDate:
  6964                           	opt stack 25
  6965                           
  6966                           ; BSR set to: 15
  6967                           ;incstack = 0
  6968  001B96  0EFC               	movlw	252
  6969  001B98  010F               	movlb	15	; () banked
  6970  001B9A  173F               	andwf	63,f,b	;volatile
  6971  001B9C  0E03               	movlw	3
  6972  001B9E  010F               	movlb	15	; () banked
  6973  001BA0  133F               	iorwf	63,f,b	;volatile
  6974                           
  6975                           ; BSR set to: 15
  6976  001BA2  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  6977                           
  6978                           ; BSR set to: 15
  6979  001BA6  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  6980                           
  6981                           ; BSR set to: 15
  6982  001BAA  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  6983                           
  6984                           ; BSR set to: 15
  6985  001BAE  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  6986                           
  6987                           ; BSR set to: 15
  6988  001BB2  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  6989                           
  6990                           ; BSR set to: 15
  6991  001BB6  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  6992  001BBA  0EFC               	movlw	252
  6993  001BBC  010F               	movlb	15	; () banked
  6994  001BBE  173F               	andwf	63,f,b	;volatile
  6995  001BC0  0E03               	movlw	3
  6996  001BC2  010F               	movlb	15	; () banked
  6997  001BC4  133F               	iorwf	63,f,b	;volatile
  6998                           
  6999                           ; BSR set to: 15
  7000  001BC6  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  7001                           
  7002                           ; BSR set to: 15
  7003  001BCA  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  7004                           
  7005                           ; BSR set to: 15
  7006  001BCE  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  7007                           
  7008                           ; BSR set to: 15
  7009  001BD2  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  7010                           
  7011                           ; BSR set to: 15
  7012  001BD6  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  7013                           
  7014                           ; BSR set to: 15
  7015  001BDA  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  7016  001BDE  5005               	movf	RtccReadDate@rTD1+2,w,c
  7017  001BE0  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  7018  001BE2  A4D8               	btfss	status,2,c
  7019  001BE4  D7D8               	goto	_RtccReadDate
  7020                           
  7021                           ; BSR set to: 15
  7022                           
  7023                           ; BSR set to: 15
  7024  001BE6  EE20 F001          	lfsr	2,1
  7025  001BEA  5001               	movf	RtccReadDate@pDt,w,c
  7026  001BEC  26D9               	addwf	fsr2l,f,c
  7027  001BEE  5002               	movf	RtccReadDate@pDt+1,w,c
  7028  001BF0  22DA               	addwfc	fsr2h,f,c
  7029  001BF2  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  7030  001BF6  EE20 F002          	lfsr	2,2
  7031  001BFA  5001               	movf	RtccReadDate@pDt,w,c
  7032  001BFC  26D9               	addwf	fsr2l,f,c
  7033  001BFE  5002               	movf	RtccReadDate@pDt+1,w,c
  7034  001C00  22DA               	addwfc	fsr2h,f,c
  7035  001C02  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  7036                           
  7037                           ; BSR set to: 15
  7038  001C06  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  7039  001C0A  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  7040  001C0E  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  7041                           
  7042                           ; BSR set to: 15
  7043  001C12  EE20 F003          	lfsr	2,3
  7044  001C16  5001               	movf	RtccReadDate@pDt,w,c
  7045  001C18  26D9               	addwf	fsr2l,f,c
  7046  001C1A  5002               	movf	RtccReadDate@pDt+1,w,c
  7047  001C1C  22DA               	addwfc	fsr2h,f,c
  7048  001C1E  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  7049                           
  7050                           ; BSR set to: 15
  7051  001C22  0012               	return		;funcret
  7052  001C24                     __end_of_RtccReadDate:
  7053                           	opt stack 0
  7054                           tblptru	equ	0xFF8
  7055                           tblptrh	equ	0xFF7
  7056                           tblptrl	equ	0xFF6
  7057                           tablat	equ	0xFF5
  7058                           prodh	equ	0xFF4
  7059                           prodl	equ	0xFF3
  7060                           intcon	equ	0xFF2
  7061                           indf0	equ	0xFEF
  7062                           postinc0	equ	0xFEE
  7063                           fsr0h	equ	0xFEA
  7064                           fsr0l	equ	0xFE9
  7065                           wreg	equ	0xFE8
  7066                           postinc1	equ	0xFE6
  7067                           postdec1	equ	0xFE5
  7068                           fsr1h	equ	0xFE2
  7069                           fsr1l	equ	0xFE1
  7070                           indf2	equ	0xFDF
  7071                           postinc2	equ	0xFDE
  7072                           postdec2	equ	0xFDD
  7073                           fsr2h	equ	0xFDA
  7074                           fsr2l	equ	0xFD9
  7075                           status	equ	0xFD8
  7076                           tblptru	equ	0xFF8
  7077                           tblptrh	equ	0xFF7
  7078                           tblptrl	equ	0xFF6
  7079                           tablat	equ	0xFF5
  7080                           prodh	equ	0xFF4
  7081                           prodl	equ	0xFF3
  7082                           intcon	equ	0xFF2
  7083                           indf0	equ	0xFEF
  7084                           postinc0	equ	0xFEE
  7085                           fsr0h	equ	0xFEA
  7086                           fsr0l	equ	0xFE9
  7087                           wreg	equ	0xFE8
  7088                           postinc1	equ	0xFE6
  7089                           postdec1	equ	0xFE5
  7090                           fsr1h	equ	0xFE2
  7091                           fsr1l	equ	0xFE1
  7092                           indf2	equ	0xFDF
  7093                           postinc2	equ	0xFDE
  7094                           postdec2	equ	0xFDD
  7095                           fsr2h	equ	0xFDA
  7096                           fsr2l	equ	0xFD9
  7097                           status	equ	0xFD8
  7098                           
  7099                           	psect	rparam
  7100  0000                     tblptru	equ	0xFF8
  7101                           tblptrh	equ	0xFF7
  7102                           tblptrl	equ	0xFF6
  7103                           tablat	equ	0xFF5
  7104                           prodh	equ	0xFF4
  7105                           prodl	equ	0xFF3
  7106                           intcon	equ	0xFF2
  7107                           indf0	equ	0xFEF
  7108                           postinc0	equ	0xFEE
  7109                           fsr0h	equ	0xFEA
  7110                           fsr0l	equ	0xFE9
  7111                           wreg	equ	0xFE8
  7112                           postinc1	equ	0xFE6
  7113                           postdec1	equ	0xFE5
  7114                           fsr1h	equ	0xFE2
  7115                           fsr1l	equ	0xFE1
  7116                           indf2	equ	0xFDF
  7117                           postinc2	equ	0xFDE
  7118                           postdec2	equ	0xFDD
  7119                           fsr2h	equ	0xFDA
  7120                           fsr2l	equ	0xFD9
  7121                           status	equ	0xFD8


Data Sizes:
    Strings     188
    Constant    14
    Data        32
    BSS         87
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      95
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 3775
		 -> STR_26(CODE[7]), RAM(DATA[3775]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_25(CODE[3]), STR_16(CODE[5]), STR_13(CODE[5]), STR_8(CODE[15]), 
		 -> STR_7(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_24(CODE[17]), STR_23(CODE[21]), STR_22(CODE[17]), STR_21(CODE[17]), 
		 -> STR_20(CODE[9]), STR_19(CODE[8]), STR_18(CODE[17]), STR_17(CODE[17]), 
		 -> STR_15(CODE[15]), STR_14(CODE[8]), STR_12(CODE[9]), STR_11(CODE[9]), 
		 -> STR_10(CODE[9]), STR_9(CODE[7]), buffer2(BANK0[20]), 

    guarda_numero_ingresado@num	PTR int  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    array_seleccionar	PTR unsigned char [6] size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_send_byte
    _titila_texto_insert_password->_lcd_putrs
    _resetear_pantalla_ingresar_contrasenia->_lcd_putrs
    _mostrar_presionar_a->_lcd_putrs
    _setHoraMinutoSegundo->_sprintf
    _setDiaMesAnio->_sprintf
    _Write_RTC->_RtccWriteDate
    _seleccionar_opcion->_ir_a_pantalla_editar_contrasenia
    _ir_a_pantalla_editar_contrasenia->_ingreso_numero
    _ingreso_numero->_guarda_numero_ingresado
    _guarda_numero_ingresado->_sprintf
    _activar_alarma->_lcd_putrs
    _lcd_comand->_lcd_send_byte
    _cambiar_opcion->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  158687
                                             45 COMRAM     1     1      0
                           _Read_RTC
              _ir_a_pantalla_inicial
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   28464
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                  _set_reloj_digital
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     925
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ir_a_pantalla_inicial                                0     0      0  129231
                  _set_reloj_digital
_si_apreta_numero_va_a_pantalla_cont
       _titila_texto_insert_password
 ---------------------------------------------------------------------------------
 (2) _titila_texto_insert_password                         1     1      0    6835
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _si_apreta_numero_va_a_pantalla_contrasenia           0     0      0   98056
 _ir_a_pantalla_ingresar_contrasenia
 ---------------------------------------------------------------------------------
 (3) _ir_a_pantalla_ingresar_contrasenia                   0     0      0   98056
                     _ingreso_numero
              _ir_a_pantalla_edicion
                         _lcd_gotoxy
                          _lcd_putrs
                _mostrar_presionar_a
_resetear_pantalla_ingresar_contrase
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _verificar_contrasenia                               10     8      2     115
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (4) _resetear_pantalla_ingresar_contrasenia               2     2      0    6903
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _mostrar_presionar_a                                  0     0      0    6835
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _ir_a_pantalla_edicion                                0     0      0   66863
                           _Read_RTC
                     _cambiar_opcion
                         _lcd_gotoxy
                          _lcd_putrs
                 _seleccionar_opcion
                  _set_reloj_digital
 ---------------------------------------------------------------------------------
 (2) _set_reloj_digital                                    0     0      0   24340
                      _setDiaMesAnio
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (3) _setHoraMinutoSegundo                                 0     0      0   12170
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _setDiaMesAnio                                        0     0      0   12170
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (5) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (5) _seleccionar_opcion                                   0     0      0   24995
                     _activar_alarma
   _ir_a_pantalla_editar_contrasenia
 ---------------------------------------------------------------------------------
 (6) _ir_a_pantalla_editar_contrasenia                     2     2      0   17430
                                             43 COMRAM     2     2      0
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (7) _ingreso_numero                                       2     2      0   10505
                                             41 COMRAM     2     2      0
            _guarda_numero_ingresado
 ---------------------------------------------------------------------------------
 (8) _guarda_numero_ingresado                              2     0      2   10505
                                             39 COMRAM     2     0      2
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _activar_alarma                                       1     1      0    7565
                                             10 COMRAM     1     1      0
                         _lcd_comand
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _cambiar_opcion                                       1     1      0    9701
                                             39 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             31    21     10    2866
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     411
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    4538
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    3049
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    2297
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (6) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (6) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _ir_a_pantalla_inicial
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _si_apreta_numero_va_a_pantalla_contrasenia
       _ir_a_pantalla_ingresar_contrasenia
         _ingreso_numero
           _guarda_numero_ingresado
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _ir_a_pantalla_edicion
           _Read_RTC
             _RtccReadDate
             _RtccReadTime
           _cambiar_opcion
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _seleccionar_opcion
             _activar_alarma
               _lcd_comand
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
             _ir_a_pantalla_editar_contrasenia
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _set_reloj_digital
             _setDiaMesAnio
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                 _isdigit
             _setHoraMinutoSegundo
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                 _isdigit
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _mostrar_presionar_a
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _resetear_pantalla_ingresar_contrasenia
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _verificar_contrasenia
     _titila_texto_insert_password
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      54       5       52.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     2E      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B3       6        0.0%
DATA                 0      0      B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Oct 20 21:05:59 2017

                                                  _a 003D                                                    _b 003B  
                                                  _c 0039                                                    _i 0041  
                                                  _j 003F                                                    _k 0037  
                                     ?_lcd_send_byte 0003                                         ___awdiv@sign 0006  
                         guarda_numero_ingresado@num 0028                                  ___wmul@multiplicand 0003  
                                        lcd_comand@d 0005                                         __CFG_CP0$OFF 000000  
                                                l202 1406                                                  l203 13F6  
                                                l220 14B0                                                  l221 14A0  
                                                l214 147A                                                  l215 146A  
                                                l232 1526                                                  l208 143C  
                                                l312 1C8A                                                  l233 1516  
                                                l209 142C                                                  l305 1C68  
                                                l226 14E6                                                  l162 1F42  
                                                l251 19EC                                                  l227 14D6  
                                                l404 227E                                                  l260 1A1C  
                                                l252 19DC                                                  l332 1B34  
                                                l405 224E                                                  l333 1B4A  
                                                l157 1D50                                                  l190 1392  
                                                l158 1D6C                                                  l342 1DCA  
                                                l407 225A                                                  l191 1382  
                                                l335 1B62                                                  l343 1E20  
                                                l408 2266                                                  l440 0FD6  
                                                l184 135C                                                  l344 1E04  
                                                l409 2272                                                  l425 218C  
                                                l441 0FF0                                                  l257 1A14  
                                                l249 19D6                                                  l185 134C  
                                                l169 1AB2                                                  l426 2164  
                                                l178 1326                                                  l451 1184  
                                                l443 1004                                                  l259 1A2C  
                                                l179 1316                                                  l339 1B94  
                                                l291 2054                                                  l444 0FFE  
                                                l196 13D0                                                  l461 1128  
                                                l197 13C0                                                  l541 1750  
                                                l462 1118                                                  l454 1090  
                                                l542 17AE                                                  l366 23E0  
                                                l455 10B8                                                  l535 16EC  
                                                l464 116C                                                  l456 10C6  
                                                l288 2028                                                  l392 1E58  
                                                l473 1218                                                  l465 113A  
                                                l457 10C2                                                  l449 1032  
                                                l289 203E                                                  l474 1220  
                                                l546 17B8                                                  l570 1852  
                                                l298 1C46                                                  l394 1E7A  
                                                l387 2378                                                  l483 12C2  
                                                l475 1244                                                  l459 110E  
                                                l571 18AA                                                  l388 237A  
                                                l484 1270                                                  l468 117E  
                                                l564 17FE                                                  l469 11AC  
                                                l399 240A                                                  l575 18B4  
                                                l751 1D12                                                  l752 1D1C  
                                                l744 1CC4                                                  l753 1D2A  
                                                l745 1CD4                                                  l747 1CF2  
                                                l748 1CEA                                                  l927 2436  
                                                l792 247E                                                  l778 248E  
                                                _dia 0050                                                  _key 0043  
                                                _mes 0054                                                  wreg 000FE8  
                                    RtccReadDate@pDt 0001                                          lcd_gotoxy@x 0006  
                                        lcd_gotoxy@y 0005                                                 l1010 214E  
                                               l1011 2158                                                 l1020 230A  
                                               l1021 2314                                                 l1006 212E  
                                               l1007 2126                                                 l1016 22F2  
                                               l1017 22EA                                                 l3110 1B52  
                                               l3108 1B4A                                                 l3226 21D2  
                                               l3402 1E72                                                 l2540 1118  
                                               l3262 1E04                                                 l2546 113A  
                                               l3282 203E                                                 l2566 11C8  
                                               l3388 1E50                                                 STR_1 0FA5  
                                               STR_2 0FBE                                                 STR_3 0FB9  
                                               STR_4 0FAA                                                 STR_5 0FB4  
                                               STR_6 0FAF                                                 STR_7 0F57  
                                               STR_8 0F66                                                 STR_9 0F9E  
                                               u2200 12CA                                                 u2210 12E2  
                                               u2130 11F4                                                 u2050 10F2  
                                               u2220 2184                                                 u2230 21AC  
                                               u3110 19F4                                                 u3040 1B44  
                                               u2057 10E8                                                 u2090 1162  
                                               u2227 217A                                                 u2180 124C  
                                               u3220 21F6                                                 u2237 21A2  
                                               u2190 126A                                                 u3310 1C34  
                                               u3160 1A34                                                 u2520 1CF6  
                                               u2097 1158                                                 u3250 1E20  
                                               u3410 1C64                                                 u3330 1C3C  
                                               u2700 13D8                                                 u2620 1364  
                                               u3260 2038                                                 u1830 1EAC  
                                               u3510 1CA2                                                 u3430 1C78  
                                               u3350 1C42                                                 u1850 1EC4  
                                               u3530 1CAA                                                 u3450 1C80  
                                               u3370 1C56                                                 u1908 1EFC  
                                               u2900 14EE                                                 u2820 1482  
                                               u2740 140E                                                 u2660 139A  
                                               u2580 132E                                                 u1870 1EDE  
                                               u3470 1C86                                                 u3390 1C5E  
                                               u3550 1E68                                                 u1848 1EAE  
                                               u1960 2132                                                 u1890 1EFA  
                                               u3490 1C9A                                                 u3707 13FC  
                                               u3627 23F0                                                 u1868 1EC6  
                                               u2860 14B8                                                 u2780 1444  
                                               u3717 1432                                                 u3637 2480  
                                               u1990 22F6                                                 u3727 1470  
                                               u3647 1AAA                                                 u1888 1EE0  
                                               u3737 14A6                                                 u3657 1AF4  
                                               u2970 1D44                                                 u3747 14DC  
                                               u3667 131C                                                 u2980 1D60  
                                               u3757 151C                                                 u3677 1352  
                                               u2990 1F26                                                 u3767 22D0  
                                               u3687 1388                                                 u3777 19E2  
                                               u3697 13C6                                                 u3787 1A22  
                                               u3797 2490                                     ?_lcd_send_nibble 0001  
                                               _anio 0056                                                 _flag 02F8  
                                               _main 23DC                                                 _hora 004E  
                                               fsr0h 000FEA                                                 fsr1h 000FE2  
                                               indf0 000FEF                                                 fsr2h 000FDA  
                                               fsr0l 000FE9                                                 indf2 000FDF  
                                               fsr1l 000FE1                                                 fsr2l 000FD9  
                                      __CFG_T1DIG$ON 000000                             ?_guarda_numero_ingresado 0028  
                                               prodh 000FF4                                                 prodl 000FF3  
                                               start 0000                                        __CFG_IESO$OFF 000000  
                                   RtccReadDate@rTD0 000B                                     RtccReadDate@rTD1 0003  
                                       ___param_bank 000000                                      RtccReadTime@pTm 0001  
                                        _Delay1KTCYx 247C                                        __CFG_PLLDIV$1 000000  
                                              ?_main 0001                                      __end_of___awdiv 1D34  
                                              STR_10 0F75                                                STR_11 0F2C  
                                              STR_12 0F2C                                                STR_20 0F7E  
                                              STR_13 0FC3                                                STR_21 0F46  
                                              STR_22 0F24                                                STR_14 0F8F  
                                              STR_15 0F26                                                STR_23 0F0F  
                                              STR_24 0F24                                                STR_16 0FC3  
                                              STR_25 0FC8                                                STR_17 0F35  
                                              STR_26 0F97                                                STR_18 0F24  
                                              STR_19 0F87                                __size_of_Delay100TCYx 0010  
                                    ___awdiv@divisor 0003                                      __end_of___lwdiv 2162  
                                    __end_of___lwmod 231E                                      ___awdiv@counter 0005  
                                              _TRISA 000F92                                                _TRISB 000F93  
                                              _TRISC 000F94                                       __CFG_FCMEN$OFF 000000  
                       __size_of_mostrar_presionar_a 0018                                      __end_of_dpowers 0F0B  
                                              _mes_d 0059                                                _mes_u 00B0  
                                    __end_of_isdigit 243E                                                _setup 2200  
                                     __pbitbssCOMRAM 02F8                                                tablat 000FF5  
                               _setHoraMinutoSegundo 1F16                                         lcd_putrs@ptr 0009  
                                              status 000FD8                                      __end_of_sprintf 12F0  
                            __CFG_DSWDTOSC$INTOSCREF 000000                                       _activar_alarma 2294  
                                    __initialization 205A                                         _Delay100TCYx 248C  
                                       __end_of_main 23FE                                      ??_lcd_send_byte 0004  
                                   RtccReadTime@rTD0 000B                                     RtccReadTime@rTD1 0003  
                                   __end_of_Read_RTC 19B4       __end_of_resetear_pantalla_ingresar_contrasenia 2200  
    __size_of_resetear_pantalla_ingresar_contrasenia 004C             ??_resetear_pantalla_ingresar_contrasenia 000B  
            ?_resetear_pantalla_ingresar_contrasenia 0001               _resetear_pantalla_ingresar_contrasenia 21B4  
                                             ??_main 002E                                        __activetblptr 000002  
                                   __end_of_RtccWrOn 247C                                               _EECON2 000FA7  
                                             _ANCON0 000F48                                               _ANCON1 000F49  
                                   ___awdiv@dividend 0001                                               ?_setup 0001  
                         __end_of_seleccionar_opcion 23B6                       __size_of_verificar_contrasenia 007A  
                              ?_setHoraMinutoSegundo 0001                                       __CFG_WDTEN$OFF 000000  
                      __end_of_verificar_contrasenia 1E2A                                     RtccWriteDate@pDt 0001  
                                             _RTCCFG 000F3F                                       __CFG_WPCFG$OFF 000000  
                                   ??_cambiar_opcion 0028                               __end_of_activar_alarma 22DC  
                                  _set_reloj_digital 24C4                                       __CFG_WPDIS$OFF 000000  
            resetear_pantalla_ingresar_contrasenia@i 000B                                       __CFG_XINST$OFF 000000  
                                 ?_set_reloj_digital 0001                                     __end_of_lcd_init 1EA0  
                                   __end_of_lcd_putc 2294                                               ___wmul 23B6  
                                          ??___awdiv 0005                                       __CFG_STVREN$ON 000000  
                                             _diasem 0052                                               _anio_d 0058  
                                             _anio_u 00AE                              ??_ir_a_pantalla_edicion 002E  
                                          ??___lwdiv 0005                                            ??___lwmod 000C  
                                             _hora_d 005B                                               _hora_u 00B2  
                                             clear_0 20A0                                               clear_1 20AE  
                                ??_set_reloj_digital 0028                                     ___awdiv@quotient 0007  
                                             _minuto 004C                              ??_ir_a_pantalla_inicial 002E  
                              __end_of_RtccWriteDate 17C2                                __end_of_RtccWriteTime 18BE  
                                   RtccWriteTime@pTm 0001                                         __pdataCOMRAM 004C  
                                          ??_isdigit 0001                                         __mediumconst 0000  
                                             tblptrh 000FF7                                               tblptrl 000FF6  
                                             tblptru 000FF8                                            ??_sprintf 0017  
                          __end_of_set_reloj_digital 24CE                                           __accesstop 0060  
                            __end_of__initialization 20B4                                   __size_of_Write_RTC 015C  
                                    ?_activar_alarma 0001                                        ___rparam_used 000001  
                                     __pcstackCOMRAM 0001                                         __pidataBANK0 2456  
               __end_of_titila_texto_insert_password 1B00                __size_of_titila_texto_insert_password 0098  
                       _titila_texto_insert_password 1A68                                        __end_of_setup 224A  
                                    __CFG_DSWDTPS$G2 000000                                      __CFG_OSC$INTOSC 000000  
         __end_of_ir_a_pantalla_ingresar_contrasenia 205A          __size_of_ir_a_pantalla_ingresar_contrasenia 0066  
               ??_ir_a_pantalla_ingresar_contrasenia 002E                  ?_ir_a_pantalla_ingresar_contrasenia 0001  
                 _ir_a_pantalla_ingresar_contrasenia 1FF4                                    lcd_gotoxy@address 0007  
                                 __size_of_lcd_putrs 0052             __end_of_ir_a_pantalla_editar_contrasenia 1B96  
          __size_of_ir_a_pantalla_editar_contrasenia 0096                   ??_ir_a_pantalla_editar_contrasenia 002C  
                  ?_ir_a_pantalla_editar_contrasenia 0001                     _ir_a_pantalla_editar_contrasenia 1B00  
                             ??_setHoraMinutoSegundo 0028                                         sprintf@width 0025  
                                            ??_setup 0028                                           __pbssBANK0 0060  
                                          ?_Read_RTC 0001                                           _dia_semana 00AF  
                          RtccWriteTime@tempHourWDay 000A                                           __pnvCOMRAM 0058  
                                          ?_RtccWrOn 0001                                       lcd_send_byte@n 0003  
                                _mostrar_presionar_a 243E                                              ?___wmul 0001  
                                      ?_RtccReadDate 0001                                        ?_RtccReadTime 0001  
                                       ?_Delay1KTCYx 0001                               __size_of_setDiaMesAnio 007C  
                   __size_of_guarda_numero_ingresado 0052                        ?_titila_texto_insert_password 0001  
                                  __end_of_Write_RTC 168C                                           _lcd_comand 24AA  
                                         _lcd_gotoxy 23FE                                 ?_mostrar_presionar_a 0001  
                                            _RTCVALH 000F99                                              _RTCVALL 000F98  
                             verificar_contrasenia@i 0009                                            ?_lcd_init 0001  
                                          ?_lcd_putc 0001                           __size_of_set_reloj_digital 000A  
                                         ??_Read_RTC 0013                                              __Hparam 0000  
                                            __Lparam 0000                             __size_of_lcd_send_nibble 0076  
                                         ??_RtccWrOn 0001                                       ??_RtccReadDate 0003  
                                     ??_RtccReadTime 0003                                              ___awdiv 1CB0  
                                  __end_of_lcd_putrs 21B4                                      __size_of___wmul 0026  
                                            ___lwdiv 2110                                              ___lwmod 22DC  
                            __size_of_ingreso_numero 0240                                         __psmallconst 0F00  
                                        _RtccTimeVal 0080                                              __pcinit 205A  
                                            _fecha_d 005A                                              _fecha_u 00B1  
                                            __ramtop 0F00                                              __ptext0 23DC  
                                            __ptext1 2200                                              __ptext2 1E2A  
                                            __ptext3 247C                                              __ptext4 249C  
                                            __ptext5 1A68                                              __ptext6 1C24  
                                            __ptext7 1FF4                                              __ptext8 1DB0  
                                            __ptext9 21B4                                              _buffer2 0086  
                                          _T1CONbits 000FCD                                              _dpowers 0F01  
                                            _isdigit 2420                                   _numeros_ingresados 0033  
                                            _segundo 0035                                ??_mostrar_presionar_a 000B  
                                            _sprintf 0FCC                                           ??_lcd_init 0005  
                                         ??_lcd_putc 0008                                 end_of_initialization 20B4  
                                      _setDiaMesAnio 1D34                                 lcd_send_byte@address 0004  
                                      __Lmediumconst 0000                          verificar_contrasenia@equals 0007  
                                            postdec1 000FE5                                              postdec2 000FDD  
                                 _seleccionar_opcion 238E                                              postinc0 000FEE  
                                            postinc1 000FE6                                              postinc2 000FDE  
                              __end_of_lcd_send_byte 238E                       __size_of_ir_a_pantalla_edicion 003E  
                      __end_of_ir_a_pantalla_edicion 235C                                            _PORTAbits 000F80  
                                          _PORTCbits 000F82                                  ?_seleccionar_opcion 0001  
                                   __CFG_DSBOREN$OFF 000000                       __size_of_ir_a_pantalla_inicial 000E  
                      __end_of_ir_a_pantalla_inicial 24AA                                          ?_lcd_comand 0001  
                                   __CFG_CPUDIV$OSC1 000000                                            _TRISBbits 000F93  
                     ??_titila_texto_insert_password 000B                                          ?_lcd_gotoxy 0005  
                                    _LCD_INIT_STRING 0F0B                                     ??_activar_alarma 000B  
                                     ?_setDiaMesAnio 0001                                 ??_seleccionar_opcion 002E  
                              _verificar_contrasenia 1DB0                                     __CFG_IOL1WAY$OFF 000000  
                          RtccWriteDate@tempDayMonth 000A                                  __CFG_MSSP7B_EN$MSK7 000000  
                                   Delay100TCYx@unit 0001                                       __end_of___wmul 23DC  
                            _guarda_numero_ingresado 20BE                                        __pidataCOMRAM 24B8  
                          RtccWriteDate@tempHourWDay 000C                                    ??_lcd_send_nibble 0001  
                               __size_of_Delay1KTCYx 0010                                     __CFG_DSWDTEN$OFF 000000  
                                start_initialization 205A                                 __end_of_RtccReadDate 1C24  
                               __end_of_RtccReadTime 1FF4                                 RtccWriteTime@wasAlrm 0006  
                               RtccWriteTime@wasWrEn 0007                               __size_of_RtccWriteDate 0136  
                                    RtccWriteDate@di 0003                               __size_of_RtccWriteTime 00FC  
                                  __size_of_Read_RTC 00F6                                  __size_of_lcd_comand 000E  
                                __size_of_lcd_gotoxy 0022                                             ??___wmul 0005  
                                     _ingreso_numero 12F0                                          __pdataBANK0 009A  
                                  __size_of_RtccWrOn 0012                                      RtccWriteTime@di 0003  
                                   __CFG_LPT1OSC$OFF 000000                              __size_of_cambiar_opcion 00B4  
                                        _ALRMCFGbits 000F91                              __end_of_LCD_INIT_STRING 0F0F  
                                        __pbssCOMRAM 002F                                            _Write_RTC 1530  
                                    ??_setDiaMesAnio 0028                                         _isdigit$1948 0002  
                                    Delay1KTCYx@unit 0001                        __size_of_setHoraMinutoSegundo 0070  
                             ?_verificar_contrasenia 0001                                    __size_of_lcd_init 0076  
                                        sprintf@flag 001B                                    __size_of_lcd_putc 004A  
                                        sprintf@prec 001E                                    _array_contrasenia 00A6  
                                          __pnvBANK0 00AE                                     ___lwdiv@dividend 0001  
                             __end_of_ingreso_numero 1530                                        ?_Delay100TCYx 0001  
                          ??_guarda_numero_ingresado 002A                                             ?___awdiv 0001  
                                           ?___lwdiv 0001                                             ?___lwmod 0008  
                            RtccWriteTime@tempMinSec 0008                          _array_contrasenia_ingresada 0060  
                                          _lcd_putrs 2162                                        _RtccWriteDate 168C  
                                        __smallconst 0F00                                        _RtccWriteTime 17C2  
                                           ?_isdigit 0001                                 __CFG_RTCOSC$T1OSCREF 000000  
                                         ?_Write_RTC 0001                                     ___lwdiv@quotient 0005  
                                           ?_sprintf 000D                                       __size_of_setup 004A  
                                   _RtccAlrmTimeDate 0070                                       ___wmul@product 0005  
                                           _LATAbits 000F89                                             _LATBbits 000F8A  
                                           _PIE3bits 000FA3                                            _segundo_d 005D  
                                     ??_Delay100TCYx 0001                                            _segundo_u 005E  
                                    ?_ingreso_numero 0001                                     __CFG_WDTPS$32768 000000  
                                 RtccWriteDate@wasOn 0005                                   _Rtcc_read_TimeDate 0068  
                                     ?_RtccWriteDate 0001                          __end_of_mostrar_presionar_a 2456  
                                         ?_lcd_putrs 0009                                    ___wmul@multiplier 0001  
                                     ?_RtccWriteTime 0001                                            lcd_init@i 0005  
                              __size_of_RtccReadDate 008E                                         ??_lcd_comand 0005  
                                          lcd_putc@c 0008                                __size_of_RtccReadTime 006E  
                                       ??_lcd_gotoxy 0006                      __end_of_guarda_numero_ingresado 2110  
                                          copy_data0 206E                                            copy_data1 208E  
                                           _Read_RTC 18BE                                    _array_seleccionar 009A  
                                    _lcd_send_nibble 1EA0                                             __Hrparam 0000  
                                           _RtccDate 0044                                             __Lrparam 0000  
                                           _RtccTime 0048                                             _RtccWrOn 246A  
                                 __end_of_lcd_comand 24B8                                   __end_of_lcd_gotoxy 2420  
                                       _RtccReadDate 1B96                                       _cambiar_opcion 19B4  
                                   __size_of___awdiv 0084                                         _RtccReadTime 1F86  
                                   __size_of___lwdiv 0052                                     __size_of___lwmod 0042  
                  ir_a_pantalla_editar_contrasenia@i 002C                                         _RtccTimeDate 0078  
                              _ir_a_pantalla_edicion 231E                                           sprintf@len 0023  
                                         sprintf@val 001C                                     __size_of_isdigit 001E  
                                    ___lwdiv@divisor 0003                                _ir_a_pantalla_inicial 249C  
                                        ??_Write_RTC 000E                                      ___lwdiv@counter 0007  
                                           __ptext10 243E                                             __ptext11 231E  
                                           __ptext20 238E                                             __ptext12 24C4  
                                           __ptext21 1B00                                             __ptext13 1F16  
                                           __ptext30 22DC                                             __ptext22 12F0  
                                           __ptext14 1D34                                             __ptext31 2110  
                                           __ptext23 20BE                                             __ptext15 1530  
                                           __ptext40 1B96                                             __ptext32 2162  
                                           __ptext24 2294                                             __ptext16 1CB0  
                                           __ptext33 224A                                             __ptext25 24AA  
                                           __ptext17 17C2                                             __ptext34 23FE  
                                           __ptext26 19B4                                             __ptext18 168C  
                                           __ptext35 235C                                             __ptext27 0FCC  
                                           __ptext19 246A                                             __ptext36 1EA0  
                                           __ptext28 2420                                             __ptext37 248C  
                                           __ptext29 23B6                                             __ptext38 18BE  
                                           __ptext39 1F86                                             _lcd_init 1E2A  
                                           _lcd_putc 224A                                      _txt_insert_pass 002F  
                                   __size_of_sprintf 0324                               __size_of_lcd_send_byte 0032  
                                      __size_of_main 0022                          __size_of_seleccionar_opcion 0028  
                                           _minuto_d 005C                                             _minuto_u 00B3  
                             __end_of_cambiar_opcion 1A68                                        ??_Delay1KTCYx 0001  
                                    ??_RtccWriteDate 0004                                      ??_RtccWriteTime 0004  
                                        ??_lcd_putrs 000B                                          _OSCTUNEbits 000F9B  
                                         _INTCONbits 000FF2   __end_of_si_apreta_numero_va_a_pantalla_contrasenia 1CB0  
__size_of_si_apreta_numero_va_a_pantalla_contrasenia 008C         ??_si_apreta_numero_va_a_pantalla_contrasenia 002E  
        ?_si_apreta_numero_va_a_pantalla_contrasenia 0001           _si_apreta_numero_va_a_pantalla_contrasenia 1C24  
                                _boton_centro_estado 0084                                   RtccWriteTime@wasOn 0005  
                               __end_of_Delay100TCYx 249C                                             isdigit@c 0003  
                            ??_verificar_contrasenia 0003                                            sprintf@ap 001F  
                                          sprintf@cp 0021                              __end_of_lcd_send_nibble 1F16  
                                          sprintf@sp 000D                                     ___lwmod@dividend 0008  
                                         _OSCCONbits 000FD3                              __size_of_activar_alarma 0048  
                                  _boton_seleccionar 0031                                      ?_cambiar_opcion 0001  
                              RtccWriteDate@tempYear 0007                         __end_of_setHoraMinutoSegundo 1F86  
                                      _lcd_send_byte 235C                                           _RTCCFGbits 000F3F  
                             ?_ir_a_pantalla_edicion 0001                                             sprintf@c 0027  
                                           sprintf@f 000F                                      ___lwmod@divisor 000A  
                                __end_of_Delay1KTCYx 248C                                      ___lwmod@counter 000C  
                             ?_ir_a_pantalla_inicial 0001                                 RtccWriteDate@wasAlrm 0006  
                               RtccWriteDate@wasWrEn 0009                                __end_of_setDiaMesAnio 1DB0  
                                   ??_ingreso_numero 002A                                lcd_send_nibble@nibble 0002  
