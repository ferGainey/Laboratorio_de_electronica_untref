

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Nov 10 15:32:37 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83  0000                     
    84                           ; Version 1.43
    85                           ; Generated 25/07/2017 GMT
    86                           ; 
    87                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F26J50 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataBANK0
   120  00D23E                     __pidataBANK0:
   121                           	opt stack 0
   122                           
   123                           ;initializer for _array_contrasenia
   124  00D23E  0001               	dw	1
   125  00D240  0002               	dw	2
   126  00D242  0003               	dw	3
   127  00D244  0004               	dw	4
   128                           
   129                           ;initializer for _minuto
   130  00D246  001E               	dw	30
   131                           
   132                           ;initializer for _hora
   133  00D248  0012               	dw	18
   134                           
   135                           ;initializer for _dia
   136  00D24A  0008               	dw	8
   137                           
   138                           ;initializer for _diasem
   139  00D24C  0003               	dw	3
   140                           
   141                           ;initializer for _mes
   142  00D24E  0009               	dw	9
   143                           
   144                           ;initializer for _anio
   145  00D250  000F               	dw	15
   146                           
   147                           	psect	idataBANK1
   148  00D1E4                     __pidataBANK1:
   149                           	opt stack 0
   150                           
   151                           ;initializer for _array_seleccionar
   152  00D1E4  D4                 	db	low STR_1
   153  00D1E5  FF                 	db	high STR_1
   154  00D1E6  ED                 	db	low STR_2
   155  00D1E7  FF                 	db	high STR_2
   156  00D1E8  E8                 	db	low STR_3
   157  00D1E9  FF                 	db	high STR_3
   158  00D1EA  D9                 	db	low STR_4
   159  00D1EB  FF                 	db	high STR_4
   160  00D1EC  E3                 	db	low STR_5
   161  00D1ED  FF                 	db	high STR_5
   162  00D1EE  DE                 	db	low STR_6
   163  00D1EF  FF                 	db	high STR_6
   164                           
   165                           	psect	mediumconst
   166  00FEE2                     __pmediumconst:
   167                           	opt stack 0
   168  00FEE2  00                 	db	0
   169  00FEE3                     _dpowers:
   170                           	opt stack 0
   171  00FEE3  0001               	dw	1
   172  00FEE5  000A               	dw	10
   173  00FEE7  0064               	dw	100
   174  00FEE9  03E8               	dw	1000
   175  00FEEB  2710               	dw	10000
   176  00FEED                     __end_of_dpowers:
   177                           	opt stack 0
   178  00FEED                     _LCD_INIT_STRING:
   179                           	opt stack 0
   180  00FEED  28                 	db	40
   181  00FEEE  0C                 	db	12
   182  00FEEF  01                 	db	1
   183  00FEF0  06                 	db	6
   184  00FEF1                     __end_of_LCD_INIT_STRING:
   185                           	opt stack 0
   186  00FEF1                     exp@coeff:
   187                           	opt stack 0
   188  00FEF1  00                 	db	0
   189  00FEF2  80                 	db	128
   190  00FEF3  3F                 	db	63
   191  00FEF4  72                 	db	114
   192  00FEF5  31                 	db	49
   193  00FEF6  3F                 	db	63
   194  00FEF7  FE                 	db	254
   195  00FEF8  75                 	db	117
   196  00FEF9  3E                 	db	62
   197  00FEFA  58                 	db	88
   198  00FEFB  63                 	db	99
   199  00FEFC  3D                 	db	61
   200  00FEFD  95                 	db	149
   201  00FEFE  1D                 	db	29
   202  00FEFF  3C                 	db	60
   203  00FF00  C5                 	db	197
   204  00FF01  AE                 	db	174
   205  00FF02  3A                 	db	58
   206  00FF03  79                 	db	121
   207  00FF04  21                 	db	33
   208  00FF05  39                 	db	57
   209  00FF06  94                 	db	148
   210  00FF07  80                 	db	128
   211  00FF08  37                 	db	55
   212  00FF09  93                 	db	147
   213  00FF0A  A7                 	db	167
   214  00FF0B  35                 	db	53
   215  00FF0C  56                 	db	86
   216  00FF0D  15                 	db	21
   217  00FF0E  34                 	db	52
   218  00FF0F                     __end_ofexp@coeff:
   219                           	opt stack 0
   220  00FF0F                     log@coeff:
   221                           	opt stack 0
   222  00FF0F  00                 	db	0
   223  00FF10  00                 	db	0
   224  00FF11  00                 	db	0
   225  00FF12  00                 	db	0
   226  00FF13  80                 	db	128
   227  00FF14  3F                 	db	63
   228  00FF15  F0                 	db	240
   229  00FF16  FF                 	db	255
   230  00FF17  BE                 	db	190
   231  00FF18  E2                 	db	226
   232  00FF19  A9                 	db	169
   233  00FF1A  3E                 	db	62
   234  00FF1B  83                 	db	131
   235  00FF1C  76                 	db	118
   236  00FF1D  BE                 	db	190
   237  00FF1E  AE                 	db	174
   238  00FF1F  2B                 	db	43
   239  00FF20  3E                 	db	62
   240  00FF21  3C                 	db	60
   241  00FF22  C3                 	db	195
   242  00FF23  BD                 	db	189
   243  00FF24  D2                 	db	210
   244  00FF25  13                 	db	19
   245  00FF26  3D                 	db	61
   246  00FF27  78                 	db	120
   247  00FF28  D3                 	db	211
   248  00FF29  BB                 	db	187
   249  00FF2A                     __end_oflog@coeff:
   250                           	opt stack 0
   251  00FF2A                     STR_33:
   252                           
   253                           ; BSR set to: 15
   254  00FF2A  49                 	db	73	;'I'
   255  00FF2B  6E                 	db	110	;'n'
   256  00FF2C  73                 	db	115	;'s'
   257  00FF2D  65                 	db	101	;'e'
   258  00FF2E  72                 	db	114	;'r'
   259  00FF2F  74                 	db	116	;'t'
   260  00FF30  20                 	db	32
   261  00FF31  6E                 	db	110	;'n'
   262  00FF32  65                 	db	101	;'e'
   263  00FF33  77                 	db	119	;'w'
   264  00FF34  20                 	db	32
   265  00FF35  50                 	db	80	;'P'
   266  00FF36  61                 	db	97	;'a'
   267  00FF37  73                 	db	115	;'s'
   268  00FF38  73                 	db	115	;'s'
   269  00FF39  77                 	db	119	;'w'
   270  00FF3A  6F                 	db	111	;'o'
   271  00FF3B  72                 	db	114	;'r'
   272  00FF3C  64                 	db	100	;'d'
   273  00FF3D  20                 	db	32
   274  00FF3E  00                 	db	0
   275  00FF3F                     STR_17:
   276                           
   277                           ; BSR set to: 15
   278  00FF3F  20                 	db	32
   279  00FF40  20                 	db	32
   280  00FF41  20                 	db	32
   281  00FF42  20                 	db	32
   282  00FF43  20                 	db	32
   283  00FF44  20                 	db	32
   284  00FF45  20                 	db	32
   285  00FF46  20                 	db	32
   286  00FF47  20                 	db	32
   287  00FF48  20                 	db	32
   288  00FF49  20                 	db	32
   289  00FF4A  20                 	db	32
   290  00FF4B  20                 	db	32
   291  00FF4C  20                 	db	32
   292  00FF4D  20                 	db	32
   293  00FF4E  20                 	db	32
   294  00FF4F  00                 	db	0
   295  00FF50                     STR_16:
   296                           
   297                           ; BSR set to: 15
   298  00FF50  41                 	db	65	;'A'
   299  00FF51  6C                 	db	108	;'l'
   300  00FF52  61                 	db	97	;'a'
   301  00FF53  72                 	db	114	;'r'
   302  00FF54  6D                 	db	109	;'m'
   303  00FF55  20                 	db	32
   304  00FF56  61                 	db	97	;'a'
   305  00FF57  63                 	db	99	;'c'
   306  00FF58  74                 	db	116	;'t'
   307  00FF59  69                 	db	105	;'i'
   308  00FF5A  76                 	db	118	;'v'
   309  00FF5B  61                 	db	97	;'a'
   310  00FF5C  74                 	db	116	;'t'
   311  00FF5D  65                 	db	101	;'e'
   312  00FF5E  64                 	db	100	;'d'
   313  00FF5F  20                 	db	32
   314  00FF60  00                 	db	0
   315  00FF61                     STR_31:
   316                           
   317                           ; BSR set to: 15
   318  00FF61  49                 	db	73	;'I'
   319  00FF62  6E                 	db	110	;'n'
   320  00FF63  73                 	db	115	;'s'
   321  00FF64  65                 	db	101	;'e'
   322  00FF65  72                 	db	114	;'r'
   323  00FF66  74                 	db	116	;'t'
   324  00FF67  20                 	db	32
   325  00FF68  50                 	db	80	;'P'
   326  00FF69  61                 	db	97	;'a'
   327  00FF6A  73                 	db	115	;'s'
   328  00FF6B  73                 	db	115	;'s'
   329  00FF6C  77                 	db	119	;'w'
   330  00FF6D  6F                 	db	111	;'o'
   331  00FF6E  72                 	db	114	;'r'
   332  00FF6F  64                 	db	100	;'d'
   333  00FF70  20                 	db	32
   334  00FF71  00                 	db	0
   335  00FF72                     STR_7:
   336                           
   337                           ; BSR set to: 15
   338  00FF72  25                 	db	37
   339  00FF73  30                 	db	48	;'0'
   340  00FF74  32                 	db	50	;'2'
   341  00FF75  75                 	db	117	;'u'
   342  00FF76  2F                 	db	47
   343  00FF77  25                 	db	37
   344  00FF78  30                 	db	48	;'0'
   345  00FF79  32                 	db	50	;'2'
   346  00FF7A  75                 	db	117	;'u'
   347  00FF7B  2F                 	db	47
   348  00FF7C  25                 	db	37
   349  00FF7D  30                 	db	48	;'0'
   350  00FF7E  32                 	db	50	;'2'
   351  00FF7F  75                 	db	117	;'u'
   352  00FF80  00                 	db	0
   353  00FF81                     STR_8:
   354                           
   355                           ; BSR set to: 15
   356  00FF81  25                 	db	37
   357  00FF82  30                 	db	48	;'0'
   358  00FF83  32                 	db	50	;'2'
   359  00FF84  75                 	db	117	;'u'
   360  00FF85  3A                 	db	58	;':'
   361  00FF86  25                 	db	37
   362  00FF87  30                 	db	48	;'0'
   363  00FF88  32                 	db	50	;'2'
   364  00FF89  75                 	db	117	;'u'
   365  00FF8A  3A                 	db	58	;':'
   366  00FF8B  25                 	db	37
   367  00FF8C  30                 	db	48	;'0'
   368  00FF8D  32                 	db	50	;'2'
   369  00FF8E  75                 	db	117	;'u'
   370  00FF8F  00                 	db	0
   371  00FF90                     STR_21:
   372                           
   373                           ; BSR set to: 15
   374  00FF90  41                 	db	65	;'A'
   375  00FF91  63                 	db	99	;'c'
   376  00FF92  74                 	db	116	;'t'
   377  00FF93  69                 	db	105	;'i'
   378  00FF94  76                 	db	118	;'v'
   379  00FF95  65                 	db	101	;'e'
   380  00FF96  20                 	db	32
   381  00FF97  20                 	db	32
   382  00FF98  00                 	db	0
   383  00FF99                     STR_10:
   384                           
   385                           ; BSR set to: 15
   386  00FF99  50                 	db	80	;'P'
   387  00FF9A  61                 	db	97	;'a'
   388  00FF9B  73                 	db	115	;'s'
   389  00FF9C  73                 	db	115	;'s'
   390  00FF9D  77                 	db	119	;'w'
   391  00FF9E  6F                 	db	111	;'o'
   392  00FF9F  72                 	db	114	;'r'
   393  00FFA0  64                 	db	100	;'d'
   394  00FFA1  00                 	db	0
   395  00FFA2                     STR_25:
   396                           
   397                           ; BSR set to: 15
   398  00FFA2  45                 	db	69	;'E'
   399  00FFA3  64                 	db	100	;'d'
   400  00FFA4  74                 	db	116	;'t'
   401  00FFA5  20                 	db	32
   402  00FFA6  44                 	db	68	;'D'
   403  00FFA7  61                 	db	97	;'a'
   404  00FFA8  74                 	db	116	;'t'
   405  00FFA9  65                 	db	101	;'e'
   406  00FFAA  00                 	db	0
   407  00FFAB                     STR_27:
   408                           
   409                           ; BSR set to: 15
   410  00FFAB  45                 	db	69	;'E'
   411  00FFAC  64                 	db	100	;'d'
   412  00FFAD  74                 	db	116	;'t'
   413  00FFAE  20                 	db	32
   414  00FFAF  48                 	db	72	;'H'
   415  00FFB0  6F                 	db	111	;'o'
   416  00FFB1  75                 	db	117	;'u'
   417  00FFB2  72                 	db	114	;'r'
   418  00FFB3  00                 	db	0
   419  00FFB4                     STR_22:
   420                           
   421                           ; BSR set to: 15
   422  00FFB4  45                 	db	69	;'E'
   423  00FFB5  64                 	db	100	;'d'
   424  00FFB6  74                 	db	116	;'t'
   425  00FFB7  20                 	db	32
   426  00FFB8  50                 	db	80	;'P'
   427  00FFB9  61                 	db	97	;'a'
   428  00FFBA  73                 	db	115	;'s'
   429  00FFBB  73                 	db	115	;'s'
   430  00FFBC  00                 	db	0
   431  00FFBD                     STR_29:
   432                           
   433                           ; BSR set to: 15
   434  00FFBD  41                 	db	65	;'A'
   435  00FFBE  63                 	db	99	;'c'
   436  00FFBF  74                 	db	116	;'t'
   437  00FFC0  69                 	db	105	;'i'
   438  00FFC1  76                 	db	118	;'v'
   439  00FFC2  65                 	db	101	;'e'
   440  00FFC3  20                 	db	32
   441  00FFC4  00                 	db	0
   442  00FFC5                     STR_14:
   443                           
   444                           ; BSR set to: 15
   445  00FFC5  50                 	db	80	;'P'
   446  00FFC6  72                 	db	114	;'r'
   447  00FFC7  65                 	db	101	;'e'
   448  00FFC8  73                 	db	115	;'s'
   449  00FFC9  73                 	db	115	;'s'
   450  00FFCA  20                 	db	32
   451  00FFCB  41                 	db	65	;'A'
   452  00FFCC  00                 	db	0
   453  00FFCD                     STR_9:
   454                           
   455                           ; BSR set to: 15
   456  00FFCD  49                 	db	73	;'I'
   457  00FFCE  6E                 	db	110	;'n'
   458  00FFCF  73                 	db	115	;'s'
   459  00FFD0  65                 	db	101	;'e'
   460  00FFD1  72                 	db	114	;'r'
   461  00FFD2  74                 	db	116	;'t'
   462  00FFD3  00                 	db	0
   463  00FFD4                     STR_1:
   464                           
   465                           ; BSR set to: 15
   466  00FFD4  20                 	db	32
   467  00FFD5  44                 	db	68	;'D'
   468  00FFD6  69                 	db	105	;'i'
   469  00FFD7  61                 	db	97	;'a'
   470  00FFD8  00                 	db	0
   471  00FFD9                     STR_4:
   472                           
   473                           ; BSR set to: 15
   474  00FFD9  48                 	db	72	;'H'
   475  00FFDA  6F                 	db	111	;'o'
   476  00FFDB  72                 	db	114	;'r'
   477  00FFDC  61                 	db	97	;'a'
   478  00FFDD  00                 	db	0
   479  00FFDE                     STR_6:
   480                           
   481                           ; BSR set to: 15
   482  00FFDE  20                 	db	32
   483  00FFDF  53                 	db	83	;'S'
   484  00FFE0  65                 	db	101	;'e'
   485  00FFE1  67                 	db	103	;'g'
   486  00FFE2  00                 	db	0
   487  00FFE3                     STR_5:
   488                           
   489                           ; BSR set to: 15
   490  00FFE3  20                 	db	32
   491  00FFE4  4D                 	db	77	;'M'
   492  00FFE5  69                 	db	105	;'i'
   493  00FFE6  6E                 	db	110	;'n'
   494  00FFE7  00                 	db	0
   495  00FFE8                     STR_3:
   496                           
   497                           ; BSR set to: 15
   498  00FFE8  41                 	db	65	;'A'
   499  00FFE9  6E                 	db	110	;'n'
   500  00FFEA  69                 	db	105	;'i'
   501  00FFEB  6F                 	db	111	;'o'
   502  00FFEC  00                 	db	0
   503  00FFED                     STR_2:
   504                           
   505                           ; BSR set to: 15
   506  00FFED  20                 	db	32
   507  00FFEE  4D                 	db	77	;'M'
   508  00FFEF  65                 	db	101	;'e'
   509  00FFF0  73                 	db	115	;'s'
   510  00FFF1  00                 	db	0
   511  00FFF2                     STR_13:
   512                           
   513                           ; BSR set to: 15
   514  00FFF2  25                 	db	37
   515  00FFF3  30                 	db	48	;'0'
   516  00FFF4  31                 	db	49	;'1'
   517  00FFF5  75                 	db	117	;'u'
   518  00FFF6  00                 	db	0
   519  0000                     
   520                           ; #config settings
   521  00FFF7  00                 	db	0	; dummy byte at the end
   522  0000                     
   523                           	psect	nvBANK0
   524  0000EF                     __pnvBANK0:
   525                           	opt stack 0
   526  0000EF                     _anio_d:
   527                           	opt stack 0
   528  0000EF                     	ds	1
   529  0000F0                     _anio_u:
   530                           	opt stack 0
   531  0000F0                     	ds	1
   532  0000F1                     _dia_semana:
   533                           	opt stack 0
   534  0000F1                     	ds	1
   535  0000F2                     _mes_d:
   536                           	opt stack 0
   537  0000F2                     	ds	1
   538  0000F3                     _mes_u:
   539                           	opt stack 0
   540  0000F3                     	ds	1
   541  0000F4                     _fecha_d:
   542                           	opt stack 0
   543  0000F4                     	ds	1
   544  0000F5                     _fecha_u:
   545                           	opt stack 0
   546  0000F5                     	ds	1
   547  0000F6                     _hora_d:
   548                           	opt stack 0
   549  0000F6                     	ds	1
   550  0000F7                     _hora_u:
   551                           	opt stack 0
   552  0000F7                     	ds	1
   553  0000F8                     _minuto_d:
   554                           	opt stack 0
   555  0000F8                     	ds	1
   556  0000F9                     _minuto_u:
   557                           	opt stack 0
   558  0000F9                     	ds	1
   559  0000FA                     _segundo_d:
   560                           	opt stack 0
   561  0000FA                     	ds	1
   562  0000FB                     _segundo_u:
   563                           	opt stack 0
   564  0000FB                     	ds	1
   565  0000                     _RTCCFG	set	3903
   566  0000                     _ANCON1	set	3913
   567  0000                     _ANCON0	set	3912
   568  0000                     _RTCCFGbits	set	3903
   569  0000                     _ALRMCFGbits	set	3985
   570  0000                     _EECON2	set	4007
   571  0000                     _INTCONbits	set	4082
   572  0000                     _RTCVALH	set	3993
   573  0000                     _RTCVALL	set	3992
   574  0000                     _TRISBbits	set	3987
   575  0000                     _T1CONbits	set	4045
   576  0000                     _TRISC	set	3988
   577  0000                     _TRISB	set	3987
   578  0000                     _TRISA	set	3986
   579  0000                     _OSCCONbits	set	4051
   580  0000                     _OSCTUNEbits	set	3995
   581  0000                     _LATBbits	set	3978
   582  0000                     _PORTCbits	set	3970
   583  0000                     _PORTAbits	set	3968
   584  0000                     _LATAbits	set	3977
   585  0000                     _PIE3bits	set	4003
   586                           
   587                           	psect	cinit
   588  00D5DA                     __pcinit:
   589                           	opt stack 0
   590  00D5DA                     start_initialization:
   591                           	opt stack 0
   592  00D5DA                     __initialization:
   593                           	opt stack 0
   594                           
   595                           ; Initialize objects allocated to BANK1 (12 bytes)
   596                           ; load TBLPTR registers with __pidataBANK1
   597  00D5DA  0EE4               	movlw	low __pidataBANK1
   598  00D5DC  6EF6               	movwf	tblptrl,c
   599  00D5DE  0ED1               	movlw	high __pidataBANK1
   600  00D5E0  6EF7               	movwf	tblptrh,c
   601  00D5E2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   602  00D5E4  6EF8               	movwf	tblptru,c
   603  00D5E6  EE01  F000         	lfsr	0,__pdataBANK1
   604  00D5EA  EE10 F00C          	lfsr	1,12
   605  00D5EE                     copy_data0:
   606  00D5EE  0009               	tblrd		*+
   607  00D5F0  CFF5 FFEE          	movff	tablat,postinc0
   608  00D5F4  50E5               	movf	postdec1,w,c
   609  00D5F6  50E1               	movf	fsr1l,w,c
   610  00D5F8  E1FA               	bnz	copy_data0
   611                           
   612                           ; Initialize objects allocated to BANK0 (20 bytes)
   613                           ; load TBLPTR registers with __pidataBANK0
   614  00D5FA  0E3E               	movlw	low __pidataBANK0
   615  00D5FC  6EF6               	movwf	tblptrl,c
   616  00D5FE  0ED2               	movlw	high __pidataBANK0
   617  00D600  6EF7               	movwf	tblptrh,c
   618  00D602  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   619  00D604  6EF8               	movwf	tblptru,c
   620  00D606  EE00  F0DB         	lfsr	0,__pdataBANK0
   621  00D60A  EE10 F014          	lfsr	1,20
   622  00D60E                     copy_data1:
   623  00D60E  0009               	tblrd		*+
   624  00D610  CFF5 FFEE          	movff	tablat,postinc0
   625  00D614  50E5               	movf	postdec1,w,c
   626  00D616  50E1               	movf	fsr1l,w,c
   627  00D618  E1FA               	bnz	copy_data1
   628                           
   629                           ; Clear objects allocated to BITBANK0 (1 bytes)
   630  00D61A  0100               	movlb	0
   631  00D61C  6BFC               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
   632                           
   633                           ; Clear objects allocated to BANK0 (101 bytes)
   634  00D61E  EE00  F060         	lfsr	0,__pbssBANK0
   635  00D622  0E65               	movlw	101
   636  00D624                     clear_0:
   637  00D624  6AEE               	clrf	postinc0,c
   638  00D626  06E8               	decf	wreg,f,c
   639  00D628  E1FD               	bnz	clear_0
   640  00D62A                     end_of_initialization:
   641                           	opt stack 0
   642  00D62A                     __end_of__initialization:
   643                           	opt stack 0
   644  00D62A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   645  00D62C  6EF8               	movwf	tblptru,c
   646  00D62E  0100               	movlb	0
   647  00D630  EF67  F069         	goto	_main	;jump to C main() function
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           postdec1	equ	0xFE5
   655                           fsr1l	equ	0xFE1
   656                           
   657                           	psect	bitbssBANK0
   658  0007E0                     __pbitbssBANK0:
   659                           	opt stack 0
   660  0007E0                     _flag:
   661                           	opt stack 0
   662  0007E0                     	ds	1
   663                           tblptru	equ	0xFF8
   664                           tblptrh	equ	0xFF7
   665                           tblptrl	equ	0xFF6
   666                           tablat	equ	0xFF5
   667                           postinc0	equ	0xFEE
   668                           wreg	equ	0xFE8
   669                           postdec1	equ	0xFE5
   670                           fsr1l	equ	0xFE1
   671                           
   672                           	psect	bssBANK0
   673  000060                     __pbssBANK0:
   674                           	opt stack 0
   675  000060                     _array_contrasenia_ingresada:
   676                           	opt stack 0
   677  000060                     	ds	8
   678  000068                     _Rtcc_read_TimeDate:
   679                           	opt stack 0
   680  000068                     	ds	8
   681  000070                     _RtccAlrmTimeDate:
   682                           	opt stack 0
   683  000070                     	ds	8
   684  000078                     _RtccTimeDate:
   685                           	opt stack 0
   686  000078                     	ds	8
   687  000080                     _numeros_para_fecha:
   688                           	opt stack 0
   689  000080                     	ds	4
   690  000084                     _RtccTimeVal:
   691                           	opt stack 0
   692  000084                     	ds	4
   693  000088                     _errno:
   694                           	opt stack 0
   695  000088                     	ds	2
   696  00008A                     _txt_pantalla_edicion:
   697                           	opt stack 0
   698  00008A                     	ds	2
   699  00008C                     _txt_alarma_activada:
   700                           	opt stack 0
   701  00008C                     	ds	2
   702  00008E                     _txt_insertar_contrasenia:
   703                           	opt stack 0
   704  00008E                     	ds	2
   705  000090                     _boton_seleccionar:
   706                           	opt stack 0
   707  000090                     	ds	2
   708  000092                     _alarma_sonando:
   709                           	opt stack 0
   710  000092                     	ds	2
   711  000094                     _alarma_activada:
   712                           	opt stack 0
   713  000094                     	ds	2
   714  000096                     _motivo_ingreso_de_numeros:
   715                           	opt stack 0
   716  000096                     	ds	2
   717  000098                     _numeros_ingresados:
   718                           	opt stack 0
   719  000098                     	ds	2
   720  00009A                     _segundo:
   721                           	opt stack 0
   722  00009A                     	ds	2
   723  00009C                     _k:
   724                           	opt stack 0
   725  00009C                     	ds	2
   726  00009E                     _c:
   727                           	opt stack 0
   728  00009E                     	ds	2
   729  0000A0                     _b:
   730                           	opt stack 0
   731  0000A0                     	ds	2
   732  0000A2                     _a:
   733                           	opt stack 0
   734  0000A2                     	ds	2
   735  0000A4                     _j:
   736                           	opt stack 0
   737  0000A4                     	ds	2
   738  0000A6                     _i:
   739                           	opt stack 0
   740  0000A6                     	ds	2
   741  0000A8                     _key:
   742                           	opt stack 0
   743  0000A8                     	ds	1
   744  0000A9                     _buffer2:
   745                           	opt stack 0
   746  0000A9                     	ds	20
   747  0000BD                     _RtccDate:
   748                           	opt stack 0
   749  0000BD                     	ds	4
   750  0000C1                     _RtccTime:
   751                           	opt stack 0
   752  0000C1                     	ds	4
   753                           tblptru	equ	0xFF8
   754                           tblptrh	equ	0xFF7
   755                           tblptrl	equ	0xFF6
   756                           tablat	equ	0xFF5
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           postdec1	equ	0xFE5
   760                           fsr1l	equ	0xFE1
   761                           
   762                           	psect	dataBANK0
   763  0000DB                     __pdataBANK0:
   764                           	opt stack 0
   765  0000DB                     _array_contrasenia:
   766                           	opt stack 0
   767  0000DB                     	ds	8
   768  0000E3                     _minuto:
   769                           	opt stack 0
   770  0000E3                     	ds	2
   771  0000E5                     _hora:
   772                           	opt stack 0
   773  0000E5                     	ds	2
   774  0000E7                     _dia:
   775                           	opt stack 0
   776  0000E7                     	ds	2
   777  0000E9                     _diasem:
   778                           	opt stack 0
   779  0000E9                     	ds	2
   780  0000EB                     _mes:
   781                           	opt stack 0
   782  0000EB                     	ds	2
   783  0000ED                     _anio:
   784                           	opt stack 0
   785  0000ED                     	ds	2
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           postinc0	equ	0xFEE
   791                           wreg	equ	0xFE8
   792                           postdec1	equ	0xFE5
   793                           fsr1l	equ	0xFE1
   794                           
   795                           	psect	dataBANK1
   796  000100                     __pdataBANK1:
   797                           	opt stack 0
   798  000100                     _array_seleccionar:
   799                           	opt stack 0
   800  000100                     	ds	12
   801                           tblptru	equ	0xFF8
   802                           tblptrh	equ	0xFF7
   803                           tblptrl	equ	0xFF6
   804                           tablat	equ	0xFF5
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           postdec1	equ	0xFE5
   808                           fsr1l	equ	0xFE1
   809                           
   810                           	psect	cstackBANK0
   811  0000C5                     __pcstackBANK0:
   812                           	opt stack 0
   813  0000C5                     _covertir_valores_de_array_a_escala_decimal$2467:
   814                           	opt stack 0
   815                           
   816                           ; 3 bytes @ 0x0
   817  0000C5                     	ds	3
   818  0000C8                     _covertir_valores_de_array_a_escala_decimal$2468:
   819                           	opt stack 0
   820                           
   821                           ; 3 bytes @ 0x3
   822  0000C8                     	ds	3
   823  0000CB                     covertir_valores_de_array_a_escala_decimal@numero:
   824                           	opt stack 0
   825                           
   826                           ; 2 bytes @ 0x6
   827  0000CB                     	ds	2
   828  0000CD                     covertir_valores_de_array_a_escala_decimal@i:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x8
   832  0000CD                     	ds	2
   833  0000CF                     editar_fecha_reloj_digital@dia_ingresado:
   834                           	opt stack 0
   835  0000CF                     editar_hora_reloj_digital@hora_ingresada:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0xA
   839  0000CF                     	ds	2
   840  0000D1                     editar_fecha_reloj_digital@mes_ingresado:
   841                           	opt stack 0
   842  0000D1                     editar_hora_reloj_digital@minuto_ingresado:
   843                           	opt stack 0
   844                           
   845                           ; 2 bytes @ 0xC
   846  0000D1                     	ds	2
   847  0000D3                     editar_fecha_reloj_digital@anio_ingresado:
   848                           	opt stack 0
   849  0000D3                     editar_hora_reloj_digital@segundo_ingresado:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0xE
   853  0000D3                     	ds	2
   854  0000D5                     editar_fecha_reloj_digital@posicion:
   855                           	opt stack 0
   856  0000D5                     editar_hora_reloj_digital@posicion:
   857                           	opt stack 0
   858                           
   859                           ; 2 bytes @ 0x10
   860  0000D5                     	ds	2
   861  0000D7                     ??_ir_a_pantalla_edicion:
   862                           
   863                           ; 1 bytes @ 0x12
   864  0000D7                     	ds	1
   865  0000D8                     ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x13
   869  0000D8                     	ds	2
   870  0000DA                     ??_main:
   871                           
   872                           ; 1 bytes @ 0x15
   873  0000DA                     	ds	1
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1l	equ	0xFE1
   882                           
   883                           	psect	cstackCOMRAM
   884  000001                     __pcstackCOMRAM:
   885                           	opt stack 0
   886  000001                     ??_isdigit:
   887  000001                     ??_cambiar_opcion:
   888  000001                     ??_lcd_send_nibble:
   889  000001                     ?_verificar_contrasenia:
   890                           	opt stack 0
   891  000001                     ?___awdiv:
   892                           	opt stack 0
   893  000001                     ?___lwdiv:
   894                           	opt stack 0
   895  000001                     ?___ftpack:
   896                           	opt stack 0
   897  000001                     ?_frexp:
   898                           	opt stack 0
   899  000001                     ?___ftneg:
   900                           	opt stack 0
   901  000001                     Delay100TCYx@unit:
   902                           	opt stack 0
   903  000001                     Delay1KTCYx@unit:
   904                           	opt stack 0
   905  000001                     RtccReadDate@pDt:
   906                           	opt stack 0
   907  000001                     RtccReadTime@pTm:
   908                           	opt stack 0
   909  000001                     RtccWriteDate@pDt:
   910                           	opt stack 0
   911  000001                     RtccWriteTime@pTm:
   912                           	opt stack 0
   913  000001                     ___awdiv@dividend:
   914                           	opt stack 0
   915  000001                     ___lwdiv@dividend:
   916                           	opt stack 0
   917  000001                     ___ftpack@arg:
   918                           	opt stack 0
   919  000001                     ___ftge@ff1:
   920                           	opt stack 0
   921  000001                     ___ftneg@f1:
   922                           	opt stack 0
   923  000001                     frexp@value:
   924                           	opt stack 0
   925                           
   926                           ; 3 bytes @ 0x0
   927  000001                     	ds	1
   928  000002                     lcd_send_nibble@nibble:
   929                           	opt stack 0
   930  000002                     _isdigit$1990:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x1
   934  000002                     	ds	1
   935  000003                     lcd_send_byte@n:
   936                           	opt stack 0
   937  000003                     RtccWriteDate@di:
   938                           	opt stack 0
   939  000003                     RtccWriteTime@di:
   940                           	opt stack 0
   941  000003                     isdigit@c:
   942                           	opt stack 0
   943  000003                     ___awdiv@divisor:
   944                           	opt stack 0
   945  000003                     ___lwdiv@divisor:
   946                           	opt stack 0
   947  000003                     RtccReadDate@rTD1:
   948                           	opt stack 0
   949  000003                     RtccReadTime@rTD1:
   950                           	opt stack 0
   951                           
   952                           ; 8 bytes @ 0x2
   953  000003                     	ds	1
   954  000004                     lcd_send_byte@address:
   955                           	opt stack 0
   956  000004                     ___ftpack@exp:
   957                           	opt stack 0
   958  000004                     frexp@eptr:
   959                           	opt stack 0
   960  000004                     ___ftge@ff2:
   961                           	opt stack 0
   962                           
   963                           ; 3 bytes @ 0x3
   964  000004                     	ds	1
   965  000005                     lcd_init@i:
   966                           	opt stack 0
   967  000005                     lcd_gotoxy@y:
   968                           	opt stack 0
   969  000005                     lcd_comand@d:
   970                           	opt stack 0
   971  000005                     RtccWriteDate@wasOn:
   972                           	opt stack 0
   973  000005                     RtccWriteTime@wasOn:
   974                           	opt stack 0
   975  000005                     ___awdiv@counter:
   976                           	opt stack 0
   977  000005                     ___ftpack@sign:
   978                           	opt stack 0
   979  000005                     ___lwdiv@quotient:
   980                           	opt stack 0
   981                           
   982                           ; 2 bytes @ 0x4
   983  000005                     	ds	1
   984  000006                     ??___ftpack:
   985  000006                     ??_frexp:
   986  000006                     lcd_gotoxy@x:
   987                           	opt stack 0
   988  000006                     RtccWriteDate@wasAlrm:
   989                           	opt stack 0
   990  000006                     RtccWriteTime@wasAlrm:
   991                           	opt stack 0
   992  000006                     ___awdiv@sign:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x5
   996  000006                     	ds	1
   997  000007                     ??___ftge:
   998  000007                     lcd_gotoxy@address:
   999                           	opt stack 0
  1000  000007                     RtccWriteTime@wasWrEn:
  1001                           	opt stack 0
  1002  000007                     ___lwdiv@counter:
  1003                           	opt stack 0
  1004  000007                     verificar_contrasenia@equals:
  1005                           	opt stack 0
  1006  000007                     RtccWriteDate@tempYear:
  1007                           	opt stack 0
  1008  000007                     ___awdiv@quotient:
  1009                           	opt stack 0
  1010                           
  1011                           ; 2 bytes @ 0x6
  1012  000007                     	ds	1
  1013  000008                     ?___lwmod:
  1014                           	opt stack 0
  1015  000008                     lcd_putc@c:
  1016                           	opt stack 0
  1017  000008                     RtccWriteTime@tempMinSec:
  1018                           	opt stack 0
  1019  000008                     ___lwmod@dividend:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x7
  1023  000008                     	ds	1
  1024  000009                     ?___ftdiv:
  1025                           	opt stack 0
  1026  000009                     ?___awtoft:
  1027                           	opt stack 0
  1028  000009                     ?___lltoft:
  1029                           	opt stack 0
  1030  000009                     RtccWriteDate@wasWrEn:
  1031                           	opt stack 0
  1032  000009                     verificar_contrasenia@i:
  1033                           	opt stack 0
  1034  000009                     lcd_putrs@ptr:
  1035                           	opt stack 0
  1036  000009                     ___awtoft@c:
  1037                           	opt stack 0
  1038  000009                     ___ftdiv@f1:
  1039                           	opt stack 0
  1040  000009                     ___lltoft@c:
  1041                           	opt stack 0
  1042                           
  1043                           ; 4 bytes @ 0x8
  1044  000009                     	ds	1
  1045  00000A                     RtccWriteDate@tempDayMonth:
  1046                           	opt stack 0
  1047  00000A                     RtccWriteTime@tempHourWDay:
  1048                           	opt stack 0
  1049  00000A                     ___lwmod@divisor:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x9
  1053  00000A                     	ds	1
  1054  00000B                     ??_titila_texto_insert_password:
  1055  00000B                     ??_titila_alarma_activada:
  1056  00000B                     ??_titila_opcion:
  1057  00000B                     ??_selecciona_opcion_fecha_hora:
  1058  00000B                     resetear_pantalla_ingresar_contrasenia@i:
  1059                           	opt stack 0
  1060  00000B                     RtccReadDate@rTD0:
  1061                           	opt stack 0
  1062  00000B                     RtccReadTime@rTD0:
  1063                           	opt stack 0
  1064                           
  1065                           ; 8 bytes @ 0xA
  1066  00000B                     	ds	1
  1067  00000C                     ___awtoft@sign:
  1068                           	opt stack 0
  1069  00000C                     ___lwmod@counter:
  1070                           	opt stack 0
  1071  00000C                     RtccWriteDate@tempHourWDay:
  1072                           	opt stack 0
  1073  00000C                     ___ftdiv@f2:
  1074                           	opt stack 0
  1075                           
  1076                           ; 3 bytes @ 0xB
  1077  00000C                     	ds	1
  1078  00000D                     ??___lltoft:
  1079  00000D                     ?___ftmul:
  1080                           	opt stack 0
  1081  00000D                     ?___fttol:
  1082                           	opt stack 0
  1083  00000D                     ___ftmul@f1:
  1084                           	opt stack 0
  1085  00000D                     ___fttol@f1:
  1086                           	opt stack 0
  1087                           
  1088                           ; 3 bytes @ 0xC
  1089  00000D                     	ds	1
  1090  00000E                     
  1091                           ; 1 bytes @ 0xD
  1092  00000E                     	ds	1
  1093  00000F                     ??___ftdiv:
  1094                           
  1095                           ; 1 bytes @ 0xE
  1096  00000F                     	ds	1
  1097  000010                     ___ftmul@f2:
  1098                           	opt stack 0
  1099                           
  1100                           ; 3 bytes @ 0xF
  1101  000010                     	ds	1
  1102  000011                     ??___fttol:
  1103  000011                     ___lltoft@exp:
  1104                           	opt stack 0
  1105                           
  1106                           ; 1 bytes @ 0x10
  1107  000011                     	ds	1
  1108  000012                     ___ftdiv@cntr:
  1109                           	opt stack 0
  1110                           
  1111                           ; 1 bytes @ 0x11
  1112  000012                     	ds	1
  1113  000013                     ??___ftmul:
  1114  000013                     ___ftdiv@f3:
  1115                           	opt stack 0
  1116                           
  1117                           ; 3 bytes @ 0x12
  1118  000013                     	ds	3
  1119  000016                     ___ftdiv@exp:
  1120                           	opt stack 0
  1121  000016                     ___ftmul@exp:
  1122                           	opt stack 0
  1123  000016                     ___fttol@sign1:
  1124                           	opt stack 0
  1125                           
  1126                           ; 1 bytes @ 0x15
  1127  000016                     	ds	1
  1128  000017                     ___ftdiv@sign:
  1129                           	opt stack 0
  1130  000017                     ___ftmul@f3_as_product:
  1131                           	opt stack 0
  1132  000017                     ___fttol@lval:
  1133                           	opt stack 0
  1134                           
  1135                           ; 4 bytes @ 0x16
  1136  000017                     	ds	3
  1137  00001A                     ___ftmul@cntr:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x19
  1141  00001A                     	ds	1
  1142  00001B                     ___ftmul@sign:
  1143                           	opt stack 0
  1144  00001B                     ___fttol@exp1:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x1A
  1148  00001B                     	ds	1
  1149  00001C                     ?___wmul:
  1150                           	opt stack 0
  1151  00001C                     ?___altoft:
  1152                           	opt stack 0
  1153  00001C                     ___wmul@multiplier:
  1154                           	opt stack 0
  1155  00001C                     ___altoft@c:
  1156                           	opt stack 0
  1157                           
  1158                           ; 4 bytes @ 0x1B
  1159  00001C                     	ds	2
  1160  00001E                     ___wmul@multiplicand:
  1161                           	opt stack 0
  1162                           
  1163                           ; 2 bytes @ 0x1D
  1164  00001E                     	ds	2
  1165  000020                     ??___altoft:
  1166  000020                     ___wmul@product:
  1167                           	opt stack 0
  1168                           
  1169                           ; 2 bytes @ 0x1F
  1170  000020                     	ds	2
  1171  000022                     ?_sprintf:
  1172                           	opt stack 0
  1173  000022                     ?___ftadd:
  1174                           	opt stack 0
  1175  000022                     sprintf@sp:
  1176                           	opt stack 0
  1177  000022                     ___ftadd@f1:
  1178                           	opt stack 0
  1179                           
  1180                           ; 3 bytes @ 0x21
  1181  000022                     	ds	2
  1182  000024                     ___altoft@exp:
  1183                           	opt stack 0
  1184  000024                     sprintf@f:
  1185                           	opt stack 0
  1186                           
  1187                           ; 2 bytes @ 0x23
  1188  000024                     	ds	1
  1189  000025                     ___altoft@sign:
  1190                           	opt stack 0
  1191  000025                     ___ftadd@f2:
  1192                           	opt stack 0
  1193                           
  1194                           ; 3 bytes @ 0x24
  1195  000025                     	ds	3
  1196  000028                     ??___ftadd:
  1197                           
  1198                           ; 1 bytes @ 0x27
  1199  000028                     	ds	3
  1200  00002B                     ___ftadd@sign:
  1201                           	opt stack 0
  1202                           
  1203                           ; 1 bytes @ 0x2A
  1204  00002B                     	ds	1
  1205  00002C                     ??_sprintf:
  1206  00002C                     ___ftadd@exp2:
  1207                           	opt stack 0
  1208                           
  1209                           ; 1 bytes @ 0x2B
  1210  00002C                     	ds	1
  1211  00002D                     ___ftadd@exp1:
  1212                           	opt stack 0
  1213                           
  1214                           ; 1 bytes @ 0x2C
  1215  00002D                     	ds	1
  1216  00002E                     ?___ftsub:
  1217                           	opt stack 0
  1218  00002E                     ?_floor:
  1219                           	opt stack 0
  1220  00002E                     ?_eval_poly:
  1221                           	opt stack 0
  1222  00002E                     ___ftsub@f1:
  1223                           	opt stack 0
  1224  00002E                     floor@x:
  1225                           	opt stack 0
  1226  00002E                     eval_poly@x:
  1227                           	opt stack 0
  1228                           
  1229                           ; 3 bytes @ 0x2D
  1230  00002E                     	ds	2
  1231  000030                     sprintf@ap:
  1232                           	opt stack 0
  1233                           
  1234                           ; 2 bytes @ 0x2F
  1235  000030                     	ds	1
  1236  000031                     eval_poly@d:
  1237                           	opt stack 0
  1238  000031                     ___ftsub@f2:
  1239                           	opt stack 0
  1240  000031                     floor@i:
  1241                           	opt stack 0
  1242                           
  1243                           ; 3 bytes @ 0x30
  1244  000031                     	ds	1
  1245  000032                     sprintf@flag:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x31
  1249  000032                     	ds	1
  1250  000033                     sprintf@val:
  1251                           	opt stack 0
  1252  000033                     eval_poly@n:
  1253                           	opt stack 0
  1254                           
  1255                           ; 2 bytes @ 0x32
  1256  000033                     	ds	1
  1257  000034                     floor@expon:
  1258                           	opt stack 0
  1259                           
  1260                           ; 2 bytes @ 0x33
  1261  000034                     	ds	1
  1262  000035                     ??_eval_poly:
  1263  000035                     sprintf@prec:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0x34
  1267  000035                     	ds	1
  1268  000036                     sprintf@width:
  1269                           	opt stack 0
  1270                           
  1271                           ; 2 bytes @ 0x35
  1272  000036                     	ds	1
  1273  000037                     eval_poly@res:
  1274                           	opt stack 0
  1275                           
  1276                           ; 3 bytes @ 0x36
  1277  000037                     	ds	1
  1278  000038                     sprintf@c:
  1279                           	opt stack 0
  1280                           
  1281                           ; 1 bytes @ 0x37
  1282  000038                     	ds	1
  1283  000039                     guarda_numero_ingresado@num:
  1284                           	opt stack 0
  1285                           
  1286                           ; 2 bytes @ 0x38
  1287  000039                     	ds	1
  1288  00003A                     ?_log:
  1289                           	opt stack 0
  1290  00003A                     ?_ldexp:
  1291                           	opt stack 0
  1292  00003A                     ldexp@value:
  1293                           	opt stack 0
  1294  00003A                     log@x:
  1295                           	opt stack 0
  1296                           
  1297                           ; 3 bytes @ 0x39
  1298  00003A                     	ds	1
  1299  00003B                     ??_ingreso_numero:
  1300                           
  1301                           ; 1 bytes @ 0x3A
  1302  00003B                     	ds	2
  1303  00003D                     ??_activar_alarma:
  1304  00003D                     ir_a_pantalla_editar_contrasenia@i:
  1305                           	opt stack 0
  1306  00003D                     ldexp@newexp:
  1307                           	opt stack 0
  1308  00003D                     log@exponent:
  1309                           	opt stack 0
  1310                           
  1311                           ; 2 bytes @ 0x3C
  1312  00003D                     	ds	1
  1313  00003E                     activar_alarma@intentos_de_contrasenia:
  1314                           	opt stack 0
  1315                           
  1316                           ; 2 bytes @ 0x3D
  1317  00003E                     	ds	1
  1318  00003F                     ??_ldexp:
  1319                           
  1320                           ; 1 bytes @ 0x3E
  1321  00003F                     	ds	2
  1322  000041                     ?_exp:
  1323                           	opt stack 0
  1324  000041                     exp@x:
  1325                           	opt stack 0
  1326                           
  1327                           ; 3 bytes @ 0x40
  1328  000041                     	ds	3
  1329  000044                     _exp$2471:
  1330                           	opt stack 0
  1331                           
  1332                           ; 3 bytes @ 0x43
  1333  000044                     	ds	3
  1334  000047                     exp@exponent:
  1335                           	opt stack 0
  1336                           
  1337                           ; 2 bytes @ 0x46
  1338  000047                     	ds	2
  1339  000049                     exp@sign:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x48
  1343  000049                     	ds	1
  1344  00004A                     ?_pow:
  1345                           	opt stack 0
  1346  00004A                     pow@x:
  1347                           	opt stack 0
  1348                           
  1349                           ; 3 bytes @ 0x49
  1350  00004A                     	ds	3
  1351  00004D                     pow@y:
  1352                           	opt stack 0
  1353                           
  1354                           ; 3 bytes @ 0x4C
  1355  00004D                     	ds	3
  1356  000050                     _pow$2469:
  1357                           	opt stack 0
  1358                           
  1359                           ; 3 bytes @ 0x4F
  1360  000050                     	ds	3
  1361  000053                     _pow$2470:
  1362                           	opt stack 0
  1363                           
  1364                           ; 3 bytes @ 0x52
  1365  000053                     	ds	3
  1366  000056                     pow@sign:
  1367                           	opt stack 0
  1368                           
  1369                           ; 1 bytes @ 0x55
  1370  000056                     	ds	1
  1371  000057                     pow@yi:
  1372                           	opt stack 0
  1373                           
  1374                           ; 4 bytes @ 0x56
  1375  000057                     	ds	4
  1376  00005B                     ?_covertir_valores_de_array_a_escala_decimal:
  1377                           	opt stack 0
  1378                           
  1379                           ; 2 bytes @ 0x5A
  1380  00005B                     	ds	2
  1381  00005D                     ??_covertir_valores_de_array_a_escala_decimal:
  1382                           
  1383                           ; 1 bytes @ 0x5C
  1384  00005D                     	ds	2
  1385  00005F                     ??_editar_fecha_reloj_digital:
  1386  00005F                     ??_editar_hora_reloj_digital:
  1387                           
  1388                           ; 1 bytes @ 0x5E
  1389  00005F                     	ds	1
  1390  000060                     tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           
  1399                           ; 1 bytes @ 0x5F
  1400 ;;
  1401 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1402 ;;
  1403 ;; *************** function _main *****************
  1404 ;; Defined at:
  1405 ;;		line 775 in file "main.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  2  460[None  ] int 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1421 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1423 ;;Total ram usage:        1 bytes
  1424 ;; Hardware stack levels required when called:   13
  1425 ;; This function calls:
  1426 ;;		_Read_RTC
  1427 ;;		_ir_a_pantalla_inicial
  1428 ;;		_setup
  1429 ;; This function is called by:
  1430 ;;		Startup code after reset
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text0
  1435  00D2CE                     __ptext0:
  1436                           	opt stack 0
  1437  00D2CE                     _main:
  1438                           	opt stack 18
  1439                           
  1440                           ;main.c: 776: setup();
  1441                           
  1442                           ;incstack = 0
  1443  00D2CE  EC27  F06A         	call	_setup	;wreg free
  1444  00D2D2                     
  1445                           ;main.c: 780: Read_RTC();
  1446  00D2D2  EC1A  F076         	call	_Read_RTC	;wreg free
  1447                           
  1448                           ;main.c: 782: ir_a_pantalla_inicial();
  1449  00D2D6  ECF8  F068         	call	_ir_a_pantalla_inicial	;wreg free
  1450  00D2DA  D7FB               	goto	l461
  1451                           
  1452                           ;main.c: 783: }
  1453                           ;main.c: 785: _delay((unsigned long)((98)*(8000000/4000.0)));
  1454  00D2DC  0EFF               	movlw	255
  1455  00D2DE  0100               	movlb	0	; () banked
  1456  00D2E0  6FDA               	movwf	??_main& (0+255),b
  1457  00D2E2  0E8A               	movlw	138
  1458  00D2E4                     u6417:
  1459  00D2E4  2EE8               	decfsz	wreg,f,c
  1460  00D2E6  D7FE               	bra	u6417
  1461  00D2E8  2FDA               	decfsz	??_main& (0+255),f,b
  1462  00D2EA  D7FC               	bra	u6417
  1463  00D2EC  F000               	nop	
  1464                           
  1465                           ;main.c: 786: return 0;
  1466                           ;	Return value of _main is never used
  1467  00D2EE  EF00  F000         	goto	start
  1468  00D2F2                     __end_of_main:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           postinc0	equ	0xFEE
  1475                           wreg	equ	0xFE8
  1476                           postdec1	equ	0xFE5
  1477                           fsr1l	equ	0xFE1
  1478                           
  1479 ;; *************** function _setup *****************
  1480 ;; Defined at:
  1481 ;;		line 737 in file "main.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;		None
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;Total ram usage:        0 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    7
  1502 ;; This function calls:
  1503 ;;		_Write_RTC
  1504 ;;		_lcd_comand
  1505 ;;		_lcd_init
  1506 ;;		_set_reloj_digital
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text1
  1513  00D44E                     __ptext1:
  1514                           	opt stack 0
  1515  00D44E                     _setup:
  1516                           	opt stack 23
  1517                           
  1518                           ;main.c: 738: OSCTUNEbits.INTSRC = 1;
  1519                           
  1520                           ;incstack = 0
  1521  00D44E  8E9B               	bsf	3995,7,c	;volatile
  1522                           
  1523                           ;main.c: 739: OSCTUNEbits.PLLEN = 0;
  1524  00D450  9C9B               	bcf	3995,6,c	;volatile
  1525                           
  1526                           ;main.c: 740: OSCCONbits.IRCF0 = 1;
  1527  00D452  88D3               	bsf	4051,4,c	;volatile
  1528                           
  1529                           ;main.c: 741: OSCCONbits.IRCF1 = 1;
  1530  00D454  8AD3               	bsf	4051,5,c	;volatile
  1531                           
  1532                           ;main.c: 742: OSCCONbits.IRCF2 = 1;
  1533  00D456  8CD3               	bsf	4051,6,c	;volatile
  1534                           
  1535                           ;main.c: 743: OSCCONbits.SCS0 = 0;
  1536  00D458  90D3               	bcf	4051,0,c	;volatile
  1537                           
  1538                           ;main.c: 744: OSCCONbits.SCS1 = 0;
  1539  00D45A  92D3               	bcf	4051,1,c	;volatile
  1540                           
  1541                           ;main.c: 746: TRISA = 0b11110000;
  1542  00D45C  0EF0               	movlw	240
  1543  00D45E  6E92               	movwf	3986,c	;volatile
  1544                           
  1545                           ;main.c: 747: TRISB = 0;
  1546  00D460  0E00               	movlw	0
  1547  00D462  6E93               	movwf	3987,c	;volatile
  1548                           
  1549                           ;main.c: 748: TRISC = 0b11100111;
  1550  00D464  0EE7               	movlw	231
  1551  00D466  6E94               	movwf	3988,c	;volatile
  1552                           
  1553                           ;main.c: 756: ANCON0 = 0b11111111;
  1554  00D468  010F               	movlb	15	; () banked
  1555  00D46A  6948               	setf	72,b	;volatile
  1556                           
  1557                           ; BSR set to: 15
  1558                           ;main.c: 758: ANCON1 = 0b11111111;
  1559  00D46C  010F               	movlb	15	; () banked
  1560  00D46E  6949               	setf	73,b	;volatile
  1561                           
  1562                           ; BSR set to: 15
  1563                           ;main.c: 761: RTCCFGbits.RTCEN = 1;
  1564  00D470  010F               	movlb	15	; () banked
  1565  00D472  8F3F               	bsf	63,7,b	;volatile
  1566                           
  1567                           ; BSR set to: 15
  1568                           ;main.c: 762: RTCCFGbits.RTCWREN = 1;
  1569  00D474  010F               	movlb	15	; () banked
  1570  00D476  8B3F               	bsf	63,5,b	;volatile
  1571                           
  1572                           ; BSR set to: 15
  1573                           ;main.c: 763: T1CONbits.T1OSCEN = 1;
  1574  00D478  86CD               	bsf	4045,3,c	;volatile
  1575                           
  1576                           ; BSR set to: 15
  1577                           ;main.c: 764: Write_RTC();
  1578  00D47A  EC78  F077         	call	_Write_RTC	;wreg free
  1579                           
  1580                           ;main.c: 765: lcd_init();
  1581  00D47E  ECBA  F06B         	call	_lcd_init	;wreg free
  1582                           
  1583                           ;main.c: 766: lcd_comand(0b00001100);
  1584  00D482  0E0C               	movlw	12
  1585  00D484  ECFF  F068         	call	_lcd_comand
  1586                           
  1587                           ;main.c: 767: LATBbits.LATB2 = 0;;
  1588  00D488  948A               	bcf	3978,2,c	;volatile
  1589                           
  1590                           ;main.c: 768: LATBbits.LATB1 = 0;;
  1591  00D48A  928A               	bcf	3978,1,c	;volatile
  1592                           
  1593                           ;main.c: 769: LATBbits.LATB0 = 0;;
  1594  00D48C  908A               	bcf	3978,0,c	;volatile
  1595                           
  1596                           ;main.c: 771: set_reloj_digital();
  1597  00D48E  ECED  F068         	call	_set_reloj_digital	;wreg free
  1598                           
  1599                           ;main.c: 772: Write_RTC();
  1600  00D492  EC78  F077         	call	_Write_RTC	;wreg free
  1601  00D496  0012               	return		;funcret
  1602  00D498                     __end_of_setup:
  1603                           	opt stack 0
  1604                           tblptru	equ	0xFF8
  1605                           tblptrh	equ	0xFF7
  1606                           tblptrl	equ	0xFF6
  1607                           tablat	equ	0xFF5
  1608                           postinc0	equ	0xFEE
  1609                           wreg	equ	0xFE8
  1610                           postdec1	equ	0xFE5
  1611                           fsr1l	equ	0xFE1
  1612                           
  1613 ;; *************** function _lcd_init *****************
  1614 ;; Defined at:
  1615 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  i               1    4[COMRAM] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;Total ram usage:        1 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    2
  1636 ;; This function calls:
  1637 ;;		_Delay1KTCYx
  1638 ;;		_lcd_send_byte
  1639 ;;		_lcd_send_nibble
  1640 ;; This function is called by:
  1641 ;;		_setup
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text2
  1646  00D774                     __ptext2:
  1647                           	opt stack 0
  1648  00D774                     _lcd_init:
  1649                           	opt stack 27
  1650                           
  1651                           ;unmc_lcd_216.c: 120: int8 i;
  1652                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  1653                           
  1654                           ;incstack = 0
  1655  00D774  9693               	bcf	3987,3,c	;volatile
  1656                           
  1657                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  1658  00D776  9493               	bcf	3987,2,c	;volatile
  1659                           
  1660                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  1661  00D778  968A               	bcf	3978,3,c	;volatile
  1662                           
  1663                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  1664  00D77A  948A               	bcf	3978,2,c	;volatile
  1665                           
  1666                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  1667  00D77C  9893               	bcf	3987,4,c	;volatile
  1668                           
  1669                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  1670  00D77E  9A93               	bcf	3987,5,c	;volatile
  1671                           
  1672                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  1673  00D780  9C93               	bcf	3987,6,c	;volatile
  1674                           
  1675                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  1676  00D782  9E93               	bcf	3987,7,c	;volatile
  1677                           
  1678                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  1679  00D784  0E0A               	movlw	10
  1680  00D786  EC0E  F069         	call	_Delay1KTCYx
  1681                           
  1682                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  1683  00D78A  0E0A               	movlw	10
  1684  00D78C  EC0E  F069         	call	_Delay1KTCYx
  1685                           
  1686                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  1687  00D790  0E0A               	movlw	10
  1688  00D792  EC0E  F069         	call	_Delay1KTCYx
  1689                           
  1690                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  1691  00D796  0E00               	movlw	0
  1692  00D798  6E05               	movwf	lcd_init@i,c
  1693  00D79A                     l5239:
  1694  00D79A  0E02               	movlw	2
  1695  00D79C  6405               	cpfsgt	lcd_init@i,c
  1696  00D79E  D001               	goto	l487
  1697  00D7A0  D008               	goto	u6370
  1698  00D7A2                     l487:
  1699                           
  1700                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  1701  00D7A2  0E03               	movlw	3
  1702  00D7A4  EC7F  F06B         	call	_lcd_send_nibble
  1703                           
  1704                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  1705  00D7A8  0E0A               	movlw	10
  1706  00D7AA  EC0E  F069         	call	_Delay1KTCYx
  1707  00D7AE  2A05               	incf	lcd_init@i,f,c
  1708  00D7B0  D7F4               	goto	l5239
  1709  00D7B2                     u6370:
  1710                           
  1711                           ;unmc_lcd_216.c: 146: }
  1712                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  1713  00D7B2  0E02               	movlw	2
  1714  00D7B4  EC7F  F06B         	call	_lcd_send_nibble
  1715                           
  1716                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  1717  00D7B8  0E00               	movlw	0
  1718  00D7BA  6E05               	movwf	lcd_init@i,c
  1719  00D7BC                     l5253:
  1720  00D7BC  0E03               	movlw	3
  1721  00D7BE  6405               	cpfsgt	lcd_init@i,c
  1722  00D7C0  D001               	goto	l489
  1723  00D7C2  0012               	return	
  1724  00D7C4                     l489:
  1725                           
  1726                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  1727  00D7C4  5005               	movf	lcd_init@i,w,c
  1728  00D7C6  0D01               	mullw	1
  1729  00D7C8  0EED               	movlw	low _LCD_INIT_STRING
  1730  00D7CA  24F3               	addwf	prodl,w,c
  1731  00D7CC  6EF6               	movwf	tblptrl,c
  1732  00D7CE  0EFE               	movlw	high _LCD_INIT_STRING
  1733  00D7D0  20F4               	addwfc	prodh,w,c
  1734  00D7D2  6EF7               	movwf	tblptrh,c
  1735  00D7D4                     	if	0	;There are less than 3 active tblptr bytes
  1736  00D7D4                     	endif
  1737  00D7D4  0008               	tblrd		*
  1738  00D7D6  CFF5 F003          	movff	tablat,lcd_send_byte@n
  1739  00D7DA  0E00               	movlw	0
  1740  00D7DC  EC8C  F069         	call	_lcd_send_byte
  1741                           
  1742                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  1743  00D7E0  0E0A               	movlw	10
  1744  00D7E2  EC0E  F069         	call	_Delay1KTCYx
  1745  00D7E6  2A05               	incf	lcd_init@i,f,c
  1746  00D7E8  D7E9               	goto	l5253
  1747  00D7EA                     __end_of_lcd_init:
  1748                           	opt stack 0
  1749                           tblptru	equ	0xFF8
  1750                           tblptrh	equ	0xFF7
  1751                           tblptrl	equ	0xFF6
  1752                           tablat	equ	0xFF5
  1753                           prodh	equ	0xFF4
  1754                           prodl	equ	0xFF3
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postdec1	equ	0xFE5
  1758                           fsr1l	equ	0xFE1
  1759                           
  1760 ;; *************** function _Delay1KTCYx *****************
  1761 ;; Defined at:
  1762 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  unit            1    wreg     unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  unit            1    0[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1779 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1780 ;;Total ram usage:        1 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_lcd_init
  1786 ;;		_DelayPORXLCD
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text3
  1791  00D21C                     __ptext3:
  1792                           	opt stack 0
  1793  00D21C                     _Delay1KTCYx:
  1794                           	opt stack 28
  1795                           
  1796                           ;incstack = 0
  1797                           ;Delay1KTCYx@unit stored from wreg
  1798  00D21C  6E01               	movwf	Delay1KTCYx@unit,c
  1799  00D21E                     l874:
  1800  00D21E  0EC8               	movlw	200
  1801  00D220                     u6427:
  1802  00D220  D000               	nop2	
  1803  00D222  2EE8               	decfsz	wreg,f,c
  1804  00D224  D7FD               	bra	u6427
  1805  00D226  2E01               	decfsz	Delay1KTCYx@unit,f,c
  1806  00D228  D7FA               	goto	l874
  1807  00D22A  0012               	return	
  1808  00D22C                     __end_of_Delay1KTCYx:
  1809                           	opt stack 0
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           prodh	equ	0xFF4
  1815                           prodl	equ	0xFF3
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           postdec1	equ	0xFE5
  1819                           fsr1l	equ	0xFE1
  1820                           
  1821 ;; *************** function _lcd_comand *****************
  1822 ;; Defined at:
  1823 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  d               1    wreg     unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  d               1    4[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    2
  1844 ;; This function calls:
  1845 ;;		_lcd_send_byte
  1846 ;; This function is called by:
  1847 ;;		_setup
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text4
  1852  00D1FE                     __ptext4:
  1853                           	opt stack 0
  1854  00D1FE                     _lcd_comand:
  1855                           	opt stack 27
  1856                           
  1857                           ;incstack = 0
  1858                           ;lcd_comand@d stored from wreg
  1859  00D1FE  6E05               	movwf	lcd_comand@d,c
  1860                           
  1861                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  1862  00D200  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  1863  00D204  0E00               	movlw	0
  1864  00D206  EC8C  F069         	call	_lcd_send_byte
  1865  00D20A  0012               	return		;funcret
  1866  00D20C                     __end_of_lcd_comand:
  1867                           	opt stack 0
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           prodh	equ	0xFF4
  1873                           prodl	equ	0xFF3
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           postdec1	equ	0xFE5
  1877                           fsr1l	equ	0xFE1
  1878                           
  1879 ;; *************** function _ir_a_pantalla_inicial *****************
  1880 ;; Defined at:
  1881 ;;		line 539 in file "main.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;		None
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;		None
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1899 ;;Total ram usage:        0 bytes
  1900 ;; Hardware stack levels used:    1
  1901 ;; Hardware stack levels required when called:   12
  1902 ;; This function calls:
  1903 ;;		_set_reloj_digital
  1904 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  1905 ;;		_titila_texto_insert_password
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           	psect	text5
  1912  00D1F0                     __ptext5:
  1913                           	opt stack 0
  1914  00D1F0                     _ir_a_pantalla_inicial:
  1915                           	opt stack 18
  1916                           
  1917                           ;main.c: 540: set_reloj_digital();
  1918                           
  1919                           ;incstack = 0
  1920  00D1F0  ECED  F068         	call	_set_reloj_digital	;wreg free
  1921                           
  1922                           ;main.c: 541: titila_texto_insert_password();
  1923  00D1F4  EC4F  F070         	call	_titila_texto_insert_password	;wreg free
  1924                           
  1925                           ;main.c: 542: si_apreta_numero_va_a_pantalla_contrasenia();
  1926  00D1F8  ECFB  F06D         	call	_si_apreta_numero_va_a_pantalla_contrasenia	;wreg free
  1927  00D1FC  0012               	return		;funcret
  1928  00D1FE                     __end_of_ir_a_pantalla_inicial:
  1929                           	opt stack 0
  1930                           tblptru	equ	0xFF8
  1931                           tblptrh	equ	0xFF7
  1932                           tblptrl	equ	0xFF6
  1933                           tablat	equ	0xFF5
  1934                           prodh	equ	0xFF4
  1935                           prodl	equ	0xFF3
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           postdec1	equ	0xFE5
  1939                           fsr1l	equ	0xFE1
  1940                           
  1941 ;; *************** function _titila_texto_insert_password *****************
  1942 ;; Defined at:
  1943 ;;		line 100 in file "main.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;Total ram usage:        1 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; Hardware stack levels required when called:    5
  1964 ;; This function calls:
  1965 ;;		_lcd_gotoxy
  1966 ;;		_lcd_putrs
  1967 ;; This function is called by:
  1968 ;;		_ir_a_pantalla_inicial
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text6
  1973  00E09E                     __ptext6:
  1974                           	opt stack 0
  1975  00E09E                     _titila_texto_insert_password:
  1976                           	opt stack 24
  1977                           
  1978                           ;main.c: 101: if (txt_insertar_contrasenia == 0) {
  1979                           
  1980                           ;incstack = 0
  1981  00E09E  0100               	movlb	0	; () banked
  1982  00E0A0  518E               	movf	_txt_insertar_contrasenia& (0+255),w,b
  1983  00E0A2  0100               	movlb	0	; () banked
  1984  00E0A4  118F               	iorwf	(_txt_insertar_contrasenia+1)& (0+255),w,b
  1985  00E0A6  A4D8               	btfss	status,2,c
  1986  00E0A8  D022               	goto	l185
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;main.c: 102: txt_insertar_contrasenia = 1;
  1990  00E0AA  0E00               	movlw	0
  1991  00E0AC  0100               	movlb	0	; () banked
  1992  00E0AE  6F8F               	movwf	(_txt_insertar_contrasenia+1)& (0+255),b
  1993  00E0B0  0E01               	movlw	1
  1994  00E0B2  6F8E               	movwf	_txt_insertar_contrasenia& (0+255),b
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;main.c: 103: lcd_gotoxy(1, 1);
  1998  00E0B4  0E01               	movlw	1
  1999  00E0B6  6E05               	movwf	lcd_gotoxy@y,c
  2000  00E0B8  0E01               	movlw	1
  2001  00E0BA  EC44  F069         	call	_lcd_gotoxy
  2002                           
  2003                           ;main.c: 104: lcd_putrs("Insert");
  2004  00E0BE  0ECD               	movlw	low STR_9
  2005  00E0C0  6E09               	movwf	lcd_putrs@ptr,c
  2006  00E0C2  0EFF               	movlw	high STR_9
  2007  00E0C4  6E0A               	movwf	lcd_putrs@ptr+1,c
  2008  00E0C6  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2009                           
  2010                           ;main.c: 105: lcd_gotoxy(1, 2);
  2011  00E0CA  0E02               	movlw	2
  2012  00E0CC  6E05               	movwf	lcd_gotoxy@y,c
  2013  00E0CE  0E01               	movlw	1
  2014  00E0D0  EC44  F069         	call	_lcd_gotoxy
  2015                           
  2016                           ;main.c: 106: lcd_putrs("Password");
  2017  00E0D4  0E99               	movlw	low STR_10
  2018  00E0D6  6E09               	movwf	lcd_putrs@ptr,c
  2019  00E0D8  0EFF               	movlw	high STR_10
  2020  00E0DA  6E0A               	movwf	lcd_putrs@ptr+1,c
  2021  00E0DC  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2022                           
  2023                           ;main.c: 107: _delay((unsigned long)((80)*(8000000/4000.0)));
  2024  00E0E0  0ED0               	movlw	208
  2025  00E0E2  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  2026  00E0E4  0ECA               	movlw	202
  2027  00E0E6                     u6437:
  2028  00E0E6  2EE8               	decfsz	wreg,f,c
  2029  00E0E8  D7FE               	bra	u6437
  2030  00E0EA  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  2031  00E0EC  D7FC               	bra	u6437
  2032  00E0EE                     l185:
  2033                           
  2034                           ;main.c: 108: }
  2035                           ;main.c: 110: if (txt_insertar_contrasenia == 1) {
  2036  00E0EE  0100               	movlb	0	; () banked
  2037  00E0F0  058E               	decf	_txt_insertar_contrasenia& (0+255),w,b
  2038  00E0F2  0100               	movlb	0	; () banked
  2039  00E0F4  118F               	iorwf	(_txt_insertar_contrasenia+1)& (0+255),w,b
  2040  00E0F6  A4D8               	btfss	status,2,c
  2041  00E0F8  0012               	return	
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;main.c: 111: txt_insertar_contrasenia = 0;
  2045  00E0FA  0E00               	movlw	0
  2046  00E0FC  0100               	movlb	0	; () banked
  2047  00E0FE  6F8F               	movwf	(_txt_insertar_contrasenia+1)& (0+255),b
  2048  00E100  0E00               	movlw	0
  2049  00E102  6F8E               	movwf	_txt_insertar_contrasenia& (0+255),b
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;main.c: 112: lcd_gotoxy(1, 1);
  2053  00E104  0E01               	movlw	1
  2054  00E106  6E05               	movwf	lcd_gotoxy@y,c
  2055  00E108  0E01               	movlw	1
  2056  00E10A  EC44  F069         	call	_lcd_gotoxy
  2057                           
  2058                           ;main.c: 113: lcd_putrs("        ");
  2059  00E10E  0E47               	movlw	low (STR_17+8)
  2060  00E110  6E09               	movwf	lcd_putrs@ptr,c
  2061  00E112  0EFF               	movlw	high (STR_17+8)
  2062  00E114  6E0A               	movwf	lcd_putrs@ptr+1,c
  2063  00E116  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2064                           
  2065                           ;main.c: 114: lcd_gotoxy(1, 2);
  2066  00E11A  0E02               	movlw	2
  2067  00E11C  6E05               	movwf	lcd_gotoxy@y,c
  2068  00E11E  0E01               	movlw	1
  2069  00E120  EC44  F069         	call	_lcd_gotoxy
  2070                           
  2071                           ;main.c: 115: lcd_putrs("        ");
  2072  00E124  0E47               	movlw	low (STR_17+8)
  2073  00E126  6E09               	movwf	lcd_putrs@ptr,c
  2074  00E128  0EFF               	movlw	high (STR_17+8)
  2075  00E12A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2076  00E12C  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2077                           
  2078                           ;main.c: 116: _delay((unsigned long)((60)*(8000000/4000.0)));
  2079  00E130  0E9C               	movlw	156
  2080  00E132  6E0B               	movwf	??_titila_texto_insert_password& (0+255),c
  2081  00E134  0ED7               	movlw	215
  2082  00E136                     u6447:
  2083  00E136  2EE8               	decfsz	wreg,f,c
  2084  00E138  D7FE               	bra	u6447
  2085  00E13A  2E0B               	decfsz	??_titila_texto_insert_password& (0+255),f,c
  2086  00E13C  D7FC               	bra	u6447
  2087  00E13E  F000               	nop	
  2088  00E140  0012               	return	
  2089  00E142                     __end_of_titila_texto_insert_password:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           postdec1	equ	0xFE5
  2100                           fsr1l	equ	0xFE1
  2101                           status	equ	0xFD8
  2102                           
  2103 ;; *************** function _si_apreta_numero_va_a_pantalla_contrasenia *****************
  2104 ;; Defined at:
  2105 ;;		line 488 in file "main.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;Total ram usage:        0 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:   11
  2126 ;; This function calls:
  2127 ;;		_ir_a_pantalla_ingresar_contrasenia
  2128 ;; This function is called by:
  2129 ;;		_ir_a_pantalla_inicial
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text7
  2134  00DBF6                     __ptext7:
  2135                           	opt stack 0
  2136  00DBF6                     _si_apreta_numero_va_a_pantalla_contrasenia:
  2137                           	opt stack 18
  2138                           
  2139                           ;main.c: 489: LATAbits.LATA0 = 1;
  2140                           
  2141                           ;incstack = 0
  2142  00DBF6  8089               	bsf	3977,0,c	;volatile
  2143                           
  2144                           ;main.c: 490: LATAbits.LATA1 = 0;
  2145  00DBF8  9289               	bcf	3977,1,c	;volatile
  2146                           
  2147                           ;main.c: 491: LATAbits.LATA2 = 0;
  2148  00DBFA  9489               	bcf	3977,2,c	;volatile
  2149                           
  2150                           ;main.c: 492: LATAbits.LATA3 = 0;
  2151  00DBFC  9689               	bcf	3977,3,c	;volatile
  2152                           
  2153                           ;main.c: 493: {
  2154                           ;main.c: 494: if ((PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) ||
  2155                           ;main.c: 495: (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) ||
  2156                           ;main.c: 496: (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1)) {
  2157  00DBFE  AA80               	btfss	3968,5,c	;volatile
  2158  00DC00  D002               	goto	u6130
  2159  00DC02  B089               	btfsc	3977,0,c	;volatile
  2160  00DC04  D007               	goto	u6170
  2161  00DC06                     u6130:
  2162  00DC06  AE80               	btfss	3968,7,c	;volatile
  2163  00DC08  D002               	goto	u6150
  2164  00DC0A  B089               	btfsc	3977,0,c	;volatile
  2165  00DC0C  D003               	goto	u6170
  2166  00DC0E                     u6150:
  2167  00DC0E  BC80               	btfsc	3968,6,c	;volatile
  2168  00DC10  A089               	btfss	3977,0,c	;volatile
  2169  00DC12  D002               	goto	l352
  2170  00DC14                     u6170:
  2171                           
  2172                           ;main.c: 498: ir_a_pantalla_ingresar_contrasenia();
  2173  00DC14  ECFE  F06F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2174  00DC18                     l352:
  2175                           
  2176                           ;main.c: 499: }
  2177                           ;main.c: 500: }
  2178                           ;main.c: 501: LATAbits.LATA0 = 0;
  2179  00DC18  9089               	bcf	3977,0,c	;volatile
  2180                           
  2181                           ;main.c: 502: LATAbits.LATA1 = 1;
  2182  00DC1A  8289               	bsf	3977,1,c	;volatile
  2183                           
  2184                           ;main.c: 503: LATAbits.LATA2 = 0;
  2185  00DC1C  9489               	bcf	3977,2,c	;volatile
  2186                           
  2187                           ;main.c: 504: LATAbits.LATA3 = 0;
  2188  00DC1E  9689               	bcf	3977,3,c	;volatile
  2189                           
  2190                           ;main.c: 505: {
  2191                           ;main.c: 506: if ((PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) ||
  2192                           ;main.c: 507: (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) ||
  2193                           ;main.c: 508: (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1)) {
  2194  00DC20  AA80               	btfss	3968,5,c	;volatile
  2195  00DC22  D002               	goto	u6190
  2196  00DC24  B289               	btfsc	3977,1,c	;volatile
  2197  00DC26  D007               	goto	u6230
  2198  00DC28                     u6190:
  2199  00DC28  AE80               	btfss	3968,7,c	;volatile
  2200  00DC2A  D002               	goto	u6210
  2201  00DC2C  B289               	btfsc	3977,1,c	;volatile
  2202  00DC2E  D003               	goto	u6230
  2203  00DC30                     u6210:
  2204  00DC30  BC80               	btfsc	3968,6,c	;volatile
  2205  00DC32  A289               	btfss	3977,1,c	;volatile
  2206  00DC34  D002               	goto	l359
  2207  00DC36                     u6230:
  2208                           
  2209                           ;main.c: 510: ir_a_pantalla_ingresar_contrasenia();
  2210  00DC36  ECFE  F06F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2211  00DC3A                     l359:
  2212                           
  2213                           ;main.c: 511: }
  2214                           ;main.c: 512: }
  2215                           ;main.c: 513: LATAbits.LATA0 = 0;
  2216  00DC3A  9089               	bcf	3977,0,c	;volatile
  2217                           
  2218                           ;main.c: 514: LATAbits.LATA1 = 0;
  2219  00DC3C  9289               	bcf	3977,1,c	;volatile
  2220                           
  2221                           ;main.c: 515: LATAbits.LATA2 = 1;
  2222  00DC3E  8489               	bsf	3977,2,c	;volatile
  2223                           
  2224                           ;main.c: 516: LATAbits.LATA3 = 0;
  2225  00DC40  9689               	bcf	3977,3,c	;volatile
  2226                           
  2227                           ;main.c: 517: {
  2228                           ;main.c: 518: if ((PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) ||
  2229                           ;main.c: 519: (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) ||
  2230                           ;main.c: 520: (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1)) {
  2231  00DC42  AA80               	btfss	3968,5,c	;volatile
  2232  00DC44  D002               	goto	u6250
  2233  00DC46  B489               	btfsc	3977,2,c	;volatile
  2234  00DC48  D007               	goto	u6290
  2235  00DC4A                     u6250:
  2236  00DC4A  AE80               	btfss	3968,7,c	;volatile
  2237  00DC4C  D002               	goto	u6270
  2238  00DC4E  B489               	btfsc	3977,2,c	;volatile
  2239  00DC50  D003               	goto	u6290
  2240  00DC52                     u6270:
  2241  00DC52  BC80               	btfsc	3968,6,c	;volatile
  2242  00DC54  A489               	btfss	3977,2,c	;volatile
  2243  00DC56  D002               	goto	l366
  2244  00DC58                     u6290:
  2245                           
  2246                           ;main.c: 522: ir_a_pantalla_ingresar_contrasenia();
  2247  00DC58  ECFE  F06F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2248  00DC5C                     l366:
  2249                           
  2250                           ;main.c: 523: }
  2251                           ;main.c: 524: }
  2252                           ;main.c: 525: LATAbits.LATA0 = 0;
  2253  00DC5C  9089               	bcf	3977,0,c	;volatile
  2254                           
  2255                           ;main.c: 526: LATAbits.LATA1 = 0;
  2256  00DC5E  9289               	bcf	3977,1,c	;volatile
  2257                           
  2258                           ;main.c: 527: LATAbits.LATA2 = 0;
  2259  00DC60  9489               	bcf	3977,2,c	;volatile
  2260                           
  2261                           ;main.c: 528: LATAbits.LATA3 = 1;
  2262  00DC62  8689               	bsf	3977,3,c	;volatile
  2263                           
  2264                           ;main.c: 529: {
  2265                           ;main.c: 530: if ((PORTAbits.RA5 == 1 && LATAbits.LATA3 == 1) ||
  2266                           ;main.c: 531: (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) ||
  2267                           ;main.c: 532: (PORTAbits.RA6 == 1 && LATAbits.LATA3 == 1)) {
  2268  00DC64  AA80               	btfss	3968,5,c	;volatile
  2269  00DC66  D002               	goto	u6310
  2270  00DC68  B689               	btfsc	3977,3,c	;volatile
  2271  00DC6A  D008               	goto	u6350
  2272  00DC6C                     u6310:
  2273  00DC6C  AE80               	btfss	3968,7,c	;volatile
  2274  00DC6E  D002               	goto	u6330
  2275  00DC70  B689               	btfsc	3977,3,c	;volatile
  2276  00DC72  D004               	goto	u6350
  2277  00DC74                     u6330:
  2278  00DC74  AC80               	btfss	3968,6,c	;volatile
  2279  00DC76  0012               	return	
  2280  00DC78  A689               	btfss	3977,3,c	;volatile
  2281  00DC7A  0012               	return	
  2282  00DC7C                     u6350:
  2283                           
  2284                           ;main.c: 534: ir_a_pantalla_ingresar_contrasenia();
  2285  00DC7C  ECFE  F06F         	call	_ir_a_pantalla_ingresar_contrasenia	;wreg free
  2286  00DC80  0012               	return	
  2287  00DC82                     __end_of_si_apreta_numero_va_a_pantalla_contrasenia:
  2288                           	opt stack 0
  2289                           tblptru	equ	0xFF8
  2290                           tblptrh	equ	0xFF7
  2291                           tblptrl	equ	0xFF6
  2292                           tablat	equ	0xFF5
  2293                           prodh	equ	0xFF4
  2294                           prodl	equ	0xFF3
  2295                           postinc0	equ	0xFEE
  2296                           wreg	equ	0xFE8
  2297                           postdec1	equ	0xFE5
  2298                           fsr1l	equ	0xFE1
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function _ir_a_pantalla_ingresar_contrasenia *****************
  2302 ;; Defined at:
  2303 ;;		line 459 in file "main.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  intentos_de_    2   19[BANK0 ] int 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2320 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2321 ;;Total ram usage:        2 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:   10
  2324 ;; This function calls:
  2325 ;;		_activar_alarma
  2326 ;;		_ingreso_numero
  2327 ;;		_ir_a_pantalla_edicion
  2328 ;;		_lcd_gotoxy
  2329 ;;		_lcd_putrs
  2330 ;;		_mostrar_presionar_a
  2331 ;;		_resetear_pantalla_ingresar_contrasenia
  2332 ;;		_verificar_contrasenia
  2333 ;; This function is called by:
  2334 ;;		_si_apreta_numero_va_a_pantalla_contrasenia
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text8
  2339  00DFFC                     __ptext8:
  2340                           	opt stack 0
  2341  00DFFC                     _ir_a_pantalla_ingresar_contrasenia:
  2342                           	opt stack 18
  2343                           
  2344                           ;main.c: 461: int intentos_de_contrasenias = 0;
  2345                           
  2346                           ;incstack = 0
  2347  00DFFC  0E00               	movlw	0
  2348  00DFFE  0100               	movlb	0	; () banked
  2349  00E000  6FD9               	movwf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),b
  2350  00E002  0E00               	movlw	0
  2351  00E004  6FD8               	movwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),b
  2352                           
  2353                           ;main.c: 462: numeros_ingresados = 0;
  2354  00E006  0E00               	movlw	0
  2355  00E008  0100               	movlb	0	; () banked
  2356  00E00A  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  2357  00E00C  0E00               	movlw	0
  2358  00E00E  6F98               	movwf	_numeros_ingresados& (0+255),b
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;main.c: 463: lcd_gotoxy(1, 1);
  2362  00E010  0E01               	movlw	1
  2363  00E012  6E05               	movwf	lcd_gotoxy@y,c
  2364  00E014  0E01               	movlw	1
  2365  00E016  EC44  F069         	call	_lcd_gotoxy
  2366                           
  2367                           ;main.c: 464: lcd_putrs("Insert Password ");
  2368  00E01A  0E61               	movlw	low STR_31
  2369  00E01C  6E09               	movwf	lcd_putrs@ptr,c
  2370  00E01E  0EFF               	movlw	high STR_31
  2371  00E020  6E0A               	movwf	lcd_putrs@ptr+1,c
  2372  00E022  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2373                           
  2374                           ;main.c: 465: lcd_gotoxy(1, 2);
  2375  00E026  0E02               	movlw	2
  2376  00E028  6E05               	movwf	lcd_gotoxy@y,c
  2377  00E02A  0E01               	movlw	1
  2378  00E02C  EC44  F069         	call	_lcd_gotoxy
  2379                           
  2380                           ;main.c: 466: lcd_putrs("                ");
  2381  00E030  0E3F               	movlw	low STR_17
  2382  00E032  6E09               	movwf	lcd_putrs@ptr,c
  2383  00E034  0EFF               	movlw	high STR_17
  2384  00E036  6E0A               	movwf	lcd_putrs@ptr+1,c
  2385  00E038  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2386  00E03C                     
  2387                           ;main.c: 469: if (numeros_ingresados < 4) {
  2388  00E03C  0100               	movlb	0	; () banked
  2389  00E03E  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  2390  00E040  D008               	goto	u6070
  2391  00E042  0100               	movlb	0	; () banked
  2392  00E044  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  2393  00E046  E108               	bnz	l5123
  2394  00E048  0E04               	movlw	4
  2395  00E04A  0100               	movlb	0	; () banked
  2396  00E04C  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  2397  00E04E  B0D8               	btfsc	status,0,c
  2398  00E050  D003               	goto	l342
  2399  00E052                     u6070:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;main.c: 470: ingreso_numero();
  2403  00E052  EC3D  F07E         	call	_ingreso_numero	;wreg free
  2404                           
  2405                           ;main.c: 471: } else {
  2406  00E056  D010               	goto	l346
  2407  00E058                     l342:
  2408  00E058                     l5123:
  2409                           
  2410                           ;main.c: 472: mostrar_presionar_a();
  2411  00E058  EC29  F069         	call	_mostrar_presionar_a	;wreg free
  2412                           
  2413                           ;main.c: 473: if (verificar_contrasenia() == 1) {
  2414  00E05C  ECAB  F06C         	call	_verificar_contrasenia	;wreg free
  2415  00E060  0401               	decf	?_verificar_contrasenia,w,c
  2416  00E062  1002               	iorwf	?_verificar_contrasenia+1,w,c
  2417  00E064  A4D8               	btfss	status,2,c
  2418  00E066  D003               	goto	l344
  2419                           
  2420                           ;main.c: 474: ir_a_pantalla_edicion();
  2421  00E068  EC62  F06F         	call	_ir_a_pantalla_edicion	;wreg free
  2422                           
  2423                           ;main.c: 475: break;
  2424  00E06C  0012               	return	
  2425  00E06E                     l344:
  2426                           
  2427                           ;main.c: 477: intentos_de_contrasenias++;
  2428  00E06E  0100               	movlb	0	; () banked
  2429  00E070  4BD8               	infsnz	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),f,b
  2430  00E072  2BD9               	incf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),f,b
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;main.c: 478: resetear_pantalla_ingresar_contrasenia();
  2434  00E074  EC4C  F06A         	call	_resetear_pantalla_ingresar_contrasenia	;wreg free
  2435  00E078                     l346:
  2436                           
  2437                           ;main.c: 479: }
  2438                           ;main.c: 480: }
  2439                           ;main.c: 481: if (intentos_de_contrasenias >= 3) {
  2440  00E078  0100               	movlb	0	; () banked
  2441  00E07A  BFD9               	btfsc	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),7,b
  2442  00E07C  D7DF               	goto	l341
  2443  00E07E  0100               	movlb	0	; () banked
  2444  00E080  51D9               	movf	(ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias+1)& (0+255),w,b
  2445  00E082  E105               	bnz	u6090
  2446  00E084  0E03               	movlw	3
  2447  00E086  0100               	movlb	0	; () banked
  2448  00E088  5DD8               	subwf	ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias& (0+255),w,b
  2449  00E08A  A0D8               	btfss	status,0,c
  2450  00E08C  D7D7               	goto	l341
  2451  00E08E                     u6090:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;main.c: 482: alarma_sonando = 1;
  2455  00E08E  0E00               	movlw	0
  2456  00E090  0100               	movlb	0	; () banked
  2457  00E092  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  2458  00E094  0E01               	movlw	1
  2459  00E096  6F92               	movwf	_alarma_sonando& (0+255),b
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;main.c: 483: activar_alarma();
  2463  00E098  EC1C  F079         	call	_activar_alarma	;wreg free
  2464  00E09C  D7CF               	goto	l341
  2465  00E09E                     __end_of_ir_a_pantalla_ingresar_contrasenia:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postdec1	equ	0xFE5
  2476                           fsr1l	equ	0xFE1
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _resetear_pantalla_ingresar_contrasenia *****************
  2480 ;; Defined at:
  2481 ;;		line 234 in file "main.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  i               2   10[COMRAM] int 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;Total ram usage:        2 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    5
  2502 ;; This function calls:
  2503 ;;		_lcd_gotoxy
  2504 ;;		_lcd_putrs
  2505 ;; This function is called by:
  2506 ;;		_ir_a_pantalla_ingresar_contrasenia
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text9
  2511  00D498                     __ptext9:
  2512                           	opt stack 0
  2513  00D498                     _resetear_pantalla_ingresar_contrasenia:
  2514                           	opt stack 22
  2515                           
  2516                           ;main.c: 235: lcd_gotoxy(1, 2);
  2517                           
  2518                           ;incstack = 0
  2519  00D498  0E02               	movlw	2
  2520  00D49A  6E05               	movwf	lcd_gotoxy@y,c
  2521  00D49C  0E01               	movlw	1
  2522  00D49E  EC44  F069         	call	_lcd_gotoxy
  2523                           
  2524                           ;main.c: 236: lcd_putrs("              ");
  2525  00D4A2  0E41               	movlw	low (STR_17+2)
  2526  00D4A4  6E09               	movwf	lcd_putrs@ptr,c
  2527  00D4A6  0EFF               	movlw	high (STR_17+2)
  2528  00D4A8  6E0A               	movwf	lcd_putrs@ptr+1,c
  2529  00D4AA  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2530                           
  2531                           ;main.c: 238: for (int i = 0; i < 0; i++) {
  2532  00D4AE  0E00               	movlw	0
  2533  00D4B0  6E0C               	movwf	resetear_pantalla_ingresar_contrasenia@i+1,c
  2534  00D4B2  0E00               	movlw	0
  2535  00D4B4  6E0B               	movwf	resetear_pantalla_ingresar_contrasenia@i,c
  2536  00D4B6                     l5053:
  2537  00D4B6  AE0C               	btfss	resetear_pantalla_ingresar_contrasenia@i+1,7,c
  2538  00D4B8  D010               	goto	u6000
  2539                           
  2540                           ;main.c: 239: array_contrasenia_ingresada[i] = 0;
  2541  00D4BA  90D8               	bcf	status,0,c
  2542  00D4BC  340B               	rlcf	resetear_pantalla_ingresar_contrasenia@i,w,c
  2543  00D4BE  6ED9               	movwf	fsr2l,c
  2544  00D4C0  340C               	rlcf	resetear_pantalla_ingresar_contrasenia@i+1,w,c
  2545  00D4C2  6EDA               	movwf	fsr2h,c
  2546  00D4C4  0E60               	movlw	low _array_contrasenia_ingresada
  2547  00D4C6  26D9               	addwf	fsr2l,f,c
  2548  00D4C8  0E00               	movlw	high _array_contrasenia_ingresada
  2549  00D4CA  22DA               	addwfc	fsr2h,f,c
  2550  00D4CC  0E00               	movlw	0
  2551  00D4CE  6EDE               	movwf	postinc2,c
  2552  00D4D0  0E00               	movlw	0
  2553  00D4D2  6EDD               	movwf	postdec2,c
  2554  00D4D4  4A0B               	infsnz	resetear_pantalla_ingresar_contrasenia@i,f,c
  2555  00D4D6  2A0C               	incf	resetear_pantalla_ingresar_contrasenia@i+1,f,c
  2556  00D4D8  D7EE               	goto	l5053
  2557  00D4DA                     u6000:
  2558                           
  2559                           ;main.c: 240: }
  2560                           ;main.c: 242: numeros_ingresados = 0;
  2561  00D4DA  0E00               	movlw	0
  2562  00D4DC  0100               	movlb	0	; () banked
  2563  00D4DE  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  2564  00D4E0  0E00               	movlw	0
  2565  00D4E2  6F98               	movwf	_numeros_ingresados& (0+255),b
  2566                           
  2567                           ; BSR set to: 0
  2568  00D4E4  0012               	return		;funcret
  2569  00D4E6                     __end_of_resetear_pantalla_ingresar_contrasenia:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           prodh	equ	0xFF4
  2576                           prodl	equ	0xFF3
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1l	equ	0xFE1
  2581                           postinc2	equ	0xFDE
  2582                           postdec2	equ	0xFDD
  2583                           fsr2h	equ	0xFDA
  2584                           fsr2l	equ	0xFD9
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _mostrar_presionar_a *****************
  2588 ;; Defined at:
  2589 ;;		line 229 in file "main.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    5
  2610 ;; This function calls:
  2611 ;;		_lcd_gotoxy
  2612 ;;		_lcd_putrs
  2613 ;; This function is called by:
  2614 ;;		_ir_a_pantalla_ingresar_contrasenia
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text10
  2619  00D252                     __ptext10:
  2620                           	opt stack 0
  2621  00D252                     _mostrar_presionar_a:
  2622                           	opt stack 22
  2623                           
  2624                           ;main.c: 230: lcd_gotoxy(7, 2);
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;incstack = 0
  2628  00D252  0E02               	movlw	2
  2629  00D254  6E05               	movwf	lcd_gotoxy@y,c
  2630  00D256  0E07               	movlw	7
  2631  00D258  EC44  F069         	call	_lcd_gotoxy
  2632                           
  2633                           ;main.c: 231: lcd_putrs("Press A");
  2634  00D25C  0EC5               	movlw	low STR_14
  2635  00D25E  6E09               	movwf	lcd_putrs@ptr,c
  2636  00D260  0EFF               	movlw	high STR_14
  2637  00D262  6E0A               	movwf	lcd_putrs@ptr+1,c
  2638  00D264  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2639  00D268  0012               	return		;funcret
  2640  00D26A                     __end_of_mostrar_presionar_a:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           postinc0	equ	0xFEE
  2649                           wreg	equ	0xFE8
  2650                           postdec1	equ	0xFE5
  2651                           fsr1l	equ	0xFE1
  2652                           postinc2	equ	0xFDE
  2653                           postdec2	equ	0xFDD
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _ir_a_pantalla_edicion *****************
  2659 ;; Defined at:
  2660 ;;		line 426 in file "main.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2676 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2677 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2678 ;;Total ram usage:        1 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    9
  2681 ;; This function calls:
  2682 ;;		_Read_RTC
  2683 ;;		_cambiar_opcion
  2684 ;;		_lcd_gotoxy
  2685 ;;		_lcd_putrs
  2686 ;;		_selecciona_opcion_fecha_hora
  2687 ;;		_seleccionar_opcion
  2688 ;;		_set_reloj_digital
  2689 ;;		_titila_opcion
  2690 ;; This function is called by:
  2691 ;;		_ir_a_pantalla_ingresar_contrasenia
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text11
  2696  00DEC4                     __ptext11:
  2697                           	opt stack 0
  2698  00DEC4                     _ir_a_pantalla_edicion:
  2699                           	opt stack 18
  2700                           
  2701                           ;main.c: 427: lcd_gotoxy(1, 1);
  2702                           
  2703                           ;incstack = 0
  2704  00DEC4  0E01               	movlw	1
  2705  00DEC6  6E05               	movwf	lcd_gotoxy@y,c
  2706  00DEC8  0E01               	movlw	1
  2707  00DECA  EC44  F069         	call	_lcd_gotoxy
  2708                           
  2709                           ;main.c: 428: lcd_putrs("Active ");
  2710  00DECE  0EBD               	movlw	low STR_29
  2711  00DED0  6E09               	movwf	lcd_putrs@ptr,c
  2712  00DED2  0EFF               	movlw	high STR_29
  2713  00DED4  6E0A               	movwf	lcd_putrs@ptr+1,c
  2714  00DED6  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2715                           
  2716                           ;main.c: 429: lcd_gotoxy(1, 2);
  2717  00DEDA  0E02               	movlw	2
  2718  00DEDC  6E05               	movwf	lcd_gotoxy@y,c
  2719  00DEDE  0E01               	movlw	1
  2720  00DEE0  EC44  F069         	call	_lcd_gotoxy
  2721                           
  2722                           ;main.c: 430: lcd_putrs("Edt Pass");
  2723  00DEE4  0EB4               	movlw	low STR_22
  2724  00DEE6  6E09               	movwf	lcd_putrs@ptr,c
  2725  00DEE8  0EFF               	movlw	high STR_22
  2726  00DEEA  6E0A               	movwf	lcd_putrs@ptr+1,c
  2727  00DEEC  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2728  00DEF0                     
  2729                           ;main.c: 433: Read_RTC();
  2730  00DEF0  EC1A  F076         	call	_Read_RTC	;wreg free
  2731                           
  2732                           ;main.c: 435: set_reloj_digital();
  2733  00DEF4  ECED  F068         	call	_set_reloj_digital	;wreg free
  2734                           
  2735                           ;main.c: 436: if (boton_seleccionar == 0 || boton_seleccionar == 1) {
  2736  00DEF8  0100               	movlb	0	; () banked
  2737  00DEFA  5190               	movf	_boton_seleccionar& (0+255),w,b
  2738  00DEFC  0100               	movlb	0	; () banked
  2739  00DEFE  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2740  00DF00  B4D8               	btfsc	status,2,c
  2741  00DF02  D005               	goto	u6020
  2742                           
  2743                           ; BSR set to: 0
  2744  00DF04  0100               	movlb	0	; () banked
  2745  00DF06  0590               	decf	_boton_seleccionar& (0+255),w,b
  2746  00DF08  0100               	movlb	0	; () banked
  2747  00DF0A  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2748  00DF0C  B4D8               	btfsc	status,2,c
  2749  00DF0E                     u6020:
  2750                           
  2751                           ; BSR set to: 0
  2752                           ;main.c: 437: titila_opcion();
  2753                           
  2754                           ; BSR set to: 0
  2755  00DF0E  EC30  F072         	call	_titila_opcion	;wreg free
  2756                           
  2757                           ;main.c: 438: }
  2758                           ;main.c: 439: if (boton_seleccionar == 2 || boton_seleccionar == 3) {
  2759  00DF12  0E02               	movlw	2
  2760  00DF14  0100               	movlb	0	; () banked
  2761  00DF16  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  2762  00DF18  0100               	movlb	0	; () banked
  2763  00DF1A  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2764  00DF1C  B4D8               	btfsc	status,2,c
  2765  00DF1E  D006               	goto	u6040
  2766                           
  2767                           ; BSR set to: 0
  2768  00DF20  0E03               	movlw	3
  2769  00DF22  0100               	movlb	0	; () banked
  2770  00DF24  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  2771  00DF26  0100               	movlb	0	; () banked
  2772  00DF28  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2773  00DF2A  B4D8               	btfsc	status,2,c
  2774  00DF2C                     u6040:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;main.c: 440: selecciona_opcion_fecha_hora();
  2778                           
  2779                           ; BSR set to: 0
  2780  00DF2C  EC2C  F06D         	call	_selecciona_opcion_fecha_hora	;wreg free
  2781                           
  2782                           ;main.c: 441: }
  2783                           ;main.c: 442: cambiar_opcion();
  2784  00DF30  EC18  F06F         	call	_cambiar_opcion	;wreg free
  2785                           
  2786                           ;main.c: 443: seleccionar_opcion();
  2787  00DF34  EC73  F06A         	call	_seleccionar_opcion	;wreg free
  2788                           
  2789                           ;main.c: 446: LATAbits.LATA0 = 0;
  2790  00DF38  9089               	bcf	3977,0,c	;volatile
  2791                           
  2792                           ;main.c: 447: LATAbits.LATA1 = 1;
  2793  00DF3A  8289               	bsf	3977,1,c	;volatile
  2794                           
  2795                           ;main.c: 448: LATAbits.LATA2 = 0;
  2796  00DF3C  9489               	bcf	3977,2,c	;volatile
  2797                           
  2798                           ;main.c: 449: LATAbits.LATA3 = 0;
  2799  00DF3E  9689               	bcf	3977,3,c	;volatile
  2800                           
  2801                           ;main.c: 450: if (PORTCbits.RC2 == 1) {
  2802  00DF40  B482               	btfsc	3970,2,c	;volatile
  2803  00DF42  0012               	return	
  2804  00DF44  D7D5               	goto	l325
  2805  00DF46                     
  2806                           ;main.c: 453: _delay((unsigned long)((98)*(8000000/4000.0)));
  2807  00DF46  0EFF               	movlw	255
  2808  00DF48  0100               	movlb	0	; () banked
  2809  00DF4A  6FD7               	movwf	??_ir_a_pantalla_edicion& (0+255),b
  2810  00DF4C  0E8A               	movlw	138
  2811  00DF4E                     u6457:
  2812  00DF4E  2EE8               	decfsz	wreg,f,c
  2813  00DF50  D7FE               	bra	u6457
  2814  00DF52  2FD7               	decfsz	??_ir_a_pantalla_edicion& (0+255),f,b
  2815  00DF54  D7FC               	bra	u6457
  2816  00DF56  F000               	nop	
  2817  00DF58  A482               	btfss	3970,2,c	;volatile
  2818  00DF5A  D7CA               	goto	l325
  2819  00DF5C  D7F4               	goto	l335
  2820  00DF5E                     __end_of_ir_a_pantalla_edicion:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           postdec1	equ	0xFE5
  2831                           fsr1l	equ	0xFE1
  2832                           postinc2	equ	0xFDE
  2833                           postdec2	equ	0xFDD
  2834                           fsr2h	equ	0xFDA
  2835                           fsr2l	equ	0xFD9
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _titila_opcion *****************
  2839 ;; Defined at:
  2840 ;;		line 382 in file "main.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;Total ram usage:        1 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    5
  2861 ;; This function calls:
  2862 ;;		_lcd_gotoxy
  2863 ;;		_lcd_putrs
  2864 ;; This function is called by:
  2865 ;;		_ir_a_pantalla_edicion
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text12
  2870  00E460                     __ptext12:
  2871                           	opt stack 0
  2872  00E460                     _titila_opcion:
  2873                           	opt stack 21
  2874                           
  2875                           ;main.c: 383: if (txt_pantalla_edicion == 0) {
  2876                           
  2877                           ;incstack = 0
  2878  00E460  0100               	movlb	0	; () banked
  2879  00E462  518A               	movf	_txt_pantalla_edicion& (0+255),w,b
  2880  00E464  0100               	movlb	0	; () banked
  2881  00E466  118B               	iorwf	(_txt_pantalla_edicion+1)& (0+255),w,b
  2882  00E468  A4D8               	btfss	status,2,c
  2883  00E46A  D030               	goto	l313
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;main.c: 384: txt_pantalla_edicion = 1;
  2887  00E46C  0E00               	movlw	0
  2888  00E46E  0100               	movlb	0	; () banked
  2889  00E470  6F8B               	movwf	(_txt_pantalla_edicion+1)& (0+255),b
  2890  00E472  0E01               	movlw	1
  2891  00E474  6F8A               	movwf	_txt_pantalla_edicion& (0+255),b
  2892                           
  2893                           ; BSR set to: 0
  2894                           ;main.c: 385: lcd_gotoxy(1, 1);
  2895  00E476  0E01               	movlw	1
  2896  00E478  6E05               	movwf	lcd_gotoxy@y,c
  2897  00E47A  0E01               	movlw	1
  2898  00E47C  EC44  F069         	call	_lcd_gotoxy
  2899                           
  2900                           ;main.c: 386: lcd_putrs("Active  ");
  2901  00E480  0E90               	movlw	low STR_21
  2902  00E482  6E09               	movwf	lcd_putrs@ptr,c
  2903  00E484  0EFF               	movlw	high STR_21
  2904  00E486  6E0A               	movwf	lcd_putrs@ptr+1,c
  2905  00E488  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2906                           
  2907                           ;main.c: 387: lcd_gotoxy(1, 2);
  2908  00E48C  0E02               	movlw	2
  2909  00E48E  6E05               	movwf	lcd_gotoxy@y,c
  2910  00E490  0E01               	movlw	1
  2911  00E492  EC44  F069         	call	_lcd_gotoxy
  2912                           
  2913                           ;main.c: 388: lcd_putrs("Edt Pass");
  2914  00E496  0EB4               	movlw	low STR_22
  2915  00E498  6E09               	movwf	lcd_putrs@ptr,c
  2916  00E49A  0EFF               	movlw	high STR_22
  2917  00E49C  6E0A               	movwf	lcd_putrs@ptr+1,c
  2918  00E49E  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2919                           
  2920                           ;main.c: 389: _delay((unsigned long)((80)*(8000000/4000.0)));
  2921  00E4A2  0ED0               	movlw	208
  2922  00E4A4  6E0B               	movwf	??_titila_opcion& (0+255),c
  2923  00E4A6  0ECA               	movlw	202
  2924  00E4A8                     u6467:
  2925  00E4A8  2EE8               	decfsz	wreg,f,c
  2926  00E4AA  D7FE               	bra	u6467
  2927  00E4AC  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  2928  00E4AE  D7FC               	bra	u6467
  2929                           
  2930                           ;main.c: 390: _delay((unsigned long)((80)*(8000000/4000.0)));
  2931  00E4B0  0ED0               	movlw	208
  2932  00E4B2  6E0B               	movwf	??_titila_opcion& (0+255),c
  2933  00E4B4  0ECA               	movlw	202
  2934  00E4B6                     u6477:
  2935  00E4B6  2EE8               	decfsz	wreg,f,c
  2936  00E4B8  D7FE               	bra	u6477
  2937  00E4BA  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  2938  00E4BC  D7FC               	bra	u6477
  2939                           
  2940                           ;main.c: 391: _delay((unsigned long)((80)*(8000000/4000.0)));
  2941  00E4BE  0ED0               	movlw	208
  2942  00E4C0  6E0B               	movwf	??_titila_opcion& (0+255),c
  2943  00E4C2  0ECA               	movlw	202
  2944  00E4C4                     u6487:
  2945  00E4C4  2EE8               	decfsz	wreg,f,c
  2946  00E4C6  D7FE               	bra	u6487
  2947  00E4C8  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  2948  00E4CA  D7FC               	bra	u6487
  2949  00E4CC                     l313:
  2950                           
  2951                           ;main.c: 392: }
  2952                           ;main.c: 394: if (txt_pantalla_edicion == 1) {
  2953  00E4CC  0100               	movlb	0	; () banked
  2954  00E4CE  058A               	decf	_txt_pantalla_edicion& (0+255),w,b
  2955  00E4D0  0100               	movlb	0	; () banked
  2956  00E4D2  118B               	iorwf	(_txt_pantalla_edicion+1)& (0+255),w,b
  2957  00E4D4  A4D8               	btfss	status,2,c
  2958  00E4D6  0012               	return	
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;main.c: 395: txt_pantalla_edicion = 0;
  2962  00E4D8  0E00               	movlw	0
  2963  00E4DA  0100               	movlb	0	; () banked
  2964  00E4DC  6F8B               	movwf	(_txt_pantalla_edicion+1)& (0+255),b
  2965  00E4DE  0E00               	movlw	0
  2966  00E4E0  6F8A               	movwf	_txt_pantalla_edicion& (0+255),b
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;main.c: 397: if (boton_seleccionar == 0) {
  2970  00E4E2  0100               	movlb	0	; () banked
  2971  00E4E4  5190               	movf	_boton_seleccionar& (0+255),w,b
  2972  00E4E6  0100               	movlb	0	; () banked
  2973  00E4E8  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2974  00E4EA  A4D8               	btfss	status,2,c
  2975  00E4EC  D00B               	goto	l315
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;main.c: 398: lcd_gotoxy(1, 1);
  2979  00E4EE  0E01               	movlw	1
  2980  00E4F0  6E05               	movwf	lcd_gotoxy@y,c
  2981  00E4F2  0E01               	movlw	1
  2982  00E4F4  EC44  F069         	call	_lcd_gotoxy
  2983                           
  2984                           ;main.c: 399: lcd_putrs("       ");
  2985  00E4F8  0E48               	movlw	low (STR_17+9)
  2986  00E4FA  6E09               	movwf	lcd_putrs@ptr,c
  2987  00E4FC  0EFF               	movlw	high (STR_17+9)
  2988  00E4FE  6E0A               	movwf	lcd_putrs@ptr+1,c
  2989  00E500  EC9B  F06A         	call	_lcd_putrs	;wreg free
  2990  00E504                     l315:
  2991                           
  2992                           ;main.c: 400: }
  2993                           ;main.c: 401: if (boton_seleccionar == 1) {
  2994  00E504  0100               	movlb	0	; () banked
  2995  00E506  0590               	decf	_boton_seleccionar& (0+255),w,b
  2996  00E508  0100               	movlb	0	; () banked
  2997  00E50A  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  2998  00E50C  A4D8               	btfss	status,2,c
  2999  00E50E  D00B               	goto	l316
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;main.c: 402: lcd_gotoxy(1, 2);
  3003  00E510  0E02               	movlw	2
  3004  00E512  6E05               	movwf	lcd_gotoxy@y,c
  3005  00E514  0E01               	movlw	1
  3006  00E516  EC44  F069         	call	_lcd_gotoxy
  3007                           
  3008                           ;main.c: 403: lcd_putrs("        ");
  3009  00E51A  0E47               	movlw	low (STR_17+8)
  3010  00E51C  6E09               	movwf	lcd_putrs@ptr,c
  3011  00E51E  0EFF               	movlw	high (STR_17+8)
  3012  00E520  6E0A               	movwf	lcd_putrs@ptr+1,c
  3013  00E522  EC9B  F06A         	call	_lcd_putrs	;wreg free
  3014  00E526                     l316:
  3015                           
  3016                           ;main.c: 404: }
  3017                           ;main.c: 405: _delay((unsigned long)((60)*(8000000/4000.0)));
  3018  00E526  0E9C               	movlw	156
  3019  00E528  6E0B               	movwf	??_titila_opcion& (0+255),c
  3020  00E52A  0ED7               	movlw	215
  3021  00E52C                     u6497:
  3022  00E52C  2EE8               	decfsz	wreg,f,c
  3023  00E52E  D7FE               	bra	u6497
  3024  00E530  2E0B               	decfsz	??_titila_opcion& (0+255),f,c
  3025  00E532  D7FC               	bra	u6497
  3026  00E534  F000               	nop	
  3027  00E536  0012               	return	
  3028  00E538                     __end_of_titila_opcion:
  3029                           	opt stack 0
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           prodh	equ	0xFF4
  3035                           prodl	equ	0xFF3
  3036                           postinc0	equ	0xFEE
  3037                           wreg	equ	0xFE8
  3038                           postdec1	equ	0xFE5
  3039                           fsr1l	equ	0xFE1
  3040                           postinc2	equ	0xFDE
  3041                           postdec2	equ	0xFDD
  3042                           fsr2h	equ	0xFDA
  3043                           fsr2l	equ	0xFD9
  3044                           status	equ	0xFD8
  3045                           
  3046 ;; *************** function _set_reloj_digital *****************
  3047 ;; Defined at:
  3048 ;;		line 95 in file "main.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    6
  3069 ;; This function calls:
  3070 ;;		_setDiaMesAnio
  3071 ;;		_setHoraMinutoSegundo
  3072 ;; This function is called by:
  3073 ;;		_ir_a_pantalla_edicion
  3074 ;;		_ir_a_pantalla_inicial
  3075 ;;		_setup
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text13
  3080  00D1DA                     __ptext13:
  3081                           	opt stack 0
  3082  00D1DA                     _set_reloj_digital:
  3083                           	opt stack 23
  3084                           
  3085                           ;main.c: 96: setDiaMesAnio();
  3086                           
  3087                           ;incstack = 0
  3088  00D1DA  ECB5  F06D         	call	_setDiaMesAnio	;wreg free
  3089                           
  3090                           ;main.c: 97: setHoraMinutoSegundo();
  3091  00D1DE  EC6D  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3092  00D1E2  0012               	return		;funcret
  3093  00D1E4                     __end_of_set_reloj_digital:
  3094                           	opt stack 0
  3095                           tblptru	equ	0xFF8
  3096                           tblptrh	equ	0xFF7
  3097                           tblptrl	equ	0xFF6
  3098                           tablat	equ	0xFF5
  3099                           prodh	equ	0xFF4
  3100                           prodl	equ	0xFF3
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1l	equ	0xFE1
  3105                           postinc2	equ	0xFDE
  3106                           postdec2	equ	0xFDD
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8
  3110                           
  3111 ;; *************** function _seleccionar_opcion *****************
  3112 ;; Defined at:
  3113 ;;		line 361 in file "main.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    8
  3134 ;; This function calls:
  3135 ;;		_activar_alarma
  3136 ;;		_editar_fecha_reloj_digital
  3137 ;;		_editar_hora_reloj_digital
  3138 ;;		_ir_a_pantalla_editar_contrasenia
  3139 ;; This function is called by:
  3140 ;;		_ir_a_pantalla_edicion
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text14
  3145  00D4E6                     __ptext14:
  3146                           	opt stack 0
  3147  00D4E6                     _seleccionar_opcion:
  3148                           	opt stack 18
  3149                           
  3150                           ;main.c: 362: LATAbits.LATA0 = 1;
  3151                           
  3152                           ;incstack = 0
  3153  00D4E6  8089               	bsf	3977,0,c	;volatile
  3154                           
  3155                           ;main.c: 363: LATAbits.LATA1 = 0;
  3156  00D4E8  9289               	bcf	3977,1,c	;volatile
  3157                           
  3158                           ;main.c: 364: LATAbits.LATA2 = 0;
  3159  00D4EA  9489               	bcf	3977,2,c	;volatile
  3160                           
  3161                           ;main.c: 365: LATAbits.LATA3 = 0;
  3162  00D4EC  9689               	bcf	3977,3,c	;volatile
  3163                           
  3164                           ;main.c: 366: if (PORTCbits.RC2 == 1 && LATAbits.LATA0 == 1) {
  3165  00D4EE  A482               	btfss	3970,2,c	;volatile
  3166  00D4F0  0012               	return	
  3167  00D4F2  A089               	btfss	3977,0,c	;volatile
  3168  00D4F4  0012               	return	
  3169                           
  3170                           ;main.c: 367: if (boton_seleccionar == 0) {
  3171  00D4F6  0100               	movlb	0	; () banked
  3172  00D4F8  5190               	movf	_boton_seleccionar& (0+255),w,b
  3173  00D4FA  0100               	movlb	0	; () banked
  3174  00D4FC  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3175  00D4FE  B4D8               	btfsc	status,2,c
  3176                           
  3177                           ; BSR set to: 0
  3178                           ;main.c: 368: activar_alarma();
  3179  00D500  EC1C  F079         	call	_activar_alarma	;wreg free
  3180                           
  3181                           ;main.c: 369: }
  3182                           ;main.c: 370: if (boton_seleccionar == 1) {
  3183  00D504  0100               	movlb	0	; () banked
  3184  00D506  0590               	decf	_boton_seleccionar& (0+255),w,b
  3185  00D508  0100               	movlb	0	; () banked
  3186  00D50A  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3187  00D50C  B4D8               	btfsc	status,2,c
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;main.c: 371: ir_a_pantalla_editar_contrasenia();
  3191  00D50E  ECAF  F06F         	call	_ir_a_pantalla_editar_contrasenia	;wreg free
  3192                           
  3193                           ;main.c: 372: }
  3194                           ;main.c: 373: if (boton_seleccionar == 2) {
  3195  00D512  0E02               	movlw	2
  3196  00D514  0100               	movlb	0	; () banked
  3197  00D516  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3198  00D518  0100               	movlb	0	; () banked
  3199  00D51A  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3200  00D51C  B4D8               	btfsc	status,2,c
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;main.c: 374: editar_fecha_reloj_digital();
  3204  00D51E  EC21  F07D         	call	_editar_fecha_reloj_digital	;wreg free
  3205                           
  3206                           ;main.c: 375: }
  3207                           ;main.c: 376: if (boton_seleccionar == 3) {
  3208  00D522  0E03               	movlw	3
  3209  00D524  0100               	movlb	0	; () banked
  3210  00D526  1990               	xorwf	_boton_seleccionar& (0+255),w,b
  3211  00D528  0100               	movlb	0	; () banked
  3212  00D52A  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
  3213  00D52C  A4D8               	btfss	status,2,c
  3214  00D52E  0012               	return	
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;main.c: 377: editar_hora_reloj_digital();
  3218  00D530  ECFB  F07A         	call	_editar_hora_reloj_digital	;wreg free
  3219  00D534  0012               	return	
  3220  00D536                     __end_of_seleccionar_opcion:
  3221                           	opt stack 0
  3222                           tblptru	equ	0xFF8
  3223                           tblptrh	equ	0xFF7
  3224                           tblptrl	equ	0xFF6
  3225                           tablat	equ	0xFF5
  3226                           prodh	equ	0xFF4
  3227                           prodl	equ	0xFF3
  3228                           postinc0	equ	0xFEE
  3229                           wreg	equ	0xFE8
  3230                           postdec1	equ	0xFE5
  3231                           fsr1l	equ	0xFE1
  3232                           postinc2	equ	0xFDE
  3233                           postdec2	equ	0xFDD
  3234                           fsr2h	equ	0xFDA
  3235                           fsr2l	equ	0xFD9
  3236                           status	equ	0xFD8
  3237                           
  3238 ;; *************** function _ir_a_pantalla_editar_contrasenia *****************
  3239 ;; Defined at:
  3240 ;;		line 545 in file "main.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;		None
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  i               2   60[COMRAM] int 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3258 ;;Total ram usage:        2 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    7
  3261 ;; This function calls:
  3262 ;;		_ingreso_numero
  3263 ;;		_lcd_gotoxy
  3264 ;;		_lcd_putrs
  3265 ;; This function is called by:
  3266 ;;		_seleccionar_opcion
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text15
  3271  00DF5E                     __ptext15:
  3272                           	opt stack 0
  3273  00DF5E                     _ir_a_pantalla_editar_contrasenia:
  3274                           	opt stack 18
  3275                           
  3276                           ;main.c: 546: numeros_ingresados = 0;
  3277                           
  3278                           ;incstack = 0
  3279  00DF5E  0E00               	movlw	0
  3280  00DF60  0100               	movlb	0	; () banked
  3281  00DF62  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3282  00DF64  0E00               	movlw	0
  3283  00DF66  6F98               	movwf	_numeros_ingresados& (0+255),b
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;main.c: 547: lcd_gotoxy(1, 1);
  3287  00DF68  0E01               	movlw	1
  3288  00DF6A  6E05               	movwf	lcd_gotoxy@y,c
  3289  00DF6C  0E01               	movlw	1
  3290  00DF6E  EC44  F069         	call	_lcd_gotoxy
  3291                           
  3292                           ;main.c: 548: lcd_putrs("Insert new Password ");
  3293  00DF72  0E2A               	movlw	low STR_33
  3294  00DF74  6E09               	movwf	lcd_putrs@ptr,c
  3295  00DF76  0EFF               	movlw	high STR_33
  3296  00DF78  6E0A               	movwf	lcd_putrs@ptr+1,c
  3297  00DF7A  EC9B  F06A         	call	_lcd_putrs	;wreg free
  3298                           
  3299                           ;main.c: 549: lcd_gotoxy(1, 2);
  3300  00DF7E  0E02               	movlw	2
  3301  00DF80  6E05               	movwf	lcd_gotoxy@y,c
  3302  00DF82  0E01               	movlw	1
  3303  00DF84  EC44  F069         	call	_lcd_gotoxy
  3304                           
  3305                           ;main.c: 550: lcd_putrs("                ");
  3306  00DF88  0E3F               	movlw	low STR_17
  3307  00DF8A  6E09               	movwf	lcd_putrs@ptr,c
  3308  00DF8C  0EFF               	movlw	high STR_17
  3309  00DF8E  6E0A               	movwf	lcd_putrs@ptr+1,c
  3310  00DF90  EC9B  F06A         	call	_lcd_putrs	;wreg free
  3311  00DF94                     
  3312                           ;main.c: 552: if (numeros_ingresados < 4) {
  3313  00DF94  0100               	movlb	0	; () banked
  3314  00DF96  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3315  00DF98  D008               	goto	u5440
  3316  00DF9A  0100               	movlb	0	; () banked
  3317  00DF9C  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3318  00DF9E  E108               	bnz	l4699
  3319  00DFA0  0E04               	movlw	4
  3320  00DFA2  0100               	movlb	0	; () banked
  3321  00DFA4  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3322  00DFA6  B0D8               	btfsc	status,0,c
  3323  00DFA8  D003               	goto	l387
  3324  00DFAA                     u5440:
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;main.c: 553: ingreso_numero();
  3328  00DFAA  EC3D  F07E         	call	_ingreso_numero	;wreg free
  3329                           
  3330                           ;main.c: 554: } else {
  3331  00DFAE  D7F2               	goto	l386
  3332  00DFB0                     l387:
  3333  00DFB0                     l4699:
  3334                           
  3335                           ;main.c: 555: for (int i = 0; i < 4; i++) {
  3336  00DFB0  0E00               	movlw	0
  3337  00DFB2  6E3E               	movwf	ir_a_pantalla_editar_contrasenia@i+1,c
  3338  00DFB4  0E00               	movlw	0
  3339  00DFB6  6E3D               	movwf	ir_a_pantalla_editar_contrasenia@i,c
  3340  00DFB8                     l4701:
  3341  00DFB8  BE3E               	btfsc	ir_a_pantalla_editar_contrasenia@i+1,7,c
  3342  00DFBA  D006               	goto	l389
  3343  00DFBC  503E               	movf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3344  00DFBE  E11D               	bnz	l393
  3345  00DFC0  0E04               	movlw	4
  3346  00DFC2  5C3D               	subwf	ir_a_pantalla_editar_contrasenia@i,w,c
  3347  00DFC4  B0D8               	btfsc	status,0,c
  3348  00DFC6  0012               	return	
  3349  00DFC8                     l389:
  3350                           
  3351                           ;main.c: 556: array_contrasenia[i] = array_contrasenia_ingresada[i];
  3352  00DFC8  90D8               	bcf	status,0,c
  3353  00DFCA  343D               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3354  00DFCC  6ED9               	movwf	fsr2l,c
  3355  00DFCE  343E               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3356  00DFD0  6EDA               	movwf	fsr2h,c
  3357  00DFD2  0E60               	movlw	low _array_contrasenia_ingresada
  3358  00DFD4  26D9               	addwf	fsr2l,f,c
  3359  00DFD6  0E00               	movlw	high _array_contrasenia_ingresada
  3360  00DFD8  22DA               	addwfc	fsr2h,f,c
  3361  00DFDA  90D8               	bcf	status,0,c
  3362  00DFDC  343D               	rlcf	ir_a_pantalla_editar_contrasenia@i,w,c
  3363  00DFDE  6EE1               	movwf	fsr1l,c
  3364  00DFE0  343E               	rlcf	ir_a_pantalla_editar_contrasenia@i+1,w,c
  3365  00DFE2  6EE2               	movwf	fsr1h,c
  3366  00DFE4  0EDB               	movlw	low _array_contrasenia
  3367  00DFE6  26E1               	addwf	fsr1l,f,c
  3368  00DFE8  0E00               	movlw	high _array_contrasenia
  3369  00DFEA  22E2               	addwfc	fsr1h,f,c
  3370  00DFEC  CFDE FFE6          	movff	postinc2,postinc1
  3371  00DFF0  CFDD FFE5          	movff	postdec2,postdec1
  3372  00DFF4  4A3D               	infsnz	ir_a_pantalla_editar_contrasenia@i,f,c
  3373  00DFF6  2A3E               	incf	ir_a_pantalla_editar_contrasenia@i+1,f,c
  3374  00DFF8  D7DF               	goto	l4701
  3375  00DFFA                     l393:
  3376  00DFFA  0012               	return		;funcret
  3377  00DFFC                     __end_of_ir_a_pantalla_editar_contrasenia:
  3378                           	opt stack 0
  3379                           tblptru	equ	0xFF8
  3380                           tblptrh	equ	0xFF7
  3381                           tblptrl	equ	0xFF6
  3382                           tablat	equ	0xFF5
  3383                           prodh	equ	0xFF4
  3384                           prodl	equ	0xFF3
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postinc1	equ	0xFE6
  3388                           postdec1	equ	0xFE5
  3389                           fsr1h	equ	0xFE2
  3390                           fsr1l	equ	0xFE1
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _editar_hora_reloj_digital *****************
  3398 ;; Defined at:
  3399 ;;		line 664 in file "main.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  segundo_ingr    2   14[BANK0 ] int 
  3404 ;;  minuto_ingre    2   12[BANK0 ] int 
  3405 ;;  hora_ingresa    2   10[BANK0 ] int 
  3406 ;;  posicion        2   16[BANK0 ] int 
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3419 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3420 ;;Total ram usage:        9 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    7
  3423 ;; This function calls:
  3424 ;;		_Write_RTC
  3425 ;;		_covertir_valores_de_array_a_escala_decimal
  3426 ;;		_ingreso_numero
  3427 ;;		_setHoraMinutoSegundo
  3428 ;; This function is called by:
  3429 ;;		_seleccionar_opcion
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text16
  3434  00F5F6                     __ptext16:
  3435                           	opt stack 0
  3436  00F5F6                     _editar_hora_reloj_digital:
  3437                           	opt stack 18
  3438                           
  3439                           ;main.c: 665: int posicion = 0;
  3440                           
  3441                           ;incstack = 0
  3442  00F5F6  0E00               	movlw	0
  3443  00F5F8  0100               	movlb	0	; () banked
  3444  00F5FA  6FD6               	movwf	(editar_hora_reloj_digital@posicion+1)& (0+255),b
  3445  00F5FC  0E00               	movlw	0
  3446  00F5FE  6FD5               	movwf	editar_hora_reloj_digital@posicion& (0+255),b
  3447                           
  3448                           ;main.c: 666: motivo_ingreso_de_numeros = 1;
  3449  00F600  0E00               	movlw	0
  3450  00F602  0100               	movlb	0	; () banked
  3451  00F604  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3452  00F606  0E01               	movlw	1
  3453  00F608  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;main.c: 668: if (posicion == 0) {
  3457  00F60A  0100               	movlb	0	; () banked
  3458  00F60C  51D5               	movf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3459  00F60E  0100               	movlb	0	; () banked
  3460  00F610  11D6               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3461  00F612  A4D8               	btfss	status,2,c
  3462  00F614  D04C               	goto	l432
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;main.c: 669: numeros_ingresados = 0;
  3466  00F616  0E00               	movlw	0
  3467  00F618  0100               	movlb	0	; () banked
  3468  00F61A  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3469  00F61C  0E00               	movlw	0
  3470  00F61E  6F98               	movwf	_numeros_ingresados& (0+255),b
  3471                           
  3472                           ;main.c: 670: int hora_ingresada = 0;
  3473  00F620  0E00               	movlw	0
  3474  00F622  0100               	movlb	0	; () banked
  3475  00F624  6FD0               	movwf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),b
  3476  00F626  0E00               	movlw	0
  3477  00F628  6FCF               	movwf	editar_hora_reloj_digital@hora_ingresada& (0+255),b
  3478                           
  3479                           ;main.c: 671: while (numeros_ingresados < 3) {
  3480  00F62A  D02A               	goto	l437
  3481  00F62C                     
  3482                           ; BSR set to: 0
  3483                           ;main.c: 672: ingreso_numero();
  3484                           
  3485                           ; BSR set to: 0
  3486  00F62C  EC3D  F07E         	call	_ingreso_numero	;wreg free
  3487                           
  3488                           ;main.c: 673: if (numeros_ingresados == 2) {
  3489  00F630  0E02               	movlw	2
  3490  00F632  0100               	movlb	0	; () banked
  3491  00F634  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  3492  00F636  0100               	movlb	0	; () banked
  3493  00F638  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3494  00F63A  A4D8               	btfss	status,2,c
  3495  00F63C  D021               	goto	l437
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;main.c: 674: hora_ingresada = covertir_valores_de_array_a_escala_decimal();
  3499  00F63E  ECC4  F071         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3500  00F642  C05B  F0CF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@hora_ingre
      +                          sada
  3501  00F646  C05C  F0D0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@hora_ing
      +                          resada+1
  3502                           
  3503                           ;main.c: 675: if ((0 <= hora_ingresada) && (hora_ingresada <= 23)) {
  3504  00F64A  0100               	movlb	0	; () banked
  3505  00F64C  BFD0               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3506  00F64E  D013               	goto	l436
  3507                           
  3508                           ; BSR set to: 0
  3509  00F650  0100               	movlb	0	; () banked
  3510  00F652  BFD0               	btfsc	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),7,b
  3511  00F654  D008               	goto	u5650
  3512  00F656  0100               	movlb	0	; () banked
  3513  00F658  51D0               	movf	(editar_hora_reloj_digital@hora_ingresada+1)& (0+255),w,b
  3514  00F65A  E10D               	bnz	l4823
  3515  00F65C  0E18               	movlw	24
  3516  00F65E  0100               	movlb	0	; () banked
  3517  00F660  5DCF               	subwf	editar_hora_reloj_digital@hora_ingresada& (0+255),w,b
  3518  00F662  B0D8               	btfsc	status,0,c
  3519  00F664  D008               	goto	l436
  3520  00F666                     u5650:
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;main.c: 676: hora = hora_ingresada;
  3524  00F666  C0CF  F0E5         	movff	editar_hora_reloj_digital@hora_ingresada,_hora
  3525  00F66A  C0D0  F0E6         	movff	editar_hora_reloj_digital@hora_ingresada+1,_hora+1
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 677: numeros_ingresados++;
  3529  00F66E  0100               	movlb	0	; () banked
  3530  00F670  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  3531  00F672  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3532                           
  3533                           ;main.c: 678: } else {
  3534  00F674  D005               	goto	l437
  3535  00F676                     l436:
  3536  00F676                     l4823:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;main.c: 679: numeros_ingresados = 0;
  3540  00F676  0E00               	movlw	0
  3541  00F678  0100               	movlb	0	; () banked
  3542  00F67A  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3543  00F67C  0E00               	movlw	0
  3544  00F67E  6F98               	movwf	_numeros_ingresados& (0+255),b
  3545  00F680                     l437:
  3546                           
  3547                           ; BSR set to: 0
  3548                           
  3549                           ; BSR set to: 0
  3550                           
  3551                           ; BSR set to: 0
  3552                           
  3553                           ; BSR set to: 0
  3554  00F680  0100               	movlb	0	; () banked
  3555  00F682  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3556  00F684  D7D3               	goto	l434
  3557  00F686  0100               	movlb	0	; () banked
  3558  00F688  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3559  00F68A  E105               	bnz	l4827
  3560  00F68C  0E03               	movlw	3
  3561  00F68E  0100               	movlb	0	; () banked
  3562  00F690  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3563  00F692  A0D8               	btfss	status,0,c
  3564  00F694  D7CB               	goto	l434
  3565  00F696                     l4827:
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;main.c: 680: }
  3569                           ;main.c: 681: }
  3570                           ;main.c: 682: }
  3571                           ;main.c: 684: setHoraMinutoSegundo();
  3572  00F696  EC6D  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3573                           
  3574                           ;main.c: 685: posicion++;
  3575  00F69A  0100               	movlb	0	; () banked
  3576  00F69C  4BD5               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3577  00F69E  2BD6               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;main.c: 686: _delay((unsigned long)((50)*(8000000/4000.0)));
  3581  00F6A0  0E82               	movlw	130
  3582  00F6A2  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3583  00F6A4  0EDE               	movlw	222
  3584  00F6A6                     u6507:
  3585  00F6A6  2EE8               	decfsz	wreg,f,c
  3586  00F6A8  D7FE               	bra	u6507
  3587  00F6AA  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3588  00F6AC  D7FC               	bra	u6507
  3589  00F6AE                     l432:
  3590                           
  3591                           ;main.c: 687: }
  3592                           ;main.c: 690: if (posicion == 1) {
  3593  00F6AE  0100               	movlb	0	; () banked
  3594  00F6B0  05D5               	decf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3595  00F6B2  0100               	movlb	0	; () banked
  3596  00F6B4  11D6               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3597  00F6B6  A4D8               	btfss	status,2,c
  3598  00F6B8  D04C               	goto	l439
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;main.c: 691: numeros_ingresados = 0;
  3602  00F6BA  0E00               	movlw	0
  3603  00F6BC  0100               	movlb	0	; () banked
  3604  00F6BE  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3605  00F6C0  0E00               	movlw	0
  3606  00F6C2  6F98               	movwf	_numeros_ingresados& (0+255),b
  3607                           
  3608                           ;main.c: 692: int minuto_ingresado = 0;
  3609  00F6C4  0E00               	movlw	0
  3610  00F6C6  0100               	movlb	0	; () banked
  3611  00F6C8  6FD2               	movwf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),b
  3612  00F6CA  0E00               	movlw	0
  3613  00F6CC  6FD1               	movwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),b
  3614                           
  3615                           ;main.c: 693: while (numeros_ingresados < 3) {
  3616  00F6CE  D02A               	goto	l444
  3617  00F6D0                     
  3618                           ; BSR set to: 0
  3619                           ;main.c: 694: ingreso_numero();
  3620                           
  3621                           ; BSR set to: 0
  3622  00F6D0  EC3D  F07E         	call	_ingreso_numero	;wreg free
  3623                           
  3624                           ;main.c: 695: if (numeros_ingresados == 2) {
  3625  00F6D4  0E02               	movlw	2
  3626  00F6D6  0100               	movlb	0	; () banked
  3627  00F6D8  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  3628  00F6DA  0100               	movlb	0	; () banked
  3629  00F6DC  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3630  00F6DE  A4D8               	btfss	status,2,c
  3631  00F6E0  D021               	goto	l444
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;main.c: 696: minuto_ingresado = covertir_valores_de_array_a_escala_decimal();
  3635  00F6E2  ECC4  F071         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3636  00F6E6  C05B  F0D1         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@minuto_ing
      +                          resado
  3637  00F6EA  C05C  F0D2         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@minuto_i
      +                          ngresado+1
  3638                           
  3639                           ;main.c: 697: if ((0 <= minuto_ingresado) && (minuto_ingresado <= 59)) {
  3640  00F6EE  0100               	movlb	0	; () banked
  3641  00F6F0  BFD2               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3642  00F6F2  D013               	goto	l443
  3643                           
  3644                           ; BSR set to: 0
  3645  00F6F4  0100               	movlb	0	; () banked
  3646  00F6F6  BFD2               	btfsc	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),7,b
  3647  00F6F8  D008               	goto	u5700
  3648  00F6FA  0100               	movlb	0	; () banked
  3649  00F6FC  51D2               	movf	(editar_hora_reloj_digital@minuto_ingresado+1)& (0+255),w,b
  3650  00F6FE  E10D               	bnz	l4851
  3651  00F700  0E3C               	movlw	60
  3652  00F702  0100               	movlb	0	; () banked
  3653  00F704  5DD1               	subwf	editar_hora_reloj_digital@minuto_ingresado& (0+255),w,b
  3654  00F706  B0D8               	btfsc	status,0,c
  3655  00F708  D008               	goto	l443
  3656  00F70A                     u5700:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;main.c: 698: minuto = minuto_ingresado;
  3660  00F70A  C0D1  F0E3         	movff	editar_hora_reloj_digital@minuto_ingresado,_minuto
  3661  00F70E  C0D2  F0E4         	movff	editar_hora_reloj_digital@minuto_ingresado+1,_minuto+1
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;main.c: 699: numeros_ingresados++;
  3665  00F712  0100               	movlb	0	; () banked
  3666  00F714  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  3667  00F716  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3668                           
  3669                           ;main.c: 700: } else {
  3670  00F718  D005               	goto	l444
  3671  00F71A                     l443:
  3672  00F71A                     l4851:
  3673                           
  3674                           ; BSR set to: 0
  3675                           ;main.c: 701: numeros_ingresados = 0;
  3676  00F71A  0E00               	movlw	0
  3677  00F71C  0100               	movlb	0	; () banked
  3678  00F71E  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3679  00F720  0E00               	movlw	0
  3680  00F722  6F98               	movwf	_numeros_ingresados& (0+255),b
  3681  00F724                     l444:
  3682                           
  3683                           ; BSR set to: 0
  3684                           
  3685                           ; BSR set to: 0
  3686                           
  3687                           ; BSR set to: 0
  3688                           
  3689                           ; BSR set to: 0
  3690  00F724  0100               	movlb	0	; () banked
  3691  00F726  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3692  00F728  D7D3               	goto	l441
  3693  00F72A  0100               	movlb	0	; () banked
  3694  00F72C  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3695  00F72E  E105               	bnz	l4855
  3696  00F730  0E03               	movlw	3
  3697  00F732  0100               	movlb	0	; () banked
  3698  00F734  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3699  00F736  A0D8               	btfss	status,0,c
  3700  00F738  D7CB               	goto	l441
  3701  00F73A                     l4855:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 702: }
  3705                           ;main.c: 703: }
  3706                           ;main.c: 704: }
  3707                           ;main.c: 706: setHoraMinutoSegundo();
  3708  00F73A  EC6D  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3709                           
  3710                           ;main.c: 707: posicion++;
  3711  00F73E  0100               	movlb	0	; () banked
  3712  00F740  4BD5               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3713  00F742  2BD6               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3714                           
  3715                           ; BSR set to: 0
  3716                           ;main.c: 708: _delay((unsigned long)((50)*(8000000/4000.0)));
  3717  00F744  0E82               	movlw	130
  3718  00F746  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3719  00F748  0EDE               	movlw	222
  3720  00F74A                     u6517:
  3721  00F74A  2EE8               	decfsz	wreg,f,c
  3722  00F74C  D7FE               	bra	u6517
  3723  00F74E  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3724  00F750  D7FC               	bra	u6517
  3725  00F752                     l439:
  3726                           
  3727                           ;main.c: 709: }
  3728                           ;main.c: 712: if (posicion == 2) {
  3729  00F752  0E02               	movlw	2
  3730  00F754  0100               	movlb	0	; () banked
  3731  00F756  19D5               	xorwf	editar_hora_reloj_digital@posicion& (0+255),w,b
  3732  00F758  0100               	movlb	0	; () banked
  3733  00F75A  11D6               	iorwf	(editar_hora_reloj_digital@posicion+1)& (0+255),w,b
  3734  00F75C  A4D8               	btfss	status,2,c
  3735  00F75E  D04C               	goto	l446
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;main.c: 713: numeros_ingresados = 0;
  3739  00F760  0E00               	movlw	0
  3740  00F762  0100               	movlb	0	; () banked
  3741  00F764  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3742  00F766  0E00               	movlw	0
  3743  00F768  6F98               	movwf	_numeros_ingresados& (0+255),b
  3744                           
  3745                           ;main.c: 714: int segundo_ingresado = 0;
  3746  00F76A  0E00               	movlw	0
  3747  00F76C  0100               	movlb	0	; () banked
  3748  00F76E  6FD4               	movwf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),b
  3749  00F770  0E00               	movlw	0
  3750  00F772  6FD3               	movwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),b
  3751                           
  3752                           ;main.c: 715: while (numeros_ingresados < 3) {
  3753  00F774  D02A               	goto	l451
  3754  00F776                     
  3755                           ; BSR set to: 0
  3756                           ;main.c: 716: ingreso_numero();
  3757                           
  3758                           ; BSR set to: 0
  3759  00F776  EC3D  F07E         	call	_ingreso_numero	;wreg free
  3760                           
  3761                           ;main.c: 717: if (numeros_ingresados == 2) {
  3762  00F77A  0E02               	movlw	2
  3763  00F77C  0100               	movlb	0	; () banked
  3764  00F77E  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  3765  00F780  0100               	movlb	0	; () banked
  3766  00F782  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  3767  00F784  A4D8               	btfss	status,2,c
  3768  00F786  D021               	goto	l451
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;main.c: 718: segundo_ingresado = covertir_valores_de_array_a_escala_decimal();
  3772  00F788  ECC4  F071         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  3773  00F78C  C05B  F0D3         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_hora_reloj_digital@segundo_in
      +                          gresado
  3774  00F790  C05C  F0D4         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_hora_reloj_digital@segundo_
      +                          ingresado+1
  3775                           
  3776                           ;main.c: 719: if ((0 <= segundo_ingresado) && (segundo_ingresado <= 59)) {
  3777  00F794  0100               	movlb	0	; () banked
  3778  00F796  BFD4               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  3779  00F798  D013               	goto	l450
  3780                           
  3781                           ; BSR set to: 0
  3782  00F79A  0100               	movlb	0	; () banked
  3783  00F79C  BFD4               	btfsc	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),7,b
  3784  00F79E  D008               	goto	u5750
  3785  00F7A0  0100               	movlb	0	; () banked
  3786  00F7A2  51D4               	movf	(editar_hora_reloj_digital@segundo_ingresado+1)& (0+255),w,b
  3787  00F7A4  E10D               	bnz	l4879
  3788  00F7A6  0E3C               	movlw	60
  3789  00F7A8  0100               	movlb	0	; () banked
  3790  00F7AA  5DD3               	subwf	editar_hora_reloj_digital@segundo_ingresado& (0+255),w,b
  3791  00F7AC  B0D8               	btfsc	status,0,c
  3792  00F7AE  D008               	goto	l450
  3793  00F7B0                     u5750:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;main.c: 720: segundo = segundo_ingresado;
  3797  00F7B0  C0D3  F09A         	movff	editar_hora_reloj_digital@segundo_ingresado,_segundo
  3798  00F7B4  C0D4  F09B         	movff	editar_hora_reloj_digital@segundo_ingresado+1,_segundo+1
  3799                           
  3800                           ; BSR set to: 0
  3801                           ;main.c: 721: numeros_ingresados++;
  3802  00F7B8  0100               	movlb	0	; () banked
  3803  00F7BA  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  3804  00F7BC  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  3805                           
  3806                           ;main.c: 722: } else {
  3807  00F7BE  D005               	goto	l451
  3808  00F7C0                     l450:
  3809  00F7C0                     l4879:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;main.c: 723: numeros_ingresados = 0;
  3813  00F7C0  0E00               	movlw	0
  3814  00F7C2  0100               	movlb	0	; () banked
  3815  00F7C4  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3816  00F7C6  0E00               	movlw	0
  3817  00F7C8  6F98               	movwf	_numeros_ingresados& (0+255),b
  3818  00F7CA                     l451:
  3819                           
  3820                           ; BSR set to: 0
  3821                           
  3822                           ; BSR set to: 0
  3823                           
  3824                           ; BSR set to: 0
  3825                           
  3826                           ; BSR set to: 0
  3827  00F7CA  0100               	movlb	0	; () banked
  3828  00F7CC  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  3829  00F7CE  D7D3               	goto	l448
  3830  00F7D0  0100               	movlb	0	; () banked
  3831  00F7D2  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  3832  00F7D4  E105               	bnz	l4883
  3833  00F7D6  0E03               	movlw	3
  3834  00F7D8  0100               	movlb	0	; () banked
  3835  00F7DA  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  3836  00F7DC  A0D8               	btfss	status,0,c
  3837  00F7DE  D7CB               	goto	l448
  3838  00F7E0                     l4883:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;main.c: 724: }
  3842                           ;main.c: 725: }
  3843                           ;main.c: 726: }
  3844                           ;main.c: 728: setHoraMinutoSegundo();
  3845  00F7E0  EC6D  F06C         	call	_setHoraMinutoSegundo	;wreg free
  3846                           
  3847                           ;main.c: 729: posicion++;
  3848  00F7E4  0100               	movlb	0	; () banked
  3849  00F7E6  4BD5               	infsnz	editar_hora_reloj_digital@posicion& (0+255),f,b
  3850  00F7E8  2BD6               	incf	(editar_hora_reloj_digital@posicion+1)& (0+255),f,b
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;main.c: 730: _delay((unsigned long)((50)*(8000000/4000.0)));
  3854  00F7EA  0E82               	movlw	130
  3855  00F7EC  6E5F               	movwf	??_editar_hora_reloj_digital& (0+255),c
  3856  00F7EE  0EDE               	movlw	222
  3857  00F7F0                     u6527:
  3858  00F7F0  2EE8               	decfsz	wreg,f,c
  3859  00F7F2  D7FE               	bra	u6527
  3860  00F7F4  2E5F               	decfsz	??_editar_hora_reloj_digital& (0+255),f,c
  3861  00F7F6  D7FC               	bra	u6527
  3862  00F7F8                     l446:
  3863                           
  3864                           ;main.c: 731: }
  3865                           ;main.c: 732: Write_RTC();
  3866  00F7F8  EC78  F077         	call	_Write_RTC	;wreg free
  3867                           
  3868                           ;main.c: 733: motivo_ingreso_de_numeros = 0;
  3869  00F7FC  0E00               	movlw	0
  3870  00F7FE  0100               	movlb	0	; () banked
  3871  00F800  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  3872  00F802  0E00               	movlw	0
  3873  00F804  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;main.c: 734: numeros_ingresados = 0;
  3877  00F806  0E00               	movlw	0
  3878  00F808  0100               	movlb	0	; () banked
  3879  00F80A  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  3880  00F80C  0E00               	movlw	0
  3881  00F80E  6F98               	movwf	_numeros_ingresados& (0+255),b
  3882                           
  3883                           ; BSR set to: 0
  3884  00F810  0012               	return		;funcret
  3885  00F812                     __end_of_editar_hora_reloj_digital:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           postinc0	equ	0xFEE
  3894                           wreg	equ	0xFE8
  3895                           postinc1	equ	0xFE6
  3896                           postdec1	equ	0xFE5
  3897                           fsr1h	equ	0xFE2
  3898                           fsr1l	equ	0xFE1
  3899                           postinc2	equ	0xFDE
  3900                           postdec2	equ	0xFDD
  3901                           fsr2h	equ	0xFDA
  3902                           fsr2l	equ	0xFD9
  3903                           status	equ	0xFD8
  3904                           
  3905 ;; *************** function _setHoraMinutoSegundo *****************
  3906 ;; Defined at:
  3907 ;;		line 82 in file "main.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;		None
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;		None
  3912 ;; Return value:  Size  Location     Type
  3913 ;;                  1    wreg      void 
  3914 ;; Registers used:
  3915 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3916 ;; Tracked objects:
  3917 ;;		On entry : 0/0
  3918 ;;		On exit  : 0/0
  3919 ;;		Unchanged: 0/0
  3920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;Total ram usage:        0 bytes
  3926 ;; Hardware stack levels used:    1
  3927 ;; Hardware stack levels required when called:    5
  3928 ;; This function calls:
  3929 ;;		_Write_RTC
  3930 ;;		_lcd_gotoxy
  3931 ;;		_lcd_putrs
  3932 ;;		_sprintf
  3933 ;; This function is called by:
  3934 ;;		_set_reloj_digital
  3935 ;;		_editar_hora_reloj_digital
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text17
  3940  00D8DA                     __ptext17:
  3941                           	opt stack 0
  3942  00D8DA                     _setHoraMinutoSegundo:
  3943                           	opt stack 23
  3944                           
  3945                           ;main.c: 83: if (hora >= 24) {
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;incstack = 0
  3949  00D8DA  0100               	movlb	0	; () banked
  3950  00D8DC  BFE6               	btfsc	(_hora+1)& (0+255),7,b
  3951  00D8DE  D019               	goto	l178
  3952  00D8E0  0100               	movlb	0	; () banked
  3953  00D8E2  51E6               	movf	(_hora+1)& (0+255),w,b
  3954  00D8E4  E105               	bnz	u4740
  3955  00D8E6  0E18               	movlw	24
  3956  00D8E8  0100               	movlb	0	; () banked
  3957  00D8EA  5DE5               	subwf	_hora& (0+255),w,b
  3958  00D8EC  A0D8               	btfss	status,0,c
  3959  00D8EE  D011               	goto	l178
  3960  00D8F0                     u4740:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;main.c: 84: hora = 0;
  3964  00D8F0  0E00               	movlw	0
  3965  00D8F2  0100               	movlb	0	; () banked
  3966  00D8F4  6FE6               	movwf	(_hora+1)& (0+255),b
  3967  00D8F6  0E00               	movlw	0
  3968  00D8F8  6FE5               	movwf	_hora& (0+255),b
  3969                           
  3970                           ;main.c: 85: minuto = 0;
  3971  00D8FA  0E00               	movlw	0
  3972  00D8FC  0100               	movlb	0	; () banked
  3973  00D8FE  6FE4               	movwf	(_minuto+1)& (0+255),b
  3974  00D900  0E00               	movlw	0
  3975  00D902  6FE3               	movwf	_minuto& (0+255),b
  3976                           
  3977                           ;main.c: 86: segundo = 0;
  3978  00D904  0E00               	movlw	0
  3979  00D906  0100               	movlb	0	; () banked
  3980  00D908  6F9B               	movwf	(_segundo+1)& (0+255),b
  3981  00D90A  0E00               	movlw	0
  3982  00D90C  6F9A               	movwf	_segundo& (0+255),b
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;main.c: 87: Write_RTC();
  3986  00D90E  EC78  F077         	call	_Write_RTC	;wreg free
  3987  00D912                     l178:
  3988                           
  3989                           ;main.c: 88: }
  3990                           ;main.c: 90: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  3991  00D912  0EA9               	movlw	low _buffer2
  3992  00D914  6E22               	movwf	sprintf@sp,c
  3993  00D916  0E00               	movlw	high _buffer2
  3994  00D918  6E23               	movwf	sprintf@sp+1,c
  3995  00D91A  0E81               	movlw	low STR_8
  3996  00D91C  6E24               	movwf	sprintf@f,c
  3997  00D91E  0EFF               	movlw	high STR_8
  3998  00D920  6E25               	movwf	sprintf@f+1,c
  3999  00D922  C0E5  F026         	movff	_hora,?_sprintf+4
  4000  00D926  C0E6  F027         	movff	_hora+1,?_sprintf+5
  4001  00D92A  C0E3  F028         	movff	_minuto,?_sprintf+6
  4002  00D92E  C0E4  F029         	movff	_minuto+1,?_sprintf+7
  4003  00D932  C09A  F02A         	movff	_segundo,?_sprintf+8
  4004  00D936  C09B  F02B         	movff	_segundo+1,?_sprintf+9
  4005  00D93A  EC09  F07C         	call	_sprintf	;wreg free
  4006                           
  4007                           ;main.c: 91: lcd_gotoxy(9, 2);
  4008  00D93E  0E02               	movlw	2
  4009  00D940  6E05               	movwf	lcd_gotoxy@y,c
  4010  00D942  0E09               	movlw	9
  4011  00D944  EC44  F069         	call	_lcd_gotoxy
  4012                           
  4013                           ;main.c: 92: lcd_putrs(buffer2);
  4014  00D948  0EA9               	movlw	low _buffer2
  4015  00D94A  6E09               	movwf	lcd_putrs@ptr,c
  4016  00D94C  0E00               	movlw	high _buffer2
  4017  00D94E  6E0A               	movwf	lcd_putrs@ptr+1,c
  4018  00D950  EC9B  F06A         	call	_lcd_putrs	;wreg free
  4019  00D954  0012               	return		;funcret
  4020  00D956                     __end_of_setHoraMinutoSegundo:
  4021                           	opt stack 0
  4022                           tblptru	equ	0xFF8
  4023                           tblptrh	equ	0xFF7
  4024                           tblptrl	equ	0xFF6
  4025                           tablat	equ	0xFF5
  4026                           prodh	equ	0xFF4
  4027                           prodl	equ	0xFF3
  4028                           postinc0	equ	0xFEE
  4029                           wreg	equ	0xFE8
  4030                           postinc1	equ	0xFE6
  4031                           postdec1	equ	0xFE5
  4032                           fsr1h	equ	0xFE2
  4033                           fsr1l	equ	0xFE1
  4034                           postinc2	equ	0xFDE
  4035                           postdec2	equ	0xFDD
  4036                           fsr2h	equ	0xFDA
  4037                           fsr2l	equ	0xFD9
  4038                           status	equ	0xFD8
  4039                           
  4040 ;; *************** function _editar_fecha_reloj_digital *****************
  4041 ;; Defined at:
  4042 ;;		line 587 in file "main.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;		None
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  anio_ingresa    2   14[BANK0 ] int 
  4047 ;;  mes_ingresad    2   12[BANK0 ] int 
  4048 ;;  dia_ingresad    2   10[BANK0 ] int 
  4049 ;;  posicion        2   16[BANK0 ] int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4060 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4062 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;Total ram usage:        9 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    7
  4066 ;; This function calls:
  4067 ;;		_Write_RTC
  4068 ;;		_covertir_valores_de_array_a_escala_decimal
  4069 ;;		_ingreso_numero
  4070 ;;		_setDiaMesAnio
  4071 ;; This function is called by:
  4072 ;;		_seleccionar_opcion
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text18
  4077  00FA42                     __ptext18:
  4078                           	opt stack 0
  4079  00FA42                     _editar_fecha_reloj_digital:
  4080                           	opt stack 18
  4081                           
  4082                           ;main.c: 588: int posicion = 0;
  4083                           
  4084                           ;incstack = 0
  4085  00FA42  0E00               	movlw	0
  4086  00FA44  0100               	movlb	0	; () banked
  4087  00FA46  6FD6               	movwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),b
  4088  00FA48  0E00               	movlw	0
  4089  00FA4A  6FD5               	movwf	editar_fecha_reloj_digital@posicion& (0+255),b
  4090                           
  4091                           ;main.c: 590: motivo_ingreso_de_numeros = 1;
  4092  00FA4C  0E00               	movlw	0
  4093  00FA4E  0100               	movlb	0	; () banked
  4094  00FA50  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  4095  00FA52  0E01               	movlw	1
  4096  00FA54  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;main.c: 593: if (posicion == 0) {
  4100  00FA56  0100               	movlb	0	; () banked
  4101  00FA58  51D5               	movf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4102  00FA5A  0100               	movlb	0	; () banked
  4103  00FA5C  11D6               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4104  00FA5E  A4D8               	btfss	status,2,c
  4105  00FA60  D053               	goto	l408
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;main.c: 594: numeros_ingresados = 0;
  4109  00FA62  0E00               	movlw	0
  4110  00FA64  0100               	movlb	0	; () banked
  4111  00FA66  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4112  00FA68  0E00               	movlw	0
  4113  00FA6A  6F98               	movwf	_numeros_ingresados& (0+255),b
  4114                           
  4115                           ;main.c: 595: int dia_ingresado = 0;
  4116  00FA6C  0E00               	movlw	0
  4117  00FA6E  0100               	movlb	0	; () banked
  4118  00FA70  6FD0               	movwf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),b
  4119  00FA72  0E00               	movlw	0
  4120  00FA74  6FCF               	movwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),b
  4121                           
  4122                           ;main.c: 596: while (numeros_ingresados < 3) {
  4123  00FA76  D031               	goto	l413
  4124  00FA78                     
  4125                           ; BSR set to: 0
  4126                           ;main.c: 598: ingreso_numero();
  4127                           
  4128                           ; BSR set to: 0
  4129  00FA78  EC3D  F07E         	call	_ingreso_numero	;wreg free
  4130                           
  4131                           ;main.c: 600: if (numeros_ingresados == 2) {
  4132  00FA7C  0E02               	movlw	2
  4133  00FA7E  0100               	movlb	0	; () banked
  4134  00FA80  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  4135  00FA82  0100               	movlb	0	; () banked
  4136  00FA84  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4137  00FA86  A4D8               	btfss	status,2,c
  4138  00FA88  D028               	goto	l413
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;main.c: 601: dia_ingresado = covertir_valores_de_array_a_escala_decimal();
  4142  00FA8A  ECC4  F071         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4143  00FA8E  C05B  F0CF         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@dia_ingre
      +                          sado
  4144  00FA92  C05C  F0D0         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@dia_ing
      +                          resado+1
  4145                           
  4146                           ;main.c: 602: if ((0 < dia_ingresado) && (dia_ingresado <= 31)) {
  4147  00FA96  0100               	movlb	0	; () banked
  4148  00FA98  BFD0               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  4149  00FA9A  D01A               	goto	l412
  4150  00FA9C  0100               	movlb	0	; () banked
  4151  00FA9E  51D0               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  4152  00FAA0  E104               	bnz	u5490
  4153  00FAA2  0100               	movlb	0	; () banked
  4154  00FAA4  05CF               	decf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  4155  00FAA6  A0D8               	btfss	status,0,c
  4156  00FAA8  D013               	goto	l412
  4157  00FAAA                     u5490:
  4158                           
  4159                           ; BSR set to: 0
  4160  00FAAA  0100               	movlb	0	; () banked
  4161  00FAAC  BFD0               	btfsc	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),7,b
  4162  00FAAE  D008               	goto	u5500
  4163  00FAB0  0100               	movlb	0	; () banked
  4164  00FAB2  51D0               	movf	(editar_fecha_reloj_digital@dia_ingresado+1)& (0+255),w,b
  4165  00FAB4  E10D               	bnz	l4731
  4166  00FAB6  0E20               	movlw	32
  4167  00FAB8  0100               	movlb	0	; () banked
  4168  00FABA  5DCF               	subwf	editar_fecha_reloj_digital@dia_ingresado& (0+255),w,b
  4169  00FABC  B0D8               	btfsc	status,0,c
  4170  00FABE  D008               	goto	l412
  4171  00FAC0                     u5500:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;main.c: 603: dia = dia_ingresado;
  4175  00FAC0  C0CF  F0E7         	movff	editar_fecha_reloj_digital@dia_ingresado,_dia
  4176  00FAC4  C0D0  F0E8         	movff	editar_fecha_reloj_digital@dia_ingresado+1,_dia+1
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;main.c: 604: numeros_ingresados++;
  4180  00FAC8  0100               	movlb	0	; () banked
  4181  00FACA  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  4182  00FACC  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4183                           
  4184                           ;main.c: 605: } else {
  4185  00FACE  D005               	goto	l413
  4186  00FAD0                     l412:
  4187  00FAD0                     l4731:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;main.c: 606: numeros_ingresados = 0;
  4191  00FAD0  0E00               	movlw	0
  4192  00FAD2  0100               	movlb	0	; () banked
  4193  00FAD4  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4194  00FAD6  0E00               	movlw	0
  4195  00FAD8  6F98               	movwf	_numeros_ingresados& (0+255),b
  4196  00FADA                     l413:
  4197                           
  4198                           ; BSR set to: 0
  4199                           
  4200                           ; BSR set to: 0
  4201                           
  4202                           ; BSR set to: 0
  4203                           
  4204                           ; BSR set to: 0
  4205  00FADA  0100               	movlb	0	; () banked
  4206  00FADC  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4207  00FADE  D7CC               	goto	l410
  4208  00FAE0  0100               	movlb	0	; () banked
  4209  00FAE2  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4210  00FAE4  E105               	bnz	l4735
  4211  00FAE6  0E03               	movlw	3
  4212  00FAE8  0100               	movlb	0	; () banked
  4213  00FAEA  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  4214  00FAEC  A0D8               	btfss	status,0,c
  4215  00FAEE  D7C4               	goto	l410
  4216  00FAF0                     l4735:
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;main.c: 607: }
  4220                           ;main.c: 608: }
  4221                           ;main.c: 609: }
  4222                           ;main.c: 611: setDiaMesAnio();
  4223  00FAF0  ECB5  F06D         	call	_setDiaMesAnio	;wreg free
  4224                           
  4225                           ;main.c: 612: posicion++;
  4226  00FAF4  0100               	movlb	0	; () banked
  4227  00FAF6  4BD5               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4228  00FAF8  2BD6               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4229                           
  4230                           ; BSR set to: 0
  4231                           ;main.c: 613: _delay((unsigned long)((50)*(8000000/4000.0)));
  4232  00FAFA  0E82               	movlw	130
  4233  00FAFC  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4234  00FAFE  0EDE               	movlw	222
  4235  00FB00                     u6537:
  4236  00FB00  2EE8               	decfsz	wreg,f,c
  4237  00FB02  D7FE               	bra	u6537
  4238  00FB04  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4239  00FB06  D7FC               	bra	u6537
  4240  00FB08                     l408:
  4241                           
  4242                           ;main.c: 614: }
  4243                           ;main.c: 617: if (posicion == 1) {
  4244  00FB08  0100               	movlb	0	; () banked
  4245  00FB0A  05D5               	decf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4246  00FB0C  0100               	movlb	0	; () banked
  4247  00FB0E  11D6               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4248  00FB10  A4D8               	btfss	status,2,c
  4249  00FB12  D053               	goto	l415
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;main.c: 618: numeros_ingresados = 0;
  4253  00FB14  0E00               	movlw	0
  4254  00FB16  0100               	movlb	0	; () banked
  4255  00FB18  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4256  00FB1A  0E00               	movlw	0
  4257  00FB1C  6F98               	movwf	_numeros_ingresados& (0+255),b
  4258                           
  4259                           ;main.c: 619: int mes_ingresado = 0;
  4260  00FB1E  0E00               	movlw	0
  4261  00FB20  0100               	movlb	0	; () banked
  4262  00FB22  6FD2               	movwf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),b
  4263  00FB24  0E00               	movlw	0
  4264  00FB26  6FD1               	movwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),b
  4265                           
  4266                           ;main.c: 620: while (numeros_ingresados < 3) {
  4267  00FB28  D031               	goto	l420
  4268  00FB2A                     
  4269                           ; BSR set to: 0
  4270                           ;main.c: 621: ingreso_numero();
  4271                           
  4272                           ; BSR set to: 0
  4273  00FB2A  EC3D  F07E         	call	_ingreso_numero	;wreg free
  4274                           
  4275                           ;main.c: 622: if (numeros_ingresados == 2) {
  4276  00FB2E  0E02               	movlw	2
  4277  00FB30  0100               	movlb	0	; () banked
  4278  00FB32  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  4279  00FB34  0100               	movlb	0	; () banked
  4280  00FB36  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4281  00FB38  A4D8               	btfss	status,2,c
  4282  00FB3A  D028               	goto	l420
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;main.c: 623: mes_ingresado = covertir_valores_de_array_a_escala_decimal();
  4286  00FB3C  ECC4  F071         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4287  00FB40  C05B  F0D1         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@mes_ingre
      +                          sado
  4288  00FB44  C05C  F0D2         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@mes_ing
      +                          resado+1
  4289                           
  4290                           ;main.c: 624: if ((0 < mes_ingresado) && (mes_ingresado <= 12)) {
  4291  00FB48  0100               	movlb	0	; () banked
  4292  00FB4A  BFD2               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  4293  00FB4C  D01A               	goto	l419
  4294  00FB4E  0100               	movlb	0	; () banked
  4295  00FB50  51D2               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  4296  00FB52  E104               	bnz	u5540
  4297  00FB54  0100               	movlb	0	; () banked
  4298  00FB56  05D1               	decf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  4299  00FB58  A0D8               	btfss	status,0,c
  4300  00FB5A  D013               	goto	l419
  4301  00FB5C                     u5540:
  4302                           
  4303                           ; BSR set to: 0
  4304  00FB5C  0100               	movlb	0	; () banked
  4305  00FB5E  BFD2               	btfsc	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),7,b
  4306  00FB60  D008               	goto	u5550
  4307  00FB62  0100               	movlb	0	; () banked
  4308  00FB64  51D2               	movf	(editar_fecha_reloj_digital@mes_ingresado+1)& (0+255),w,b
  4309  00FB66  E10D               	bnz	l4759
  4310  00FB68  0E0D               	movlw	13
  4311  00FB6A  0100               	movlb	0	; () banked
  4312  00FB6C  5DD1               	subwf	editar_fecha_reloj_digital@mes_ingresado& (0+255),w,b
  4313  00FB6E  B0D8               	btfsc	status,0,c
  4314  00FB70  D008               	goto	l419
  4315  00FB72                     u5550:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;main.c: 625: mes = mes_ingresado;
  4319  00FB72  C0D1  F0EB         	movff	editar_fecha_reloj_digital@mes_ingresado,_mes
  4320  00FB76  C0D2  F0EC         	movff	editar_fecha_reloj_digital@mes_ingresado+1,_mes+1
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;main.c: 626: numeros_ingresados++;
  4324  00FB7A  0100               	movlb	0	; () banked
  4325  00FB7C  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  4326  00FB7E  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4327                           
  4328                           ;main.c: 627: } else {
  4329  00FB80  D005               	goto	l420
  4330  00FB82                     l419:
  4331  00FB82                     l4759:
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;main.c: 628: numeros_ingresados = 0;
  4335  00FB82  0E00               	movlw	0
  4336  00FB84  0100               	movlb	0	; () banked
  4337  00FB86  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4338  00FB88  0E00               	movlw	0
  4339  00FB8A  6F98               	movwf	_numeros_ingresados& (0+255),b
  4340  00FB8C                     l420:
  4341                           
  4342                           ; BSR set to: 0
  4343                           
  4344                           ; BSR set to: 0
  4345                           
  4346                           ; BSR set to: 0
  4347                           
  4348                           ; BSR set to: 0
  4349  00FB8C  0100               	movlb	0	; () banked
  4350  00FB8E  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4351  00FB90  D7CC               	goto	l417
  4352  00FB92  0100               	movlb	0	; () banked
  4353  00FB94  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4354  00FB96  E105               	bnz	l4763
  4355  00FB98  0E03               	movlw	3
  4356  00FB9A  0100               	movlb	0	; () banked
  4357  00FB9C  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  4358  00FB9E  A0D8               	btfss	status,0,c
  4359  00FBA0  D7C4               	goto	l417
  4360  00FBA2                     l4763:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;main.c: 629: }
  4364                           ;main.c: 630: }
  4365                           ;main.c: 631: }
  4366                           ;main.c: 633: setDiaMesAnio();
  4367  00FBA2  ECB5  F06D         	call	_setDiaMesAnio	;wreg free
  4368                           
  4369                           ;main.c: 634: posicion++;
  4370  00FBA6  0100               	movlb	0	; () banked
  4371  00FBA8  4BD5               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4372  00FBAA  2BD6               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;main.c: 635: _delay((unsigned long)((50)*(8000000/4000.0)));
  4376  00FBAC  0E82               	movlw	130
  4377  00FBAE  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4378  00FBB0  0EDE               	movlw	222
  4379  00FBB2                     u6547:
  4380  00FBB2  2EE8               	decfsz	wreg,f,c
  4381  00FBB4  D7FE               	bra	u6547
  4382  00FBB6  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4383  00FBB8  D7FC               	bra	u6547
  4384  00FBBA                     l415:
  4385                           
  4386                           ;main.c: 636: }
  4387                           ;main.c: 639: if (posicion == 2) {
  4388  00FBBA  0E02               	movlw	2
  4389  00FBBC  0100               	movlb	0	; () banked
  4390  00FBBE  19D5               	xorwf	editar_fecha_reloj_digital@posicion& (0+255),w,b
  4391  00FBC0  0100               	movlb	0	; () banked
  4392  00FBC2  11D6               	iorwf	(editar_fecha_reloj_digital@posicion+1)& (0+255),w,b
  4393  00FBC4  A4D8               	btfss	status,2,c
  4394  00FBC6  D04C               	goto	l422
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;main.c: 640: numeros_ingresados = 0;
  4398  00FBC8  0E00               	movlw	0
  4399  00FBCA  0100               	movlb	0	; () banked
  4400  00FBCC  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4401  00FBCE  0E00               	movlw	0
  4402  00FBD0  6F98               	movwf	_numeros_ingresados& (0+255),b
  4403                           
  4404                           ;main.c: 641: int anio_ingresado = 0;
  4405  00FBD2  0E00               	movlw	0
  4406  00FBD4  0100               	movlb	0	; () banked
  4407  00FBD6  6FD4               	movwf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),b
  4408  00FBD8  0E00               	movlw	0
  4409  00FBDA  6FD3               	movwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),b
  4410                           
  4411                           ;main.c: 642: while (numeros_ingresados < 3) {
  4412  00FBDC  D02A               	goto	l427
  4413  00FBDE                     
  4414                           ; BSR set to: 0
  4415                           ;main.c: 643: ingreso_numero();
  4416                           
  4417                           ; BSR set to: 0
  4418  00FBDE  EC3D  F07E         	call	_ingreso_numero	;wreg free
  4419                           
  4420                           ;main.c: 644: if (numeros_ingresados == 2) {
  4421  00FBE2  0E02               	movlw	2
  4422  00FBE4  0100               	movlb	0	; () banked
  4423  00FBE6  1998               	xorwf	_numeros_ingresados& (0+255),w,b
  4424  00FBE8  0100               	movlb	0	; () banked
  4425  00FBEA  1199               	iorwf	(_numeros_ingresados+1)& (0+255),w,b
  4426  00FBEC  A4D8               	btfss	status,2,c
  4427  00FBEE  D021               	goto	l427
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;main.c: 645: anio_ingresado = covertir_valores_de_array_a_escala_decimal();
  4431  00FBF0  ECC4  F071         	call	_covertir_valores_de_array_a_escala_decimal	;wreg free
  4432  00FBF4  C05B  F0D3         	movff	?_covertir_valores_de_array_a_escala_decimal,editar_fecha_reloj_digital@anio_ingr
      +                          esado
  4433  00FBF8  C05C  F0D4         	movff	?_covertir_valores_de_array_a_escala_decimal+1,editar_fecha_reloj_digital@anio_in
      +                          gresado+1
  4434                           
  4435                           ;main.c: 646: if ((0 <= anio_ingresado) && (anio_ingresado <= 99)) {
  4436  00FBFC  0100               	movlb	0	; () banked
  4437  00FBFE  BFD4               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4438  00FC00  D013               	goto	l426
  4439                           
  4440                           ; BSR set to: 0
  4441  00FC02  0100               	movlb	0	; () banked
  4442  00FC04  BFD4               	btfsc	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),7,b
  4443  00FC06  D008               	goto	u5600
  4444  00FC08  0100               	movlb	0	; () banked
  4445  00FC0A  51D4               	movf	(editar_fecha_reloj_digital@anio_ingresado+1)& (0+255),w,b
  4446  00FC0C  E10D               	bnz	l4787
  4447  00FC0E  0E64               	movlw	100
  4448  00FC10  0100               	movlb	0	; () banked
  4449  00FC12  5DD3               	subwf	editar_fecha_reloj_digital@anio_ingresado& (0+255),w,b
  4450  00FC14  B0D8               	btfsc	status,0,c
  4451  00FC16  D008               	goto	l426
  4452  00FC18                     u5600:
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;main.c: 647: anio = anio_ingresado;
  4456  00FC18  C0D3  F0ED         	movff	editar_fecha_reloj_digital@anio_ingresado,_anio
  4457  00FC1C  C0D4  F0EE         	movff	editar_fecha_reloj_digital@anio_ingresado+1,_anio+1
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;main.c: 648: numeros_ingresados++;
  4461  00FC20  0100               	movlb	0	; () banked
  4462  00FC22  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
  4463  00FC24  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
  4464                           
  4465                           ;main.c: 649: } else {
  4466  00FC26  D005               	goto	l427
  4467  00FC28                     l426:
  4468  00FC28                     l4787:
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;main.c: 650: numeros_ingresados = 0;
  4472  00FC28  0E00               	movlw	0
  4473  00FC2A  0100               	movlb	0	; () banked
  4474  00FC2C  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4475  00FC2E  0E00               	movlw	0
  4476  00FC30  6F98               	movwf	_numeros_ingresados& (0+255),b
  4477  00FC32                     l427:
  4478                           
  4479                           ; BSR set to: 0
  4480                           
  4481                           ; BSR set to: 0
  4482                           
  4483                           ; BSR set to: 0
  4484                           
  4485                           ; BSR set to: 0
  4486  00FC32  0100               	movlb	0	; () banked
  4487  00FC34  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  4488  00FC36  D7D3               	goto	l424
  4489  00FC38  0100               	movlb	0	; () banked
  4490  00FC3A  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  4491  00FC3C  E105               	bnz	l4791
  4492  00FC3E  0E03               	movlw	3
  4493  00FC40  0100               	movlb	0	; () banked
  4494  00FC42  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  4495  00FC44  A0D8               	btfss	status,0,c
  4496  00FC46  D7CB               	goto	l424
  4497  00FC48                     l4791:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;main.c: 651: }
  4501                           ;main.c: 652: }
  4502                           ;main.c: 653: }
  4503                           ;main.c: 655: setDiaMesAnio();
  4504  00FC48  ECB5  F06D         	call	_setDiaMesAnio	;wreg free
  4505                           
  4506                           ;main.c: 656: posicion++;
  4507  00FC4C  0100               	movlb	0	; () banked
  4508  00FC4E  4BD5               	infsnz	editar_fecha_reloj_digital@posicion& (0+255),f,b
  4509  00FC50  2BD6               	incf	(editar_fecha_reloj_digital@posicion+1)& (0+255),f,b
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;main.c: 657: _delay((unsigned long)((50)*(8000000/4000.0)));
  4513  00FC52  0E82               	movlw	130
  4514  00FC54  6E5F               	movwf	??_editar_fecha_reloj_digital& (0+255),c
  4515  00FC56  0EDE               	movlw	222
  4516  00FC58                     u6557:
  4517  00FC58  2EE8               	decfsz	wreg,f,c
  4518  00FC5A  D7FE               	bra	u6557
  4519  00FC5C  2E5F               	decfsz	??_editar_fecha_reloj_digital& (0+255),f,c
  4520  00FC5E  D7FC               	bra	u6557
  4521  00FC60                     l422:
  4522                           
  4523                           ;main.c: 658: }
  4524                           ;main.c: 659: Write_RTC();
  4525  00FC60  EC78  F077         	call	_Write_RTC	;wreg free
  4526                           
  4527                           ;main.c: 660: motivo_ingreso_de_numeros = 0;
  4528  00FC64  0E00               	movlw	0
  4529  00FC66  0100               	movlb	0	; () banked
  4530  00FC68  6F97               	movwf	(_motivo_ingreso_de_numeros+1)& (0+255),b
  4531  00FC6A  0E00               	movlw	0
  4532  00FC6C  6F96               	movwf	_motivo_ingreso_de_numeros& (0+255),b
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;main.c: 661: numeros_ingresados = 0;
  4536  00FC6E  0E00               	movlw	0
  4537  00FC70  0100               	movlb	0	; () banked
  4538  00FC72  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  4539  00FC74  0E00               	movlw	0
  4540  00FC76  6F98               	movwf	_numeros_ingresados& (0+255),b
  4541                           
  4542                           ; BSR set to: 0
  4543  00FC78  0012               	return		;funcret
  4544  00FC7A                     __end_of_editar_fecha_reloj_digital:
  4545                           	opt stack 0
  4546                           tblptru	equ	0xFF8
  4547                           tblptrh	equ	0xFF7
  4548                           tblptrl	equ	0xFF6
  4549                           tablat	equ	0xFF5
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           postinc0	equ	0xFEE
  4553                           wreg	equ	0xFE8
  4554                           postinc1	equ	0xFE6
  4555                           postdec1	equ	0xFE5
  4556                           fsr1h	equ	0xFE2
  4557                           fsr1l	equ	0xFE1
  4558                           postinc2	equ	0xFDE
  4559                           postdec2	equ	0xFDD
  4560                           fsr2h	equ	0xFDA
  4561                           fsr2l	equ	0xFD9
  4562                           status	equ	0xFD8
  4563                           
  4564 ;; *************** function _setDiaMesAnio *****************
  4565 ;; Defined at:
  4566 ;;		line 66 in file "main.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      void 
  4573 ;; Registers used:
  4574 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4584 ;;Total ram usage:        0 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    5
  4587 ;; This function calls:
  4588 ;;		_Write_RTC
  4589 ;;		_lcd_gotoxy
  4590 ;;		_lcd_putrs
  4591 ;;		_sprintf
  4592 ;; This function is called by:
  4593 ;;		_set_reloj_digital
  4594 ;;		_editar_fecha_reloj_digital
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           	psect	text19
  4599  00DB6A                     __ptext19:
  4600                           	opt stack 0
  4601  00DB6A                     _setDiaMesAnio:
  4602                           	opt stack 23
  4603                           
  4604                           ;main.c: 67: if (dia > 31) {
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;incstack = 0
  4608  00DB6A  0100               	movlb	0	; () banked
  4609  00DB6C  BFE8               	btfsc	(_dia+1)& (0+255),7,b
  4610  00DB6E  D00F               	goto	l173
  4611  00DB70  0100               	movlb	0	; () banked
  4612  00DB72  51E8               	movf	(_dia+1)& (0+255),w,b
  4613  00DB74  E105               	bnz	u4720
  4614  00DB76  0E20               	movlw	32
  4615  00DB78  0100               	movlb	0	; () banked
  4616  00DB7A  5DE7               	subwf	_dia& (0+255),w,b
  4617  00DB7C  A0D8               	btfss	status,0,c
  4618  00DB7E  D007               	goto	l173
  4619  00DB80                     u4720:
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;main.c: 68: dia = 1;
  4623  00DB80  0E00               	movlw	0
  4624  00DB82  0100               	movlb	0	; () banked
  4625  00DB84  6FE8               	movwf	(_dia+1)& (0+255),b
  4626  00DB86  0E01               	movlw	1
  4627  00DB88  6FE7               	movwf	_dia& (0+255),b
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;main.c: 69: Write_RTC();
  4631  00DB8A  EC78  F077         	call	_Write_RTC	;wreg free
  4632  00DB8E                     l173:
  4633                           
  4634                           ;main.c: 70: }
  4635                           ;main.c: 72: if (mes > 12) {
  4636  00DB8E  0100               	movlb	0	; () banked
  4637  00DB90  BFEC               	btfsc	(_mes+1)& (0+255),7,b
  4638  00DB92  D00F               	goto	l174
  4639  00DB94  0100               	movlb	0	; () banked
  4640  00DB96  51EC               	movf	(_mes+1)& (0+255),w,b
  4641  00DB98  E105               	bnz	u4730
  4642  00DB9A  0E0D               	movlw	13
  4643  00DB9C  0100               	movlb	0	; () banked
  4644  00DB9E  5DEB               	subwf	_mes& (0+255),w,b
  4645  00DBA0  A0D8               	btfss	status,0,c
  4646  00DBA2  D007               	goto	l174
  4647  00DBA4                     u4730:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;main.c: 73: mes = 1;
  4651  00DBA4  0E00               	movlw	0
  4652  00DBA6  0100               	movlb	0	; () banked
  4653  00DBA8  6FEC               	movwf	(_mes+1)& (0+255),b
  4654  00DBAA  0E01               	movlw	1
  4655  00DBAC  6FEB               	movwf	_mes& (0+255),b
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;main.c: 74: Write_RTC();
  4659  00DBAE  EC78  F077         	call	_Write_RTC	;wreg free
  4660  00DBB2                     l174:
  4661                           
  4662                           ;main.c: 75: }
  4663                           ;main.c: 77: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  4664  00DBB2  0EA9               	movlw	low _buffer2
  4665  00DBB4  6E22               	movwf	sprintf@sp,c
  4666  00DBB6  0E00               	movlw	high _buffer2
  4667  00DBB8  6E23               	movwf	sprintf@sp+1,c
  4668  00DBBA  0E72               	movlw	low STR_7
  4669  00DBBC  6E24               	movwf	sprintf@f,c
  4670  00DBBE  0EFF               	movlw	high STR_7
  4671  00DBC0  6E25               	movwf	sprintf@f+1,c
  4672  00DBC2  C0E7  F026         	movff	_dia,?_sprintf+4
  4673  00DBC6  C0E8  F027         	movff	_dia+1,?_sprintf+5
  4674  00DBCA  C0EB  F028         	movff	_mes,?_sprintf+6
  4675  00DBCE  C0EC  F029         	movff	_mes+1,?_sprintf+7
  4676  00DBD2  C0ED  F02A         	movff	_anio,?_sprintf+8
  4677  00DBD6  C0EE  F02B         	movff	_anio+1,?_sprintf+9
  4678  00DBDA  EC09  F07C         	call	_sprintf	;wreg free
  4679                           
  4680                           ;main.c: 78: lcd_gotoxy(9, 1);
  4681  00DBDE  0E01               	movlw	1
  4682  00DBE0  6E05               	movwf	lcd_gotoxy@y,c
  4683  00DBE2  0E09               	movlw	9
  4684  00DBE4  EC44  F069         	call	_lcd_gotoxy
  4685                           
  4686                           ;main.c: 79: lcd_putrs(buffer2);
  4687  00DBE8  0EA9               	movlw	low _buffer2
  4688  00DBEA  6E09               	movwf	lcd_putrs@ptr,c
  4689  00DBEC  0E00               	movlw	high _buffer2
  4690  00DBEE  6E0A               	movwf	lcd_putrs@ptr+1,c
  4691  00DBF0  EC9B  F06A         	call	_lcd_putrs	;wreg free
  4692  00DBF4  0012               	return		;funcret
  4693  00DBF6                     __end_of_setDiaMesAnio:
  4694                           	opt stack 0
  4695                           tblptru	equ	0xFF8
  4696                           tblptrh	equ	0xFF7
  4697                           tblptrl	equ	0xFF6
  4698                           tablat	equ	0xFF5
  4699                           prodh	equ	0xFF4
  4700                           prodl	equ	0xFF3
  4701                           postinc0	equ	0xFEE
  4702                           wreg	equ	0xFE8
  4703                           postinc1	equ	0xFE6
  4704                           postdec1	equ	0xFE5
  4705                           fsr1h	equ	0xFE2
  4706                           fsr1l	equ	0xFE1
  4707                           postinc2	equ	0xFDE
  4708                           postdec2	equ	0xFDD
  4709                           fsr2h	equ	0xFDA
  4710                           fsr2l	equ	0xFD9
  4711                           status	equ	0xFD8
  4712                           
  4713 ;; *************** function _Write_RTC *****************
  4714 ;; Defined at:
  4715 ;;		line 74 in file "../../headers\unmc_rtcc_01.h"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  1    wreg      void 
  4722 ;; Registers used:
  4723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;Total ram usage:        0 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    2
  4736 ;; This function calls:
  4737 ;;		_RtccWrOn
  4738 ;;		_RtccWriteDate
  4739 ;;		_RtccWriteTime
  4740 ;;		___awdiv
  4741 ;; This function is called by:
  4742 ;;		_setDiaMesAnio
  4743 ;;		_setHoraMinutoSegundo
  4744 ;;		_editar_fecha_reloj_digital
  4745 ;;		_editar_hora_reloj_digital
  4746 ;;		_setup
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text20
  4751  00EEF0                     __ptext20:
  4752                           	opt stack 0
  4753  00EEF0                     _Write_RTC:
  4754                           	opt stack 25
  4755                           
  4756                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  4757                           
  4758                           ;incstack = 0
  4759  00EEF0  EC16  F069         	call	_RtccWrOn	;wreg free
  4760                           
  4761                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  4762  00EEF4  80A3               	bsf	4003,0,c	;volatile
  4763                           
  4764                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  4765  00EEF6  C09A  F001         	movff	_segundo,___awdiv@dividend
  4766  00EEFA  C09B  F002         	movff	_segundo+1,___awdiv@dividend+1
  4767  00EEFE  0E00               	movlw	0
  4768  00EF00  6E04               	movwf	___awdiv@divisor+1,c
  4769  00EF02  0E0A               	movlw	10
  4770  00EF04  6E03               	movwf	___awdiv@divisor,c
  4771  00EF06  ECEA  F06C         	call	___awdiv	;wreg free
  4772  00EF0A  5001               	movf	?___awdiv,w,c
  4773  00EF0C  0100               	movlb	0	; () banked
  4774  00EF0E  6FFA               	movwf	_segundo_d& (0+255),b
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  4778  00EF10  0100               	movlb	0	; () banked
  4779  00EF12  51FA               	movf	_segundo_d& (0+255),w,b
  4780  00EF14  0D0A               	mullw	10
  4781  00EF16  50F3               	movf	prodl,w,c
  4782  00EF18  0800               	sublw	0
  4783  00EF1A  0100               	movlb	0	; () banked
  4784  00EF1C  259A               	addwf	_segundo& (0+255),w,b
  4785  00EF1E  0100               	movlb	0	; () banked
  4786  00EF20  6FFB               	movwf	_segundo_u& (0+255),b
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  4790  00EF22  0100               	movlb	0	; () banked
  4791  00EF24  51FA               	movf	_segundo_d& (0+255),w,b
  4792  00EF26  0D10               	mullw	16
  4793  00EF28  50F3               	movf	prodl,w,c
  4794  00EF2A  0100               	movlb	0	; () banked
  4795  00EF2C  25FB               	addwf	_segundo_u& (0+255),w,b
  4796  00EF2E  0100               	movlb	0	; () banked
  4797  00EF30  6FC2               	movwf	(_RtccTime+1)& (0+255),b
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  4801  00EF32  C0E3  F001         	movff	_minuto,___awdiv@dividend
  4802  00EF36  C0E4  F002         	movff	_minuto+1,___awdiv@dividend+1
  4803  00EF3A  0E00               	movlw	0
  4804  00EF3C  6E04               	movwf	___awdiv@divisor+1,c
  4805  00EF3E  0E0A               	movlw	10
  4806  00EF40  6E03               	movwf	___awdiv@divisor,c
  4807  00EF42  ECEA  F06C         	call	___awdiv	;wreg free
  4808  00EF46  5001               	movf	?___awdiv,w,c
  4809  00EF48  0100               	movlb	0	; () banked
  4810  00EF4A  6FF8               	movwf	_minuto_d& (0+255),b
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  4814  00EF4C  0100               	movlb	0	; () banked
  4815  00EF4E  51F8               	movf	_minuto_d& (0+255),w,b
  4816  00EF50  0D0A               	mullw	10
  4817  00EF52  50F3               	movf	prodl,w,c
  4818  00EF54  0800               	sublw	0
  4819  00EF56  0100               	movlb	0	; () banked
  4820  00EF58  25E3               	addwf	_minuto& (0+255),w,b
  4821  00EF5A  0100               	movlb	0	; () banked
  4822  00EF5C  6FF9               	movwf	_minuto_u& (0+255),b
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  4826  00EF5E  0100               	movlb	0	; () banked
  4827  00EF60  51F8               	movf	_minuto_d& (0+255),w,b
  4828  00EF62  0D10               	mullw	16
  4829  00EF64  50F3               	movf	prodl,w,c
  4830  00EF66  0100               	movlb	0	; () banked
  4831  00EF68  25F9               	addwf	_minuto_u& (0+255),w,b
  4832  00EF6A  0100               	movlb	0	; () banked
  4833  00EF6C  6FC3               	movwf	(_RtccTime+2)& (0+255),b
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  4837  00EF6E  C0E5  F001         	movff	_hora,___awdiv@dividend
  4838  00EF72  C0E6  F002         	movff	_hora+1,___awdiv@dividend+1
  4839  00EF76  0E00               	movlw	0
  4840  00EF78  6E04               	movwf	___awdiv@divisor+1,c
  4841  00EF7A  0E0A               	movlw	10
  4842  00EF7C  6E03               	movwf	___awdiv@divisor,c
  4843  00EF7E  ECEA  F06C         	call	___awdiv	;wreg free
  4844  00EF82  5001               	movf	?___awdiv,w,c
  4845  00EF84  0100               	movlb	0	; () banked
  4846  00EF86  6FF6               	movwf	_hora_d& (0+255),b
  4847                           
  4848                           ; BSR set to: 0
  4849                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  4850  00EF88  0100               	movlb	0	; () banked
  4851  00EF8A  51F6               	movf	_hora_d& (0+255),w,b
  4852  00EF8C  0D0A               	mullw	10
  4853  00EF8E  50F3               	movf	prodl,w,c
  4854  00EF90  0800               	sublw	0
  4855  00EF92  0100               	movlb	0	; () banked
  4856  00EF94  25E5               	addwf	_hora& (0+255),w,b
  4857  00EF96  0100               	movlb	0	; () banked
  4858  00EF98  6FF7               	movwf	_hora_u& (0+255),b
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  4862  00EF9A  0100               	movlb	0	; () banked
  4863  00EF9C  51F6               	movf	_hora_d& (0+255),w,b
  4864  00EF9E  0D10               	mullw	16
  4865  00EFA0  50F3               	movf	prodl,w,c
  4866  00EFA2  0100               	movlb	0	; () banked
  4867  00EFA4  25F7               	addwf	_hora_u& (0+255),w,b
  4868  00EFA6  0100               	movlb	0	; () banked
  4869  00EFA8  6FC4               	movwf	(_RtccTime+3)& (0+255),b
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  4873  00EFAA  C0ED  F001         	movff	_anio,___awdiv@dividend
  4874  00EFAE  C0EE  F002         	movff	_anio+1,___awdiv@dividend+1
  4875  00EFB2  0E00               	movlw	0
  4876  00EFB4  6E04               	movwf	___awdiv@divisor+1,c
  4877  00EFB6  0E0A               	movlw	10
  4878  00EFB8  6E03               	movwf	___awdiv@divisor,c
  4879  00EFBA  ECEA  F06C         	call	___awdiv	;wreg free
  4880  00EFBE  5001               	movf	?___awdiv,w,c
  4881  00EFC0  0100               	movlb	0	; () banked
  4882  00EFC2  6FEF               	movwf	_anio_d& (0+255),b
  4883                           
  4884                           ; BSR set to: 0
  4885                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  4886  00EFC4  0100               	movlb	0	; () banked
  4887  00EFC6  51EF               	movf	_anio_d& (0+255),w,b
  4888  00EFC8  0D0A               	mullw	10
  4889  00EFCA  50F3               	movf	prodl,w,c
  4890  00EFCC  0800               	sublw	0
  4891  00EFCE  0100               	movlb	0	; () banked
  4892  00EFD0  25ED               	addwf	_anio& (0+255),w,b
  4893  00EFD2  0100               	movlb	0	; () banked
  4894  00EFD4  6FF0               	movwf	_anio_u& (0+255),b
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  4898  00EFD6  0100               	movlb	0	; () banked
  4899  00EFD8  51EF               	movf	_anio_d& (0+255),w,b
  4900  00EFDA  0D10               	mullw	16
  4901  00EFDC  50F3               	movf	prodl,w,c
  4902  00EFDE  0100               	movlb	0	; () banked
  4903  00EFE0  25F0               	addwf	_anio_u& (0+255),w,b
  4904  00EFE2  0100               	movlb	0	; () banked
  4905  00EFE4  6FC0               	movwf	(_RtccDate+3)& (0+255),b
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  4909  00EFE6  C0EB  F001         	movff	_mes,___awdiv@dividend
  4910  00EFEA  C0EC  F002         	movff	_mes+1,___awdiv@dividend+1
  4911  00EFEE  0E00               	movlw	0
  4912  00EFF0  6E04               	movwf	___awdiv@divisor+1,c
  4913  00EFF2  0E0A               	movlw	10
  4914  00EFF4  6E03               	movwf	___awdiv@divisor,c
  4915  00EFF6  ECEA  F06C         	call	___awdiv	;wreg free
  4916  00EFFA  5001               	movf	?___awdiv,w,c
  4917  00EFFC  0100               	movlb	0	; () banked
  4918  00EFFE  6FF2               	movwf	_mes_d& (0+255),b
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  4922  00F000  0100               	movlb	0	; () banked
  4923  00F002  51F2               	movf	_mes_d& (0+255),w,b
  4924  00F004  0D0A               	mullw	10
  4925  00F006  50F3               	movf	prodl,w,c
  4926  00F008  0800               	sublw	0
  4927  00F00A  0100               	movlb	0	; () banked
  4928  00F00C  25EB               	addwf	_mes& (0+255),w,b
  4929  00F00E  0100               	movlb	0	; () banked
  4930  00F010  6FF3               	movwf	_mes_u& (0+255),b
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  4934  00F012  0100               	movlb	0	; () banked
  4935  00F014  51F2               	movf	_mes_d& (0+255),w,b
  4936  00F016  0D10               	mullw	16
  4937  00F018  50F3               	movf	prodl,w,c
  4938  00F01A  0100               	movlb	0	; () banked
  4939  00F01C  25F3               	addwf	_mes_u& (0+255),w,b
  4940  00F01E  0100               	movlb	0	; () banked
  4941  00F020  6FBF               	movwf	(_RtccDate+2)& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  4945  00F022  C0E7  F001         	movff	_dia,___awdiv@dividend
  4946  00F026  C0E8  F002         	movff	_dia+1,___awdiv@dividend+1
  4947  00F02A  0E00               	movlw	0
  4948  00F02C  6E04               	movwf	___awdiv@divisor+1,c
  4949  00F02E  0E0A               	movlw	10
  4950  00F030  6E03               	movwf	___awdiv@divisor,c
  4951  00F032  ECEA  F06C         	call	___awdiv	;wreg free
  4952  00F036  5001               	movf	?___awdiv,w,c
  4953  00F038  0100               	movlb	0	; () banked
  4954  00F03A  6FF4               	movwf	_fecha_d& (0+255),b
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  4958  00F03C  0100               	movlb	0	; () banked
  4959  00F03E  51F4               	movf	_fecha_d& (0+255),w,b
  4960  00F040  0D0A               	mullw	10
  4961  00F042  50F3               	movf	prodl,w,c
  4962  00F044  0800               	sublw	0
  4963  00F046  0100               	movlb	0	; () banked
  4964  00F048  25E7               	addwf	_dia& (0+255),w,b
  4965  00F04A  0100               	movlb	0	; () banked
  4966  00F04C  6FF5               	movwf	_fecha_u& (0+255),b
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  4970  00F04E  0100               	movlb	0	; () banked
  4971  00F050  51F4               	movf	_fecha_d& (0+255),w,b
  4972  00F052  0D10               	mullw	16
  4973  00F054  50F3               	movf	prodl,w,c
  4974  00F056  0100               	movlb	0	; () banked
  4975  00F058  25F5               	addwf	_fecha_u& (0+255),w,b
  4976  00F05A  0100               	movlb	0	; () banked
  4977  00F05C  6FBE               	movwf	(_RtccDate+1)& (0+255),b
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  4981  00F05E  C0E9  F0F1         	movff	_diasem,_dia_semana
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  4985  00F062  C0E9  F0BD         	movff	_diasem,_RtccDate
  4986                           
  4987                           ; BSR set to: 0
  4988                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  4989  00F066  0EC1               	movlw	low _RtccTime
  4990  00F068  6E01               	movwf	RtccWriteTime@pTm,c
  4991  00F06A  0E00               	movlw	high _RtccTime
  4992  00F06C  6E02               	movwf	RtccWriteTime@pTm+1,c
  4993  00F06E  0E01               	movlw	1
  4994  00F070  6E03               	movwf	RtccWriteTime@di,c
  4995  00F072  EC72  F074         	call	_RtccWriteTime	;wreg free
  4996                           
  4997                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  4998  00F076  0EBD               	movlw	low _RtccDate
  4999  00F078  6E01               	movwf	RtccWriteDate@pDt,c
  5000  00F07A  0E00               	movlw	high _RtccDate
  5001  00F07C  6E02               	movwf	RtccWriteDate@pDt+1,c
  5002  00F07E  0E01               	movlw	1
  5003  00F080  6E03               	movwf	RtccWriteDate@di,c
  5004  00F082  EC7F  F075         	call	_RtccWriteDate	;wreg free
  5005                           
  5006                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  5007  00F086  010F               	movlb	15	; () banked
  5008  00F088  8F3F               	bsf	63,7,b	;volatile
  5009                           
  5010                           ; BSR set to: 15
  5011  00F08A  0012               	return		;funcret
  5012  00F08C                     __end_of_Write_RTC:
  5013                           	opt stack 0
  5014                           tblptru	equ	0xFF8
  5015                           tblptrh	equ	0xFF7
  5016                           tblptrl	equ	0xFF6
  5017                           tablat	equ	0xFF5
  5018                           prodh	equ	0xFF4
  5019                           prodl	equ	0xFF3
  5020                           postinc0	equ	0xFEE
  5021                           wreg	equ	0xFE8
  5022                           postinc1	equ	0xFE6
  5023                           postdec1	equ	0xFE5
  5024                           fsr1h	equ	0xFE2
  5025                           fsr1l	equ	0xFE1
  5026                           postinc2	equ	0xFDE
  5027                           postdec2	equ	0xFDD
  5028                           fsr2h	equ	0xFDA
  5029                           fsr2l	equ	0xFD9
  5030                           status	equ	0xFD8
  5031                           
  5032 ;; *************** function ___awdiv *****************
  5033 ;; Defined at:
  5034 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  dividend        2    0[COMRAM] int 
  5037 ;;  divisor         2    2[COMRAM] int 
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;  quotient        2    6[COMRAM] int 
  5040 ;;  sign            1    5[COMRAM] unsigned char 
  5041 ;;  counter         1    4[COMRAM] unsigned char 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  2    0[COMRAM] int 
  5044 ;; Registers used:
  5045 ;;		wreg, status,2, status,0
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5052 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;Total ram usage:        8 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_Write_RTC
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text21
  5065  00D9D4                     __ptext21:
  5066                           	opt stack 0
  5067  00D9D4                     ___awdiv:
  5068                           	opt stack 26
  5069                           
  5070                           ; BSR set to: 15
  5071                           ;incstack = 0
  5072  00D9D4  0E00               	movlw	0
  5073  00D9D6  6E06               	movwf	___awdiv@sign,c
  5074  00D9D8  AE04               	btfss	___awdiv@divisor+1,7,c
  5075  00D9DA  D006               	goto	l826
  5076  00D9DC  6C03               	negf	___awdiv@divisor,c
  5077  00D9DE  1E04               	comf	___awdiv@divisor+1,f,c
  5078  00D9E0  B0D8               	btfsc	status,0,c
  5079  00D9E2  2A04               	incf	___awdiv@divisor+1,f,c
  5080  00D9E4  0E01               	movlw	1
  5081  00D9E6  6E06               	movwf	___awdiv@sign,c
  5082  00D9E8                     l826:
  5083  00D9E8  AE02               	btfss	___awdiv@dividend+1,7,c
  5084  00D9EA  D006               	goto	l827
  5085  00D9EC  6C01               	negf	___awdiv@dividend,c
  5086  00D9EE  1E02               	comf	___awdiv@dividend+1,f,c
  5087  00D9F0  B0D8               	btfsc	status,0,c
  5088  00D9F2  2A02               	incf	___awdiv@dividend+1,f,c
  5089  00D9F4  0E01               	movlw	1
  5090  00D9F6  1A06               	xorwf	___awdiv@sign,f,c
  5091  00D9F8                     l827:
  5092  00D9F8  0E00               	movlw	0
  5093  00D9FA  6E08               	movwf	___awdiv@quotient+1,c
  5094  00D9FC  0E00               	movlw	0
  5095  00D9FE  6E07               	movwf	___awdiv@quotient,c
  5096  00DA00  5003               	movf	___awdiv@divisor,w,c
  5097  00DA02  1004               	iorwf	___awdiv@divisor+1,w,c
  5098  00DA04  B4D8               	btfsc	status,2,c
  5099  00DA06  D01C               	goto	l834
  5100  00DA08  0E01               	movlw	1
  5101  00DA0A  6E05               	movwf	___awdiv@counter,c
  5102  00DA0C  D004               	goto	l829
  5103  00DA0E  90D8               	bcf	status,0,c
  5104  00DA10  3603               	rlcf	___awdiv@divisor,f,c
  5105  00DA12  3604               	rlcf	___awdiv@divisor+1,f,c
  5106  00DA14  2A05               	incf	___awdiv@counter,f,c
  5107  00DA16                     l829:
  5108  00DA16  AE04               	btfss	___awdiv@divisor+1,7,c
  5109  00DA18  D7FA               	goto	l830
  5110  00DA1A                     u4510:
  5111  00DA1A  90D8               	bcf	status,0,c
  5112  00DA1C  3607               	rlcf	___awdiv@quotient,f,c
  5113  00DA1E  3608               	rlcf	___awdiv@quotient+1,f,c
  5114  00DA20  5003               	movf	___awdiv@divisor,w,c
  5115  00DA22  5C01               	subwf	___awdiv@dividend,w,c
  5116  00DA24  5004               	movf	___awdiv@divisor+1,w,c
  5117  00DA26  5802               	subwfb	___awdiv@dividend+1,w,c
  5118  00DA28  A0D8               	btfss	status,0,c
  5119  00DA2A  D005               	goto	l833
  5120  00DA2C  5003               	movf	___awdiv@divisor,w,c
  5121  00DA2E  5E01               	subwf	___awdiv@dividend,f,c
  5122  00DA30  5004               	movf	___awdiv@divisor+1,w,c
  5123  00DA32  5A02               	subwfb	___awdiv@dividend+1,f,c
  5124  00DA34  8007               	bsf	___awdiv@quotient,0,c
  5125  00DA36                     l833:
  5126  00DA36  90D8               	bcf	status,0,c
  5127  00DA38  3204               	rrcf	___awdiv@divisor+1,f,c
  5128  00DA3A  3203               	rrcf	___awdiv@divisor,f,c
  5129  00DA3C  2E05               	decfsz	___awdiv@counter,f,c
  5130  00DA3E  D7ED               	goto	u4510
  5131  00DA40                     l834:
  5132  00DA40  5006               	movf	___awdiv@sign,w,c
  5133  00DA42  B4D8               	btfsc	status,2,c
  5134  00DA44  D004               	goto	l835
  5135  00DA46  6C07               	negf	___awdiv@quotient,c
  5136  00DA48  1E08               	comf	___awdiv@quotient+1,f,c
  5137  00DA4A  B0D8               	btfsc	status,0,c
  5138  00DA4C  2A08               	incf	___awdiv@quotient+1,f,c
  5139  00DA4E                     l835:
  5140  00DA4E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5141  00DA52  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5142  00DA56  0012               	return	
  5143  00DA58                     __end_of___awdiv:
  5144                           	opt stack 0
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           postinc0	equ	0xFEE
  5152                           wreg	equ	0xFE8
  5153                           postinc1	equ	0xFE6
  5154                           postdec1	equ	0xFE5
  5155                           fsr1h	equ	0xFE2
  5156                           fsr1l	equ	0xFE1
  5157                           postinc2	equ	0xFDE
  5158                           postdec2	equ	0xFDD
  5159                           fsr2h	equ	0xFDA
  5160                           fsr2l	equ	0xFD9
  5161                           status	equ	0xFD8
  5162                           
  5163 ;; *************** function _RtccWriteTime *****************
  5164 ;; Defined at:
  5165 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  pTm             2    0[COMRAM] PTR const struct .
  5168 ;;		 -> RtccTime(4), 
  5169 ;;  di              1    2[COMRAM] enum E7121
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  tempHourWDay    2    9[COMRAM] struct .
  5172 ;;  tempMinSec      2    7[COMRAM] struct .
  5173 ;;  wasWrEn         1    6[COMRAM] enum E7121
  5174 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5175 ;;  wasOn           1    4[COMRAM] enum E7121
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      enum E6550
  5178 ;; Registers used:
  5179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5185 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5188 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5189 ;;Total ram usage:       11 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    1
  5192 ;; This function calls:
  5193 ;;		_RtccWrOn
  5194 ;; This function is called by:
  5195 ;;		_Write_RTC
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text22
  5200  00E8E4                     __ptext22:
  5201                           	opt stack 0
  5202  00E8E4                     _RtccWriteTime:
  5203                           	opt stack 25
  5204                           
  5205                           ;incstack = 0
  5206  00E8E4  0E00               	movlw	0
  5207  00E8E6  6E06               	movwf	RtccWriteTime@wasAlrm,c
  5208  00E8E8  EE20 F002          	lfsr	2,2
  5209  00E8EC  5001               	movf	RtccWriteTime@pTm,w,c
  5210  00E8EE  26D9               	addwf	fsr2l,f,c
  5211  00E8F0  5002               	movf	RtccWriteTime@pTm+1,w,c
  5212  00E8F2  22DA               	addwfc	fsr2h,f,c
  5213  00E8F4  0E5A               	movlw	90
  5214  00E8F6  60DF               	cpfslt	indf2,c
  5215  00E8F8  0012               	return	
  5216  00E8FA  EE20 F001          	lfsr	2,1
  5217  00E8FE  5001               	movf	RtccWriteTime@pTm,w,c
  5218  00E900  26D9               	addwf	fsr2l,f,c
  5219  00E902  5002               	movf	RtccWriteTime@pTm+1,w,c
  5220  00E904  22DA               	addwfc	fsr2h,f,c
  5221  00E906  0E5A               	movlw	90
  5222  00E908  60DF               	cpfslt	indf2,c
  5223  00E90A  0012               	return	
  5224  00E90C  EE20 F003          	lfsr	2,3
  5225  00E910  5001               	movf	RtccWriteTime@pTm,w,c
  5226  00E912  26D9               	addwf	fsr2l,f,c
  5227  00E914  5002               	movf	RtccWriteTime@pTm+1,w,c
  5228  00E916  22DA               	addwfc	fsr2h,f,c
  5229  00E918  0E24               	movlw	36
  5230  00E91A  64DF               	cpfsgt	indf2,c
  5231  00E91C  D001               	goto	l646
  5232  00E91E  0012               	return	
  5233  00E920                     l646:
  5234  00E920  EE20 F002          	lfsr	2,2
  5235  00E924  5001               	movf	RtccWriteTime@pTm,w,c
  5236  00E926  26D9               	addwf	fsr2l,f,c
  5237  00E928  5002               	movf	RtccWriteTime@pTm+1,w,c
  5238  00E92A  22DA               	addwfc	fsr2h,f,c
  5239  00E92C  50DF               	movf	indf2,w,c
  5240  00E92E  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  5241  00E930  EE20 F001          	lfsr	2,1
  5242  00E934  5001               	movf	RtccWriteTime@pTm,w,c
  5243  00E936  26D9               	addwf	fsr2l,f,c
  5244  00E938  5002               	movf	RtccWriteTime@pTm+1,w,c
  5245  00E93A  22DA               	addwfc	fsr2h,f,c
  5246  00E93C  50DF               	movf	indf2,w,c
  5247  00E93E  6E08               	movwf	RtccWriteTime@tempMinSec,c
  5248  00E940  5003               	movf	RtccWriteTime@di,w,c
  5249  00E942  A4D8               	btfss	status,2,c
  5250  00E944  9CF2               	bcf	intcon,6,c	;volatile
  5251  00E946  010F               	movlb	15	; () banked
  5252  00E948  0E00               	movlw	0
  5253  00E94A  BB3F               	btfsc	63,5,b	;volatile
  5254  00E94C  0E01               	movlw	1
  5255  00E94E  6E07               	movwf	RtccWriteTime@wasWrEn,c
  5256  00E950  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5257  00E952  B4D8               	btfsc	status,2,c
  5258                           
  5259                           ; BSR set to: 15
  5260  00E954  EC16  F069         	call	_RtccWrOn	;wreg free
  5261  00E958  010F               	movlb	15	; () banked
  5262  00E95A  0E00               	movlw	0
  5263  00E95C  BF3F               	btfsc	63,7,b	;volatile
  5264  00E95E  0E01               	movlw	1
  5265  00E960  6E05               	movwf	RtccWriteTime@wasOn,c
  5266  00E962  5005               	movf	RtccWriteTime@wasOn,w,c
  5267  00E964  B4D8               	btfsc	status,2,c
  5268  00E966  D006               	goto	l652
  5269                           
  5270                           ; BSR set to: 15
  5271  00E968  0E00               	movlw	0
  5272  00E96A  BE91               	btfsc	3985,7,c	;volatile
  5273  00E96C  0E01               	movlw	1
  5274  00E96E  6E06               	movwf	RtccWriteTime@wasAlrm,c
  5275                           
  5276                           ; BSR set to: 15
  5277  00E970  010F               	movlb	15	; () banked
  5278  00E972  9F3F               	bcf	63,7,b	;volatile
  5279  00E974                     l652:
  5280                           
  5281                           ; BSR set to: 15
  5282                           
  5283                           ; BSR set to: 15
  5284  00E974  0EFC               	movlw	252
  5285  00E976  010F               	movlb	15	; () banked
  5286  00E978  173F               	andwf	63,f,b	;volatile
  5287  00E97A  010F               	movlb	15	; () banked
  5288  00E97C  813F               	bsf	63,0,b	;volatile
  5289                           
  5290                           ; BSR set to: 15
  5291  00E97E  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  5292                           
  5293                           ; BSR set to: 15
  5294  00E982  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  5295                           
  5296                           ; BSR set to: 15
  5297  00E986  EE20 F003          	lfsr	2,3
  5298  00E98A  5001               	movf	RtccWriteTime@pTm,w,c
  5299  00E98C  26D9               	addwf	fsr2l,f,c
  5300  00E98E  5002               	movf	RtccWriteTime@pTm+1,w,c
  5301  00E990  22DA               	addwfc	fsr2h,f,c
  5302  00E992  50DF               	movf	indf2,w,c
  5303  00E994  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  5304                           
  5305                           ; BSR set to: 15
  5306  00E996  0EFC               	movlw	252
  5307  00E998  010F               	movlb	15	; () banked
  5308  00E99A  173F               	andwf	63,f,b	;volatile
  5309                           
  5310                           ; BSR set to: 15
  5311  00E99C  010F               	movlb	15	; () banked
  5312  00E99E  813F               	bsf	63,0,b	;volatile
  5313                           
  5314                           ; BSR set to: 15
  5315  00E9A0  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  5316                           
  5317                           ; BSR set to: 15
  5318  00E9A4  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  5319                           
  5320                           ; BSR set to: 15
  5321  00E9A8  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  5322                           
  5323                           ; BSR set to: 15
  5324  00E9AC  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  5325                           
  5326                           ; BSR set to: 15
  5327  00E9B0  5005               	movf	RtccWriteTime@wasOn,w,c
  5328  00E9B2  B4D8               	btfsc	status,2,c
  5329  00E9B4  D00B               	goto	l653
  5330                           
  5331                           ; BSR set to: 15
  5332  00E9B6  010F               	movlb	15	; () banked
  5333  00E9B8  8F3F               	bsf	63,7,b	;volatile
  5334                           
  5335                           ; BSR set to: 15
  5336  00E9BA  5006               	movf	RtccWriteTime@wasAlrm,w,c
  5337  00E9BC  A4D8               	btfss	status,2,c
  5338                           
  5339                           ; BSR set to: 15
  5340  00E9BE  8E91               	bsf	3985,7,c	;volatile
  5341                           
  5342                           ; BSR set to: 15
  5343                           
  5344                           ; BSR set to: 15
  5345  00E9C0  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5346  00E9C2  B4D8               	btfsc	status,2,c
  5347  00E9C4  D008               	goto	l657
  5348                           
  5349                           ; BSR set to: 15
  5350  00E9C6  EC16  F069         	call	_RtccWrOn	;wreg free
  5351  00E9CA  D005               	goto	l657
  5352  00E9CC                     l653:
  5353  00E9CC  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5354  00E9CE  A4D8               	btfss	status,2,c
  5355  00E9D0  D002               	goto	l657
  5356  00E9D2  010F               	movlb	15	; () banked
  5357  00E9D4  9B3F               	bcf	63,5,b	;volatile
  5358  00E9D6                     l657:
  5359                           
  5360                           ; BSR set to: 15
  5361                           
  5362                           ; BSR set to: 15
  5363  00E9D6  5003               	movf	RtccWriteTime@di,w,c
  5364  00E9D8  B4D8               	btfsc	status,2,c
  5365  00E9DA  0012               	return	
  5366  00E9DC  8CF2               	bsf	intcon,6,c	;volatile
  5367  00E9DE  0012               	return	
  5368  00E9E0                     __end_of_RtccWriteTime:
  5369                           	opt stack 0
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           intcon	equ	0xFF2
  5377                           postinc0	equ	0xFEE
  5378                           wreg	equ	0xFE8
  5379                           postinc1	equ	0xFE6
  5380                           postdec1	equ	0xFE5
  5381                           fsr1h	equ	0xFE2
  5382                           fsr1l	equ	0xFE1
  5383                           indf2	equ	0xFDF
  5384                           postinc2	equ	0xFDE
  5385                           postdec2	equ	0xFDD
  5386                           fsr2h	equ	0xFDA
  5387                           fsr2l	equ	0xFD9
  5388                           status	equ	0xFD8
  5389                           
  5390 ;; *************** function _RtccWriteDate *****************
  5391 ;; Defined at:
  5392 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  pDt             2    0[COMRAM] PTR const struct .
  5395 ;;		 -> RtccDate(4), 
  5396 ;;  di              1    2[COMRAM] enum E7121
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  tempHourWDay    2   11[COMRAM] struct .
  5399 ;;  tempDayMonth    2    9[COMRAM] struct .
  5400 ;;  tempYear        2    6[COMRAM] struct .
  5401 ;;  wasWrEn         1    8[COMRAM] enum E7121
  5402 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5403 ;;  wasOn           1    4[COMRAM] enum E7121
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      enum E6550
  5406 ;; Registers used:
  5407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5413 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5414 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5417 ;;Total ram usage:       13 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    1
  5420 ;; This function calls:
  5421 ;;		_RtccWrOn
  5422 ;; This function is called by:
  5423 ;;		_Write_RTC
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text23
  5428  00EAFE                     __ptext23:
  5429                           	opt stack 0
  5430  00EAFE                     _RtccWriteDate:
  5431                           	opt stack 25
  5432                           
  5433                           ;incstack = 0
  5434  00EAFE  0E00               	movlw	0
  5435  00EB00  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5436  00EB02  EE20 F002          	lfsr	2,2
  5437  00EB06  5001               	movf	RtccWriteDate@pDt,w,c
  5438  00EB08  26D9               	addwf	fsr2l,f,c
  5439  00EB0A  5002               	movf	RtccWriteDate@pDt+1,w,c
  5440  00EB0C  22DA               	addwfc	fsr2h,f,c
  5441  00EB0E  0E13               	movlw	19
  5442  00EB10  60DF               	cpfslt	indf2,c
  5443  00EB12  0012               	return	
  5444  00EB14  EE20 F002          	lfsr	2,2
  5445  00EB18  5001               	movf	RtccWriteDate@pDt,w,c
  5446  00EB1A  26D9               	addwf	fsr2l,f,c
  5447  00EB1C  5002               	movf	RtccWriteDate@pDt+1,w,c
  5448  00EB1E  22DA               	addwfc	fsr2h,f,c
  5449  00EB20  50DF               	movf	indf2,w,c
  5450  00EB22  B4D8               	btfsc	status,2,c
  5451  00EB24  0012               	return	
  5452  00EB26  EE20 F001          	lfsr	2,1
  5453  00EB2A  5001               	movf	RtccWriteDate@pDt,w,c
  5454  00EB2C  26D9               	addwf	fsr2l,f,c
  5455  00EB2E  5002               	movf	RtccWriteDate@pDt+1,w,c
  5456  00EB30  22DA               	addwfc	fsr2h,f,c
  5457  00EB32  0E32               	movlw	50
  5458  00EB34  60DF               	cpfslt	indf2,c
  5459  00EB36  0012               	return	
  5460  00EB38  EE20 F001          	lfsr	2,1
  5461  00EB3C  5001               	movf	RtccWriteDate@pDt,w,c
  5462  00EB3E  26D9               	addwf	fsr2l,f,c
  5463  00EB40  5002               	movf	RtccWriteDate@pDt+1,w,c
  5464  00EB42  22DA               	addwfc	fsr2h,f,c
  5465  00EB44  50DF               	movf	indf2,w,c
  5466  00EB46  B4D8               	btfsc	status,2,c
  5467  00EB48  0012               	return	
  5468  00EB4A  EE20 F003          	lfsr	2,3
  5469  00EB4E  5001               	movf	RtccWriteDate@pDt,w,c
  5470  00EB50  26D9               	addwf	fsr2l,f,c
  5471  00EB52  5002               	movf	RtccWriteDate@pDt+1,w,c
  5472  00EB54  22DA               	addwfc	fsr2h,f,c
  5473  00EB56  0E99               	movlw	153
  5474  00EB58  64DF               	cpfsgt	indf2,c
  5475  00EB5A  D001               	goto	l617
  5476  00EB5C  0012               	return	
  5477  00EB5E                     l617:
  5478  00EB5E  EE20 F003          	lfsr	2,3
  5479  00EB62  5001               	movf	RtccWriteDate@pDt,w,c
  5480  00EB64  26D9               	addwf	fsr2l,f,c
  5481  00EB66  5002               	movf	RtccWriteDate@pDt+1,w,c
  5482  00EB68  22DA               	addwfc	fsr2h,f,c
  5483  00EB6A  50DF               	movf	indf2,w,c
  5484  00EB6C  6E07               	movwf	RtccWriteDate@tempYear,c
  5485  00EB6E  EE20 F001          	lfsr	2,1
  5486  00EB72  5001               	movf	RtccWriteDate@pDt,w,c
  5487  00EB74  26D9               	addwf	fsr2l,f,c
  5488  00EB76  5002               	movf	RtccWriteDate@pDt+1,w,c
  5489  00EB78  22DA               	addwfc	fsr2h,f,c
  5490  00EB7A  50DF               	movf	indf2,w,c
  5491  00EB7C  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  5492  00EB7E  EE20 F002          	lfsr	2,2
  5493  00EB82  5001               	movf	RtccWriteDate@pDt,w,c
  5494  00EB84  26D9               	addwf	fsr2l,f,c
  5495  00EB86  5002               	movf	RtccWriteDate@pDt+1,w,c
  5496  00EB88  22DA               	addwfc	fsr2h,f,c
  5497  00EB8A  50DF               	movf	indf2,w,c
  5498  00EB8C  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  5499  00EB8E  5003               	movf	RtccWriteDate@di,w,c
  5500  00EB90  A4D8               	btfss	status,2,c
  5501  00EB92  9CF2               	bcf	intcon,6,c	;volatile
  5502  00EB94  010F               	movlb	15	; () banked
  5503  00EB96  0E00               	movlw	0
  5504  00EB98  BB3F               	btfsc	63,5,b	;volatile
  5505  00EB9A  0E01               	movlw	1
  5506  00EB9C  6E09               	movwf	RtccWriteDate@wasWrEn,c
  5507  00EB9E  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5508  00EBA0  B4D8               	btfsc	status,2,c
  5509                           
  5510                           ; BSR set to: 15
  5511  00EBA2  EC16  F069         	call	_RtccWrOn	;wreg free
  5512  00EBA6  010F               	movlb	15	; () banked
  5513  00EBA8  0E00               	movlw	0
  5514  00EBAA  BF3F               	btfsc	63,7,b	;volatile
  5515  00EBAC  0E01               	movlw	1
  5516  00EBAE  6E05               	movwf	RtccWriteDate@wasOn,c
  5517  00EBB0  5005               	movf	RtccWriteDate@wasOn,w,c
  5518  00EBB2  B4D8               	btfsc	status,2,c
  5519  00EBB4  D006               	goto	l623
  5520                           
  5521                           ; BSR set to: 15
  5522  00EBB6  0E00               	movlw	0
  5523  00EBB8  BE91               	btfsc	3985,7,c	;volatile
  5524  00EBBA  0E01               	movlw	1
  5525  00EBBC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5526                           
  5527                           ; BSR set to: 15
  5528  00EBBE  010F               	movlb	15	; () banked
  5529  00EBC0  9F3F               	bcf	63,7,b	;volatile
  5530  00EBC2                     l623:
  5531                           
  5532                           ; BSR set to: 15
  5533                           
  5534                           ; BSR set to: 15
  5535  00EBC2  0EFC               	movlw	252
  5536  00EBC4  010F               	movlb	15	; () banked
  5537  00EBC6  173F               	andwf	63,f,b	;volatile
  5538  00EBC8  010F               	movlb	15	; () banked
  5539  00EBCA  813F               	bsf	63,0,b	;volatile
  5540                           
  5541                           ; BSR set to: 15
  5542  00EBCC  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  5543                           
  5544                           ; BSR set to: 15
  5545  00EBD0  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  5546                           
  5547                           ; BSR set to: 15
  5548  00EBD4  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  5549  00EBD8  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  5550  00EBDC  50DF               	movf	indf2,w,c
  5551  00EBDE  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  5552                           
  5553                           ; BSR set to: 15
  5554  00EBE0  0EFC               	movlw	252
  5555  00EBE2  010F               	movlb	15	; () banked
  5556  00EBE4  173F               	andwf	63,f,b	;volatile
  5557                           
  5558                           ; BSR set to: 15
  5559  00EBE6  0E03               	movlw	3
  5560  00EBE8  010F               	movlb	15	; () banked
  5561  00EBEA  133F               	iorwf	63,f,b	;volatile
  5562                           
  5563                           ; BSR set to: 15
  5564  00EBEC  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  5565                           
  5566                           ; BSR set to: 15
  5567  00EBF0  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  5568                           
  5569                           ; BSR set to: 15
  5570  00EBF4  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  5571                           
  5572                           ; BSR set to: 15
  5573  00EBF8  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  5574                           
  5575                           ; BSR set to: 15
  5576  00EBFC  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  5577                           
  5578                           ; BSR set to: 15
  5579  00EC00  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  5580                           
  5581                           ; BSR set to: 15
  5582  00EC04  5005               	movf	RtccWriteDate@wasOn,w,c
  5583  00EC06  B4D8               	btfsc	status,2,c
  5584  00EC08  D00B               	goto	l624
  5585                           
  5586                           ; BSR set to: 15
  5587  00EC0A  010F               	movlb	15	; () banked
  5588  00EC0C  8F3F               	bsf	63,7,b	;volatile
  5589                           
  5590                           ; BSR set to: 15
  5591  00EC0E  5006               	movf	RtccWriteDate@wasAlrm,w,c
  5592  00EC10  A4D8               	btfss	status,2,c
  5593                           
  5594                           ; BSR set to: 15
  5595  00EC12  8E91               	bsf	3985,7,c	;volatile
  5596                           
  5597                           ; BSR set to: 15
  5598                           
  5599                           ; BSR set to: 15
  5600  00EC14  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5601  00EC16  B4D8               	btfsc	status,2,c
  5602  00EC18  D008               	goto	l628
  5603                           
  5604                           ; BSR set to: 15
  5605  00EC1A  EC16  F069         	call	_RtccWrOn	;wreg free
  5606  00EC1E  D005               	goto	l628
  5607  00EC20                     l624:
  5608  00EC20  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5609  00EC22  A4D8               	btfss	status,2,c
  5610  00EC24  D002               	goto	l628
  5611  00EC26  010F               	movlb	15	; () banked
  5612  00EC28  9B3F               	bcf	63,5,b	;volatile
  5613  00EC2A                     l628:
  5614                           
  5615                           ; BSR set to: 15
  5616                           
  5617                           ; BSR set to: 15
  5618  00EC2A  5003               	movf	RtccWriteDate@di,w,c
  5619  00EC2C  B4D8               	btfsc	status,2,c
  5620  00EC2E  0012               	return	
  5621  00EC30  9CF2               	bcf	intcon,6,c	;volatile
  5622  00EC32  0012               	return	
  5623  00EC34                     __end_of_RtccWriteDate:
  5624                           	opt stack 0
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           prodh	equ	0xFF4
  5630                           prodl	equ	0xFF3
  5631                           intcon	equ	0xFF2
  5632                           postinc0	equ	0xFEE
  5633                           wreg	equ	0xFE8
  5634                           postinc1	equ	0xFE6
  5635                           postdec1	equ	0xFE5
  5636                           fsr1h	equ	0xFE2
  5637                           fsr1l	equ	0xFE1
  5638                           indf2	equ	0xFDF
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function _RtccWrOn *****************
  5646 ;; Defined at:
  5647 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  data            2    0        unsigned int 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_Write_RTC
  5671 ;;		_RtccWriteDate
  5672 ;;		_RtccWriteTime
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text24
  5677  00D22C                     __ptext24:
  5678                           	opt stack 0
  5679  00D22C                     _RtccWrOn:
  5680                           	opt stack 25
  5681                           
  5682                           ;incstack = 0
  5683  00D22C  9CF2               	bcf	intcon,6,c	;volatile
  5684  00D22E  0E55               	movlw	85
  5685  00D230  6EA7               	movwf	4007,c	;volatile
  5686  00D232  0EAA               	movlw	170
  5687  00D234  6EA7               	movwf	4007,c	;volatile
  5688  00D236  010F               	movlb	15	; () banked
  5689  00D238  8B3F               	bsf	63,5,b	;volatile
  5690                           
  5691                           ; BSR set to: 15
  5692  00D23A  8CF2               	bsf	intcon,6,c	;volatile
  5693                           
  5694                           ; BSR set to: 15
  5695  00D23C  0012               	return		;funcret
  5696  00D23E                     __end_of_RtccWrOn:
  5697                           	opt stack 0
  5698                           tblptru	equ	0xFF8
  5699                           tblptrh	equ	0xFF7
  5700                           tblptrl	equ	0xFF6
  5701                           tablat	equ	0xFF5
  5702                           prodh	equ	0xFF4
  5703                           prodl	equ	0xFF3
  5704                           intcon	equ	0xFF2
  5705                           postinc0	equ	0xFEE
  5706                           wreg	equ	0xFE8
  5707                           postinc1	equ	0xFE6
  5708                           postdec1	equ	0xFE5
  5709                           fsr1h	equ	0xFE2
  5710                           fsr1l	equ	0xFE1
  5711                           indf2	equ	0xFDF
  5712                           postinc2	equ	0xFDE
  5713                           postdec2	equ	0xFDD
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _covertir_valores_de_array_a_escala_decimal *****************
  5719 ;; Defined at:
  5720 ;;		line 576 in file "main.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  i               2    8[BANK0 ] int 
  5725 ;;  numero          2    6[BANK0 ] int 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  2   90[COMRAM] int 
  5728 ;; Registers used:
  5729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5736 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5738 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;Total ram usage:       14 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    5
  5742 ;; This function calls:
  5743 ;;		___awtoft
  5744 ;;		___fttol
  5745 ;;		___wmul
  5746 ;;		_pow
  5747 ;; This function is called by:
  5748 ;;		_editar_fecha_reloj_digital
  5749 ;;		_editar_hora_reloj_digital
  5750 ;; This function uses a non-reentrant model
  5751 ;;
  5752                           
  5753                           	psect	text25
  5754  00E388                     __ptext25:
  5755                           	opt stack 0
  5756  00E388                     _covertir_valores_de_array_a_escala_decimal:
  5757                           	opt stack 19
  5758                           
  5759                           ;main.c: 577: int numero = 0;
  5760                           
  5761                           ; BSR set to: 15
  5762                           ;incstack = 0
  5763  00E388  0E00               	movlw	0
  5764  00E38A  0100               	movlb	0	; () banked
  5765  00E38C  6FCC               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  5766  00E38E  0E00               	movlw	0
  5767  00E390  6FCB               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  5768                           
  5769                           ;main.c: 578: for (int i = 2 - 1; i >= 0; i--) {
  5770  00E392  0E00               	movlw	0
  5771  00E394  0100               	movlb	0	; () banked
  5772  00E396  6FCE               	movwf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),b
  5773  00E398  0E01               	movlw	1
  5774  00E39A  6FCD               	movwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),b
  5775  00E39C                     l4537:
  5776                           
  5777                           ; BSR set to: 0
  5778  00E39C  0100               	movlb	0	; () banked
  5779  00E39E  BFCE               	btfsc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),7,b
  5780  00E3A0  D05A               	goto	u5210
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;main.c: 579: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5784                           
  5785                           ; BSR set to: 0
  5786                           
  5787                           ; BSR set to: 0
  5788  00E3A2  0E01               	movlw	1
  5789  00E3A4  0100               	movlb	0	; () banked
  5790  00E3A6  25CD               	addwf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  5791  00E3A8  6E5D               	movwf	??_covertir_valores_de_array_a_escala_decimal& (0+255),c
  5792  00E3AA  0E00               	movlw	0
  5793  00E3AC  0100               	movlb	0	; () banked
  5794  00E3AE  21CE               	addwfc	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  5795  00E3B0  6E5E               	movwf	(??_covertir_valores_de_array_a_escala_decimal+1)& (0+255),c
  5796  00E3B2  1E5D               	comf	??_covertir_valores_de_array_a_escala_decimal,f,c
  5797  00E3B4  1E5E               	comf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  5798  00E3B6  4A5D               	infsnz	??_covertir_valores_de_array_a_escala_decimal,f,c
  5799  00E3B8  2A5E               	incf	??_covertir_valores_de_array_a_escala_decimal+1,f,c
  5800  00E3BA  0E02               	movlw	2
  5801  00E3BC  245D               	addwf	??_covertir_valores_de_array_a_escala_decimal,w,c
  5802  00E3BE  6E09               	movwf	___awtoft@c,c
  5803  00E3C0  0E00               	movlw	0
  5804  00E3C2  205E               	addwfc	??_covertir_valores_de_array_a_escala_decimal+1,w,c
  5805  00E3C4  6E0A               	movwf	___awtoft@c+1,c
  5806  00E3C6  ECA5  F069         	call	___awtoft	;wreg free
  5807  00E3CA  C009  F0C5         	movff	?___awtoft,_covertir_valores_de_array_a_escala_decimal$2467
  5808  00E3CE  C00A  F0C6         	movff	?___awtoft+1,_covertir_valores_de_array_a_escala_decimal$2467+1
  5809  00E3D2  C00B  F0C7         	movff	?___awtoft+2,_covertir_valores_de_array_a_escala_decimal$2467+2
  5810                           
  5811                           ;main.c: 579: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5812  00E3D6  C0C5  F04D         	movff	_covertir_valores_de_array_a_escala_decimal$2467,pow@y
  5813  00E3DA  C0C6  F04E         	movff	_covertir_valores_de_array_a_escala_decimal$2467+1,pow@y+1
  5814  00E3DE  C0C7  F04F         	movff	_covertir_valores_de_array_a_escala_decimal$2467+2,pow@y+2
  5815  00E3E2  0E00               	movlw	0
  5816  00E3E4  6E4A               	movwf	pow@x,c
  5817  00E3E6  0E20               	movlw	32
  5818  00E3E8  6E4B               	movwf	pow@x+1,c
  5819  00E3EA  0E41               	movlw	65
  5820  00E3EC  6E4C               	movwf	pow@x+2,c
  5821  00E3EE  ECBD  F076         	call	_pow	;wreg free
  5822  00E3F2  C04A  F0C8         	movff	?_pow,_covertir_valores_de_array_a_escala_decimal$2468
  5823  00E3F6  C04B  F0C9         	movff	?_pow+1,_covertir_valores_de_array_a_escala_decimal$2468+1
  5824  00E3FA  C04C  F0CA         	movff	?_pow+2,_covertir_valores_de_array_a_escala_decimal$2468+2
  5825                           
  5826                           ;main.c: 579: numero = numero + numeros_para_fecha[i] * (int) pow(10, (2 - 1) - i);
  5827  00E3FE  C0C8  F00D         	movff	_covertir_valores_de_array_a_escala_decimal$2468,___fttol@f1
  5828  00E402  C0C9  F00E         	movff	_covertir_valores_de_array_a_escala_decimal$2468+1,___fttol@f1+1
  5829  00E406  C0CA  F00F         	movff	_covertir_valores_de_array_a_escala_decimal$2468+2,___fttol@f1+2
  5830  00E40A  ECF8  F073         	call	___fttol	;wreg free
  5831  00E40E  C00D  F01C         	movff	?___fttol,___wmul@multiplier
  5832  00E412  C00E  F01D         	movff	?___fttol+1,___wmul@multiplier+1
  5833  00E416  90D8               	bcf	status,0,c
  5834  00E418  0100               	movlb	0	; () banked
  5835  00E41A  35CD               	rlcf	covertir_valores_de_array_a_escala_decimal@i& (0+255),w,b
  5836  00E41C  6ED9               	movwf	fsr2l,c
  5837  00E41E  0100               	movlb	0	; () banked
  5838  00E420  35CE               	rlcf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),w,b
  5839  00E422  6EDA               	movwf	fsr2h,c
  5840  00E424  0E80               	movlw	low _numeros_para_fecha
  5841  00E426  26D9               	addwf	fsr2l,f,c
  5842  00E428  0E00               	movlw	high _numeros_para_fecha
  5843  00E42A  22DA               	addwfc	fsr2h,f,c
  5844  00E42C  CFDE F01E          	movff	postinc2,___wmul@multiplicand
  5845  00E430  CFDD F01F          	movff	postdec2,___wmul@multiplicand+1
  5846  00E434  EC79  F069         	call	___wmul	;wreg free
  5847  00E438  0100               	movlb	0	; () banked
  5848  00E43A  51CB               	movf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),w,b
  5849  00E43C  241C               	addwf	?___wmul,w,c
  5850  00E43E  0100               	movlb	0	; () banked
  5851  00E440  6FCB               	movwf	covertir_valores_de_array_a_escala_decimal@numero& (0+255),b
  5852  00E442  0100               	movlb	0	; () banked
  5853  00E444  51CC               	movf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),w,b
  5854  00E446  201D               	addwfc	?___wmul+1,w,c
  5855  00E448  0100               	movlb	0	; () banked
  5856  00E44A  6FCC               	movwf	(covertir_valores_de_array_a_escala_decimal@numero+1)& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859  00E44C  0100               	movlb	0	; () banked
  5860  00E44E  07CD               	decf	covertir_valores_de_array_a_escala_decimal@i& (0+255),f,b
  5861  00E450  A0D8               	btfss	status,0,c
  5862  00E452  07CE               	decf	(covertir_valores_de_array_a_escala_decimal@i+1)& (0+255),f,b
  5863  00E454  D7A3               	goto	l4537
  5864  00E456                     u5210:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;main.c: 580: };
  5868                           ;main.c: 584: return numero;
  5869  00E456  C0CB  F05B         	movff	covertir_valores_de_array_a_escala_decimal@numero,?_covertir_valores_de_array_a_e
      +                          scala_decimal
  5870  00E45A  C0CC  F05C         	movff	covertir_valores_de_array_a_escala_decimal@numero+1,?_covertir_valores_de_array_a
      +                          _escala_decimal+1
  5871                           
  5872                           ; BSR set to: 0
  5873  00E45E  0012               	return		;funcret
  5874  00E460                     __end_of_covertir_valores_de_array_a_escala_decimal:
  5875                           	opt stack 0
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           postinc0	equ	0xFEE
  5884                           wreg	equ	0xFE8
  5885                           postinc1	equ	0xFE6
  5886                           postdec1	equ	0xFE5
  5887                           fsr1h	equ	0xFE2
  5888                           fsr1l	equ	0xFE1
  5889                           indf2	equ	0xFDF
  5890                           postinc2	equ	0xFDE
  5891                           postdec2	equ	0xFDD
  5892                           fsr2h	equ	0xFDA
  5893                           fsr2l	equ	0xFD9
  5894                           status	equ	0xFD8
  5895                           
  5896 ;; *************** function _pow *****************
  5897 ;; Defined at:
  5898 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\pow.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;  x               3   73[COMRAM] int 
  5901 ;;  y               3   76[COMRAM] int 
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  yi              4   86[COMRAM] unsigned long 
  5904 ;;  sign            1   85[COMRAM] unsigned char 
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  3   73[COMRAM] unsigned char 
  5907 ;; Registers used:
  5908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5914 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5915 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5917 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5918 ;;Total ram usage:       17 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:    4
  5921 ;; This function calls:
  5922 ;;		___ftge
  5923 ;;		___ftmul
  5924 ;;		___ftneg
  5925 ;;		___fttol
  5926 ;;		___lltoft
  5927 ;;		_exp
  5928 ;;		_log
  5929 ;; This function is called by:
  5930 ;;		_covertir_valores_de_array_a_escala_decimal
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text26
  5935  00ED7A                     __ptext26:
  5936                           	opt stack 0
  5937  00ED7A                     _pow:
  5938                           	opt stack 19
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;incstack = 0
  5942  00ED7A  0E00               	movlw	0
  5943  00ED7C  6E56               	movwf	pow@sign,c
  5944  00ED7E  504A               	movf	pow@x,w,c
  5945  00ED80  104B               	iorwf	pow@x+1,w,c
  5946  00ED82  104C               	iorwf	pow@x+2,w,c
  5947  00ED84  A4D8               	btfss	status,2,c
  5948  00ED86  D01C               	goto	l1118
  5949  00ED88  0E00               	movlw	0
  5950  00ED8A  6E01               	movwf	___ftge@ff1,c
  5951  00ED8C  0E00               	movlw	0
  5952  00ED8E  6E02               	movwf	___ftge@ff1+1,c
  5953  00ED90  0E00               	movlw	0
  5954  00ED92  6E03               	movwf	___ftge@ff1+2,c
  5955  00ED94  C04D  F004         	movff	pow@y,___ftge@ff2
  5956  00ED98  C04E  F005         	movff	pow@y+1,___ftge@ff2+1
  5957  00ED9C  C04F  F006         	movff	pow@y+2,___ftge@ff2+2
  5958  00EDA0  EC88  F06E         	call	___ftge	;wreg free
  5959  00EDA4  A0D8               	btfss	status,0,c
  5960  00EDA6  D005               	goto	l1119
  5961  00EDA8  0E00               	movlw	0
  5962  00EDAA  0100               	movlb	0	; () banked
  5963  00EDAC  6F89               	movwf	(_errno+1)& (0+255),b
  5964  00EDAE  0E21               	movlw	33
  5965  00EDB0  6F88               	movwf	_errno& (0+255),b
  5966  00EDB2                     l1119:
  5967  00EDB2  0E00               	movlw	0
  5968  00EDB4  6E4A               	movwf	?_pow,c
  5969  00EDB6  0E00               	movlw	0
  5970  00EDB8  6E4B               	movwf	?_pow+1,c
  5971  00EDBA  0E00               	movlw	0
  5972  00EDBC  6E4C               	movwf	?_pow+2,c
  5973  00EDBE  0012               	return	
  5974  00EDC0                     l1118:
  5975  00EDC0  504D               	movf	pow@y,w,c
  5976  00EDC2  104E               	iorwf	pow@y+1,w,c
  5977  00EDC4  104F               	iorwf	pow@y+2,w,c
  5978  00EDC6  A4D8               	btfss	status,2,c
  5979  00EDC8  D007               	goto	l1121
  5980  00EDCA  0E00               	movlw	0
  5981  00EDCC  6E4A               	movwf	?_pow,c
  5982  00EDCE  0E80               	movlw	128
  5983  00EDD0  6E4B               	movwf	?_pow+1,c
  5984  00EDD2  0E3F               	movlw	63
  5985  00EDD4  6E4C               	movwf	?_pow+2,c
  5986  00EDD6  0012               	return	
  5987  00EDD8                     l1121:
  5988  00EDD8  AE4C               	btfss	pow@x+2,7,c
  5989  00EDDA  D041               	goto	l1122
  5990  00EDDC  C04D  F00D         	movff	pow@y,___fttol@f1
  5991  00EDE0  C04E  F00E         	movff	pow@y+1,___fttol@f1+1
  5992  00EDE4  C04F  F00F         	movff	pow@y+2,___fttol@f1+2
  5993  00EDE8  ECF8  F073         	call	___fttol	;wreg free
  5994  00EDEC  C00D  F057         	movff	?___fttol,pow@yi
  5995  00EDF0  C00E  F058         	movff	?___fttol+1,pow@yi+1
  5996  00EDF4  C00F  F059         	movff	?___fttol+2,pow@yi+2
  5997  00EDF8  C010  F05A         	movff	?___fttol+3,pow@yi+3
  5998  00EDFC  C057  F009         	movff	pow@yi,___lltoft@c
  5999  00EE00  C058  F00A         	movff	pow@yi+1,___lltoft@c+1
  6000  00EE04  C059  F00B         	movff	pow@yi+2,___lltoft@c+2
  6001  00EE08  C05A  F00C         	movff	pow@yi+3,___lltoft@c+3
  6002  00EE0C  EC1A  F06B         	call	___lltoft	;wreg free
  6003  00EE10  504D               	movf	pow@y,w,c
  6004  00EE12  1809               	xorwf	?___lltoft,w,c
  6005  00EE14  E107               	bnz	u4700
  6006  00EE16  504E               	movf	pow@y+1,w,c
  6007  00EE18  180A               	xorwf	?___lltoft+1,w,c
  6008  00EE1A  E104               	bnz	u4700
  6009  00EE1C  504F               	movf	pow@y+2,w,c
  6010  00EE1E  180B               	xorwf	?___lltoft+2,w,c
  6011  00EE20  B4D8               	btfsc	status,2,c
  6012  00EE22  D00C               	goto	l1123
  6013  00EE24                     u4700:
  6014  00EE24  0E00               	movlw	0
  6015  00EE26  0100               	movlb	0	; () banked
  6016  00EE28  6F89               	movwf	(_errno+1)& (0+255),b
  6017  00EE2A  0E21               	movlw	33
  6018  00EE2C  6F88               	movwf	_errno& (0+255),b
  6019  00EE2E  0E00               	movlw	0
  6020  00EE30  6E4A               	movwf	?_pow,c
  6021  00EE32  0E00               	movlw	0
  6022  00EE34  6E4B               	movwf	?_pow+1,c
  6023  00EE36  0E00               	movlw	0
  6024  00EE38  6E4C               	movwf	?_pow+2,c
  6025                           
  6026                           ; BSR set to: 0
  6027  00EE3A  0012               	return	
  6028  00EE3C                     l1123:
  6029                           
  6030                           ; BSR set to: 0
  6031  00EE3C  5057               	movf	pow@yi,w,c
  6032  00EE3E  0B01               	andlw	1
  6033  00EE40  6E56               	movwf	pow@sign,c
  6034  00EE42  C04A  F001         	movff	pow@x,___ftneg@f1
  6035  00EE46  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  6036  00EE4A  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  6037  00EE4E  EC55  F069         	call	___ftneg	;wreg free
  6038  00EE52  C001  F04A         	movff	?___ftneg,pow@x
  6039  00EE56  C002  F04B         	movff	?___ftneg+1,pow@x+1
  6040  00EE5A  C003  F04C         	movff	?___ftneg+2,pow@x+2
  6041  00EE5E                     l1122:
  6042  00EE5E  C04A  F03A         	movff	pow@x,log@x
  6043  00EE62  C04B  F03B         	movff	pow@x+1,log@x+1
  6044  00EE66  C04C  F03C         	movff	pow@x+2,log@x+2
  6045  00EE6A  ECF0  F074         	call	_log	;wreg free
  6046  00EE6E  C03A  F050         	movff	?_log,_pow$2469
  6047  00EE72  C03B  F051         	movff	?_log+1,_pow$2469+1
  6048  00EE76  C03C  F052         	movff	?_log+2,_pow$2469+2
  6049  00EE7A  C050  F00D         	movff	_pow$2469,___ftmul@f1
  6050  00EE7E  C051  F00E         	movff	_pow$2469+1,___ftmul@f1+1
  6051  00EE82  C052  F00F         	movff	_pow$2469+2,___ftmul@f1+2
  6052  00EE86  C04D  F010         	movff	pow@y,___ftmul@f2
  6053  00EE8A  C04E  F011         	movff	pow@y+1,___ftmul@f2+1
  6054  00EE8E  C04F  F012         	movff	pow@y+2,___ftmul@f2+2
  6055  00EE92  EC7E  F073         	call	___ftmul	;wreg free
  6056  00EE96  C00D  F053         	movff	?___ftmul,_pow$2470
  6057  00EE9A  C00E  F054         	movff	?___ftmul+1,_pow$2470+1
  6058  00EE9E  C00F  F055         	movff	?___ftmul+2,_pow$2470+2
  6059  00EEA2  C053  F041         	movff	_pow$2470,exp@x
  6060  00EEA6  C054  F042         	movff	_pow$2470+1,exp@x+1
  6061  00EEAA  C055  F043         	movff	_pow$2470+2,exp@x+2
  6062  00EEAE  EC07  F07A         	call	_exp	;wreg free
  6063  00EEB2  C041  F04A         	movff	?_exp,pow@x
  6064  00EEB6  C042  F04B         	movff	?_exp+1,pow@x+1
  6065  00EEBA  C043  F04C         	movff	?_exp+2,pow@x+2
  6066  00EEBE  5056               	movf	pow@sign,w,c
  6067  00EEC0  B4D8               	btfsc	status,2,c
  6068  00EEC2  D00F               	goto	l1124
  6069  00EEC4  C04A  F001         	movff	pow@x,___ftneg@f1
  6070  00EEC8  C04B  F002         	movff	pow@x+1,___ftneg@f1+1
  6071  00EECC  C04C  F003         	movff	pow@x+2,___ftneg@f1+2
  6072  00EED0  EC55  F069         	call	___ftneg	;wreg free
  6073  00EED4  C001  F04A         	movff	?___ftneg,?_pow
  6074  00EED8  C002  F04B         	movff	?___ftneg+1,?_pow+1
  6075  00EEDC  C003  F04C         	movff	?___ftneg+2,?_pow+2
  6076  00EEE0  0012               	return	
  6077  00EEE2                     l1124:
  6078  00EEE2  C04A  F04A         	movff	pow@x,?_pow
  6079  00EEE6  C04B  F04B         	movff	pow@x+1,?_pow+1
  6080  00EEEA  C04C  F04C         	movff	pow@x+2,?_pow+2
  6081  00EEEE  0012               	return		;funcret
  6082  00EEF0                     __end_of_pow:
  6083                           	opt stack 0
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           prodh	equ	0xFF4
  6089                           prodl	equ	0xFF3
  6090                           intcon	equ	0xFF2
  6091                           postinc0	equ	0xFEE
  6092                           wreg	equ	0xFE8
  6093                           postinc1	equ	0xFE6
  6094                           postdec1	equ	0xFE5
  6095                           fsr1h	equ	0xFE2
  6096                           fsr1l	equ	0xFE1
  6097                           indf2	equ	0xFDF
  6098                           postinc2	equ	0xFDE
  6099                           postdec2	equ	0xFDD
  6100                           fsr2h	equ	0xFDA
  6101                           fsr2l	equ	0xFD9
  6102                           status	equ	0xFD8
  6103                           
  6104 ;; *************** function _log *****************
  6105 ;; Defined at:
  6106 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\log.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  x               3   57[COMRAM] unsigned char 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  exponent        2   60[COMRAM] int 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  3   57[COMRAM] int 
  6113 ;; Registers used:
  6114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6120 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6123 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6124 ;;Total ram usage:        5 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    3
  6127 ;; This function calls:
  6128 ;;		___awtoft
  6129 ;;		___ftadd
  6130 ;;		___ftmul
  6131 ;;		_eval_poly
  6132 ;;		_frexp
  6133 ;; This function is called by:
  6134 ;;		_pow
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text27
  6139  00E9E0                     __ptext27:
  6140                           	opt stack 0
  6141  00E9E0                     _log:
  6142                           	opt stack 19
  6143                           
  6144                           ;incstack = 0
  6145  00E9E0  AE3C               	btfss	log@x+2,7,c
  6146  00E9E2  D00C               	goto	l1320
  6147  00E9E4  0E00               	movlw	0
  6148  00E9E6  0100               	movlb	0	; () banked
  6149  00E9E8  6F89               	movwf	(_errno+1)& (0+255),b
  6150  00E9EA  0E21               	movlw	33
  6151  00E9EC  6F88               	movwf	_errno& (0+255),b
  6152  00E9EE  0E00               	movlw	0
  6153  00E9F0  6E3A               	movwf	?_log,c
  6154  00E9F2  0E00               	movlw	0
  6155  00E9F4  6E3B               	movwf	?_log+1,c
  6156  00E9F6  0E00               	movlw	0
  6157  00E9F8  6E3C               	movwf	?_log+2,c
  6158                           
  6159                           ; BSR set to: 0
  6160  00E9FA  0012               	return	
  6161  00E9FC                     l1320:
  6162                           
  6163                           ; BSR set to: 0
  6164  00E9FC  503A               	movf	log@x,w,c
  6165  00E9FE  103B               	iorwf	log@x+1,w,c
  6166  00EA00  103C               	iorwf	log@x+2,w,c
  6167  00EA02  A4D8               	btfss	status,2,c
  6168  00EA04  D00C               	goto	l1322
  6169  00EA06  0E00               	movlw	0
  6170  00EA08  0100               	movlb	0	; () banked
  6171  00EA0A  6F89               	movwf	(_errno+1)& (0+255),b
  6172  00EA0C  0E22               	movlw	34
  6173  00EA0E  6F88               	movwf	_errno& (0+255),b
  6174  00EA10  0E00               	movlw	0
  6175  00EA12  6E3A               	movwf	?_log,c
  6176  00EA14  0E00               	movlw	0
  6177  00EA16  6E3B               	movwf	?_log+1,c
  6178  00EA18  0E00               	movlw	0
  6179  00EA1A  6E3C               	movwf	?_log+2,c
  6180                           
  6181                           ; BSR set to: 0
  6182  00EA1C  0012               	return	
  6183  00EA1E                     l1322:
  6184                           
  6185                           ; BSR set to: 0
  6186  00EA1E  0E00               	movlw	0
  6187  00EA20  6E10               	movwf	___ftmul@f2,c
  6188  00EA22  0E00               	movlw	0
  6189  00EA24  6E11               	movwf	___ftmul@f2+1,c
  6190  00EA26  0E40               	movlw	64
  6191  00EA28  6E12               	movwf	___ftmul@f2+2,c
  6192  00EA2A  0E3D               	movlw	low log@exponent
  6193  00EA2C  6E04               	movwf	frexp@eptr,c
  6194  00EA2E  0E00               	movlw	high log@exponent
  6195  00EA30  6E05               	movwf	frexp@eptr+1,c
  6196  00EA32  C03A  F001         	movff	log@x,frexp@value
  6197  00EA36  C03B  F002         	movff	log@x+1,frexp@value+1
  6198  00EA3A  C03C  F003         	movff	log@x+2,frexp@value+2
  6199  00EA3E  ECD0  F06E         	call	_frexp	;wreg free
  6200  00EA42  C001  F00D         	movff	?_frexp,___ftmul@f1
  6201  00EA46  C002  F00E         	movff	?_frexp+1,___ftmul@f1+1
  6202  00EA4A  C003  F00F         	movff	?_frexp+2,___ftmul@f1+2
  6203  00EA4E  EC7E  F073         	call	___ftmul	;wreg free
  6204  00EA52  C00D  F022         	movff	?___ftmul,___ftadd@f1
  6205  00EA56  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  6206  00EA5A  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  6207  00EA5E  0E00               	movlw	0
  6208  00EA60  6E25               	movwf	___ftadd@f2,c
  6209  00EA62  0E80               	movlw	128
  6210  00EA64  6E26               	movwf	___ftadd@f2+1,c
  6211  00EA66  0EBF               	movlw	191
  6212  00EA68  6E27               	movwf	___ftadd@f2+2,c
  6213  00EA6A  EC46  F078         	call	___ftadd	;wreg free
  6214  00EA6E  C022  F03A         	movff	?___ftadd,log@x
  6215  00EA72  C023  F03B         	movff	?___ftadd+1,log@x+1
  6216  00EA76  C024  F03C         	movff	?___ftadd+2,log@x+2
  6217  00EA7A  063D               	decf	log@exponent,f,c
  6218  00EA7C  A0D8               	btfss	status,0,c
  6219  00EA7E  063E               	decf	log@exponent+1,f,c
  6220  00EA80  C03A  F02E         	movff	log@x,eval_poly@x
  6221  00EA84  C03B  F02F         	movff	log@x+1,eval_poly@x+1
  6222  00EA88  C03C  F030         	movff	log@x+2,eval_poly@x+2
  6223  00EA8C  0E0F               	movlw	low log@coeff
  6224  00EA8E  6E31               	movwf	eval_poly@d,c
  6225  00EA90  0EFF               	movlw	high log@coeff
  6226  00EA92  6E32               	movwf	eval_poly@d+1,c
  6227  00EA94  0E00               	movlw	0
  6228  00EA96  6E34               	movwf	eval_poly@n+1,c
  6229  00EA98  0E08               	movlw	8
  6230  00EA9A  6E33               	movwf	eval_poly@n,c
  6231  00EA9C  EC5B  F071         	call	_eval_poly	;wreg free
  6232  00EAA0  C02E  F03A         	movff	?_eval_poly,log@x
  6233  00EAA4  C02F  F03B         	movff	?_eval_poly+1,log@x+1
  6234  00EAA8  C030  F03C         	movff	?_eval_poly+2,log@x+2
  6235  00EAAC  0E72               	movlw	114
  6236  00EAAE  6E10               	movwf	___ftmul@f2,c
  6237  00EAB0  0E31               	movlw	49
  6238  00EAB2  6E11               	movwf	___ftmul@f2+1,c
  6239  00EAB4  0E3F               	movlw	63
  6240  00EAB6  6E12               	movwf	___ftmul@f2+2,c
  6241  00EAB8  C03D  F009         	movff	log@exponent,___awtoft@c
  6242  00EABC  C03E  F00A         	movff	log@exponent+1,___awtoft@c+1
  6243  00EAC0  ECA5  F069         	call	___awtoft	;wreg free
  6244  00EAC4  C009  F00D         	movff	?___awtoft,___ftmul@f1
  6245  00EAC8  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
  6246  00EACC  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
  6247  00EAD0  EC7E  F073         	call	___ftmul	;wreg free
  6248  00EAD4  C00D  F022         	movff	?___ftmul,___ftadd@f1
  6249  00EAD8  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  6250  00EADC  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  6251  00EAE0  C03A  F025         	movff	log@x,___ftadd@f2
  6252  00EAE4  C03B  F026         	movff	log@x+1,___ftadd@f2+1
  6253  00EAE8  C03C  F027         	movff	log@x+2,___ftadd@f2+2
  6254  00EAEC  EC46  F078         	call	___ftadd	;wreg free
  6255  00EAF0  C022  F03A         	movff	?___ftadd,?_log
  6256  00EAF4  C023  F03B         	movff	?___ftadd+1,?_log+1
  6257  00EAF8  C024  F03C         	movff	?___ftadd+2,?_log+2
  6258  00EAFC  0012               	return	
  6259  00EAFE                     __end_of_log:
  6260                           	opt stack 0
  6261                           tblptru	equ	0xFF8
  6262                           tblptrh	equ	0xFF7
  6263                           tblptrl	equ	0xFF6
  6264                           tablat	equ	0xFF5
  6265                           prodh	equ	0xFF4
  6266                           prodl	equ	0xFF3
  6267                           intcon	equ	0xFF2
  6268                           postinc0	equ	0xFEE
  6269                           wreg	equ	0xFE8
  6270                           postinc1	equ	0xFE6
  6271                           postdec1	equ	0xFE5
  6272                           fsr1h	equ	0xFE2
  6273                           fsr1l	equ	0xFE1
  6274                           indf2	equ	0xFDF
  6275                           postinc2	equ	0xFDE
  6276                           postdec2	equ	0xFDD
  6277                           fsr2h	equ	0xFDA
  6278                           fsr2l	equ	0xFD9
  6279                           status	equ	0xFD8
  6280                           
  6281 ;; *************** function _exp *****************
  6282 ;; Defined at:
  6283 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\exp.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  x               3   64[COMRAM] int 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;  exponent        2   70[COMRAM] int 
  6288 ;;  sign            1   72[COMRAM] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  3   64[COMRAM] unsigned char 
  6291 ;; Registers used:
  6292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6298 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6299 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6301 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6302 ;;Total ram usage:        9 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; Hardware stack levels required when called:    3
  6305 ;; This function calls:
  6306 ;;		___awtoft
  6307 ;;		___ftdiv
  6308 ;;		___ftge
  6309 ;;		___ftmul
  6310 ;;		___ftneg
  6311 ;;		___ftsub
  6312 ;;		___fttol
  6313 ;;		_eval_poly
  6314 ;;		_floor
  6315 ;;		_ldexp
  6316 ;; This function is called by:
  6317 ;;		_pow
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text28
  6322  00F40E                     __ptext28:
  6323                           	opt stack 0
  6324  00F40E                     _exp:
  6325                           	opt stack 19
  6326                           
  6327                           ;incstack = 0
  6328  00F40E  5041               	movf	exp@x,w,c
  6329  00F410  1042               	iorwf	exp@x+1,w,c
  6330  00F412  1043               	iorwf	exp@x+2,w,c
  6331  00F414  A4D8               	btfss	status,2,c
  6332  00F416  D007               	goto	l1278
  6333  00F418  0E00               	movlw	0
  6334  00F41A  6E41               	movwf	?_exp,c
  6335  00F41C  0E80               	movlw	128
  6336  00F41E  6E42               	movwf	?_exp+1,c
  6337  00F420  0E3F               	movlw	63
  6338  00F422  6E43               	movwf	?_exp+2,c
  6339  00F424  0012               	return	
  6340  00F426                     l1278:
  6341  00F426  0E72               	movlw	114
  6342  00F428  6E01               	movwf	___ftge@ff1,c
  6343  00F42A  0E31               	movlw	49
  6344  00F42C  6E02               	movwf	___ftge@ff1+1,c
  6345  00F42E  0E44               	movlw	68
  6346  00F430  6E03               	movwf	___ftge@ff1+2,c
  6347  00F432  C041  F004         	movff	exp@x,___ftge@ff2
  6348  00F436  C042  F005         	movff	exp@x+1,___ftge@ff2+1
  6349  00F43A  C043  F006         	movff	exp@x+2,___ftge@ff2+2
  6350  00F43E  EC88  F06E         	call	___ftge	;wreg free
  6351  00F442  B0D8               	btfsc	status,0,c
  6352  00F444  D00C               	goto	l1280
  6353  00F446  0E00               	movlw	0
  6354  00F448  0100               	movlb	0	; () banked
  6355  00F44A  6F89               	movwf	(_errno+1)& (0+255),b
  6356  00F44C  0E22               	movlw	34
  6357  00F44E  6F88               	movwf	_errno& (0+255),b
  6358  00F450  0EFF               	movlw	255
  6359  00F452  6E41               	movwf	?_exp,c
  6360  00F454  0E7F               	movlw	127
  6361  00F456  6E42               	movwf	?_exp+1,c
  6362  00F458  0E7F               	movlw	127
  6363  00F45A  6E43               	movwf	?_exp+2,c
  6364                           
  6365                           ; BSR set to: 0
  6366  00F45C  0012               	return	
  6367  00F45E                     l1280:
  6368                           
  6369                           ; BSR set to: 0
  6370  00F45E  C041  F001         	movff	exp@x,___ftge@ff1
  6371  00F462  C042  F002         	movff	exp@x+1,___ftge@ff1+1
  6372  00F466  C043  F003         	movff	exp@x+2,___ftge@ff1+2
  6373  00F46A  0E49               	movlw	73
  6374  00F46C  6E04               	movwf	___ftge@ff2,c
  6375  00F46E  0E3A               	movlw	58
  6376  00F470  6E05               	movwf	___ftge@ff2+1,c
  6377  00F472  0EC4               	movlw	196
  6378  00F474  6E06               	movwf	___ftge@ff2+2,c
  6379  00F476  EC88  F06E         	call	___ftge	;wreg free
  6380  00F47A  B0D8               	btfsc	status,0,c
  6381  00F47C  D00C               	goto	l1281
  6382  00F47E  0E00               	movlw	0
  6383  00F480  0100               	movlb	0	; () banked
  6384  00F482  6F89               	movwf	(_errno+1)& (0+255),b
  6385  00F484  0E22               	movlw	34
  6386  00F486  6F88               	movwf	_errno& (0+255),b
  6387  00F488  0E00               	movlw	0
  6388  00F48A  6E41               	movwf	?_exp,c
  6389  00F48C  0E00               	movlw	0
  6390  00F48E  6E42               	movwf	?_exp+1,c
  6391  00F490  0E00               	movlw	0
  6392  00F492  6E43               	movwf	?_exp+2,c
  6393                           
  6394                           ; BSR set to: 0
  6395  00F494  0012               	return	
  6396  00F496                     l1281:
  6397                           
  6398                           ; BSR set to: 0
  6399  00F496  AE43               	btfss	exp@x+2,7,c
  6400  00F498  D002               	goto	u4600
  6401  00F49A  0E01               	movlw	1
  6402  00F49C  D001               	goto	u4610
  6403  00F49E                     u4600:
  6404  00F49E  0E00               	movlw	0
  6405  00F4A0                     u4610:
  6406  00F4A0  6E49               	movwf	exp@sign,c
  6407  00F4A2  5049               	movf	exp@sign,w,c
  6408  00F4A4  B4D8               	btfsc	status,2,c
  6409  00F4A6  D00E               	goto	l1282
  6410  00F4A8  C041  F001         	movff	exp@x,___ftneg@f1
  6411  00F4AC  C042  F002         	movff	exp@x+1,___ftneg@f1+1
  6412  00F4B0  C043  F003         	movff	exp@x+2,___ftneg@f1+2
  6413  00F4B4  EC55  F069         	call	___ftneg	;wreg free
  6414  00F4B8  C001  F041         	movff	?___ftneg,exp@x
  6415  00F4BC  C002  F042         	movff	?___ftneg+1,exp@x+1
  6416  00F4C0  C003  F043         	movff	?___ftneg+2,exp@x+2
  6417  00F4C4                     l1282:
  6418  00F4C4  C041  F00D         	movff	exp@x,___ftmul@f1
  6419  00F4C8  C042  F00E         	movff	exp@x+1,___ftmul@f1+1
  6420  00F4CC  C043  F00F         	movff	exp@x+2,___ftmul@f1+2
  6421  00F4D0  0EAA               	movlw	170
  6422  00F4D2  6E10               	movwf	___ftmul@f2,c
  6423  00F4D4  0EB8               	movlw	184
  6424  00F4D6  6E11               	movwf	___ftmul@f2+1,c
  6425  00F4D8  0E3F               	movlw	63
  6426  00F4DA  6E12               	movwf	___ftmul@f2+2,c
  6427  00F4DC  EC7E  F073         	call	___ftmul	;wreg free
  6428  00F4E0  C00D  F041         	movff	?___ftmul,exp@x
  6429  00F4E4  C00E  F042         	movff	?___ftmul+1,exp@x+1
  6430  00F4E8  C00F  F043         	movff	?___ftmul+2,exp@x+2
  6431  00F4EC  C041  F02E         	movff	exp@x,floor@x
  6432  00F4F0  C042  F02F         	movff	exp@x+1,floor@x+1
  6433  00F4F4  C043  F030         	movff	exp@x+2,floor@x+2
  6434  00F4F8  EC9C  F072         	call	_floor	;wreg free
  6435  00F4FC  C02E  F044         	movff	?_floor,_exp$2471
  6436  00F500  C02F  F045         	movff	?_floor+1,_exp$2471+1
  6437  00F504  C030  F046         	movff	?_floor+2,_exp$2471+2
  6438  00F508  C044  F00D         	movff	_exp$2471,___fttol@f1
  6439  00F50C  C045  F00E         	movff	_exp$2471+1,___fttol@f1+1
  6440  00F510  C046  F00F         	movff	_exp$2471+2,___fttol@f1+2
  6441  00F514  ECF8  F073         	call	___fttol	;wreg free
  6442  00F518  C00D  F047         	movff	?___fttol,exp@exponent
  6443  00F51C  C00E  F048         	movff	?___fttol+1,exp@exponent+1
  6444  00F520  C041  F02E         	movff	exp@x,___ftsub@f1
  6445  00F524  C042  F02F         	movff	exp@x+1,___ftsub@f1+1
  6446  00F528  C043  F030         	movff	exp@x+2,___ftsub@f1+2
  6447  00F52C  C047  F009         	movff	exp@exponent,___awtoft@c
  6448  00F530  C048  F00A         	movff	exp@exponent+1,___awtoft@c+1
  6449  00F534  ECA5  F069         	call	___awtoft	;wreg free
  6450  00F538  C009  F031         	movff	?___awtoft,___ftsub@f2
  6451  00F53C  C00A  F032         	movff	?___awtoft+1,___ftsub@f2+1
  6452  00F540  C00B  F033         	movff	?___awtoft+2,___ftsub@f2+2
  6453  00F544  ECC1  F069         	call	___ftsub	;wreg free
  6454  00F548  C02E  F041         	movff	?___ftsub,exp@x
  6455  00F54C  C02F  F042         	movff	?___ftsub+1,exp@x+1
  6456  00F550  C030  F043         	movff	?___ftsub+2,exp@x+2
  6457  00F554  C041  F02E         	movff	exp@x,eval_poly@x
  6458  00F558  C042  F02F         	movff	exp@x+1,eval_poly@x+1
  6459  00F55C  C043  F030         	movff	exp@x+2,eval_poly@x+2
  6460  00F560  0EF1               	movlw	low exp@coeff
  6461  00F562  6E31               	movwf	eval_poly@d,c
  6462  00F564  0EFE               	movlw	high exp@coeff
  6463  00F566  6E32               	movwf	eval_poly@d+1,c
  6464  00F568  0E00               	movlw	0
  6465  00F56A  6E34               	movwf	eval_poly@n+1,c
  6466  00F56C  0E09               	movlw	9
  6467  00F56E  6E33               	movwf	eval_poly@n,c
  6468  00F570  EC5B  F071         	call	_eval_poly	;wreg free
  6469  00F574  C02E  F03A         	movff	?_eval_poly,ldexp@value
  6470  00F578  C02F  F03B         	movff	?_eval_poly+1,ldexp@value+1
  6471  00F57C  C030  F03C         	movff	?_eval_poly+2,ldexp@value+2
  6472  00F580  C047  F03D         	movff	exp@exponent,ldexp@newexp
  6473  00F584  C048  F03E         	movff	exp@exponent+1,ldexp@newexp+1
  6474  00F588  ECF8  F070         	call	_ldexp	;wreg free
  6475  00F58C  C03A  F041         	movff	?_ldexp,exp@x
  6476  00F590  C03B  F042         	movff	?_ldexp+1,exp@x+1
  6477  00F594  C03C  F043         	movff	?_ldexp+2,exp@x+2
  6478  00F598  5049               	movf	exp@sign,w,c
  6479  00F59A  B4D8               	btfsc	status,2,c
  6480  00F59C  D025               	goto	l1283
  6481  00F59E  2841               	incf	exp@x,w,c
  6482  00F5A0  E10E               	bnz	l4237
  6483  00F5A2  0E7F               	movlw	127
  6484  00F5A4  1842               	xorwf	exp@x+1,w,c
  6485  00F5A6  E10B               	bnz	l4237
  6486  00F5A8  0E7F               	movlw	127
  6487  00F5AA  1843               	xorwf	exp@x+2,w,c
  6488  00F5AC  A4D8               	btfss	status,2,c
  6489  00F5AE  D007               	goto	l1284
  6490  00F5B0  0E00               	movlw	0
  6491  00F5B2  6E41               	movwf	?_exp,c
  6492  00F5B4  0E00               	movlw	0
  6493  00F5B6  6E42               	movwf	?_exp+1,c
  6494  00F5B8  0E00               	movlw	0
  6495  00F5BA  6E43               	movwf	?_exp+2,c
  6496  00F5BC  0012               	return	
  6497  00F5BE                     l1284:
  6498  00F5BE                     l4237:
  6499  00F5BE  0E00               	movlw	0
  6500  00F5C0  6E09               	movwf	___ftdiv@f1,c
  6501  00F5C2  0E80               	movlw	128
  6502  00F5C4  6E0A               	movwf	___ftdiv@f1+1,c
  6503  00F5C6  0E3F               	movlw	63
  6504  00F5C8  6E0B               	movwf	___ftdiv@f1+2,c
  6505  00F5CA  C041  F00C         	movff	exp@x,___ftdiv@f2
  6506  00F5CE  C042  F00D         	movff	exp@x+1,___ftdiv@f2+1
  6507  00F5D2  C043  F00E         	movff	exp@x+2,___ftdiv@f2+2
  6508  00F5D6  EC0B  F073         	call	___ftdiv	;wreg free
  6509  00F5DA  C009  F041         	movff	?___ftdiv,?_exp
  6510  00F5DE  C00A  F042         	movff	?___ftdiv+1,?_exp+1
  6511  00F5E2  C00B  F043         	movff	?___ftdiv+2,?_exp+2
  6512  00F5E6  0012               	return	
  6513  00F5E8                     l1283:
  6514  00F5E8  C041  F041         	movff	exp@x,?_exp
  6515  00F5EC  C042  F042         	movff	exp@x+1,?_exp+1
  6516  00F5F0  C043  F043         	movff	exp@x+2,?_exp+2
  6517  00F5F4  0012               	return		;funcret
  6518  00F5F6                     __end_of_exp:
  6519                           	opt stack 0
  6520                           tblptru	equ	0xFF8
  6521                           tblptrh	equ	0xFF7
  6522                           tblptrl	equ	0xFF6
  6523                           tablat	equ	0xFF5
  6524                           prodh	equ	0xFF4
  6525                           prodl	equ	0xFF3
  6526                           intcon	equ	0xFF2
  6527                           postinc0	equ	0xFEE
  6528                           wreg	equ	0xFE8
  6529                           postinc1	equ	0xFE6
  6530                           postdec1	equ	0xFE5
  6531                           fsr1h	equ	0xFE2
  6532                           fsr1l	equ	0xFE1
  6533                           indf2	equ	0xFDF
  6534                           postinc2	equ	0xFDE
  6535                           postdec2	equ	0xFDD
  6536                           fsr2h	equ	0xFDA
  6537                           fsr2l	equ	0xFD9
  6538                           status	equ	0xFD8
  6539                           
  6540 ;; *************** function _ldexp *****************
  6541 ;; Defined at:
  6542 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  value           3   57[COMRAM] unsigned char 
  6545 ;;  newexp          2   60[COMRAM] int 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;		None
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  3   57[COMRAM] int 
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, status,0
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6557 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6561 ;;Total ram usage:        7 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_exp
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text29
  6571  00E1F0                     __ptext29:
  6572                           	opt stack 0
  6573  00E1F0                     _ldexp:
  6574                           	opt stack 21
  6575                           
  6576                           ;incstack = 0
  6577  00E1F0  503A               	movf	ldexp@value,w,c
  6578  00E1F2  103B               	iorwf	ldexp@value+1,w,c
  6579  00E1F4  103C               	iorwf	ldexp@value+2,w,c
  6580  00E1F6  A4D8               	btfss	status,2,c
  6581  00E1F8  D007               	goto	l1302
  6582  00E1FA  0E00               	movlw	0
  6583  00E1FC  6E3A               	movwf	?_ldexp,c
  6584  00E1FE  0E00               	movlw	0
  6585  00E200  6E3B               	movwf	?_ldexp+1,c
  6586  00E202  0E00               	movlw	0
  6587  00E204  6E3C               	movwf	?_ldexp+2,c
  6588  00E206  0012               	return	
  6589  00E208                     l1302:
  6590  00E208  503C               	movf	ldexp@value+2,w,c
  6591  00E20A  0B7F               	andlw	127
  6592  00E20C  6E3F               	movwf	??_ldexp& (0+255),c
  6593  00E20E  6A40               	clrf	(??_ldexp+1)& (0+255),c
  6594  00E210  90D8               	bcf	status,0,c
  6595  00E212  363F               	rlcf	??_ldexp,f,c
  6596  00E214  3640               	rlcf	??_ldexp+1,f,c
  6597  00E216  503F               	movf	??_ldexp,w,c
  6598  00E218  263D               	addwf	ldexp@newexp,f,c
  6599  00E21A  5040               	movf	??_ldexp+1,w,c
  6600  00E21C  223E               	addwfc	ldexp@newexp+1,f,c
  6601  00E21E  AE3B               	btfss	ldexp@value+1,7,c
  6602  00E220  D003               	goto	u4030
  6603  00E222  6A3F               	clrf	??_ldexp& (0+255),c
  6604  00E224  2A3F               	incf	??_ldexp& (0+255),f,c
  6605  00E226  D001               	goto	u4038
  6606  00E228                     u4030:
  6607  00E228  6A3F               	clrf	??_ldexp& (0+255),c
  6608  00E22A                     u4038:
  6609  00E22A  503F               	movf	??_ldexp,w,c
  6610  00E22C  263D               	addwf	ldexp@newexp,f,c
  6611  00E22E  0E00               	movlw	0
  6612  00E230  223E               	addwfc	ldexp@newexp+1,f,c
  6613  00E232  AE3E               	btfss	ldexp@newexp+1,7,c
  6614  00E234  D00C               	goto	l1304
  6615  00E236  0E00               	movlw	0
  6616  00E238  0100               	movlb	0	; () banked
  6617  00E23A  6F89               	movwf	(_errno+1)& (0+255),b
  6618  00E23C  0E22               	movlw	34
  6619  00E23E  6F88               	movwf	_errno& (0+255),b
  6620  00E240  0E00               	movlw	0
  6621  00E242  6E3A               	movwf	?_ldexp,c
  6622  00E244  0E00               	movlw	0
  6623  00E246  6E3B               	movwf	?_ldexp+1,c
  6624  00E248  0E00               	movlw	0
  6625  00E24A                     L1:
  6626  00E24A  6E3C               	movwf	?_ldexp+2,c
  6627                           
  6628                           ; BSR set to: 0
  6629  00E24C  0012               	return	
  6630  00E24E                     l1304:
  6631                           
  6632                           ; BSR set to: 0
  6633  00E24E  BE3E               	btfsc	ldexp@newexp+1,7,c
  6634  00E250  D016               	goto	l1306
  6635  00E252  043E               	decf	ldexp@newexp+1,w,c
  6636  00E254  A0D8               	btfss	status,0,c
  6637  00E256  D013               	goto	l1306
  6638  00E258  0E00               	movlw	0
  6639  00E25A  0100               	movlb	0	; () banked
  6640  00E25C  6F89               	movwf	(_errno+1)& (0+255),b
  6641  00E25E  0E22               	movlw	34
  6642  00E260  6F88               	movwf	_errno& (0+255),b
  6643                           
  6644                           ; BSR set to: 0
  6645  00E262  AE3C               	btfss	ldexp@value+2,7,c
  6646  00E264  D006               	goto	l1307
  6647                           
  6648                           ; BSR set to: 0
  6649  00E266  0EFF               	movlw	255
  6650  00E268  6E3A               	movwf	?_ldexp,c
  6651  00E26A  0E7F               	movlw	127
  6652  00E26C  6E3B               	movwf	?_ldexp+1,c
  6653  00E26E  0EFF               	movlw	255
  6654  00E270  D7EC               	goto	L1
  6655  00E272                     l1307:
  6656                           
  6657                           ; BSR set to: 0
  6658                           
  6659                           ; BSR set to: 0
  6660  00E272  0EFF               	movlw	255
  6661  00E274  6E3A               	movwf	?_ldexp,c
  6662  00E276  0E7F               	movlw	127
  6663  00E278  6E3B               	movwf	?_ldexp+1,c
  6664  00E27A  0E7F               	movlw	127
  6665  00E27C  D7E6               	goto	L1
  6666  00E27E                     l1306:
  6667                           
  6668                           ; BSR set to: 0
  6669  00E27E  343E               	rlcf	ldexp@newexp+1,w,c
  6670  00E280  303E               	rrcf	ldexp@newexp+1,w,c
  6671  00E282  6E40               	movwf	(??_ldexp+1)& (0+255),c
  6672  00E284  303D               	rrcf	ldexp@newexp,w,c
  6673  00E286  6E3F               	movwf	??_ldexp& (0+255),c
  6674  00E288  503C               	movf	ldexp@value+2,w,c
  6675  00E28A  183F               	xorwf	??_ldexp,w,c
  6676  00E28C  0B80               	andlw	-128
  6677  00E28E  183F               	xorwf	??_ldexp,w,c
  6678  00E290  6E3C               	movwf	ldexp@value+2,c
  6679  00E292  C03D  F03F         	movff	ldexp@newexp,??_ldexp
  6680  00E296  0E01               	movlw	1
  6681  00E298  163F               	andwf	??_ldexp,f,c
  6682  00E29A  323F               	rrcf	??_ldexp,f,c
  6683  00E29C  323F               	rrcf	??_ldexp,f,c
  6684  00E29E  503B               	movf	ldexp@value+1,w,c
  6685  00E2A0  183F               	xorwf	??_ldexp,w,c
  6686  00E2A2  0B7F               	andlw	-129
  6687  00E2A4  183F               	xorwf	??_ldexp,w,c
  6688  00E2A6  6E3B               	movwf	ldexp@value+1,c
  6689  00E2A8  C03A  F03A         	movff	ldexp@value,?_ldexp
  6690  00E2AC  C03B  F03B         	movff	ldexp@value+1,?_ldexp+1
  6691  00E2B0  C03C  F03C         	movff	ldexp@value+2,?_ldexp+2
  6692  00E2B4  0012               	return	
  6693  00E2B6                     __end_of_ldexp:
  6694                           	opt stack 0
  6695                           tblptru	equ	0xFF8
  6696                           tblptrh	equ	0xFF7
  6697                           tblptrl	equ	0xFF6
  6698                           tablat	equ	0xFF5
  6699                           prodh	equ	0xFF4
  6700                           prodl	equ	0xFF3
  6701                           intcon	equ	0xFF2
  6702                           postinc0	equ	0xFEE
  6703                           wreg	equ	0xFE8
  6704                           postinc1	equ	0xFE6
  6705                           postdec1	equ	0xFE5
  6706                           fsr1h	equ	0xFE2
  6707                           fsr1l	equ	0xFE1
  6708                           indf2	equ	0xFDF
  6709                           postinc2	equ	0xFDE
  6710                           postdec2	equ	0xFDD
  6711                           fsr2h	equ	0xFDA
  6712                           fsr2l	equ	0xFD9
  6713                           status	equ	0xFD8
  6714                           
  6715 ;; *************** function _floor *****************
  6716 ;; Defined at:
  6717 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\floor.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  x               3   45[COMRAM] int 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  i               3   48[COMRAM] int 
  6722 ;;  expon           2   51[COMRAM] int 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  3   45[COMRAM] int 
  6725 ;; Registers used:
  6726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6732 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6733 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6735 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6736 ;;Total ram usage:        8 bytes
  6737 ;; Hardware stack levels used:    1
  6738 ;; Hardware stack levels required when called:    2
  6739 ;; This function calls:
  6740 ;;		___altoft
  6741 ;;		___ftadd
  6742 ;;		___ftge
  6743 ;;		___fttol
  6744 ;;		_frexp
  6745 ;; This function is called by:
  6746 ;;		_exp
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text30
  6751  00E538                     __ptext30:
  6752                           	opt stack 0
  6753  00E538                     _floor:
  6754                           	opt stack 19
  6755                           
  6756                           ;incstack = 0
  6757  00E538  C02E  F001         	movff	floor@x,frexp@value
  6758  00E53C  C02F  F002         	movff	floor@x+1,frexp@value+1
  6759  00E540  C030  F003         	movff	floor@x+2,frexp@value+2
  6760  00E544  0E34               	movlw	low floor@expon
  6761  00E546  6E04               	movwf	frexp@eptr,c
  6762  00E548  0E00               	movlw	high floor@expon
  6763  00E54A  6E05               	movwf	frexp@eptr+1,c
  6764  00E54C  ECD0  F06E         	call	_frexp	;wreg free
  6765  00E550  AE35               	btfss	floor@expon+1,7,c
  6766  00E552  D010               	goto	l1289
  6767  00E554  AE30               	btfss	floor@x+2,7,c
  6768  00E556  D007               	goto	l1290
  6769  00E558  0E00               	movlw	0
  6770  00E55A  6E2E               	movwf	?_floor,c
  6771  00E55C  0E80               	movlw	128
  6772  00E55E  6E2F               	movwf	?_floor+1,c
  6773  00E560  0EBF               	movlw	191
  6774  00E562  6E30               	movwf	?_floor+2,c
  6775  00E564  0012               	return	
  6776  00E566                     l1290:
  6777  00E566  0E00               	movlw	0
  6778  00E568  6E2E               	movwf	?_floor,c
  6779  00E56A  0E00               	movlw	0
  6780  00E56C  6E2F               	movwf	?_floor+1,c
  6781  00E56E  0E00               	movlw	0
  6782  00E570  6E30               	movwf	?_floor+2,c
  6783  00E572  0012               	return	
  6784  00E574                     l1289:
  6785  00E574  5035               	movf	floor@expon+1,w,c
  6786  00E576  E104               	bnz	u3990
  6787  00E578  0E15               	movlw	21
  6788  00E57A  5C34               	subwf	floor@expon,w,c
  6789  00E57C  A0D8               	btfss	status,0,c
  6790  00E57E  D007               	goto	l1292
  6791  00E580                     u3990:
  6792  00E580  C02E  F02E         	movff	floor@x,?_floor
  6793  00E584  C02F  F02F         	movff	floor@x+1,?_floor+1
  6794  00E588  C030  F030         	movff	floor@x+2,?_floor+2
  6795  00E58C  0012               	return	
  6796  00E58E                     l1292:
  6797  00E58E  C02E  F00D         	movff	floor@x,___fttol@f1
  6798  00E592  C02F  F00E         	movff	floor@x+1,___fttol@f1+1
  6799  00E596  C030  F00F         	movff	floor@x+2,___fttol@f1+2
  6800  00E59A  ECF8  F073         	call	___fttol	;wreg free
  6801  00E59E  C00D  F01C         	movff	?___fttol,___altoft@c
  6802  00E5A2  C00E  F01D         	movff	?___fttol+1,___altoft@c+1
  6803  00E5A6  C00F  F01E         	movff	?___fttol+2,___altoft@c+2
  6804  00E5AA  C010  F01F         	movff	?___fttol+3,___altoft@c+3
  6805  00E5AE  EC31  F06C         	call	___altoft	;wreg free
  6806  00E5B2  C01C  F031         	movff	?___altoft,floor@i
  6807  00E5B6  C01D  F032         	movff	?___altoft+1,floor@i+1
  6808  00E5BA  C01E  F033         	movff	?___altoft+2,floor@i+2
  6809  00E5BE  C02E  F001         	movff	floor@x,___ftge@ff1
  6810  00E5C2  C02F  F002         	movff	floor@x+1,___ftge@ff1+1
  6811  00E5C6  C030  F003         	movff	floor@x+2,___ftge@ff1+2
  6812  00E5CA  C031  F004         	movff	floor@i,___ftge@ff2
  6813  00E5CE  C032  F005         	movff	floor@i+1,___ftge@ff2+1
  6814  00E5D2  C033  F006         	movff	floor@i+2,___ftge@ff2+2
  6815  00E5D6  EC88  F06E         	call	___ftge	;wreg free
  6816  00E5DA  B0D8               	btfsc	status,0,c
  6817  00E5DC  D015               	goto	l1293
  6818  00E5DE  C031  F022         	movff	floor@i,___ftadd@f1
  6819  00E5E2  C032  F023         	movff	floor@i+1,___ftadd@f1+1
  6820  00E5E6  C033  F024         	movff	floor@i+2,___ftadd@f1+2
  6821  00E5EA  0E00               	movlw	0
  6822  00E5EC  6E25               	movwf	___ftadd@f2,c
  6823  00E5EE  0E80               	movlw	128
  6824  00E5F0  6E26               	movwf	___ftadd@f2+1,c
  6825  00E5F2  0EBF               	movlw	191
  6826  00E5F4  6E27               	movwf	___ftadd@f2+2,c
  6827  00E5F6  EC46  F078         	call	___ftadd	;wreg free
  6828  00E5FA  C022  F02E         	movff	?___ftadd,?_floor
  6829  00E5FE  C023  F02F         	movff	?___ftadd+1,?_floor+1
  6830  00E602  C024  F030         	movff	?___ftadd+2,?_floor+2
  6831  00E606  0012               	return	
  6832  00E608                     l1293:
  6833  00E608  C031  F02E         	movff	floor@i,?_floor
  6834  00E60C  C032  F02F         	movff	floor@i+1,?_floor+1
  6835  00E610  C033  F030         	movff	floor@i+2,?_floor+2
  6836  00E614  0012               	return		;funcret
  6837  00E616                     __end_of_floor:
  6838                           	opt stack 0
  6839                           tblptru	equ	0xFF8
  6840                           tblptrh	equ	0xFF7
  6841                           tblptrl	equ	0xFF6
  6842                           tablat	equ	0xFF5
  6843                           prodh	equ	0xFF4
  6844                           prodl	equ	0xFF3
  6845                           intcon	equ	0xFF2
  6846                           postinc0	equ	0xFEE
  6847                           wreg	equ	0xFE8
  6848                           postinc1	equ	0xFE6
  6849                           postdec1	equ	0xFE5
  6850                           fsr1h	equ	0xFE2
  6851                           fsr1l	equ	0xFE1
  6852                           indf2	equ	0xFDF
  6853                           postinc2	equ	0xFDE
  6854                           postdec2	equ	0xFDD
  6855                           fsr2h	equ	0xFDA
  6856                           fsr2l	equ	0xFD9
  6857                           status	equ	0xFD8
  6858                           
  6859 ;; *************** function _frexp *****************
  6860 ;; Defined at:
  6861 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\frexp.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  value           3    0[COMRAM] int 
  6864 ;;  eptr            2    3[COMRAM] PTR int 
  6865 ;;		 -> log@exponent(2), floor@expon(2), 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;		None
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  3    0[COMRAM] PTR int 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6877 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6880 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6881 ;;Total ram usage:        7 bytes
  6882 ;; Hardware stack levels used:    1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_floor
  6887 ;;		_log
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text31
  6892  00DDA0                     __ptext31:
  6893                           	opt stack 0
  6894  00DDA0                     _frexp:
  6895                           	opt stack 21
  6896                           
  6897                           ;incstack = 0
  6898  00DDA0  5001               	movf	frexp@value,w,c
  6899  00DDA2  1002               	iorwf	frexp@value+1,w,c
  6900  00DDA4  1003               	iorwf	frexp@value+2,w,c
  6901  00DDA6  A4D8               	btfss	status,2,c
  6902  00DDA8  D00F               	goto	l1298
  6903  00DDAA  C004  FFD9         	movff	frexp@eptr,fsr2l
  6904  00DDAE  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6905  00DDB2  0E00               	movlw	0
  6906  00DDB4  6EDE               	movwf	postinc2,c
  6907  00DDB6  0E00               	movlw	0
  6908  00DDB8  6EDD               	movwf	postdec2,c
  6909  00DDBA  0E00               	movlw	0
  6910  00DDBC  6E01               	movwf	?_frexp,c
  6911  00DDBE  0E00               	movlw	0
  6912  00DDC0  6E02               	movwf	?_frexp+1,c
  6913  00DDC2  0E00               	movlw	0
  6914  00DDC4  6E03               	movwf	?_frexp+2,c
  6915  00DDC6  0012               	return	
  6916  00DDC8                     l1298:
  6917  00DDC8  5003               	movf	frexp@value+2,w,c
  6918  00DDCA  0B7F               	andlw	127
  6919  00DDCC  6E06               	movwf	??_frexp& (0+255),c
  6920  00DDCE  6A07               	clrf	(??_frexp+1)& (0+255),c
  6921  00DDD0  90D8               	bcf	status,0,c
  6922  00DDD2  3606               	rlcf	??_frexp,f,c
  6923  00DDD4  3607               	rlcf	??_frexp+1,f,c
  6924  00DDD6  C004  FFD9         	movff	frexp@eptr,fsr2l
  6925  00DDDA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6926  00DDDE  C006  FFDE         	movff	??_frexp,postinc2
  6927  00DDE2  C007  FFDD         	movff	??_frexp+1,postdec2
  6928  00DDE6  AE02               	btfss	frexp@value+1,7,c
  6929  00DDE8  D003               	goto	u3800
  6930  00DDEA  6A06               	clrf	??_frexp& (0+255),c
  6931  00DDEC  2A06               	incf	??_frexp& (0+255),f,c
  6932  00DDEE  D001               	goto	u3808
  6933  00DDF0                     u3800:
  6934  00DDF0  6A06               	clrf	??_frexp& (0+255),c
  6935  00DDF2                     u3808:
  6936  00DDF2  5006               	movf	??_frexp,w,c
  6937  00DDF4  C004  FFD9         	movff	frexp@eptr,fsr2l
  6938  00DDF8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6939  00DDFC  12DE               	iorwf	postinc2,f,c
  6940  00DDFE  0E00               	movlw	0
  6941  00DE00  12DD               	iorwf	postdec2,f,c
  6942  00DE02  C004  FFD9         	movff	frexp@eptr,fsr2l
  6943  00DE06  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  6944  00DE0A  0E82               	movlw	130
  6945  00DE0C  26DE               	addwf	postinc2,f,c
  6946  00DE0E  0EFF               	movlw	255
  6947  00DE10  22DD               	addwfc	postdec2,f,c
  6948  00DE12  8003               	bsf	frexp@value+2,0,c
  6949  00DE14  8203               	bsf	frexp@value+2,1,c
  6950  00DE16  8403               	bsf	frexp@value+2,2,c
  6951  00DE18  8603               	bsf	frexp@value+2,3,c
  6952  00DE1A  8803               	bsf	frexp@value+2,4,c
  6953  00DE1C  8A03               	bsf	frexp@value+2,5,c
  6954  00DE1E  9C03               	bcf	frexp@value+2,6,c
  6955  00DE20  9E02               	bcf	frexp@value+1,7,c
  6956  00DE22  C001  F001         	movff	frexp@value,?_frexp
  6957  00DE26  C002  F002         	movff	frexp@value+1,?_frexp+1
  6958  00DE2A  C003  F003         	movff	frexp@value+2,?_frexp+2
  6959  00DE2E  0012               	return	
  6960  00DE30                     __end_of_frexp:
  6961                           	opt stack 0
  6962                           tblptru	equ	0xFF8
  6963                           tblptrh	equ	0xFF7
  6964                           tblptrl	equ	0xFF6
  6965                           tablat	equ	0xFF5
  6966                           prodh	equ	0xFF4
  6967                           prodl	equ	0xFF3
  6968                           intcon	equ	0xFF2
  6969                           postinc0	equ	0xFEE
  6970                           wreg	equ	0xFE8
  6971                           postinc1	equ	0xFE6
  6972                           postdec1	equ	0xFE5
  6973                           fsr1h	equ	0xFE2
  6974                           fsr1l	equ	0xFE1
  6975                           indf2	equ	0xFDF
  6976                           postinc2	equ	0xFDE
  6977                           postdec2	equ	0xFDD
  6978                           fsr2h	equ	0xFDA
  6979                           fsr2l	equ	0xFD9
  6980                           status	equ	0xFD8
  6981                           
  6982 ;; *************** function ___fttol *****************
  6983 ;; Defined at:
  6984 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fttol.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  f1              3   12[COMRAM] float 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  lval            4   22[COMRAM] unsigned long 
  6989 ;;  exp1            1   26[COMRAM] unsigned char 
  6990 ;;  sign1           1   21[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  4   12[COMRAM] long 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7001 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7002 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7003 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7004 ;;Total ram usage:       15 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_covertir_valores_de_array_a_escala_decimal
  7010 ;;		_pow
  7011 ;;		_exp
  7012 ;;		_floor
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text32
  7017  00E7F0                     __ptext32:
  7018                           	opt stack 0
  7019  00E7F0                     ___fttol:
  7020                           	opt stack 20
  7021                           
  7022                           ;incstack = 0
  7023  00E7F0  C00F  F011         	movff	___fttol@f1+2,??___fttol
  7024  00E7F4  6A12               	clrf	(??___fttol+1)& (0+255),c
  7025  00E7F6  6A13               	clrf	(??___fttol+2)& (0+255),c
  7026  00E7F8  340E               	rlcf	___fttol@f1+1,w,c
  7027  00E7FA  3611               	rlcf	??___fttol& (0+255),f,c
  7028  00E7FC  E301               	bnc	u3711
  7029  00E7FE  8012               	bsf	(??___fttol+1)& (0+255),0,c
  7030  00E800                     u3711:
  7031  00E800  5011               	movf	??___fttol,w,c
  7032  00E802  6E1B               	movwf	___fttol@exp1,c
  7033  00E804  501B               	movf	___fttol@exp1,w,c
  7034  00E806  A4D8               	btfss	status,2,c
  7035  00E808  D009               	goto	l994
  7036  00E80A  0E00               	movlw	0
  7037  00E80C  6E0D               	movwf	?___fttol,c
  7038  00E80E  0E00               	movlw	0
  7039  00E810  6E0E               	movwf	?___fttol+1,c
  7040  00E812  0E00               	movlw	0
  7041  00E814  6E0F               	movwf	?___fttol+2,c
  7042  00E816  0E00               	movlw	0
  7043  00E818  6E10               	movwf	?___fttol+3,c
  7044  00E81A  0012               	return	
  7045  00E81C                     l994:
  7046  00E81C  0E17               	movlw	23
  7047  00E81E  6E11               	movwf	??___fttol& (0+255),c
  7048  00E820  C00D  F012         	movff	___fttol@f1,??___fttol+1
  7049  00E824  C00E  F013         	movff	___fttol@f1+1,??___fttol+2
  7050  00E828  C00F  F014         	movff	___fttol@f1+2,??___fttol+3
  7051  00E82C  2811               	incf	??___fttol,w,c
  7052  00E82E  6E15               	movwf	(??___fttol+4)& (0+255),c
  7053  00E830  D004               	goto	u3730
  7054  00E832                     u3735:
  7055  00E832  90D8               	bcf	status,0,c
  7056  00E834  3214               	rrcf	??___fttol+3,f,c
  7057  00E836  3213               	rrcf	??___fttol+2,f,c
  7058  00E838  3212               	rrcf	??___fttol+1,f,c
  7059  00E83A                     u3730:
  7060  00E83A  2E15               	decfsz	(??___fttol+4)& (0+255),f,c
  7061  00E83C  D7FA               	goto	u3735
  7062  00E83E  5012               	movf	??___fttol+1,w,c
  7063  00E840  6E16               	movwf	___fttol@sign1,c
  7064  00E842  8E0E               	bsf	___fttol@f1+1,7,c
  7065  00E844  0EFF               	movlw	255
  7066  00E846  160D               	andwf	___fttol@f1,f,c
  7067  00E848  0EFF               	movlw	255
  7068  00E84A  160E               	andwf	___fttol@f1+1,f,c
  7069  00E84C  0E00               	movlw	0
  7070  00E84E  160F               	andwf	___fttol@f1+2,f,c
  7071  00E850  500D               	movf	___fttol@f1,w,c
  7072  00E852  6E17               	movwf	___fttol@lval,c
  7073  00E854  500E               	movf	___fttol@f1+1,w,c
  7074  00E856  6E18               	movwf	___fttol@lval+1,c
  7075  00E858  500F               	movf	___fttol@f1+2,w,c
  7076  00E85A  6E19               	movwf	___fttol@lval+2,c
  7077  00E85C  6A1A               	clrf	___fttol@lval+3,c
  7078  00E85E  0E8E               	movlw	142
  7079  00E860  5E1B               	subwf	___fttol@exp1,f,c
  7080  00E862  AE1B               	btfss	___fttol@exp1,7,c
  7081  00E864  D016               	goto	l996
  7082  00E866  501B               	movf	___fttol@exp1,w,c
  7083  00E868  0A80               	xorlw	128
  7084  00E86A  0F8F               	addlw	143
  7085  00E86C  B0D8               	btfsc	status,0,c
  7086  00E86E  D009               	goto	l997
  7087  00E870  0E00               	movlw	0
  7088  00E872  6E0D               	movwf	?___fttol,c
  7089  00E874  0E00               	movlw	0
  7090  00E876  6E0E               	movwf	?___fttol+1,c
  7091  00E878  0E00               	movlw	0
  7092  00E87A  6E0F               	movwf	?___fttol+2,c
  7093  00E87C  0E00               	movlw	0
  7094  00E87E  6E10               	movwf	?___fttol+3,c
  7095  00E880  0012               	return	
  7096  00E882                     l997:
  7097  00E882  90D8               	bcf	status,0,c
  7098  00E884  321A               	rrcf	___fttol@lval+3,f,c
  7099  00E886  3219               	rrcf	___fttol@lval+2,f,c
  7100  00E888  3218               	rrcf	___fttol@lval+1,f,c
  7101  00E88A  3217               	rrcf	___fttol@lval,f,c
  7102  00E88C  3E1B               	incfsz	___fttol@exp1,f,c
  7103  00E88E  D7F9               	goto	l997
  7104  00E890  D015               	goto	u3770
  7105  00E892                     l996:
  7106  00E892  0E17               	movlw	23
  7107  00E894  641B               	cpfsgt	___fttol@exp1,c
  7108  00E896  D00F               	goto	l1002
  7109  00E898  0E00               	movlw	0
  7110  00E89A  6E0D               	movwf	?___fttol,c
  7111  00E89C  0E00               	movlw	0
  7112  00E89E  6E0E               	movwf	?___fttol+1,c
  7113  00E8A0  0E00               	movlw	0
  7114  00E8A2  6E0F               	movwf	?___fttol+2,c
  7115  00E8A4  0E00               	movlw	0
  7116  00E8A6  6E10               	movwf	?___fttol+3,c
  7117  00E8A8  0012               	return	
  7118  00E8AA  90D8               	bcf	status,0,c
  7119  00E8AC  3617               	rlcf	___fttol@lval,f,c
  7120  00E8AE  3618               	rlcf	___fttol@lval+1,f,c
  7121  00E8B0  3619               	rlcf	___fttol@lval+2,f,c
  7122  00E8B2  361A               	rlcf	___fttol@lval+3,f,c
  7123  00E8B4  061B               	decf	___fttol@exp1,f,c
  7124  00E8B6                     l1002:
  7125  00E8B6  501B               	movf	___fttol@exp1,w,c
  7126  00E8B8  A4D8               	btfss	status,2,c
  7127  00E8BA  D7F7               	goto	l1003
  7128  00E8BC                     u3770:
  7129  00E8BC  5016               	movf	___fttol@sign1,w,c
  7130  00E8BE  B4D8               	btfsc	status,2,c
  7131  00E8C0  D008               	goto	l1005
  7132  00E8C2  1E1A               	comf	___fttol@lval+3,f,c
  7133  00E8C4  1E19               	comf	___fttol@lval+2,f,c
  7134  00E8C6  1E18               	comf	___fttol@lval+1,f,c
  7135  00E8C8  6C17               	negf	___fttol@lval,c
  7136  00E8CA  0E00               	movlw	0
  7137  00E8CC  2218               	addwfc	___fttol@lval+1,f,c
  7138  00E8CE  2219               	addwfc	___fttol@lval+2,f,c
  7139  00E8D0  221A               	addwfc	___fttol@lval+3,f,c
  7140  00E8D2                     l1005:
  7141  00E8D2  C017  F00D         	movff	___fttol@lval,?___fttol
  7142  00E8D6  C018  F00E         	movff	___fttol@lval+1,?___fttol+1
  7143  00E8DA  C019  F00F         	movff	___fttol@lval+2,?___fttol+2
  7144  00E8DE  C01A  F010         	movff	___fttol@lval+3,?___fttol+3
  7145  00E8E2  0012               	return	
  7146  00E8E4                     __end_of___fttol:
  7147                           	opt stack 0
  7148                           tblptru	equ	0xFF8
  7149                           tblptrh	equ	0xFF7
  7150                           tblptrl	equ	0xFF6
  7151                           tablat	equ	0xFF5
  7152                           prodh	equ	0xFF4
  7153                           prodl	equ	0xFF3
  7154                           intcon	equ	0xFF2
  7155                           postinc0	equ	0xFEE
  7156                           wreg	equ	0xFE8
  7157                           postinc1	equ	0xFE6
  7158                           postdec1	equ	0xFE5
  7159                           fsr1h	equ	0xFE2
  7160                           fsr1l	equ	0xFE1
  7161                           indf2	equ	0xFDF
  7162                           postinc2	equ	0xFDE
  7163                           postdec2	equ	0xFDD
  7164                           fsr2h	equ	0xFDA
  7165                           fsr2l	equ	0xFD9
  7166                           status	equ	0xFD8
  7167                           
  7168 ;; *************** function ___ftge *****************
  7169 ;; Defined at:
  7170 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftge.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  ff1             3    0[COMRAM] float 
  7173 ;;  ff2             3    3[COMRAM] float 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;		None               void
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7185 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7189 ;;Total ram usage:        9 bytes
  7190 ;; Hardware stack levels used:    1
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_pow
  7195 ;;		_exp
  7196 ;;		_floor
  7197 ;; This function uses a non-reentrant model
  7198 ;;
  7199                           
  7200                           	psect	text33
  7201  00DD10                     __ptext33:
  7202                           	opt stack 0
  7203  00DD10                     ___ftge:
  7204                           	opt stack 20
  7205                           
  7206                           ;incstack = 0
  7207  00DD10  AE03               	btfss	___ftge@ff1+2,7,c
  7208  00DD12  D016               	goto	l966
  7209  00DD14  C001  F007         	movff	___ftge@ff1,??___ftge
  7210  00DD18  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  7211  00DD1C  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  7212  00DD20  1E07               	comf	??___ftge,f,c
  7213  00DD22  1E08               	comf	??___ftge+1,f,c
  7214  00DD24  1E09               	comf	??___ftge+2,f,c
  7215  00DD26  2A07               	incf	??___ftge,f,c
  7216  00DD28  0E00               	movlw	0
  7217  00DD2A  2208               	addwfc	??___ftge+1,f,c
  7218  00DD2C  2209               	addwfc	??___ftge+2,f,c
  7219  00DD2E  0E00               	movlw	0
  7220  00DD30  2407               	addwf	??___ftge,w,c
  7221  00DD32  6E01               	movwf	___ftge@ff1,c
  7222  00DD34  0E00               	movlw	0
  7223  00DD36  2008               	addwfc	??___ftge+1,w,c
  7224  00DD38  6E02               	movwf	___ftge@ff1+1,c
  7225  00DD3A  0E80               	movlw	128
  7226  00DD3C  2009               	addwfc	??___ftge+2,w,c
  7227  00DD3E  6E03               	movwf	___ftge@ff1+2,c
  7228  00DD40                     l966:
  7229  00DD40  AE06               	btfss	___ftge@ff2+2,7,c
  7230  00DD42  D016               	goto	l967
  7231  00DD44  C004  F007         	movff	___ftge@ff2,??___ftge
  7232  00DD48  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  7233  00DD4C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  7234  00DD50  1E07               	comf	??___ftge,f,c
  7235  00DD52  1E08               	comf	??___ftge+1,f,c
  7236  00DD54  1E09               	comf	??___ftge+2,f,c
  7237  00DD56  2A07               	incf	??___ftge,f,c
  7238  00DD58  0E00               	movlw	0
  7239  00DD5A  2208               	addwfc	??___ftge+1,f,c
  7240  00DD5C  2209               	addwfc	??___ftge+2,f,c
  7241  00DD5E  0E00               	movlw	0
  7242  00DD60  2407               	addwf	??___ftge,w,c
  7243  00DD62  6E04               	movwf	___ftge@ff2,c
  7244  00DD64  0E00               	movlw	0
  7245  00DD66  2008               	addwfc	??___ftge+1,w,c
  7246  00DD68  6E05               	movwf	___ftge@ff2+1,c
  7247  00DD6A  0E80               	movlw	128
  7248  00DD6C  2009               	addwfc	??___ftge+2,w,c
  7249  00DD6E  6E06               	movwf	___ftge@ff2+2,c
  7250  00DD70                     l967:
  7251  00DD70  0E00               	movlw	0
  7252  00DD72  1A01               	xorwf	___ftge@ff1,f,c
  7253  00DD74  0E00               	movlw	0
  7254  00DD76  1A02               	xorwf	___ftge@ff1+1,f,c
  7255  00DD78  0E80               	movlw	128
  7256  00DD7A  1A03               	xorwf	___ftge@ff1+2,f,c
  7257  00DD7C  0E00               	movlw	0
  7258  00DD7E  1A04               	xorwf	___ftge@ff2,f,c
  7259  00DD80  0E00               	movlw	0
  7260  00DD82  1A05               	xorwf	___ftge@ff2+1,f,c
  7261  00DD84  0E80               	movlw	128
  7262  00DD86  1A06               	xorwf	___ftge@ff2+2,f,c
  7263  00DD88  5004               	movf	___ftge@ff2,w,c
  7264  00DD8A  5C01               	subwf	___ftge@ff1,w,c
  7265  00DD8C  5005               	movf	___ftge@ff2+1,w,c
  7266  00DD8E  5802               	subwfb	___ftge@ff1+1,w,c
  7267  00DD90  5006               	movf	___ftge@ff2+2,w,c
  7268  00DD92  5803               	subwfb	___ftge@ff1+2,w,c
  7269  00DD94  B0D8               	btfsc	status,0,c
  7270  00DD96  D002               	goto	l3371
  7271  00DD98  90D8               	bcf	status,0,c
  7272  00DD9A  0012               	return	
  7273  00DD9C                     l3371:
  7274  00DD9C  80D8               	bsf	status,0,c
  7275  00DD9E  0012               	return	
  7276  00DDA0                     __end_of___ftge:
  7277                           	opt stack 0
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           intcon	equ	0xFF2
  7285                           postinc0	equ	0xFEE
  7286                           wreg	equ	0xFE8
  7287                           postinc1	equ	0xFE6
  7288                           postdec1	equ	0xFE5
  7289                           fsr1h	equ	0xFE2
  7290                           fsr1l	equ	0xFE1
  7291                           indf2	equ	0xFDF
  7292                           postinc2	equ	0xFDE
  7293                           postdec2	equ	0xFDD
  7294                           fsr2h	equ	0xFDA
  7295                           fsr2l	equ	0xFD9
  7296                           status	equ	0xFD8
  7297                           
  7298 ;; *************** function ___altoft *****************
  7299 ;; Defined at:
  7300 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\altoft.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  c               4   27[COMRAM] long 
  7303 ;; Auto vars:     Size  Location     Type
  7304 ;;  sign            1   36[COMRAM] unsigned char 
  7305 ;;  exp             1   35[COMRAM] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  3   27[COMRAM] float 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7316 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7317 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7318 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7319 ;;Total ram usage:       10 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    1
  7322 ;; This function calls:
  7323 ;;		___ftpack
  7324 ;; This function is called by:
  7325 ;;		_floor
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text34
  7330  00D862                     __ptext34:
  7331                           	opt stack 0
  7332  00D862                     ___altoft:
  7333                           	opt stack 19
  7334                           
  7335                           ;incstack = 0
  7336  00D862  0E00               	movlw	0
  7337  00D864  6E25               	movwf	___altoft@sign,c
  7338  00D866  0E8E               	movlw	142
  7339  00D868  6E24               	movwf	___altoft@exp,c
  7340  00D86A  AE1F               	btfss	___altoft@c+3,7,c
  7341  00D86C  D011               	goto	l743
  7342  00D86E  1E1F               	comf	___altoft@c+3,f,c
  7343  00D870  1E1E               	comf	___altoft@c+2,f,c
  7344  00D872  1E1D               	comf	___altoft@c+1,f,c
  7345  00D874  6C1C               	negf	___altoft@c,c
  7346  00D876  0E00               	movlw	0
  7347  00D878  221D               	addwfc	___altoft@c+1,f,c
  7348  00D87A  221E               	addwfc	___altoft@c+2,f,c
  7349  00D87C  221F               	addwfc	___altoft@c+3,f,c
  7350  00D87E  0E01               	movlw	1
  7351  00D880  6E25               	movwf	___altoft@sign,c
  7352  00D882  D006               	goto	l743
  7353  00D884  90D8               	bcf	status,0,c
  7354  00D886  321F               	rrcf	___altoft@c+3,f,c
  7355  00D888  321E               	rrcf	___altoft@c+2,f,c
  7356  00D88A  321D               	rrcf	___altoft@c+1,f,c
  7357  00D88C  321C               	rrcf	___altoft@c,f,c
  7358  00D88E  2A24               	incf	___altoft@exp,f,c
  7359  00D890                     l743:
  7360  00D890  0E00               	movlw	0
  7361  00D892  141C               	andwf	___altoft@c,w,c
  7362  00D894  6E20               	movwf	??___altoft& (0+255),c
  7363  00D896  0E00               	movlw	0
  7364  00D898  141D               	andwf	___altoft@c+1,w,c
  7365  00D89A  6E21               	movwf	(??___altoft+1)& (0+255),c
  7366  00D89C  0E00               	movlw	0
  7367  00D89E  141E               	andwf	___altoft@c+2,w,c
  7368  00D8A0  6E22               	movwf	(??___altoft+2)& (0+255),c
  7369  00D8A2  0EFF               	movlw	255
  7370  00D8A4  141F               	andwf	___altoft@c+3,w,c
  7371  00D8A6  6E23               	movwf	(??___altoft+3)& (0+255),c
  7372  00D8A8  5020               	movf	??___altoft,w,c
  7373  00D8AA  1021               	iorwf	??___altoft+1,w,c
  7374  00D8AC  1022               	iorwf	??___altoft+2,w,c
  7375  00D8AE  1023               	iorwf	??___altoft+3,w,c
  7376  00D8B0  A4D8               	btfss	status,2,c
  7377  00D8B2  D7E8               	goto	l744
  7378  00D8B4  C01C  F001         	movff	___altoft@c,___ftpack@arg
  7379  00D8B8  C01D  F002         	movff	___altoft@c+1,___ftpack@arg+1
  7380  00D8BC  C01E  F003         	movff	___altoft@c+2,___ftpack@arg+2
  7381  00D8C0  C024  F004         	movff	___altoft@exp,___ftpack@exp
  7382  00D8C4  C025  F005         	movff	___altoft@sign,___ftpack@sign
  7383  00D8C8  ECA1  F070         	call	___ftpack	;wreg free
  7384  00D8CC  C001  F01C         	movff	?___ftpack,?___altoft
  7385  00D8D0  C002  F01D         	movff	?___ftpack+1,?___altoft+1
  7386  00D8D4  C003  F01E         	movff	?___ftpack+2,?___altoft+2
  7387  00D8D8  0012               	return	
  7388  00D8DA                     __end_of___altoft:
  7389                           	opt stack 0
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           prodh	equ	0xFF4
  7395                           prodl	equ	0xFF3
  7396                           intcon	equ	0xFF2
  7397                           postinc0	equ	0xFEE
  7398                           wreg	equ	0xFE8
  7399                           postinc1	equ	0xFE6
  7400                           postdec1	equ	0xFE5
  7401                           fsr1h	equ	0xFE2
  7402                           fsr1l	equ	0xFE1
  7403                           indf2	equ	0xFDF
  7404                           postinc2	equ	0xFDE
  7405                           postdec2	equ	0xFDD
  7406                           fsr2h	equ	0xFDA
  7407                           fsr2l	equ	0xFD9
  7408                           status	equ	0xFD8
  7409                           
  7410 ;; *************** function _eval_poly *****************
  7411 ;; Defined at:
  7412 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\evalpoly.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  x               3   45[COMRAM] float 
  7415 ;;  d               2   48[COMRAM] PTR const 
  7416 ;;		 -> log@coeff(27), exp@coeff(30), 
  7417 ;;  n               2   50[COMRAM] int 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;  res             3   54[COMRAM] int 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  3   45[COMRAM] int 
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7429 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7430 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7433 ;;Total ram usage:       12 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:    2
  7436 ;; This function calls:
  7437 ;;		___ftadd
  7438 ;;		___ftmul
  7439 ;;		___wmul
  7440 ;; This function is called by:
  7441 ;;		_exp
  7442 ;;		_log
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text35
  7447  00E2B6                     __ptext35:
  7448                           	opt stack 0
  7449  00E2B6                     _eval_poly:
  7450                           	opt stack 19
  7451                           
  7452                           ;incstack = 0
  7453  00E2B6  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7454  00E2BA  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7455  00E2BE  0E00               	movlw	0
  7456  00E2C0  6E1F               	movwf	___wmul@multiplicand+1,c
  7457  00E2C2  0E03               	movlw	3
  7458  00E2C4  6E1E               	movwf	___wmul@multiplicand,c
  7459  00E2C6  EC79  F069         	call	___wmul	;wreg free
  7460  00E2CA  C031  F035         	movff	eval_poly@d,??_eval_poly
  7461  00E2CE  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7462  00E2D2  501C               	movf	?___wmul,w,c
  7463  00E2D4  2635               	addwf	??_eval_poly,f,c
  7464  00E2D6  501D               	movf	?___wmul+1,w,c
  7465  00E2D8  2236               	addwfc	??_eval_poly+1,f,c
  7466  00E2DA  C035  FFF6         	movff	??_eval_poly,tblptrl
  7467  00E2DE  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7468  00E2E2                     	if	0	;tblptru may be non-zero
  7469  00E2E2                     	endif
  7470  00E2E2                     	if	0	;tblptru may be non-zero
  7471  00E2E2                     	endif
  7472  00E2E2  0009               	tblrd		*+
  7473  00E2E4  CFF5 F037          	movff	tablat,eval_poly@res
  7474  00E2E8  0009               	tblrd		*+
  7475  00E2EA  CFF5 F038          	movff	tablat,eval_poly@res+1
  7476  00E2EE  000A               	tblrd		*-
  7477  00E2F0  CFF5 F039          	movff	tablat,eval_poly@res+2
  7478  00E2F4  D03E               	goto	l1328
  7479  00E2F6  C037  F010         	movff	eval_poly@res,___ftmul@f2
  7480  00E2FA  C038  F011         	movff	eval_poly@res+1,___ftmul@f2+1
  7481  00E2FE  C039  F012         	movff	eval_poly@res+2,___ftmul@f2+2
  7482  00E302  C02E  F00D         	movff	eval_poly@x,___ftmul@f1
  7483  00E306  C02F  F00E         	movff	eval_poly@x+1,___ftmul@f1+1
  7484  00E30A  C030  F00F         	movff	eval_poly@x+2,___ftmul@f1+2
  7485  00E30E  EC7E  F073         	call	___ftmul	;wreg free
  7486  00E312  C00D  F022         	movff	?___ftmul,___ftadd@f1
  7487  00E316  C00E  F023         	movff	?___ftmul+1,___ftadd@f1+1
  7488  00E31A  C00F  F024         	movff	?___ftmul+2,___ftadd@f1+2
  7489  00E31E  0E00               	movlw	0
  7490  00E320  6E1F               	movwf	___wmul@multiplicand+1,c
  7491  00E322  0E03               	movlw	3
  7492  00E324  6E1E               	movwf	___wmul@multiplicand,c
  7493  00E326  0633               	decf	eval_poly@n,f,c
  7494  00E328  A0D8               	btfss	status,0,c
  7495  00E32A  0634               	decf	eval_poly@n+1,f,c
  7496  00E32C  C033  F01C         	movff	eval_poly@n,___wmul@multiplier
  7497  00E330  C034  F01D         	movff	eval_poly@n+1,___wmul@multiplier+1
  7498  00E334  EC79  F069         	call	___wmul	;wreg free
  7499  00E338  C031  F035         	movff	eval_poly@d,??_eval_poly
  7500  00E33C  C032  F036         	movff	eval_poly@d+1,??_eval_poly+1
  7501  00E340  501C               	movf	?___wmul,w,c
  7502  00E342  2635               	addwf	??_eval_poly,f,c
  7503  00E344  501D               	movf	?___wmul+1,w,c
  7504  00E346  2236               	addwfc	??_eval_poly+1,f,c
  7505  00E348  C035  FFF6         	movff	??_eval_poly,tblptrl
  7506  00E34C  C036  FFF7         	movff	??_eval_poly+1,tblptrh
  7507  00E350                     	if	0	;tblptru may be non-zero
  7508  00E350                     	endif
  7509  00E350                     	if	0	;tblptru may be non-zero
  7510  00E350                     	endif
  7511  00E350  0009               	tblrd		*+
  7512  00E352  CFF5 F025          	movff	tablat,___ftadd@f2
  7513  00E356  0009               	tblrd		*+
  7514  00E358  CFF5 F026          	movff	tablat,___ftadd@f2+1
  7515  00E35C  000A               	tblrd		*-
  7516  00E35E  CFF5 F027          	movff	tablat,___ftadd@f2+2
  7517  00E362  EC46  F078         	call	___ftadd	;wreg free
  7518  00E366  C022  F037         	movff	?___ftadd,eval_poly@res
  7519  00E36A  C023  F038         	movff	?___ftadd+1,eval_poly@res+1
  7520  00E36E  C024  F039         	movff	?___ftadd+2,eval_poly@res+2
  7521  00E372                     l1328:
  7522  00E372  5033               	movf	eval_poly@n,w,c
  7523  00E374  1034               	iorwf	eval_poly@n+1,w,c
  7524  00E376  A4D8               	btfss	status,2,c
  7525  00E378  D7BE               	goto	l1329
  7526  00E37A  C037  F02E         	movff	eval_poly@res,?_eval_poly
  7527  00E37E  C038  F02F         	movff	eval_poly@res+1,?_eval_poly+1
  7528  00E382  C039  F030         	movff	eval_poly@res+2,?_eval_poly+2
  7529  00E386  0012               	return		;funcret
  7530  00E388                     __end_of_eval_poly:
  7531                           	opt stack 0
  7532                           tblptru	equ	0xFF8
  7533                           tblptrh	equ	0xFF7
  7534                           tblptrl	equ	0xFF6
  7535                           tablat	equ	0xFF5
  7536                           prodh	equ	0xFF4
  7537                           prodl	equ	0xFF3
  7538                           intcon	equ	0xFF2
  7539                           postinc0	equ	0xFEE
  7540                           wreg	equ	0xFE8
  7541                           postinc1	equ	0xFE6
  7542                           postdec1	equ	0xFE5
  7543                           fsr1h	equ	0xFE2
  7544                           fsr1l	equ	0xFE1
  7545                           indf2	equ	0xFDF
  7546                           postinc2	equ	0xFDE
  7547                           postdec2	equ	0xFDD
  7548                           fsr2h	equ	0xFDA
  7549                           fsr2l	equ	0xFD9
  7550                           status	equ	0xFD8
  7551                           
  7552 ;; *************** function ___ftmul *****************
  7553 ;; Defined at:
  7554 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftmul.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  f1              3   12[COMRAM] float 
  7557 ;;  f2              3   15[COMRAM] float 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  7560 ;;  sign            1   26[COMRAM] unsigned char 
  7561 ;;  cntr            1   25[COMRAM] unsigned char 
  7562 ;;  exp             1   21[COMRAM] unsigned char 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  3   12[COMRAM] float 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7572 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7573 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;Total ram usage:       15 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    1
  7579 ;; This function calls:
  7580 ;;		___ftpack
  7581 ;; This function is called by:
  7582 ;;		_pow
  7583 ;;		_exp
  7584 ;;		_log
  7585 ;;		_eval_poly
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text36
  7590  00E6FC                     __ptext36:
  7591                           	opt stack 0
  7592  00E6FC                     ___ftmul:
  7593                           	opt stack 19
  7594                           
  7595                           ;incstack = 0
  7596  00E6FC  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  7597  00E700  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7598  00E702  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7599  00E704  340E               	rlcf	___ftmul@f1+1,w,c
  7600  00E706  3613               	rlcf	??___ftmul& (0+255),f,c
  7601  00E708  E301               	bnc	u3621
  7602  00E70A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7603  00E70C                     u3621:
  7604  00E70C  5013               	movf	??___ftmul,w,c
  7605  00E70E  6E16               	movwf	___ftmul@exp,c
  7606  00E710  5016               	movf	___ftmul@exp,w,c
  7607  00E712  A4D8               	btfss	status,2,c
  7608  00E714  D007               	goto	l973
  7609  00E716  0E00               	movlw	0
  7610  00E718  6E0D               	movwf	?___ftmul,c
  7611  00E71A  0E00               	movlw	0
  7612  00E71C  6E0E               	movwf	?___ftmul+1,c
  7613  00E71E  0E00               	movlw	0
  7614  00E720  6E0F               	movwf	?___ftmul+2,c
  7615  00E722  0012               	return	
  7616  00E724                     l973:
  7617  00E724  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  7618  00E728  6A14               	clrf	(??___ftmul+1)& (0+255),c
  7619  00E72A  6A15               	clrf	(??___ftmul+2)& (0+255),c
  7620  00E72C  3411               	rlcf	___ftmul@f2+1,w,c
  7621  00E72E  3613               	rlcf	??___ftmul& (0+255),f,c
  7622  00E730  E301               	bnc	u3641
  7623  00E732  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  7624  00E734                     u3641:
  7625  00E734  5013               	movf	??___ftmul,w,c
  7626  00E736  6E1B               	movwf	___ftmul@sign,c
  7627  00E738  501B               	movf	___ftmul@sign,w,c
  7628  00E73A  A4D8               	btfss	status,2,c
  7629  00E73C  D007               	goto	l975
  7630  00E73E  0E00               	movlw	0
  7631  00E740  6E0D               	movwf	?___ftmul,c
  7632  00E742  0E00               	movlw	0
  7633  00E744  6E0E               	movwf	?___ftmul+1,c
  7634  00E746  0E00               	movlw	0
  7635  00E748  6E0F               	movwf	?___ftmul+2,c
  7636  00E74A  0012               	return	
  7637  00E74C                     l975:
  7638  00E74C  501B               	movf	___ftmul@sign,w,c
  7639  00E74E  0F7B               	addlw	123
  7640  00E750  2616               	addwf	___ftmul@exp,f,c
  7641  00E752  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  7642  00E756  5012               	movf	___ftmul@f2+2,w,c
  7643  00E758  1A1B               	xorwf	___ftmul@sign,f,c
  7644  00E75A  0E80               	movlw	128
  7645  00E75C  161B               	andwf	___ftmul@sign,f,c
  7646  00E75E  8E0E               	bsf	___ftmul@f1+1,7,c
  7647  00E760  8E11               	bsf	___ftmul@f2+1,7,c
  7648  00E762  0EFF               	movlw	255
  7649  00E764  1610               	andwf	___ftmul@f2,f,c
  7650  00E766  0EFF               	movlw	255
  7651  00E768  1611               	andwf	___ftmul@f2+1,f,c
  7652  00E76A  0E00               	movlw	0
  7653  00E76C  1612               	andwf	___ftmul@f2+2,f,c
  7654  00E76E  0E00               	movlw	0
  7655  00E770  6E17               	movwf	___ftmul@f3_as_product,c
  7656  00E772  0E00               	movlw	0
  7657  00E774  6E18               	movwf	___ftmul@f3_as_product+1,c
  7658  00E776  0E00               	movlw	0
  7659  00E778  6E19               	movwf	___ftmul@f3_as_product+2,c
  7660  00E77A  0E07               	movlw	7
  7661  00E77C  6E1A               	movwf	___ftmul@cntr,c
  7662  00E77E  A00D               	btfss	___ftmul@f1,0,c
  7663  00E780  D006               	goto	l977
  7664  00E782  5010               	movf	___ftmul@f2,w,c
  7665  00E784  2617               	addwf	___ftmul@f3_as_product,f,c
  7666  00E786  5011               	movf	___ftmul@f2+1,w,c
  7667  00E788  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7668  00E78A  5012               	movf	___ftmul@f2+2,w,c
  7669  00E78C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7670  00E78E                     l977:
  7671  00E78E  90D8               	bcf	status,0,c
  7672  00E790  320F               	rrcf	___ftmul@f1+2,f,c
  7673  00E792  320E               	rrcf	___ftmul@f1+1,f,c
  7674  00E794  320D               	rrcf	___ftmul@f1,f,c
  7675  00E796  90D8               	bcf	status,0,c
  7676  00E798  3610               	rlcf	___ftmul@f2,f,c
  7677  00E79A  3611               	rlcf	___ftmul@f2+1,f,c
  7678  00E79C  3612               	rlcf	___ftmul@f2+2,f,c
  7679  00E79E  2E1A               	decfsz	___ftmul@cntr,f,c
  7680  00E7A0  D7EE               	goto	l976
  7681  00E7A2  0E09               	movlw	9
  7682  00E7A4  6E1A               	movwf	___ftmul@cntr,c
  7683  00E7A6  A00D               	btfss	___ftmul@f1,0,c
  7684  00E7A8  D006               	goto	l980
  7685  00E7AA  5010               	movf	___ftmul@f2,w,c
  7686  00E7AC  2617               	addwf	___ftmul@f3_as_product,f,c
  7687  00E7AE  5011               	movf	___ftmul@f2+1,w,c
  7688  00E7B0  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  7689  00E7B2  5012               	movf	___ftmul@f2+2,w,c
  7690  00E7B4  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  7691  00E7B6                     l980:
  7692  00E7B6  90D8               	bcf	status,0,c
  7693  00E7B8  320F               	rrcf	___ftmul@f1+2,f,c
  7694  00E7BA  320E               	rrcf	___ftmul@f1+1,f,c
  7695  00E7BC  320D               	rrcf	___ftmul@f1,f,c
  7696  00E7BE  90D8               	bcf	status,0,c
  7697  00E7C0  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  7698  00E7C2  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  7699  00E7C4  3217               	rrcf	___ftmul@f3_as_product,f,c
  7700  00E7C6  2E1A               	decfsz	___ftmul@cntr,f,c
  7701  00E7C8  D7EE               	goto	l979
  7702  00E7CA  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  7703  00E7CE  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  7704  00E7D2  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  7705  00E7D6  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  7706  00E7DA  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  7707  00E7DE  ECA1  F070         	call	___ftpack	;wreg free
  7708  00E7E2  C001  F00D         	movff	?___ftpack,?___ftmul
  7709  00E7E6  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  7710  00E7EA  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  7711  00E7EE  0012               	return	
  7712  00E7F0                     __end_of___ftmul:
  7713                           	opt stack 0
  7714                           tblptru	equ	0xFF8
  7715                           tblptrh	equ	0xFF7
  7716                           tblptrl	equ	0xFF6
  7717                           tablat	equ	0xFF5
  7718                           prodh	equ	0xFF4
  7719                           prodl	equ	0xFF3
  7720                           intcon	equ	0xFF2
  7721                           postinc0	equ	0xFEE
  7722                           wreg	equ	0xFE8
  7723                           postinc1	equ	0xFE6
  7724                           postdec1	equ	0xFE5
  7725                           fsr1h	equ	0xFE2
  7726                           fsr1l	equ	0xFE1
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           postdec2	equ	0xFDD
  7730                           fsr2h	equ	0xFDA
  7731                           fsr2l	equ	0xFD9
  7732                           status	equ	0xFD8
  7733                           
  7734 ;; *************** function ___ftsub *****************
  7735 ;; Defined at:
  7736 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftsub.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  f1              3   45[COMRAM] float 
  7739 ;;  f2              3   48[COMRAM] float 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  3   45[COMRAM] float 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7751 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;Total ram usage:        6 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    2
  7758 ;; This function calls:
  7759 ;;		___ftadd
  7760 ;; This function is called by:
  7761 ;;		_exp
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text37
  7766  00D382                     __ptext37:
  7767                           	opt stack 0
  7768  00D382                     ___ftsub:
  7769                           	opt stack 19
  7770                           
  7771                           ;incstack = 0
  7772  00D382  5031               	movf	___ftsub@f2,w,c
  7773  00D384  1032               	iorwf	___ftsub@f2+1,w,c
  7774  00D386  1033               	iorwf	___ftsub@f2+2,w,c
  7775  00D388  B4D8               	btfsc	status,2,c
  7776  00D38A  D006               	goto	l990
  7777  00D38C  0E00               	movlw	0
  7778  00D38E  1A31               	xorwf	___ftsub@f2,f,c
  7779  00D390  0E00               	movlw	0
  7780  00D392  1A32               	xorwf	___ftsub@f2+1,f,c
  7781  00D394  0E80               	movlw	128
  7782  00D396  1A33               	xorwf	___ftsub@f2+2,f,c
  7783  00D398                     l990:
  7784  00D398  C02E  F022         	movff	___ftsub@f1,___ftadd@f1
  7785  00D39C  C02F  F023         	movff	___ftsub@f1+1,___ftadd@f1+1
  7786  00D3A0  C030  F024         	movff	___ftsub@f1+2,___ftadd@f1+2
  7787  00D3A4  C031  F025         	movff	___ftsub@f2,___ftadd@f2
  7788  00D3A8  C032  F026         	movff	___ftsub@f2+1,___ftadd@f2+1
  7789  00D3AC  C033  F027         	movff	___ftsub@f2+2,___ftadd@f2+2
  7790  00D3B0  EC46  F078         	call	___ftadd	;wreg free
  7791  00D3B4  C022  F02E         	movff	?___ftadd,?___ftsub
  7792  00D3B8  C023  F02F         	movff	?___ftadd+1,?___ftsub+1
  7793  00D3BC  C024  F030         	movff	?___ftadd+2,?___ftsub+2
  7794  00D3C0  0012               	return	
  7795  00D3C2                     __end_of___ftsub:
  7796                           	opt stack 0
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           prodh	equ	0xFF4
  7802                           prodl	equ	0xFF3
  7803                           intcon	equ	0xFF2
  7804                           postinc0	equ	0xFEE
  7805                           wreg	equ	0xFE8
  7806                           postinc1	equ	0xFE6
  7807                           postdec1	equ	0xFE5
  7808                           fsr1h	equ	0xFE2
  7809                           fsr1l	equ	0xFE1
  7810                           indf2	equ	0xFDF
  7811                           postinc2	equ	0xFDE
  7812                           postdec2	equ	0xFDD
  7813                           fsr2h	equ	0xFDA
  7814                           fsr2l	equ	0xFD9
  7815                           status	equ	0xFD8
  7816                           
  7817 ;; *************** function ___ftadd *****************
  7818 ;; Defined at:
  7819 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftadd.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  f1              3   33[COMRAM] float 
  7822 ;;  f2              3   36[COMRAM] float 
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  exp1            1   44[COMRAM] unsigned char 
  7825 ;;  exp2            1   43[COMRAM] unsigned char 
  7826 ;;  sign            1   42[COMRAM] unsigned char 
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  3   33[COMRAM] float 
  7829 ;; Registers used:
  7830 ;;		wreg, status,2, status,0, cstack
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7836 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7838 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7839 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7840 ;;Total ram usage:       12 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:    1
  7843 ;; This function calls:
  7844 ;;		___ftpack
  7845 ;; This function is called by:
  7846 ;;		___ftsub
  7847 ;;		_floor
  7848 ;;		_log
  7849 ;;		_eval_poly
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text38
  7854  00F08C                     __ptext38:
  7855                           	opt stack 0
  7856  00F08C                     ___ftadd:
  7857                           	opt stack 19
  7858                           
  7859                           ;incstack = 0
  7860  00F08C  C024  F028         	movff	___ftadd@f1+2,??___ftadd
  7861  00F090  6A29               	clrf	(??___ftadd+1)& (0+255),c
  7862  00F092  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  7863  00F094  3423               	rlcf	___ftadd@f1+1,w,c
  7864  00F096  3628               	rlcf	??___ftadd& (0+255),f,c
  7865  00F098  E301               	bnc	u3411
  7866  00F09A  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  7867  00F09C                     u3411:
  7868  00F09C  5028               	movf	??___ftadd,w,c
  7869  00F09E  6E2D               	movwf	___ftadd@exp1,c
  7870  00F0A0  C027  F028         	movff	___ftadd@f2+2,??___ftadd
  7871  00F0A4  6A29               	clrf	(??___ftadd+1)& (0+255),c
  7872  00F0A6  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  7873  00F0A8  3426               	rlcf	___ftadd@f2+1,w,c
  7874  00F0AA  3628               	rlcf	??___ftadd& (0+255),f,c
  7875  00F0AC  E301               	bnc	u3421
  7876  00F0AE  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  7877  00F0B0                     u3421:
  7878  00F0B0  5028               	movf	??___ftadd,w,c
  7879  00F0B2  6E2C               	movwf	___ftadd@exp2,c
  7880  00F0B4  502D               	movf	___ftadd@exp1,w,c
  7881  00F0B6  B4D8               	btfsc	status,2,c
  7882  00F0B8  D00B               	goto	u3450
  7883  00F0BA  502C               	movf	___ftadd@exp2,w,c
  7884  00F0BC  5C2D               	subwf	___ftadd@exp1,w,c
  7885  00F0BE  B0D8               	btfsc	status,0,c
  7886  00F0C0  D00E               	goto	l925
  7887  00F0C2  502D               	movf	___ftadd@exp1,w,c
  7888  00F0C4  0800               	sublw	0
  7889  00F0C6  242C               	addwf	___ftadd@exp2,w,c
  7890  00F0C8  6E28               	movwf	??___ftadd& (0+255),c
  7891  00F0CA  0E18               	movlw	24
  7892  00F0CC  6428               	cpfsgt	??___ftadd,c
  7893  00F0CE  D007               	goto	l925
  7894  00F0D0                     u3450:
  7895  00F0D0  C025  F022         	movff	___ftadd@f2,?___ftadd
  7896  00F0D4  C026  F023         	movff	___ftadd@f2+1,?___ftadd+1
  7897  00F0D8  C027  F024         	movff	___ftadd@f2+2,?___ftadd+2
  7898  00F0DC  0012               	return	
  7899  00F0DE                     l925:
  7900  00F0DE  502C               	movf	___ftadd@exp2,w,c
  7901  00F0E0  B4D8               	btfsc	status,2,c
  7902  00F0E2  D00B               	goto	u3480
  7903  00F0E4  502D               	movf	___ftadd@exp1,w,c
  7904  00F0E6  5C2C               	subwf	___ftadd@exp2,w,c
  7905  00F0E8  B0D8               	btfsc	status,0,c
  7906  00F0EA  D00E               	goto	l929
  7907  00F0EC  502C               	movf	___ftadd@exp2,w,c
  7908  00F0EE  0800               	sublw	0
  7909  00F0F0  242D               	addwf	___ftadd@exp1,w,c
  7910  00F0F2  6E28               	movwf	??___ftadd& (0+255),c
  7911  00F0F4  0E18               	movlw	24
  7912  00F0F6  6428               	cpfsgt	??___ftadd,c
  7913  00F0F8  D007               	goto	l929
  7914  00F0FA                     u3480:
  7915  00F0FA  C022  F022         	movff	___ftadd@f1,?___ftadd
  7916  00F0FE  C023  F023         	movff	___ftadd@f1+1,?___ftadd+1
  7917  00F102  C024  F024         	movff	___ftadd@f1+2,?___ftadd+2
  7918  00F106  0012               	return	
  7919  00F108                     l929:
  7920  00F108  0E06               	movlw	6
  7921  00F10A  6E2B               	movwf	___ftadd@sign,c
  7922  00F10C  BE24               	btfsc	___ftadd@f1+2,7,c
  7923  00F10E  8E2B               	bsf	___ftadd@sign,7,c
  7924  00F110  BE27               	btfsc	___ftadd@f2+2,7,c
  7925  00F112  8C2B               	bsf	___ftadd@sign,6,c
  7926  00F114  8E23               	bsf	___ftadd@f1+1,7,c
  7927  00F116  0EFF               	movlw	255
  7928  00F118  1622               	andwf	___ftadd@f1,f,c
  7929  00F11A  0EFF               	movlw	255
  7930  00F11C  1623               	andwf	___ftadd@f1+1,f,c
  7931  00F11E  0E00               	movlw	0
  7932  00F120  1624               	andwf	___ftadd@f1+2,f,c
  7933  00F122  8E26               	bsf	___ftadd@f2+1,7,c
  7934  00F124  0EFF               	movlw	255
  7935  00F126  1625               	andwf	___ftadd@f2,f,c
  7936  00F128  0EFF               	movlw	255
  7937  00F12A  1626               	andwf	___ftadd@f2+1,f,c
  7938  00F12C  0E00               	movlw	0
  7939  00F12E  1627               	andwf	___ftadd@f2+2,f,c
  7940  00F130  502C               	movf	___ftadd@exp2,w,c
  7941  00F132  5C2D               	subwf	___ftadd@exp1,w,c
  7942  00F134  B0D8               	btfsc	status,0,c
  7943  00F136  D01B               	goto	l934
  7944  00F138                     u3510:
  7945  00F138  90D8               	bcf	status,0,c
  7946  00F13A  3625               	rlcf	___ftadd@f2,f,c
  7947  00F13C  3626               	rlcf	___ftadd@f2+1,f,c
  7948  00F13E  3627               	rlcf	___ftadd@f2+2,f,c
  7949  00F140  062C               	decf	___ftadd@exp2,f,c
  7950  00F142  502D               	movf	___ftadd@exp1,w,c
  7951  00F144  182C               	xorwf	___ftadd@exp2,w,c
  7952  00F146  B4D8               	btfsc	status,2,c
  7953  00F148  D00D               	goto	l939
  7954  00F14A  062B               	decf	___ftadd@sign,f,c
  7955  00F14C  C02B  F028         	movff	___ftadd@sign,??___ftadd
  7956  00F150  0E07               	movlw	7
  7957  00F152  1628               	andwf	??___ftadd,f,c
  7958  00F154  B4D8               	btfsc	status,2,c
  7959  00F156  D006               	goto	l939
  7960  00F158  D7EF               	goto	u3510
  7961  00F15A  90D8               	bcf	status,0,c
  7962  00F15C  3224               	rrcf	___ftadd@f1+2,f,c
  7963  00F15E  3223               	rrcf	___ftadd@f1+1,f,c
  7964  00F160  3222               	rrcf	___ftadd@f1,f,c
  7965  00F162  2A2D               	incf	___ftadd@exp1,f,c
  7966  00F164                     l939:
  7967  00F164  502C               	movf	___ftadd@exp2,w,c
  7968  00F166  182D               	xorwf	___ftadd@exp1,w,c
  7969  00F168  B4D8               	btfsc	status,2,c
  7970  00F16A  D01F               	goto	u3580
  7971  00F16C  D7F6               	goto	l940
  7972  00F16E                     l934:
  7973  00F16E  502D               	movf	___ftadd@exp1,w,c
  7974  00F170  5C2C               	subwf	___ftadd@exp2,w,c
  7975  00F172  B0D8               	btfsc	status,0,c
  7976  00F174  D01A               	goto	u3580
  7977  00F176                     u3550:
  7978  00F176  90D8               	bcf	status,0,c
  7979  00F178  3622               	rlcf	___ftadd@f1,f,c
  7980  00F17A  3623               	rlcf	___ftadd@f1+1,f,c
  7981  00F17C  3624               	rlcf	___ftadd@f1+2,f,c
  7982  00F17E  062D               	decf	___ftadd@exp1,f,c
  7983  00F180  502D               	movf	___ftadd@exp1,w,c
  7984  00F182  182C               	xorwf	___ftadd@exp2,w,c
  7985  00F184  B4D8               	btfsc	status,2,c
  7986  00F186  D00D               	goto	l948
  7987  00F188  062B               	decf	___ftadd@sign,f,c
  7988  00F18A  C02B  F028         	movff	___ftadd@sign,??___ftadd
  7989  00F18E  0E07               	movlw	7
  7990  00F190  1628               	andwf	??___ftadd,f,c
  7991  00F192  B4D8               	btfsc	status,2,c
  7992  00F194  D006               	goto	l948
  7993  00F196  D7EF               	goto	u3550
  7994  00F198  90D8               	bcf	status,0,c
  7995  00F19A  3227               	rrcf	___ftadd@f2+2,f,c
  7996  00F19C  3226               	rrcf	___ftadd@f2+1,f,c
  7997  00F19E  3225               	rrcf	___ftadd@f2,f,c
  7998  00F1A0  2A2C               	incf	___ftadd@exp2,f,c
  7999  00F1A2                     l948:
  8000  00F1A2  502C               	movf	___ftadd@exp2,w,c
  8001  00F1A4  182D               	xorwf	___ftadd@exp1,w,c
  8002  00F1A6  A4D8               	btfss	status,2,c
  8003  00F1A8  D7F7               	goto	l949
  8004  00F1AA                     u3580:
  8005  00F1AA  AE2B               	btfss	___ftadd@sign,7,c
  8006  00F1AC  D00C               	goto	l951
  8007  00F1AE  0EFF               	movlw	255
  8008  00F1B0  1A22               	xorwf	___ftadd@f1,f,c
  8009  00F1B2  0EFF               	movlw	255
  8010  00F1B4  1A23               	xorwf	___ftadd@f1+1,f,c
  8011  00F1B6  0EFF               	movlw	255
  8012  00F1B8  1A24               	xorwf	___ftadd@f1+2,f,c
  8013  00F1BA  0E01               	movlw	1
  8014  00F1BC  2622               	addwf	___ftadd@f1,f,c
  8015  00F1BE  0E00               	movlw	0
  8016  00F1C0  2223               	addwfc	___ftadd@f1+1,f,c
  8017  00F1C2  0E00               	movlw	0
  8018  00F1C4  2224               	addwfc	___ftadd@f1+2,f,c
  8019  00F1C6                     l951:
  8020  00F1C6  AC2B               	btfss	___ftadd@sign,6,c
  8021  00F1C8  D00C               	goto	l952
  8022  00F1CA  0EFF               	movlw	255
  8023  00F1CC  1A25               	xorwf	___ftadd@f2,f,c
  8024  00F1CE  0EFF               	movlw	255
  8025  00F1D0  1A26               	xorwf	___ftadd@f2+1,f,c
  8026  00F1D2  0EFF               	movlw	255
  8027  00F1D4  1A27               	xorwf	___ftadd@f2+2,f,c
  8028  00F1D6  0E01               	movlw	1
  8029  00F1D8  2625               	addwf	___ftadd@f2,f,c
  8030  00F1DA  0E00               	movlw	0
  8031  00F1DC  2226               	addwfc	___ftadd@f2+1,f,c
  8032  00F1DE  0E00               	movlw	0
  8033  00F1E0  2227               	addwfc	___ftadd@f2+2,f,c
  8034  00F1E2                     l952:
  8035  00F1E2  0E00               	movlw	0
  8036  00F1E4  6E2B               	movwf	___ftadd@sign,c
  8037  00F1E6  5022               	movf	___ftadd@f1,w,c
  8038  00F1E8  2625               	addwf	___ftadd@f2,f,c
  8039  00F1EA  5023               	movf	___ftadd@f1+1,w,c
  8040  00F1EC  2226               	addwfc	___ftadd@f2+1,f,c
  8041  00F1EE  5024               	movf	___ftadd@f1+2,w,c
  8042  00F1F0  2227               	addwfc	___ftadd@f2+2,f,c
  8043  00F1F2  AE27               	btfss	___ftadd@f2+2,7,c
  8044  00F1F4  D00E               	goto	l953
  8045  00F1F6  0EFF               	movlw	255
  8046  00F1F8  1A25               	xorwf	___ftadd@f2,f,c
  8047  00F1FA  0EFF               	movlw	255
  8048  00F1FC  1A26               	xorwf	___ftadd@f2+1,f,c
  8049  00F1FE  0EFF               	movlw	255
  8050  00F200  1A27               	xorwf	___ftadd@f2+2,f,c
  8051  00F202  0E01               	movlw	1
  8052  00F204  2625               	addwf	___ftadd@f2,f,c
  8053  00F206  0E00               	movlw	0
  8054  00F208  2226               	addwfc	___ftadd@f2+1,f,c
  8055  00F20A  0E00               	movlw	0
  8056  00F20C  2227               	addwfc	___ftadd@f2+2,f,c
  8057  00F20E  0E01               	movlw	1
  8058  00F210  6E2B               	movwf	___ftadd@sign,c
  8059  00F212                     l953:
  8060  00F212  C025  F001         	movff	___ftadd@f2,___ftpack@arg
  8061  00F216  C026  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  8062  00F21A  C027  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  8063  00F21E  C02D  F004         	movff	___ftadd@exp1,___ftpack@exp
  8064  00F222  C02B  F005         	movff	___ftadd@sign,___ftpack@sign
  8065  00F226  ECA1  F070         	call	___ftpack	;wreg free
  8066  00F22A  C001  F022         	movff	?___ftpack,?___ftadd
  8067  00F22E  C002  F023         	movff	?___ftpack+1,?___ftadd+1
  8068  00F232  C003  F024         	movff	?___ftpack+2,?___ftadd+2
  8069  00F236  0012               	return	
  8070  00F238                     __end_of___ftadd:
  8071                           	opt stack 0
  8072                           tblptru	equ	0xFF8
  8073                           tblptrh	equ	0xFF7
  8074                           tblptrl	equ	0xFF6
  8075                           tablat	equ	0xFF5
  8076                           prodh	equ	0xFF4
  8077                           prodl	equ	0xFF3
  8078                           intcon	equ	0xFF2
  8079                           postinc0	equ	0xFEE
  8080                           wreg	equ	0xFE8
  8081                           postinc1	equ	0xFE6
  8082                           postdec1	equ	0xFE5
  8083                           fsr1h	equ	0xFE2
  8084                           fsr1l	equ	0xFE1
  8085                           indf2	equ	0xFDF
  8086                           postinc2	equ	0xFDE
  8087                           postdec2	equ	0xFDD
  8088                           fsr2h	equ	0xFDA
  8089                           fsr2l	equ	0xFD9
  8090                           status	equ	0xFD8
  8091                           
  8092 ;; *************** function ___ftneg *****************
  8093 ;; Defined at:
  8094 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftneg.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  f1              3    0[COMRAM] float 
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  3    0[COMRAM] float 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2, status,0
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8108 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8111 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8112 ;;Total ram usage:        3 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; This function calls:
  8115 ;;		Nothing
  8116 ;; This function is called by:
  8117 ;;		_pow
  8118 ;;		_exp
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text39
  8123  00D2AA                     __ptext39:
  8124                           	opt stack 0
  8125  00D2AA                     ___ftneg:
  8126                           	opt stack 21
  8127                           
  8128                           ;incstack = 0
  8129  00D2AA  5001               	movf	___ftneg@f1,w,c
  8130  00D2AC  1002               	iorwf	___ftneg@f1+1,w,c
  8131  00D2AE  1003               	iorwf	___ftneg@f1+2,w,c
  8132  00D2B0  B4D8               	btfsc	status,2,c
  8133  00D2B2  D006               	goto	l984
  8134  00D2B4  0E00               	movlw	0
  8135  00D2B6  1A01               	xorwf	___ftneg@f1,f,c
  8136  00D2B8  0E00               	movlw	0
  8137  00D2BA  1A02               	xorwf	___ftneg@f1+1,f,c
  8138  00D2BC  0E80               	movlw	128
  8139  00D2BE  1A03               	xorwf	___ftneg@f1+2,f,c
  8140  00D2C0                     l984:
  8141  00D2C0  C001  F001         	movff	___ftneg@f1,?___ftneg
  8142  00D2C4  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  8143  00D2C8  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  8144  00D2CC  0012               	return		;funcret
  8145  00D2CE                     __end_of___ftneg:
  8146                           	opt stack 0
  8147                           tblptru	equ	0xFF8
  8148                           tblptrh	equ	0xFF7
  8149                           tblptrl	equ	0xFF6
  8150                           tablat	equ	0xFF5
  8151                           prodh	equ	0xFF4
  8152                           prodl	equ	0xFF3
  8153                           intcon	equ	0xFF2
  8154                           postinc0	equ	0xFEE
  8155                           wreg	equ	0xFE8
  8156                           postinc1	equ	0xFE6
  8157                           postdec1	equ	0xFE5
  8158                           fsr1h	equ	0xFE2
  8159                           fsr1l	equ	0xFE1
  8160                           indf2	equ	0xFDF
  8161                           postinc2	equ	0xFDE
  8162                           postdec2	equ	0xFDD
  8163                           fsr2h	equ	0xFDA
  8164                           fsr2l	equ	0xFD9
  8165                           status	equ	0xFD8
  8166                           
  8167 ;; *************** function ___ftdiv *****************
  8168 ;; Defined at:
  8169 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\ftdiv.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  f1              3    8[COMRAM] float 
  8172 ;;  f2              3   11[COMRAM] float 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  f3              3   18[COMRAM] float 
  8175 ;;  sign            1   22[COMRAM] unsigned char 
  8176 ;;  exp             1   21[COMRAM] unsigned char 
  8177 ;;  cntr            1   17[COMRAM] unsigned char 
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  3    8[COMRAM] float 
  8180 ;; Registers used:
  8181 ;;		wreg, status,2, status,0, cstack
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8187 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8188 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8189 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8190 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8191 ;;Total ram usage:       15 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:    1
  8194 ;; This function calls:
  8195 ;;		___ftpack
  8196 ;; This function is called by:
  8197 ;;		_exp
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text40
  8202  00E616                     __ptext40:
  8203                           	opt stack 0
  8204  00E616                     ___ftdiv:
  8205                           	opt stack 20
  8206                           
  8207                           ;incstack = 0
  8208  00E616  C00B  F00F         	movff	___ftdiv@f1+2,??___ftdiv
  8209  00E61A  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  8210  00E61C  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  8211  00E61E  340A               	rlcf	___ftdiv@f1+1,w,c
  8212  00E620  360F               	rlcf	??___ftdiv& (0+255),f,c
  8213  00E622  E301               	bnc	u3831
  8214  00E624  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  8215  00E626                     u3831:
  8216  00E626  500F               	movf	??___ftdiv,w,c
  8217  00E628  6E16               	movwf	___ftdiv@exp,c
  8218  00E62A  5016               	movf	___ftdiv@exp,w,c
  8219  00E62C  A4D8               	btfss	status,2,c
  8220  00E62E  D007               	goto	l958
  8221  00E630  0E00               	movlw	0
  8222  00E632  6E09               	movwf	?___ftdiv,c
  8223  00E634  0E00               	movlw	0
  8224  00E636  6E0A               	movwf	?___ftdiv+1,c
  8225  00E638  0E00               	movlw	0
  8226  00E63A  6E0B               	movwf	?___ftdiv+2,c
  8227  00E63C  0012               	return	
  8228  00E63E                     l958:
  8229  00E63E  C00E  F00F         	movff	___ftdiv@f2+2,??___ftdiv
  8230  00E642  6A10               	clrf	(??___ftdiv+1)& (0+255),c
  8231  00E644  6A11               	clrf	(??___ftdiv+2)& (0+255),c
  8232  00E646  340D               	rlcf	___ftdiv@f2+1,w,c
  8233  00E648  360F               	rlcf	??___ftdiv& (0+255),f,c
  8234  00E64A  E301               	bnc	u3851
  8235  00E64C  8010               	bsf	(??___ftdiv+1)& (0+255),0,c
  8236  00E64E                     u3851:
  8237  00E64E  500F               	movf	??___ftdiv,w,c
  8238  00E650  6E17               	movwf	___ftdiv@sign,c
  8239  00E652  5017               	movf	___ftdiv@sign,w,c
  8240  00E654  A4D8               	btfss	status,2,c
  8241  00E656  D007               	goto	l960
  8242  00E658  0E00               	movlw	0
  8243  00E65A  6E09               	movwf	?___ftdiv,c
  8244  00E65C  0E00               	movlw	0
  8245  00E65E  6E0A               	movwf	?___ftdiv+1,c
  8246  00E660  0E00               	movlw	0
  8247  00E662  6E0B               	movwf	?___ftdiv+2,c
  8248  00E664  0012               	return	
  8249  00E666                     l960:
  8250  00E666  0E00               	movlw	0
  8251  00E668  6E13               	movwf	___ftdiv@f3,c
  8252  00E66A  0E00               	movlw	0
  8253  00E66C  6E14               	movwf	___ftdiv@f3+1,c
  8254  00E66E  0E00               	movlw	0
  8255  00E670  6E15               	movwf	___ftdiv@f3+2,c
  8256  00E672  5017               	movf	___ftdiv@sign,w,c
  8257  00E674  0F89               	addlw	137
  8258  00E676  5E16               	subwf	___ftdiv@exp,f,c
  8259  00E678  C00B  F017         	movff	___ftdiv@f1+2,___ftdiv@sign
  8260  00E67C  500E               	movf	___ftdiv@f2+2,w,c
  8261  00E67E  1A17               	xorwf	___ftdiv@sign,f,c
  8262  00E680  0E80               	movlw	128
  8263  00E682  1617               	andwf	___ftdiv@sign,f,c
  8264  00E684  8E0A               	bsf	___ftdiv@f1+1,7,c
  8265  00E686  0EFF               	movlw	255
  8266  00E688  1609               	andwf	___ftdiv@f1,f,c
  8267  00E68A  0EFF               	movlw	255
  8268  00E68C  160A               	andwf	___ftdiv@f1+1,f,c
  8269  00E68E  0E00               	movlw	0
  8270  00E690  160B               	andwf	___ftdiv@f1+2,f,c
  8271  00E692  8E0D               	bsf	___ftdiv@f2+1,7,c
  8272  00E694  0EFF               	movlw	255
  8273  00E696  160C               	andwf	___ftdiv@f2,f,c
  8274  00E698  0EFF               	movlw	255
  8275  00E69A  160D               	andwf	___ftdiv@f2+1,f,c
  8276  00E69C  0E00               	movlw	0
  8277  00E69E  160E               	andwf	___ftdiv@f2+2,f,c
  8278  00E6A0  0E18               	movlw	24
  8279  00E6A2  6E12               	movwf	___ftdiv@cntr,c
  8280  00E6A4  90D8               	bcf	status,0,c
  8281  00E6A6  3613               	rlcf	___ftdiv@f3,f,c
  8282  00E6A8  3614               	rlcf	___ftdiv@f3+1,f,c
  8283  00E6AA  3615               	rlcf	___ftdiv@f3+2,f,c
  8284  00E6AC  500C               	movf	___ftdiv@f2,w,c
  8285  00E6AE  5C09               	subwf	___ftdiv@f1,w,c
  8286  00E6B0  500D               	movf	___ftdiv@f2+1,w,c
  8287  00E6B2  580A               	subwfb	___ftdiv@f1+1,w,c
  8288  00E6B4  500E               	movf	___ftdiv@f2+2,w,c
  8289  00E6B6  580B               	subwfb	___ftdiv@f1+2,w,c
  8290  00E6B8  A0D8               	btfss	status,0,c
  8291  00E6BA  D007               	goto	l962
  8292  00E6BC  500C               	movf	___ftdiv@f2,w,c
  8293  00E6BE  5E09               	subwf	___ftdiv@f1,f,c
  8294  00E6C0  500D               	movf	___ftdiv@f2+1,w,c
  8295  00E6C2  5A0A               	subwfb	___ftdiv@f1+1,f,c
  8296  00E6C4  500E               	movf	___ftdiv@f2+2,w,c
  8297  00E6C6  5A0B               	subwfb	___ftdiv@f1+2,f,c
  8298  00E6C8  8013               	bsf	___ftdiv@f3,0,c
  8299  00E6CA                     l962:
  8300  00E6CA  90D8               	bcf	status,0,c
  8301  00E6CC  3609               	rlcf	___ftdiv@f1,f,c
  8302  00E6CE  360A               	rlcf	___ftdiv@f1+1,f,c
  8303  00E6D0  360B               	rlcf	___ftdiv@f1+2,f,c
  8304  00E6D2  2E12               	decfsz	___ftdiv@cntr,f,c
  8305  00E6D4  D7E7               	goto	l961
  8306  00E6D6  C013  F001         	movff	___ftdiv@f3,___ftpack@arg
  8307  00E6DA  C014  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8308  00E6DE  C015  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8309  00E6E2  C016  F004         	movff	___ftdiv@exp,___ftpack@exp
  8310  00E6E6  C017  F005         	movff	___ftdiv@sign,___ftpack@sign
  8311  00E6EA  ECA1  F070         	call	___ftpack	;wreg free
  8312  00E6EE  C001  F009         	movff	?___ftpack,?___ftdiv
  8313  00E6F2  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  8314  00E6F6  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  8315  00E6FA  0012               	return	
  8316  00E6FC                     __end_of___ftdiv:
  8317                           	opt stack 0
  8318                           tblptru	equ	0xFF8
  8319                           tblptrh	equ	0xFF7
  8320                           tblptrl	equ	0xFF6
  8321                           tablat	equ	0xFF5
  8322                           prodh	equ	0xFF4
  8323                           prodl	equ	0xFF3
  8324                           intcon	equ	0xFF2
  8325                           postinc0	equ	0xFEE
  8326                           wreg	equ	0xFE8
  8327                           postinc1	equ	0xFE6
  8328                           postdec1	equ	0xFE5
  8329                           fsr1h	equ	0xFE2
  8330                           fsr1l	equ	0xFE1
  8331                           indf2	equ	0xFDF
  8332                           postinc2	equ	0xFDE
  8333                           postdec2	equ	0xFDD
  8334                           fsr2h	equ	0xFDA
  8335                           fsr2l	equ	0xFD9
  8336                           status	equ	0xFD8
  8337                           
  8338 ;; *************** function ___awtoft *****************
  8339 ;; Defined at:
  8340 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awtoft.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;  c               2    8[COMRAM] int 
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;  sign            1   11[COMRAM] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  3    8[COMRAM] float 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0, cstack
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8354 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8357 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8358 ;;Total ram usage:        4 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:    1
  8361 ;; This function calls:
  8362 ;;		___ftpack
  8363 ;; This function is called by:
  8364 ;;		_covertir_valores_de_array_a_escala_decimal
  8365 ;;		_exp
  8366 ;;		_log
  8367 ;; This function uses a non-reentrant model
  8368 ;;
  8369                           
  8370                           	psect	text41
  8371  00D34A                     __ptext41:
  8372                           	opt stack 0
  8373  00D34A                     ___awtoft:
  8374                           	opt stack 20
  8375                           
  8376                           ;incstack = 0
  8377  00D34A  0E00               	movlw	0
  8378  00D34C  6E0C               	movwf	___awtoft@sign,c
  8379  00D34E  AE0A               	btfss	___awtoft@c+1,7,c
  8380  00D350  D006               	goto	l854
  8381  00D352  6C09               	negf	___awtoft@c,c
  8382  00D354  1E0A               	comf	___awtoft@c+1,f,c
  8383  00D356  B0D8               	btfsc	status,0,c
  8384  00D358  2A0A               	incf	___awtoft@c+1,f,c
  8385  00D35A  0E01               	movlw	1
  8386  00D35C  6E0C               	movwf	___awtoft@sign,c
  8387  00D35E                     l854:
  8388  00D35E  C009  F001         	movff	___awtoft@c,___ftpack@arg
  8389  00D362  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  8390  00D366  6A03               	clrf	___ftpack@arg+2,c
  8391  00D368  0E8E               	movlw	142
  8392  00D36A  6E04               	movwf	___ftpack@exp,c
  8393  00D36C  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  8394  00D370  ECA1  F070         	call	___ftpack	;wreg free
  8395  00D374  C001  F009         	movff	?___ftpack,?___awtoft
  8396  00D378  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  8397  00D37C  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  8398  00D380  0012               	return	
  8399  00D382                     __end_of___awtoft:
  8400                           	opt stack 0
  8401                           tblptru	equ	0xFF8
  8402                           tblptrh	equ	0xFF7
  8403                           tblptrl	equ	0xFF6
  8404                           tablat	equ	0xFF5
  8405                           prodh	equ	0xFF4
  8406                           prodl	equ	0xFF3
  8407                           intcon	equ	0xFF2
  8408                           postinc0	equ	0xFEE
  8409                           wreg	equ	0xFE8
  8410                           postinc1	equ	0xFE6
  8411                           postdec1	equ	0xFE5
  8412                           fsr1h	equ	0xFE2
  8413                           fsr1l	equ	0xFE1
  8414                           indf2	equ	0xFDF
  8415                           postinc2	equ	0xFDE
  8416                           postdec2	equ	0xFDD
  8417                           fsr2h	equ	0xFDA
  8418                           fsr2l	equ	0xFD9
  8419                           status	equ	0xFD8
  8420                           
  8421 ;; *************** function ___lltoft *****************
  8422 ;; Defined at:
  8423 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lltoft.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;  c               4    8[COMRAM] unsigned long 
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;  exp             1   16[COMRAM] unsigned char 
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  3    8[COMRAM] float 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2, status,0, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;Total ram usage:        9 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    1
  8444 ;; This function calls:
  8445 ;;		___ftpack
  8446 ;; This function is called by:
  8447 ;;		_pow
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text42
  8452  00D634                     __ptext42:
  8453                           	opt stack 0
  8454  00D634                     ___lltoft:
  8455                           	opt stack 21
  8456                           
  8457                           ;incstack = 0
  8458  00D634  0E8E               	movlw	142
  8459  00D636  6E11               	movwf	___lltoft@exp,c
  8460  00D638  D006               	goto	l1056
  8461  00D63A  90D8               	bcf	status,0,c
  8462  00D63C  320C               	rrcf	___lltoft@c+3,f,c
  8463  00D63E  320B               	rrcf	___lltoft@c+2,f,c
  8464  00D640  320A               	rrcf	___lltoft@c+1,f,c
  8465  00D642  3209               	rrcf	___lltoft@c,f,c
  8466  00D644  2A11               	incf	___lltoft@exp,f,c
  8467  00D646                     l1056:
  8468  00D646  0E00               	movlw	0
  8469  00D648  1409               	andwf	___lltoft@c,w,c
  8470  00D64A  6E0D               	movwf	??___lltoft& (0+255),c
  8471  00D64C  0E00               	movlw	0
  8472  00D64E  140A               	andwf	___lltoft@c+1,w,c
  8473  00D650  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  8474  00D652  0E00               	movlw	0
  8475  00D654  140B               	andwf	___lltoft@c+2,w,c
  8476  00D656  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  8477  00D658  0EFF               	movlw	255
  8478  00D65A  140C               	andwf	___lltoft@c+3,w,c
  8479  00D65C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  8480  00D65E  500D               	movf	??___lltoft,w,c
  8481  00D660  100E               	iorwf	??___lltoft+1,w,c
  8482  00D662  100F               	iorwf	??___lltoft+2,w,c
  8483  00D664  1010               	iorwf	??___lltoft+3,w,c
  8484  00D666  A4D8               	btfss	status,2,c
  8485  00D668  D7E8               	goto	l1057
  8486  00D66A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  8487  00D66E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  8488  00D672  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  8489  00D676  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  8490  00D67A  0E00               	movlw	0
  8491  00D67C  6E05               	movwf	___ftpack@sign,c
  8492  00D67E  ECA1  F070         	call	___ftpack	;wreg free
  8493  00D682  C001  F009         	movff	?___ftpack,?___lltoft
  8494  00D686  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  8495  00D68A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  8496  00D68E  0012               	return	
  8497  00D690                     __end_of___lltoft:
  8498                           	opt stack 0
  8499                           tblptru	equ	0xFF8
  8500                           tblptrh	equ	0xFF7
  8501                           tblptrl	equ	0xFF6
  8502                           tablat	equ	0xFF5
  8503                           prodh	equ	0xFF4
  8504                           prodl	equ	0xFF3
  8505                           intcon	equ	0xFF2
  8506                           postinc0	equ	0xFEE
  8507                           wreg	equ	0xFE8
  8508                           postinc1	equ	0xFE6
  8509                           postdec1	equ	0xFE5
  8510                           fsr1h	equ	0xFE2
  8511                           fsr1l	equ	0xFE1
  8512                           indf2	equ	0xFDF
  8513                           postinc2	equ	0xFDE
  8514                           postdec2	equ	0xFDD
  8515                           fsr2h	equ	0xFDA
  8516                           fsr2l	equ	0xFD9
  8517                           status	equ	0xFD8
  8518                           
  8519 ;; *************** function ___ftpack *****************
  8520 ;; Defined at:
  8521 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\float.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  arg             3    0[COMRAM] unsigned um
  8524 ;;  exp             1    3[COMRAM] unsigned char 
  8525 ;;  sign            1    4[COMRAM] unsigned char 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  3    0[COMRAM] float 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8537 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8539 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8540 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8541 ;;Total ram usage:        8 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		___altoft
  8547 ;;		___awtoft
  8548 ;;		___ftadd
  8549 ;;		___ftdiv
  8550 ;;		___ftmul
  8551 ;;		___lltoft
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text43
  8556  00E142                     __ptext43:
  8557                           	opt stack 0
  8558  00E142                     ___ftpack:
  8559                           	opt stack 19
  8560                           
  8561                           ;incstack = 0
  8562  00E142  5004               	movf	___ftpack@exp,w,c
  8563  00E144  B4D8               	btfsc	status,2,c
  8564  00E146  D005               	goto	u3310
  8565  00E148  5001               	movf	___ftpack@arg,w,c
  8566  00E14A  1002               	iorwf	___ftpack@arg+1,w,c
  8567  00E14C  1003               	iorwf	___ftpack@arg+2,w,c
  8568  00E14E  A4D8               	btfss	status,2,c
  8569  00E150  D00C               	goto	l894
  8570  00E152                     u3310:
  8571  00E152  0E00               	movlw	0
  8572  00E154  6E01               	movwf	?___ftpack,c
  8573  00E156  0E00               	movlw	0
  8574  00E158  6E02               	movwf	?___ftpack+1,c
  8575  00E15A  0E00               	movlw	0
  8576  00E15C  6E03               	movwf	?___ftpack+2,c
  8577  00E15E  0012               	return	
  8578  00E160  2A04               	incf	___ftpack@exp,f,c
  8579  00E162  90D8               	bcf	status,0,c
  8580  00E164  3203               	rrcf	___ftpack@arg+2,f,c
  8581  00E166  3202               	rrcf	___ftpack@arg+1,f,c
  8582  00E168  3201               	rrcf	___ftpack@arg,f,c
  8583  00E16A                     l894:
  8584  00E16A  0E00               	movlw	0
  8585  00E16C  1401               	andwf	___ftpack@arg,w,c
  8586  00E16E  6E06               	movwf	??___ftpack& (0+255),c
  8587  00E170  0E00               	movlw	0
  8588  00E172  1402               	andwf	___ftpack@arg+1,w,c
  8589  00E174  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8590  00E176  0EFE               	movlw	254
  8591  00E178  1403               	andwf	___ftpack@arg+2,w,c
  8592  00E17A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8593  00E17C  5006               	movf	??___ftpack,w,c
  8594  00E17E  1007               	iorwf	??___ftpack+1,w,c
  8595  00E180  1008               	iorwf	??___ftpack+2,w,c
  8596  00E182  B4D8               	btfsc	status,2,c
  8597  00E184  D00C               	goto	l897
  8598  00E186  D7EC               	goto	l895
  8599  00E188  2A04               	incf	___ftpack@exp,f,c
  8600  00E18A  0E01               	movlw	1
  8601  00E18C  2601               	addwf	___ftpack@arg,f,c
  8602  00E18E  0E00               	movlw	0
  8603  00E190  2202               	addwfc	___ftpack@arg+1,f,c
  8604  00E192  0E00               	movlw	0
  8605  00E194  2203               	addwfc	___ftpack@arg+2,f,c
  8606  00E196  90D8               	bcf	status,0,c
  8607  00E198  3203               	rrcf	___ftpack@arg+2,f,c
  8608  00E19A  3202               	rrcf	___ftpack@arg+1,f,c
  8609  00E19C  3201               	rrcf	___ftpack@arg,f,c
  8610  00E19E                     l897:
  8611  00E19E  0E00               	movlw	0
  8612  00E1A0  1401               	andwf	___ftpack@arg,w,c
  8613  00E1A2  6E06               	movwf	??___ftpack& (0+255),c
  8614  00E1A4  0E00               	movlw	0
  8615  00E1A6  1402               	andwf	___ftpack@arg+1,w,c
  8616  00E1A8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  8617  00E1AA  0EFF               	movlw	255
  8618  00E1AC  1403               	andwf	___ftpack@arg+2,w,c
  8619  00E1AE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  8620  00E1B0  5006               	movf	??___ftpack,w,c
  8621  00E1B2  1007               	iorwf	??___ftpack+1,w,c
  8622  00E1B4  1008               	iorwf	??___ftpack+2,w,c
  8623  00E1B6  B4D8               	btfsc	status,2,c
  8624  00E1B8  D006               	goto	l900
  8625  00E1BA  D7E6               	goto	l898
  8626  00E1BC  0604               	decf	___ftpack@exp,f,c
  8627  00E1BE  90D8               	bcf	status,0,c
  8628  00E1C0  3601               	rlcf	___ftpack@arg,f,c
  8629  00E1C2  3602               	rlcf	___ftpack@arg+1,f,c
  8630  00E1C4  3603               	rlcf	___ftpack@arg+2,f,c
  8631  00E1C6                     l900:
  8632  00E1C6  BE02               	btfsc	___ftpack@arg+1,7,c
  8633  00E1C8  D003               	goto	u3350
  8634  00E1CA  0E02               	movlw	2
  8635  00E1CC  6004               	cpfslt	___ftpack@exp,c
  8636  00E1CE  D7F6               	goto	l901
  8637  00E1D0                     u3350:
  8638  00E1D0  A004               	btfss	___ftpack@exp,0,c
  8639  00E1D2  9E02               	bcf	___ftpack@arg+1,7,c
  8640  00E1D4  90D8               	bcf	status,0,c
  8641  00E1D6  3204               	rrcf	___ftpack@exp,f,c
  8642  00E1D8  5004               	movf	___ftpack@exp,w,c
  8643  00E1DA  1203               	iorwf	___ftpack@arg+2,f,c
  8644  00E1DC  5005               	movf	___ftpack@sign,w,c
  8645  00E1DE  A4D8               	btfss	status,2,c
  8646  00E1E0  8E03               	bsf	___ftpack@arg+2,7,c
  8647  00E1E2  C001  F001         	movff	___ftpack@arg,?___ftpack
  8648  00E1E6  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  8649  00E1EA  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  8650  00E1EE  0012               	return	
  8651  00E1F0                     __end_of___ftpack:
  8652                           	opt stack 0
  8653                           tblptru	equ	0xFF8
  8654                           tblptrh	equ	0xFF7
  8655                           tblptrl	equ	0xFF6
  8656                           tablat	equ	0xFF5
  8657                           prodh	equ	0xFF4
  8658                           prodl	equ	0xFF3
  8659                           intcon	equ	0xFF2
  8660                           postinc0	equ	0xFEE
  8661                           wreg	equ	0xFE8
  8662                           postinc1	equ	0xFE6
  8663                           postdec1	equ	0xFE5
  8664                           fsr1h	equ	0xFE2
  8665                           fsr1l	equ	0xFE1
  8666                           indf2	equ	0xFDF
  8667                           postinc2	equ	0xFDE
  8668                           postdec2	equ	0xFDD
  8669                           fsr2h	equ	0xFDA
  8670                           fsr2l	equ	0xFD9
  8671                           status	equ	0xFD8
  8672                           
  8673 ;; *************** function _activar_alarma *****************
  8674 ;; Defined at:
  8675 ;;		line 293 in file "main.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  intentos_de_    2   61[COMRAM] int 
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8693 ;;Total ram usage:        3 bytes
  8694 ;; Hardware stack levels used:    1
  8695 ;; Hardware stack levels required when called:    7
  8696 ;; This function calls:
  8697 ;;		_ingreso_numero
  8698 ;;		_lcd_gotoxy
  8699 ;;		_lcd_putrs
  8700 ;;		_titila_alarma_activada
  8701 ;;		_verificar_contrasenia
  8702 ;; This function is called by:
  8703 ;;		_seleccionar_opcion
  8704 ;;		_ir_a_pantalla_ingresar_contrasenia
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text44
  8709  00F238                     __ptext44:
  8710                           	opt stack 0
  8711  00F238                     _activar_alarma:
  8712                           	opt stack 18
  8713                           
  8714                           ;main.c: 294: lcd_gotoxy(1, 1);
  8715                           
  8716                           ;incstack = 0
  8717  00F238  0E01               	movlw	1
  8718  00F23A  6E05               	movwf	lcd_gotoxy@y,c
  8719  00F23C  0E01               	movlw	1
  8720  00F23E  EC44  F069         	call	_lcd_gotoxy
  8721                           
  8722                           ;main.c: 295: lcd_putrs("Alarm activated ");
  8723  00F242  0E50               	movlw	low STR_16
  8724  00F244  6E09               	movwf	lcd_putrs@ptr,c
  8725  00F246  0EFF               	movlw	high STR_16
  8726  00F248  6E0A               	movwf	lcd_putrs@ptr+1,c
  8727  00F24A  EC9B  F06A         	call	_lcd_putrs	;wreg free
  8728                           
  8729                           ;main.c: 296: lcd_gotoxy(1, 2);
  8730  00F24E  0E02               	movlw	2
  8731  00F250  6E05               	movwf	lcd_gotoxy@y,c
  8732  00F252  0E01               	movlw	1
  8733  00F254  EC44  F069         	call	_lcd_gotoxy
  8734                           
  8735                           ;main.c: 297: lcd_putrs("                ");
  8736  00F258  0E3F               	movlw	low STR_17
  8737  00F25A  6E09               	movwf	lcd_putrs@ptr,c
  8738  00F25C  0EFF               	movlw	high STR_17
  8739  00F25E  6E0A               	movwf	lcd_putrs@ptr+1,c
  8740  00F260  EC9B  F06A         	call	_lcd_putrs	;wreg free
  8741                           
  8742                           ;main.c: 298: numeros_ingresados = 0;
  8743  00F264  0E00               	movlw	0
  8744  00F266  0100               	movlb	0	; () banked
  8745  00F268  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  8746  00F26A  0E00               	movlw	0
  8747  00F26C  6F98               	movwf	_numeros_ingresados& (0+255),b
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;main.c: 299: alarma_activada = 1;
  8751  00F26E  0E00               	movlw	0
  8752  00F270  0100               	movlb	0	; () banked
  8753  00F272  6F95               	movwf	(_alarma_activada+1)& (0+255),b
  8754  00F274  0E01               	movlw	1
  8755  00F276  6F94               	movwf	_alarma_activada& (0+255),b
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;main.c: 301: int intentos_de_contrasenia = 0;
  8759  00F278  0E00               	movlw	0
  8760  00F27A  6E3F               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  8761  00F27C  0E00               	movlw	0
  8762  00F27E  6E3E               	movwf	activar_alarma@intentos_de_contrasenia,c
  8763                           
  8764                           ;main.c: 302: while (alarma_activada) {
  8765  00F280  D0BF               	goto	l299
  8766  00F282                     
  8767                           ; BSR set to: 0
  8768                           ;main.c: 305: if (numeros_ingresados < 4) {
  8769                           
  8770                           ; BSR set to: 0
  8771  00F282  0100               	movlb	0	; () banked
  8772  00F284  BF99               	btfsc	(_numeros_ingresados+1)& (0+255),7,b
  8773  00F286  D008               	goto	u5240
  8774  00F288  0100               	movlb	0	; () banked
  8775  00F28A  5199               	movf	(_numeros_ingresados+1)& (0+255),w,b
  8776  00F28C  E12F               	bnz	l4635
  8777  00F28E  0E04               	movlw	4
  8778  00F290  0100               	movlb	0	; () banked
  8779  00F292  5D98               	subwf	_numeros_ingresados& (0+255),w,b
  8780  00F294  B0D8               	btfsc	status,0,c
  8781  00F296  D02A               	goto	l292
  8782  00F298                     u5240:
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;main.c: 306: if (alarma_sonando == 1) {
  8786  00F298  0100               	movlb	0	; () banked
  8787  00F29A  0592               	decf	_alarma_sonando& (0+255),w,b
  8788  00F29C  0100               	movlb	0	; () banked
  8789  00F29E  1193               	iorwf	(_alarma_sonando+1)& (0+255),w,b
  8790  00F2A0  A4D8               	btfss	status,2,c
  8791  00F2A2  D021               	goto	l293
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;main.c: 310: titila_alarma_activada();
  8795  00F2A4  ECF5  F06B         	call	_titila_alarma_activada	;wreg free
  8796                           
  8797                           ;main.c: 311: LATBbits.LATB1 = !LATBbits.LATB1;;
  8798  00F2A8  B28A               	btfsc	3978,1,c	;volatile
  8799  00F2AA  D003               	goto	u5260
  8800  00F2AC  6A3D               	clrf	??_activar_alarma& (0+255),c
  8801  00F2AE  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8802  00F2B0  D001               	goto	u5278
  8803  00F2B2                     u5260:
  8804  00F2B2  6A3D               	clrf	??_activar_alarma& (0+255),c
  8805  00F2B4                     u5278:
  8806  00F2B4  463D               	rlncf	??_activar_alarma,f,c
  8807  00F2B6  508A               	movf	3978,w,c	;volatile
  8808  00F2B8  183D               	xorwf	??_activar_alarma,w,c
  8809  00F2BA  0BFD               	andlw	-3
  8810  00F2BC  183D               	xorwf	??_activar_alarma,w,c
  8811  00F2BE  6E8A               	movwf	3978,c	;volatile
  8812                           
  8813                           ;main.c: 312: LATBbits.LATB0 = !LATBbits.LATB0;
  8814  00F2C0  B08A               	btfsc	3978,0,c	;volatile
  8815  00F2C2  D003               	goto	u5280
  8816  00F2C4  6A3D               	clrf	??_activar_alarma& (0+255),c
  8817  00F2C6  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8818  00F2C8  D001               	goto	u5298
  8819  00F2CA                     u5280:
  8820  00F2CA  6A3D               	clrf	??_activar_alarma& (0+255),c
  8821  00F2CC                     u5298:
  8822  00F2CC  508A               	movf	3978,w,c	;volatile
  8823  00F2CE  183D               	xorwf	??_activar_alarma,w,c
  8824  00F2D0  0BFE               	andlw	-2
  8825  00F2D2  183D               	xorwf	??_activar_alarma,w,c
  8826  00F2D4  6E8A               	movwf	3978,c	;volatile
  8827                           
  8828                           ;main.c: 313: _delay((unsigned long)((98)*(8000000/4000.0)));
  8829  00F2D6  0EFF               	movlw	255
  8830  00F2D8  6E3D               	movwf	??_activar_alarma& (0+255),c
  8831  00F2DA  0E8A               	movlw	138
  8832  00F2DC                     u6567:
  8833  00F2DC  2EE8               	decfsz	wreg,f,c
  8834  00F2DE  D7FE               	bra	u6567
  8835  00F2E0  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8836  00F2E2  D7FC               	bra	u6567
  8837  00F2E4  D000               	nop2	
  8838  00F2E6                     l293:
  8839                           
  8840                           ;main.c: 314: }
  8841                           ;main.c: 315: ingreso_numero();
  8842  00F2E6  EC3D  F07E         	call	_ingreso_numero	;wreg free
  8843                           
  8844                           ;main.c: 316: } else {
  8845  00F2EA  D05F               	goto	l298
  8846  00F2EC                     l292:
  8847  00F2EC                     l4635:
  8848                           
  8849                           ;main.c: 317: if (verificar_contrasenia()) {
  8850  00F2EC  ECAB  F06C         	call	_verificar_contrasenia	;wreg free
  8851  00F2F0  5001               	movf	?_verificar_contrasenia,w,c
  8852  00F2F2  1002               	iorwf	?_verificar_contrasenia+1,w,c
  8853  00F2F4  B4D8               	btfsc	status,2,c
  8854  00F2F6  D019               	goto	l295
  8855                           
  8856                           ;main.c: 318: alarma_activada = 0;
  8857  00F2F8  0E00               	movlw	0
  8858  00F2FA  0100               	movlb	0	; () banked
  8859  00F2FC  6F95               	movwf	(_alarma_activada+1)& (0+255),b
  8860  00F2FE  0E00               	movlw	0
  8861  00F300  6F94               	movwf	_alarma_activada& (0+255),b
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;main.c: 319: LATBbits.LATB1 = 0;;
  8865  00F302  928A               	bcf	3978,1,c	;volatile
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;main.c: 320: LATBbits.LATB0 = 0;;
  8869  00F304  908A               	bcf	3978,0,c	;volatile
  8870                           
  8871                           ;main.c: 321: alarma_sonando = 0;
  8872  00F306  0E00               	movlw	0
  8873  00F308  0100               	movlb	0	; () banked
  8874  00F30A  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  8875  00F30C  0E00               	movlw	0
  8876  00F30E  6F92               	movwf	_alarma_sonando& (0+255),b
  8877                           
  8878                           ;main.c: 322: intentos_de_contrasenia = 0;
  8879  00F310  0E00               	movlw	0
  8880  00F312  6E3F               	movwf	activar_alarma@intentos_de_contrasenia+1,c
  8881  00F314  0E00               	movlw	0
  8882  00F316  6E3E               	movwf	activar_alarma@intentos_de_contrasenia,c
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;main.c: 323: _delay((unsigned long)((98)*(8000000/4000.0)));
  8886  00F318  0EFF               	movlw	255
  8887  00F31A  6E3D               	movwf	??_activar_alarma& (0+255),c
  8888  00F31C  0E8A               	movlw	138
  8889  00F31E                     u6577:
  8890  00F31E  2EE8               	decfsz	wreg,f,c
  8891  00F320  D7FE               	bra	u6577
  8892  00F322  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8893  00F324  D7FC               	bra	u6577
  8894  00F326  D000               	nop2	
  8895                           
  8896                           ;main.c: 324: break;
  8897  00F328  0012               	return	
  8898  00F32A                     l295:
  8899                           
  8900                           ;main.c: 326: numeros_ingresados = 0;
  8901  00F32A  0E00               	movlw	0
  8902  00F32C  0100               	movlb	0	; () banked
  8903  00F32E  6F99               	movwf	(_numeros_ingresados+1)& (0+255),b
  8904  00F330  0E00               	movlw	0
  8905  00F332  6F98               	movwf	_numeros_ingresados& (0+255),b
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;main.c: 327: intentos_de_contrasenia++;
  8909  00F334  4A3E               	infsnz	activar_alarma@intentos_de_contrasenia,f,c
  8910  00F336  2A3F               	incf	activar_alarma@intentos_de_contrasenia+1,f,c
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;main.c: 328: lcd_gotoxy(1, 2);
  8914  00F338  0E02               	movlw	2
  8915  00F33A  6E05               	movwf	lcd_gotoxy@y,c
  8916  00F33C  0E01               	movlw	1
  8917  00F33E  EC44  F069         	call	_lcd_gotoxy
  8918                           
  8919                           ;main.c: 329: lcd_putrs("                ");
  8920  00F342  0E3F               	movlw	low STR_17
  8921  00F344  6E09               	movwf	lcd_putrs@ptr,c
  8922  00F346  0EFF               	movlw	high STR_17
  8923  00F348  6E0A               	movwf	lcd_putrs@ptr+1,c
  8924  00F34A  EC9B  F06A         	call	_lcd_putrs	;wreg free
  8925                           
  8926                           ;main.c: 330: if (intentos_de_contrasenia >= 3) {
  8927  00F34E  BE3F               	btfsc	activar_alarma@intentos_de_contrasenia+1,7,c
  8928  00F350  D02C               	goto	l298
  8929  00F352  503F               	movf	activar_alarma@intentos_de_contrasenia+1,w,c
  8930  00F354  E104               	bnz	u5310
  8931  00F356  0E03               	movlw	3
  8932  00F358  5C3E               	subwf	activar_alarma@intentos_de_contrasenia,w,c
  8933  00F35A  A0D8               	btfss	status,0,c
  8934  00F35C  D026               	goto	l298
  8935  00F35E                     u5310:
  8936                           
  8937                           ;main.c: 332: titila_alarma_activada();
  8938  00F35E  ECF5  F06B         	call	_titila_alarma_activada	;wreg free
  8939                           
  8940                           ;main.c: 333: alarma_sonando = 1;
  8941  00F362  0E00               	movlw	0
  8942  00F364  0100               	movlb	0	; () banked
  8943  00F366  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  8944  00F368  0E01               	movlw	1
  8945  00F36A  6F92               	movwf	_alarma_sonando& (0+255),b
  8946                           
  8947                           ; BSR set to: 0
  8948                           ;main.c: 337: LATBbits.LATB1 = !LATBbits.LATB1;;
  8949  00F36C  B28A               	btfsc	3978,1,c	;volatile
  8950  00F36E  D003               	goto	u5320
  8951  00F370  6A3D               	clrf	??_activar_alarma& (0+255),c
  8952  00F372  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8953  00F374  D001               	goto	u5338
  8954  00F376                     u5320:
  8955  00F376  6A3D               	clrf	??_activar_alarma& (0+255),c
  8956  00F378                     u5338:
  8957  00F378  463D               	rlncf	??_activar_alarma,f,c
  8958  00F37A  508A               	movf	3978,w,c	;volatile
  8959  00F37C  183D               	xorwf	??_activar_alarma,w,c
  8960  00F37E  0BFD               	andlw	-3
  8961  00F380  183D               	xorwf	??_activar_alarma,w,c
  8962  00F382  6E8A               	movwf	3978,c	;volatile
  8963                           
  8964                           ;main.c: 338: LATBbits.LATB0 = !LATBbits.LATB0;
  8965  00F384  B08A               	btfsc	3978,0,c	;volatile
  8966  00F386  D003               	goto	u5340
  8967  00F388  6A3D               	clrf	??_activar_alarma& (0+255),c
  8968  00F38A  2A3D               	incf	??_activar_alarma& (0+255),f,c
  8969  00F38C  D001               	goto	u5358
  8970  00F38E                     u5340:
  8971  00F38E  6A3D               	clrf	??_activar_alarma& (0+255),c
  8972  00F390                     u5358:
  8973  00F390  508A               	movf	3978,w,c	;volatile
  8974  00F392  183D               	xorwf	??_activar_alarma,w,c
  8975  00F394  0BFE               	andlw	-2
  8976  00F396  183D               	xorwf	??_activar_alarma,w,c
  8977  00F398  6E8A               	movwf	3978,c	;volatile
  8978                           
  8979                           ;main.c: 339: _delay((unsigned long)((98)*(8000000/4000.0)));
  8980  00F39A  0EFF               	movlw	255
  8981  00F39C  6E3D               	movwf	??_activar_alarma& (0+255),c
  8982  00F39E  0E8A               	movlw	138
  8983  00F3A0                     u6587:
  8984  00F3A0  2EE8               	decfsz	wreg,f,c
  8985  00F3A2  D7FE               	bra	u6587
  8986  00F3A4  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  8987  00F3A6  D7FC               	bra	u6587
  8988  00F3A8  D000               	nop2	
  8989  00F3AA                     l298:
  8990                           
  8991                           ;main.c: 340: }
  8992                           ;main.c: 341: }
  8993                           ;main.c: 342: }
  8994                           ;main.c: 344: if (PORTCbits.RC5 == 0 || PORTCbits.RC6 == 0 || PORTCbits.RC7 == 0) {
  8995  00F3AA  BA82               	btfsc	3970,5,c	;volatile
  8996  00F3AC  AC82               	btfss	3970,6,c	;volatile
  8997  00F3AE  D002               	goto	u5380
  8998  00F3B0  BE82               	btfsc	3970,7,c	;volatile
  8999  00F3B2  D026               	goto	l299
  9000  00F3B4                     u5380:
  9001                           
  9002                           ;main.c: 350: titila_alarma_activada();
  9003  00F3B4  ECF5  F06B         	call	_titila_alarma_activada	;wreg free
  9004                           
  9005                           ;main.c: 351: alarma_sonando = 1;
  9006  00F3B8  0E00               	movlw	0
  9007  00F3BA  0100               	movlb	0	; () banked
  9008  00F3BC  6F93               	movwf	(_alarma_sonando+1)& (0+255),b
  9009  00F3BE  0E01               	movlw	1
  9010  00F3C0  6F92               	movwf	_alarma_sonando& (0+255),b
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;main.c: 352: LATBbits.LATB1 = !LATBbits.LATB1;;
  9014  00F3C2  B28A               	btfsc	3978,1,c	;volatile
  9015  00F3C4  D003               	goto	u5390
  9016  00F3C6  6A3D               	clrf	??_activar_alarma& (0+255),c
  9017  00F3C8  2A3D               	incf	??_activar_alarma& (0+255),f,c
  9018  00F3CA  D001               	goto	u5408
  9019  00F3CC                     u5390:
  9020  00F3CC  6A3D               	clrf	??_activar_alarma& (0+255),c
  9021  00F3CE                     u5408:
  9022  00F3CE  463D               	rlncf	??_activar_alarma,f,c
  9023  00F3D0  508A               	movf	3978,w,c	;volatile
  9024  00F3D2  183D               	xorwf	??_activar_alarma,w,c
  9025  00F3D4  0BFD               	andlw	-3
  9026  00F3D6  183D               	xorwf	??_activar_alarma,w,c
  9027  00F3D8  6E8A               	movwf	3978,c	;volatile
  9028                           
  9029                           ;main.c: 353: LATBbits.LATB0 = !LATBbits.LATB0;;
  9030  00F3DA  B08A               	btfsc	3978,0,c	;volatile
  9031  00F3DC  D003               	goto	u5410
  9032  00F3DE  6A3D               	clrf	??_activar_alarma& (0+255),c
  9033  00F3E0  2A3D               	incf	??_activar_alarma& (0+255),f,c
  9034  00F3E2  D001               	goto	u5428
  9035  00F3E4                     u5410:
  9036  00F3E4  6A3D               	clrf	??_activar_alarma& (0+255),c
  9037  00F3E6                     u5428:
  9038  00F3E6  508A               	movf	3978,w,c	;volatile
  9039  00F3E8  183D               	xorwf	??_activar_alarma,w,c
  9040  00F3EA  0BFE               	andlw	-2
  9041  00F3EC  183D               	xorwf	??_activar_alarma,w,c
  9042  00F3EE  6E8A               	movwf	3978,c	;volatile
  9043                           
  9044                           ;main.c: 354: _delay((unsigned long)((98)*(8000000/4000.0)));
  9045  00F3F0  0EFF               	movlw	255
  9046  00F3F2  6E3D               	movwf	??_activar_alarma& (0+255),c
  9047  00F3F4  0E8A               	movlw	138
  9048  00F3F6                     u6597:
  9049  00F3F6  2EE8               	decfsz	wreg,f,c
  9050  00F3F8  D7FE               	bra	u6597
  9051  00F3FA  2E3D               	decfsz	??_activar_alarma& (0+255),f,c
  9052  00F3FC  D7FC               	bra	u6597
  9053  00F3FE  D000               	nop2	
  9054  00F400                     l299:
  9055  00F400  0100               	movlb	0	; () banked
  9056  00F402  5194               	movf	_alarma_activada& (0+255),w,b
  9057  00F404  0100               	movlb	0	; () banked
  9058  00F406  1195               	iorwf	(_alarma_activada+1)& (0+255),w,b
  9059  00F408  B4D8               	btfsc	status,2,c
  9060  00F40A  0012               	return	
  9061  00F40C  D73A               	goto	l291
  9062  00F40E                     __end_of_activar_alarma:
  9063                           	opt stack 0
  9064                           tblptru	equ	0xFF8
  9065                           tblptrh	equ	0xFF7
  9066                           tblptrl	equ	0xFF6
  9067                           tablat	equ	0xFF5
  9068                           prodh	equ	0xFF4
  9069                           prodl	equ	0xFF3
  9070                           intcon	equ	0xFF2
  9071                           postinc0	equ	0xFEE
  9072                           wreg	equ	0xFE8
  9073                           postinc1	equ	0xFE6
  9074                           postdec1	equ	0xFE5
  9075                           fsr1h	equ	0xFE2
  9076                           fsr1l	equ	0xFE1
  9077                           indf2	equ	0xFDF
  9078                           postinc2	equ	0xFDE
  9079                           postdec2	equ	0xFDD
  9080                           fsr2h	equ	0xFDA
  9081                           fsr2l	equ	0xFD9
  9082                           status	equ	0xFD8
  9083                           
  9084 ;; *************** function _verificar_contrasenia *****************
  9085 ;; Defined at:
  9086 ;;		line 563 in file "main.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;		None
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;  i               2    8[COMRAM] int 
  9091 ;;  equals          2    6[COMRAM] int 
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  2    0[COMRAM] int 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;Total ram usage:       10 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; This function calls:
  9108 ;;		Nothing
  9109 ;; This function is called by:
  9110 ;;		_activar_alarma
  9111 ;;		_ir_a_pantalla_ingresar_contrasenia
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text45
  9116  00D956                     __ptext45:
  9117                           	opt stack 0
  9118  00D956                     _verificar_contrasenia:
  9119                           	opt stack 27
  9120                           
  9121                           ;main.c: 564: int equals = 0;
  9122                           
  9123                           ;incstack = 0
  9124  00D956  0E00               	movlw	0
  9125  00D958  6E08               	movwf	verificar_contrasenia@equals+1,c
  9126  00D95A  0E00               	movlw	0
  9127  00D95C  6E07               	movwf	verificar_contrasenia@equals,c
  9128                           
  9129                           ;main.c: 565: for (int i = 0; i < 4; i++) {
  9130  00D95E  0E00               	movlw	0
  9131  00D960  6E0A               	movwf	verificar_contrasenia@i+1,c
  9132  00D962  0E00               	movlw	0
  9133  00D964  6E09               	movwf	verificar_contrasenia@i,c
  9134  00D966  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  9135  00D968  D003               	goto	l396
  9136  00D96A  500A               	movf	verificar_contrasenia@i+1,w,c
  9137  00D96C  E12E               	bnz	l397
  9138  00D96E  D029               	goto	L2
  9139  00D970                     l396:
  9140                           
  9141                           ;main.c: 566: if (array_contrasenia[i] == array_contrasenia_ingresada[i]) {
  9142  00D970  90D8               	bcf	status,0,c
  9143  00D972  3409               	rlcf	verificar_contrasenia@i,w,c
  9144  00D974  6ED9               	movwf	fsr2l,c
  9145  00D976  340A               	rlcf	verificar_contrasenia@i+1,w,c
  9146  00D978  6EDA               	movwf	fsr2h,c
  9147  00D97A  0E60               	movlw	low _array_contrasenia_ingresada
  9148  00D97C  26D9               	addwf	fsr2l,f,c
  9149  00D97E  0E00               	movlw	high _array_contrasenia_ingresada
  9150  00D980  22DA               	addwfc	fsr2h,f,c
  9151  00D982  90D8               	bcf	status,0,c
  9152  00D984  3409               	rlcf	verificar_contrasenia@i,w,c
  9153  00D986  6EE1               	movwf	fsr1l,c
  9154  00D988  340A               	rlcf	verificar_contrasenia@i+1,w,c
  9155  00D98A  6EE2               	movwf	fsr1h,c
  9156  00D98C  0EDB               	movlw	low _array_contrasenia
  9157  00D98E  26E1               	addwf	fsr1l,f,c
  9158  00D990  0E00               	movlw	high _array_contrasenia
  9159  00D992  22E2               	addwfc	fsr1h,f,c
  9160  00D994  50DE               	movf	postinc2,w,c
  9161  00D996  18E6               	xorwf	postinc1,w,c
  9162  00D998  E109               	bnz	l4529
  9163  00D99A  50DE               	movf	postinc2,w,c
  9164  00D99C  18E6               	xorwf	postinc1,w,c
  9165  00D99E  A4D8               	btfss	status,2,c
  9166  00D9A0  D005               	goto	l398
  9167                           
  9168                           ;main.c: 567: equals = 1;
  9169  00D9A2  0E00               	movlw	0
  9170  00D9A4  6E08               	movwf	verificar_contrasenia@equals+1,c
  9171  00D9A6  0E01               	movlw	1
  9172  00D9A8  6E07               	movwf	verificar_contrasenia@equals,c
  9173                           
  9174                           ;main.c: 568: } else {
  9175  00D9AA  D005               	goto	l399
  9176  00D9AC                     l398:
  9177  00D9AC                     l4529:
  9178                           
  9179                           ;main.c: 569: equals = 0;
  9180  00D9AC  0E00               	movlw	0
  9181  00D9AE  6E08               	movwf	verificar_contrasenia@equals+1,c
  9182  00D9B0  0E00               	movlw	0
  9183  00D9B2  6E07               	movwf	verificar_contrasenia@equals,c
  9184                           
  9185                           ;main.c: 570: break;
  9186  00D9B4  D00A               	goto	u5190
  9187  00D9B6                     l399:
  9188  00D9B6  4A09               	infsnz	verificar_contrasenia@i,f,c
  9189  00D9B8  2A0A               	incf	verificar_contrasenia@i+1,f,c
  9190  00D9BA  BE0A               	btfsc	verificar_contrasenia@i+1,7,c
  9191  00D9BC  D7D9               	goto	l396
  9192  00D9BE  500A               	movf	verificar_contrasenia@i+1,w,c
  9193  00D9C0  E104               	bnz	u5190
  9194  00D9C2                     L2:
  9195  00D9C2  0E04               	movlw	4
  9196  00D9C4  5C09               	subwf	verificar_contrasenia@i,w,c
  9197  00D9C6  A0D8               	btfss	status,0,c
  9198  00D9C8  D7D3               	goto	l396
  9199  00D9CA                     u5190:
  9200  00D9CA                     l397:
  9201                           
  9202                           ;main.c: 571: }
  9203                           ;main.c: 572: }
  9204                           ;main.c: 573: return equals;
  9205  00D9CA  C007  F001         	movff	verificar_contrasenia@equals,?_verificar_contrasenia
  9206  00D9CE  C008  F002         	movff	verificar_contrasenia@equals+1,?_verificar_contrasenia+1
  9207  00D9D2  0012               	return		;funcret
  9208  00D9D4                     __end_of_verificar_contrasenia:
  9209                           	opt stack 0
  9210                           tblptru	equ	0xFF8
  9211                           tblptrh	equ	0xFF7
  9212                           tblptrl	equ	0xFF6
  9213                           tablat	equ	0xFF5
  9214                           prodh	equ	0xFF4
  9215                           prodl	equ	0xFF3
  9216                           intcon	equ	0xFF2
  9217                           postinc0	equ	0xFEE
  9218                           wreg	equ	0xFE8
  9219                           postinc1	equ	0xFE6
  9220                           postdec1	equ	0xFE5
  9221                           fsr1h	equ	0xFE2
  9222                           fsr1l	equ	0xFE1
  9223                           indf2	equ	0xFDF
  9224                           postinc2	equ	0xFDE
  9225                           postdec2	equ	0xFDD
  9226                           fsr2h	equ	0xFDA
  9227                           fsr2l	equ	0xFD9
  9228                           status	equ	0xFD8
  9229                           
  9230 ;; *************** function _titila_alarma_activada *****************
  9231 ;; Defined at:
  9232 ;;		line 277 in file "main.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;		None
  9237 ;; Return value:  Size  Location     Type
  9238 ;;                  1    wreg      void 
  9239 ;; Registers used:
  9240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9241 ;; Tracked objects:
  9242 ;;		On entry : 0/0
  9243 ;;		On exit  : 0/0
  9244 ;;		Unchanged: 0/0
  9245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9250 ;;Total ram usage:        1 bytes
  9251 ;; Hardware stack levels used:    1
  9252 ;; Hardware stack levels required when called:    5
  9253 ;; This function calls:
  9254 ;;		_lcd_gotoxy
  9255 ;;		_lcd_putrs
  9256 ;; This function is called by:
  9257 ;;		_activar_alarma
  9258 ;; This function uses a non-reentrant model
  9259 ;;
  9260                           
  9261                           	psect	text46
  9262  00D7EA                     __ptext46:
  9263                           	opt stack 0
  9264  00D7EA                     _titila_alarma_activada:
  9265                           	opt stack 19
  9266                           
  9267                           ;main.c: 278: if (txt_alarma_activada == 0) {
  9268                           
  9269                           ;incstack = 0
  9270  00D7EA  0100               	movlb	0	; () banked
  9271  00D7EC  518C               	movf	_txt_alarma_activada& (0+255),w,b
  9272  00D7EE  0100               	movlb	0	; () banked
  9273  00D7F0  118D               	iorwf	(_txt_alarma_activada+1)& (0+255),w,b
  9274  00D7F2  A4D8               	btfss	status,2,c
  9275  00D7F4  D017               	goto	l285
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;main.c: 279: txt_alarma_activada = 1;
  9279  00D7F6  0E00               	movlw	0
  9280  00D7F8  0100               	movlb	0	; () banked
  9281  00D7FA  6F8D               	movwf	(_txt_alarma_activada+1)& (0+255),b
  9282  00D7FC  0E01               	movlw	1
  9283  00D7FE  6F8C               	movwf	_txt_alarma_activada& (0+255),b
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;main.c: 280: lcd_gotoxy(1, 1);
  9287  00D800  0E01               	movlw	1
  9288  00D802  6E05               	movwf	lcd_gotoxy@y,c
  9289  00D804  0E01               	movlw	1
  9290  00D806  EC44  F069         	call	_lcd_gotoxy
  9291                           
  9292                           ;main.c: 281: lcd_putrs("Alarm activated ");
  9293  00D80A  0E50               	movlw	low STR_16
  9294  00D80C  6E09               	movwf	lcd_putrs@ptr,c
  9295  00D80E  0EFF               	movlw	high STR_16
  9296  00D810  6E0A               	movwf	lcd_putrs@ptr+1,c
  9297  00D812  EC9B  F06A         	call	_lcd_putrs	;wreg free
  9298                           
  9299                           ;main.c: 282: _delay((unsigned long)((80)*(8000000/4000.0)));
  9300  00D816  0ED0               	movlw	208
  9301  00D818  6E0B               	movwf	??_titila_alarma_activada& (0+255),c
  9302  00D81A  0ECA               	movlw	202
  9303  00D81C                     u6607:
  9304  00D81C  2EE8               	decfsz	wreg,f,c
  9305  00D81E  D7FE               	bra	u6607
  9306  00D820  2E0B               	decfsz	??_titila_alarma_activada& (0+255),f,c
  9307  00D822  D7FC               	bra	u6607
  9308  00D824                     l285:
  9309                           
  9310                           ;main.c: 283: }
  9311                           ;main.c: 285: if (txt_alarma_activada == 1) {
  9312  00D824  0100               	movlb	0	; () banked
  9313  00D826  058C               	decf	_txt_alarma_activada& (0+255),w,b
  9314  00D828  0100               	movlb	0	; () banked
  9315  00D82A  118D               	iorwf	(_txt_alarma_activada+1)& (0+255),w,b
  9316  00D82C  A4D8               	btfss	status,2,c
  9317  00D82E  0012               	return	
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;main.c: 286: txt_alarma_activada = 0;
  9321  00D830  0E00               	movlw	0
  9322  00D832  0100               	movlb	0	; () banked
  9323  00D834  6F8D               	movwf	(_txt_alarma_activada+1)& (0+255),b
  9324  00D836  0E00               	movlw	0
  9325  00D838  6F8C               	movwf	_txt_alarma_activada& (0+255),b
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;main.c: 287: lcd_gotoxy(1, 1);
  9329  00D83A  0E01               	movlw	1
  9330  00D83C  6E05               	movwf	lcd_gotoxy@y,c
  9331  00D83E  0E01               	movlw	1
  9332  00D840  EC44  F069         	call	_lcd_gotoxy
  9333                           
  9334                           ;main.c: 288: lcd_putrs("                ");
  9335  00D844  0E3F               	movlw	low STR_17
  9336  00D846  6E09               	movwf	lcd_putrs@ptr,c
  9337  00D848  0EFF               	movlw	high STR_17
  9338  00D84A  6E0A               	movwf	lcd_putrs@ptr+1,c
  9339  00D84C  EC9B  F06A         	call	_lcd_putrs	;wreg free
  9340                           
  9341                           ;main.c: 289: _delay((unsigned long)((60)*(8000000/4000.0)));
  9342  00D850  0E9C               	movlw	156
  9343  00D852  6E0B               	movwf	??_titila_alarma_activada& (0+255),c
  9344  00D854  0ED7               	movlw	215
  9345  00D856                     u6617:
  9346  00D856  2EE8               	decfsz	wreg,f,c
  9347  00D858  D7FE               	bra	u6617
  9348  00D85A  2E0B               	decfsz	??_titila_alarma_activada& (0+255),f,c
  9349  00D85C  D7FC               	bra	u6617
  9350  00D85E  F000               	nop	
  9351  00D860  0012               	return	
  9352  00D862                     __end_of_titila_alarma_activada:
  9353                           	opt stack 0
  9354                           tblptru	equ	0xFF8
  9355                           tblptrh	equ	0xFF7
  9356                           tblptrl	equ	0xFF6
  9357                           tablat	equ	0xFF5
  9358                           prodh	equ	0xFF4
  9359                           prodl	equ	0xFF3
  9360                           intcon	equ	0xFF2
  9361                           postinc0	equ	0xFEE
  9362                           wreg	equ	0xFE8
  9363                           postinc1	equ	0xFE6
  9364                           postdec1	equ	0xFE5
  9365                           fsr1h	equ	0xFE2
  9366                           fsr1l	equ	0xFE1
  9367                           indf2	equ	0xFDF
  9368                           postinc2	equ	0xFDE
  9369                           postdec2	equ	0xFDD
  9370                           fsr2h	equ	0xFDA
  9371                           fsr2l	equ	0xFD9
  9372                           status	equ	0xFD8
  9373                           
  9374 ;; *************** function _ingreso_numero *****************
  9375 ;; Defined at:
  9376 ;;		line 133 in file "main.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      void 
  9383 ;; Registers used:
  9384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9394 ;;Total ram usage:        2 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:    6
  9397 ;; This function calls:
  9398 ;;		_guarda_numero_ingresado
  9399 ;; This function is called by:
  9400 ;;		_activar_alarma
  9401 ;;		_ir_a_pantalla_ingresar_contrasenia
  9402 ;;		_ir_a_pantalla_editar_contrasenia
  9403 ;;		_editar_fecha_reloj_digital
  9404 ;;		_editar_hora_reloj_digital
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text47
  9409  00FC7A                     __ptext47:
  9410                           	opt stack 0
  9411  00FC7A                     _ingreso_numero:
  9412                           	opt stack 18
  9413                           
  9414                           ;main.c: 134: LATAbits.LATA0 = 1;
  9415                           
  9416                           ;incstack = 0
  9417  00FC7A  8089               	bsf	3977,0,c	;volatile
  9418                           
  9419                           ;main.c: 135: LATAbits.LATA1 = 0;
  9420  00FC7C  9289               	bcf	3977,1,c	;volatile
  9421                           
  9422                           ;main.c: 136: LATAbits.LATA2 = 0;
  9423  00FC7E  9489               	bcf	3977,2,c	;volatile
  9424                           
  9425                           ;main.c: 137: LATAbits.LATA3 = 0;
  9426  00FC80  9689               	bcf	3977,3,c	;volatile
  9427                           
  9428                           ;main.c: 138: {
  9429                           ;main.c: 139: if (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  9430  00FC82  BA80               	btfsc	3968,5,c	;volatile
  9431  00FC84  A089               	btfss	3977,0,c	;volatile
  9432  00FC86  D01A               	goto	u4780
  9433                           
  9434                           ;main.c: 140: key = 1;
  9435  00FC88  0E01               	movlw	1
  9436  00FC8A  0100               	movlb	0	; () banked
  9437  00FC8C  6FA8               	movwf	_key& (0+255),b
  9438                           
  9439                           ; BSR set to: 0
  9440                           ;main.c: 141: guarda_numero_ingresado(key);
  9441  00FC8E  0100               	movlb	0	; () banked
  9442  00FC90  51A8               	movf	_key& (0+255),w,b
  9443  00FC92  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9444  00FC94  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9445  00FC96  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9446  00FC9A  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9447  00FC9E  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9448                           
  9449                           ;main.c: 142: while (PORTAbits.RA5 == 1 && LATAbits.LATA0 == 1) {
  9450  00FCA2  D008               	goto	l196
  9451  00FCA4                     
  9452                           ;main.c: 143: _delay((unsigned long)((40)*(8000000/4000.0)));
  9453  00FCA4  0E68               	movlw	104
  9454  00FCA6  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9455  00FCA8  0EE4               	movlw	228
  9456  00FCAA                     u6627:
  9457  00FCAA  2EE8               	decfsz	wreg,f,c
  9458  00FCAC  D7FE               	bra	u6627
  9459  00FCAE  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9460  00FCB0  D7FC               	bra	u6627
  9461  00FCB2  D000               	nop2	
  9462  00FCB4                     l196:
  9463  00FCB4  AA80               	btfss	3968,5,c	;volatile
  9464  00FCB6  D002               	goto	u4780
  9465  00FCB8  B089               	btfsc	3977,0,c	;volatile
  9466  00FCBA  D7F4               	goto	l197
  9467  00FCBC                     u4780:
  9468                           
  9469                           ;main.c: 144: }
  9470                           ;main.c: 145: }
  9471                           ;main.c: 146: if (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  9472  00FCBC  BE80               	btfsc	3968,7,c	;volatile
  9473  00FCBE  A089               	btfss	3977,0,c	;volatile
  9474  00FCC0  D01A               	goto	u4820
  9475                           
  9476                           ;main.c: 147: key = 2;
  9477  00FCC2  0E02               	movlw	2
  9478  00FCC4  0100               	movlb	0	; () banked
  9479  00FCC6  6FA8               	movwf	_key& (0+255),b
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;main.c: 148: guarda_numero_ingresado(key);
  9483  00FCC8  0100               	movlb	0	; () banked
  9484  00FCCA  51A8               	movf	_key& (0+255),w,b
  9485  00FCCC  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9486  00FCCE  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9487  00FCD0  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9488  00FCD4  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9489  00FCD8  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9490                           
  9491                           ;main.c: 149: while (PORTAbits.RA7 == 1 && LATAbits.LATA0 == 1) {
  9492  00FCDC  D008               	goto	l202
  9493  00FCDE                     
  9494                           ;main.c: 150: _delay((unsigned long)((40)*(8000000/4000.0)));
  9495  00FCDE  0E68               	movlw	104
  9496  00FCE0  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9497  00FCE2  0EE4               	movlw	228
  9498  00FCE4                     u6637:
  9499  00FCE4  2EE8               	decfsz	wreg,f,c
  9500  00FCE6  D7FE               	bra	u6637
  9501  00FCE8  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9502  00FCEA  D7FC               	bra	u6637
  9503  00FCEC  D000               	nop2	
  9504  00FCEE                     l202:
  9505  00FCEE  AE80               	btfss	3968,7,c	;volatile
  9506  00FCF0  D002               	goto	u4820
  9507  00FCF2  B089               	btfsc	3977,0,c	;volatile
  9508  00FCF4  D7F4               	goto	l203
  9509  00FCF6                     u4820:
  9510                           
  9511                           ;main.c: 151: }
  9512                           ;main.c: 152: }
  9513                           ;main.c: 153: if (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  9514  00FCF6  BC80               	btfsc	3968,6,c	;volatile
  9515  00FCF8  A089               	btfss	3977,0,c	;volatile
  9516  00FCFA  D01A               	goto	u4860
  9517                           
  9518                           ;main.c: 154: key = 3;
  9519  00FCFC  0E03               	movlw	3
  9520  00FCFE  0100               	movlb	0	; () banked
  9521  00FD00  6FA8               	movwf	_key& (0+255),b
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;main.c: 155: guarda_numero_ingresado(key);
  9525  00FD02  0100               	movlb	0	; () banked
  9526  00FD04  51A8               	movf	_key& (0+255),w,b
  9527  00FD06  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9528  00FD08  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9529  00FD0A  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9530  00FD0E  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9531  00FD12  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9532                           
  9533                           ;main.c: 156: while (PORTAbits.RA6 == 1 && LATAbits.LATA0 == 1) {
  9534  00FD16  D008               	goto	l208
  9535  00FD18                     
  9536                           ;main.c: 157: _delay((unsigned long)((40)*(8000000/4000.0)));
  9537  00FD18  0E68               	movlw	104
  9538  00FD1A  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9539  00FD1C  0EE4               	movlw	228
  9540  00FD1E                     u6647:
  9541  00FD1E  2EE8               	decfsz	wreg,f,c
  9542  00FD20  D7FE               	bra	u6647
  9543  00FD22  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9544  00FD24  D7FC               	bra	u6647
  9545  00FD26  D000               	nop2	
  9546  00FD28                     l208:
  9547  00FD28  AC80               	btfss	3968,6,c	;volatile
  9548  00FD2A  D002               	goto	u4860
  9549  00FD2C  B089               	btfsc	3977,0,c	;volatile
  9550  00FD2E  D7F4               	goto	l209
  9551  00FD30                     u4860:
  9552                           
  9553                           ;main.c: 158: }
  9554                           ;main.c: 159: }
  9555                           ;main.c: 160: }
  9556                           ;main.c: 161: LATAbits.LATA0 = 0;
  9557  00FD30  9089               	bcf	3977,0,c	;volatile
  9558                           
  9559                           ;main.c: 162: LATAbits.LATA1 = 1;
  9560  00FD32  8289               	bsf	3977,1,c	;volatile
  9561                           
  9562                           ;main.c: 163: LATAbits.LATA2 = 0;
  9563  00FD34  9489               	bcf	3977,2,c	;volatile
  9564                           
  9565                           ;main.c: 164: LATAbits.LATA3 = 0;
  9566  00FD36  9689               	bcf	3977,3,c	;volatile
  9567                           
  9568                           ;main.c: 165: {
  9569                           ;main.c: 166: if (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  9570  00FD38  BA80               	btfsc	3968,5,c	;volatile
  9571  00FD3A  A289               	btfss	3977,1,c	;volatile
  9572  00FD3C  D01A               	goto	u4900
  9573                           
  9574                           ;main.c: 167: key = 4;
  9575  00FD3E  0E04               	movlw	4
  9576  00FD40  0100               	movlb	0	; () banked
  9577  00FD42  6FA8               	movwf	_key& (0+255),b
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;main.c: 168: guarda_numero_ingresado(key);
  9581  00FD44  0100               	movlb	0	; () banked
  9582  00FD46  51A8               	movf	_key& (0+255),w,b
  9583  00FD48  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9584  00FD4A  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9585  00FD4C  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9586  00FD50  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9587  00FD54  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9588                           
  9589                           ;main.c: 169: while (PORTAbits.RA5 == 1 && LATAbits.LATA1 == 1) {
  9590  00FD58  D008               	goto	l214
  9591  00FD5A                     
  9592                           ;main.c: 170: _delay((unsigned long)((40)*(8000000/4000.0)));
  9593  00FD5A  0E68               	movlw	104
  9594  00FD5C  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9595  00FD5E  0EE4               	movlw	228
  9596  00FD60                     u6657:
  9597  00FD60  2EE8               	decfsz	wreg,f,c
  9598  00FD62  D7FE               	bra	u6657
  9599  00FD64  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9600  00FD66  D7FC               	bra	u6657
  9601  00FD68  D000               	nop2	
  9602  00FD6A                     l214:
  9603  00FD6A  AA80               	btfss	3968,5,c	;volatile
  9604  00FD6C  D002               	goto	u4900
  9605  00FD6E  B289               	btfsc	3977,1,c	;volatile
  9606  00FD70  D7F4               	goto	l215
  9607  00FD72                     u4900:
  9608                           
  9609                           ;main.c: 171: }
  9610                           ;main.c: 172: }
  9611                           ;main.c: 173: if (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  9612  00FD72  BE80               	btfsc	3968,7,c	;volatile
  9613  00FD74  A289               	btfss	3977,1,c	;volatile
  9614  00FD76  D01A               	goto	u4940
  9615                           
  9616                           ;main.c: 174: key = 5;
  9617  00FD78  0E05               	movlw	5
  9618  00FD7A  0100               	movlb	0	; () banked
  9619  00FD7C  6FA8               	movwf	_key& (0+255),b
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;main.c: 175: guarda_numero_ingresado(key);
  9623  00FD7E  0100               	movlb	0	; () banked
  9624  00FD80  51A8               	movf	_key& (0+255),w,b
  9625  00FD82  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9626  00FD84  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9627  00FD86  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9628  00FD8A  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9629  00FD8E  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9630                           
  9631                           ;main.c: 176: while (PORTAbits.RA7 == 1 && LATAbits.LATA1 == 1) {
  9632  00FD92  D008               	goto	l220
  9633  00FD94                     
  9634                           ;main.c: 177: _delay((unsigned long)((40)*(8000000/4000.0)));
  9635  00FD94  0E68               	movlw	104
  9636  00FD96  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9637  00FD98  0EE4               	movlw	228
  9638  00FD9A                     u6667:
  9639  00FD9A  2EE8               	decfsz	wreg,f,c
  9640  00FD9C  D7FE               	bra	u6667
  9641  00FD9E  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9642  00FDA0  D7FC               	bra	u6667
  9643  00FDA2  D000               	nop2	
  9644  00FDA4                     l220:
  9645  00FDA4  AE80               	btfss	3968,7,c	;volatile
  9646  00FDA6  D002               	goto	u4940
  9647  00FDA8  B289               	btfsc	3977,1,c	;volatile
  9648  00FDAA  D7F4               	goto	l221
  9649  00FDAC                     u4940:
  9650                           
  9651                           ;main.c: 178: }
  9652                           ;main.c: 179: }
  9653                           ;main.c: 180: if (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  9654  00FDAC  BC80               	btfsc	3968,6,c	;volatile
  9655  00FDAE  A289               	btfss	3977,1,c	;volatile
  9656  00FDB0  D01A               	goto	u4980
  9657                           
  9658                           ;main.c: 181: key = 6;
  9659  00FDB2  0E06               	movlw	6
  9660  00FDB4  0100               	movlb	0	; () banked
  9661  00FDB6  6FA8               	movwf	_key& (0+255),b
  9662                           
  9663                           ; BSR set to: 0
  9664                           ;main.c: 182: guarda_numero_ingresado(key);
  9665  00FDB8  0100               	movlb	0	; () banked
  9666  00FDBA  51A8               	movf	_key& (0+255),w,b
  9667  00FDBC  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9668  00FDBE  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9669  00FDC0  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9670  00FDC4  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9671  00FDC8  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9672                           
  9673                           ;main.c: 183: while (PORTAbits.RA6 == 1 && LATAbits.LATA1 == 1) {
  9674  00FDCC  D008               	goto	l226
  9675  00FDCE                     
  9676                           ;main.c: 184: _delay((unsigned long)((40)*(8000000/4000.0)));
  9677  00FDCE  0E68               	movlw	104
  9678  00FDD0  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9679  00FDD2  0EE4               	movlw	228
  9680  00FDD4                     u6677:
  9681  00FDD4  2EE8               	decfsz	wreg,f,c
  9682  00FDD6  D7FE               	bra	u6677
  9683  00FDD8  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9684  00FDDA  D7FC               	bra	u6677
  9685  00FDDC  D000               	nop2	
  9686  00FDDE                     l226:
  9687  00FDDE  AC80               	btfss	3968,6,c	;volatile
  9688  00FDE0  D002               	goto	u4980
  9689  00FDE2  B289               	btfsc	3977,1,c	;volatile
  9690  00FDE4  D7F4               	goto	l227
  9691  00FDE6                     u4980:
  9692                           
  9693                           ;main.c: 185: }
  9694                           ;main.c: 186: }
  9695                           ;main.c: 187: }
  9696                           ;main.c: 188: LATAbits.LATA0 = 0;
  9697  00FDE6  9089               	bcf	3977,0,c	;volatile
  9698                           
  9699                           ;main.c: 189: LATAbits.LATA1 = 0;
  9700  00FDE8  9289               	bcf	3977,1,c	;volatile
  9701                           
  9702                           ;main.c: 190: LATAbits.LATA2 = 1;
  9703  00FDEA  8489               	bsf	3977,2,c	;volatile
  9704                           
  9705                           ;main.c: 191: LATAbits.LATA3 = 0;
  9706  00FDEC  9689               	bcf	3977,3,c	;volatile
  9707                           
  9708                           ;main.c: 192: {
  9709                           ;main.c: 193: if (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  9710  00FDEE  BA80               	btfsc	3968,5,c	;volatile
  9711  00FDF0  A489               	btfss	3977,2,c	;volatile
  9712  00FDF2  D01A               	goto	u5020
  9713                           
  9714                           ;main.c: 194: key = 7;
  9715  00FDF4  0E07               	movlw	7
  9716  00FDF6  0100               	movlb	0	; () banked
  9717  00FDF8  6FA8               	movwf	_key& (0+255),b
  9718                           
  9719                           ; BSR set to: 0
  9720                           ;main.c: 195: guarda_numero_ingresado(key);
  9721  00FDFA  0100               	movlb	0	; () banked
  9722  00FDFC  51A8               	movf	_key& (0+255),w,b
  9723  00FDFE  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9724  00FE00  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9725  00FE02  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9726  00FE06  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9727  00FE0A  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9728                           
  9729                           ;main.c: 196: while (PORTAbits.RA5 == 1 && LATAbits.LATA2 == 1) {
  9730  00FE0E  D008               	goto	l232
  9731  00FE10                     
  9732                           ;main.c: 197: _delay((unsigned long)((40)*(8000000/4000.0)));
  9733  00FE10  0E68               	movlw	104
  9734  00FE12  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9735  00FE14  0EE4               	movlw	228
  9736  00FE16                     u6687:
  9737  00FE16  2EE8               	decfsz	wreg,f,c
  9738  00FE18  D7FE               	bra	u6687
  9739  00FE1A  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9740  00FE1C  D7FC               	bra	u6687
  9741  00FE1E  D000               	nop2	
  9742  00FE20                     l232:
  9743  00FE20  AA80               	btfss	3968,5,c	;volatile
  9744  00FE22  D002               	goto	u5020
  9745  00FE24  B489               	btfsc	3977,2,c	;volatile
  9746  00FE26  D7F4               	goto	l233
  9747  00FE28                     u5020:
  9748                           
  9749                           ;main.c: 198: }
  9750                           ;main.c: 199: }
  9751                           ;main.c: 200: if (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  9752  00FE28  BE80               	btfsc	3968,7,c	;volatile
  9753  00FE2A  A489               	btfss	3977,2,c	;volatile
  9754  00FE2C  D01A               	goto	u5060
  9755                           
  9756                           ;main.c: 201: key = 8;
  9757  00FE2E  0E08               	movlw	8
  9758  00FE30  0100               	movlb	0	; () banked
  9759  00FE32  6FA8               	movwf	_key& (0+255),b
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;main.c: 202: guarda_numero_ingresado(key);
  9763  00FE34  0100               	movlb	0	; () banked
  9764  00FE36  51A8               	movf	_key& (0+255),w,b
  9765  00FE38  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9766  00FE3A  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9767  00FE3C  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9768  00FE40  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9769  00FE44  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9770                           
  9771                           ;main.c: 203: while (PORTAbits.RA7 == 1 && LATAbits.LATA2 == 1) {
  9772  00FE48  D008               	goto	l238
  9773  00FE4A                     
  9774                           ;main.c: 204: _delay((unsigned long)((40)*(8000000/4000.0)));
  9775  00FE4A  0E68               	movlw	104
  9776  00FE4C  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9777  00FE4E  0EE4               	movlw	228
  9778  00FE50                     u6697:
  9779  00FE50  2EE8               	decfsz	wreg,f,c
  9780  00FE52  D7FE               	bra	u6697
  9781  00FE54  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9782  00FE56  D7FC               	bra	u6697
  9783  00FE58  D000               	nop2	
  9784  00FE5A                     l238:
  9785  00FE5A  AE80               	btfss	3968,7,c	;volatile
  9786  00FE5C  D002               	goto	u5060
  9787  00FE5E  B489               	btfsc	3977,2,c	;volatile
  9788  00FE60  D7F4               	goto	l239
  9789  00FE62                     u5060:
  9790                           
  9791                           ;main.c: 205: }
  9792                           ;main.c: 206: }
  9793                           ;main.c: 207: if (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  9794  00FE62  BC80               	btfsc	3968,6,c	;volatile
  9795  00FE64  A489               	btfss	3977,2,c	;volatile
  9796  00FE66  D01A               	goto	u5100
  9797                           
  9798                           ;main.c: 208: key = 9;
  9799  00FE68  0E09               	movlw	9
  9800  00FE6A  0100               	movlb	0	; () banked
  9801  00FE6C  6FA8               	movwf	_key& (0+255),b
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;main.c: 209: guarda_numero_ingresado(key);
  9805  00FE6E  0100               	movlb	0	; () banked
  9806  00FE70  51A8               	movf	_key& (0+255),w,b
  9807  00FE72  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9808  00FE74  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9809  00FE76  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9810  00FE7A  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9811  00FE7E  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9812                           
  9813                           ;main.c: 210: while (PORTAbits.RA6 == 1 && LATAbits.LATA2 == 1) {
  9814  00FE82  D008               	goto	l244
  9815  00FE84                     
  9816                           ;main.c: 211: _delay((unsigned long)((40)*(8000000/4000.0)));
  9817  00FE84  0E68               	movlw	104
  9818  00FE86  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9819  00FE88  0EE4               	movlw	228
  9820  00FE8A                     u6707:
  9821  00FE8A  2EE8               	decfsz	wreg,f,c
  9822  00FE8C  D7FE               	bra	u6707
  9823  00FE8E  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9824  00FE90  D7FC               	bra	u6707
  9825  00FE92  D000               	nop2	
  9826  00FE94                     l244:
  9827  00FE94  AC80               	btfss	3968,6,c	;volatile
  9828  00FE96  D002               	goto	u5100
  9829  00FE98  B489               	btfsc	3977,2,c	;volatile
  9830  00FE9A  D7F4               	goto	l245
  9831  00FE9C                     u5100:
  9832                           
  9833                           ;main.c: 212: }
  9834                           ;main.c: 213: }
  9835                           ;main.c: 214: }
  9836                           ;main.c: 215: LATAbits.LATA0 = 0;
  9837  00FE9C  9089               	bcf	3977,0,c	;volatile
  9838                           
  9839                           ;main.c: 216: LATAbits.LATA1 = 0;
  9840  00FE9E  9289               	bcf	3977,1,c	;volatile
  9841                           
  9842                           ;main.c: 217: LATAbits.LATA2 = 0;
  9843  00FEA0  9489               	bcf	3977,2,c	;volatile
  9844                           
  9845                           ;main.c: 218: LATAbits.LATA3 = 1;
  9846  00FEA2  8689               	bsf	3977,3,c	;volatile
  9847                           
  9848                           ;main.c: 220: if (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  9849  00FEA4  AE80               	btfss	3968,7,c	;volatile
  9850  00FEA6  0012               	return	
  9851  00FEA8  A689               	btfss	3977,3,c	;volatile
  9852  00FEAA  0012               	return	
  9853                           
  9854                           ;main.c: 221: key = 0;
  9855  00FEAC  0E00               	movlw	0
  9856  00FEAE  0100               	movlb	0	; () banked
  9857  00FEB0  6FA8               	movwf	_key& (0+255),b
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;main.c: 222: guarda_numero_ingresado(key);
  9861  00FEB2  0100               	movlb	0	; () banked
  9862  00FEB4  51A8               	movf	_key& (0+255),w,b
  9863  00FEB6  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9864  00FEB8  6A3C               	clrf	(??_ingreso_numero+1)& (0+255),c
  9865  00FEBA  C03B  F039         	movff	??_ingreso_numero,guarda_numero_ingresado@num
  9866  00FEBE  C03C  F03A         	movff	??_ingreso_numero+1,guarda_numero_ingresado@num+1
  9867  00FEC2  EC6F  F06D         	call	_guarda_numero_ingresado	;wreg free
  9868                           
  9869                           ;main.c: 223: while (PORTAbits.RA7 == 1 && LATAbits.LATA3 == 1) {
  9870  00FEC6  D008               	goto	l250
  9871  00FEC8                     
  9872                           ;main.c: 224: _delay((unsigned long)((40)*(8000000/4000.0)));
  9873  00FEC8  0E68               	movlw	104
  9874  00FECA  6E3B               	movwf	??_ingreso_numero& (0+255),c
  9875  00FECC  0EE4               	movlw	228
  9876  00FECE                     u6717:
  9877  00FECE  2EE8               	decfsz	wreg,f,c
  9878  00FED0  D7FE               	bra	u6717
  9879  00FED2  2E3B               	decfsz	??_ingreso_numero& (0+255),f,c
  9880  00FED4  D7FC               	bra	u6717
  9881  00FED6  D000               	nop2	
  9882  00FED8                     l250:
  9883  00FED8  AE80               	btfss	3968,7,c	;volatile
  9884  00FEDA  0012               	return	
  9885  00FEDC  A689               	btfss	3977,3,c	;volatile
  9886  00FEDE  0012               	return	
  9887  00FEE0  D7F3               	goto	l251
  9888  00FEE2                     __end_of_ingreso_numero:
  9889                           	opt stack 0
  9890                           tblptru	equ	0xFF8
  9891                           tblptrh	equ	0xFF7
  9892                           tblptrl	equ	0xFF6
  9893                           tablat	equ	0xFF5
  9894                           prodh	equ	0xFF4
  9895                           prodl	equ	0xFF3
  9896                           intcon	equ	0xFF2
  9897                           postinc0	equ	0xFEE
  9898                           wreg	equ	0xFE8
  9899                           postinc1	equ	0xFE6
  9900                           postdec1	equ	0xFE5
  9901                           fsr1h	equ	0xFE2
  9902                           fsr1l	equ	0xFE1
  9903                           indf2	equ	0xFDF
  9904                           postinc2	equ	0xFDE
  9905                           postdec2	equ	0xFDD
  9906                           fsr2h	equ	0xFDA
  9907                           fsr2l	equ	0xFD9
  9908                           status	equ	0xFD8
  9909                           
  9910 ;; *************** function _guarda_numero_ingresado *****************
  9911 ;; Defined at:
  9912 ;;		line 120 in file "main.c"
  9913 ;; Parameters:    Size  Location     Type
  9914 ;;  num             2   56[COMRAM] PTR int 
  9915 ;;		 -> RAM(3775), 
  9916 ;; Auto vars:     Size  Location     Type
  9917 ;;		None
  9918 ;; Return value:  Size  Location     Type
  9919 ;;                  1    wreg      void 
  9920 ;; Registers used:
  9921 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9922 ;; Tracked objects:
  9923 ;;		On entry : 0/0
  9924 ;;		On exit  : 0/0
  9925 ;;		Unchanged: 0/0
  9926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9931 ;;Total ram usage:        2 bytes
  9932 ;; Hardware stack levels used:    1
  9933 ;; Hardware stack levels required when called:    5
  9934 ;; This function calls:
  9935 ;;		_lcd_gotoxy
  9936 ;;		_lcd_putrs
  9937 ;;		_sprintf
  9938 ;; This function is called by:
  9939 ;;		_ingreso_numero
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           	psect	text48
  9944  00DADE                     __ptext48:
  9945                           	opt stack 0
  9946  00DADE                     _guarda_numero_ingresado:
  9947                           	opt stack 18
  9948                           
  9949                           ;main.c: 121: if (motivo_ingreso_de_numeros == 0) {
  9950                           
  9951                           ;incstack = 0
  9952  00DADE  0100               	movlb	0	; () banked
  9953  00DAE0  5196               	movf	_motivo_ingreso_de_numeros& (0+255),w,b
  9954  00DAE2  0100               	movlb	0	; () banked
  9955  00DAE4  1197               	iorwf	(_motivo_ingreso_de_numeros+1)& (0+255),w,b
  9956  00DAE6  A4D8               	btfss	status,2,c
  9957  00DAE8  D02D               	goto	l190
  9958                           
  9959                           ; BSR set to: 0
  9960                           ;main.c: 122: array_contrasenia_ingresada[numeros_ingresados] = num;
  9961  00DAEA  90D8               	bcf	status,0,c
  9962  00DAEC  0100               	movlb	0	; () banked
  9963  00DAEE  3598               	rlcf	_numeros_ingresados& (0+255),w,b
  9964  00DAF0  6ED9               	movwf	fsr2l,c
  9965  00DAF2  0100               	movlb	0	; () banked
  9966  00DAF4  3599               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
  9967  00DAF6  6EDA               	movwf	fsr2h,c
  9968  00DAF8  0E60               	movlw	low _array_contrasenia_ingresada
  9969  00DAFA  26D9               	addwf	fsr2l,f,c
  9970  00DAFC  0E00               	movlw	high _array_contrasenia_ingresada
  9971  00DAFE  22DA               	addwfc	fsr2h,f,c
  9972  00DB00  C039  FFDE         	movff	guarda_numero_ingresado@num,postinc2
  9973  00DB04  C03A  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
  9974                           
  9975                           ; BSR set to: 0
  9976                           ;main.c: 123: lcd_gotoxy(numeros_ingresados + 1, 2);
  9977  00DB08  0E02               	movlw	2
  9978  00DB0A  6E05               	movwf	lcd_gotoxy@y,c
  9979  00DB0C  0100               	movlb	0	; () banked
  9980  00DB0E  2998               	incf	_numeros_ingresados& (0+255),w,b
  9981  00DB10  EC44  F069         	call	_lcd_gotoxy
  9982                           
  9983                           ;main.c: 124: sprintf(buffer2, "%01u", num);
  9984  00DB14  0EA9               	movlw	low _buffer2
  9985  00DB16  6E22               	movwf	sprintf@sp,c
  9986  00DB18  0E00               	movlw	high _buffer2
  9987  00DB1A  6E23               	movwf	sprintf@sp+1,c
  9988  00DB1C  0EF2               	movlw	low STR_13
  9989  00DB1E  6E24               	movwf	sprintf@f,c
  9990  00DB20  0EFF               	movlw	high STR_13
  9991  00DB22  6E25               	movwf	sprintf@f+1,c
  9992  00DB24  C039  F026         	movff	guarda_numero_ingresado@num,?_sprintf+4
  9993  00DB28  C03A  F027         	movff	guarda_numero_ingresado@num+1,?_sprintf+5
  9994  00DB2C  EC09  F07C         	call	_sprintf	;wreg free
  9995                           
  9996                           ;main.c: 125: lcd_putrs(buffer2);
  9997  00DB30  0EA9               	movlw	low _buffer2
  9998  00DB32  6E09               	movwf	lcd_putrs@ptr,c
  9999  00DB34  0E00               	movlw	high _buffer2
 10000  00DB36  6E0A               	movwf	lcd_putrs@ptr+1,c
 10001  00DB38  EC9B  F06A         	call	_lcd_putrs	;wreg free
 10002                           
 10003                           ;main.c: 126: numeros_ingresados++;
 10004  00DB3C  0100               	movlb	0	; () banked
 10005  00DB3E  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
 10006  00DB40  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
 10007                           
 10008                           ;main.c: 127: } else {
 10009  00DB42  0012               	return	
 10010  00DB44                     l190:
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;main.c: 128: numeros_para_fecha[numeros_ingresados] = num;
 10014                           
 10015                           ; BSR set to: 0
 10016  00DB44  90D8               	bcf	status,0,c
 10017  00DB46  0100               	movlb	0	; () banked
 10018  00DB48  3598               	rlcf	_numeros_ingresados& (0+255),w,b
 10019  00DB4A  6ED9               	movwf	fsr2l,c
 10020  00DB4C  0100               	movlb	0	; () banked
 10021  00DB4E  3599               	rlcf	(_numeros_ingresados+1)& (0+255),w,b
 10022  00DB50  6EDA               	movwf	fsr2h,c
 10023  00DB52  0E80               	movlw	low _numeros_para_fecha
 10024  00DB54  26D9               	addwf	fsr2l,f,c
 10025  00DB56  0E00               	movlw	high _numeros_para_fecha
 10026  00DB58  22DA               	addwfc	fsr2h,f,c
 10027  00DB5A  C039  FFDE         	movff	guarda_numero_ingresado@num,postinc2
 10028  00DB5E  C03A  FFDD         	movff	guarda_numero_ingresado@num+1,postdec2
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;main.c: 129: numeros_ingresados++;
 10032  00DB62  0100               	movlb	0	; () banked
 10033  00DB64  4B98               	infsnz	_numeros_ingresados& (0+255),f,b
 10034  00DB66  2B99               	incf	(_numeros_ingresados+1)& (0+255),f,b
 10035  00DB68  0012               	return	
 10036  00DB6A                     __end_of_guarda_numero_ingresado:
 10037                           	opt stack 0
 10038                           tblptru	equ	0xFF8
 10039                           tblptrh	equ	0xFF7
 10040                           tblptrl	equ	0xFF6
 10041                           tablat	equ	0xFF5
 10042                           prodh	equ	0xFF4
 10043                           prodl	equ	0xFF3
 10044                           intcon	equ	0xFF2
 10045                           postinc0	equ	0xFEE
 10046                           wreg	equ	0xFE8
 10047                           postinc1	equ	0xFE6
 10048                           postdec1	equ	0xFE5
 10049                           fsr1h	equ	0xFE2
 10050                           fsr1l	equ	0xFE1
 10051                           indf2	equ	0xFDF
 10052                           postinc2	equ	0xFDE
 10053                           postdec2	equ	0xFDD
 10054                           fsr2h	equ	0xFDA
 10055                           fsr2l	equ	0xFD9
 10056                           status	equ	0xFD8
 10057                           
 10058 ;; *************** function _sprintf *****************
 10059 ;; Defined at:
 10060 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;  sp              2   33[COMRAM] PTR unsigned char 
 10063 ;;		 -> buffer2(20), 
 10064 ;;  f               2   35[COMRAM] PTR const unsigned char 
 10065 ;;		 -> STR_13(5), STR_8(15), STR_7(15), 
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;  tmpval          4    0        struct .
 10068 ;;  cp              3    0        PTR const unsigned char 
 10069 ;;  width           2   53[COMRAM] int 
 10070 ;;  val             2   50[COMRAM] unsigned int 
 10071 ;;  ap              2   47[COMRAM] PTR void [1]
 10072 ;;		 -> ?_sprintf(2), 
 10073 ;;  len             2    0        unsigned int 
 10074 ;;  c               1   55[COMRAM] char 
 10075 ;;  prec            1   52[COMRAM] char 
 10076 ;;  flag            1   49[COMRAM] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  2   33[COMRAM] int 
 10079 ;; Registers used:
 10080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10086 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10089 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10090 ;;Total ram usage:       23 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    1
 10093 ;; This function calls:
 10094 ;;		___lwdiv
 10095 ;;		___lwmod
 10096 ;;		___wmul
 10097 ;;		_isdigit
 10098 ;; This function is called by:
 10099 ;;		_setDiaMesAnio
 10100 ;;		_setHoraMinutoSegundo
 10101 ;;		_guarda_numero_ingresado
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           	psect	text49
 10106  00F812                     __ptext49:
 10107                           	opt stack 0
 10108  00F812                     _sprintf:
 10109                           	opt stack 26
 10110                           
 10111                           ;doprnt.c: 494: va_list ap;
 10112                           ;doprnt.c: 499: signed char c;
 10113                           ;doprnt.c: 501: int width;
 10114                           ;doprnt.c: 506: signed char prec;
 10115                           ;doprnt.c: 508: unsigned char flag;
 10116                           ;doprnt.c: 523: union {
 10117                           ;doprnt.c: 524: unsigned long vd;
 10118                           ;doprnt.c: 525: double integ;
 10119                           ;doprnt.c: 526: } tmpval;
 10120                           ;doprnt.c: 528: unsigned int val;
 10121                           ;doprnt.c: 529: unsigned len;
 10122                           ;doprnt.c: 530: const char * cp;
 10123                           ;doprnt.c: 533: *ap = __va_start();
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;incstack = 0
 10127  00F812  0E26               	movlw	low (?_sprintf+4)
 10128  00F814  6E30               	movwf	sprintf@ap,c
 10129  00F816  0E00               	movlw	high (?_sprintf+4)
 10130  00F818  6E31               	movwf	sprintf@ap+1,c
 10131                           
 10132                           ;doprnt.c: 536: while(c = *f++) {
 10133  00F81A  D100               	goto	u4430
 10134  00F81C                     
 10135                           ;doprnt.c: 538: if(c != '%')
 10136  00F81C  0E25               	movlw	37
 10137  00F81E  1838               	xorwf	sprintf@c,w,c
 10138  00F820  B4D8               	btfsc	status,2,c
 10139  00F822  D009               	goto	l536
 10140                           
 10141                           ;doprnt.c: 540: {
 10142                           ;doprnt.c: 541: ((*sp++ = (c)));
 10143  00F824  C022  FFD9         	movff	sprintf@sp,fsr2l
 10144  00F828  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10145  00F82C  C038  FFDF         	movff	sprintf@c,indf2
 10146  00F830  4A22               	infsnz	sprintf@sp,f,c
 10147  00F832  2A23               	incf	sprintf@sp+1,f,c
 10148                           
 10149                           ;doprnt.c: 542: continue;
 10150  00F834  D0F3               	goto	u4430
 10151  00F836                     l536:
 10152                           
 10153                           ;doprnt.c: 543: }
 10154                           ;doprnt.c: 546: width = 0;
 10155  00F836  0E00               	movlw	0
 10156  00F838  6E37               	movwf	sprintf@width+1,c
 10157  00F83A  0E00               	movlw	0
 10158  00F83C  6E36               	movwf	sprintf@width,c
 10159                           
 10160                           ;doprnt.c: 548: flag = 0;
 10161  00F83E  0E00               	movlw	0
 10162  00F840  6E32               	movwf	sprintf@flag,c
 10163                           
 10164                           ;doprnt.c: 551: switch(*f) {
 10165                           
 10166                           ;doprnt.c: 550: for(;;) {
 10167  00F842  D003               	goto	l538
 10168  00F844                     
 10169                           ;doprnt.c: 580: flag |= 0x04;
 10170  00F844  8432               	bsf	sprintf@flag,2,c
 10171                           
 10172                           ;doprnt.c: 581: f++;
 10173  00F846  4A24               	infsnz	sprintf@f,f,c
 10174  00F848  2A25               	incf	sprintf@f+1,f,c
 10175  00F84A                     l538:
 10176  00F84A  C024  FFF6         	movff	sprintf@f,tblptrl
 10177  00F84E  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10178  00F852                     	if	0	;tblptru may be non-zero
 10179  00F852                     	endif
 10180  00F852                     	if	0	;tblptru may be non-zero
 10181  00F852                     	endif
 10182  00F852  0008               	tblrd		*
 10183  00F854  50F5               	movf	tablat,w,c
 10184                           
 10185                           ; Switch size 1, requested type "space"
 10186                           ; Number of cases is 1, Range of values is 48 to 48
 10187                           ; switch strategies available:
 10188                           ; Name         Instructions Cycles
 10189                           ; simple_byte            4     3 (average)
 10190                           ;	Chosen strategy is simple_byte
 10191  00F856  0A30               	xorlw	48	; case 48
 10192  00F858  B4D8               	btfsc	status,2,c
 10193  00F85A  D7F4               	goto	l539
 10194                           
 10195                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10196                           
 10197                           ;doprnt.c: 586: }
 10198                           
 10199                           ;doprnt.c: 585: break;
 10200  00F85C  C024  FFF6         	movff	sprintf@f,tblptrl
 10201  00F860  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10202  00F864                     	if	0	;tblptru may be non-zero
 10203  00F864                     	endif
 10204  00F864                     	if	0	;tblptru may be non-zero
 10205  00F864                     	endif
 10206  00F864  0008               	tblrd		*
 10207  00F866  50F5               	movf	tablat,w,c
 10208  00F868  EC35  F069         	call	_isdigit
 10209  00F86C  A0D8               	btfss	status,0,c
 10210  00F86E  D036               	goto	l546
 10211                           
 10212                           ;doprnt.c: 598: width = 0;
 10213  00F870  0E00               	movlw	0
 10214  00F872  6E37               	movwf	sprintf@width+1,c
 10215  00F874  0E00               	movlw	0
 10216  00F876  6E36               	movwf	sprintf@width,c
 10217  00F878                     
 10218                           ;doprnt.c: 600: width *= 10;
 10219  00F878  C036  F01C         	movff	sprintf@width,___wmul@multiplier
 10220  00F87C  C037  F01D         	movff	sprintf@width+1,___wmul@multiplier+1
 10221  00F880  0E00               	movlw	0
 10222  00F882  6E1F               	movwf	___wmul@multiplicand+1,c
 10223  00F884  0E0A               	movlw	10
 10224  00F886  6E1E               	movwf	___wmul@multiplicand,c
 10225  00F888  EC79  F069         	call	___wmul	;wreg free
 10226  00F88C  C01C  F036         	movff	?___wmul,sprintf@width
 10227  00F890  C01D  F037         	movff	?___wmul+1,sprintf@width+1
 10228                           
 10229                           ;doprnt.c: 601: width += *f++ - '0';
 10230  00F894  0ED0               	movlw	208
 10231  00F896  6E2C               	movwf	??_sprintf& (0+255),c
 10232  00F898  0EFF               	movlw	255
 10233  00F89A  6E2D               	movwf	(??_sprintf+1)& (0+255),c
 10234  00F89C  C024  FFF6         	movff	sprintf@f,tblptrl
 10235  00F8A0  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10236  00F8A4                     	if	0	;tblptru may be non-zero
 10237  00F8A4                     	endif
 10238  00F8A4                     	if	0	;tblptru may be non-zero
 10239  00F8A4                     	endif
 10240  00F8A4  0008               	tblrd		*
 10241  00F8A6  50F5               	movf	tablat,w,c
 10242  00F8A8  6E2E               	movwf	(??_sprintf+2)& (0+255),c
 10243  00F8AA  6A2F               	clrf	(??_sprintf+3)& (0+255),c
 10244  00F8AC  502C               	movf	??_sprintf,w,c
 10245  00F8AE  262E               	addwf	??_sprintf+2,f,c
 10246  00F8B0  502D               	movf	??_sprintf+1,w,c
 10247  00F8B2  222F               	addwfc	??_sprintf+3,f,c
 10248  00F8B4  502E               	movf	??_sprintf+2,w,c
 10249  00F8B6  2636               	addwf	sprintf@width,f,c
 10250  00F8B8  502F               	movf	??_sprintf+3,w,c
 10251  00F8BA  2237               	addwfc	sprintf@width+1,f,c
 10252  00F8BC  4A24               	infsnz	sprintf@f,f,c
 10253  00F8BE  2A25               	incf	sprintf@f+1,f,c
 10254                           
 10255                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10256  00F8C0  C024  FFF6         	movff	sprintf@f,tblptrl
 10257  00F8C4  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10258  00F8C8                     	if	0	;tblptru may be non-zero
 10259  00F8C8                     	endif
 10260  00F8C8                     	if	0	;tblptru may be non-zero
 10261  00F8C8                     	endif
 10262  00F8C8  0008               	tblrd		*
 10263  00F8CA  50F5               	movf	tablat,w,c
 10264  00F8CC  EC35  F069         	call	_isdigit
 10265  00F8D0  A0D8               	btfss	status,0,c
 10266  00F8D2  D004               	goto	l546
 10267  00F8D4  D7D1               	goto	l544
 10268  00F8D6                     
 10269                           ;doprnt.c: 818: flag |= 0xC0;
 10270  00F8D6  0EC0               	movlw	192
 10271  00F8D8  1232               	iorwf	sprintf@flag,f,c
 10272                           
 10273                           ;doprnt.c: 822: }
 10274                           
 10275                           ;doprnt.c: 819: break;
 10276  00F8DA  D011               	goto	l551
 10277  00F8DC                     l546:
 10278  00F8DC  C024  FFF6         	movff	sprintf@f,tblptrl
 10279  00F8E0  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10280  00F8E4  4A24               	infsnz	sprintf@f,f,c
 10281  00F8E6  2A25               	incf	sprintf@f+1,f,c
 10282  00F8E8                     	if	0	;tblptru may be non-zero
 10283  00F8E8                     	endif
 10284  00F8E8                     	if	0	;tblptru may be non-zero
 10285  00F8E8                     	endif
 10286  00F8E8  0008               	tblrd		*
 10287  00F8EA  CFF5 F038          	movff	tablat,sprintf@c
 10288  00F8EE  5038               	movf	sprintf@c,w,c
 10289                           
 10290                           ; Switch size 1, requested type "space"
 10291                           ; Number of cases is 2, Range of values is 0 to 117
 10292                           ; switch strategies available:
 10293                           ; Name         Instructions Cycles
 10294                           ; simple_byte            7     4 (average)
 10295                           ;	Chosen strategy is simple_byte
 10296  00F8F0  0A00               	xorlw	0	; case 0
 10297  00F8F2  B4D8               	btfsc	status,2,c
 10298  00F8F4  D09F               	goto	u4440
 10299  00F8F6  0A75               	xorlw	117	; case 117
 10300  00F8F8  B4D8               	btfsc	status,2,c
 10301  00F8FA  D7ED               	goto	l550
 10302  00F8FC  D08F               	goto	u4430
 10303  00F8FE                     l551:
 10304                           
 10305                           ;doprnt.c: 1273: {
 10306                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10307  00F8FE  C030  FFD9         	movff	sprintf@ap,fsr2l
 10308  00F902  C031  FFDA         	movff	sprintf@ap+1,fsr2h
 10309  00F906  CFDE F033          	movff	postinc2,sprintf@val
 10310  00F90A  CFDD F034          	movff	postdec2,sprintf@val+1
 10311  00F90E  0E02               	movlw	2
 10312  00F910  2630               	addwf	sprintf@ap,f,c
 10313  00F912  0E00               	movlw	0
 10314  00F914  2231               	addwfc	sprintf@ap+1,f,c
 10315                           
 10316                           ;doprnt.c: 1287: }
 10317                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10318  00F916  0E01               	movlw	1
 10319  00F918  6E38               	movwf	sprintf@c,c
 10320  00F91A                     l4063:
 10321  00F91A  0E05               	movlw	5
 10322  00F91C  1838               	xorwf	sprintf@c,w,c
 10323  00F91E  B4D8               	btfsc	status,2,c
 10324  00F920  D012               	goto	u4360
 10325                           
 10326                           ;doprnt.c: 1306: if(val < dpowers[c])
 10327  00F922  5038               	movf	sprintf@c,w,c
 10328  00F924  0D02               	mullw	2
 10329  00F926  0EE3               	movlw	low _dpowers
 10330  00F928  24F3               	addwf	prodl,w,c
 10331  00F92A  6EF6               	movwf	tblptrl,c
 10332  00F92C  0EFE               	movlw	high _dpowers
 10333  00F92E  20F4               	addwfc	prodh,w,c
 10334  00F930  6EF7               	movwf	tblptrh,c
 10335  00F932                     	if	0	;There are less than 3 active tblptr bytes
 10336  00F932                     	endif
 10337  00F932  0009               	tblrd		*+
 10338  00F934  50F5               	movf	tablat,w,c
 10339  00F936  5C33               	subwf	sprintf@val,w,c
 10340  00F938  0009               	tblrd		*+
 10341  00F93A  50F5               	movf	tablat,w,c
 10342  00F93C  5834               	subwfb	sprintf@val+1,w,c
 10343  00F93E  A0D8               	btfss	status,0,c
 10344  00F940  D002               	goto	u4360
 10345                           
 10346                           ;doprnt.c: 1307: break;
 10347  00F942  2A38               	incf	sprintf@c,f,c
 10348  00F944  D7EA               	goto	l4063
 10349  00F946                     u4360:
 10350                           
 10351                           ;doprnt.c: 1381: if(width > c)
 10352  00F946  0E80               	movlw	128
 10353  00F948  BE38               	btfsc	sprintf@c,7,c
 10354  00F94A  0E7F               	movlw	127
 10355  00F94C  6E2C               	movwf	??_sprintf& (0+255),c
 10356  00F94E  5036               	movf	sprintf@width,w,c
 10357  00F950  5C38               	subwf	sprintf@c,w,c
 10358  00F952  5037               	movf	sprintf@width+1,w,c
 10359  00F954  0A80               	xorlw	128
 10360  00F956  582C               	subwfb	??_sprintf& (0+255),w,c
 10361  00F958  B0D8               	btfsc	status,0,c
 10362  00F95A  D007               	goto	l555
 10363                           
 10364                           ;doprnt.c: 1382: width -= c;
 10365  00F95C  5038               	movf	sprintf@c,w,c
 10366  00F95E  5E36               	subwf	sprintf@width,f,c
 10367  00F960  0E00               	movlw	0
 10368  00F962  BE38               	btfsc	sprintf@c,7,c
 10369  00F964  0EFF               	movlw	255
 10370  00F966  5A37               	subwfb	sprintf@width+1,f,c
 10371  00F968  D004               	goto	l556
 10372  00F96A                     l555:
 10373                           
 10374                           ;doprnt.c: 1383: else
 10375                           ;doprnt.c: 1384: width = 0;
 10376  00F96A  0E00               	movlw	0
 10377  00F96C  6E37               	movwf	sprintf@width+1,c
 10378  00F96E  0E00               	movlw	0
 10379  00F970  6E36               	movwf	sprintf@width,c
 10380  00F972                     l556:
 10381                           
 10382                           ;doprnt.c: 1387: if(flag & 0x04) {
 10383  00F972  A432               	btfss	sprintf@flag,2,c
 10384  00F974  D010               	goto	l557
 10385  00F976                     
 10386                           ;doprnt.c: 1415: if(width)
 10387  00F976  5036               	movf	sprintf@width,w,c
 10388  00F978  1037               	iorwf	sprintf@width+1,w,c
 10389  00F97A  B4D8               	btfsc	status,2,c
 10390  00F97C  D01F               	goto	u4420
 10391                           
 10392                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10393                           
 10394                           ;doprnt.c: 1416: do
 10395  00F97E  C022  FFD9         	movff	sprintf@sp,fsr2l
 10396  00F982  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10397  00F986  0E30               	movlw	48
 10398  00F988  6EDF               	movwf	indf2,c
 10399  00F98A  4A22               	infsnz	sprintf@sp,f,c
 10400  00F98C  2A23               	incf	sprintf@sp+1,f,c
 10401                           
 10402                           ;doprnt.c: 1418: while(--width);
 10403  00F98E  0636               	decf	sprintf@width,f,c
 10404  00F990  A0D8               	btfss	status,0,c
 10405  00F992  0637               	decf	sprintf@width+1,f,c
 10406  00F994  D7F0               	goto	L4
 10407  00F996                     l557:
 10408                           
 10409                           ;doprnt.c: 1422: {
 10410                           ;doprnt.c: 1424: if(width
 10411                           ;doprnt.c: 1428: )
 10412  00F996  5036               	movf	sprintf@width,w,c
 10413  00F998  1037               	iorwf	sprintf@width+1,w,c
 10414  00F99A  B4D8               	btfsc	status,2,c
 10415  00F99C  D00F               	goto	u4420
 10416  00F99E                     u4410:
 10417                           
 10418                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10419                           
 10420                           ;doprnt.c: 1429: do
 10421  00F99E  C022  FFD9         	movff	sprintf@sp,fsr2l
 10422  00F9A2  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10423  00F9A6  0E20               	movlw	32
 10424  00F9A8  6EDF               	movwf	indf2,c
 10425  00F9AA  4A22               	infsnz	sprintf@sp,f,c
 10426  00F9AC  2A23               	incf	sprintf@sp+1,f,c
 10427                           
 10428                           ;doprnt.c: 1431: while(--width);
 10429  00F9AE  0636               	decf	sprintf@width,f,c
 10430  00F9B0  A0D8               	btfss	status,0,c
 10431  00F9B2  0637               	decf	sprintf@width+1,f,c
 10432  00F9B4  5036               	movf	sprintf@width,w,c
 10433  00F9B6  1037               	iorwf	sprintf@width+1,w,c
 10434  00F9B8  A4D8               	btfss	status,2,c
 10435  00F9BA  D7F1               	goto	u4410
 10436  00F9BC                     u4420:
 10437                           
 10438                           ;doprnt.c: 1469: }
 10439                           ;doprnt.c: 1472: prec = c;
 10440  00F9BC  C038  F035         	movff	sprintf@c,sprintf@prec
 10441                           
 10442                           ;doprnt.c: 1474: while(prec--) {
 10443  00F9C0  D029               	goto	l565
 10444  00F9C2                     
 10445                           ;doprnt.c: 1478: {
 10446                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10447  00F9C2  5035               	movf	sprintf@prec,w,c
 10448  00F9C4  0D02               	mullw	2
 10449  00F9C6  0EE3               	movlw	low _dpowers
 10450  00F9C8  24F3               	addwf	prodl,w,c
 10451  00F9CA  6EF6               	movwf	tblptrl,c
 10452  00F9CC  0EFE               	movlw	high _dpowers
 10453  00F9CE  20F4               	addwfc	prodh,w,c
 10454  00F9D0  6EF7               	movwf	tblptrh,c
 10455  00F9D2                     	if	0	;There are less than 3 active tblptr bytes
 10456  00F9D2                     	endif
 10457  00F9D2  0009               	tblrd		*+
 10458  00F9D4  CFF5 F003          	movff	tablat,___lwdiv@divisor
 10459  00F9D8  000A               	tblrd		*-
 10460  00F9DA  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
 10461  00F9DE  C033  F001         	movff	sprintf@val,___lwdiv@dividend
 10462  00F9E2  C034  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
 10463  00F9E6  ECC4  F06A         	call	___lwdiv	;wreg free
 10464  00F9EA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
 10465  00F9EE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
 10466  00F9F2  0E00               	movlw	0
 10467  00F9F4  6E0B               	movwf	___lwmod@divisor+1,c
 10468  00F9F6  0E0A               	movlw	10
 10469  00F9F8  6E0A               	movwf	___lwmod@divisor,c
 10470  00F9FA  ECE1  F069         	call	___lwmod	;wreg free
 10471  00F9FE  5008               	movf	?___lwmod,w,c
 10472  00FA00  0F30               	addlw	48
 10473  00FA02  6E38               	movwf	sprintf@c,c
 10474                           
 10475                           ;doprnt.c: 1523: }
 10476                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10477  00FA04  C022  FFD9         	movff	sprintf@sp,fsr2l
 10478  00FA08  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10479  00FA0C  C038  FFDF         	movff	sprintf@c,indf2
 10480  00FA10  4A22               	infsnz	sprintf@sp,f,c
 10481  00FA12  2A23               	incf	sprintf@sp+1,f,c
 10482  00FA14                     l565:
 10483  00FA14  0635               	decf	sprintf@prec,f,c
 10484  00FA16  2835               	incf	sprintf@prec,w,c
 10485  00FA18  A4D8               	btfss	status,2,c
 10486  00FA1A  D7D3               	goto	l566
 10487  00FA1C                     u4430:
 10488  00FA1C  C024  FFF6         	movff	sprintf@f,tblptrl
 10489  00FA20  C025  FFF7         	movff	sprintf@f+1,tblptrh
 10490  00FA24  4A24               	infsnz	sprintf@f,f,c
 10491  00FA26  2A25               	incf	sprintf@f+1,f,c
 10492  00FA28                     	if	0	;tblptru may be non-zero
 10493  00FA28                     	endif
 10494  00FA28                     	if	0	;tblptru may be non-zero
 10495  00FA28                     	endif
 10496  00FA28  0008               	tblrd		*
 10497  00FA2A  CFF5 F038          	movff	tablat,sprintf@c
 10498  00FA2E  5038               	movf	sprintf@c,w,c
 10499  00FA30  A4D8               	btfss	status,2,c
 10500  00FA32  D6F4               	goto	l535
 10501  00FA34                     u4440:
 10502                           
 10503                           ;doprnt.c: 1538: *sp = 0;
 10504                           
 10505                           ;doprnt.c: 1525: }
 10506                           ;doprnt.c: 1533: }
 10507                           ;doprnt.c: 1535: alldone:
 10508  00FA34  C022  FFD9         	movff	sprintf@sp,fsr2l
 10509  00FA38  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 10510  00FA3C  0E00               	movlw	0
 10511  00FA3E  6EDF               	movwf	indf2,c
 10512  00FA40  0012               	return	
 10513  00FA42                     __end_of_sprintf:
 10514                           	opt stack 0
 10515                           tblptru	equ	0xFF8
 10516                           tblptrh	equ	0xFF7
 10517                           tblptrl	equ	0xFF6
 10518                           tablat	equ	0xFF5
 10519                           prodh	equ	0xFF4
 10520                           prodl	equ	0xFF3
 10521                           intcon	equ	0xFF2
 10522                           postinc0	equ	0xFEE
 10523                           wreg	equ	0xFE8
 10524                           postinc1	equ	0xFE6
 10525                           postdec1	equ	0xFE5
 10526                           fsr1h	equ	0xFE2
 10527                           fsr1l	equ	0xFE1
 10528                           indf2	equ	0xFDF
 10529                           postinc2	equ	0xFDE
 10530                           postdec2	equ	0xFDD
 10531                           fsr2h	equ	0xFDA
 10532                           fsr2l	equ	0xFD9
 10533                           status	equ	0xFD8
 10534                           
 10535 ;; *************** function _isdigit *****************
 10536 ;; Defined at:
 10537 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;  c               1    wreg     unsigned char 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;  c               1    2[COMRAM] unsigned char 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;		None               void
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10554 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10555 ;;Total ram usage:        3 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_sprintf
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564                           	psect	text50
 10565  00D26A                     __ptext50:
 10566                           	opt stack 0
 10567  00D26A                     _isdigit:
 10568                           	opt stack 26
 10569                           
 10570                           ;incstack = 0
 10571                           ;isdigit@c stored from wreg
 10572  00D26A  6E03               	movwf	isdigit@c,c
 10573  00D26C  0E00               	movlw	0
 10574  00D26E  6E02               	movwf	_isdigit$1990,c
 10575  00D270  0E3A               	movlw	58
 10576  00D272  6003               	cpfslt	isdigit@c,c
 10577  00D274  D005               	goto	l1009
 10578  00D276  0E2F               	movlw	47
 10579  00D278  6403               	cpfsgt	isdigit@c,c
 10580  00D27A  D002               	goto	l1009
 10581  00D27C  0E01               	movlw	1
 10582  00D27E  6E02               	movwf	_isdigit$1990,c
 10583  00D280                     l1009:
 10584  00D280  C002  F001         	movff	_isdigit$1990,??_isdigit
 10585  00D284  3001               	rrcf	??_isdigit,w,c
 10586  00D286  0012               	return	
 10587  00D288                     __end_of_isdigit:
 10588                           	opt stack 0
 10589                           tblptru	equ	0xFF8
 10590                           tblptrh	equ	0xFF7
 10591                           tblptrl	equ	0xFF6
 10592                           tablat	equ	0xFF5
 10593                           prodh	equ	0xFF4
 10594                           prodl	equ	0xFF3
 10595                           intcon	equ	0xFF2
 10596                           postinc0	equ	0xFEE
 10597                           wreg	equ	0xFE8
 10598                           postinc1	equ	0xFE6
 10599                           postdec1	equ	0xFE5
 10600                           fsr1h	equ	0xFE2
 10601                           fsr1l	equ	0xFE1
 10602                           indf2	equ	0xFDF
 10603                           postinc2	equ	0xFDE
 10604                           postdec2	equ	0xFDD
 10605                           fsr2h	equ	0xFDA
 10606                           fsr2l	equ	0xFD9
 10607                           status	equ	0xFD8
 10608                           
 10609 ;; *************** function ___wmul *****************
 10610 ;; Defined at:
 10611 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
 10612 ;; Parameters:    Size  Location     Type
 10613 ;;  multiplier      2   27[COMRAM] unsigned int 
 10614 ;;  multiplicand    2   29[COMRAM] unsigned int 
 10615 ;; Auto vars:     Size  Location     Type
 10616 ;;  product         2   31[COMRAM] unsigned int 
 10617 ;; Return value:  Size  Location     Type
 10618 ;;                  2   27[COMRAM] unsigned int 
 10619 ;; Registers used:
 10620 ;;		wreg, status,2, status,0, prodl, prodh
 10621 ;; Tracked objects:
 10622 ;;		On entry : 0/0
 10623 ;;		On exit  : 0/0
 10624 ;;		Unchanged: 0/0
 10625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10630 ;;Total ram usage:        6 bytes
 10631 ;; Hardware stack levels used:    1
 10632 ;; This function calls:
 10633 ;;		Nothing
 10634 ;; This function is called by:
 10635 ;;		_covertir_valores_de_array_a_escala_decimal
 10636 ;;		_sprintf
 10637 ;;		_eval_poly
 10638 ;; This function uses a non-reentrant model
 10639 ;;
 10640                           
 10641                           	psect	text51
 10642  00D2F2                     __ptext51:
 10643                           	opt stack 0
 10644  00D2F2                     ___wmul:
 10645                           	opt stack 26
 10646                           
 10647                           ;incstack = 0
 10648  00D2F2  501C               	movf	___wmul@multiplier,w,c
 10649  00D2F4  021E               	mulwf	___wmul@multiplicand,c
 10650  00D2F6  CFF3 F020          	movff	prodl,___wmul@product
 10651  00D2FA  CFF4 F021          	movff	prodh,___wmul@product+1
 10652  00D2FE  501C               	movf	___wmul@multiplier,w,c
 10653  00D300  021F               	mulwf	___wmul@multiplicand+1,c
 10654  00D302  50F3               	movf	prodl,w,c
 10655  00D304  2621               	addwf	___wmul@product+1,f,c
 10656  00D306  501D               	movf	___wmul@multiplier+1,w,c
 10657  00D308  021E               	mulwf	___wmul@multiplicand,c
 10658  00D30A  50F3               	movf	prodl,w,c
 10659  00D30C  2621               	addwf	___wmul@product+1,f,c
 10660  00D30E  C020  F01C         	movff	___wmul@product,?___wmul
 10661  00D312  C021  F01D         	movff	___wmul@product+1,?___wmul+1
 10662  00D316  0012               	return	
 10663  00D318                     __end_of___wmul:
 10664                           	opt stack 0
 10665                           tblptru	equ	0xFF8
 10666                           tblptrh	equ	0xFF7
 10667                           tblptrl	equ	0xFF6
 10668                           tablat	equ	0xFF5
 10669                           prodh	equ	0xFF4
 10670                           prodl	equ	0xFF3
 10671                           intcon	equ	0xFF2
 10672                           postinc0	equ	0xFEE
 10673                           wreg	equ	0xFE8
 10674                           postinc1	equ	0xFE6
 10675                           postdec1	equ	0xFE5
 10676                           fsr1h	equ	0xFE2
 10677                           fsr1l	equ	0xFE1
 10678                           indf2	equ	0xFDF
 10679                           postinc2	equ	0xFDE
 10680                           postdec2	equ	0xFDD
 10681                           fsr2h	equ	0xFDA
 10682                           fsr2l	equ	0xFD9
 10683                           status	equ	0xFD8
 10684                           
 10685 ;; *************** function ___lwmod *****************
 10686 ;; Defined at:
 10687 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;  dividend        2    7[COMRAM] unsigned int 
 10690 ;;  divisor         2    9[COMRAM] unsigned int 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  counter         1   11[COMRAM] unsigned char 
 10693 ;; Return value:  Size  Location     Type
 10694 ;;                  2    7[COMRAM] unsigned int 
 10695 ;; Registers used:
 10696 ;;		wreg, status,2, status,0
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10706 ;;Total ram usage:        5 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; This function calls:
 10709 ;;		Nothing
 10710 ;; This function is called by:
 10711 ;;		_sprintf
 10712 ;; This function uses a non-reentrant model
 10713 ;;
 10714                           
 10715                           	psect	text52
 10716  00D3C2                     __ptext52:
 10717                           	opt stack 0
 10718  00D3C2                     ___lwmod:
 10719                           	opt stack 26
 10720                           
 10721                           ;incstack = 0
 10722  00D3C2  500A               	movf	___lwmod@divisor,w,c
 10723  00D3C4  100B               	iorwf	___lwmod@divisor+1,w,c
 10724  00D3C6  B4D8               	btfsc	status,2,c
 10725  00D3C8  D018               	goto	l1103
 10726  00D3CA  0E01               	movlw	1
 10727  00D3CC  6E0C               	movwf	___lwmod@counter,c
 10728  00D3CE  D004               	goto	l1098
 10729  00D3D0  90D8               	bcf	status,0,c
 10730  00D3D2  360A               	rlcf	___lwmod@divisor,f,c
 10731  00D3D4  360B               	rlcf	___lwmod@divisor+1,f,c
 10732  00D3D6  2A0C               	incf	___lwmod@counter,f,c
 10733  00D3D8                     l1098:
 10734  00D3D8  AE0B               	btfss	___lwmod@divisor+1,7,c
 10735  00D3DA  D7FA               	goto	l1099
 10736  00D3DC                     u3950:
 10737  00D3DC  500A               	movf	___lwmod@divisor,w,c
 10738  00D3DE  5C08               	subwf	___lwmod@dividend,w,c
 10739  00D3E0  500B               	movf	___lwmod@divisor+1,w,c
 10740  00D3E2  5809               	subwfb	___lwmod@dividend+1,w,c
 10741  00D3E4  A0D8               	btfss	status,0,c
 10742  00D3E6  D004               	goto	l1102
 10743  00D3E8  500A               	movf	___lwmod@divisor,w,c
 10744  00D3EA  5E08               	subwf	___lwmod@dividend,f,c
 10745  00D3EC  500B               	movf	___lwmod@divisor+1,w,c
 10746  00D3EE  5A09               	subwfb	___lwmod@dividend+1,f,c
 10747  00D3F0                     l1102:
 10748  00D3F0  90D8               	bcf	status,0,c
 10749  00D3F2  320B               	rrcf	___lwmod@divisor+1,f,c
 10750  00D3F4  320A               	rrcf	___lwmod@divisor,f,c
 10751  00D3F6  2E0C               	decfsz	___lwmod@counter,f,c
 10752  00D3F8  D7F1               	goto	u3950
 10753  00D3FA                     l1103:
 10754  00D3FA  C008  F008         	movff	___lwmod@dividend,?___lwmod
 10755  00D3FE  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
 10756  00D402  0012               	return		;funcret
 10757  00D404                     __end_of___lwmod:
 10758                           	opt stack 0
 10759                           tblptru	equ	0xFF8
 10760                           tblptrh	equ	0xFF7
 10761                           tblptrl	equ	0xFF6
 10762                           tablat	equ	0xFF5
 10763                           prodh	equ	0xFF4
 10764                           prodl	equ	0xFF3
 10765                           intcon	equ	0xFF2
 10766                           postinc0	equ	0xFEE
 10767                           wreg	equ	0xFE8
 10768                           postinc1	equ	0xFE6
 10769                           postdec1	equ	0xFE5
 10770                           fsr1h	equ	0xFE2
 10771                           fsr1l	equ	0xFE1
 10772                           indf2	equ	0xFDF
 10773                           postinc2	equ	0xFDE
 10774                           postdec2	equ	0xFDD
 10775                           fsr2h	equ	0xFDA
 10776                           fsr2l	equ	0xFD9
 10777                           status	equ	0xFD8
 10778                           
 10779 ;; *************** function ___lwdiv *****************
 10780 ;; Defined at:
 10781 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;  dividend        2    0[COMRAM] unsigned int 
 10784 ;;  divisor         2    2[COMRAM] unsigned int 
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  quotient        2    4[COMRAM] unsigned int 
 10787 ;;  counter         1    6[COMRAM] unsigned char 
 10788 ;; Return value:  Size  Location     Type
 10789 ;;                  2    0[COMRAM] unsigned int 
 10790 ;; Registers used:
 10791 ;;		wreg, status,2, status,0
 10792 ;; Tracked objects:
 10793 ;;		On entry : 0/0
 10794 ;;		On exit  : 0/0
 10795 ;;		Unchanged: 0/0
 10796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10798 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10800 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10801 ;;Total ram usage:        7 bytes
 10802 ;; Hardware stack levels used:    1
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		_sprintf
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text53
 10811  00D588                     __ptext53:
 10812                           	opt stack 0
 10813  00D588                     ___lwdiv:
 10814                           	opt stack 26
 10815                           
 10816                           ;incstack = 0
 10817  00D588  0E00               	movlw	0
 10818  00D58A  6E06               	movwf	___lwdiv@quotient+1,c
 10819  00D58C  0E00               	movlw	0
 10820  00D58E  6E05               	movwf	___lwdiv@quotient,c
 10821  00D590  5003               	movf	___lwdiv@divisor,w,c
 10822  00D592  1004               	iorwf	___lwdiv@divisor+1,w,c
 10823  00D594  B4D8               	btfsc	status,2,c
 10824  00D596  D01C               	goto	l1093
 10825  00D598  0E01               	movlw	1
 10826  00D59A  6E07               	movwf	___lwdiv@counter,c
 10827  00D59C  D004               	goto	l1088
 10828  00D59E  90D8               	bcf	status,0,c
 10829  00D5A0  3603               	rlcf	___lwdiv@divisor,f,c
 10830  00D5A2  3604               	rlcf	___lwdiv@divisor+1,f,c
 10831  00D5A4  2A07               	incf	___lwdiv@counter,f,c
 10832  00D5A6                     l1088:
 10833  00D5A6  AE04               	btfss	___lwdiv@divisor+1,7,c
 10834  00D5A8  D7FA               	goto	l1089
 10835  00D5AA                     u3920:
 10836  00D5AA  90D8               	bcf	status,0,c
 10837  00D5AC  3605               	rlcf	___lwdiv@quotient,f,c
 10838  00D5AE  3606               	rlcf	___lwdiv@quotient+1,f,c
 10839  00D5B0  5003               	movf	___lwdiv@divisor,w,c
 10840  00D5B2  5C01               	subwf	___lwdiv@dividend,w,c
 10841  00D5B4  5004               	movf	___lwdiv@divisor+1,w,c
 10842  00D5B6  5802               	subwfb	___lwdiv@dividend+1,w,c
 10843  00D5B8  A0D8               	btfss	status,0,c
 10844  00D5BA  D005               	goto	l1092
 10845  00D5BC  5003               	movf	___lwdiv@divisor,w,c
 10846  00D5BE  5E01               	subwf	___lwdiv@dividend,f,c
 10847  00D5C0  5004               	movf	___lwdiv@divisor+1,w,c
 10848  00D5C2  5A02               	subwfb	___lwdiv@dividend+1,f,c
 10849  00D5C4  8005               	bsf	___lwdiv@quotient,0,c
 10850  00D5C6                     l1092:
 10851  00D5C6  90D8               	bcf	status,0,c
 10852  00D5C8  3204               	rrcf	___lwdiv@divisor+1,f,c
 10853  00D5CA  3203               	rrcf	___lwdiv@divisor,f,c
 10854  00D5CC  2E07               	decfsz	___lwdiv@counter,f,c
 10855  00D5CE  D7ED               	goto	u3920
 10856  00D5D0                     l1093:
 10857  00D5D0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 10858  00D5D4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10859  00D5D8  0012               	return		;funcret
 10860  00D5DA                     __end_of___lwdiv:
 10861                           	opt stack 0
 10862                           tblptru	equ	0xFF8
 10863                           tblptrh	equ	0xFF7
 10864                           tblptrl	equ	0xFF6
 10865                           tablat	equ	0xFF5
 10866                           prodh	equ	0xFF4
 10867                           prodl	equ	0xFF3
 10868                           intcon	equ	0xFF2
 10869                           postinc0	equ	0xFEE
 10870                           wreg	equ	0xFE8
 10871                           postinc1	equ	0xFE6
 10872                           postdec1	equ	0xFE5
 10873                           fsr1h	equ	0xFE2
 10874                           fsr1l	equ	0xFE1
 10875                           indf2	equ	0xFDF
 10876                           postinc2	equ	0xFDE
 10877                           postdec2	equ	0xFDD
 10878                           fsr2h	equ	0xFDA
 10879                           fsr2l	equ	0xFD9
 10880                           status	equ	0xFD8
 10881                           
 10882 ;; *************** function _selecciona_opcion_fecha_hora *****************
 10883 ;; Defined at:
 10884 ;;		line 409 in file "main.c"
 10885 ;; Parameters:    Size  Location     Type
 10886 ;;		None
 10887 ;; Auto vars:     Size  Location     Type
 10888 ;;		None
 10889 ;; Return value:  Size  Location     Type
 10890 ;;                  1    wreg      void 
 10891 ;; Registers used:
 10892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10893 ;; Tracked objects:
 10894 ;;		On entry : 0/0
 10895 ;;		On exit  : 0/0
 10896 ;;		Unchanged: 0/0
 10897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10900 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10901 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10902 ;;Total ram usage:        1 bytes
 10903 ;; Hardware stack levels used:    1
 10904 ;; Hardware stack levels required when called:    5
 10905 ;; This function calls:
 10906 ;;		_lcd_gotoxy
 10907 ;;		_lcd_putrs
 10908 ;; This function is called by:
 10909 ;;		_ir_a_pantalla_edicion
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           	psect	text54
 10914  00DA58                     __ptext54:
 10915                           	opt stack 0
 10916  00DA58                     _selecciona_opcion_fecha_hora:
 10917                           	opt stack 21
 10918                           
 10919                           ;main.c: 411: if (boton_seleccionar == 2) {
 10920                           
 10921                           ;incstack = 0
 10922  00DA58  0E02               	movlw	2
 10923  00DA5A  0100               	movlb	0	; () banked
 10924  00DA5C  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 10925  00DA5E  0100               	movlb	0	; () banked
 10926  00DA60  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 10927  00DA62  A4D8               	btfss	status,2,c
 10928  00DA64  D016               	goto	l320
 10929                           
 10930                           ; BSR set to: 0
 10931                           ;main.c: 412: lcd_gotoxy(1, 1);
 10932  00DA66  0E01               	movlw	1
 10933  00DA68  6E05               	movwf	lcd_gotoxy@y,c
 10934  00DA6A  0E01               	movlw	1
 10935  00DA6C  EC44  F069         	call	_lcd_gotoxy
 10936                           
 10937                           ;main.c: 413: lcd_putrs("Edt Date");
 10938  00DA70  0EA2               	movlw	low STR_25
 10939  00DA72  6E09               	movwf	lcd_putrs@ptr,c
 10940  00DA74  0EFF               	movlw	high STR_25
 10941  00DA76  6E0A               	movwf	lcd_putrs@ptr+1,c
 10942  00DA78  EC9B  F06A         	call	_lcd_putrs	;wreg free
 10943                           
 10944                           ;main.c: 414: lcd_gotoxy(1, 2);
 10945  00DA7C  0E02               	movlw	2
 10946  00DA7E  6E05               	movwf	lcd_gotoxy@y,c
 10947  00DA80  0E01               	movlw	1
 10948  00DA82  EC44  F069         	call	_lcd_gotoxy
 10949                           
 10950                           ;main.c: 415: lcd_putrs("Press A");
 10951  00DA86  0EC5               	movlw	low STR_14
 10952  00DA88  6E09               	movwf	lcd_putrs@ptr,c
 10953  00DA8A  0EFF               	movlw	high STR_14
 10954  00DA8C  6E0A               	movwf	lcd_putrs@ptr+1,c
 10955  00DA8E  EC9B  F06A         	call	_lcd_putrs	;wreg free
 10956  00DA92                     l320:
 10957                           
 10958                           ;main.c: 416: }
 10959                           ;main.c: 417: if (boton_seleccionar == 3) {
 10960  00DA92  0E03               	movlw	3
 10961  00DA94  0100               	movlb	0	; () banked
 10962  00DA96  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 10963  00DA98  0100               	movlb	0	; () banked
 10964  00DA9A  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 10965  00DA9C  A4D8               	btfss	status,2,c
 10966  00DA9E  D016               	goto	l321
 10967                           
 10968                           ; BSR set to: 0
 10969                           ;main.c: 418: lcd_gotoxy(1, 1);
 10970  00DAA0  0E01               	movlw	1
 10971  00DAA2  6E05               	movwf	lcd_gotoxy@y,c
 10972  00DAA4  0E01               	movlw	1
 10973  00DAA6  EC44  F069         	call	_lcd_gotoxy
 10974                           
 10975                           ;main.c: 419: lcd_putrs("Edt Hour");
 10976  00DAAA  0EAB               	movlw	low STR_27
 10977  00DAAC  6E09               	movwf	lcd_putrs@ptr,c
 10978  00DAAE  0EFF               	movlw	high STR_27
 10979  00DAB0  6E0A               	movwf	lcd_putrs@ptr+1,c
 10980  00DAB2  EC9B  F06A         	call	_lcd_putrs	;wreg free
 10981                           
 10982                           ;main.c: 420: lcd_gotoxy(1, 2);
 10983  00DAB6  0E02               	movlw	2
 10984  00DAB8  6E05               	movwf	lcd_gotoxy@y,c
 10985  00DABA  0E01               	movlw	1
 10986  00DABC  EC44  F069         	call	_lcd_gotoxy
 10987                           
 10988                           ;main.c: 421: lcd_putrs("Press A");
 10989  00DAC0  0EC5               	movlw	low STR_14
 10990  00DAC2  6E09               	movwf	lcd_putrs@ptr,c
 10991  00DAC4  0EFF               	movlw	high STR_14
 10992  00DAC6  6E0A               	movwf	lcd_putrs@ptr+1,c
 10993  00DAC8  EC9B  F06A         	call	_lcd_putrs	;wreg free
 10994  00DACC                     l321:
 10995                           
 10996                           ;main.c: 422: }
 10997                           ;main.c: 423: _delay((unsigned long)((60)*(8000000/4000.0)));
 10998  00DACC  0E9C               	movlw	156
 10999  00DACE  6E0B               	movwf	??_selecciona_opcion_fecha_hora& (0+255),c
 11000  00DAD0  0ED7               	movlw	215
 11001  00DAD2                     u6727:
 11002  00DAD2  2EE8               	decfsz	wreg,f,c
 11003  00DAD4  D7FE               	bra	u6727
 11004  00DAD6  2E0B               	decfsz	??_selecciona_opcion_fecha_hora& (0+255),f,c
 11005  00DAD8  D7FC               	bra	u6727
 11006  00DADA  F000               	nop	
 11007  00DADC  0012               	return		;funcret
 11008  00DADE                     __end_of_selecciona_opcion_fecha_hora:
 11009                           	opt stack 0
 11010                           tblptru	equ	0xFF8
 11011                           tblptrh	equ	0xFF7
 11012                           tblptrl	equ	0xFF6
 11013                           tablat	equ	0xFF5
 11014                           prodh	equ	0xFF4
 11015                           prodl	equ	0xFF3
 11016                           intcon	equ	0xFF2
 11017                           postinc0	equ	0xFEE
 11018                           wreg	equ	0xFE8
 11019                           postinc1	equ	0xFE6
 11020                           postdec1	equ	0xFE5
 11021                           fsr1h	equ	0xFE2
 11022                           fsr1l	equ	0xFE1
 11023                           indf2	equ	0xFDF
 11024                           postinc2	equ	0xFDE
 11025                           postdec2	equ	0xFDD
 11026                           fsr2h	equ	0xFDA
 11027                           fsr2l	equ	0xFD9
 11028                           status	equ	0xFD8
 11029                           
 11030 ;; *************** function _lcd_putrs *****************
 11031 ;; Defined at:
 11032 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11033 ;; Parameters:    Size  Location     Type
 11034 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
 11035 ;;		 -> STR_34(17), STR_33(21), STR_32(17), STR_31(17), 
 11036 ;;		 -> STR_30(9), STR_29(8), STR_28(8), STR_27(9), 
 11037 ;;		 -> STR_26(8), STR_25(9), STR_24(9), STR_23(8), 
 11038 ;;		 -> STR_22(9), STR_21(9), STR_20(17), STR_19(17), 
 11039 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(15), 
 11040 ;;		 -> STR_14(8), STR_12(9), STR_11(9), STR_10(9), 
 11041 ;;		 -> STR_9(7), buffer2(20), 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;		None
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      void 
 11046 ;; Registers used:
 11047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11057 ;;Total ram usage:        2 bytes
 11058 ;; Hardware stack levels used:    1
 11059 ;; Hardware stack levels required when called:    4
 11060 ;; This function calls:
 11061 ;;		_lcd_putc
 11062 ;; This function is called by:
 11063 ;;		_setDiaMesAnio
 11064 ;;		_setHoraMinutoSegundo
 11065 ;;		_titila_texto_insert_password
 11066 ;;		_guarda_numero_ingresado
 11067 ;;		_mostrar_presionar_a
 11068 ;;		_resetear_pantalla_ingresar_contrasenia
 11069 ;;		_titila_alarma_activada
 11070 ;;		_activar_alarma
 11071 ;;		_titila_opcion
 11072 ;;		_selecciona_opcion_fecha_hora
 11073 ;;		_ir_a_pantalla_edicion
 11074 ;;		_ir_a_pantalla_ingresar_contrasenia
 11075 ;;		_ir_a_pantalla_editar_contrasenia
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text55
 11080  00D536                     __ptext55:
 11081                           	opt stack 0
 11082  00D536                     _lcd_putrs:
 11083                           	opt stack 23
 11084                           
 11085                           ;unmc_lcd_216.c: 223: while(*ptr){
 11086                           
 11087                           ;incstack = 0
 11088  00D536  D014               	goto	l520
 11089  00D538                     
 11090                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
 11091  00D538  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 11092  00D53C  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 11093  00D540  6AF8               	clrf	tblptru,c
 11094  00D542  0E0E               	movlw	(high __ramtop+-1)
 11095  00D544  64F7               	cpfsgt	tblptrh,c
 11096  00D546  D003               	bra	u4457
 11097  00D548  0008               	tblrd		*
 11098  00D54A  50F5               	movf	tablat,w,c
 11099  00D54C  D005               	bra	u4450
 11100  00D54E                     u4457:
 11101  00D54E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11102  00D552  CFF7 FFEA          	movff	tblptrh,fsr0h
 11103  00D556  50EF               	movf	indf0,w,c
 11104  00D558                     u4450:
 11105  00D558  EC02  F06A         	call	_lcd_putc
 11106  00D55C  4A09               	infsnz	lcd_putrs@ptr,f,c
 11107  00D55E  2A0A               	incf	lcd_putrs@ptr+1,f,c
 11108  00D560                     l520:
 11109  00D560  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
 11110  00D564  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
 11111  00D568  6AF8               	clrf	tblptru,c
 11112  00D56A  0E0E               	movlw	(high __ramtop+-1)
 11113  00D56C  64F7               	cpfsgt	tblptrh,c
 11114  00D56E  D003               	bra	u4467
 11115  00D570  0008               	tblrd		*
 11116  00D572  50F5               	movf	tablat,w,c
 11117  00D574  D005               	bra	u4460
 11118  00D576                     u4467:
 11119  00D576  CFF6 FFE9          	movff	tblptrl,fsr0l
 11120  00D57A  CFF7 FFEA          	movff	tblptrh,fsr0h
 11121  00D57E  50EF               	movf	indf0,w,c
 11122  00D580                     u4460:
 11123  00D580  0900               	iorlw	0
 11124  00D582  B4D8               	btfsc	status,2,c
 11125  00D584  0012               	return	
 11126  00D586  D7D8               	goto	l521
 11127  00D588                     __end_of_lcd_putrs:
 11128                           	opt stack 0
 11129                           tblptru	equ	0xFF8
 11130                           tblptrh	equ	0xFF7
 11131                           tblptrl	equ	0xFF6
 11132                           tablat	equ	0xFF5
 11133                           prodh	equ	0xFF4
 11134                           prodl	equ	0xFF3
 11135                           intcon	equ	0xFF2
 11136                           indf0	equ	0xFEF
 11137                           postinc0	equ	0xFEE
 11138                           fsr0h	equ	0xFEA
 11139                           fsr0l	equ	0xFE9
 11140                           wreg	equ	0xFE8
 11141                           postinc1	equ	0xFE6
 11142                           postdec1	equ	0xFE5
 11143                           fsr1h	equ	0xFE2
 11144                           fsr1l	equ	0xFE1
 11145                           indf2	equ	0xFDF
 11146                           postinc2	equ	0xFDE
 11147                           postdec2	equ	0xFDD
 11148                           fsr2h	equ	0xFDA
 11149                           fsr2l	equ	0xFD9
 11150                           status	equ	0xFD8
 11151                           
 11152 ;; *************** function _lcd_putc *****************
 11153 ;; Defined at:
 11154 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;  c               1    wreg     unsigned char 
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;  c               1    7[COMRAM] unsigned char 
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  1    wreg      void 
 11161 ;; Registers used:
 11162 ;;		wreg, status,2, status,0, cstack
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11172 ;;Total ram usage:        1 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    3
 11175 ;; This function calls:
 11176 ;;		_lcd_gotoxy
 11177 ;;		_lcd_send_byte
 11178 ;; This function is called by:
 11179 ;;		_lcd_putrs
 11180 ;;		_lcd_puts
 11181 ;; This function uses a non-reentrant model
 11182 ;;
 11183                           
 11184                           	psect	text56
 11185  00D404                     __ptext56:
 11186                           	opt stack 0
 11187  00D404                     _lcd_putc:
 11188                           	opt stack 23
 11189                           
 11190                           ;incstack = 0
 11191                           ;lcd_putc@c stored from wreg
 11192  00D404  6E08               	movwf	lcd_putc@c,c
 11193                           
 11194                           ;unmc_lcd_216.c: 173: switch(c){
 11195  00D406  D018               	goto	l499
 11196  00D408                     
 11197                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
 11198  00D408  0E01               	movlw	1
 11199  00D40A  6E03               	movwf	lcd_send_byte@n,c
 11200  00D40C  0E00               	movlw	0
 11201  00D40E  EC8C  F069         	call	_lcd_send_byte
 11202                           
 11203                           ;unmc_lcd_216.c: 176: break;
 11204  00D412  0012               	return	
 11205  00D414                     
 11206                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
 11207  00D414  0E02               	movlw	2
 11208  00D416  6E05               	movwf	lcd_gotoxy@y,c
 11209  00D418  0E01               	movlw	1
 11210  00D41A  EC44  F069         	call	_lcd_gotoxy
 11211                           
 11212                           ;unmc_lcd_216.c: 179: break;
 11213  00D41E  0012               	return	
 11214  00D420                     
 11215                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
 11216  00D420  0E10               	movlw	16
 11217  00D422  6E03               	movwf	lcd_send_byte@n,c
 11218  00D424  0E00               	movlw	0
 11219  00D426  EC8C  F069         	call	_lcd_send_byte
 11220                           
 11221                           ;unmc_lcd_216.c: 182: break;
 11222  00D42A  0012               	return	
 11223  00D42C                     
 11224                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
 11225  00D42C  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
 11226  00D430  0E01               	movlw	1
 11227  00D432  EC8C  F069         	call	_lcd_send_byte
 11228                           
 11229                           ;unmc_lcd_216.c: 186: }
 11230                           
 11231                           ;unmc_lcd_216.c: 185: break;
 11232  00D436  0012               	return	
 11233  00D438                     l499:
 11234  00D438  5008               	movf	lcd_putc@c,w,c
 11235                           
 11236                           ; Switch size 1, requested type "space"
 11237                           ; Number of cases is 3, Range of values is 8 to 12
 11238                           ; switch strategies available:
 11239                           ; Name         Instructions Cycles
 11240                           ; simple_byte           10     6 (average)
 11241                           ;	Chosen strategy is simple_byte
 11242  00D43A  0A08               	xorlw	8	; case 8
 11243  00D43C  B4D8               	btfsc	status,2,c
 11244  00D43E  D7F0               	goto	l503
 11245  00D440  0A02               	xorlw	2	; case 10
 11246  00D442  B4D8               	btfsc	status,2,c
 11247  00D444  D7E7               	goto	l502
 11248  00D446  0A06               	xorlw	6	; case 12
 11249  00D448  B4D8               	btfsc	status,2,c
 11250  00D44A  D7DE               	goto	l500
 11251  00D44C  D7EF               	goto	l504
 11252  00D44E                     __end_of_lcd_putc:
 11253                           	opt stack 0
 11254                           tblptru	equ	0xFF8
 11255                           tblptrh	equ	0xFF7
 11256                           tblptrl	equ	0xFF6
 11257                           tablat	equ	0xFF5
 11258                           prodh	equ	0xFF4
 11259                           prodl	equ	0xFF3
 11260                           intcon	equ	0xFF2
 11261                           indf0	equ	0xFEF
 11262                           postinc0	equ	0xFEE
 11263                           fsr0h	equ	0xFEA
 11264                           fsr0l	equ	0xFE9
 11265                           wreg	equ	0xFE8
 11266                           postinc1	equ	0xFE6
 11267                           postdec1	equ	0xFE5
 11268                           fsr1h	equ	0xFE2
 11269                           fsr1l	equ	0xFE1
 11270                           indf2	equ	0xFDF
 11271                           postinc2	equ	0xFDE
 11272                           postdec2	equ	0xFDD
 11273                           fsr2h	equ	0xFDA
 11274                           fsr2l	equ	0xFD9
 11275                           status	equ	0xFD8
 11276                           
 11277 ;; *************** function _lcd_gotoxy *****************
 11278 ;; Defined at:
 11279 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;  x               1    wreg     unsigned char 
 11282 ;;  y               1    4[COMRAM] unsigned char 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;  x               1    5[COMRAM] unsigned char 
 11285 ;;  address         1    6[COMRAM] unsigned char 
 11286 ;; Return value:  Size  Location     Type
 11287 ;;                  1    wreg      void 
 11288 ;; Registers used:
 11289 ;;		wreg, status,2, status,0, cstack
 11290 ;; Tracked objects:
 11291 ;;		On entry : 0/0
 11292 ;;		On exit  : 0/0
 11293 ;;		Unchanged: 0/0
 11294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11295 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11298 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11299 ;;Total ram usage:        3 bytes
 11300 ;; Hardware stack levels used:    1
 11301 ;; Hardware stack levels required when called:    2
 11302 ;; This function calls:
 11303 ;;		_lcd_send_byte
 11304 ;; This function is called by:
 11305 ;;		_setDiaMesAnio
 11306 ;;		_setHoraMinutoSegundo
 11307 ;;		_titila_texto_insert_password
 11308 ;;		_guarda_numero_ingresado
 11309 ;;		_mostrar_presionar_a
 11310 ;;		_resetear_pantalla_ingresar_contrasenia
 11311 ;;		_titila_alarma_activada
 11312 ;;		_activar_alarma
 11313 ;;		_titila_opcion
 11314 ;;		_selecciona_opcion_fecha_hora
 11315 ;;		_ir_a_pantalla_edicion
 11316 ;;		_ir_a_pantalla_ingresar_contrasenia
 11317 ;;		_ir_a_pantalla_editar_contrasenia
 11318 ;;		_lcd_putc
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text57
 11323  00D288                     __ptext57:
 11324                           	opt stack 0
 11325  00D288                     _lcd_gotoxy:
 11326                           	opt stack 23
 11327                           
 11328                           ;incstack = 0
 11329                           ;lcd_gotoxy@x stored from wreg
 11330  00D288  6E06               	movwf	lcd_gotoxy@x,c
 11331                           
 11332                           ;unmc_lcd_216.c: 159: int8 address;
 11333                           ;unmc_lcd_216.c: 161: if(y != 1)
 11334  00D28A  0405               	decf	lcd_gotoxy@y,w,c
 11335  00D28C  B4D8               	btfsc	status,2,c
 11336  00D28E  D002               	goto	l494
 11337                           
 11338                           ;unmc_lcd_216.c: 162: address = 0x40;
 11339  00D290  0E40               	movlw	64
 11340  00D292  D001               	goto	L3
 11341  00D294                     l494:
 11342                           
 11343                           ;unmc_lcd_216.c: 163: else
 11344                           ;unmc_lcd_216.c: 164: address=0;
 11345  00D294  0E00               	movlw	0
 11346  00D296                     L3:
 11347  00D296  6E07               	movwf	lcd_gotoxy@address,c
 11348                           
 11349                           ;unmc_lcd_216.c: 166: address += x-1;
 11350  00D298  0406               	decf	lcd_gotoxy@x,w,c
 11351  00D29A  2607               	addwf	lcd_gotoxy@address,f,c
 11352                           
 11353                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
 11354  00D29C  5007               	movf	lcd_gotoxy@address,w,c
 11355  00D29E  0980               	iorlw	128
 11356  00D2A0  6E03               	movwf	lcd_send_byte@n,c
 11357  00D2A2  0E00               	movlw	0
 11358  00D2A4  EC8C  F069         	call	_lcd_send_byte
 11359  00D2A8  0012               	return		;funcret
 11360  00D2AA                     __end_of_lcd_gotoxy:
 11361                           	opt stack 0
 11362                           tblptru	equ	0xFF8
 11363                           tblptrh	equ	0xFF7
 11364                           tblptrl	equ	0xFF6
 11365                           tablat	equ	0xFF5
 11366                           prodh	equ	0xFF4
 11367                           prodl	equ	0xFF3
 11368                           intcon	equ	0xFF2
 11369                           indf0	equ	0xFEF
 11370                           postinc0	equ	0xFEE
 11371                           fsr0h	equ	0xFEA
 11372                           fsr0l	equ	0xFE9
 11373                           wreg	equ	0xFE8
 11374                           postinc1	equ	0xFE6
 11375                           postdec1	equ	0xFE5
 11376                           fsr1h	equ	0xFE2
 11377                           fsr1l	equ	0xFE1
 11378                           indf2	equ	0xFDF
 11379                           postinc2	equ	0xFDE
 11380                           postdec2	equ	0xFDD
 11381                           fsr2h	equ	0xFDA
 11382                           fsr2l	equ	0xFD9
 11383                           status	equ	0xFD8
 11384                           
 11385 ;; *************** function _lcd_send_byte *****************
 11386 ;; Defined at:
 11387 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11388 ;; Parameters:    Size  Location     Type
 11389 ;;  address         1    wreg     unsigned char 
 11390 ;;  n               1    2[COMRAM] unsigned char 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;  address         1    3[COMRAM] unsigned char 
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      void 
 11395 ;; Registers used:
 11396 ;;		wreg, status,2, status,0, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11402 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11406 ;;Total ram usage:        2 bytes
 11407 ;; Hardware stack levels used:    1
 11408 ;; Hardware stack levels required when called:    1
 11409 ;; This function calls:
 11410 ;;		_Delay100TCYx
 11411 ;;		_lcd_send_nibble
 11412 ;; This function is called by:
 11413 ;;		_lcd_init
 11414 ;;		_lcd_gotoxy
 11415 ;;		_lcd_putc
 11416 ;;		_lcd_comand
 11417 ;;		_lcd_setcursor_vb
 11418 ;; This function uses a non-reentrant model
 11419 ;;
 11420                           
 11421                           	psect	text58
 11422  00D318                     __ptext58:
 11423                           	opt stack 0
 11424  00D318                     _lcd_send_byte:
 11425                           	opt stack 24
 11426                           
 11427                           ;incstack = 0
 11428                           ;lcd_send_byte@address stored from wreg
 11429  00D318  6E04               	movwf	lcd_send_byte@address,c
 11430                           
 11431                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
 11432  00D31A  968A               	bcf	3978,3,c	;volatile
 11433                           
 11434                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
 11435  00D31C  0E02               	movlw	2
 11436  00D31E  EC06  F069         	call	_Delay100TCYx
 11437                           
 11438                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
 11439  00D322  9893               	bcf	3987,4,c	;volatile
 11440                           
 11441                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
 11442  00D324  9A93               	bcf	3987,5,c	;volatile
 11443                           
 11444                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
 11445  00D326  9C93               	bcf	3987,6,c	;volatile
 11446                           
 11447                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
 11448  00D328  9E93               	bcf	3987,7,c	;volatile
 11449                           
 11450                           ;unmc_lcd_216.c: 101: if(address)
 11451  00D32A  5004               	movf	lcd_send_byte@address,w,c
 11452  00D32C  B4D8               	btfsc	status,2,c
 11453  00D32E  D002               	goto	l482
 11454                           
 11455                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
 11456  00D330  868A               	bsf	3978,3,c	;volatile
 11457  00D332  D001               	goto	l483
 11458  00D334                     l482:
 11459                           
 11460                           ;unmc_lcd_216.c: 103: else
 11461                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
 11462  00D334  968A               	bcf	3978,3,c	;volatile
 11463  00D336                     l483:
 11464                           
 11465                           ;unmc_lcd_216.c: 106: __nop();
 11466  00D336  F000               	nop	
 11467                           
 11468                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
 11469  00D338  3803               	swapf	lcd_send_byte@n,w,c
 11470  00D33A  0B0F               	andlw	15
 11471  00D33C  EC7F  F06B         	call	_lcd_send_nibble
 11472                           
 11473                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
 11474  00D340  5003               	movf	lcd_send_byte@n,w,c
 11475  00D342  0B0F               	andlw	15
 11476  00D344  EC7F  F06B         	call	_lcd_send_nibble
 11477  00D348  0012               	return		;funcret
 11478  00D34A                     __end_of_lcd_send_byte:
 11479                           	opt stack 0
 11480                           tblptru	equ	0xFF8
 11481                           tblptrh	equ	0xFF7
 11482                           tblptrl	equ	0xFF6
 11483                           tablat	equ	0xFF5
 11484                           prodh	equ	0xFF4
 11485                           prodl	equ	0xFF3
 11486                           intcon	equ	0xFF2
 11487                           indf0	equ	0xFEF
 11488                           postinc0	equ	0xFEE
 11489                           fsr0h	equ	0xFEA
 11490                           fsr0l	equ	0xFE9
 11491                           wreg	equ	0xFE8
 11492                           postinc1	equ	0xFE6
 11493                           postdec1	equ	0xFE5
 11494                           fsr1h	equ	0xFE2
 11495                           fsr1l	equ	0xFE1
 11496                           indf2	equ	0xFDF
 11497                           postinc2	equ	0xFDE
 11498                           postdec2	equ	0xFDD
 11499                           fsr2h	equ	0xFDA
 11500                           fsr2l	equ	0xFD9
 11501                           status	equ	0xFD8
 11502                           
 11503 ;; *************** function _lcd_send_nibble *****************
 11504 ;; Defined at:
 11505 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  nibble          1    wreg     unsigned char 
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;  nibble          1    1[COMRAM] unsigned char 
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  1    wreg      void 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11523 ;;Total ram usage:        2 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; This function calls:
 11526 ;;		Nothing
 11527 ;; This function is called by:
 11528 ;;		_lcd_send_byte
 11529 ;;		_lcd_init
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           	psect	text59
 11534  00D6FE                     __ptext59:
 11535                           	opt stack 0
 11536  00D6FE                     _lcd_send_nibble:
 11537                           	opt stack 24
 11538                           
 11539                           ;incstack = 0
 11540                           ;lcd_send_nibble@nibble stored from wreg
 11541  00D6FE  6E02               	movwf	lcd_send_nibble@nibble,c
 11542                           
 11543                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
 11544  00D700  A002               	btfss	lcd_send_nibble@nibble,0,c
 11545  00D702  D003               	goto	u3210
 11546  00D704  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11547  00D706  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11548  00D708  D001               	goto	u3228
 11549  00D70A                     u3210:
 11550  00D70A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11551  00D70C                     u3228:
 11552  00D70C  3A01               	swapf	??_lcd_send_nibble,f,c
 11553  00D70E  508A               	movf	3978,w,c	;volatile
 11554  00D710  1801               	xorwf	??_lcd_send_nibble,w,c
 11555  00D712  0BEF               	andlw	-17
 11556  00D714  1801               	xorwf	??_lcd_send_nibble,w,c
 11557  00D716  6E8A               	movwf	3978,c	;volatile
 11558                           
 11559                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
 11560  00D718  A202               	btfss	lcd_send_nibble@nibble,1,c
 11561  00D71A  D003               	goto	u3230
 11562  00D71C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11563  00D71E  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11564  00D720  D001               	goto	u3248
 11565  00D722                     u3230:
 11566  00D722  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11567  00D724                     u3248:
 11568  00D724  3A01               	swapf	??_lcd_send_nibble,f,c
 11569  00D726  4601               	rlncf	??_lcd_send_nibble,f,c
 11570  00D728  508A               	movf	3978,w,c	;volatile
 11571  00D72A  1801               	xorwf	??_lcd_send_nibble,w,c
 11572  00D72C  0BDF               	andlw	-33
 11573  00D72E  1801               	xorwf	??_lcd_send_nibble,w,c
 11574  00D730  6E8A               	movwf	3978,c	;volatile
 11575                           
 11576                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
 11577  00D732  A402               	btfss	lcd_send_nibble@nibble,2,c
 11578  00D734  D003               	goto	u3250
 11579  00D736  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11580  00D738  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11581  00D73A  D001               	goto	u3268
 11582  00D73C                     u3250:
 11583  00D73C  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11584  00D73E                     u3268:
 11585  00D73E  3A01               	swapf	??_lcd_send_nibble,f,c
 11586  00D740  4601               	rlncf	??_lcd_send_nibble,f,c
 11587  00D742  4601               	rlncf	??_lcd_send_nibble,f,c
 11588  00D744  508A               	movf	3978,w,c	;volatile
 11589  00D746  1801               	xorwf	??_lcd_send_nibble,w,c
 11590  00D748  0BBF               	andlw	-65
 11591  00D74A  1801               	xorwf	??_lcd_send_nibble,w,c
 11592  00D74C  6E8A               	movwf	3978,c	;volatile
 11593                           
 11594                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
 11595  00D74E  A602               	btfss	lcd_send_nibble@nibble,3,c
 11596  00D750  D003               	goto	u3270
 11597  00D752  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11598  00D754  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
 11599  00D756  D001               	goto	u3288
 11600  00D758                     u3270:
 11601  00D758  6A01               	clrf	??_lcd_send_nibble& (0+255),c
 11602  00D75A                     u3288:
 11603  00D75A  3201               	rrcf	??_lcd_send_nibble,f,c
 11604  00D75C  3201               	rrcf	??_lcd_send_nibble,f,c
 11605  00D75E  508A               	movf	3978,w,c	;volatile
 11606  00D760  1801               	xorwf	??_lcd_send_nibble,w,c
 11607  00D762  0B7F               	andlw	-129
 11608  00D764  1801               	xorwf	??_lcd_send_nibble,w,c
 11609  00D766  6E8A               	movwf	3978,c	;volatile
 11610                           
 11611                           ;unmc_lcd_216.c: 32: __nop();
 11612  00D768  F000               	nop	
 11613                           
 11614                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
 11615  00D76A  848A               	bsf	3978,2,c	;volatile
 11616                           
 11617                           ;unmc_lcd_216.c: 34: __nop();__nop();
 11618  00D76C  F000               	nop	
 11619  00D76E  F000               	nop	
 11620                           
 11621                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
 11622  00D770  948A               	bcf	3978,2,c	;volatile
 11623  00D772  0012               	return		;funcret
 11624  00D774                     __end_of_lcd_send_nibble:
 11625                           	opt stack 0
 11626                           tblptru	equ	0xFF8
 11627                           tblptrh	equ	0xFF7
 11628                           tblptrl	equ	0xFF6
 11629                           tablat	equ	0xFF5
 11630                           prodh	equ	0xFF4
 11631                           prodl	equ	0xFF3
 11632                           intcon	equ	0xFF2
 11633                           indf0	equ	0xFEF
 11634                           postinc0	equ	0xFEE
 11635                           fsr0h	equ	0xFEA
 11636                           fsr0l	equ	0xFE9
 11637                           wreg	equ	0xFE8
 11638                           postinc1	equ	0xFE6
 11639                           postdec1	equ	0xFE5
 11640                           fsr1h	equ	0xFE2
 11641                           fsr1l	equ	0xFE1
 11642                           indf2	equ	0xFDF
 11643                           postinc2	equ	0xFDE
 11644                           postdec2	equ	0xFDD
 11645                           fsr2h	equ	0xFDA
 11646                           fsr2l	equ	0xFD9
 11647                           status	equ	0xFD8
 11648                           
 11649 ;; *************** function _Delay100TCYx *****************
 11650 ;; Defined at:
 11651 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;  unit            1    wreg     unsigned char 
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;  unit            1    0[COMRAM] unsigned char 
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1    wreg      void 
 11658 ;; Registers used:
 11659 ;;		wreg
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11669 ;;Total ram usage:        1 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; This function calls:
 11672 ;;		Nothing
 11673 ;; This function is called by:
 11674 ;;		_lcd_send_byte
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           	psect	text60
 11679  00D20C                     __ptext60:
 11680                           	opt stack 0
 11681  00D20C                     _Delay100TCYx:
 11682                           	opt stack 24
 11683                           
 11684                           ;incstack = 0
 11685                           ;Delay100TCYx@unit stored from wreg
 11686  00D20C  6E01               	movwf	Delay100TCYx@unit,c
 11687  00D20E                     l860:
 11688  00D20E  0E21               	movlw	33
 11689  00D210                     u6737:
 11690  00D210  2EE8               	decfsz	wreg,f,c
 11691  00D212  D7FE               	bra	u6737
 11692  00D214  F000               	nop	
 11693  00D216  2E01               	decfsz	Delay100TCYx@unit,f,c
 11694  00D218  D7FA               	goto	l860
 11695  00D21A  0012               	return	
 11696  00D21C                     __end_of_Delay100TCYx:
 11697                           	opt stack 0
 11698                           tblptru	equ	0xFF8
 11699                           tblptrh	equ	0xFF7
 11700                           tblptrl	equ	0xFF6
 11701                           tablat	equ	0xFF5
 11702                           prodh	equ	0xFF4
 11703                           prodl	equ	0xFF3
 11704                           intcon	equ	0xFF2
 11705                           indf0	equ	0xFEF
 11706                           postinc0	equ	0xFEE
 11707                           fsr0h	equ	0xFEA
 11708                           fsr0l	equ	0xFE9
 11709                           wreg	equ	0xFE8
 11710                           postinc1	equ	0xFE6
 11711                           postdec1	equ	0xFE5
 11712                           fsr1h	equ	0xFE2
 11713                           fsr1l	equ	0xFE1
 11714                           indf2	equ	0xFDF
 11715                           postinc2	equ	0xFDE
 11716                           postdec2	equ	0xFDD
 11717                           fsr2h	equ	0xFDA
 11718                           fsr2l	equ	0xFD9
 11719                           status	equ	0xFD8
 11720                           
 11721 ;; *************** function _cambiar_opcion *****************
 11722 ;; Defined at:
 11723 ;;		line 245 in file "main.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;		None
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;		None
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      void 
 11730 ;; Registers used:
 11731 ;;		wreg, status,2, status,0
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11741 ;;Total ram usage:        1 bytes
 11742 ;; Hardware stack levels used:    1
 11743 ;; This function calls:
 11744 ;;		Nothing
 11745 ;; This function is called by:
 11746 ;;		_ir_a_pantalla_edicion
 11747 ;; This function uses a non-reentrant model
 11748 ;;
 11749                           
 11750                           	psect	text61
 11751  00DE30                     __ptext61:
 11752                           	opt stack 0
 11753  00DE30                     _cambiar_opcion:
 11754                           	opt stack 26
 11755                           
 11756                           ;main.c: 246: LATAbits.LATA0 = 0;
 11757                           
 11758                           ;incstack = 0
 11759  00DE30  9089               	bcf	3977,0,c	;volatile
 11760                           
 11761                           ;main.c: 247: LATAbits.LATA1 = 0;
 11762  00DE32  9289               	bcf	3977,1,c	;volatile
 11763                           
 11764                           ;main.c: 248: LATAbits.LATA2 = 1;
 11765  00DE34  8489               	bsf	3977,2,c	;volatile
 11766                           
 11767                           ;main.c: 249: LATAbits.LATA3 = 0;
 11768  00DE36  9689               	bcf	3977,3,c	;volatile
 11769                           
 11770                           ;main.c: 250: if (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
 11771  00DE38  B482               	btfsc	3970,2,c	;volatile
 11772  00DE3A  A489               	btfss	3977,2,c	;volatile
 11773  00DE3C  D01D               	goto	u5810
 11774                           
 11775                           ;main.c: 251: if (boton_seleccionar == 3) {
 11776  00DE3E  0E03               	movlw	3
 11777  00DE40  0100               	movlb	0	; () banked
 11778  00DE42  1990               	xorwf	_boton_seleccionar& (0+255),w,b
 11779  00DE44  0100               	movlb	0	; () banked
 11780  00DE46  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 11781  00DE48  A4D8               	btfss	status,2,c
 11782  00DE4A  D006               	goto	l267
 11783                           
 11784                           ; BSR set to: 0
 11785                           ;main.c: 252: boton_seleccionar = 0;
 11786  00DE4C  0E00               	movlw	0
 11787  00DE4E  0100               	movlb	0	; () banked
 11788  00DE50  6F91               	movwf	(_boton_seleccionar+1)& (0+255),b
 11789  00DE52  0E00               	movlw	0
 11790  00DE54  6F90               	movwf	_boton_seleccionar& (0+255),b
 11791                           
 11792                           ;main.c: 253: } else {
 11793  00DE56  D00C               	goto	l269
 11794  00DE58                     l267:
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;main.c: 254: boton_seleccionar++;
 11798                           
 11799                           ; BSR set to: 0
 11800  00DE58  0100               	movlb	0	; () banked
 11801  00DE5A  4B90               	infsnz	_boton_seleccionar& (0+255),f,b
 11802  00DE5C  2B91               	incf	(_boton_seleccionar+1)& (0+255),f,b
 11803                           
 11804                           ; BSR set to: 0
 11805                           ;main.c: 255: }
 11806                           ;main.c: 256: while (PORTCbits.RC2 == 1 && LATAbits.LATA2 == 1) {
 11807  00DE5E  D008               	goto	l269
 11808  00DE60                     
 11809                           ;main.c: 257: _delay((unsigned long)((40)*(8000000/4000.0)));
 11810                           
 11811                           ; BSR set to: 0
 11812  00DE60  0E68               	movlw	104
 11813  00DE62  6E01               	movwf	??_cambiar_opcion& (0+255),c
 11814  00DE64  0EE4               	movlw	228
 11815  00DE66                     u6747:
 11816  00DE66  2EE8               	decfsz	wreg,f,c
 11817  00DE68  D7FE               	bra	u6747
 11818  00DE6A  2E01               	decfsz	??_cambiar_opcion& (0+255),f,c
 11819  00DE6C  D7FC               	bra	u6747
 11820  00DE6E  D000               	nop2	
 11821  00DE70                     l269:
 11822  00DE70  A482               	btfss	3970,2,c	;volatile
 11823  00DE72  D002               	goto	u5810
 11824  00DE74  B489               	btfsc	3977,2,c	;volatile
 11825  00DE76  D7F4               	goto	l270
 11826  00DE78                     u5810:
 11827                           
 11828                           ;main.c: 258: }
 11829                           ;main.c: 259: }
 11830                           ;main.c: 261: LATAbits.LATA0 = 0;
 11831  00DE78  9089               	bcf	3977,0,c	;volatile
 11832                           
 11833                           ;main.c: 262: LATAbits.LATA1 = 0;
 11834  00DE7A  9289               	bcf	3977,1,c	;volatile
 11835                           
 11836                           ;main.c: 263: LATAbits.LATA2 = 0;
 11837  00DE7C  9489               	bcf	3977,2,c	;volatile
 11838                           
 11839                           ;main.c: 264: LATAbits.LATA3 = 1;
 11840  00DE7E  8689               	bsf	3977,3,c	;volatile
 11841                           
 11842                           ;main.c: 265: if (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
 11843  00DE80  A482               	btfss	3970,2,c	;volatile
 11844  00DE82  0012               	return	
 11845  00DE84  A689               	btfss	3977,3,c	;volatile
 11846  00DE86  0012               	return	
 11847                           
 11848                           ;main.c: 266: if (boton_seleccionar == 0) {
 11849  00DE88  0100               	movlb	0	; () banked
 11850  00DE8A  5190               	movf	_boton_seleccionar& (0+255),w,b
 11851  00DE8C  0100               	movlb	0	; () banked
 11852  00DE8E  1191               	iorwf	(_boton_seleccionar+1)& (0+255),w,b
 11853  00DE90  A4D8               	btfss	status,2,c
 11854  00DE92  D006               	goto	l275
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;main.c: 267: boton_seleccionar = 3;
 11858  00DE94  0E00               	movlw	0
 11859  00DE96  0100               	movlb	0	; () banked
 11860  00DE98  6F91               	movwf	(_boton_seleccionar+1)& (0+255),b
 11861  00DE9A  0E03               	movlw	3
 11862  00DE9C  6F90               	movwf	_boton_seleccionar& (0+255),b
 11863                           
 11864                           ;main.c: 268: } else {
 11865  00DE9E  D00D               	goto	l277
 11866  00DEA0                     l275:
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;main.c: 269: boton_seleccionar--;
 11870                           
 11871                           ; BSR set to: 0
 11872  00DEA0  0100               	movlb	0	; () banked
 11873  00DEA2  0790               	decf	_boton_seleccionar& (0+255),f,b
 11874  00DEA4  A0D8               	btfss	status,0,c
 11875  00DEA6  0791               	decf	(_boton_seleccionar+1)& (0+255),f,b
 11876                           
 11877                           ; BSR set to: 0
 11878                           ;main.c: 270: }
 11879                           ;main.c: 271: while (PORTCbits.RC2 == 1 && LATAbits.LATA3 == 1) {
 11880  00DEA8  D008               	goto	l277
 11881  00DEAA                     
 11882                           ;main.c: 272: _delay((unsigned long)((40)*(8000000/4000.0)));
 11883                           
 11884                           ; BSR set to: 0
 11885  00DEAA  0E68               	movlw	104
 11886  00DEAC  6E01               	movwf	??_cambiar_opcion& (0+255),c
 11887  00DEAE  0EE4               	movlw	228
 11888  00DEB0                     u6757:
 11889  00DEB0  2EE8               	decfsz	wreg,f,c
 11890  00DEB2  D7FE               	bra	u6757
 11891  00DEB4  2E01               	decfsz	??_cambiar_opcion& (0+255),f,c
 11892  00DEB6  D7FC               	bra	u6757
 11893  00DEB8  D000               	nop2	
 11894  00DEBA                     l277:
 11895  00DEBA  A482               	btfss	3970,2,c	;volatile
 11896  00DEBC  0012               	return	
 11897  00DEBE  A689               	btfss	3977,3,c	;volatile
 11898  00DEC0  0012               	return	
 11899  00DEC2  D7F3               	goto	l278
 11900  00DEC4                     __end_of_cambiar_opcion:
 11901                           	opt stack 0
 11902                           tblptru	equ	0xFF8
 11903                           tblptrh	equ	0xFF7
 11904                           tblptrl	equ	0xFF6
 11905                           tablat	equ	0xFF5
 11906                           prodh	equ	0xFF4
 11907                           prodl	equ	0xFF3
 11908                           intcon	equ	0xFF2
 11909                           indf0	equ	0xFEF
 11910                           postinc0	equ	0xFEE
 11911                           fsr0h	equ	0xFEA
 11912                           fsr0l	equ	0xFE9
 11913                           wreg	equ	0xFE8
 11914                           postinc1	equ	0xFE6
 11915                           postdec1	equ	0xFE5
 11916                           fsr1h	equ	0xFE2
 11917                           fsr1l	equ	0xFE1
 11918                           indf2	equ	0xFDF
 11919                           postinc2	equ	0xFDE
 11920                           postdec2	equ	0xFDD
 11921                           fsr2h	equ	0xFDA
 11922                           fsr2l	equ	0xFD9
 11923                           status	equ	0xFD8
 11924                           
 11925 ;; *************** function _Read_RTC *****************
 11926 ;; Defined at:
 11927 ;;		line 111 in file "../../headers\unmc_rtcc_01.h"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;		None
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;		None
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/0
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11945 ;;Total ram usage:        0 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; Hardware stack levels required when called:    1
 11948 ;; This function calls:
 11949 ;;		_RtccReadDate
 11950 ;;		_RtccReadTime
 11951 ;; This function is called by:
 11952 ;;		_ir_a_pantalla_edicion
 11953 ;;		_main
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           	psect	text62
 11958  00EC34                     __ptext62:
 11959                           	opt stack 0
 11960  00EC34                     _Read_RTC:
 11961                           	opt stack 25
 11962                           
 11963                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
 11964                           
 11965                           ;incstack = 0
 11966  00EC34  0EC1               	movlw	low _RtccTime
 11967  00EC36  6E01               	movwf	RtccReadTime@pTm,c
 11968  00EC38  0E00               	movlw	high _RtccTime
 11969  00EC3A  6E02               	movwf	RtccReadTime@pTm+1,c
 11970  00EC3C  EC48  F06B         	call	_RtccReadTime	;wreg free
 11971                           
 11972                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
 11973  00EC40  0100               	movlb	0	; () banked
 11974  00EC42  51C2               	movf	(_RtccTime+1)& (0+255),w,b
 11975  00EC44  0B0F               	andlw	15
 11976  00EC46  0100               	movlb	0	; () banked
 11977  00EC48  6FFB               	movwf	_segundo_u& (0+255),b
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
 11981  00EC4A  0100               	movlb	0	; () banked
 11982  00EC4C  39C2               	swapf	(_RtccTime+1)& (0+255),w,b
 11983  00EC4E  0B0F               	andlw	15
 11984  00EC50  0B0F               	andlw	15
 11985  00EC52  0100               	movlb	0	; () banked
 11986  00EC54  6FFA               	movwf	_segundo_d& (0+255),b
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
 11990  00EC56  0100               	movlb	0	; () banked
 11991  00EC58  51C3               	movf	(_RtccTime+2)& (0+255),w,b
 11992  00EC5A  0B0F               	andlw	15
 11993  00EC5C  0100               	movlb	0	; () banked
 11994  00EC5E  6FF9               	movwf	_minuto_u& (0+255),b
 11995                           
 11996                           ; BSR set to: 0
 11997                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
 11998  00EC60  0100               	movlb	0	; () banked
 11999  00EC62  39C3               	swapf	(_RtccTime+2)& (0+255),w,b
 12000  00EC64  0B0F               	andlw	15
 12001  00EC66  0B0F               	andlw	15
 12002  00EC68  0100               	movlb	0	; () banked
 12003  00EC6A  6FF8               	movwf	_minuto_d& (0+255),b
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
 12007  00EC6C  0100               	movlb	0	; () banked
 12008  00EC6E  51C4               	movf	(_RtccTime+3)& (0+255),w,b
 12009  00EC70  0B0F               	andlw	15
 12010  00EC72  0100               	movlb	0	; () banked
 12011  00EC74  6FF7               	movwf	_hora_u& (0+255),b
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
 12015  00EC76  0100               	movlb	0	; () banked
 12016  00EC78  39C4               	swapf	(_RtccTime+3)& (0+255),w,b
 12017  00EC7A  0B0F               	andlw	15
 12018  00EC7C  0B0F               	andlw	15
 12019  00EC7E  0100               	movlb	0	; () banked
 12020  00EC80  6FF6               	movwf	_hora_d& (0+255),b
 12021                           
 12022                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
 12023  00EC82  0EBD               	movlw	low _RtccDate
 12024  00EC84  6E01               	movwf	RtccReadDate@pDt,c
 12025  00EC86  0E00               	movlw	high _RtccDate
 12026  00EC88  6E02               	movwf	RtccReadDate@pDt+1,c
 12027  00EC8A  EC41  F06E         	call	_RtccReadDate	;wreg free
 12028                           
 12029                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
 12030  00EC8E  0100               	movlb	0	; () banked
 12031  00EC90  51BE               	movf	(_RtccDate+1)& (0+255),w,b
 12032  00EC92  0B0F               	andlw	15
 12033  00EC94  0100               	movlb	0	; () banked
 12034  00EC96  6FF5               	movwf	_fecha_u& (0+255),b
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
 12038  00EC98  0100               	movlb	0	; () banked
 12039  00EC9A  39BE               	swapf	(_RtccDate+1)& (0+255),w,b
 12040  00EC9C  0B0F               	andlw	15
 12041  00EC9E  0B0F               	andlw	15
 12042  00ECA0  0100               	movlb	0	; () banked
 12043  00ECA2  6FF4               	movwf	_fecha_d& (0+255),b
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
 12047  00ECA4  0100               	movlb	0	; () banked
 12048  00ECA6  51BF               	movf	(_RtccDate+2)& (0+255),w,b
 12049  00ECA8  0B0F               	andlw	15
 12050  00ECAA  0100               	movlb	0	; () banked
 12051  00ECAC  6FF3               	movwf	_mes_u& (0+255),b
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
 12055  00ECAE  0100               	movlb	0	; () banked
 12056  00ECB0  39BF               	swapf	(_RtccDate+2)& (0+255),w,b
 12057  00ECB2  0B0F               	andlw	15
 12058  00ECB4  0B0F               	andlw	15
 12059  00ECB6  0100               	movlb	0	; () banked
 12060  00ECB8  6FF2               	movwf	_mes_d& (0+255),b
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
 12064  00ECBA  C0BD  F0F1         	movff	_RtccDate,_dia_semana
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
 12068  00ECBE  0100               	movlb	0	; () banked
 12069  00ECC0  51C0               	movf	(_RtccDate+3)& (0+255),w,b
 12070  00ECC2  0B0F               	andlw	15
 12071  00ECC4  0100               	movlb	0	; () banked
 12072  00ECC6  6FF0               	movwf	_anio_u& (0+255),b
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
 12076  00ECC8  0100               	movlb	0	; () banked
 12077  00ECCA  39C0               	swapf	(_RtccDate+3)& (0+255),w,b
 12078  00ECCC  0B0F               	andlw	15
 12079  00ECCE  0B0F               	andlw	15
 12080  00ECD0  0100               	movlb	0	; () banked
 12081  00ECD2  6FEF               	movwf	_anio_d& (0+255),b
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
 12085  00ECD4  0100               	movlb	0	; () banked
 12086  00ECD6  51FA               	movf	_segundo_d& (0+255),w,b
 12087  00ECD8  0D0A               	mullw	10
 12088  00ECDA  0100               	movlb	0	; () banked
 12089  00ECDC  51FB               	movf	_segundo_u& (0+255),w,b
 12090  00ECDE  24F3               	addwf	prodl,w,c
 12091  00ECE0  0100               	movlb	0	; () banked
 12092  00ECE2  6F9A               	movwf	_segundo& (0+255),b
 12093  00ECE4  0100               	movlb	0	; () banked
 12094  00ECE6  0E00               	movlw	0
 12095  00ECE8  20F4               	addwfc	prodh,w,c
 12096  00ECEA  0100               	movlb	0	; () banked
 12097  00ECEC  6F9B               	movwf	(_segundo+1)& (0+255),b
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
 12101  00ECEE  0100               	movlb	0	; () banked
 12102  00ECF0  51F8               	movf	_minuto_d& (0+255),w,b
 12103  00ECF2  0D0A               	mullw	10
 12104  00ECF4  0100               	movlb	0	; () banked
 12105  00ECF6  51F9               	movf	_minuto_u& (0+255),w,b
 12106  00ECF8  24F3               	addwf	prodl,w,c
 12107  00ECFA  0100               	movlb	0	; () banked
 12108  00ECFC  6FE3               	movwf	_minuto& (0+255),b
 12109  00ECFE  0100               	movlb	0	; () banked
 12110  00ED00  0E00               	movlw	0
 12111  00ED02  20F4               	addwfc	prodh,w,c
 12112  00ED04  0100               	movlb	0	; () banked
 12113  00ED06  6FE4               	movwf	(_minuto+1)& (0+255),b
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
 12117  00ED08  0100               	movlb	0	; () banked
 12118  00ED0A  51F6               	movf	_hora_d& (0+255),w,b
 12119  00ED0C  0D0A               	mullw	10
 12120  00ED0E  0100               	movlb	0	; () banked
 12121  00ED10  51F7               	movf	_hora_u& (0+255),w,b
 12122  00ED12  24F3               	addwf	prodl,w,c
 12123  00ED14  0100               	movlb	0	; () banked
 12124  00ED16  6FE5               	movwf	_hora& (0+255),b
 12125  00ED18  0100               	movlb	0	; () banked
 12126  00ED1A  0E00               	movlw	0
 12127  00ED1C  20F4               	addwfc	prodh,w,c
 12128  00ED1E  0100               	movlb	0	; () banked
 12129  00ED20  6FE6               	movwf	(_hora+1)& (0+255),b
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
 12133  00ED22  0100               	movlb	0	; () banked
 12134  00ED24  51F4               	movf	_fecha_d& (0+255),w,b
 12135  00ED26  0D0A               	mullw	10
 12136  00ED28  0100               	movlb	0	; () banked
 12137  00ED2A  51F5               	movf	_fecha_u& (0+255),w,b
 12138  00ED2C  24F3               	addwf	prodl,w,c
 12139  00ED2E  0100               	movlb	0	; () banked
 12140  00ED30  6FE7               	movwf	_dia& (0+255),b
 12141  00ED32  0100               	movlb	0	; () banked
 12142  00ED34  0E00               	movlw	0
 12143  00ED36  20F4               	addwfc	prodh,w,c
 12144  00ED38  0100               	movlb	0	; () banked
 12145  00ED3A  6FE8               	movwf	(_dia+1)& (0+255),b
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
 12149  00ED3C  C0F1  F0E9         	movff	_dia_semana,_diasem
 12150  00ED40  0100               	movlb	0	; () banked
 12151  00ED42  6BEA               	clrf	(_diasem+1)& (0+255),b
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
 12155  00ED44  0100               	movlb	0	; () banked
 12156  00ED46  51F2               	movf	_mes_d& (0+255),w,b
 12157  00ED48  0D0A               	mullw	10
 12158  00ED4A  0100               	movlb	0	; () banked
 12159  00ED4C  51F3               	movf	_mes_u& (0+255),w,b
 12160  00ED4E  24F3               	addwf	prodl,w,c
 12161  00ED50  0100               	movlb	0	; () banked
 12162  00ED52  6FEB               	movwf	_mes& (0+255),b
 12163  00ED54  0100               	movlb	0	; () banked
 12164  00ED56  0E00               	movlw	0
 12165  00ED58  20F4               	addwfc	prodh,w,c
 12166  00ED5A  0100               	movlb	0	; () banked
 12167  00ED5C  6FEC               	movwf	(_mes+1)& (0+255),b
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
 12171  00ED5E  0100               	movlb	0	; () banked
 12172  00ED60  51EF               	movf	_anio_d& (0+255),w,b
 12173  00ED62  0D0A               	mullw	10
 12174  00ED64  0100               	movlb	0	; () banked
 12175  00ED66  51F0               	movf	_anio_u& (0+255),w,b
 12176  00ED68  24F3               	addwf	prodl,w,c
 12177  00ED6A  0100               	movlb	0	; () banked
 12178  00ED6C  6FED               	movwf	_anio& (0+255),b
 12179  00ED6E  0100               	movlb	0	; () banked
 12180  00ED70  0E00               	movlw	0
 12181  00ED72  20F4               	addwfc	prodh,w,c
 12182  00ED74  0100               	movlb	0	; () banked
 12183  00ED76  6FEE               	movwf	(_anio+1)& (0+255),b
 12184                           
 12185                           ; BSR set to: 0
 12186  00ED78  0012               	return		;funcret
 12187  00ED7A                     __end_of_Read_RTC:
 12188                           	opt stack 0
 12189                           tblptru	equ	0xFF8
 12190                           tblptrh	equ	0xFF7
 12191                           tblptrl	equ	0xFF6
 12192                           tablat	equ	0xFF5
 12193                           prodh	equ	0xFF4
 12194                           prodl	equ	0xFF3
 12195                           intcon	equ	0xFF2
 12196                           indf0	equ	0xFEF
 12197                           postinc0	equ	0xFEE
 12198                           fsr0h	equ	0xFEA
 12199                           fsr0l	equ	0xFE9
 12200                           wreg	equ	0xFE8
 12201                           postinc1	equ	0xFE6
 12202                           postdec1	equ	0xFE5
 12203                           fsr1h	equ	0xFE2
 12204                           fsr1l	equ	0xFE1
 12205                           indf2	equ	0xFDF
 12206                           postinc2	equ	0xFDE
 12207                           postdec2	equ	0xFDD
 12208                           fsr2h	equ	0xFDA
 12209                           fsr2l	equ	0xFD9
 12210                           status	equ	0xFD8
 12211                           
 12212 ;; *************** function _RtccReadTime *****************
 12213 ;; Defined at:
 12214 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
 12215 ;; Parameters:    Size  Location     Type
 12216 ;;  pTm             2    0[COMRAM] PTR struct .
 12217 ;;		 -> RtccTime(4), 
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;  rTD0            8   10[COMRAM] struct .
 12220 ;;  rTD1            8    2[COMRAM] struct .
 12221 ;; Return value:  Size  Location     Type
 12222 ;;                  1    wreg      void 
 12223 ;; Registers used:
 12224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12225 ;; Tracked objects:
 12226 ;;		On entry : 0/0
 12227 ;;		On exit  : 0/0
 12228 ;;		Unchanged: 0/0
 12229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12231 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12233 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12234 ;;Total ram usage:       18 bytes
 12235 ;; Hardware stack levels used:    1
 12236 ;; This function calls:
 12237 ;;		Nothing
 12238 ;; This function is called by:
 12239 ;;		_Read_RTC
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243                           	psect	text63
 12244  00D690                     __ptext63:
 12245                           	opt stack 0
 12246  00D690                     _RtccReadTime:
 12247                           	opt stack 25
 12248                           
 12249                           ; BSR set to: 0
 12250                           ;incstack = 0
 12251  00D690  0EFC               	movlw	252
 12252  00D692  010F               	movlb	15	; () banked
 12253  00D694  173F               	andwf	63,f,b	;volatile
 12254                           
 12255                           ; BSR set to: 15
 12256  00D696  010F               	movlb	15	; () banked
 12257  00D698  813F               	bsf	63,0,b	;volatile
 12258                           
 12259                           ; BSR set to: 15
 12260  00D69A  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
 12261                           
 12262                           ; BSR set to: 15
 12263  00D69E  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
 12264                           
 12265                           ; BSR set to: 15
 12266  00D6A2  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
 12267                           
 12268                           ; BSR set to: 15
 12269  00D6A6  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
 12270                           
 12271                           ; BSR set to: 15
 12272  00D6AA  0EFC               	movlw	252
 12273  00D6AC  010F               	movlb	15	; () banked
 12274  00D6AE  173F               	andwf	63,f,b	;volatile
 12275  00D6B0  010F               	movlb	15	; () banked
 12276  00D6B2  813F               	bsf	63,0,b	;volatile
 12277                           
 12278                           ; BSR set to: 15
 12279  00D6B4  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
 12280                           
 12281                           ; BSR set to: 15
 12282  00D6B8  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
 12283                           
 12284                           ; BSR set to: 15
 12285  00D6BC  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
 12286                           
 12287                           ; BSR set to: 15
 12288  00D6C0  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
 12289                           
 12290                           ; BSR set to: 15
 12291  00D6C4  5009               	movf	RtccReadTime@rTD1+6,w,c
 12292  00D6C6  1811               	xorwf	RtccReadTime@rTD0+6,w,c
 12293  00D6C8  A4D8               	btfss	status,2,c
 12294  00D6CA  D7E2               	goto	_RtccReadTime
 12295                           
 12296                           ; BSR set to: 15
 12297                           
 12298                           ; BSR set to: 15
 12299  00D6CC  EE20 F003          	lfsr	2,3
 12300  00D6D0  5001               	movf	RtccReadTime@pTm,w,c
 12301  00D6D2  26D9               	addwf	fsr2l,f,c
 12302  00D6D4  5002               	movf	RtccReadTime@pTm+1,w,c
 12303  00D6D6  22DA               	addwfc	fsr2h,f,c
 12304  00D6D8  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
 12305  00D6DC  EE20 F002          	lfsr	2,2
 12306  00D6E0  5001               	movf	RtccReadTime@pTm,w,c
 12307  00D6E2  26D9               	addwf	fsr2l,f,c
 12308  00D6E4  5002               	movf	RtccReadTime@pTm+1,w,c
 12309  00D6E6  22DA               	addwfc	fsr2h,f,c
 12310  00D6E8  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
 12311  00D6EC  EE20 F001          	lfsr	2,1
 12312  00D6F0  5001               	movf	RtccReadTime@pTm,w,c
 12313  00D6F2  26D9               	addwf	fsr2l,f,c
 12314  00D6F4  5002               	movf	RtccReadTime@pTm+1,w,c
 12315  00D6F6  22DA               	addwfc	fsr2h,f,c
 12316  00D6F8  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
 12317                           
 12318                           ; BSR set to: 15
 12319  00D6FC  0012               	return		;funcret
 12320  00D6FE                     __end_of_RtccReadTime:
 12321                           	opt stack 0
 12322                           tblptru	equ	0xFF8
 12323                           tblptrh	equ	0xFF7
 12324                           tblptrl	equ	0xFF6
 12325                           tablat	equ	0xFF5
 12326                           prodh	equ	0xFF4
 12327                           prodl	equ	0xFF3
 12328                           intcon	equ	0xFF2
 12329                           indf0	equ	0xFEF
 12330                           postinc0	equ	0xFEE
 12331                           fsr0h	equ	0xFEA
 12332                           fsr0l	equ	0xFE9
 12333                           wreg	equ	0xFE8
 12334                           postinc1	equ	0xFE6
 12335                           postdec1	equ	0xFE5
 12336                           fsr1h	equ	0xFE2
 12337                           fsr1l	equ	0xFE1
 12338                           indf2	equ	0xFDF
 12339                           postinc2	equ	0xFDE
 12340                           postdec2	equ	0xFDD
 12341                           fsr2h	equ	0xFDA
 12342                           fsr2l	equ	0xFD9
 12343                           status	equ	0xFD8
 12344                           
 12345 ;; *************** function _RtccReadDate *****************
 12346 ;; Defined at:
 12347 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
 12348 ;; Parameters:    Size  Location     Type
 12349 ;;  pDt             2    0[COMRAM] PTR struct .
 12350 ;;		 -> RtccDate(4), 
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;  rTD0            8   10[COMRAM] struct .
 12353 ;;  rTD1            8    2[COMRAM] struct .
 12354 ;; Return value:  Size  Location     Type
 12355 ;;                  1    wreg      void 
 12356 ;; Registers used:
 12357 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12358 ;; Tracked objects:
 12359 ;;		On entry : 0/0
 12360 ;;		On exit  : 0/0
 12361 ;;		Unchanged: 0/0
 12362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12364 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12366 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12367 ;;Total ram usage:       18 bytes
 12368 ;; Hardware stack levels used:    1
 12369 ;; This function calls:
 12370 ;;		Nothing
 12371 ;; This function is called by:
 12372 ;;		_Read_RTC
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text64
 12377  00DC82                     __ptext64:
 12378                           	opt stack 0
 12379  00DC82                     _RtccReadDate:
 12380                           	opt stack 25
 12381                           
 12382                           ; BSR set to: 15
 12383                           ;incstack = 0
 12384  00DC82  0EFC               	movlw	252
 12385  00DC84  010F               	movlb	15	; () banked
 12386  00DC86  173F               	andwf	63,f,b	;volatile
 12387  00DC88  0E03               	movlw	3
 12388  00DC8A  010F               	movlb	15	; () banked
 12389  00DC8C  133F               	iorwf	63,f,b	;volatile
 12390                           
 12391                           ; BSR set to: 15
 12392  00DC8E  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
 12393                           
 12394                           ; BSR set to: 15
 12395  00DC92  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
 12396                           
 12397                           ; BSR set to: 15
 12398  00DC96  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
 12399                           
 12400                           ; BSR set to: 15
 12401  00DC9A  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
 12402                           
 12403                           ; BSR set to: 15
 12404  00DC9E  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
 12405                           
 12406                           ; BSR set to: 15
 12407  00DCA2  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
 12408  00DCA6  0EFC               	movlw	252
 12409  00DCA8  010F               	movlb	15	; () banked
 12410  00DCAA  173F               	andwf	63,f,b	;volatile
 12411  00DCAC  0E03               	movlw	3
 12412  00DCAE  010F               	movlb	15	; () banked
 12413  00DCB0  133F               	iorwf	63,f,b	;volatile
 12414                           
 12415                           ; BSR set to: 15
 12416  00DCB2  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
 12417                           
 12418                           ; BSR set to: 15
 12419  00DCB6  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
 12420                           
 12421                           ; BSR set to: 15
 12422  00DCBA  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
 12423                           
 12424                           ; BSR set to: 15
 12425  00DCBE  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
 12426                           
 12427                           ; BSR set to: 15
 12428  00DCC2  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
 12429                           
 12430                           ; BSR set to: 15
 12431  00DCC6  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
 12432  00DCCA  5005               	movf	RtccReadDate@rTD1+2,w,c
 12433  00DCCC  180D               	xorwf	RtccReadDate@rTD0+2,w,c
 12434  00DCCE  A4D8               	btfss	status,2,c
 12435  00DCD0  D7D8               	goto	_RtccReadDate
 12436                           
 12437                           ; BSR set to: 15
 12438                           
 12439                           ; BSR set to: 15
 12440  00DCD2  EE20 F001          	lfsr	2,1
 12441  00DCD6  5001               	movf	RtccReadDate@pDt,w,c
 12442  00DCD8  26D9               	addwf	fsr2l,f,c
 12443  00DCDA  5002               	movf	RtccReadDate@pDt+1,w,c
 12444  00DCDC  22DA               	addwfc	fsr2h,f,c
 12445  00DCDE  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
 12446  00DCE2  EE20 F002          	lfsr	2,2
 12447  00DCE6  5001               	movf	RtccReadDate@pDt,w,c
 12448  00DCE8  26D9               	addwf	fsr2l,f,c
 12449  00DCEA  5002               	movf	RtccReadDate@pDt+1,w,c
 12450  00DCEC  22DA               	addwfc	fsr2h,f,c
 12451  00DCEE  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
 12452                           
 12453                           ; BSR set to: 15
 12454  00DCF2  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
 12455  00DCF6  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
 12456  00DCFA  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
 12457                           
 12458                           ; BSR set to: 15
 12459  00DCFE  EE20 F003          	lfsr	2,3
 12460  00DD02  5001               	movf	RtccReadDate@pDt,w,c
 12461  00DD04  26D9               	addwf	fsr2l,f,c
 12462  00DD06  5002               	movf	RtccReadDate@pDt+1,w,c
 12463  00DD08  22DA               	addwfc	fsr2h,f,c
 12464  00DD0A  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
 12465                           
 12466                           ; BSR set to: 15
 12467  00DD0E  0012               	return		;funcret
 12468  00DD10                     __end_of_RtccReadDate:
 12469                           	opt stack 0
 12470                           tblptru	equ	0xFF8
 12471                           tblptrh	equ	0xFF7
 12472                           tblptrl	equ	0xFF6
 12473                           tablat	equ	0xFF5
 12474                           prodh	equ	0xFF4
 12475                           prodl	equ	0xFF3
 12476                           intcon	equ	0xFF2
 12477                           indf0	equ	0xFEF
 12478                           postinc0	equ	0xFEE
 12479                           fsr0h	equ	0xFEA
 12480                           fsr0l	equ	0xFE9
 12481                           wreg	equ	0xFE8
 12482                           postinc1	equ	0xFE6
 12483                           postdec1	equ	0xFE5
 12484                           fsr1h	equ	0xFE2
 12485                           fsr1l	equ	0xFE1
 12486                           indf2	equ	0xFDF
 12487                           postinc2	equ	0xFDE
 12488                           postdec2	equ	0xFDD
 12489                           fsr2h	equ	0xFDA
 12490                           fsr2l	equ	0xFD9
 12491                           status	equ	0xFD8
 12492                           tblptru	equ	0xFF8
 12493                           tblptrh	equ	0xFF7
 12494                           tblptrl	equ	0xFF6
 12495                           tablat	equ	0xFF5
 12496                           prodh	equ	0xFF4
 12497                           prodl	equ	0xFF3
 12498                           intcon	equ	0xFF2
 12499                           indf0	equ	0xFEF
 12500                           postinc0	equ	0xFEE
 12501                           fsr0h	equ	0xFEA
 12502                           fsr0l	equ	0xFE9
 12503                           wreg	equ	0xFE8
 12504                           postinc1	equ	0xFE6
 12505                           postdec1	equ	0xFE5
 12506                           fsr1h	equ	0xFE2
 12507                           fsr1l	equ	0xFE1
 12508                           indf2	equ	0xFDF
 12509                           postinc2	equ	0xFDE
 12510                           postdec2	equ	0xFDD
 12511                           fsr2h	equ	0xFDA
 12512                           fsr2l	equ	0xFD9
 12513                           status	equ	0xFD8
 12514                           
 12515                           	psect	rparam
 12516  0000                     tblptru	equ	0xFF8
 12517                           tblptrh	equ	0xFF7
 12518                           tblptrl	equ	0xFF6
 12519                           tablat	equ	0xFF5
 12520                           prodh	equ	0xFF4
 12521                           prodl	equ	0xFF3
 12522                           intcon	equ	0xFF2
 12523                           indf0	equ	0xFEF
 12524                           postinc0	equ	0xFEE
 12525                           fsr0h	equ	0xFEA
 12526                           fsr0l	equ	0xFE9
 12527                           wreg	equ	0xFE8
 12528                           postinc1	equ	0xFE6
 12529                           postdec1	equ	0xFE5
 12530                           fsr1h	equ	0xFE2
 12531                           fsr1l	equ	0xFE1
 12532                           indf2	equ	0xFDF
 12533                           postinc2	equ	0xFDE
 12534                           postdec2	equ	0xFDD
 12535                           fsr2h	equ	0xFDA
 12536                           fsr2l	equ	0xFD9
 12537                           status	equ	0xFD8


Data Sizes:
    Strings     205
    Constant    71
    Data        32
    BSS         101
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     22     157
    BANK1           256      0      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(BANK0[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[5]), STR_8(CODE[15]), STR_7(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_34(CODE[17]), STR_33(CODE[21]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[9]), STR_29(CODE[8]), STR_28(CODE[8]), STR_27(CODE[9]), 
		 -> STR_26(CODE[8]), STR_25(CODE[9]), STR_24(CODE[9]), STR_23(CODE[8]), 
		 -> STR_22(CODE[9]), STR_21(CODE[9]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[15]), 
		 -> STR_14(CODE[8]), STR_12(CODE[9]), STR_11(CODE[9]), STR_10(CODE[9]), 
		 -> STR_9(CODE[7]), buffer2(BANK0[20]), 

    guarda_numero_ingresado@num	PTR int  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), 

    array_seleccionar	PTR unsigned char [6] size(2) Largest target is 5
		 -> STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _titila_texto_insert_password->_lcd_putrs
    _resetear_pantalla_ingresar_contrasenia->_lcd_putrs
    _mostrar_presionar_a->_lcd_putrs
    _titila_opcion->_lcd_putrs
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _ir_a_pantalla_editar_contrasenia->_ingreso_numero
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setHoraMinutoSegundo->_sprintf
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _setDiaMesAnio->_sprintf
    _Write_RTC->_RtccWriteDate
    _covertir_valores_de_array_a_escala_decimal->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___ftadd
    ___fttol->___awtoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftdiv->___ftpack
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _activar_alarma->_ingreso_numero
    _titila_alarma_activada->_lcd_putrs
    _ingreso_numero->_guarda_numero_ingresado
    _guarda_numero_ingresado->_sprintf
    _sprintf->___wmul
    ___wmul->___fttol
    ___lwmod->___lwdiv
    _selecciona_opcion_fecha_hora->_lcd_putrs
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    _si_apreta_numero_va_a_pantalla_contrasenia->_ir_a_pantalla_ingresar_contrasenia
    _ir_a_pantalla_ingresar_contrasenia->_ir_a_pantalla_edicion
    _seleccionar_opcion->_editar_fecha_reloj_digital
    _seleccionar_opcion->_editar_hora_reloj_digital
    _editar_hora_reloj_digital->_covertir_valores_de_array_a_escala_decimal
    _editar_fecha_reloj_digital->_covertir_valores_de_array_a_escala_decimal

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  445059
                                             21 BANK0      1     1      0
                           _Read_RTC
              _ir_a_pantalla_inicial
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   32124
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                  _set_reloj_digital
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     925
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ir_a_pantalla_inicial                                0     0      0  411943
                  _set_reloj_digital
_si_apreta_numero_va_a_pantalla_cont
       _titila_texto_insert_password
 ---------------------------------------------------------------------------------
 (2) _titila_texto_insert_password                         1     1      0    8887
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _si_apreta_numero_va_a_pantalla_contrasenia           0     0      0  375056
 _ir_a_pantalla_ingresar_contrasenia
 ---------------------------------------------------------------------------------
 (3) _ir_a_pantalla_ingresar_contrasenia                   2     2      0  375056
                                             19 BANK0      2     2      0
                     _activar_alarma
                     _ingreso_numero
              _ir_a_pantalla_edicion
                         _lcd_gotoxy
                          _lcd_putrs
                _mostrar_presionar_a
_resetear_pantalla_ingresar_contrase
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _resetear_pantalla_ingresar_contrasenia               2     2      0    8955
                                             10 COMRAM     2     2      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _mostrar_presionar_a                                  0     0      0    8887
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _ir_a_pantalla_edicion                                1     1      0  305560
                                             18 BANK0      1     1      0
                           _Read_RTC
                     _cambiar_opcion
                         _lcd_gotoxy
                          _lcd_putrs
       _selecciona_opcion_fecha_hora
                 _seleccionar_opcion
                  _set_reloj_digital
                      _titila_opcion
 ---------------------------------------------------------------------------------
 (5) _titila_opcion                                        1     1      0    8887
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _set_reloj_digital                                    0     0      0   28000
                      _setDiaMesAnio
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (5) _seleccionar_opcion                                   0     0      0  249907
                     _activar_alarma
         _editar_fecha_reloj_digital
          _editar_hora_reloj_digital
   _ir_a_pantalla_editar_contrasenia
 ---------------------------------------------------------------------------------
 (6) _ir_a_pantalla_editar_contrasenia                     2     2      0   21334
                                             60 COMRAM     2     2      0
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (6) _editar_hora_reloj_digital                            9     9      0   99151
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (3) _setHoraMinutoSegundo                                 0     0      0   14000
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _editar_fecha_reloj_digital                           9     9      0   99151
                                             94 COMRAM     1     1      0
                                             10 BANK0      8     8      0
                          _Write_RTC
_covertir_valores_de_array_a_escala_
                     _ingreso_numero
                      _setDiaMesAnio
 ---------------------------------------------------------------------------------
 (3) _setDiaMesAnio                                        0     0      0   14000
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (5) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (7) _covertir_valores_de_array_a_escala_decimal          14    12      2   70051
                                             90 COMRAM     4     2      2
                                              0 BANK0     10    10      0
                           ___awtoft
                            ___fttol
                             ___wmul
                                _pow
 ---------------------------------------------------------------------------------
 (8) _pow                                                 17    11      6   65683
                                             73 COMRAM    17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (9) _log                                                  5     2      3   21400
                                             57 COMRAM     5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (9) _exp                                                  9     6      3   35628
                                             64 COMRAM     9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (10) _ldexp                                               7     2      5     400
                                             57 COMRAM     7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (10) _floor                                               8     5      3    9183
                                             45 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (10) _frexp                                               7     2      5     528
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (11) ___fttol                                            15    11      4     556
                                             12 COMRAM    15    11      4
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) ___ftge                                              9     3      6     744
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (11) ___altoft                                           10     6      4    2758
                                             27 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (10) _eval_poly                                          12     5      7    9553
                                             45 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (11) ___ftmul                                            15     9      6    3882
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftsub                                             6     0      6    4615
                                             45 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (11) ___ftadd                                            12     6      6    4270
                                             33 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (10) ___ftneg                                             3     0      3     273
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (10) ___ftdiv                                            15     9      6    3102
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (10) ___awtoft                                            4     1      3    2863
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (9) ___lltoft                                             9     5      4    2689
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (12) ___ftpack                                            8     3      5    2544
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) _activar_alarma                                       3     3      0   30271
                                             60 COMRAM     3     3      0
                     _ingreso_numero
                         _lcd_gotoxy
                          _lcd_putrs
             _titila_alarma_activada
              _verificar_contrasenia
 ---------------------------------------------------------------------------------
 (4) _verificar_contrasenia                               10     8      2     115
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (7) _titila_alarma_activada                               1     1      0    8887
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (7) _ingreso_numero                                       2     2      0   12357
                                             58 COMRAM     2     2      0
            _guarda_numero_ingresado
 ---------------------------------------------------------------------------------
 (8) _guarda_numero_ingresado                              2     0      2   12357
                                             56 COMRAM     2     0      2
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             32    22     10    2644
                                             33 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     767
                                             27 COMRAM     6     2      4
                           ___awtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _selecciona_opcion_fecha_hora                         1     1      0    8887
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    5906
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    3733
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    2981
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _cambiar_opcion                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (6) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (6) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _ir_a_pantalla_inicial
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
     _si_apreta_numero_va_a_pantalla_contrasenia
       _ir_a_pantalla_ingresar_contrasenia
         _activar_alarma
           _ingreso_numero
             _guarda_numero_ingresado
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _titila_alarma_activada
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _verificar_contrasenia
         _ingreso_numero
           _guarda_numero_ingresado
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___fttol (ARG)
                   ___awtoft (ARG)
                     ___ftpack
               _isdigit
         _ir_a_pantalla_edicion
           _Read_RTC
             _RtccReadDate
             _RtccReadTime
           _cambiar_opcion
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
           _selecciona_opcion_fecha_hora
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
           _seleccionar_opcion
             _activar_alarma
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _titila_alarma_activada
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
               _verificar_contrasenia
             _editar_fecha_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _setDiaMesAnio
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _editar_hora_reloj_digital
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _covertir_valores_de_array_a_escala_decimal
                 ___awtoft
                   ___ftpack
                 ___fttol
                   ___awtoft (ARG)
                     ___ftpack
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _pow
                   ___ftge
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     _frexp (ARG)
                   ___ftneg
                   ___fttol
                     ___awtoft (ARG)
                       ___ftpack
                   ___lltoft
                     ___ftpack
                   _exp
                     ___awtoft
                       ___ftpack
                     ___ftdiv
                       ___ftpack
                     ___ftge
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     ___ftneg
                     ___ftsub
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftadd (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                     ___fttol
                       ___awtoft (ARG)
                         ___ftpack
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _floor
                       ___altoft
                         ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftge
                       ___fttol
                         ___awtoft (ARG)
                           ___ftpack
                       _frexp
                     _ldexp
                       _eval_poly (ARG)
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                     _log (ARG)
                       ___awtoft
                         ___ftpack
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       _eval_poly
                         ___ftadd
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___ftpack (ARG)
                             _frexp (ARG)
                           ___ftpack (ARG)
                           ___wmul (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                             ___fttol (ARG)
                               ___awtoft (ARG)
                                 ___ftpack
                           _frexp (ARG)
                         ___ftmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___wmul
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                       _frexp
                   _log
                     ___awtoft
                       ___ftpack
                     ___ftadd
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___ftpack (ARG)
                       _frexp (ARG)
                     _eval_poly
                       ___ftadd
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___ftpack (ARG)
                           _frexp (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                           ___fttol (ARG)
                             ___awtoft (ARG)
                               ___ftpack
                         _frexp (ARG)
                       ___ftmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___ftpack (ARG)
                         _frexp (ARG)
                       ___wmul
                         ___awtoft (ARG)
                           ___ftpack
                         ___fttol (ARG)
                           ___awtoft (ARG)
                             ___ftpack
                     _frexp
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _setHoraMinutoSegundo
                 _Write_RTC
                   _RtccWrOn
                   _RtccWriteDate
                     _RtccWrOn
                   _RtccWriteTime
                     _RtccWrOn
                   ___awdiv
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_putrs
                   _lcd_putc
                     _lcd_gotoxy
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                     ___awtoft (ARG)
                       ___ftpack
                     ___fttol (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                   _isdigit
             _ir_a_pantalla_editar_contrasenia
               _ingreso_numero
                 _guarda_numero_ingresado
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_putrs
                     _lcd_putc
                       _lcd_gotoxy
                         _lcd_send_byte
                           _Delay100TCYx
                           _lcd_send_nibble
                       _lcd_send_byte
                         _Delay100TCYx
                         _lcd_send_nibble
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                       ___awtoft (ARG)
                         ___ftpack
                       ___fttol (ARG)
                         ___awtoft (ARG)
                           ___ftpack
                     _isdigit
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
           _set_reloj_digital
             _setDiaMesAnio
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
             _setHoraMinutoSegundo
               _Write_RTC
                 _RtccWrOn
                 _RtccWriteDate
                   _RtccWrOn
                 _RtccWriteTime
                   _RtccWrOn
                 ___awdiv
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_putrs
                 _lcd_putc
                   _lcd_gotoxy
                     _lcd_send_byte
                       _Delay100TCYx
                       _lcd_send_nibble
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
               _sprintf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                 ___wmul
                   ___awtoft (ARG)
                     ___ftpack
                   ___fttol (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                 _isdigit
           _titila_opcion
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_putrs
               _lcd_putc
                 _lcd_gotoxy
                   _lcd_send_byte
                     _Delay100TCYx
                     _lcd_send_nibble
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _mostrar_presionar_a
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _resetear_pantalla_ingresar_contrasenia
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_putrs
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _Delay100TCYx
                   _lcd_send_nibble
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
         _verificar_contrasenia
     _titila_texto_insert_password
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _set_reloj_digital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awtoft (ARG)
               ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
           _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       C       8        4.7%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     16      9D       5       98.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     108       6        0.0%
DATA                 0      0     108       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Nov 10 15:32:37 2017

                                             _titila_opcion E460  
                                              ___altoft@exp 0024  
                                                         _a 00A2  
                                                         _b 00A0  
                                                         _c 009E  
                                                         _i 00A6  
                                                         _j 00A4  
                                                         _k 009C  
                                             ___altoft@sign 0025  
                                            ?_lcd_send_byte 0003  
                                              ___awdiv@sign 0006  
                                guarda_numero_ingresado@num 0039  
                                       ___wmul@multiplicand 001E  
                           __size_of_titila_alarma_activada 0078  
                                               lcd_comand@d 0005  
                                              __CFG_CP0$OFF 000000  
                                              ___ftadd@exp1 002D  
                                              ___ftadd@exp2 002C  
                                              ___ftadd@sign 002B  
                                                       l202 FCEE  
                                                       l203 FCDE  
                                                       l220 FDA4  
                                                       l221 FD94  
                                                       l214 FD6A  
                                                       l215 FD5A  
                                                       l320 DA92  
                                                       l232 FE20  
                                                       l208 FD28  
                                                       l321 DACC  
                                                       l233 FE10  
                                                       l209 FD18  
                                                       l313 E4CC  
                                                       l250 FED8  
                                                       l226 FDDE  
                                                       l410 FA78  
                                                       l251 FEC8  
                                                       l227 FDCE  
                                                       l315 E504  
                                                       l500 D408  
                                                       l244 FE94  
                                                       l420 FB8C  
                                                       l412 FAD0  
                                                       l316 E526  
                                                       l245 FE84  
                                                       l173 DB8E  
                                                       l413 FADA  
                                                       l325 DEF0  
                                                       l341 E03C  
                                                       l270 DE60  
                                                       l502 D414  
                                                       l190 DB44  
                                                       l238 FE5A  
                                                       l174 DBB2  
                                                       l422 FC60  
                                                       l342 E058  
                                                       l503 D420  
                                                       l239 FE4A  
                                                       l415 FBBA  
                                                       l335 DF46  
                                                       l504 D42C  
                                                       l520 D560  
                                                       l424 FBDE  
                                                       l408 FB08  
                                                       l432 F6AE  
                                                       l344 E06E  
                                                       l352 DC18  
                                                       l521 D538  
                                                       l417 FB2A  
                                                       l441 F6D0  
                                                       l185 E0EE  
                                                       l426 FC28  
                                                       l178 D912  
                                                       l450 F7C0  
                                                       l434 F62C  
                                                       l346 E078  
                                                       l275 DEA0  
                                                       l267 DE58  
                                                       l291 F282  
                                                       l427 FC32  
                                                       l419 FB82  
                                                       l451 F7CA  
                                                       l443 F71A  
                                                       l196 FCB4  
                                                       l292 F2EC  
                                                       l444 F724  
                                                       l436 F676  
                                                       l277 DEBA  
                                                       l269 DE70  
                                                       l197 FCA4  
                                                       l285 D824  
                                                       l293 F2E6  
                                                       l437 F680  
                                                       l461 D2D2  
                                                       l278 DEAA  
                                                       l550 F8D6  
                                                       l446 F7F8  
                                                       l366 DC5C  
                                                       l551 F8FE  
                                                       l535 F81C  
                                                       l295 F32A  
                                                       l623 EBC2  
                                                       l439 F752  
                                                       l359 DC3A  
                                                       l544 F878  
                                                       l536 F836  
                                                       l624 EC20  
                                                       l448 F776  
                                                       l617 EB5E  
                                                       l393 DFFA  
                                                       l482 D334  
                                                       l546 F8DC  
                                                       l538 F84A  
                                                       l298 F3AA  
                                                       l386 DF94  
                                                       l483 D336  
                                                       l555 F96A  
                                                       l539 F844  
                                                       l299 F400  
                                                       l387 DFB0  
                                                       l556 F972  
                                                       l396 D970  
                                                       l900 E1C6  
                                                       l628 EC2A  
                                                       l652 E974  
                                                       l565 FA14  
                                                       l557 F996  
                                                       l397 D9CA  
                                                       l901 E1BC  
                                                       l653 E9CC  
                                                       l389 DFC8  
                                                       l494 D294  
                                                       l566 F9C2  
                                                       l398 D9AC  
                                                       l646 E920  
                                                       l830 DA0E  
                                                       l399 D9B6  
                                                       l743 D890  
                                                       l487 D7A2  
                                                       l744 D884  
                                                       l657 E9D6  
                                                       l833 DA36  
                                                       l489 D7C4  
                                                       l834 DA40  
                                                       l826 D9E8  
                                                       l499 D438  
                                                       l835 DA4E  
                                                       l827 D9F8  
                                                       l860 D20E  
                                                       l940 F15A  
                                                       l925 F0DE  
                                                       l829 DA16  
                                                       l854 D35E  
                                                       l934 F16E  
                                                       l951 F1C6  
                                                       l960 E666  
                                                       l952 F1E2  
                                                       l961 E6A4  
                                                       l953 F212  
                                                       l929 F108  
                                                       l962 E6CA  
                                                       l874 D21E  
                                                       l939 F164  
                                                       l948 F1A2  
                                                       l980 E7B6  
                                                       l949 F198  
                                                       l973 E724  
                                                       l894 E16A  
                                                       l958 E63E  
                                                       l990 D398  
                                                       l966 DD40  
                                                       l895 E160  
                                                       l975 E74C  
                                                       l967 DD70  
                                                       l984 D2C0  
                                                       l976 E77E  
                                                       l897 E19E  
                                                       l977 E78E  
                                                       l898 E188  
                                                       l994 E81C  
                                                       l979 E7A6  
                                                       l996 E892  
                                                       l997 E882  
                                                       _dia 00E7  
                                                       _key 00A8  
                                                       _mes 00EB  
                                                       _exp F40E  
                                                       _log E9E0  
                                                       _pow ED7A  
                                                       wreg 000FE8  
                                 _editar_hora_reloj_digital F5F6  
                                           RtccReadDate@pDt 0001  
                                               lcd_gotoxy@x 0006  
                                               lcd_gotoxy@y 0005  
                                              ___ftdiv@cntr 0012  
                                              ___ftdiv@sign 0017  
                                                      l1002 E8B6  
                                                      l1003 E8AA  
                                                      l1005 E8D2  
                                                      l1102 D3F0  
                                                      l1103 D3FA  
                                                      l1009 D280  
                                                      l1121 EDD8  
                                                      l1122 EE5E  
                                                      l1123 EE3C  
                                                      l1124 EEE2  
                                                      l1302 E208  
                                                      l1118 EDC0  
                                                      l1119 EDB2  
                                                      l1056 D646  
                                                      l1304 E24E  
                                                      l1320 E9FC  
                                                      l1057 D63A  
                                                      l1306 E27E  
                                                      l1322 EA1E  
                                                      l1307 E272  
                                                      l1092 D5C6  
                                                      l1093 D5D0  
                                                      l1088 D5A6  
                                                      l1328 E372  
                                                      l1280 F45E  
                                                      l1089 D59E  
                                                      l1329 E2F6  
                                                      l1281 F496  
                                                      l1098 D3D8  
                                                      l1290 E566  
                                                      l1282 F4C4  
                                                      l1099 D3D0  
                                                      l1283 F5E8  
                                                      l1292 E58E  
                                                      l1284 F5BE  
                                                      l1293 E608  
                                                      l1278 F426  
                                                      l1289 E574  
                                                      l1298 DDC8  
                                                      l4063 F91A  
                                                      l3371 DD9C  
                                                      l5123 E058  
                                                      l4237 F5BE  
                                                      l5053 D4B6  
                                                      l4701 DFB8  
                                                      l5253 D7BC  
                                                      l5239 D79A  
                                                      l4529 D9AC  
                                                      l4537 E39C  
                                                      l4635 F2EC  
                                                      l4731 FAD0  
                                                      l4735 FAF0  
                                                      l4823 F676  
                                                      l4763 FBA2  
                                                      l4851 F71A  
                                                      l4827 F696  
                                                      ?_exp 0041  
                                                      ?_log 003A  
                                                      l4791 FC48  
                                                      l4759 FB82  
                                                      l4855 F73A  
                                                      l4787 FC28  
                                                      l4883 F7E0  
                                                      l4699 DFB0  
                                                      l4879 F7C0  
                                                      ?_pow 004A  
                                                      STR_1 FFD4  
                                                      STR_2 FFED  
                                                      STR_3 FFE8  
                                                      STR_4 FFD9  
                                                      STR_5 FFE3  
                                                      STR_6 FFDE  
                                                      STR_7 FF72  
                                                      STR_8 FF81  
                                                      STR_9 FFCD  
                                                      u3210 D70A  
                                                      u3230 D722  
                                                      u3310 E152  
                                                      u4030 E228  
                                                      u3250 D73C  
                                                      u3411 F09C  
                                                      u3228 D70C  
                                                      u5100 FE9C  
                                                      u5020 FE28  
                                                      u3421 F0B0  
                                                      u3270 D758  
                                                      u3350 E1D0  
                                                      u3510 F138  
                                                      u4038 E22A  
                                                      u3248 D724  
                                                      u6000 D4DA  
                                                      u4410 F99E  
                                                      u3450 F0D0  
                                                      u5210 E456  
                                                      u3268 D73E  
                                                      u4420 F9BC  
                                                      u5060 FE62  
                                                      u6020 DF0E  
                                                      u3621 E70C  
                                                      u4430 FA1C  
                                                      u5310 F35E  
                                                      u3550 F176  
                                                      u4510 DA1A  
                                                      u3711 E800  
                                                      u3288 D75A  
                                                      u4440 FA34  
                                                      u4360 F946  
                                                      u5320 F376  
                                                      u5240 F298  
                                                      u3480 F0FA  
                                                      u3800 DDF0  
                                                      u4600 F49E  
                                                      u6040 DF2C  
                                                      u3641 E734  
                                                      u4450 D558  
                                                      u5410 F3E4  
                                                      u3730 E83A  
                                                      u4610 F4A0  
                                                      u6210 DC30  
                                                      u6130 DC06  
                                                      u4460 D580  
                                                      u5340 F38E  
                                                      u5260 F2B2  
                                                      u3580 F1AA  
                                                      u4700 EE24  
                                                      u5500 FAC0  
                                                      u5190 D9CA  
                                                      u6070 E052  
                                                      u6310 DC6C  
                                                      u6230 DC36  
                                                      u6150 DC0E  
                                                      u3831 E626  
                                                      u3735 E832  
                                                      u3920 D5AA  
                                                      u5408 F3CE  
                                                      u5280 F2CA  
                                                      u3808 DDF2  
                                                      u4720 DB80  
                                                      u5600 FC18  
                                                      u5440 DFAA  
                                                      u4457 D54E  
                                                      u5338 F378  
                                                      u3770 E8BC  
                                                      u4730 DBA4  
                                                      u6090 E08E  
                                                      u6330 DC74  
                                                      u6250 DC4A  
                                                      u6170 DC14  
                                                      u4467 D576  
                                                      u3851 E64E  
                                                      u4900 FD72  
                                                      u4820 FCF6  
                                                      u5428 F3E6  
                                                      u5380 F3B4  
                                                      u5540 FB5C  
                                                      u4740 D8F0  
                                                      u5700 F70A  
                                                      u3950 D3DC  
                                                      u5390 F3CC  
                                                      u5358 F390  
                                                      u5278 F2B4  
                                                      u5550 FB72  
                                                      u6350 DC7C  
                                                      u6270 DC52  
                                                      u6190 DC28  
                                                      u6417 D2E4  
                                                      u5810 DE78  
                                                      u5298 F2CC  
                                                      u5490 FAAA  
                                                      u5650 F666  
                                                      u6290 DC58  
                                                      u6370 D7B2  
                                                      u6507 F6A6  
                                                      u6427 D220  
                                                      u4940 FDAC  
                                                      u4860 FD30  
                                                      u4780 FCBC  
                                                      u6517 F74A  
                                                      u6437 E0E6  
                                                      u3990 E580  
                                                      u5750 F7B0  
                                                      u6607 D81C  
                                                      u6527 F7F0  
                                                      u6447 E136  
                                                      u6617 D856  
                                                      u6537 FB00  
                                                      u6457 DF4E  
                                                      u6707 FE8A  
                                                      u6627 FCAA  
                                                      u6547 FBB2  
                                                      u6467 E4A8  
                                                      u4980 FDE6  
                                                      u6717 FECE  
                                                      u6637 FCE4  
                                                      u6557 FC58  
                                                      u6477 E4B6  
                                                      u6727 DAD2  
                                                      u6647 FD1E  
                                                      u6567 F2DC  
                                                      u6487 E4C4  
                                                      u6737 D210  
                                                      u6657 FD60  
                                                      u6577 F31E  
                                                      u6497 E52C  
                                                      u6747 DE66  
                                                      u6667 FD9A  
                                                      u6587 F3A0  
                                                      u6757 DEB0  
                                                      u6677 FDD4  
                                                      u6597 F3F6  
                                                      u6687 FE16  
                                                      u6697 FE50  
                                          ?_lcd_send_nibble 0001  
                                                      _anio 00ED  
                                                      _flag 07E0  
                                                      _main D2CE  
                                                      _hora 00E5  
                                              ___ftpack@arg 0001  
                                              ___ftpack@exp 0004  
                                                      fsr0h 000FEA  
                                                      fsr1h 000FE2  
                                                      indf0 000FEF  
                                                      fsr2h 000FDA  
                                                      fsr0l 000FE9  
                                                      indf2 000FDF  
                                                      fsr1l 000FE1  
                                                      fsr2l 000FD9  
                                                      exp@x 0041  
                                                      log@x 003A  
                                             __CFG_T1DIG$ON 000000  
                                  ?_guarda_numero_ingresado 0039  
                                                      pow@x 004A  
                                                      pow@y 004D  
                                                      prodh 000FF4  
                                                      prodl 000FF3  
                                                      start 0000  
                                             __CFG_IESO$OFF 000000  
                                          RtccReadDate@rTD0 000B  
                                          RtccReadDate@rTD1 0003  
                                              ___ftmul@cntr 001A  
                                            ?_titila_opcion 0001  
                                              ___param_bank 000000  
                                              ___ftmul@sign 001B  
                                           RtccReadTime@pTm 0001  
                                              ___fttol@exp1 001B  
                                                     ??_exp 0044  
                                                     ??_log 003D  
                                              ___fttol@lval 0017  
                                                     ??_pow 0050  
                                               _Delay1KTCYx D21C  
                                             __CFG_PLLDIV$1 000000  
                                                     ?_main 0001  
                                           __end_of___awdiv DA58  
                                           __end_of___ftadd F238  
                                                     STR_10 FF99  
                                                     STR_11 FF47  
                                                     STR_12 FF47  
                                                     STR_20 FF3F  
                                                     STR_13 FFF2  
                                                     STR_21 FF90  
                                                     STR_30 FFB4  
                                                     STR_14 FFC5  
                                                     STR_22 FFB4  
                                                     STR_23 FF48  
                                                     STR_15 FF41  
                                                     STR_31 FF61  
                                                     STR_24 FF47  
                                                     STR_32 FF3F  
                                                     STR_16 FF50  
                                                     STR_25 FFA2  
                                                     STR_17 FF3F  
                                                     STR_33 FF2A  
                                                     STR_34 FF3F  
                                                     STR_18 FF50  
                                                     STR_26 FFC5  
                                                     STR_19 FF3F  
                                                     STR_27 FFAB  
                                                     STR_28 FFC5  
                                                     STR_29 FFBD  
                                     __size_of_Delay100TCYx 0010  
                                           __end_of___ftdiv E6FC  
                                           __end_of___ftneg D2CE  
                                           __end_of___ftmul E7F0  
                                           ___awdiv@divisor 0003  
                                           __end_of___ftsub D3C2  
                                           __end_of___fttol E8E4  
               covertir_valores_de_array_a_escala_decimal@i 00CD  
                                           __end_of___lwdiv D5DA  
                                           __end_of___lwmod D404  
                                           ___awdiv@counter 0005  
                                                     _TRISA 000F92  
                                                     _TRISB 000F93  
                                                     _TRISC 000F94  
                     activar_alarma@intentos_de_contrasenia 003E  
                                              ___lltoft@exp 0011  
                                            __CFG_FCMEN$OFF 000000  
                                             ___awtoft@sign 000C  
                              __size_of_mostrar_presionar_a 0018  
                                           __end_of_dpowers FEED  
                                                     _floor E538  
                                                     _ldexp E1F0  
                                                     _frexp DDA0  
                                                     _mes_d 00F2  
                                                     _errno 0088  
                                                     _mes_u 00F3  
                                           __end_of_isdigit D288  
                                             ___ftpack@sign 0005  
                                                     _setup D44E  
                                    _titila_alarma_activada D7EA  
                                                     tablat 000FF5  
                                                     pow@yi 0057  
                                      _setHoraMinutoSegundo D8DA  
                                              lcd_putrs@ptr 0009  
                                                     status 000FD8  
                                           __end_of_sprintf FA42  
                                 _motivo_ingreso_de_numeros 0096  
                                               exp@exponent 0047  
                                   __CFG_DSWDTOSC$INTOSCREF 000000  
                                               ldexp@newexp 003D  
                                            _activar_alarma F238  
                                           __initialization D5DA  
                                               log@exponent 003D  
                                              _Delay100TCYx D20C  
                                              __end_of_main D2F2  
                                           ??_lcd_send_byte 0004  
                                          RtccReadTime@rTD0 000B  
                                          RtccReadTime@rTD1 0003  
                                          __end_of_Read_RTC ED7A  
            __end_of_resetear_pantalla_ingresar_contrasenia D4E6  
           __size_of_resetear_pantalla_ingresar_contrasenia 004E  
                  ??_resetear_pantalla_ingresar_contrasenia 000B  
                   ?_resetear_pantalla_ingresar_contrasenia 0001  
                    _resetear_pantalla_ingresar_contrasenia D498  
                                                    ??_main 00DA  
                                             ___fttol@sign1 0016  
                                             __activetblptr 000002  
                                          __end_of_RtccWrOn D23E  
                                            _alarma_sonando 0092  
                                                    ?_floor 002E  
                                                    ?_ldexp 003A  
                                                    ?_frexp 0001  
                                          __end_of___altoft D8DA  
                                                    _EECON2 000FA7  
                                                    _ANCON0 000F48  
                                                    _ANCON1 000F49  
                                          ___awdiv@dividend 0001  
                                                    ?_setup 0001  
                                          __end_of___awtoft D382  
                   editar_fecha_reloj_digital@mes_ingresado 00D1  
                                          __end_of___ftpack E1F0  
                                __end_of_seleccionar_opcion D536  
                                          __end_of___lltoft D690  
                            __size_of_verificar_contrasenia 007E  
                                     ?_setHoraMinutoSegundo 0001  
                                            __CFG_WDTEN$OFF 000000  
                             __end_of_verificar_contrasenia D9D4  
                                          RtccWriteDate@pDt 0001  
                                                    _RTCCFG 000F3F  
                                            __CFG_WPCFG$OFF 000000  
                                          ??_cambiar_opcion 0001  
                                    __end_of_activar_alarma F40E  
                                         _set_reloj_digital D1DA  
                                            __CFG_WPDIS$OFF 000000  
                                           ??_titila_opcion 000B  
                   resetear_pantalla_ingresar_contrasenia@i 000B  
                                            __CFG_XINST$OFF 000000  
                                        ?_set_reloj_digital 0001  
                                          __end_of_lcd_init D7EA  
                                          __end_of_lcd_putc D44E  
                                                    ___ftge DD10  
                                                    ___wmul D2F2  
                                                 ??___awdiv 0005  
                                                 ??___ftadd 0028  
                                            __CFG_STVREN$ON 000000  
                                                 ??___ftdiv 000F  
                                                 ??___ftneg 0004  
                                                    _diasem 00E9  
                                                 ??___ftmul 0013  
                                                    _anio_d 00EF  
                                                 ??___ftsub 0034  
                                                 ??___fttol 0011  
                                                    _anio_u 00F0  
                                   ??_ir_a_pantalla_edicion 00D7  
                                                 ??___lwdiv 0005  
                                                 ??___lwmod 000C  
                                                    _hora_d 00F6  
                                                    _hora_u 00F7  
                                                    clear_0 D624  
                                       ??_set_reloj_digital 0039  
                                          ___awdiv@quotient 0007  
                                                    _minuto 00E3  
                      __end_of_selecciona_opcion_fecha_hora DADE  
                     __size_of_selecciona_opcion_fecha_hora 0086  
                              _selecciona_opcion_fecha_hora DA58  
                                   ??_ir_a_pantalla_inicial 0060  
                                     __end_of_RtccWriteDate EC34  
                                     __end_of_RtccWriteTime E9E0  
                                                    floor@i 0031  
                                                    floor@x 002E  
                                     ___ftmul@f3_as_product 0017  
                                          RtccWriteTime@pTm 0001  
                                                 ??_isdigit 0001  
                         editar_hora_reloj_digital@posicion 00D5  
                                              __mediumconst FEE2  
                                                    tblptrh 000FF7  
                                                    tblptrl 000FF6  
                                                    tblptru 000FF8  
                                                 ??_sprintf 002C  
                                          __end_ofexp@coeff FF0F  
                                          __end_oflog@coeff FF2A  
                                 __end_of_set_reloj_digital D1E4  
                                                __accesstop 0060  
                                   __end_of__initialization D62A  
                                                ___altoft@c 001C  
                        __size_of_editar_hora_reloj_digital 021C  
                                                ___ftadd@f1 0022  
                                                ___ftadd@f2 0025  
                                        __size_of_Write_RTC 019C  
                                                ___ftge@ff1 0001  
                                                ___ftge@ff2 0004  
                                           ?_activar_alarma 0001  
                                              eval_poly@res 0037  
                                             ___rparam_used 000001  
                                                ___ftdiv@f1 0009  
                                                ___ftdiv@f2 000C  
                                                ___ftdiv@f3 0013  
                                                ___ftneg@f1 0001  
                                                ___awtoft@c 0009  
                                                ___ftmul@f1 000D  
                                                ___ftmul@f2 0010  
                                                ___ftsub@f1 002E  
                                                ___ftsub@f2 0031  
                                                ___fttol@f1 000D  
                                            __pcstackCOMRAM 0001  
                                              __pidataBANK0 D23E  
                                              __pidataBANK1 D1E4  
                                                ___lltoft@c 0009  
                                             __end_of_floor E616  
                                             __end_of_ldexp E2B6  
                                             __end_of_frexp DE30  
                      __end_of_titila_texto_insert_password E142  
                     __size_of_titila_texto_insert_password 00A4  
                              _titila_texto_insert_password E09E  
                                             __end_of_setup D498  
                                           _alarma_activada 0094  
                                           __CFG_DSWDTPS$G2 000000  
                             ?_selecciona_opcion_fecha_hora 0001  
                                           __CFG_OSC$INTOSC 000000  
                __end_of_ir_a_pantalla_ingresar_contrasenia E09E  
               __size_of_ir_a_pantalla_ingresar_contrasenia 00A2  
                      ??_ir_a_pantalla_ingresar_contrasenia 0060  
                       ?_ir_a_pantalla_ingresar_contrasenia 0001  
                        _ir_a_pantalla_ingresar_contrasenia DFFC  
                                         lcd_gotoxy@address 0007  
                                        __size_of_lcd_putrs 0052  
                                                   ??_floor 0031  
                                                   ??_ldexp 003F  
                                                   ??_frexp 0006  
                  __end_of_ir_a_pantalla_editar_contrasenia DFFC  
                 __size_of_ir_a_pantalla_editar_contrasenia 009E  
                        ??_ir_a_pantalla_editar_contrasenia 003D  
                         ?_ir_a_pantalla_editar_contrasenia 0001  
                          _ir_a_pantalla_editar_contrasenia DF5E  
                                    ??_setHoraMinutoSegundo 0039  
                                              sprintf@width 0036  
                                                   ??_setup 0039  
                                                __pbssBANK0 0060  
                                        __size_of_eval_poly 00D2  
                                                 ?_Read_RTC 0001  
                                                _dia_semana 00F1  
                                 RtccWriteTime@tempHourWDay 000A  
                         __end_of_editar_hora_reloj_digital F812  
                                                 ?_RtccWrOn 0001  
                                            lcd_send_byte@n 0003  
                                                   ?___ftge 0001  
                                       _mostrar_presionar_a D252  
                                                   ?___wmul 001C  
                                             ?_RtccReadDate 0001  
                                             ?_RtccReadTime 0001  
                       __size_of_editar_fecha_reloj_digital 0238  
                                              ?_Delay1KTCYx 0001  
                                                 ?___altoft 001C  
                                                 ?___awtoft 0009  
                                    __size_of_setDiaMesAnio 008C  
                                                 ?___ftpack 0001  
                          __size_of_guarda_numero_ingresado 008C  
                                                 ?___lltoft 0009  
                             ?_titila_texto_insert_password 0001  
                                         __end_of_Write_RTC F08C  
                                                _lcd_comand D1FE  
                                                _lcd_gotoxy D288  
                                   ?_titila_alarma_activada 0001  
                                      ?_mostrar_presionar_a 0001  
                                                   _RTCVALH 000F99  
                                                   _RTCVALL 000F98  
                                    verificar_contrasenia@i 0009  
                                                 ?_lcd_init 0001  
                                                 ?_lcd_putc 0001  
                                __size_of_set_reloj_digital 000A  
                                                ??_Read_RTC 0013  
                                                   __Hparam 0000  
                   editar_fecha_reloj_digital@dia_ingresado 00CF  
                                                   __Lparam 0000  
                                  __size_of_lcd_send_nibble 0076  
                                                ??_RtccWrOn 0001  
                                            ??_RtccReadDate 0003  
                                           __size_of___ftge 0090  
                                            ??_RtccReadTime 0003  
                                                   ___awdiv D9D4  
                                                   ___ftadd F08C  
                                         __end_of_lcd_putrs D588  
                                                   ___ftdiv E616  
                                                   ___ftneg D2AA  
                                           __size_of___wmul 0026  
                                                   ___ftmul E6FC  
                                                   ___ftsub D382  
                                                   ___fttol E7F0  
                                                   ___lwdiv D588  
                                                   ___lwmod D3C2  
                                   __size_of_ingreso_numero 0268  
                                                ??___altoft 0020  
                                               _RtccTimeVal 0084  
                                                   __pcinit D5DA  
                                                   _fecha_d 00F4  
                                                   _fecha_u 00F5  
                                                ??___awtoft 000C  
                                                ??___ftpack 0006  
                                         __end_of_eval_poly E388  
                                                   __ramtop 0F00  
                                                ??___lltoft 000D  
                                                   __ptext0 D2CE  
                                                   __ptext1 D44E  
                                                   __ptext2 D774  
                                                   __ptext3 D21C  
                                                   __ptext4 D1FE  
                                                   __ptext5 D1F0  
                                                   __ptext6 E09E  
                                                   __ptext7 DBF6  
                                                   __ptext8 DFFC  
                                                   __ptext9 D498  
                                                   _buffer2 00A9  
                                                 _T1CONbits 000FCD  
                                                   _dpowers FEE3  
                                              __size_of_exp 01E8  
                                              __size_of_log 011E  
                                                   _isdigit D26A  
                                              __size_of_pow 0176  
                            __end_of_titila_alarma_activada D862  
                                        _numeros_ingresados 0098  
                                        _numeros_para_fecha 0080  
                                                   _segundo 009A  
                                     ??_mostrar_presionar_a 000B  
ir_a_pantalla_ingresar_contrasenia@intentos_de_contrasenias 00D8  
                            ??_selecciona_opcion_fecha_hora 000B  
                                                   _sprintf F812  
                                                ??_lcd_init 0005  
                                                ??_lcd_putc 0008  
                                      end_of_initialization D62A  
                                                   exp@sign 0049  
                                             _setDiaMesAnio DB6A  
                                      lcd_send_byte@address 0004  
                                             __Lmediumconst FEE2  
                               verificar_contrasenia@equals 0007  
                                                   pow@sign 0056  
                                                   postdec1 000FE5  
                                                   postdec2 000FDD  
                                        _seleccionar_opcion D4E6  
                                                   postinc0 000FEE  
                                                   postinc1 000FE6  
                                                   postinc2 000FDE  
                                     __end_of_lcd_send_byte D34A  
                            __size_of_ir_a_pantalla_edicion 009A  
                             __end_of_ir_a_pantalla_edicion DF5E  
                                                 _PORTAbits 000F80  
                                                 _PORTCbits 000F82  
                                       ?_seleccionar_opcion 0001  
                                          __CFG_DSBOREN$OFF 000000  
                            __size_of_ir_a_pantalla_inicial 000E  
                             __end_of_ir_a_pantalla_inicial D1FE  
                        __end_of_editar_fecha_reloj_digital FC7A  
                                _editar_fecha_reloj_digital FA42  
                                               ?_lcd_comand 0001  
                                          __CFG_CPUDIV$OSC1 000000  
                                                 _TRISBbits 000F93  
                            ??_titila_texto_insert_password 000B  
                                               ?_lcd_gotoxy 0005  
                                           _LCD_INIT_STRING FEED  
                                          ??_activar_alarma 003D  
                                            ?_setDiaMesAnio 0001  
                                      ??_seleccionar_opcion 0060  
                                               ___ftdiv@exp 0016  
                                     _verificar_contrasenia D956  
                                          __CFG_IOL1WAY$OFF 000000  
                                 RtccWriteDate@tempDayMonth 000A  
                                       __CFG_MSSP7B_EN$MSK7 000000  
                                               ___ftmul@exp 0016  
                                     __end_of_titila_opcion E538  
                editar_hora_reloj_digital@segundo_ingresado 00D3  
                                          Delay100TCYx@unit 0001  
                                            __end_of___ftge DDA0  
                                            __end_of___wmul D318  
                                   _guarda_numero_ingresado DADE  
                                 RtccWriteDate@tempHourWDay 000C  
                   editar_hora_reloj_digital@hora_ingresada 00CF  
                                         ??_lcd_send_nibble 0001  
                                             __pbitbssBANK0 07E0  
                                      __size_of_Delay1KTCYx 0010  
                                          __CFG_DSWDTEN$OFF 000000  
                 editar_hora_reloj_digital@minuto_ingresado 00D1  
                                                floor@expon 0034  
                                       start_initialization D5DA  
                                                eval_poly@d 0031  
                                                eval_poly@n 0033  
                                                eval_poly@x 002E  
                                                ldexp@value 003A  
                                               __end_of_exp F5F6  
                                               __end_of_log EAFE  
                                               __end_of_pow EEF0  
                                      __end_of_RtccReadDate DD10  
                                      __end_of_RtccReadTime D6FE  
        __end_of_covertir_valores_de_array_a_escala_decimal E460  
       __size_of_covertir_valores_de_array_a_escala_decimal 00D8  
              ??_covertir_valores_de_array_a_escala_decimal 005D  
               ?_covertir_valores_de_array_a_escala_decimal 005B  
                _covertir_valores_de_array_a_escala_decimal E388  
                                                frexp@value 0001  
                                      RtccWriteTime@wasAlrm 0006  
                                      RtccWriteTime@wasWrEn 0007  
                                    __size_of_RtccWriteDate 0136  
                                           RtccWriteDate@di 0003  
                                    __size_of_RtccWriteTime 00FC  
                                         __size_of_Read_RTC 0146  
                                       __size_of_lcd_comand 000E  
                                                  ??___ftge 0007  
                                       __size_of_lcd_gotoxy 0022  
                                                  ??___wmul 0020  
                                            _ingreso_numero FC7A  
                                               __pdataBANK0 00DB  
                                               __pdataBANK1 0100  
                                         __size_of_RtccWrOn 0012  
                                           RtccWriteTime@di 0003  
                                          __CFG_LPT1OSC$OFF 000000  
                                   __size_of_cambiar_opcion 0094  
                                         __size_of___altoft 0078  
                                               _ALRMCFGbits 000F91  
                                   __end_of_LCD_INIT_STRING FEF1  
                                         __size_of___awtoft 0038  
                                         __size_of___ftpack 00AE  
                                         __size_of___lltoft 005C  
                                             __pcstackBANK0 00C5  
                                                 _Write_RTC EEF0  
                                           ??_setDiaMesAnio 0039  
                                              _isdigit$1990 0002  
                                           Delay1KTCYx@unit 0001  
                             __size_of_setHoraMinutoSegundo 007C  
                                    ?_verificar_contrasenia 0001  
                                         __size_of_lcd_init 0076  
                                               sprintf@flag 0032  
                                         __size_of_lcd_putc 004A  
                                               sprintf@prec 0035  
                                         _array_contrasenia 00DB  
                                                 __pnvBANK0 00EF  
                                          ___lwdiv@dividend 0001  
                                ?_editar_hora_reloj_digital 0001  
                                    __end_of_ingreso_numero FEE2  
                                             ?_Delay100TCYx 0001  
                                 ??_guarda_numero_ingresado 003B  
                                             __pmediumconst FEE2  
                                                  ?___awdiv 0001  
                                                  ?___ftadd 0022  
                                                  ?___ftdiv 0009  
                                                  ?___ftneg 0001  
                                                  ?___ftmul 000D  
                                                  ?___ftsub 002E  
                                                  ?___fttol 000D  
                                                  ?___lwdiv 0001  
                                                  ?___lwmod 0008  
                                   RtccWriteTime@tempMinSec 0008  
                               _array_contrasenia_ingresada 0060  
                                                 _lcd_putrs D536  
                                             _RtccWriteDate EAFE  
                                             _RtccWriteTime E8E4  
                                                  ?_isdigit 0001  
                                                 _eval_poly E2B6  
                                      __CFG_RTCOSC$T1OSCREF 000000  
                                                ?_Write_RTC 0001  
                                          ___lwdiv@quotient 0005  
                                                  ?_sprintf 0022  
                                            __size_of_floor 00DE  
                                            __size_of_ldexp 00C6  
                                            __size_of_frexp 0090  
                              ??_editar_fecha_reloj_digital 005F  
                                            __size_of_setup 004A  
                                          _RtccAlrmTimeDate 0070  
                                            ___wmul@product 0020  
                                                  _LATAbits 000F89  
                                                  _LATBbits 000F8A  
                                                  _PIE3bits 000FA3  
                                                 _segundo_d 00FA  
                                            ??_Delay100TCYx 0001  
                                                 _segundo_u 00FB  
                                           ?_ingreso_numero 0001  
                                          __CFG_WDTPS$32768 000000  
                        editar_fecha_reloj_digital@posicion 00D5  
                                        RtccWriteDate@wasOn 0005  
                                  _txt_insertar_contrasenia 008E  
                                        _Rtcc_read_TimeDate 0068  
                                            ?_RtccWriteDate 0001  
                               __end_of_mostrar_presionar_a D26A  
                                                ?_lcd_putrs 0009  
                                         ___wmul@multiplier 001C  
                                            ?_RtccWriteTime 0001  
                                                 lcd_init@i 0005  
                                     __size_of_RtccReadDate 008E  
                                              ??_lcd_comand 0005  
                                                ?_eval_poly 002E  
                               ?_editar_fecha_reloj_digital 0001  
                  editar_fecha_reloj_digital@anio_ingresado 00D3  
                                                 lcd_putc@c 0008  
                                     __size_of_RtccReadTime 006E  
                                              ??_lcd_gotoxy 0006  
                           __end_of_guarda_numero_ingresado DB6A  
                                                 copy_data0 D5EE  
                                                 copy_data1 D60E  
                                                  _Read_RTC EC34  
                                         _array_seleccionar 0100  
                                                 frexp@eptr 0004  
                                           _lcd_send_nibble D6FE  
                                                  __Hrparam 0000  
                                                  _RtccDate 00BD  
                                                  __Lrparam 0000  
                                                  _RtccTime 00C1  
                                                  _RtccWrOn D22C  
                                        __end_of_lcd_comand D20C  
                                        __end_of_lcd_gotoxy D2AA  
                                              _RtccReadDate DC82  
                                            _cambiar_opcion DE30  
                                          __size_of___awdiv 0084  
                                          __size_of___ftadd 01AC  
                                              _RtccReadTime D690  
                                          __size_of___ftdiv 00E6  
                                          __size_of___ftneg 0024  
                                                  ___altoft D862  
                                          __size_of___ftmul 00F4  
                                          __size_of___ftsub 0040  
                                          __size_of___fttol 00F4  
                                          __size_of___lwdiv 0052  
                                          __size_of___lwmod 0042  
                                                  ___awtoft D34A  
                                                  ___ftpack E142  
                                                  ___lltoft D634  
                         ir_a_pantalla_editar_contrasenia@i 003D  
                                              _RtccTimeDate 0078  
           _covertir_valores_de_array_a_escala_decimal$2467 00C5  
           _covertir_valores_de_array_a_escala_decimal$2468 00C8  
                                                  _exp$2471 0044  
                                     _ir_a_pantalla_edicion DEC4  
                                                sprintf@val 0033  
                                          __size_of_isdigit 001E  
                                           ___lwdiv@divisor 0003  
                                     _ir_a_pantalla_inicial D1F0  
                                               ??_Write_RTC 000E  
                                           ___lwdiv@counter 0007  
                                                  __ptext10 D252  
                                                  __ptext11 DEC4  
                                                  __ptext20 EEF0  
                                                  __ptext12 E460  
                                                  __ptext21 D9D4  
                                                  __ptext13 D1DA  
                                                  __ptext30 E538  
                                                  __ptext22 E8E4  
                                                  __ptext14 D4E6  
                                                  __ptext31 DDA0  
                                                  __ptext23 EAFE  
                                                  __ptext15 DF5E  
                                                  __ptext40 E616  
                                                  __ptext32 E7F0  
                                                  __ptext24 D22C  
                                                  __ptext16 F5F6  
                                                  __ptext41 D34A  
                                                  __ptext33 DD10  
                                                  __ptext25 E388  
                                                  __ptext17 D8DA  
                                                  __ptext50 D26A  
                                                  __ptext42 D634  
                                                  __ptext34 D862  
                                                  __ptext26 ED7A  
                                                  __ptext18 FA42  
                                                  __ptext51 D2F2  
                                                  __ptext43 E142  
                                                  __ptext35 E2B6  
                                                  __ptext27 E9E0  
                                                  __ptext19 DB6A  
                                                  __ptext60 D20C  
                                                  __ptext52 D3C2  
                                                  __ptext44 F238  
                                                  __ptext36 E6FC  
                                                  __ptext28 F40E  
                                                  __ptext61 DE30  
                                                  __ptext53 D588  
                                                  __ptext45 D956  
                                                  __ptext37 D382  
                                                  __ptext29 E1F0  
                                                  __ptext62 EC34  
                                                  __ptext54 DA58  
                                                  __ptext46 D7EA  
                                                  __ptext38 F08C  
                                                  __ptext63 D690  
                                                  __ptext55 D536  
                                                  __ptext47 FC7A  
                                                  __ptext39 D2AA  
                                                  __ptext64 DC82  
                                                  __ptext56 D404  
                                                  __ptext48 DADE  
                                                  __ptext57 D288  
                                                  __ptext49 F812  
                                                  __ptext58 D318  
                                                  __ptext59 D6FE  
                                                  _lcd_init D774  
                                                  _lcd_putc D404  
                                                  _pow$2470 0053  
                                                  _pow$2469 0050  
                                          __size_of_sprintf 0230  
                                    __size_of_lcd_send_byte 0032  
                                             __size_of_main 0024  
                               __size_of_seleccionar_opcion 0050  
                                                  _minuto_d 00F8  
                                                  _minuto_u 00F9  
                                    __end_of_cambiar_opcion DEC4  
                                             ??_Delay1KTCYx 0001  
                                           ??_RtccWriteDate 0004  
                                  ??_titila_alarma_activada 000B  
                                           ??_RtccWriteTime 0004  
                                               ??_lcd_putrs 000B  
                                                  exp@coeff FEF1  
                                                  log@coeff FF0F  
                                               _OSCTUNEbits 000F9B  
                                                _INTCONbits 000FF2  
        __end_of_si_apreta_numero_va_a_pantalla_contrasenia DC82  
       __size_of_si_apreta_numero_va_a_pantalla_contrasenia 008C  
              ??_si_apreta_numero_va_a_pantalla_contrasenia 0060  
               ?_si_apreta_numero_va_a_pantalla_contrasenia 0001  
                _si_apreta_numero_va_a_pantalla_contrasenia DBF6  
                                               ??_eval_poly 0035  
                                      _txt_pantalla_edicion 008A  
                                        RtccWriteTime@wasOn 0005  
                                      __end_of_Delay100TCYx D21C  
                                                  isdigit@c 0003  
                                    __size_of_titila_opcion 00D8  
                                   ??_verificar_contrasenia 0003  
                                                 sprintf@ap 0030  
                                   __end_of_lcd_send_nibble D774  
                                                 sprintf@sp 0022  
                                          ___lwmod@dividend 0008  
                                                _OSCCONbits 000FD3  
                               ??_editar_hora_reloj_digital 005F  
                                   __size_of_activar_alarma 01D6  
                                         _boton_seleccionar 0090  
                                           ?_cambiar_opcion 0001  
                                     RtccWriteDate@tempYear 0007  
                              __end_of_setHoraMinutoSegundo D956  
                                             _lcd_send_byte D318  
                                                _RTCCFGbits 000F3F  
                                    ?_ir_a_pantalla_edicion 0001  
                                                  sprintf@c 0038  
                                                  sprintf@f 0024  
                                           ___lwmod@divisor 000A  
                                       __end_of_Delay1KTCYx D22C  
                                           ___lwmod@counter 000C  
                                    ?_ir_a_pantalla_inicial 0001  
                                      RtccWriteDate@wasAlrm 0006  
                                      RtccWriteDate@wasWrEn 0009  
                                     __end_of_setDiaMesAnio DBF6  
          covertir_valores_de_array_a_escala_decimal@numero 00CB  
                                          ??_ingreso_numero 003B  
                                       _txt_alarma_activada 008C  
                                     lcd_send_nibble@nibble 0002  
