

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Sep 15 18:49:16 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42  0000                     
    43                           ; Version 1.43
    44                           ; Generated 25/07/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F26J50 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMRAM
    79  002062                     __pidataCOMRAM:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _minuto
    83  002062  001E               	dw	30
    84                           
    85                           ;initializer for _hora
    86  002064  0012               	dw	18
    87                           
    88                           ;initializer for _dia
    89  002066  0008               	dw	8
    90                           
    91                           ;initializer for _diasem
    92  002068  0003               	dw	3
    93                           
    94                           ;initializer for _mes
    95  00206A  0009               	dw	9
    96                           
    97                           ;initializer for _anio
    98  00206C  000F               	dw	15
    99                           
   100                           	psect	smallconst
   101  000F00                     __psmallconst:
   102                           	opt stack 0
   103  000F00  00                 	db	0
   104  000F01                     _dpowers:
   105                           	opt stack 0
   106  000F01  0001               	dw	1
   107  000F03  000A               	dw	10
   108  000F05  0064               	dw	100
   109  000F07  03E8               	dw	1000
   110  000F09  2710               	dw	10000
   111  000F0B                     __end_of_dpowers:
   112                           	opt stack 0
   113  000F0B                     _LCD_INIT_STRING:
   114                           	opt stack 0
   115  000F0B  28                 	db	40
   116  000F0C  0C                 	db	12
   117  000F0D  01                 	db	1
   118  000F0E  06                 	db	6
   119  000F0F                     __end_of_LCD_INIT_STRING:
   120                           	opt stack 0
   121  0000                     _RTCCFG	set	3903
   122  0000                     _ANCON1	set	3913
   123  0000                     _ANCON0	set	3912
   124  0000                     _RTCCFGbits	set	3903
   125  0000                     _ALRMCFGbits	set	3985
   126  0000                     _EECON2	set	4007
   127  0000                     _INTCONbits	set	4082
   128  0000                     _RTCVALH	set	3993
   129  0000                     _RTCVALL	set	3992
   130  0000                     _TRISBbits	set	3987
   131  0000                     _LATBbits	set	3978
   132  0000                     _PORTAbits	set	3968
   133  0000                     _T1CONbits	set	4045
   134  0000                     _ADCON1	set	4033
   135  0000                     _ADCON0	set	4034
   136  0000                     _INTCON2bits	set	4081
   137  0000                     _TRISC	set	3988
   138  0000                     _TRISB	set	3987
   139  0000                     _TRISA	set	3986
   140  0000                     _OSCCONbits	set	4051
   141  0000                     _OSCTUNEbits	set	3995
   142  0000                     _PIE3bits	set	4003
   143  000F0F                     STR_1:
   144                           
   145                           ; BSR set to: 15
   146  000F0F  25                 	db	37
   147  000F10  30                 	db	48	;'0'
   148  000F11  32                 	db	50	;'2'
   149  000F12  75                 	db	117	;'u'
   150  000F13  2F                 	db	47
   151  000F14  25                 	db	37
   152  000F15  30                 	db	48	;'0'
   153  000F16  32                 	db	50	;'2'
   154  000F17  75                 	db	117	;'u'
   155  000F18  2F                 	db	47
   156  000F19  25                 	db	37
   157  000F1A  30                 	db	48	;'0'
   158  000F1B  32                 	db	50	;'2'
   159  000F1C  75                 	db	117	;'u'
   160  000F1D  00                 	db	0
   161  000F1E                     STR_2:
   162                           
   163                           ; BSR set to: 15
   164  000F1E  25                 	db	37
   165  000F1F  30                 	db	48	;'0'
   166  000F20  32                 	db	50	;'2'
   167  000F21  75                 	db	117	;'u'
   168  000F22  3A                 	db	58	;':'
   169  000F23  25                 	db	37
   170  000F24  30                 	db	48	;'0'
   171  000F25  32                 	db	50	;'2'
   172  000F26  75                 	db	117	;'u'
   173  000F27  3A                 	db	58	;':'
   174  000F28  25                 	db	37
   175  000F29  30                 	db	48	;'0'
   176  000F2A  32                 	db	50	;'2'
   177  000F2B  75                 	db	117	;'u'
   178  000F2C  00                 	db	0
   179  000F2D                     STR_4:
   180                           
   181                           ; BSR set to: 15
   182  000F2D  4C                 	db	76	;'L'
   183  000F2E  75                 	db	117	;'u'
   184  000F2F  6E                 	db	110	;'n'
   185  000F30  65                 	db	101	;'e'
   186  000F31  73                 	db	115	;'s'
   187  000F32  20                 	db	32
   188  000F33  20                 	db	32
   189  000F34  00                 	db	0
   190  000F35                     STR_9:
   191                           
   192                           ; BSR set to: 15
   193  000F35  53                 	db	83	;'S'
   194  000F36  61                 	db	97	;'a'
   195  000F37  62                 	db	98	;'b'
   196  000F38  61                 	db	97	;'a'
   197  000F39  64                 	db	100	;'d'
   198  000F3A  6F                 	db	111	;'o'
   199  000F3B  20                 	db	32
   200  000F3C  00                 	db	0
   201  000F3D                     STR_5:
   202                           
   203                           ; BSR set to: 15
   204  000F3D  4D                 	db	77	;'M'
   205  000F3E  61                 	db	97	;'a'
   206  000F3F  72                 	db	114	;'r'
   207  000F40  74                 	db	116	;'t'
   208  000F41  65                 	db	101	;'e'
   209  000F42  73                 	db	115	;'s'
   210  000F43  20                 	db	32
   211  000F44  00                 	db	0
   212  000F45                     STR_7:
   213                           
   214                           ; BSR set to: 15
   215  000F45  4A                 	db	74	;'J'
   216  000F46  75                 	db	117	;'u'
   217  000F47  65                 	db	101	;'e'
   218  000F48  76                 	db	118	;'v'
   219  000F49  65                 	db	101	;'e'
   220  000F4A  73                 	db	115	;'s'
   221  000F4B  20                 	db	32
   222  000F4C  00                 	db	0
   223  000F4D                     STR_6:
   224                           
   225                           ; BSR set to: 15
   226  000F4D  4D                 	db	77	;'M'
   227  000F4E  69                 	db	105	;'i'
   228  000F4F  65                 	db	101	;'e'
   229  000F50  72                 	db	114	;'r'
   230  000F51  63                 	db	99	;'c'
   231  000F52  6F                 	db	111	;'o'
   232  000F53  6C                 	db	108	;'l'
   233  000F54  00                 	db	0
   234  000F55                     STR_3:
   235                           
   236                           ; BSR set to: 15
   237  000F55  44                 	db	68	;'D'
   238  000F56  6F                 	db	111	;'o'
   239  000F57  6D                 	db	109	;'m'
   240  000F58  69                 	db	105	;'i'
   241  000F59  6E                 	db	110	;'n'
   242  000F5A  67                 	db	103	;'g'
   243  000F5B  6F                 	db	111	;'o'
   244  000F5C  00                 	db	0
   245  000F5D                     STR_8:
   246                           
   247                           ; BSR set to: 15
   248  000F5D  56                 	db	86	;'V'
   249  000F5E  69                 	db	105	;'i'
   250  000F5F  65                 	db	101	;'e'
   251  000F60  72                 	db	114	;'r'
   252  000F61  6E                 	db	110	;'n'
   253  000F62  65                 	db	101	;'e'
   254  000F63  73                 	db	115	;'s'
   255  000F64  00                 	db	0
   256  000F65                     STR_13:
   257                           
   258                           ; BSR set to: 15
   259  000F65  30                 	db	48	;'0'
   260  000F66  00                 	db	0
   261  000F67                     STR_12:
   262                           
   263                           ; BSR set to: 15
   264  000F67  31                 	db	49	;'1'
   265  000F68  00                 	db	0
   266  0000                     
   267                           ; #config settings
   268  000F69  00                 	db	0	; dummy byte at the end
   269  0000                     
   270                           	psect	cinit
   271  001E3C                     __pcinit:
   272                           	opt stack 0
   273  001E3C                     start_initialization:
   274                           	opt stack 0
   275  001E3C                     __initialization:
   276                           	opt stack 0
   277                           
   278                           ; Initialize objects allocated to COMRAM (12 bytes)
   279                           ; load TBLPTR registers with __pidataCOMRAM
   280  001E3C  0E62               	movlw	low __pidataCOMRAM
   281  001E3E  6EF6               	movwf	tblptrl,c
   282  001E40  0E20               	movlw	high __pidataCOMRAM
   283  001E42  6EF7               	movwf	tblptrh,c
   284  001E44  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   285  001E46  6EF8               	movwf	tblptru,c
   286  001E48  EE00  F050         	lfsr	0,__pdataCOMRAM
   287  001E4C  EE10 F00C          	lfsr	1,12
   288  001E50                     copy_data0:
   289  001E50  0009               	tblrd		*+
   290  001E52  CFF5 FFEE          	movff	tablat,postinc0
   291  001E56  50E5               	movf	postdec1,w,c
   292  001E58  50E1               	movf	fsr1l,w,c
   293  001E5A  E1FA               	bnz	copy_data0
   294                           
   295                           ; Clear objects allocated to BANK0 (44 bytes)
   296  001E5C  EE00  F060         	lfsr	0,__pbssBANK0
   297  001E60  0E2C               	movlw	44
   298  001E62                     clear_0:
   299  001E62  6AEE               	clrf	postinc0,c
   300  001E64  06E8               	decf	wreg,f,c
   301  001E66  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   304  001E68  6A5C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   305                           
   306                           ; Clear objects allocated to COMRAM (39 bytes)
   307  001E6A  EE00  F029         	lfsr	0,__pbssCOMRAM
   308  001E6E  0E27               	movlw	39
   309  001E70                     clear_1:
   310  001E70  6AEE               	clrf	postinc0,c
   311  001E72  06E8               	decf	wreg,f,c
   312  001E74  E1FD               	bnz	clear_1
   313  001E76                     end_of_initialization:
   314                           	opt stack 0
   315  001E76                     __end_of__initialization:
   316                           	opt stack 0
   317  001E76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   318  001E78  6EF8               	movwf	tblptru,c
   319  001E7A  0100               	movlb	0
   320  001E7C  EFB5  F007         	goto	_main	;jump to C main() function
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           wreg	equ	0xFE8
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	bitbssCOMRAM
   331  0002E0                     __pbitbssCOMRAM:
   332                           	opt stack 0
   333  0002E0                     _flag:
   334                           	opt stack 0
   335  0002E0                     	ds	1
   336                           tblptru	equ	0xFF8
   337                           tblptrh	equ	0xFF7
   338                           tblptrl	equ	0xFF6
   339                           tablat	equ	0xFF5
   340                           postinc0	equ	0xFEE
   341                           wreg	equ	0xFE8
   342                           postdec1	equ	0xFE5
   343                           fsr1l	equ	0xFE1
   344                           
   345                           	psect	bssCOMRAM
   346  000029                     __pbssCOMRAM:
   347                           	opt stack 0
   348  000029                     _RtccTimeVal:
   349                           	opt stack 0
   350  000029                     	ds	4
   351  00002D                     _segundo:
   352                           	opt stack 0
   353  00002D                     	ds	2
   354  00002F                     _k:
   355                           	opt stack 0
   356  00002F                     	ds	2
   357  000031                     _c:
   358                           	opt stack 0
   359  000031                     	ds	2
   360  000033                     _b:
   361                           	opt stack 0
   362  000033                     	ds	2
   363  000035                     _a:
   364                           	opt stack 0
   365  000035                     	ds	2
   366  000037                     _j:
   367                           	opt stack 0
   368  000037                     	ds	2
   369  000039                     _i:
   370                           	opt stack 0
   371  000039                     	ds	2
   372  00003B                     _anio_d:
   373                           	opt stack 0
   374  00003B                     	ds	1
   375  00003C                     _anio_u:
   376                           	opt stack 0
   377  00003C                     	ds	1
   378  00003D                     _dia_semana:
   379                           	opt stack 0
   380  00003D                     	ds	1
   381  00003E                     _mes_d:
   382                           	opt stack 0
   383  00003E                     	ds	1
   384  00003F                     _mes_u:
   385                           	opt stack 0
   386  00003F                     	ds	1
   387  000040                     _fecha_d:
   388                           	opt stack 0
   389  000040                     	ds	1
   390  000041                     _fecha_u:
   391                           	opt stack 0
   392  000041                     	ds	1
   393  000042                     _hora_d:
   394                           	opt stack 0
   395  000042                     	ds	1
   396  000043                     _hora_u:
   397                           	opt stack 0
   398  000043                     	ds	1
   399  000044                     _minuto_d:
   400                           	opt stack 0
   401  000044                     	ds	1
   402  000045                     _minuto_u:
   403                           	opt stack 0
   404  000045                     	ds	1
   405  000046                     _segundo_d:
   406                           	opt stack 0
   407  000046                     	ds	1
   408  000047                     _segundo_u:
   409                           	opt stack 0
   410  000047                     	ds	1
   411  000048                     _RtccDate:
   412                           	opt stack 0
   413  000048                     	ds	4
   414  00004C                     _RtccTime:
   415                           	opt stack 0
   416  00004C                     	ds	4
   417                           tblptru	equ	0xFF8
   418                           tblptrh	equ	0xFF7
   419                           tblptrl	equ	0xFF6
   420                           tablat	equ	0xFF5
   421                           postinc0	equ	0xFEE
   422                           wreg	equ	0xFE8
   423                           postdec1	equ	0xFE5
   424                           fsr1l	equ	0xFE1
   425                           
   426                           	psect	dataCOMRAM
   427  000050                     __pdataCOMRAM:
   428                           	opt stack 0
   429  000050                     _minuto:
   430                           	opt stack 0
   431  000050                     	ds	2
   432  000052                     _hora:
   433                           	opt stack 0
   434  000052                     	ds	2
   435  000054                     _dia:
   436                           	opt stack 0
   437  000054                     	ds	2
   438  000056                     _diasem:
   439                           	opt stack 0
   440  000056                     	ds	2
   441  000058                     _mes:
   442                           	opt stack 0
   443  000058                     	ds	2
   444  00005A                     _anio:
   445                           	opt stack 0
   446  00005A                     	ds	2
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456                           	psect	bssBANK0
   457  000060                     __pbssBANK0:
   458                           	opt stack 0
   459  000060                     _Rtcc_read_TimeDate:
   460                           	opt stack 0
   461  000060                     	ds	8
   462  000068                     _RtccAlrmTimeDate:
   463                           	opt stack 0
   464  000068                     	ds	8
   465  000070                     _RtccTimeDate:
   466                           	opt stack 0
   467  000070                     	ds	8
   468  000078                     _buffer2:
   469                           	opt stack 0
   470  000078                     	ds	20
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           
   480                           	psect	cstackCOMRAM
   481  000001                     __pcstackCOMRAM:
   482                           	opt stack 0
   483  000001                     ??_isdigit:
   484  000001                     ??_lcd_send_nibble:
   485  000001                     ?___wmul:
   486                           	opt stack 0
   487  000001                     ?___awdiv:
   488                           	opt stack 0
   489  000001                     ?___lwdiv:
   490                           	opt stack 0
   491  000001                     Delay100TCYx@unit:
   492                           	opt stack 0
   493  000001                     Delay1KTCYx@unit:
   494                           	opt stack 0
   495  000001                     RtccReadDate@pDt:
   496                           	opt stack 0
   497  000001                     RtccReadTime@pTm:
   498                           	opt stack 0
   499  000001                     RtccWriteDate@pDt:
   500                           	opt stack 0
   501  000001                     RtccWriteTime@pTm:
   502                           	opt stack 0
   503  000001                     ___wmul@multiplier:
   504                           	opt stack 0
   505  000001                     ___awdiv@dividend:
   506                           	opt stack 0
   507  000001                     ___lwdiv@dividend:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x0
   511  000001                     	ds	1
   512  000002                     lcd_send_nibble@nibble:
   513                           	opt stack 0
   514  000002                     _isdigit$1745:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x1
   518  000002                     	ds	1
   519  000003                     lcd_send_byte@n:
   520                           	opt stack 0
   521  000003                     RtccWriteDate@di:
   522                           	opt stack 0
   523  000003                     RtccWriteTime@di:
   524                           	opt stack 0
   525  000003                     isdigit@c:
   526                           	opt stack 0
   527  000003                     ___wmul@multiplicand:
   528                           	opt stack 0
   529  000003                     ___awdiv@divisor:
   530                           	opt stack 0
   531  000003                     ___lwdiv@divisor:
   532                           	opt stack 0
   533  000003                     RtccReadDate@rTD1:
   534                           	opt stack 0
   535  000003                     RtccReadTime@rTD1:
   536                           	opt stack 0
   537                           
   538                           ; 8 bytes @ 0x2
   539  000003                     	ds	1
   540  000004                     lcd_send_byte@address:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x3
   544  000004                     	ds	1
   545  000005                     lcd_init@i:
   546                           	opt stack 0
   547  000005                     lcd_gotoxy@y:
   548                           	opt stack 0
   549  000005                     lcd_comand@d:
   550                           	opt stack 0
   551  000005                     RtccWriteDate@wasOn:
   552                           	opt stack 0
   553  000005                     RtccWriteTime@wasOn:
   554                           	opt stack 0
   555  000005                     ___awdiv@counter:
   556                           	opt stack 0
   557  000005                     ___wmul@product:
   558                           	opt stack 0
   559  000005                     ___lwdiv@quotient:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x4
   563  000005                     	ds	1
   564  000006                     lcd_gotoxy@x:
   565                           	opt stack 0
   566  000006                     RtccWriteDate@wasAlrm:
   567                           	opt stack 0
   568  000006                     RtccWriteTime@wasAlrm:
   569                           	opt stack 0
   570  000006                     ___awdiv@sign:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x5
   574  000006                     	ds	1
   575  000007                     lcd_gotoxy@address:
   576                           	opt stack 0
   577  000007                     RtccWriteTime@wasWrEn:
   578                           	opt stack 0
   579  000007                     ___lwdiv@counter:
   580                           	opt stack 0
   581  000007                     RtccWriteDate@tempYear:
   582                           	opt stack 0
   583  000007                     ___awdiv@quotient:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x6
   587  000007                     	ds	1
   588  000008                     ?___lwmod:
   589                           	opt stack 0
   590  000008                     lcd_putc@c:
   591                           	opt stack 0
   592  000008                     RtccWriteTime@tempMinSec:
   593                           	opt stack 0
   594  000008                     ___lwmod@dividend:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x7
   598  000008                     	ds	1
   599  000009                     RtccWriteDate@wasWrEn:
   600                           	opt stack 0
   601  000009                     lcd_putrs@ptr:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x8
   605  000009                     	ds	1
   606  00000A                     RtccWriteDate@tempDayMonth:
   607                           	opt stack 0
   608  00000A                     RtccWriteTime@tempHourWDay:
   609                           	opt stack 0
   610  00000A                     ___lwmod@divisor:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x9
   614  00000A                     	ds	1
   615  00000B                     ??_setDiaSemana:
   616  00000B                     RtccReadDate@rTD0:
   617                           	opt stack 0
   618  00000B                     RtccReadTime@rTD0:
   619                           	opt stack 0
   620                           
   621                           ; 8 bytes @ 0xA
   622  00000B                     	ds	1
   623  00000C                     ___lwmod@counter:
   624                           	opt stack 0
   625  00000C                     RtccWriteDate@tempHourWDay:
   626                           	opt stack 0
   627                           
   628                           ; 2 bytes @ 0xB
   629  00000C                     	ds	1
   630  00000D                     ?_sprintf:
   631                           	opt stack 0
   632  00000D                     sprintf@sp:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0xC
   636  00000D                     	ds	1
   637  00000E                     
   638                           ; 1 bytes @ 0xD
   639  00000E                     	ds	1
   640  00000F                     sprintf@f:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0xE
   644  00000F                     	ds	4
   645  000013                     
   646                           ; 1 bytes @ 0x12
   647  000013                     	ds	4
   648  000017                     ??_sprintf:
   649                           
   650                           ; 1 bytes @ 0x16
   651  000017                     	ds	4
   652  00001B                     sprintf@ap:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x1A
   656  00001B                     	ds	2
   657  00001D                     sprintf@flag:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x1C
   661  00001D                     	ds	1
   662  00001E                     sprintf@val:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x1D
   666  00001E                     	ds	2
   667  000020                     sprintf@prec:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x1F
   671  000020                     	ds	1
   672  000021                     sprintf@width:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x20
   676  000021                     	ds	2
   677  000023                     sprintf@c:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x22
   681  000023                     	ds	1
   682  000024                     ??_main:
   683                           
   684                           ; 1 bytes @ 0x23
   685  000024                     	ds	1
   686  000025                     main@boton_centro_estado:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x24
   690  000025                     	ds	2
   691  000027                     main@boton_seleccionar:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0x26
   695  000027                     	ds	2
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1l	equ	0xFE1
   704                           
   705 ;;
   706 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   707 ;;
   708 ;; *************** function _main *****************
   709 ;; Defined at:
   710 ;;		line 125 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  boton_selecc    2   38[COMRAM] int 
   715 ;;  boton_centro    2   36[COMRAM] int 
   716 ;; Return value:  Size  Location     Type
   717 ;;                  2  166[None  ] int 
   718 ;; Registers used:
   719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   720 ;; Tracked objects:
   721 ;;		On entry : 0/0
   722 ;;		On exit  : 0/0
   723 ;;		Unchanged: 0/0
   724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   728 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;Total ram usage:        5 bytes
   730 ;; Hardware stack levels required when called:    7
   731 ;; This function calls:
   732 ;;		_Read_RTC
   733 ;;		_Write_RTC
   734 ;;		_lcd_gotoxy
   735 ;;		_lcd_putrs
   736 ;;		_setDiaMesAnio
   737 ;;		_setDiaSemana
   738 ;;		_setHoraMinutoSegundo
   739 ;;		_setup
   740 ;;		_sprintf
   741 ;; This function is called by:
   742 ;;		Startup code after reset
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text0
   747  000F6A                     __ptext0:
   748                           	opt stack 0
   749  000F6A                     _main:
   750                           	opt stack 24
   751                           
   752                           ;main.c: 126: setup();
   753                           
   754                           ;incstack = 0
   755  000F6A  ECA5  F00F         	call	_setup	;wreg free
   756                           
   757                           ;main.c: 132: int boton_centro_estado = 0;
   758  000F6E  0E00               	movlw	0
   759  000F70  6E26               	movwf	main@boton_centro_estado+1,c
   760  000F72  0E00               	movlw	0
   761  000F74  6E25               	movwf	main@boton_centro_estado,c
   762                           
   763                           ;main.c: 144: int boton_seleccionar = 0;
   764  000F76  0E00               	movlw	0
   765  000F78  6E28               	movwf	main@boton_seleccionar+1,c
   766  000F7A  0E00               	movlw	0
   767  000F7C  6E27               	movwf	main@boton_seleccionar,c
   768  000F7E                     
   769                           ;main.c: 148: Read_RTC();
   770  000F7E  EC05  F00D         	call	_Read_RTC	;wreg free
   771                           
   772                           ;main.c: 151: if (PORTAbits.RA5 == 0 && boton_centro_estado == 0) {
   773  000F82  BA80               	btfsc	3968,5,c	;volatile
   774  000F84  D01B               	goto	l168
   775  000F86  5025               	movf	main@boton_centro_estado,w,c
   776  000F88  1026               	iorwf	main@boton_centro_estado+1,w,c
   777  000F8A  A4D8               	btfss	status,2,c
   778  000F8C  D017               	goto	l168
   779                           
   780                           ;main.c: 152: boton_centro_estado = 1;
   781  000F8E  0E00               	movlw	0
   782  000F90  6E26               	movwf	main@boton_centro_estado+1,c
   783  000F92  0E01               	movlw	1
   784  000F94  6E25               	movwf	main@boton_centro_estado,c
   785                           
   786                           ;main.c: 153: lcd_gotoxy(14, 2);
   787  000F96  0E02               	movlw	2
   788  000F98  6E05               	movwf	lcd_gotoxy@y,c
   789  000F9A  0E0E               	movlw	14
   790  000F9C  ECF1  F00F         	call	_lcd_gotoxy
   791                           
   792                           ;main.c: 154: lcd_putrs("1");
   793  000FA0  0E67               	movlw	low STR_12
   794  000FA2  6E09               	movwf	lcd_putrs@ptr,c
   795  000FA4  0E0F               	movlw	high STR_12
   796  000FA6  6E0A               	movwf	lcd_putrs@ptr+1,c
   797  000FA8  ECD0  F00E         	call	_lcd_putrs	;wreg free
   798                           
   799                           ;main.c: 155: _delay((unsigned long)((98)*(8000000/4000.0)));
   800  000FAC  0EFF               	movlw	255
   801  000FAE  6E24               	movwf	??_main& (0+255),c
   802  000FB0  0E8A               	movlw	138
   803  000FB2                     u2477:
   804  000FB2  2EE8               	decfsz	wreg,f,c
   805  000FB4  D7FE               	bra	u2477
   806  000FB6  2E24               	decfsz	??_main& (0+255),f,c
   807  000FB8  D7FC               	bra	u2477
   808  000FBA  D000               	nop2	
   809  000FBC                     l168:
   810                           
   811                           ;main.c: 156: }
   812                           ;main.c: 158: if (PORTAbits.RA5 == 0 && boton_centro_estado == 1) {
   813  000FBC  BA80               	btfsc	3968,5,c	;volatile
   814  000FBE  D01B               	goto	l169
   815  000FC0  0425               	decf	main@boton_centro_estado,w,c
   816  000FC2  1026               	iorwf	main@boton_centro_estado+1,w,c
   817  000FC4  A4D8               	btfss	status,2,c
   818  000FC6  D017               	goto	l169
   819                           
   820                           ;main.c: 159: boton_centro_estado = 0;
   821  000FC8  0E00               	movlw	0
   822  000FCA  6E26               	movwf	main@boton_centro_estado+1,c
   823  000FCC  0E00               	movlw	0
   824  000FCE  6E25               	movwf	main@boton_centro_estado,c
   825                           
   826                           ;main.c: 160: lcd_gotoxy(14, 2);
   827  000FD0  0E02               	movlw	2
   828  000FD2  6E05               	movwf	lcd_gotoxy@y,c
   829  000FD4  0E0E               	movlw	14
   830  000FD6  ECF1  F00F         	call	_lcd_gotoxy
   831                           
   832                           ;main.c: 161: lcd_putrs("0");
   833  000FDA  0E65               	movlw	low STR_13
   834  000FDC  6E09               	movwf	lcd_putrs@ptr,c
   835  000FDE  0E0F               	movlw	high STR_13
   836  000FE0  6E0A               	movwf	lcd_putrs@ptr+1,c
   837  000FE2  ECD0  F00E         	call	_lcd_putrs	;wreg free
   838                           
   839                           ;main.c: 162: _delay((unsigned long)((98)*(8000000/4000.0)));
   840  000FE6  0EFF               	movlw	255
   841  000FE8  6E24               	movwf	??_main& (0+255),c
   842  000FEA  0E8A               	movlw	138
   843  000FEC                     u2487:
   844  000FEC  2EE8               	decfsz	wreg,f,c
   845  000FEE  D7FE               	bra	u2487
   846  000FF0  2E24               	decfsz	??_main& (0+255),f,c
   847  000FF2  D7FC               	bra	u2487
   848  000FF4  D000               	nop2	
   849  000FF6                     l169:
   850                           
   851                           ;main.c: 163: }
   852                           ;main.c: 165: if (boton_centro_estado == 1) {
   853  000FF6  0425               	decf	main@boton_centro_estado,w,c
   854  000FF8  1026               	iorwf	main@boton_centro_estado+1,w,c
   855  000FFA  A4D8               	btfss	status,2,c
   856  000FFC  D17C               	goto	l170
   857                           
   858                           ;main.c: 167: if (PORTAbits.RA2 == 0) {
   859  000FFE  B480               	btfsc	3968,2,c	;volatile
   860  001000  D00C               	goto	l173
   861                           
   862                           ;main.c: 168: if (boton_seleccionar == 6) {
   863  001002  0E06               	movlw	6
   864  001004  1827               	xorwf	main@boton_seleccionar,w,c
   865  001006  1028               	iorwf	main@boton_seleccionar+1,w,c
   866  001008  A4D8               	btfss	status,2,c
   867  00100A  D005               	goto	l172
   868                           
   869                           ;main.c: 169: boton_seleccionar = 0;
   870  00100C  0E00               	movlw	0
   871  00100E  6E28               	movwf	main@boton_seleccionar+1,c
   872  001010  0E00               	movlw	0
   873  001012  6E27               	movwf	main@boton_seleccionar,c
   874                           
   875                           ;main.c: 170: } else {
   876  001014  D002               	goto	l173
   877  001016                     l172:
   878                           
   879                           ;main.c: 171: boton_seleccionar++;
   880  001016  4A27               	infsnz	main@boton_seleccionar,f,c
   881  001018  2A28               	incf	main@boton_seleccionar+1,f,c
   882  00101A                     l173:
   883                           
   884                           ;main.c: 172: }
   885                           ;main.c: 173: }
   886                           ;main.c: 175: if (PORTAbits.RA7 == 0) {
   887  00101A  BE80               	btfsc	3968,7,c	;volatile
   888  00101C  D00C               	goto	l176
   889                           
   890                           ;main.c: 176: if (boton_seleccionar == 0) {
   891  00101E  5027               	movf	main@boton_seleccionar,w,c
   892  001020  1028               	iorwf	main@boton_seleccionar+1,w,c
   893  001022  A4D8               	btfss	status,2,c
   894  001024  D005               	goto	l175
   895                           
   896                           ;main.c: 177: boton_seleccionar = 6;
   897  001026  0E00               	movlw	0
   898  001028  6E28               	movwf	main@boton_seleccionar+1,c
   899  00102A  0E06               	movlw	6
   900  00102C  6E27               	movwf	main@boton_seleccionar,c
   901                           
   902                           ;main.c: 178: } else {
   903  00102E  D003               	goto	l176
   904  001030                     l175:
   905                           
   906                           ;main.c: 179: boton_seleccionar--;
   907  001030  0627               	decf	main@boton_seleccionar,f,c
   908  001032  A0D8               	btfss	status,0,c
   909  001034  0628               	decf	main@boton_seleccionar+1,f,c
   910  001036                     l176:
   911                           
   912                           ;main.c: 180: }
   913                           ;main.c: 181: }
   914                           ;main.c: 184: if (boton_seleccionar == 0) {
   915  001036  5027               	movf	main@boton_seleccionar,w,c
   916  001038  1028               	iorwf	main@boton_seleccionar+1,w,c
   917  00103A  A4D8               	btfss	status,2,c
   918  00103C  D024               	goto	l183
   919                           
   920                           ;main.c: 186: if (PORTAbits.RA3 == 0) {
   921  00103E  B680               	btfsc	3968,3,c	;volatile
   922  001040  D010               	goto	l180
   923                           
   924                           ;main.c: 187: if (diasem == 6) {
   925  001042  0E06               	movlw	6
   926  001044  1856               	xorwf	_diasem,w,c
   927  001046  1057               	iorwf	_diasem+1,w,c
   928  001048  A4D8               	btfss	status,2,c
   929  00104A  D007               	goto	l179
   930                           
   931                           ;main.c: 188: diasem = 0;
   932  00104C  0E00               	movlw	0
   933  00104E  6E57               	movwf	_diasem+1,c
   934  001050  0E00               	movlw	0
   935  001052  6E56               	movwf	_diasem,c
   936                           
   937                           ;main.c: 189: Write_RTC();
   938  001054  EC48  F00B         	call	_Write_RTC	;wreg free
   939                           
   940                           ;main.c: 190: } else {
   941  001058  D004               	goto	l180
   942  00105A                     l179:
   943                           
   944                           ;main.c: 191: diasem++;
   945  00105A  4A56               	infsnz	_diasem,f,c
   946  00105C  2A57               	incf	_diasem+1,f,c
   947                           
   948                           ;main.c: 192: Write_RTC();
   949  00105E  EC48  F00B         	call	_Write_RTC	;wreg free
   950  001062                     l180:
   951                           
   952                           ;main.c: 193: }
   953                           ;main.c: 194: }
   954                           ;main.c: 196: if (PORTAbits.RA6 == 0) {
   955  001062  BC80               	btfsc	3968,6,c	;volatile
   956  001064  D010               	goto	l183
   957                           
   958                           ;main.c: 197: if (diasem == 0) {
   959  001066  5056               	movf	_diasem,w,c
   960  001068  1057               	iorwf	_diasem+1,w,c
   961  00106A  A4D8               	btfss	status,2,c
   962  00106C  D007               	goto	l182
   963                           
   964                           ;main.c: 198: diasem = 6;
   965  00106E  0E00               	movlw	0
   966  001070  6E57               	movwf	_diasem+1,c
   967  001072  0E06               	movlw	6
   968  001074  6E56               	movwf	_diasem,c
   969                           
   970                           ;main.c: 199: Write_RTC();
   971  001076  EC48  F00B         	call	_Write_RTC	;wreg free
   972                           
   973                           ;main.c: 200: } else {
   974  00107A  D005               	goto	l183
   975  00107C                     l182:
   976                           
   977                           ;main.c: 201: diasem--;
   978  00107C  0656               	decf	_diasem,f,c
   979  00107E  A0D8               	btfss	status,0,c
   980  001080  0657               	decf	_diasem+1,f,c
   981                           
   982                           ;main.c: 202: Write_RTC();
   983  001082  EC48  F00B         	call	_Write_RTC	;wreg free
   984  001086                     l183:
   985                           
   986                           ;main.c: 203: }
   987                           ;main.c: 204: }
   988                           ;main.c: 205: }
   989                           ;main.c: 208: if (boton_seleccionar == 1) {
   990  001086  0427               	decf	main@boton_seleccionar,w,c
   991  001088  1028               	iorwf	main@boton_seleccionar+1,w,c
   992  00108A  A4D8               	btfss	status,2,c
   993  00108C  D02B               	goto	l184
   994                           
   995                           ;main.c: 210: if (PORTAbits.RA3 == 0) {
   996  00108E  B680               	btfsc	3968,3,c	;volatile
   997  001090  D010               	goto	l187
   998                           
   999                           ;main.c: 211: if (dia == 30) {
  1000  001092  0E1E               	movlw	30
  1001  001094  1854               	xorwf	_dia,w,c
  1002  001096  1055               	iorwf	_dia+1,w,c
  1003  001098  A4D8               	btfss	status,2,c
  1004  00109A  D007               	goto	l186
  1005                           
  1006                           ;main.c: 212: dia = 0;
  1007  00109C  0E00               	movlw	0
  1008  00109E  6E55               	movwf	_dia+1,c
  1009  0010A0  0E00               	movlw	0
  1010  0010A2  6E54               	movwf	_dia,c
  1011                           
  1012                           ;main.c: 213: Write_RTC();
  1013  0010A4  EC48  F00B         	call	_Write_RTC	;wreg free
  1014                           
  1015                           ;main.c: 214: } else {
  1016  0010A8  D004               	goto	l187
  1017  0010AA                     l186:
  1018                           
  1019                           ;main.c: 215: dia++;
  1020  0010AA  4A54               	infsnz	_dia,f,c
  1021  0010AC  2A55               	incf	_dia+1,f,c
  1022                           
  1023                           ;main.c: 216: Write_RTC();
  1024  0010AE  EC48  F00B         	call	_Write_RTC	;wreg free
  1025  0010B2                     l187:
  1026                           
  1027                           ;main.c: 217: }
  1028                           ;main.c: 218: }
  1029                           ;main.c: 220: if (PORTAbits.RA6 == 0) {
  1030  0010B2  BC80               	btfsc	3968,6,c	;volatile
  1031  0010B4  D010               	goto	l190
  1032                           
  1033                           ;main.c: 221: if (dia == 0) {
  1034  0010B6  5054               	movf	_dia,w,c
  1035  0010B8  1055               	iorwf	_dia+1,w,c
  1036  0010BA  A4D8               	btfss	status,2,c
  1037  0010BC  D007               	goto	l189
  1038                           
  1039                           ;main.c: 222: dia = 30;
  1040  0010BE  0E00               	movlw	0
  1041  0010C0  6E55               	movwf	_dia+1,c
  1042  0010C2  0E1E               	movlw	30
  1043  0010C4  6E54               	movwf	_dia,c
  1044                           
  1045                           ;main.c: 223: Write_RTC();
  1046  0010C6  EC48  F00B         	call	_Write_RTC	;wreg free
  1047                           
  1048                           ;main.c: 224: } else {
  1049  0010CA  D005               	goto	l190
  1050  0010CC                     l189:
  1051                           
  1052                           ;main.c: 225: dia--;
  1053  0010CC  0654               	decf	_dia,f,c
  1054  0010CE  A0D8               	btfss	status,0,c
  1055  0010D0  0655               	decf	_dia+1,f,c
  1056                           
  1057                           ;main.c: 226: Write_RTC();
  1058  0010D2  EC48  F00B         	call	_Write_RTC	;wreg free
  1059  0010D6                     l190:
  1060                           
  1061                           ;main.c: 227: }
  1062                           ;main.c: 228: }
  1063                           ;main.c: 230: _delay((unsigned long)((50)*(8000000/4000.0)));
  1064  0010D6  0E82               	movlw	130
  1065  0010D8  6E24               	movwf	??_main& (0+255),c
  1066  0010DA  0EDE               	movlw	222
  1067  0010DC                     u2497:
  1068  0010DC  2EE8               	decfsz	wreg,f,c
  1069  0010DE  D7FE               	bra	u2497
  1070  0010E0  2E24               	decfsz	??_main& (0+255),f,c
  1071  0010E2  D7FC               	bra	u2497
  1072  0010E4                     l184:
  1073                           
  1074                           ;main.c: 231: }
  1075                           ;main.c: 234: if (boton_seleccionar == 2) {
  1076  0010E4  0E02               	movlw	2
  1077  0010E6  1827               	xorwf	main@boton_seleccionar,w,c
  1078  0010E8  1028               	iorwf	main@boton_seleccionar+1,w,c
  1079  0010EA  A4D8               	btfss	status,2,c
  1080  0010EC  D02B               	goto	l191
  1081                           
  1082                           ;main.c: 236: if (PORTAbits.RA3 == 0) {
  1083  0010EE  B680               	btfsc	3968,3,c	;volatile
  1084  0010F0  D010               	goto	l194
  1085                           
  1086                           ;main.c: 237: if (mes == 12) {
  1087  0010F2  0E0C               	movlw	12
  1088  0010F4  1858               	xorwf	_mes,w,c
  1089  0010F6  1059               	iorwf	_mes+1,w,c
  1090  0010F8  A4D8               	btfss	status,2,c
  1091  0010FA  D007               	goto	l193
  1092                           
  1093                           ;main.c: 238: mes = 1;
  1094  0010FC  0E00               	movlw	0
  1095  0010FE  6E59               	movwf	_mes+1,c
  1096  001100  0E01               	movlw	1
  1097  001102  6E58               	movwf	_mes,c
  1098                           
  1099                           ;main.c: 239: Write_RTC();
  1100  001104  EC48  F00B         	call	_Write_RTC	;wreg free
  1101                           
  1102                           ;main.c: 240: } else {
  1103  001108  D004               	goto	l194
  1104  00110A                     l193:
  1105                           
  1106                           ;main.c: 241: mes++;
  1107  00110A  4A58               	infsnz	_mes,f,c
  1108  00110C  2A59               	incf	_mes+1,f,c
  1109                           
  1110                           ;main.c: 242: Write_RTC();
  1111  00110E  EC48  F00B         	call	_Write_RTC	;wreg free
  1112  001112                     l194:
  1113                           
  1114                           ;main.c: 243: }
  1115                           ;main.c: 244: }
  1116                           ;main.c: 246: if (PORTAbits.RA6 == 0) {
  1117  001112  BC80               	btfsc	3968,6,c	;volatile
  1118  001114  D010               	goto	l197
  1119                           
  1120                           ;main.c: 247: if (mes == 1) {
  1121  001116  0458               	decf	_mes,w,c
  1122  001118  1059               	iorwf	_mes+1,w,c
  1123  00111A  A4D8               	btfss	status,2,c
  1124  00111C  D007               	goto	l196
  1125                           
  1126                           ;main.c: 248: mes = 12;
  1127  00111E  0E00               	movlw	0
  1128  001120  6E59               	movwf	_mes+1,c
  1129  001122  0E0C               	movlw	12
  1130  001124  6E58               	movwf	_mes,c
  1131                           
  1132                           ;main.c: 249: Write_RTC();
  1133  001126  EC48  F00B         	call	_Write_RTC	;wreg free
  1134                           
  1135                           ;main.c: 250: } else {
  1136  00112A  D005               	goto	l197
  1137  00112C                     l196:
  1138                           
  1139                           ;main.c: 251: mes--;
  1140  00112C  0658               	decf	_mes,f,c
  1141  00112E  A0D8               	btfss	status,0,c
  1142  001130  0659               	decf	_mes+1,f,c
  1143                           
  1144                           ;main.c: 252: Write_RTC();
  1145  001132  EC48  F00B         	call	_Write_RTC	;wreg free
  1146  001136                     l197:
  1147                           
  1148                           ;main.c: 253: }
  1149                           ;main.c: 254: }
  1150                           ;main.c: 256: _delay((unsigned long)((50)*(8000000/4000.0)));
  1151  001136  0E82               	movlw	130
  1152  001138  6E24               	movwf	??_main& (0+255),c
  1153  00113A  0EDE               	movlw	222
  1154  00113C                     u2507:
  1155  00113C  2EE8               	decfsz	wreg,f,c
  1156  00113E  D7FE               	bra	u2507
  1157  001140  2E24               	decfsz	??_main& (0+255),f,c
  1158  001142  D7FC               	bra	u2507
  1159  001144                     l191:
  1160                           
  1161                           ;main.c: 257: }
  1162                           ;main.c: 260: if (boton_seleccionar == 3) {
  1163  001144  0E03               	movlw	3
  1164  001146  1827               	xorwf	main@boton_seleccionar,w,c
  1165  001148  1028               	iorwf	main@boton_seleccionar+1,w,c
  1166  00114A  A4D8               	btfss	status,2,c
  1167  00114C  D02B               	goto	l198
  1168                           
  1169                           ;main.c: 262: if (PORTAbits.RA3 == 0) {
  1170  00114E  B680               	btfsc	3968,3,c	;volatile
  1171  001150  D010               	goto	l201
  1172                           
  1173                           ;main.c: 263: if (anio == 99) {
  1174  001152  0E63               	movlw	99
  1175  001154  185A               	xorwf	_anio,w,c
  1176  001156  105B               	iorwf	_anio+1,w,c
  1177  001158  A4D8               	btfss	status,2,c
  1178  00115A  D007               	goto	l200
  1179                           
  1180                           ;main.c: 264: anio = 0;
  1181  00115C  0E00               	movlw	0
  1182  00115E  6E5B               	movwf	_anio+1,c
  1183  001160  0E00               	movlw	0
  1184  001162  6E5A               	movwf	_anio,c
  1185                           
  1186                           ;main.c: 265: Write_RTC();
  1187  001164  EC48  F00B         	call	_Write_RTC	;wreg free
  1188                           
  1189                           ;main.c: 266: } else {
  1190  001168  D004               	goto	l201
  1191  00116A                     l200:
  1192                           
  1193                           ;main.c: 267: anio++;
  1194  00116A  4A5A               	infsnz	_anio,f,c
  1195  00116C  2A5B               	incf	_anio+1,f,c
  1196                           
  1197                           ;main.c: 268: Write_RTC();
  1198  00116E  EC48  F00B         	call	_Write_RTC	;wreg free
  1199  001172                     l201:
  1200                           
  1201                           ;main.c: 269: }
  1202                           ;main.c: 270: }
  1203                           ;main.c: 272: if (PORTAbits.RA6 == 0) {
  1204  001172  BC80               	btfsc	3968,6,c	;volatile
  1205  001174  D010               	goto	l204
  1206                           
  1207                           ;main.c: 273: if (anio == 0) {
  1208  001176  505A               	movf	_anio,w,c
  1209  001178  105B               	iorwf	_anio+1,w,c
  1210  00117A  A4D8               	btfss	status,2,c
  1211  00117C  D007               	goto	l203
  1212                           
  1213                           ;main.c: 274: anio = 99;
  1214  00117E  0E00               	movlw	0
  1215  001180  6E5B               	movwf	_anio+1,c
  1216  001182  0E63               	movlw	99
  1217  001184  6E5A               	movwf	_anio,c
  1218                           
  1219                           ;main.c: 275: Write_RTC();
  1220  001186  EC48  F00B         	call	_Write_RTC	;wreg free
  1221                           
  1222                           ;main.c: 276: } else {
  1223  00118A  D005               	goto	l204
  1224  00118C                     l203:
  1225                           
  1226                           ;main.c: 277: anio--;
  1227  00118C  065A               	decf	_anio,f,c
  1228  00118E  A0D8               	btfss	status,0,c
  1229  001190  065B               	decf	_anio+1,f,c
  1230                           
  1231                           ;main.c: 278: Write_RTC();
  1232  001192  EC48  F00B         	call	_Write_RTC	;wreg free
  1233  001196                     l204:
  1234                           
  1235                           ;main.c: 279: }
  1236                           ;main.c: 280: }
  1237                           ;main.c: 282: _delay((unsigned long)((50)*(8000000/4000.0)));
  1238  001196  0E82               	movlw	130
  1239  001198  6E24               	movwf	??_main& (0+255),c
  1240  00119A  0EDE               	movlw	222
  1241  00119C                     u2517:
  1242  00119C  2EE8               	decfsz	wreg,f,c
  1243  00119E  D7FE               	bra	u2517
  1244  0011A0  2E24               	decfsz	??_main& (0+255),f,c
  1245  0011A2  D7FC               	bra	u2517
  1246  0011A4                     l198:
  1247                           
  1248                           ;main.c: 283: }
  1249                           ;main.c: 286: if (boton_seleccionar == 4) {
  1250  0011A4  0E04               	movlw	4
  1251  0011A6  1827               	xorwf	main@boton_seleccionar,w,c
  1252  0011A8  1028               	iorwf	main@boton_seleccionar+1,w,c
  1253  0011AA  A4D8               	btfss	status,2,c
  1254  0011AC  D02B               	goto	l205
  1255                           
  1256                           ;main.c: 288: if (PORTAbits.RA3 == 0) {
  1257  0011AE  B680               	btfsc	3968,3,c	;volatile
  1258  0011B0  D010               	goto	l208
  1259                           
  1260                           ;main.c: 289: if (hora == 59) {
  1261  0011B2  0E3B               	movlw	59
  1262  0011B4  1852               	xorwf	_hora,w,c
  1263  0011B6  1053               	iorwf	_hora+1,w,c
  1264  0011B8  A4D8               	btfss	status,2,c
  1265  0011BA  D007               	goto	l207
  1266                           
  1267                           ;main.c: 290: hora = 0;
  1268  0011BC  0E00               	movlw	0
  1269  0011BE  6E53               	movwf	_hora+1,c
  1270  0011C0  0E00               	movlw	0
  1271  0011C2  6E52               	movwf	_hora,c
  1272                           
  1273                           ;main.c: 291: Write_RTC();
  1274  0011C4  EC48  F00B         	call	_Write_RTC	;wreg free
  1275                           
  1276                           ;main.c: 292: } else {
  1277  0011C8  D004               	goto	l208
  1278  0011CA                     l207:
  1279                           
  1280                           ;main.c: 293: hora++;
  1281  0011CA  4A52               	infsnz	_hora,f,c
  1282  0011CC  2A53               	incf	_hora+1,f,c
  1283                           
  1284                           ;main.c: 294: Write_RTC();
  1285  0011CE  EC48  F00B         	call	_Write_RTC	;wreg free
  1286  0011D2                     l208:
  1287                           
  1288                           ;main.c: 295: }
  1289                           ;main.c: 296: }
  1290                           ;main.c: 298: if (PORTAbits.RA6 == 0) {
  1291  0011D2  BC80               	btfsc	3968,6,c	;volatile
  1292  0011D4  D010               	goto	l211
  1293                           
  1294                           ;main.c: 299: if (hora == 0) {
  1295  0011D6  5052               	movf	_hora,w,c
  1296  0011D8  1053               	iorwf	_hora+1,w,c
  1297  0011DA  A4D8               	btfss	status,2,c
  1298  0011DC  D007               	goto	l210
  1299                           
  1300                           ;main.c: 300: hora = 59;
  1301  0011DE  0E00               	movlw	0
  1302  0011E0  6E53               	movwf	_hora+1,c
  1303  0011E2  0E3B               	movlw	59
  1304  0011E4  6E52               	movwf	_hora,c
  1305                           
  1306                           ;main.c: 301: Write_RTC();
  1307  0011E6  EC48  F00B         	call	_Write_RTC	;wreg free
  1308                           
  1309                           ;main.c: 302: } else {
  1310  0011EA  D005               	goto	l211
  1311  0011EC                     l210:
  1312                           
  1313                           ;main.c: 303: hora--;
  1314  0011EC  0652               	decf	_hora,f,c
  1315  0011EE  A0D8               	btfss	status,0,c
  1316  0011F0  0653               	decf	_hora+1,f,c
  1317                           
  1318                           ;main.c: 304: Write_RTC();
  1319  0011F2  EC48  F00B         	call	_Write_RTC	;wreg free
  1320  0011F6                     l211:
  1321                           
  1322                           ;main.c: 305: }
  1323                           ;main.c: 306: }
  1324                           ;main.c: 308: _delay((unsigned long)((50)*(8000000/4000.0)));
  1325  0011F6  0E82               	movlw	130
  1326  0011F8  6E24               	movwf	??_main& (0+255),c
  1327  0011FA  0EDE               	movlw	222
  1328  0011FC                     u2527:
  1329  0011FC  2EE8               	decfsz	wreg,f,c
  1330  0011FE  D7FE               	bra	u2527
  1331  001200  2E24               	decfsz	??_main& (0+255),f,c
  1332  001202  D7FC               	bra	u2527
  1333  001204                     l205:
  1334                           
  1335                           ;main.c: 309: }
  1336                           ;main.c: 312: if (boton_seleccionar == 5) {
  1337  001204  0E05               	movlw	5
  1338  001206  1827               	xorwf	main@boton_seleccionar,w,c
  1339  001208  1028               	iorwf	main@boton_seleccionar+1,w,c
  1340  00120A  A4D8               	btfss	status,2,c
  1341  00120C  D02B               	goto	l212
  1342                           
  1343                           ;main.c: 314: if (PORTAbits.RA3 == 0) {
  1344  00120E  B680               	btfsc	3968,3,c	;volatile
  1345  001210  D010               	goto	l215
  1346                           
  1347                           ;main.c: 315: if (minuto == 59) {
  1348  001212  0E3B               	movlw	59
  1349  001214  1850               	xorwf	_minuto,w,c
  1350  001216  1051               	iorwf	_minuto+1,w,c
  1351  001218  A4D8               	btfss	status,2,c
  1352  00121A  D007               	goto	l214
  1353                           
  1354                           ;main.c: 316: minuto = 0;
  1355  00121C  0E00               	movlw	0
  1356  00121E  6E51               	movwf	_minuto+1,c
  1357  001220  0E00               	movlw	0
  1358  001222  6E50               	movwf	_minuto,c
  1359                           
  1360                           ;main.c: 317: Write_RTC();
  1361  001224  EC48  F00B         	call	_Write_RTC	;wreg free
  1362                           
  1363                           ;main.c: 318: } else {
  1364  001228  D004               	goto	l215
  1365  00122A                     l214:
  1366                           
  1367                           ;main.c: 319: minuto++;
  1368  00122A  4A50               	infsnz	_minuto,f,c
  1369  00122C  2A51               	incf	_minuto+1,f,c
  1370                           
  1371                           ;main.c: 320: Write_RTC();
  1372  00122E  EC48  F00B         	call	_Write_RTC	;wreg free
  1373  001232                     l215:
  1374                           
  1375                           ;main.c: 321: }
  1376                           ;main.c: 322: }
  1377                           ;main.c: 324: if (PORTAbits.RA6 == 0) {
  1378  001232  BC80               	btfsc	3968,6,c	;volatile
  1379  001234  D010               	goto	l218
  1380                           
  1381                           ;main.c: 325: if (minuto == 0) {
  1382  001236  5050               	movf	_minuto,w,c
  1383  001238  1051               	iorwf	_minuto+1,w,c
  1384  00123A  A4D8               	btfss	status,2,c
  1385  00123C  D007               	goto	l217
  1386                           
  1387                           ;main.c: 326: minuto = 59;
  1388  00123E  0E00               	movlw	0
  1389  001240  6E51               	movwf	_minuto+1,c
  1390  001242  0E3B               	movlw	59
  1391  001244  6E50               	movwf	_minuto,c
  1392                           
  1393                           ;main.c: 327: Write_RTC();
  1394  001246  EC48  F00B         	call	_Write_RTC	;wreg free
  1395                           
  1396                           ;main.c: 328: } else {
  1397  00124A  D005               	goto	l218
  1398  00124C                     l217:
  1399                           
  1400                           ;main.c: 329: minuto--;
  1401  00124C  0650               	decf	_minuto,f,c
  1402  00124E  A0D8               	btfss	status,0,c
  1403  001250  0651               	decf	_minuto+1,f,c
  1404                           
  1405                           ;main.c: 330: Write_RTC();
  1406  001252  EC48  F00B         	call	_Write_RTC	;wreg free
  1407  001256                     l218:
  1408                           
  1409                           ;main.c: 331: }
  1410                           ;main.c: 332: }
  1411                           ;main.c: 334: _delay((unsigned long)((50)*(8000000/4000.0)));
  1412  001256  0E82               	movlw	130
  1413  001258  6E24               	movwf	??_main& (0+255),c
  1414  00125A  0EDE               	movlw	222
  1415  00125C                     u2537:
  1416  00125C  2EE8               	decfsz	wreg,f,c
  1417  00125E  D7FE               	bra	u2537
  1418  001260  2E24               	decfsz	??_main& (0+255),f,c
  1419  001262  D7FC               	bra	u2537
  1420  001264                     l212:
  1421                           
  1422                           ;main.c: 335: }
  1423                           ;main.c: 338: if (boton_seleccionar == 6) {
  1424  001264  0E06               	movlw	6
  1425  001266  1827               	xorwf	main@boton_seleccionar,w,c
  1426  001268  1028               	iorwf	main@boton_seleccionar+1,w,c
  1427  00126A  A4D8               	btfss	status,2,c
  1428  00126C  D02B               	goto	l219
  1429                           
  1430                           ;main.c: 340: if (PORTAbits.RA3 == 0) {
  1431  00126E  B680               	btfsc	3968,3,c	;volatile
  1432  001270  D010               	goto	l222
  1433                           
  1434                           ;main.c: 341: if (segundo == 59) {
  1435  001272  0E3B               	movlw	59
  1436  001274  182D               	xorwf	_segundo,w,c
  1437  001276  102E               	iorwf	_segundo+1,w,c
  1438  001278  A4D8               	btfss	status,2,c
  1439  00127A  D007               	goto	l221
  1440                           
  1441                           ;main.c: 342: segundo = 0;
  1442  00127C  0E00               	movlw	0
  1443  00127E  6E2E               	movwf	_segundo+1,c
  1444  001280  0E00               	movlw	0
  1445  001282  6E2D               	movwf	_segundo,c
  1446                           
  1447                           ;main.c: 343: Write_RTC();
  1448  001284  EC48  F00B         	call	_Write_RTC	;wreg free
  1449                           
  1450                           ;main.c: 344: } else {
  1451  001288  D004               	goto	l222
  1452  00128A                     l221:
  1453                           
  1454                           ;main.c: 345: segundo++;
  1455  00128A  4A2D               	infsnz	_segundo,f,c
  1456  00128C  2A2E               	incf	_segundo+1,f,c
  1457                           
  1458                           ;main.c: 346: Write_RTC();
  1459  00128E  EC48  F00B         	call	_Write_RTC	;wreg free
  1460  001292                     l222:
  1461                           
  1462                           ;main.c: 347: }
  1463                           ;main.c: 348: }
  1464                           ;main.c: 350: if (PORTAbits.RA6 == 0) {
  1465  001292  BC80               	btfsc	3968,6,c	;volatile
  1466  001294  D010               	goto	l225
  1467                           
  1468                           ;main.c: 351: if (segundo == 0) {
  1469  001296  502D               	movf	_segundo,w,c
  1470  001298  102E               	iorwf	_segundo+1,w,c
  1471  00129A  A4D8               	btfss	status,2,c
  1472  00129C  D007               	goto	l224
  1473                           
  1474                           ;main.c: 352: segundo = 59;
  1475  00129E  0E00               	movlw	0
  1476  0012A0  6E2E               	movwf	_segundo+1,c
  1477  0012A2  0E3B               	movlw	59
  1478  0012A4  6E2D               	movwf	_segundo,c
  1479                           
  1480                           ;main.c: 353: Write_RTC();
  1481  0012A6  EC48  F00B         	call	_Write_RTC	;wreg free
  1482                           
  1483                           ;main.c: 354: } else {
  1484  0012AA  D005               	goto	l225
  1485  0012AC                     l224:
  1486                           
  1487                           ;main.c: 355: segundo--;
  1488  0012AC  062D               	decf	_segundo,f,c
  1489  0012AE  A0D8               	btfss	status,0,c
  1490  0012B0  062E               	decf	_segundo+1,f,c
  1491                           
  1492                           ;main.c: 356: Write_RTC();
  1493  0012B2  EC48  F00B         	call	_Write_RTC	;wreg free
  1494  0012B6                     l225:
  1495                           
  1496                           ;main.c: 357: }
  1497                           ;main.c: 358: }
  1498                           ;main.c: 360: _delay((unsigned long)((50)*(8000000/4000.0)));
  1499  0012B6  0E82               	movlw	130
  1500  0012B8  6E24               	movwf	??_main& (0+255),c
  1501  0012BA  0EDE               	movlw	222
  1502  0012BC                     u2547:
  1503  0012BC  2EE8               	decfsz	wreg,f,c
  1504  0012BE  D7FE               	bra	u2547
  1505  0012C0  2E24               	decfsz	??_main& (0+255),f,c
  1506  0012C2  D7FC               	bra	u2547
  1507  0012C4                     l219:
  1508                           
  1509                           ;main.c: 361: }
  1510                           ;main.c: 363: sprintf(buffer2, "%02u", boton_seleccionar);
  1511  0012C4  0E78               	movlw	low _buffer2
  1512  0012C6  6E0D               	movwf	sprintf@sp,c
  1513  0012C8  0E00               	movlw	high _buffer2
  1514  0012CA  6E0E               	movwf	sprintf@sp+1,c
  1515  0012CC  0E19               	movlw	low (STR_1+10)
  1516  0012CE  6E0F               	movwf	sprintf@f,c
  1517  0012D0  0E0F               	movlw	high (STR_1+10)
  1518  0012D2  6E10               	movwf	sprintf@f+1,c
  1519  0012D4  C027  F011         	movff	main@boton_seleccionar,?_sprintf+4
  1520  0012D8  C028  F012         	movff	main@boton_seleccionar+1,?_sprintf+5
  1521  0012DC  EC8A  F009         	call	_sprintf	;wreg free
  1522                           
  1523                           ;main.c: 364: lcd_gotoxy(15, 2);
  1524  0012E0  0E02               	movlw	2
  1525  0012E2  6E05               	movwf	lcd_gotoxy@y,c
  1526  0012E4  0E0F               	movlw	15
  1527  0012E6  ECF1  F00F         	call	_lcd_gotoxy
  1528                           
  1529                           ;main.c: 365: lcd_putrs(buffer2);
  1530  0012EA  0E78               	movlw	low _buffer2
  1531  0012EC  6E09               	movwf	lcd_putrs@ptr,c
  1532  0012EE  0E00               	movlw	high _buffer2
  1533  0012F0  6E0A               	movwf	lcd_putrs@ptr+1,c
  1534  0012F2  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1535  0012F6                     l170:
  1536                           
  1537                           ;main.c: 366: }
  1538                           ;main.c: 368: setDiaSemana();
  1539  0012F6  ECA2  F00A         	call	_setDiaSemana	;wreg free
  1540                           
  1541                           ;main.c: 369: setDiaMesAnio();
  1542  0012FA  EC62  F00F         	call	_setDiaMesAnio	;wreg free
  1543                           
  1544                           ;main.c: 370: setHoraMinutoSegundo();
  1545  0012FE  EC40  F00F         	call	_setHoraMinutoSegundo	;wreg free
  1546                           
  1547                           ;main.c: 372: _delay((unsigned long)((98)*(8000000/4000.0)));
  1548  001302  0EFF               	movlw	255
  1549  001304  6E24               	movwf	??_main& (0+255),c
  1550  001306  0E8A               	movlw	138
  1551  001308                     u2557:
  1552  001308  2EE8               	decfsz	wreg,f,c
  1553  00130A  D7FE               	bra	u2557
  1554  00130C  2E24               	decfsz	??_main& (0+255),f,c
  1555  00130E  D7FC               	bra	u2557
  1556  001310  D000               	nop2	
  1557  001312  D635               	goto	l167
  1558  001314                     __end_of_main:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           postinc0	equ	0xFEE
  1565                           wreg	equ	0xFE8
  1566                           postdec1	equ	0xFE5
  1567                           fsr1l	equ	0xFE1
  1568                           status	equ	0xFD8
  1569                           
  1570 ;; *************** function _setup *****************
  1571 ;; Defined at:
  1572 ;;		line 95 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    6
  1593 ;; This function calls:
  1594 ;;		_lcd_comand
  1595 ;;		_lcd_init
  1596 ;;		_setDiaMesAnio
  1597 ;;		_setDiaSemana
  1598 ;;		_setHoraMinutoSegundo
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text1
  1605  001F4A                     __ptext1:
  1606                           	opt stack 0
  1607  001F4A                     _setup:
  1608                           	opt stack 24
  1609                           
  1610                           ;main.c: 96: OSCTUNEbits.INTSRC = 1;
  1611                           
  1612                           ;incstack = 0
  1613  001F4A  8E9B               	bsf	3995,7,c	;volatile
  1614                           
  1615                           ;main.c: 97: OSCTUNEbits.PLLEN = 0;
  1616  001F4C  9C9B               	bcf	3995,6,c	;volatile
  1617                           
  1618                           ;main.c: 98: OSCCONbits.IRCF0 = 1;
  1619  001F4E  88D3               	bsf	4051,4,c	;volatile
  1620                           
  1621                           ;main.c: 99: OSCCONbits.IRCF1 = 1;
  1622  001F50  8AD3               	bsf	4051,5,c	;volatile
  1623                           
  1624                           ;main.c: 100: OSCCONbits.IRCF2 = 1;
  1625  001F52  8CD3               	bsf	4051,6,c	;volatile
  1626                           
  1627                           ;main.c: 101: OSCCONbits.SCS0 = 0;
  1628  001F54  90D3               	bcf	4051,0,c	;volatile
  1629                           
  1630                           ;main.c: 102: OSCCONbits.SCS1 = 0;
  1631  001F56  92D3               	bcf	4051,1,c	;volatile
  1632                           
  1633                           ;main.c: 103: TRISA = 0b11111111;
  1634  001F58  6892               	setf	3986,c	;volatile
  1635                           
  1636                           ;main.c: 104: TRISB = 0;
  1637  001F5A  0E00               	movlw	0
  1638  001F5C  6E93               	movwf	3987,c	;volatile
  1639                           
  1640                           ;main.c: 105: TRISC = 0b00000111;
  1641  001F5E  0E07               	movlw	7
  1642  001F60  6E94               	movwf	3988,c	;volatile
  1643                           
  1644                           ;main.c: 106: INTCON2bits.RBPU = 1;
  1645  001F62  8EF1               	bsf	intcon2,7,c	;volatile
  1646                           
  1647                           ;main.c: 107: ANCON0 = 0b11111111;
  1648  001F64  010F               	movlb	15	; () banked
  1649  001F66  6948               	setf	72,b	;volatile
  1650                           
  1651                           ; BSR set to: 15
  1652                           ;main.c: 108: ANCON1 = 0b11111111;
  1653  001F68  010F               	movlb	15	; () banked
  1654  001F6A  6949               	setf	73,b	;volatile
  1655                           
  1656                           ; BSR set to: 15
  1657                           ;main.c: 109: ADCON0 = 0b11111111;
  1658  001F6C  68C2               	setf	4034,c	;volatile
  1659                           
  1660                           ; BSR set to: 15
  1661                           ;main.c: 110: ADCON1 = 0b11111111;
  1662  001F6E  68C1               	setf	4033,c	;volatile
  1663                           
  1664                           ; BSR set to: 15
  1665                           ;main.c: 113: T1CONbits.T1OSCEN = 1;
  1666  001F70  86CD               	bsf	4045,3,c	;volatile
  1667                           
  1668                           ; BSR set to: 15
  1669                           ;main.c: 115: lcd_init();
  1670  001F72  ECFA  F00D         	call	_lcd_init	;wreg free
  1671                           
  1672                           ;main.c: 116: lcd_comand(0b00001100);
  1673  001F76  0E0C               	movlw	12
  1674  001F78  EC2A  F010         	call	_lcd_comand
  1675                           
  1676                           ;main.c: 118: setDiaSemana();
  1677  001F7C  ECA2  F00A         	call	_setDiaSemana	;wreg free
  1678                           
  1679                           ;main.c: 119: setDiaMesAnio();
  1680  001F80  EC62  F00F         	call	_setDiaMesAnio	;wreg free
  1681                           
  1682                           ;main.c: 120: setHoraMinutoSegundo();
  1683  001F84  EC40  F00F         	call	_setHoraMinutoSegundo	;wreg free
  1684  001F88  0012               	return		;funcret
  1685  001F8A                     __end_of_setup:
  1686                           	opt stack 0
  1687                           tblptru	equ	0xFF8
  1688                           tblptrh	equ	0xFF7
  1689                           tblptrl	equ	0xFF6
  1690                           tablat	equ	0xFF5
  1691                           intcon2	equ	0xFF1
  1692                           postinc0	equ	0xFEE
  1693                           wreg	equ	0xFE8
  1694                           postdec1	equ	0xFE5
  1695                           fsr1l	equ	0xFE1
  1696                           status	equ	0xFD8
  1697                           
  1698 ;; *************** function _setHoraMinutoSegundo *****************
  1699 ;; Defined at:
  1700 ;;		line 88 in file "main.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    5
  1721 ;; This function calls:
  1722 ;;		_lcd_gotoxy
  1723 ;;		_lcd_putrs
  1724 ;;		_sprintf
  1725 ;; This function is called by:
  1726 ;;		_setup
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text2
  1732  001E80                     __ptext2:
  1733                           	opt stack 0
  1734  001E80                     _setHoraMinutoSegundo:
  1735                           	opt stack 24
  1736                           
  1737                           ;main.c: 89: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  1738                           
  1739                           ;incstack = 0
  1740  001E80  0E78               	movlw	low _buffer2
  1741  001E82  6E0D               	movwf	sprintf@sp,c
  1742  001E84  0E00               	movlw	high _buffer2
  1743  001E86  6E0E               	movwf	sprintf@sp+1,c
  1744  001E88  0E1E               	movlw	low STR_2
  1745  001E8A  6E0F               	movwf	sprintf@f,c
  1746  001E8C  0E0F               	movlw	high STR_2
  1747  001E8E  6E10               	movwf	sprintf@f+1,c
  1748  001E90  C052  F011         	movff	_hora,?_sprintf+4
  1749  001E94  C053  F012         	movff	_hora+1,?_sprintf+5
  1750  001E98  C050  F013         	movff	_minuto,?_sprintf+6
  1751  001E9C  C051  F014         	movff	_minuto+1,?_sprintf+7
  1752  001EA0  C02D  F015         	movff	_segundo,?_sprintf+8
  1753  001EA4  C02E  F016         	movff	_segundo+1,?_sprintf+9
  1754  001EA8  EC8A  F009         	call	_sprintf	;wreg free
  1755                           
  1756                           ;main.c: 90: lcd_gotoxy(1, 2);
  1757  001EAC  0E02               	movlw	2
  1758  001EAE  6E05               	movwf	lcd_gotoxy@y,c
  1759  001EB0  0E01               	movlw	1
  1760  001EB2  ECF1  F00F         	call	_lcd_gotoxy
  1761                           
  1762                           ;main.c: 91: lcd_putrs(buffer2);
  1763  001EB6  0E78               	movlw	low _buffer2
  1764  001EB8  6E09               	movwf	lcd_putrs@ptr,c
  1765  001EBA  0E00               	movlw	high _buffer2
  1766  001EBC  6E0A               	movwf	lcd_putrs@ptr+1,c
  1767  001EBE  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1768  001EC2  0012               	return		;funcret
  1769  001EC4                     __end_of_setHoraMinutoSegundo:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           intcon2	equ	0xFF1
  1776                           postinc0	equ	0xFEE
  1777                           wreg	equ	0xFE8
  1778                           postdec1	equ	0xFE5
  1779                           fsr1l	equ	0xFE1
  1780                           status	equ	0xFD8
  1781                           
  1782 ;; *************** function _setDiaSemana *****************
  1783 ;; Defined at:
  1784 ;;		line 50 in file "main.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;		None
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;		None
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1802 ;;Total ram usage:        1 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    5
  1805 ;; This function calls:
  1806 ;;		_lcd_gotoxy
  1807 ;;		_lcd_putrs
  1808 ;; This function is called by:
  1809 ;;		_setup
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text3
  1815  001544                     __ptext3:
  1816                           	opt stack 0
  1817  001544                     _setDiaSemana:
  1818                           	opt stack 24
  1819                           
  1820                           ;main.c: 51: if (diasem == 0) {
  1821                           
  1822                           ;incstack = 0
  1823  001544  5056               	movf	_diasem,w,c
  1824  001546  1057               	iorwf	_diasem+1,w,c
  1825  001548  A4D8               	btfss	status,2,c
  1826  00154A  D013               	goto	l140
  1827                           
  1828                           ;main.c: 52: lcd_gotoxy(1, 1);
  1829  00154C  0E01               	movlw	1
  1830  00154E  6E05               	movwf	lcd_gotoxy@y,c
  1831  001550  0E01               	movlw	1
  1832  001552  ECF1  F00F         	call	_lcd_gotoxy
  1833                           
  1834                           ;main.c: 53: lcd_putrs("Domingo");
  1835  001556  0E55               	movlw	low STR_3
  1836  001558  6E09               	movwf	lcd_putrs@ptr,c
  1837  00155A  0E0F               	movlw	high STR_3
  1838  00155C  6E0A               	movwf	lcd_putrs@ptr+1,c
  1839  00155E  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1840                           
  1841                           ;main.c: 54: _delay((unsigned long)((50)*(8000000/4000.0)));
  1842  001562  0E82               	movlw	130
  1843  001564  6E0B               	movwf	??_setDiaSemana& (0+255),c
  1844  001566  0EDE               	movlw	222
  1845  001568                     u2567:
  1846  001568  2EE8               	decfsz	wreg,f,c
  1847  00156A  D7FE               	bra	u2567
  1848  00156C  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  1849  00156E  D7FC               	bra	u2567
  1850                           
  1851                           ;main.c: 55: } else if (diasem == 1) {
  1852  001570  0012               	return	
  1853  001572                     l140:
  1854  001572  0456               	decf	_diasem,w,c
  1855  001574  1057               	iorwf	_diasem+1,w,c
  1856  001576  A4D8               	btfss	status,2,c
  1857  001578  D013               	goto	l142
  1858                           
  1859                           ;main.c: 56: lcd_gotoxy(1, 1);
  1860  00157A  0E01               	movlw	1
  1861  00157C  6E05               	movwf	lcd_gotoxy@y,c
  1862  00157E  0E01               	movlw	1
  1863  001580  ECF1  F00F         	call	_lcd_gotoxy
  1864                           
  1865                           ;main.c: 57: lcd_putrs("Lunes  ");
  1866  001584  0E2D               	movlw	low STR_4
  1867  001586  6E09               	movwf	lcd_putrs@ptr,c
  1868  001588  0E0F               	movlw	high STR_4
  1869  00158A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1870  00158C  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1871                           
  1872                           ;main.c: 58: _delay((unsigned long)((50)*(8000000/4000.0)));
  1873  001590  0E82               	movlw	130
  1874  001592  6E0B               	movwf	??_setDiaSemana& (0+255),c
  1875  001594  0EDE               	movlw	222
  1876  001596                     u2577:
  1877  001596  2EE8               	decfsz	wreg,f,c
  1878  001598  D7FE               	bra	u2577
  1879  00159A  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  1880  00159C  D7FC               	bra	u2577
  1881                           
  1882                           ;main.c: 59: } else if (diasem == 2) {
  1883  00159E  0012               	return	
  1884  0015A0                     l142:
  1885  0015A0  0E02               	movlw	2
  1886  0015A2  1856               	xorwf	_diasem,w,c
  1887  0015A4  1057               	iorwf	_diasem+1,w,c
  1888  0015A6  A4D8               	btfss	status,2,c
  1889  0015A8  D013               	goto	l144
  1890                           
  1891                           ;main.c: 60: lcd_gotoxy(1, 1);
  1892  0015AA  0E01               	movlw	1
  1893  0015AC  6E05               	movwf	lcd_gotoxy@y,c
  1894  0015AE  0E01               	movlw	1
  1895  0015B0  ECF1  F00F         	call	_lcd_gotoxy
  1896                           
  1897                           ;main.c: 61: lcd_putrs("Martes ");
  1898  0015B4  0E3D               	movlw	low STR_5
  1899  0015B6  6E09               	movwf	lcd_putrs@ptr,c
  1900  0015B8  0E0F               	movlw	high STR_5
  1901  0015BA  6E0A               	movwf	lcd_putrs@ptr+1,c
  1902  0015BC  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1903                           
  1904                           ;main.c: 62: _delay((unsigned long)((50)*(8000000/4000.0)));
  1905  0015C0  0E82               	movlw	130
  1906  0015C2  6E0B               	movwf	??_setDiaSemana& (0+255),c
  1907  0015C4  0EDE               	movlw	222
  1908  0015C6                     u2587:
  1909  0015C6  2EE8               	decfsz	wreg,f,c
  1910  0015C8  D7FE               	bra	u2587
  1911  0015CA  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  1912  0015CC  D7FC               	bra	u2587
  1913                           
  1914                           ;main.c: 63: } else if (diasem == 3) {
  1915  0015CE  0012               	return	
  1916  0015D0                     l144:
  1917  0015D0  0E03               	movlw	3
  1918  0015D2  1856               	xorwf	_diasem,w,c
  1919  0015D4  1057               	iorwf	_diasem+1,w,c
  1920  0015D6  A4D8               	btfss	status,2,c
  1921  0015D8  D013               	goto	l146
  1922                           
  1923                           ;main.c: 64: lcd_gotoxy(1, 1);
  1924  0015DA  0E01               	movlw	1
  1925  0015DC  6E05               	movwf	lcd_gotoxy@y,c
  1926  0015DE  0E01               	movlw	1
  1927  0015E0  ECF1  F00F         	call	_lcd_gotoxy
  1928                           
  1929                           ;main.c: 65: lcd_putrs("Miercol");
  1930  0015E4  0E4D               	movlw	low STR_6
  1931  0015E6  6E09               	movwf	lcd_putrs@ptr,c
  1932  0015E8  0E0F               	movlw	high STR_6
  1933  0015EA  6E0A               	movwf	lcd_putrs@ptr+1,c
  1934  0015EC  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1935                           
  1936                           ;main.c: 66: _delay((unsigned long)((50)*(8000000/4000.0)));
  1937  0015F0  0E82               	movlw	130
  1938  0015F2  6E0B               	movwf	??_setDiaSemana& (0+255),c
  1939  0015F4  0EDE               	movlw	222
  1940  0015F6                     u2597:
  1941  0015F6  2EE8               	decfsz	wreg,f,c
  1942  0015F8  D7FE               	bra	u2597
  1943  0015FA  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  1944  0015FC  D7FC               	bra	u2597
  1945                           
  1946                           ;main.c: 67: } else if (diasem == 4) {
  1947  0015FE  0012               	return	
  1948  001600                     l146:
  1949  001600  0E04               	movlw	4
  1950  001602  1856               	xorwf	_diasem,w,c
  1951  001604  1057               	iorwf	_diasem+1,w,c
  1952  001606  A4D8               	btfss	status,2,c
  1953  001608  D013               	goto	l148
  1954                           
  1955                           ;main.c: 68: lcd_gotoxy(1, 1);
  1956  00160A  0E01               	movlw	1
  1957  00160C  6E05               	movwf	lcd_gotoxy@y,c
  1958  00160E  0E01               	movlw	1
  1959  001610  ECF1  F00F         	call	_lcd_gotoxy
  1960                           
  1961                           ;main.c: 69: lcd_putrs("Jueves ");
  1962  001614  0E45               	movlw	low STR_7
  1963  001616  6E09               	movwf	lcd_putrs@ptr,c
  1964  001618  0E0F               	movlw	high STR_7
  1965  00161A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1966  00161C  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1967                           
  1968                           ;main.c: 70: _delay((unsigned long)((50)*(8000000/4000.0)));
  1969  001620  0E82               	movlw	130
  1970  001622  6E0B               	movwf	??_setDiaSemana& (0+255),c
  1971  001624  0EDE               	movlw	222
  1972  001626                     u2607:
  1973  001626  2EE8               	decfsz	wreg,f,c
  1974  001628  D7FE               	bra	u2607
  1975  00162A  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  1976  00162C  D7FC               	bra	u2607
  1977                           
  1978                           ;main.c: 71: } else if (diasem == 5) {
  1979  00162E  0012               	return	
  1980  001630                     l148:
  1981  001630  0E05               	movlw	5
  1982  001632  1856               	xorwf	_diasem,w,c
  1983  001634  1057               	iorwf	_diasem+1,w,c
  1984  001636  A4D8               	btfss	status,2,c
  1985  001638  D013               	goto	l150
  1986                           
  1987                           ;main.c: 72: lcd_gotoxy(1, 1);
  1988  00163A  0E01               	movlw	1
  1989  00163C  6E05               	movwf	lcd_gotoxy@y,c
  1990  00163E  0E01               	movlw	1
  1991  001640  ECF1  F00F         	call	_lcd_gotoxy
  1992                           
  1993                           ;main.c: 73: lcd_putrs("Viernes");
  1994  001644  0E5D               	movlw	low STR_8
  1995  001646  6E09               	movwf	lcd_putrs@ptr,c
  1996  001648  0E0F               	movlw	high STR_8
  1997  00164A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1998  00164C  ECD0  F00E         	call	_lcd_putrs	;wreg free
  1999                           
  2000                           ;main.c: 74: _delay((unsigned long)((50)*(8000000/4000.0)));
  2001  001650  0E82               	movlw	130
  2002  001652  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2003  001654  0EDE               	movlw	222
  2004  001656                     u2617:
  2005  001656  2EE8               	decfsz	wreg,f,c
  2006  001658  D7FE               	bra	u2617
  2007  00165A  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2008  00165C  D7FC               	bra	u2617
  2009                           
  2010                           ;main.c: 75: } else if (diasem == 6) {
  2011  00165E  0012               	return	
  2012  001660                     l150:
  2013  001660  0E06               	movlw	6
  2014  001662  1856               	xorwf	_diasem,w,c
  2015  001664  1057               	iorwf	_diasem+1,w,c
  2016  001666  A4D8               	btfss	status,2,c
  2017  001668  0012               	return	
  2018                           
  2019                           ;main.c: 76: lcd_gotoxy(1, 1);
  2020  00166A  0E01               	movlw	1
  2021  00166C  6E05               	movwf	lcd_gotoxy@y,c
  2022  00166E  0E01               	movlw	1
  2023  001670  ECF1  F00F         	call	_lcd_gotoxy
  2024                           
  2025                           ;main.c: 77: lcd_putrs("Sabado ");
  2026  001674  0E35               	movlw	low STR_9
  2027  001676  6E09               	movwf	lcd_putrs@ptr,c
  2028  001678  0E0F               	movlw	high STR_9
  2029  00167A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2030  00167C  ECD0  F00E         	call	_lcd_putrs	;wreg free
  2031                           
  2032                           ;main.c: 78: _delay((unsigned long)((50)*(8000000/4000.0)));
  2033  001680  0E82               	movlw	130
  2034  001682  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2035  001684  0EDE               	movlw	222
  2036  001686                     u2627:
  2037  001686  2EE8               	decfsz	wreg,f,c
  2038  001688  D7FE               	bra	u2627
  2039  00168A  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2040  00168C  D7FC               	bra	u2627
  2041  00168E  0012               	return	
  2042  001690                     __end_of_setDiaSemana:
  2043                           	opt stack 0
  2044                           tblptru	equ	0xFF8
  2045                           tblptrh	equ	0xFF7
  2046                           tblptrl	equ	0xFF6
  2047                           tablat	equ	0xFF5
  2048                           intcon2	equ	0xFF1
  2049                           postinc0	equ	0xFEE
  2050                           wreg	equ	0xFE8
  2051                           postdec1	equ	0xFE5
  2052                           fsr1l	equ	0xFE1
  2053                           status	equ	0xFD8
  2054                           
  2055 ;; *************** function _setDiaMesAnio *****************
  2056 ;; Defined at:
  2057 ;;		line 82 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    5
  2078 ;; This function calls:
  2079 ;;		_lcd_gotoxy
  2080 ;;		_lcd_putrs
  2081 ;;		_sprintf
  2082 ;; This function is called by:
  2083 ;;		_setup
  2084 ;;		_main
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text4
  2089  001EC4                     __ptext4:
  2090                           	opt stack 0
  2091  001EC4                     _setDiaMesAnio:
  2092                           	opt stack 24
  2093                           
  2094                           ;main.c: 83: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  2095                           
  2096                           ;incstack = 0
  2097  001EC4  0E78               	movlw	low _buffer2
  2098  001EC6  6E0D               	movwf	sprintf@sp,c
  2099  001EC8  0E00               	movlw	high _buffer2
  2100  001ECA  6E0E               	movwf	sprintf@sp+1,c
  2101  001ECC  0E0F               	movlw	low STR_1
  2102  001ECE  6E0F               	movwf	sprintf@f,c
  2103  001ED0  0E0F               	movlw	high STR_1
  2104  001ED2  6E10               	movwf	sprintf@f+1,c
  2105  001ED4  C054  F011         	movff	_dia,?_sprintf+4
  2106  001ED8  C055  F012         	movff	_dia+1,?_sprintf+5
  2107  001EDC  C058  F013         	movff	_mes,?_sprintf+6
  2108  001EE0  C059  F014         	movff	_mes+1,?_sprintf+7
  2109  001EE4  C05A  F015         	movff	_anio,?_sprintf+8
  2110  001EE8  C05B  F016         	movff	_anio+1,?_sprintf+9
  2111  001EEC  EC8A  F009         	call	_sprintf	;wreg free
  2112                           
  2113                           ;main.c: 84: lcd_gotoxy(9, 1);
  2114  001EF0  0E01               	movlw	1
  2115  001EF2  6E05               	movwf	lcd_gotoxy@y,c
  2116  001EF4  0E09               	movlw	9
  2117  001EF6  ECF1  F00F         	call	_lcd_gotoxy
  2118                           
  2119                           ;main.c: 85: lcd_putrs(buffer2);
  2120  001EFA  0E78               	movlw	low _buffer2
  2121  001EFC  6E09               	movwf	lcd_putrs@ptr,c
  2122  001EFE  0E00               	movlw	high _buffer2
  2123  001F00  6E0A               	movwf	lcd_putrs@ptr+1,c
  2124  001F02  ECD0  F00E         	call	_lcd_putrs	;wreg free
  2125  001F06  0012               	return		;funcret
  2126  001F08                     __end_of_setDiaMesAnio:
  2127                           	opt stack 0
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           intcon2	equ	0xFF1
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1l	equ	0xFE1
  2137                           status	equ	0xFD8
  2138                           
  2139 ;; *************** function _sprintf *****************
  2140 ;; Defined at:
  2141 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  2142 ;; Parameters:    Size  Location     Type
  2143 ;;  sp              2   12[COMRAM] PTR unsigned char 
  2144 ;;		 -> buffer2(20), 
  2145 ;;  f               2   14[COMRAM] PTR const unsigned char 
  2146 ;;		 -> STR_14(5), STR_11(15), STR_10(15), STR_2(15), 
  2147 ;;		 -> STR_1(15), 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  tmpval          4    0        struct .
  2150 ;;  cp              3    0        PTR const unsigned char 
  2151 ;;  width           2   32[COMRAM] int 
  2152 ;;  val             2   29[COMRAM] unsigned int 
  2153 ;;  ap              2   26[COMRAM] PTR void [1]
  2154 ;;		 -> ?_sprintf(2), 
  2155 ;;  len             2    0        unsigned int 
  2156 ;;  c               1   34[COMRAM] char 
  2157 ;;  prec            1   31[COMRAM] char 
  2158 ;;  flag            1   28[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2   12[COMRAM] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2168 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;Total ram usage:       23 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    1
  2175 ;; This function calls:
  2176 ;;		___lwdiv
  2177 ;;		___lwmod
  2178 ;;		___wmul
  2179 ;;		_isdigit
  2180 ;; This function is called by:
  2181 ;;		_setDiaMesAnio
  2182 ;;		_setHoraMinutoSegundo
  2183 ;;		_main
  2184 ;;		_caratula
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text5
  2189  001314                     __ptext5:
  2190                           	opt stack 0
  2191  001314                     _sprintf:
  2192                           	opt stack 29
  2193                           
  2194                           ;doprnt.c: 494: va_list ap;
  2195                           ;doprnt.c: 499: signed char c;
  2196                           ;doprnt.c: 501: int width;
  2197                           ;doprnt.c: 506: signed char prec;
  2198                           ;doprnt.c: 508: unsigned char flag;
  2199                           ;doprnt.c: 523: union {
  2200                           ;doprnt.c: 524: unsigned long vd;
  2201                           ;doprnt.c: 525: double integ;
  2202                           ;doprnt.c: 526: } tmpval;
  2203                           ;doprnt.c: 528: unsigned int val;
  2204                           ;doprnt.c: 529: unsigned len;
  2205                           ;doprnt.c: 530: const char * cp;
  2206                           ;doprnt.c: 533: *ap = __va_start();
  2207                           
  2208                           ;incstack = 0
  2209  001314  0E11               	movlw	low (?_sprintf+4)
  2210  001316  6E1B               	movwf	sprintf@ap,c
  2211  001318  0E00               	movlw	high (?_sprintf+4)
  2212  00131A  6E1C               	movwf	sprintf@ap+1,c
  2213                           
  2214                           ;doprnt.c: 536: while(c = *f++) {
  2215  00131C  D100               	goto	u1540
  2216  00131E                     
  2217                           ;doprnt.c: 538: if(c != '%')
  2218  00131E  0E25               	movlw	37
  2219  001320  1823               	xorwf	sprintf@c,w,c
  2220  001322  B4D8               	btfsc	status,2,c
  2221  001324  D009               	goto	l300
  2222                           
  2223                           ;doprnt.c: 540: {
  2224                           ;doprnt.c: 541: ((*sp++ = (c)));
  2225  001326  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2226  00132A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2227  00132E  C023  FFDF         	movff	sprintf@c,indf2
  2228  001332  4A0D               	infsnz	sprintf@sp,f,c
  2229  001334  2A0E               	incf	sprintf@sp+1,f,c
  2230                           
  2231                           ;doprnt.c: 542: continue;
  2232  001336  D0F3               	goto	u1540
  2233  001338                     l300:
  2234                           
  2235                           ;doprnt.c: 543: }
  2236                           ;doprnt.c: 546: width = 0;
  2237  001338  0E00               	movlw	0
  2238  00133A  6E22               	movwf	sprintf@width+1,c
  2239  00133C  0E00               	movlw	0
  2240  00133E  6E21               	movwf	sprintf@width,c
  2241                           
  2242                           ;doprnt.c: 548: flag = 0;
  2243  001340  0E00               	movlw	0
  2244  001342  6E1D               	movwf	sprintf@flag,c
  2245                           
  2246                           ;doprnt.c: 551: switch(*f) {
  2247                           
  2248                           ;doprnt.c: 550: for(;;) {
  2249  001344  D003               	goto	l302
  2250  001346                     
  2251                           ;doprnt.c: 580: flag |= 0x04;
  2252  001346  841D               	bsf	sprintf@flag,2,c
  2253                           
  2254                           ;doprnt.c: 581: f++;
  2255  001348  4A0F               	infsnz	sprintf@f,f,c
  2256  00134A  2A10               	incf	sprintf@f+1,f,c
  2257  00134C                     l302:
  2258  00134C  C00F  FFF6         	movff	sprintf@f,tblptrl
  2259  001350  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2260  001354                     	if	0	;tblptru may be non-zero
  2261  001354                     	endif
  2262  001354                     	if	0	;tblptru may be non-zero
  2263  001354                     	endif
  2264  001354  0008               	tblrd		*
  2265  001356  50F5               	movf	tablat,w,c
  2266                           
  2267                           ; Switch size 1, requested type "space"
  2268                           ; Number of cases is 1, Range of values is 48 to 48
  2269                           ; switch strategies available:
  2270                           ; Name         Instructions Cycles
  2271                           ; simple_byte            4     3 (average)
  2272                           ;	Chosen strategy is simple_byte
  2273  001358  0A30               	xorlw	48	; case 48
  2274  00135A  B4D8               	btfsc	status,2,c
  2275  00135C  D7F4               	goto	l303
  2276                           
  2277                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2278                           
  2279                           ;doprnt.c: 586: }
  2280                           
  2281                           ;doprnt.c: 585: break;
  2282  00135E  C00F  FFF6         	movff	sprintf@f,tblptrl
  2283  001362  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2284  001366                     	if	0	;tblptru may be non-zero
  2285  001366                     	endif
  2286  001366                     	if	0	;tblptru may be non-zero
  2287  001366                     	endif
  2288  001366  0008               	tblrd		*
  2289  001368  50F5               	movf	tablat,w,c
  2290  00136A  EC02  F010         	call	_isdigit
  2291  00136E  A0D8               	btfss	status,0,c
  2292  001370  D036               	goto	l310
  2293                           
  2294                           ;doprnt.c: 598: width = 0;
  2295  001372  0E00               	movlw	0
  2296  001374  6E22               	movwf	sprintf@width+1,c
  2297  001376  0E00               	movlw	0
  2298  001378  6E21               	movwf	sprintf@width,c
  2299  00137A                     
  2300                           ;doprnt.c: 600: width *= 10;
  2301  00137A  C021  F001         	movff	sprintf@width,___wmul@multiplier
  2302  00137E  C022  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  2303  001382  0E00               	movlw	0
  2304  001384  6E04               	movwf	___wmul@multiplicand+1,c
  2305  001386  0E0A               	movlw	10
  2306  001388  6E03               	movwf	___wmul@multiplicand,c
  2307  00138A  ECDE  F00F         	call	___wmul	;wreg free
  2308  00138E  C001  F021         	movff	?___wmul,sprintf@width
  2309  001392  C002  F022         	movff	?___wmul+1,sprintf@width+1
  2310                           
  2311                           ;doprnt.c: 601: width += *f++ - '0';
  2312  001396  0ED0               	movlw	208
  2313  001398  6E17               	movwf	??_sprintf& (0+255),c
  2314  00139A  0EFF               	movlw	255
  2315  00139C  6E18               	movwf	(??_sprintf+1)& (0+255),c
  2316  00139E  C00F  FFF6         	movff	sprintf@f,tblptrl
  2317  0013A2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2318  0013A6                     	if	0	;tblptru may be non-zero
  2319  0013A6                     	endif
  2320  0013A6                     	if	0	;tblptru may be non-zero
  2321  0013A6                     	endif
  2322  0013A6  0008               	tblrd		*
  2323  0013A8  50F5               	movf	tablat,w,c
  2324  0013AA  6E19               	movwf	(??_sprintf+2)& (0+255),c
  2325  0013AC  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  2326  0013AE  5017               	movf	??_sprintf,w,c
  2327  0013B0  2619               	addwf	??_sprintf+2,f,c
  2328  0013B2  5018               	movf	??_sprintf+1,w,c
  2329  0013B4  221A               	addwfc	??_sprintf+3,f,c
  2330  0013B6  5019               	movf	??_sprintf+2,w,c
  2331  0013B8  2621               	addwf	sprintf@width,f,c
  2332  0013BA  501A               	movf	??_sprintf+3,w,c
  2333  0013BC  2222               	addwfc	sprintf@width+1,f,c
  2334  0013BE  4A0F               	infsnz	sprintf@f,f,c
  2335  0013C0  2A10               	incf	sprintf@f+1,f,c
  2336                           
  2337                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2338  0013C2  C00F  FFF6         	movff	sprintf@f,tblptrl
  2339  0013C6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2340  0013CA                     	if	0	;tblptru may be non-zero
  2341  0013CA                     	endif
  2342  0013CA                     	if	0	;tblptru may be non-zero
  2343  0013CA                     	endif
  2344  0013CA  0008               	tblrd		*
  2345  0013CC  50F5               	movf	tablat,w,c
  2346  0013CE  EC02  F010         	call	_isdigit
  2347  0013D2  A0D8               	btfss	status,0,c
  2348  0013D4  D004               	goto	l310
  2349  0013D6  D7D1               	goto	l308
  2350  0013D8                     
  2351                           ;doprnt.c: 818: flag |= 0xC0;
  2352  0013D8  0EC0               	movlw	192
  2353  0013DA  121D               	iorwf	sprintf@flag,f,c
  2354                           
  2355                           ;doprnt.c: 822: }
  2356                           
  2357                           ;doprnt.c: 819: break;
  2358  0013DC  D011               	goto	l315
  2359  0013DE                     l310:
  2360  0013DE  C00F  FFF6         	movff	sprintf@f,tblptrl
  2361  0013E2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2362  0013E6  4A0F               	infsnz	sprintf@f,f,c
  2363  0013E8  2A10               	incf	sprintf@f+1,f,c
  2364  0013EA                     	if	0	;tblptru may be non-zero
  2365  0013EA                     	endif
  2366  0013EA                     	if	0	;tblptru may be non-zero
  2367  0013EA                     	endif
  2368  0013EA  0008               	tblrd		*
  2369  0013EC  CFF5 F023          	movff	tablat,sprintf@c
  2370  0013F0  5023               	movf	sprintf@c,w,c
  2371                           
  2372                           ; Switch size 1, requested type "space"
  2373                           ; Number of cases is 2, Range of values is 0 to 117
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            7     4 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378  0013F2  0A00               	xorlw	0	; case 0
  2379  0013F4  B4D8               	btfsc	status,2,c
  2380  0013F6  D09F               	goto	u1550
  2381  0013F8  0A75               	xorlw	117	; case 117
  2382  0013FA  B4D8               	btfsc	status,2,c
  2383  0013FC  D7ED               	goto	l314
  2384  0013FE  D08F               	goto	u1540
  2385  001400                     l315:
  2386                           
  2387                           ;doprnt.c: 1273: {
  2388                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2389  001400  C01B  FFD9         	movff	sprintf@ap,fsr2l
  2390  001404  C01C  FFDA         	movff	sprintf@ap+1,fsr2h
  2391  001408  CFDE F01E          	movff	postinc2,sprintf@val
  2392  00140C  CFDD F01F          	movff	postdec2,sprintf@val+1
  2393  001410  0E02               	movlw	2
  2394  001412  261B               	addwf	sprintf@ap,f,c
  2395  001414  0E00               	movlw	0
  2396  001416  221C               	addwfc	sprintf@ap+1,f,c
  2397                           
  2398                           ;doprnt.c: 1287: }
  2399                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2400  001418  0E01               	movlw	1
  2401  00141A  6E23               	movwf	sprintf@c,c
  2402  00141C                     l2204:
  2403  00141C  0E05               	movlw	5
  2404  00141E  1823               	xorwf	sprintf@c,w,c
  2405  001420  B4D8               	btfsc	status,2,c
  2406  001422  D012               	goto	u1470
  2407                           
  2408                           ;doprnt.c: 1306: if(val < dpowers[c])
  2409  001424  5023               	movf	sprintf@c,w,c
  2410  001426  0D02               	mullw	2
  2411  001428  0E01               	movlw	low _dpowers
  2412  00142A  24F3               	addwf	prodl,w,c
  2413  00142C  6EF6               	movwf	tblptrl,c
  2414  00142E  0E0F               	movlw	high _dpowers
  2415  001430  20F4               	addwfc	prodh,w,c
  2416  001432  6EF7               	movwf	tblptrh,c
  2417  001434                     	if	0	;There are less than 3 active tblptr bytes
  2418  001434                     	endif
  2419  001434  0009               	tblrd		*+
  2420  001436  50F5               	movf	tablat,w,c
  2421  001438  5C1E               	subwf	sprintf@val,w,c
  2422  00143A  0009               	tblrd		*+
  2423  00143C  50F5               	movf	tablat,w,c
  2424  00143E  581F               	subwfb	sprintf@val+1,w,c
  2425  001440  A0D8               	btfss	status,0,c
  2426  001442  D002               	goto	u1470
  2427                           
  2428                           ;doprnt.c: 1307: break;
  2429  001444  2A23               	incf	sprintf@c,f,c
  2430  001446  D7EA               	goto	l2204
  2431  001448                     u1470:
  2432                           
  2433                           ;doprnt.c: 1381: if(width > c)
  2434  001448  0E80               	movlw	128
  2435  00144A  BE23               	btfsc	sprintf@c,7,c
  2436  00144C  0E7F               	movlw	127
  2437  00144E  6E17               	movwf	??_sprintf& (0+255),c
  2438  001450  5021               	movf	sprintf@width,w,c
  2439  001452  5C23               	subwf	sprintf@c,w,c
  2440  001454  5022               	movf	sprintf@width+1,w,c
  2441  001456  0A80               	xorlw	128
  2442  001458  5817               	subwfb	??_sprintf& (0+255),w,c
  2443  00145A  B0D8               	btfsc	status,0,c
  2444  00145C  D007               	goto	l319
  2445                           
  2446                           ;doprnt.c: 1382: width -= c;
  2447  00145E  5023               	movf	sprintf@c,w,c
  2448  001460  5E21               	subwf	sprintf@width,f,c
  2449  001462  0E00               	movlw	0
  2450  001464  BE23               	btfsc	sprintf@c,7,c
  2451  001466  0EFF               	movlw	255
  2452  001468  5A22               	subwfb	sprintf@width+1,f,c
  2453  00146A  D004               	goto	l320
  2454  00146C                     l319:
  2455                           
  2456                           ;doprnt.c: 1383: else
  2457                           ;doprnt.c: 1384: width = 0;
  2458  00146C  0E00               	movlw	0
  2459  00146E  6E22               	movwf	sprintf@width+1,c
  2460  001470  0E00               	movlw	0
  2461  001472  6E21               	movwf	sprintf@width,c
  2462  001474                     l320:
  2463                           
  2464                           ;doprnt.c: 1387: if(flag & 0x04) {
  2465  001474  A41D               	btfss	sprintf@flag,2,c
  2466  001476  D010               	goto	l321
  2467  001478                     
  2468                           ;doprnt.c: 1415: if(width)
  2469  001478  5021               	movf	sprintf@width,w,c
  2470  00147A  1022               	iorwf	sprintf@width+1,w,c
  2471  00147C  B4D8               	btfsc	status,2,c
  2472  00147E  D01F               	goto	u1530
  2473                           
  2474                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  2475                           
  2476                           ;doprnt.c: 1416: do
  2477  001480  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2478  001484  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2479  001488  0E30               	movlw	48
  2480  00148A  6EDF               	movwf	indf2,c
  2481  00148C  4A0D               	infsnz	sprintf@sp,f,c
  2482  00148E  2A0E               	incf	sprintf@sp+1,f,c
  2483                           
  2484                           ;doprnt.c: 1418: while(--width);
  2485  001490  0621               	decf	sprintf@width,f,c
  2486  001492  A0D8               	btfss	status,0,c
  2487  001494  0622               	decf	sprintf@width+1,f,c
  2488  001496  D7F0               	goto	L2
  2489  001498                     l321:
  2490                           
  2491                           ;doprnt.c: 1422: {
  2492                           ;doprnt.c: 1424: if(width
  2493                           ;doprnt.c: 1428: )
  2494  001498  5021               	movf	sprintf@width,w,c
  2495  00149A  1022               	iorwf	sprintf@width+1,w,c
  2496  00149C  B4D8               	btfsc	status,2,c
  2497  00149E  D00F               	goto	u1530
  2498  0014A0                     u1520:
  2499                           
  2500                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  2501                           
  2502                           ;doprnt.c: 1429: do
  2503  0014A0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2504  0014A4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2505  0014A8  0E20               	movlw	32
  2506  0014AA  6EDF               	movwf	indf2,c
  2507  0014AC  4A0D               	infsnz	sprintf@sp,f,c
  2508  0014AE  2A0E               	incf	sprintf@sp+1,f,c
  2509                           
  2510                           ;doprnt.c: 1431: while(--width);
  2511  0014B0  0621               	decf	sprintf@width,f,c
  2512  0014B2  A0D8               	btfss	status,0,c
  2513  0014B4  0622               	decf	sprintf@width+1,f,c
  2514  0014B6  5021               	movf	sprintf@width,w,c
  2515  0014B8  1022               	iorwf	sprintf@width+1,w,c
  2516  0014BA  A4D8               	btfss	status,2,c
  2517  0014BC  D7F1               	goto	u1520
  2518  0014BE                     u1530:
  2519                           
  2520                           ;doprnt.c: 1469: }
  2521                           ;doprnt.c: 1472: prec = c;
  2522  0014BE  C023  F020         	movff	sprintf@c,sprintf@prec
  2523                           
  2524                           ;doprnt.c: 1474: while(prec--) {
  2525  0014C2  D029               	goto	l329
  2526  0014C4                     
  2527                           ;doprnt.c: 1478: {
  2528                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2529  0014C4  5020               	movf	sprintf@prec,w,c
  2530  0014C6  0D02               	mullw	2
  2531  0014C8  0E01               	movlw	low _dpowers
  2532  0014CA  24F3               	addwf	prodl,w,c
  2533  0014CC  6EF6               	movwf	tblptrl,c
  2534  0014CE  0E0F               	movlw	high _dpowers
  2535  0014D0  20F4               	addwfc	prodh,w,c
  2536  0014D2  6EF7               	movwf	tblptrh,c
  2537  0014D4                     	if	0	;There are less than 3 active tblptr bytes
  2538  0014D4                     	endif
  2539  0014D4  0009               	tblrd		*+
  2540  0014D6  CFF5 F003          	movff	tablat,___lwdiv@divisor
  2541  0014DA  000A               	tblrd		*-
  2542  0014DC  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  2543  0014E0  C01E  F001         	movff	sprintf@val,___lwdiv@dividend
  2544  0014E4  C01F  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  2545  0014E8  ECA7  F00E         	call	___lwdiv	;wreg free
  2546  0014EC  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2547  0014F0  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2548  0014F4  0E00               	movlw	0
  2549  0014F6  6E0B               	movwf	___lwmod@divisor+1,c
  2550  0014F8  0E0A               	movlw	10
  2551  0014FA  6E0A               	movwf	___lwmod@divisor,c
  2552  0014FC  EC84  F00F         	call	___lwmod	;wreg free
  2553  001500  5008               	movf	?___lwmod,w,c
  2554  001502  0F30               	addlw	48
  2555  001504  6E23               	movwf	sprintf@c,c
  2556                           
  2557                           ;doprnt.c: 1523: }
  2558                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2559  001506  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2560  00150A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2561  00150E  C023  FFDF         	movff	sprintf@c,indf2
  2562  001512  4A0D               	infsnz	sprintf@sp,f,c
  2563  001514  2A0E               	incf	sprintf@sp+1,f,c
  2564  001516                     l329:
  2565  001516  0620               	decf	sprintf@prec,f,c
  2566  001518  2820               	incf	sprintf@prec,w,c
  2567  00151A  A4D8               	btfss	status,2,c
  2568  00151C  D7D3               	goto	l330
  2569  00151E                     u1540:
  2570  00151E  C00F  FFF6         	movff	sprintf@f,tblptrl
  2571  001522  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2572  001526  4A0F               	infsnz	sprintf@f,f,c
  2573  001528  2A10               	incf	sprintf@f+1,f,c
  2574  00152A                     	if	0	;tblptru may be non-zero
  2575  00152A                     	endif
  2576  00152A                     	if	0	;tblptru may be non-zero
  2577  00152A                     	endif
  2578  00152A  0008               	tblrd		*
  2579  00152C  CFF5 F023          	movff	tablat,sprintf@c
  2580  001530  5023               	movf	sprintf@c,w,c
  2581  001532  A4D8               	btfss	status,2,c
  2582  001534  D6F4               	goto	l299
  2583  001536                     u1550:
  2584                           
  2585                           ;doprnt.c: 1538: *sp = 0;
  2586                           
  2587                           ;doprnt.c: 1525: }
  2588                           ;doprnt.c: 1533: }
  2589                           ;doprnt.c: 1535: alldone:
  2590  001536  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2591  00153A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2592  00153E  0E00               	movlw	0
  2593  001540  6EDF               	movwf	indf2,c
  2594  001542  0012               	return	
  2595  001544                     __end_of_sprintf:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodh	equ	0xFF4
  2602                           prodl	equ	0xFF3
  2603                           intcon2	equ	0xFF1
  2604                           postinc0	equ	0xFEE
  2605                           wreg	equ	0xFE8
  2606                           postdec1	equ	0xFE5
  2607                           fsr1l	equ	0xFE1
  2608                           indf2	equ	0xFDF
  2609                           postinc2	equ	0xFDE
  2610                           postdec2	equ	0xFDD
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _isdigit *****************
  2616 ;; Defined at:
  2617 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  c               1    wreg     unsigned char 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  c               1    2[COMRAM] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;Total ram usage:        3 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_sprintf
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text6
  2645  002004                     __ptext6:
  2646                           	opt stack 0
  2647  002004                     _isdigit:
  2648                           	opt stack 29
  2649                           
  2650                           ;incstack = 0
  2651                           ;isdigit@c stored from wreg
  2652  002004  6E03               	movwf	isdigit@c,c
  2653  002006  0E00               	movlw	0
  2654  002008  6E02               	movwf	_isdigit$1745,c
  2655  00200A  0E3A               	movlw	58
  2656  00200C  6003               	cpfslt	isdigit@c,c
  2657  00200E  D005               	goto	l773
  2658  002010  0E2F               	movlw	47
  2659  002012  6403               	cpfsgt	isdigit@c,c
  2660  002014  D002               	goto	l773
  2661  002016  0E01               	movlw	1
  2662  002018  6E02               	movwf	_isdigit$1745,c
  2663  00201A                     l773:
  2664  00201A  C002  F001         	movff	_isdigit$1745,??_isdigit
  2665  00201E  3001               	rrcf	??_isdigit,w,c
  2666  002020  0012               	return	
  2667  002022                     __end_of_isdigit:
  2668                           	opt stack 0
  2669                           tblptru	equ	0xFF8
  2670                           tblptrh	equ	0xFF7
  2671                           tblptrl	equ	0xFF6
  2672                           tablat	equ	0xFF5
  2673                           prodh	equ	0xFF4
  2674                           prodl	equ	0xFF3
  2675                           intcon2	equ	0xFF1
  2676                           postinc0	equ	0xFEE
  2677                           wreg	equ	0xFE8
  2678                           postdec1	equ	0xFE5
  2679                           fsr1l	equ	0xFE1
  2680                           indf2	equ	0xFDF
  2681                           postinc2	equ	0xFDE
  2682                           postdec2	equ	0xFDD
  2683                           fsr2h	equ	0xFDA
  2684                           fsr2l	equ	0xFD9
  2685                           status	equ	0xFD8
  2686                           
  2687 ;; *************** function ___wmul *****************
  2688 ;; Defined at:
  2689 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  multiplier      2    0[COMRAM] unsigned int 
  2692 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  product         2    4[COMRAM] unsigned int 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  2    0[COMRAM] unsigned int 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, prodl, prodh
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2707 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2708 ;;Total ram usage:        6 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_sprintf
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text7
  2718  001FBC                     __ptext7:
  2719                           	opt stack 0
  2720  001FBC                     ___wmul:
  2721                           	opt stack 29
  2722                           
  2723                           ;incstack = 0
  2724  001FBC  5001               	movf	___wmul@multiplier,w,c
  2725  001FBE  0203               	mulwf	___wmul@multiplicand,c
  2726  001FC0  CFF3 F005          	movff	prodl,___wmul@product
  2727  001FC4  CFF4 F006          	movff	prodh,___wmul@product+1
  2728  001FC8  5001               	movf	___wmul@multiplier,w,c
  2729  001FCA  0204               	mulwf	___wmul@multiplicand+1,c
  2730  001FCC  50F3               	movf	prodl,w,c
  2731  001FCE  2606               	addwf	___wmul@product+1,f,c
  2732  001FD0  5002               	movf	___wmul@multiplier+1,w,c
  2733  001FD2  0203               	mulwf	___wmul@multiplicand,c
  2734  001FD4  50F3               	movf	prodl,w,c
  2735  001FD6  2606               	addwf	___wmul@product+1,f,c
  2736  001FD8  C005  F001         	movff	___wmul@product,?___wmul
  2737  001FDC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2738  001FE0  0012               	return	
  2739  001FE2                     __end_of___wmul:
  2740                           	opt stack 0
  2741                           tblptru	equ	0xFF8
  2742                           tblptrh	equ	0xFF7
  2743                           tblptrl	equ	0xFF6
  2744                           tablat	equ	0xFF5
  2745                           prodh	equ	0xFF4
  2746                           prodl	equ	0xFF3
  2747                           intcon2	equ	0xFF1
  2748                           postinc0	equ	0xFEE
  2749                           wreg	equ	0xFE8
  2750                           postdec1	equ	0xFE5
  2751                           fsr1l	equ	0xFE1
  2752                           indf2	equ	0xFDF
  2753                           postinc2	equ	0xFDE
  2754                           postdec2	equ	0xFDD
  2755                           fsr2h	equ	0xFDA
  2756                           fsr2l	equ	0xFD9
  2757                           status	equ	0xFD8
  2758                           
  2759 ;; *************** function ___lwmod *****************
  2760 ;; Defined at:
  2761 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  dividend        2    7[COMRAM] unsigned int 
  2764 ;;  divisor         2    9[COMRAM] unsigned int 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  counter         1   11[COMRAM] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  2    7[COMRAM] unsigned int 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2779 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2780 ;;Total ram usage:        5 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_sprintf
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text8
  2790  001F08                     __ptext8:
  2791                           	opt stack 0
  2792  001F08                     ___lwmod:
  2793                           	opt stack 29
  2794                           
  2795                           ;incstack = 0
  2796  001F08  500A               	movf	___lwmod@divisor,w,c
  2797  001F0A  100B               	iorwf	___lwmod@divisor+1,w,c
  2798  001F0C  B4D8               	btfsc	status,2,c
  2799  001F0E  D018               	goto	l867
  2800  001F10  0E01               	movlw	1
  2801  001F12  6E0C               	movwf	___lwmod@counter,c
  2802  001F14  D004               	goto	l862
  2803  001F16  90D8               	bcf	status,0,c
  2804  001F18  360A               	rlcf	___lwmod@divisor,f,c
  2805  001F1A  360B               	rlcf	___lwmod@divisor+1,f,c
  2806  001F1C  2A0C               	incf	___lwmod@counter,f,c
  2807  001F1E                     l862:
  2808  001F1E  AE0B               	btfss	___lwmod@divisor+1,7,c
  2809  001F20  D7FA               	goto	l863
  2810  001F22                     u1400:
  2811  001F22  500A               	movf	___lwmod@divisor,w,c
  2812  001F24  5C08               	subwf	___lwmod@dividend,w,c
  2813  001F26  500B               	movf	___lwmod@divisor+1,w,c
  2814  001F28  5809               	subwfb	___lwmod@dividend+1,w,c
  2815  001F2A  A0D8               	btfss	status,0,c
  2816  001F2C  D004               	goto	l866
  2817  001F2E  500A               	movf	___lwmod@divisor,w,c
  2818  001F30  5E08               	subwf	___lwmod@dividend,f,c
  2819  001F32  500B               	movf	___lwmod@divisor+1,w,c
  2820  001F34  5A09               	subwfb	___lwmod@dividend+1,f,c
  2821  001F36                     l866:
  2822  001F36  90D8               	bcf	status,0,c
  2823  001F38  320B               	rrcf	___lwmod@divisor+1,f,c
  2824  001F3A  320A               	rrcf	___lwmod@divisor,f,c
  2825  001F3C  2E0C               	decfsz	___lwmod@counter,f,c
  2826  001F3E  D7F1               	goto	u1400
  2827  001F40                     l867:
  2828  001F40  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2829  001F44  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2830  001F48  0012               	return		;funcret
  2831  001F4A                     __end_of___lwmod:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           prodh	equ	0xFF4
  2838                           prodl	equ	0xFF3
  2839                           intcon2	equ	0xFF1
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           postdec1	equ	0xFE5
  2843                           fsr1l	equ	0xFE1
  2844                           indf2	equ	0xFDF
  2845                           postinc2	equ	0xFDE
  2846                           postdec2	equ	0xFDD
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function ___lwdiv *****************
  2852 ;; Defined at:
  2853 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  dividend        2    0[COMRAM] unsigned int 
  2856 ;;  divisor         2    2[COMRAM] unsigned int 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;  quotient        2    4[COMRAM] unsigned int 
  2859 ;;  counter         1    6[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    0[COMRAM] unsigned int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2872 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2873 ;;Total ram usage:        7 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_sprintf
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text9
  2883  001D4E                     __ptext9:
  2884                           	opt stack 0
  2885  001D4E                     ___lwdiv:
  2886                           	opt stack 29
  2887                           
  2888                           ;incstack = 0
  2889  001D4E  0E00               	movlw	0
  2890  001D50  6E06               	movwf	___lwdiv@quotient+1,c
  2891  001D52  0E00               	movlw	0
  2892  001D54  6E05               	movwf	___lwdiv@quotient,c
  2893  001D56  5003               	movf	___lwdiv@divisor,w,c
  2894  001D58  1004               	iorwf	___lwdiv@divisor+1,w,c
  2895  001D5A  B4D8               	btfsc	status,2,c
  2896  001D5C  D01C               	goto	l857
  2897  001D5E  0E01               	movlw	1
  2898  001D60  6E07               	movwf	___lwdiv@counter,c
  2899  001D62  D004               	goto	l852
  2900  001D64  90D8               	bcf	status,0,c
  2901  001D66  3603               	rlcf	___lwdiv@divisor,f,c
  2902  001D68  3604               	rlcf	___lwdiv@divisor+1,f,c
  2903  001D6A  2A07               	incf	___lwdiv@counter,f,c
  2904  001D6C                     l852:
  2905  001D6C  AE04               	btfss	___lwdiv@divisor+1,7,c
  2906  001D6E  D7FA               	goto	l853
  2907  001D70                     u1370:
  2908  001D70  90D8               	bcf	status,0,c
  2909  001D72  3605               	rlcf	___lwdiv@quotient,f,c
  2910  001D74  3606               	rlcf	___lwdiv@quotient+1,f,c
  2911  001D76  5003               	movf	___lwdiv@divisor,w,c
  2912  001D78  5C01               	subwf	___lwdiv@dividend,w,c
  2913  001D7A  5004               	movf	___lwdiv@divisor+1,w,c
  2914  001D7C  5802               	subwfb	___lwdiv@dividend+1,w,c
  2915  001D7E  A0D8               	btfss	status,0,c
  2916  001D80  D005               	goto	l856
  2917  001D82  5003               	movf	___lwdiv@divisor,w,c
  2918  001D84  5E01               	subwf	___lwdiv@dividend,f,c
  2919  001D86  5004               	movf	___lwdiv@divisor+1,w,c
  2920  001D88  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2921  001D8A  8005               	bsf	___lwdiv@quotient,0,c
  2922  001D8C                     l856:
  2923  001D8C  90D8               	bcf	status,0,c
  2924  001D8E  3204               	rrcf	___lwdiv@divisor+1,f,c
  2925  001D90  3203               	rrcf	___lwdiv@divisor,f,c
  2926  001D92  2E07               	decfsz	___lwdiv@counter,f,c
  2927  001D94  D7ED               	goto	u1370
  2928  001D96                     l857:
  2929  001D96  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2930  001D9A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2931  001D9E  0012               	return		;funcret
  2932  001DA0                     __end_of___lwdiv:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon2	equ	0xFF1
  2941                           postinc0	equ	0xFEE
  2942                           wreg	equ	0xFE8
  2943                           postdec1	equ	0xFE5
  2944                           fsr1l	equ	0xFE1
  2945                           indf2	equ	0xFDF
  2946                           postinc2	equ	0xFDE
  2947                           postdec2	equ	0xFDD
  2948                           fsr2h	equ	0xFDA
  2949                           fsr2l	equ	0xFD9
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _lcd_putrs *****************
  2953 ;; Defined at:
  2954 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  2957 ;;		 -> STR_13(2), STR_12(2), STR_9(8), STR_8(8), 
  2958 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  2959 ;;		 -> STR_3(8), buffer2(20), 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;Total ram usage:        2 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    4
  2978 ;; This function calls:
  2979 ;;		_lcd_putc
  2980 ;; This function is called by:
  2981 ;;		_setDiaSemana
  2982 ;;		_setDiaMesAnio
  2983 ;;		_setHoraMinutoSegundo
  2984 ;;		_main
  2985 ;;		_caratula
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           	psect	text10
  2990  001DA0                     __ptext10:
  2991                           	opt stack 0
  2992  001DA0                     _lcd_putrs:
  2993                           	opt stack 24
  2994                           
  2995                           ;unmc_lcd_216.c: 223: while(*ptr){
  2996                           
  2997                           ;incstack = 0
  2998  001DA0  D014               	goto	l284
  2999  001DA2                     
  3000                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  3001  001DA2  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  3002  001DA6  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  3003  001DAA  6AF8               	clrf	tblptru,c
  3004  001DAC  0E0E               	movlw	(high __ramtop+-1)
  3005  001DAE  64F7               	cpfsgt	tblptrh,c
  3006  001DB0  D003               	bra	u1567
  3007  001DB2  0008               	tblrd		*
  3008  001DB4  50F5               	movf	tablat,w,c
  3009  001DB6  D005               	bra	u1560
  3010  001DB8                     u1567:
  3011  001DB8  CFF6 FFE9          	movff	tblptrl,fsr0l
  3012  001DBC  CFF7 FFEA          	movff	tblptrh,fsr0h
  3013  001DC0  50EF               	movf	indf0,w,c
  3014  001DC2                     u1560:
  3015  001DC2  ECF9  F00E         	call	_lcd_putc
  3016  001DC6  4A09               	infsnz	lcd_putrs@ptr,f,c
  3017  001DC8  2A0A               	incf	lcd_putrs@ptr+1,f,c
  3018  001DCA                     l284:
  3019  001DCA  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  3020  001DCE  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  3021  001DD2  6AF8               	clrf	tblptru,c
  3022  001DD4  0E0E               	movlw	(high __ramtop+-1)
  3023  001DD6  64F7               	cpfsgt	tblptrh,c
  3024  001DD8  D003               	bra	u1577
  3025  001DDA  0008               	tblrd		*
  3026  001DDC  50F5               	movf	tablat,w,c
  3027  001DDE  D005               	bra	u1570
  3028  001DE0                     u1577:
  3029  001DE0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3030  001DE4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3031  001DE8  50EF               	movf	indf0,w,c
  3032  001DEA                     u1570:
  3033  001DEA  0900               	iorlw	0
  3034  001DEC  B4D8               	btfsc	status,2,c
  3035  001DEE  0012               	return	
  3036  001DF0  D7D8               	goto	l285
  3037  001DF2                     __end_of_lcd_putrs:
  3038                           	opt stack 0
  3039                           tblptru	equ	0xFF8
  3040                           tblptrh	equ	0xFF7
  3041                           tblptrl	equ	0xFF6
  3042                           tablat	equ	0xFF5
  3043                           prodh	equ	0xFF4
  3044                           prodl	equ	0xFF3
  3045                           intcon2	equ	0xFF1
  3046                           indf0	equ	0xFEF
  3047                           postinc0	equ	0xFEE
  3048                           fsr0h	equ	0xFEA
  3049                           fsr0l	equ	0xFE9
  3050                           wreg	equ	0xFE8
  3051                           postdec1	equ	0xFE5
  3052                           fsr1l	equ	0xFE1
  3053                           indf2	equ	0xFDF
  3054                           postinc2	equ	0xFDE
  3055                           postdec2	equ	0xFDD
  3056                           fsr2h	equ	0xFDA
  3057                           fsr2l	equ	0xFD9
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _lcd_putc *****************
  3061 ;; Defined at:
  3062 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  c               1    wreg     unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  c               1    7[COMRAM] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		_lcd_gotoxy
  3085 ;;		_lcd_send_byte
  3086 ;; This function is called by:
  3087 ;;		_lcd_putrs
  3088 ;;		_lcd_puts
  3089 ;; This function uses a non-reentrant model
  3090 ;;
  3091                           
  3092                           	psect	text11
  3093  001DF2                     __ptext11:
  3094                           	opt stack 0
  3095  001DF2                     _lcd_putc:
  3096                           	opt stack 24
  3097                           
  3098                           ;incstack = 0
  3099                           ;lcd_putc@c stored from wreg
  3100  001DF2  6E08               	movwf	lcd_putc@c,c
  3101                           
  3102                           ;unmc_lcd_216.c: 173: switch(c){
  3103  001DF4  D018               	goto	l263
  3104  001DF6                     
  3105                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  3106  001DF6  0E01               	movlw	1
  3107  001DF8  6E03               	movwf	lcd_send_byte@n,c
  3108  001DFA  0E00               	movlw	0
  3109  001DFC  ECC5  F00F         	call	_lcd_send_byte
  3110                           
  3111                           ;unmc_lcd_216.c: 176: break;
  3112  001E00  0012               	return	
  3113  001E02                     
  3114                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  3115  001E02  0E02               	movlw	2
  3116  001E04  6E05               	movwf	lcd_gotoxy@y,c
  3117  001E06  0E01               	movlw	1
  3118  001E08  ECF1  F00F         	call	_lcd_gotoxy
  3119                           
  3120                           ;unmc_lcd_216.c: 179: break;
  3121  001E0C  0012               	return	
  3122  001E0E                     
  3123                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  3124  001E0E  0E10               	movlw	16
  3125  001E10  6E03               	movwf	lcd_send_byte@n,c
  3126  001E12  0E00               	movlw	0
  3127  001E14  ECC5  F00F         	call	_lcd_send_byte
  3128                           
  3129                           ;unmc_lcd_216.c: 182: break;
  3130  001E18  0012               	return	
  3131  001E1A                     
  3132                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  3133  001E1A  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  3134  001E1E  0E01               	movlw	1
  3135  001E20  ECC5  F00F         	call	_lcd_send_byte
  3136                           
  3137                           ;unmc_lcd_216.c: 186: }
  3138                           
  3139                           ;unmc_lcd_216.c: 185: break;
  3140  001E24  0012               	return	
  3141  001E26                     l263:
  3142  001E26  5008               	movf	lcd_putc@c,w,c
  3143                           
  3144                           ; Switch size 1, requested type "space"
  3145                           ; Number of cases is 3, Range of values is 8 to 12
  3146                           ; switch strategies available:
  3147                           ; Name         Instructions Cycles
  3148                           ; simple_byte           10     6 (average)
  3149                           ;	Chosen strategy is simple_byte
  3150  001E28  0A08               	xorlw	8	; case 8
  3151  001E2A  B4D8               	btfsc	status,2,c
  3152  001E2C  D7F0               	goto	l267
  3153  001E2E  0A02               	xorlw	2	; case 10
  3154  001E30  B4D8               	btfsc	status,2,c
  3155  001E32  D7E7               	goto	l266
  3156  001E34  0A06               	xorlw	6	; case 12
  3157  001E36  B4D8               	btfsc	status,2,c
  3158  001E38  D7DE               	goto	l264
  3159  001E3A  D7EF               	goto	l268
  3160  001E3C                     __end_of_lcd_putc:
  3161                           	opt stack 0
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           prodh	equ	0xFF4
  3167                           prodl	equ	0xFF3
  3168                           intcon2	equ	0xFF1
  3169                           indf0	equ	0xFEF
  3170                           postinc0	equ	0xFEE
  3171                           fsr0h	equ	0xFEA
  3172                           fsr0l	equ	0xFE9
  3173                           wreg	equ	0xFE8
  3174                           postdec1	equ	0xFE5
  3175                           fsr1l	equ	0xFE1
  3176                           indf2	equ	0xFDF
  3177                           postinc2	equ	0xFDE
  3178                           postdec2	equ	0xFDD
  3179                           fsr2h	equ	0xFDA
  3180                           fsr2l	equ	0xFD9
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _lcd_gotoxy *****************
  3184 ;; Defined at:
  3185 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  x               1    wreg     unsigned char 
  3188 ;;  y               1    4[COMRAM] unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  x               1    5[COMRAM] unsigned char 
  3191 ;;  address         1    6[COMRAM] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3201 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    2
  3208 ;; This function calls:
  3209 ;;		_lcd_send_byte
  3210 ;; This function is called by:
  3211 ;;		_setDiaSemana
  3212 ;;		_setDiaMesAnio
  3213 ;;		_setHoraMinutoSegundo
  3214 ;;		_main
  3215 ;;		_lcd_putc
  3216 ;;		_caratula
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text12
  3221  001FE2                     __ptext12:
  3222                           	opt stack 0
  3223  001FE2                     _lcd_gotoxy:
  3224                           	opt stack 24
  3225                           
  3226                           ;incstack = 0
  3227                           ;lcd_gotoxy@x stored from wreg
  3228  001FE2  6E06               	movwf	lcd_gotoxy@x,c
  3229                           
  3230                           ;unmc_lcd_216.c: 159: int8 address;
  3231                           ;unmc_lcd_216.c: 161: if(y != 1)
  3232  001FE4  0405               	decf	lcd_gotoxy@y,w,c
  3233  001FE6  B4D8               	btfsc	status,2,c
  3234  001FE8  D002               	goto	l258
  3235                           
  3236                           ;unmc_lcd_216.c: 162: address = 0x40;
  3237  001FEA  0E40               	movlw	64
  3238  001FEC  D001               	goto	L1
  3239  001FEE                     l258:
  3240                           
  3241                           ;unmc_lcd_216.c: 163: else
  3242                           ;unmc_lcd_216.c: 164: address=0;
  3243  001FEE  0E00               	movlw	0
  3244  001FF0                     L1:
  3245  001FF0  6E07               	movwf	lcd_gotoxy@address,c
  3246                           
  3247                           ;unmc_lcd_216.c: 166: address += x-1;
  3248  001FF2  0406               	decf	lcd_gotoxy@x,w,c
  3249  001FF4  2607               	addwf	lcd_gotoxy@address,f,c
  3250                           
  3251                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  3252  001FF6  5007               	movf	lcd_gotoxy@address,w,c
  3253  001FF8  0980               	iorlw	128
  3254  001FFA  6E03               	movwf	lcd_send_byte@n,c
  3255  001FFC  0E00               	movlw	0
  3256  001FFE  ECC5  F00F         	call	_lcd_send_byte
  3257  002002  0012               	return		;funcret
  3258  002004                     __end_of_lcd_gotoxy:
  3259                           	opt stack 0
  3260                           tblptru	equ	0xFF8
  3261                           tblptrh	equ	0xFF7
  3262                           tblptrl	equ	0xFF6
  3263                           tablat	equ	0xFF5
  3264                           prodh	equ	0xFF4
  3265                           prodl	equ	0xFF3
  3266                           intcon2	equ	0xFF1
  3267                           indf0	equ	0xFEF
  3268                           postinc0	equ	0xFEE
  3269                           fsr0h	equ	0xFEA
  3270                           fsr0l	equ	0xFE9
  3271                           wreg	equ	0xFE8
  3272                           postdec1	equ	0xFE5
  3273                           fsr1l	equ	0xFE1
  3274                           indf2	equ	0xFDF
  3275                           postinc2	equ	0xFDE
  3276                           postdec2	equ	0xFDD
  3277                           fsr2h	equ	0xFDA
  3278                           fsr2l	equ	0xFD9
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _lcd_init *****************
  3282 ;; Defined at:
  3283 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  i               1    4[COMRAM] unsigned char 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:    2
  3304 ;; This function calls:
  3305 ;;		_Delay1KTCYx
  3306 ;;		_lcd_send_byte
  3307 ;;		_lcd_send_nibble
  3308 ;; This function is called by:
  3309 ;;		_setup
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text13
  3314  001BF4                     __ptext13:
  3315                           	opt stack 0
  3316  001BF4                     _lcd_init:
  3317                           	opt stack 27
  3318                           
  3319                           ;unmc_lcd_216.c: 120: int8 i;
  3320                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  3321                           
  3322                           ;incstack = 0
  3323  001BF4  9693               	bcf	3987,3,c	;volatile
  3324                           
  3325                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  3326  001BF6  9493               	bcf	3987,2,c	;volatile
  3327                           
  3328                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  3329  001BF8  968A               	bcf	3978,3,c	;volatile
  3330                           
  3331                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  3332  001BFA  948A               	bcf	3978,2,c	;volatile
  3333                           
  3334                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  3335  001BFC  9893               	bcf	3987,4,c	;volatile
  3336                           
  3337                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  3338  001BFE  9A93               	bcf	3987,5,c	;volatile
  3339                           
  3340                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  3341  001C00  9C93               	bcf	3987,6,c	;volatile
  3342                           
  3343                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  3344  001C02  9E93               	bcf	3987,7,c	;volatile
  3345                           
  3346                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  3347  001C04  0E0A               	movlw	10
  3348  001C06  EC1A  F010         	call	_Delay1KTCYx
  3349                           
  3350                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  3351  001C0A  0E0A               	movlw	10
  3352  001C0C  EC1A  F010         	call	_Delay1KTCYx
  3353                           
  3354                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  3355  001C10  0E0A               	movlw	10
  3356  001C12  EC1A  F010         	call	_Delay1KTCYx
  3357                           
  3358                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  3359  001C16  0E00               	movlw	0
  3360  001C18  6E05               	movwf	lcd_init@i,c
  3361  001C1A                     l2532:
  3362  001C1A  0E02               	movlw	2
  3363  001C1C  6405               	cpfsgt	lcd_init@i,c
  3364  001C1E  D001               	goto	l251
  3365  001C20  D008               	goto	u1930
  3366  001C22                     l251:
  3367                           
  3368                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  3369  001C22  0E03               	movlw	3
  3370  001C24  EC35  F00E         	call	_lcd_send_nibble
  3371                           
  3372                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  3373  001C28  0E0A               	movlw	10
  3374  001C2A  EC1A  F010         	call	_Delay1KTCYx
  3375  001C2E  2A05               	incf	lcd_init@i,f,c
  3376  001C30  D7F4               	goto	l2532
  3377  001C32                     u1930:
  3378                           
  3379                           ;unmc_lcd_216.c: 146: }
  3380                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  3381  001C32  0E02               	movlw	2
  3382  001C34  EC35  F00E         	call	_lcd_send_nibble
  3383                           
  3384                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  3385  001C38  0E00               	movlw	0
  3386  001C3A  6E05               	movwf	lcd_init@i,c
  3387  001C3C                     l2546:
  3388  001C3C  0E03               	movlw	3
  3389  001C3E  6405               	cpfsgt	lcd_init@i,c
  3390  001C40  D001               	goto	l253
  3391  001C42  0012               	return	
  3392  001C44                     l253:
  3393                           
  3394                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  3395  001C44  5005               	movf	lcd_init@i,w,c
  3396  001C46  0D01               	mullw	1
  3397  001C48  0E0B               	movlw	low _LCD_INIT_STRING
  3398  001C4A  24F3               	addwf	prodl,w,c
  3399  001C4C  6EF6               	movwf	tblptrl,c
  3400  001C4E  0E0F               	movlw	high _LCD_INIT_STRING
  3401  001C50  20F4               	addwfc	prodh,w,c
  3402  001C52  6EF7               	movwf	tblptrh,c
  3403  001C54                     	if	0	;There are less than 3 active tblptr bytes
  3404  001C54                     	endif
  3405  001C54  0008               	tblrd		*
  3406  001C56  CFF5 F003          	movff	tablat,lcd_send_byte@n
  3407  001C5A  0E00               	movlw	0
  3408  001C5C  ECC5  F00F         	call	_lcd_send_byte
  3409                           
  3410                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  3411  001C60  0E0A               	movlw	10
  3412  001C62  EC1A  F010         	call	_Delay1KTCYx
  3413  001C66  2A05               	incf	lcd_init@i,f,c
  3414  001C68  D7E9               	goto	l2546
  3415  001C6A                     __end_of_lcd_init:
  3416                           	opt stack 0
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           prodh	equ	0xFF4
  3422                           prodl	equ	0xFF3
  3423                           intcon2	equ	0xFF1
  3424                           indf0	equ	0xFEF
  3425                           postinc0	equ	0xFEE
  3426                           fsr0h	equ	0xFEA
  3427                           fsr0l	equ	0xFE9
  3428                           wreg	equ	0xFE8
  3429                           postdec1	equ	0xFE5
  3430                           fsr1l	equ	0xFE1
  3431                           indf2	equ	0xFDF
  3432                           postinc2	equ	0xFDE
  3433                           postdec2	equ	0xFDD
  3434                           fsr2h	equ	0xFDA
  3435                           fsr2l	equ	0xFD9
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function _Delay1KTCYx *****************
  3439 ;; Defined at:
  3440 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  unit            1    wreg     unsigned char 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  unit            1    0[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3458 ;;Total ram usage:        1 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_lcd_init
  3464 ;;		_DelayPORXLCD
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text14
  3469  002034                     __ptext14:
  3470                           	opt stack 0
  3471  002034                     _Delay1KTCYx:
  3472                           	opt stack 28
  3473                           
  3474                           ;incstack = 0
  3475                           ;Delay1KTCYx@unit stored from wreg
  3476  002034  6E01               	movwf	Delay1KTCYx@unit,c
  3477  002036                     l638:
  3478  002036  0EC8               	movlw	200
  3479  002038                     u2637:
  3480  002038  D000               	nop2	
  3481  00203A  2EE8               	decfsz	wreg,f,c
  3482  00203C  D7FD               	bra	u2637
  3483  00203E  2E01               	decfsz	Delay1KTCYx@unit,f,c
  3484  002040  D7FA               	goto	l638
  3485  002042  0012               	return	
  3486  002044                     __end_of_Delay1KTCYx:
  3487                           	opt stack 0
  3488                           tblptru	equ	0xFF8
  3489                           tblptrh	equ	0xFF7
  3490                           tblptrl	equ	0xFF6
  3491                           tablat	equ	0xFF5
  3492                           prodh	equ	0xFF4
  3493                           prodl	equ	0xFF3
  3494                           intcon2	equ	0xFF1
  3495                           indf0	equ	0xFEF
  3496                           postinc0	equ	0xFEE
  3497                           fsr0h	equ	0xFEA
  3498                           fsr0l	equ	0xFE9
  3499                           wreg	equ	0xFE8
  3500                           postdec1	equ	0xFE5
  3501                           fsr1l	equ	0xFE1
  3502                           indf2	equ	0xFDF
  3503                           postinc2	equ	0xFDE
  3504                           postdec2	equ	0xFDD
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8
  3508                           
  3509 ;; *************** function _lcd_comand *****************
  3510 ;; Defined at:
  3511 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  d               1    wreg     unsigned char 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  d               1    4[COMRAM] unsigned char 
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3529 ;;Total ram usage:        1 bytes
  3530 ;; Hardware stack levels used:    1
  3531 ;; Hardware stack levels required when called:    2
  3532 ;; This function calls:
  3533 ;;		_lcd_send_byte
  3534 ;; This function is called by:
  3535 ;;		_setup
  3536 ;;		_caratula
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text15
  3541  002054                     __ptext15:
  3542                           	opt stack 0
  3543  002054                     _lcd_comand:
  3544                           	opt stack 27
  3545                           
  3546                           ;incstack = 0
  3547                           ;lcd_comand@d stored from wreg
  3548  002054  6E05               	movwf	lcd_comand@d,c
  3549                           
  3550                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  3551  002056  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  3552  00205A  0E00               	movlw	0
  3553  00205C  ECC5  F00F         	call	_lcd_send_byte
  3554  002060  0012               	return		;funcret
  3555  002062                     __end_of_lcd_comand:
  3556                           	opt stack 0
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon2	equ	0xFF1
  3564                           indf0	equ	0xFEF
  3565                           postinc0	equ	0xFEE
  3566                           fsr0h	equ	0xFEA
  3567                           fsr0l	equ	0xFE9
  3568                           wreg	equ	0xFE8
  3569                           postdec1	equ	0xFE5
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           postdec2	equ	0xFDD
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function _lcd_send_byte *****************
  3579 ;; Defined at:
  3580 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  address         1    wreg     unsigned char 
  3583 ;;  n               1    2[COMRAM] unsigned char 
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  address         1    3[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      void 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3595 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3599 ;;Total ram usage:        2 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    1
  3602 ;; This function calls:
  3603 ;;		_Delay100TCYx
  3604 ;;		_lcd_send_nibble
  3605 ;; This function is called by:
  3606 ;;		_lcd_init
  3607 ;;		_lcd_gotoxy
  3608 ;;		_lcd_putc
  3609 ;;		_lcd_comand
  3610 ;;		_lcd_setcursor_vb
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text16
  3615  001F8A                     __ptext16:
  3616                           	opt stack 0
  3617  001F8A                     _lcd_send_byte:
  3618                           	opt stack 25
  3619                           
  3620                           ;incstack = 0
  3621                           ;lcd_send_byte@address stored from wreg
  3622  001F8A  6E04               	movwf	lcd_send_byte@address,c
  3623                           
  3624                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  3625  001F8C  968A               	bcf	3978,3,c	;volatile
  3626                           
  3627                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  3628  001F8E  0E02               	movlw	2
  3629  001F90  EC22  F010         	call	_Delay100TCYx
  3630                           
  3631                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  3632  001F94  9893               	bcf	3987,4,c	;volatile
  3633                           
  3634                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  3635  001F96  9A93               	bcf	3987,5,c	;volatile
  3636                           
  3637                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  3638  001F98  9C93               	bcf	3987,6,c	;volatile
  3639                           
  3640                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  3641  001F9A  9E93               	bcf	3987,7,c	;volatile
  3642                           
  3643                           ;unmc_lcd_216.c: 101: if(address)
  3644  001F9C  5004               	movf	lcd_send_byte@address,w,c
  3645  001F9E  B4D8               	btfsc	status,2,c
  3646  001FA0  D002               	goto	l246
  3647                           
  3648                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  3649  001FA2  868A               	bsf	3978,3,c	;volatile
  3650  001FA4  D001               	goto	l247
  3651  001FA6                     l246:
  3652                           
  3653                           ;unmc_lcd_216.c: 103: else
  3654                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  3655  001FA6  968A               	bcf	3978,3,c	;volatile
  3656  001FA8                     l247:
  3657                           
  3658                           ;unmc_lcd_216.c: 106: __nop();
  3659  001FA8  F000               	nop	
  3660                           
  3661                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3662  001FAA  3803               	swapf	lcd_send_byte@n,w,c
  3663  001FAC  0B0F               	andlw	15
  3664  001FAE  EC35  F00E         	call	_lcd_send_nibble
  3665                           
  3666                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3667  001FB2  5003               	movf	lcd_send_byte@n,w,c
  3668  001FB4  0B0F               	andlw	15
  3669  001FB6  EC35  F00E         	call	_lcd_send_nibble
  3670  001FBA  0012               	return		;funcret
  3671  001FBC                     __end_of_lcd_send_byte:
  3672                           	opt stack 0
  3673                           tblptru	equ	0xFF8
  3674                           tblptrh	equ	0xFF7
  3675                           tblptrl	equ	0xFF6
  3676                           tablat	equ	0xFF5
  3677                           prodh	equ	0xFF4
  3678                           prodl	equ	0xFF3
  3679                           intcon2	equ	0xFF1
  3680                           indf0	equ	0xFEF
  3681                           postinc0	equ	0xFEE
  3682                           fsr0h	equ	0xFEA
  3683                           fsr0l	equ	0xFE9
  3684                           wreg	equ	0xFE8
  3685                           postdec1	equ	0xFE5
  3686                           fsr1l	equ	0xFE1
  3687                           indf2	equ	0xFDF
  3688                           postinc2	equ	0xFDE
  3689                           postdec2	equ	0xFDD
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function _lcd_send_nibble *****************
  3695 ;; Defined at:
  3696 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  nibble          1    wreg     unsigned char 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  nibble          1    1[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3714 ;;Total ram usage:        2 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_lcd_send_byte
  3720 ;;		_lcd_init
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text17
  3725  001C6A                     __ptext17:
  3726                           	opt stack 0
  3727  001C6A                     _lcd_send_nibble:
  3728                           	opt stack 25
  3729                           
  3730                           ;incstack = 0
  3731                           ;lcd_send_nibble@nibble stored from wreg
  3732  001C6A  6E02               	movwf	lcd_send_nibble@nibble,c
  3733                           
  3734                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3735  001C6C  A002               	btfss	lcd_send_nibble@nibble,0,c
  3736  001C6E  D003               	goto	u1240
  3737  001C70  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3738  001C72  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3739  001C74  D001               	goto	u1258
  3740  001C76                     u1240:
  3741  001C76  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3742  001C78                     u1258:
  3743  001C78  3A01               	swapf	??_lcd_send_nibble,f,c
  3744  001C7A  508A               	movf	3978,w,c	;volatile
  3745  001C7C  1801               	xorwf	??_lcd_send_nibble,w,c
  3746  001C7E  0BEF               	andlw	-17
  3747  001C80  1801               	xorwf	??_lcd_send_nibble,w,c
  3748  001C82  6E8A               	movwf	3978,c	;volatile
  3749                           
  3750                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3751  001C84  A202               	btfss	lcd_send_nibble@nibble,1,c
  3752  001C86  D003               	goto	u1260
  3753  001C88  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3754  001C8A  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3755  001C8C  D001               	goto	u1278
  3756  001C8E                     u1260:
  3757  001C8E  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3758  001C90                     u1278:
  3759  001C90  3A01               	swapf	??_lcd_send_nibble,f,c
  3760  001C92  4601               	rlncf	??_lcd_send_nibble,f,c
  3761  001C94  508A               	movf	3978,w,c	;volatile
  3762  001C96  1801               	xorwf	??_lcd_send_nibble,w,c
  3763  001C98  0BDF               	andlw	-33
  3764  001C9A  1801               	xorwf	??_lcd_send_nibble,w,c
  3765  001C9C  6E8A               	movwf	3978,c	;volatile
  3766                           
  3767                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3768  001C9E  A402               	btfss	lcd_send_nibble@nibble,2,c
  3769  001CA0  D003               	goto	u1280
  3770  001CA2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3771  001CA4  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3772  001CA6  D001               	goto	u1298
  3773  001CA8                     u1280:
  3774  001CA8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3775  001CAA                     u1298:
  3776  001CAA  3A01               	swapf	??_lcd_send_nibble,f,c
  3777  001CAC  4601               	rlncf	??_lcd_send_nibble,f,c
  3778  001CAE  4601               	rlncf	??_lcd_send_nibble,f,c
  3779  001CB0  508A               	movf	3978,w,c	;volatile
  3780  001CB2  1801               	xorwf	??_lcd_send_nibble,w,c
  3781  001CB4  0BBF               	andlw	-65
  3782  001CB6  1801               	xorwf	??_lcd_send_nibble,w,c
  3783  001CB8  6E8A               	movwf	3978,c	;volatile
  3784                           
  3785                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3786  001CBA  A602               	btfss	lcd_send_nibble@nibble,3,c
  3787  001CBC  D003               	goto	u1300
  3788  001CBE  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3789  001CC0  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  3790  001CC2  D001               	goto	u1318
  3791  001CC4                     u1300:
  3792  001CC4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  3793  001CC6                     u1318:
  3794  001CC6  3201               	rrcf	??_lcd_send_nibble,f,c
  3795  001CC8  3201               	rrcf	??_lcd_send_nibble,f,c
  3796  001CCA  508A               	movf	3978,w,c	;volatile
  3797  001CCC  1801               	xorwf	??_lcd_send_nibble,w,c
  3798  001CCE  0B7F               	andlw	-129
  3799  001CD0  1801               	xorwf	??_lcd_send_nibble,w,c
  3800  001CD2  6E8A               	movwf	3978,c	;volatile
  3801                           
  3802                           ;unmc_lcd_216.c: 32: __nop();
  3803  001CD4  F000               	nop	
  3804                           
  3805                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3806  001CD6  848A               	bsf	3978,2,c	;volatile
  3807                           
  3808                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3809  001CD8  F000               	nop	
  3810  001CDA  F000               	nop	
  3811                           
  3812                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3813  001CDC  948A               	bcf	3978,2,c	;volatile
  3814  001CDE  0012               	return		;funcret
  3815  001CE0                     __end_of_lcd_send_nibble:
  3816                           	opt stack 0
  3817                           tblptru	equ	0xFF8
  3818                           tblptrh	equ	0xFF7
  3819                           tblptrl	equ	0xFF6
  3820                           tablat	equ	0xFF5
  3821                           prodh	equ	0xFF4
  3822                           prodl	equ	0xFF3
  3823                           intcon2	equ	0xFF1
  3824                           indf0	equ	0xFEF
  3825                           postinc0	equ	0xFEE
  3826                           fsr0h	equ	0xFEA
  3827                           fsr0l	equ	0xFE9
  3828                           wreg	equ	0xFE8
  3829                           postdec1	equ	0xFE5
  3830                           fsr1l	equ	0xFE1
  3831                           indf2	equ	0xFDF
  3832                           postinc2	equ	0xFDE
  3833                           postdec2	equ	0xFDD
  3834                           fsr2h	equ	0xFDA
  3835                           fsr2l	equ	0xFD9
  3836                           status	equ	0xFD8
  3837                           
  3838 ;; *************** function _Delay100TCYx *****************
  3839 ;; Defined at:
  3840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  unit            1    wreg     unsigned char 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  unit            1    0[COMRAM] unsigned char 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		wreg
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3858 ;;Total ram usage:        1 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_lcd_send_byte
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text18
  3868  002044                     __ptext18:
  3869                           	opt stack 0
  3870  002044                     _Delay100TCYx:
  3871                           	opt stack 25
  3872                           
  3873                           ;incstack = 0
  3874                           ;Delay100TCYx@unit stored from wreg
  3875  002044  6E01               	movwf	Delay100TCYx@unit,c
  3876  002046                     l624:
  3877  002046  0E21               	movlw	33
  3878  002048                     u2647:
  3879  002048  2EE8               	decfsz	wreg,f,c
  3880  00204A  D7FE               	bra	u2647
  3881  00204C  F000               	nop	
  3882  00204E  2E01               	decfsz	Delay100TCYx@unit,f,c
  3883  002050  D7FA               	goto	l624
  3884  002052  0012               	return	
  3885  002054                     __end_of_Delay100TCYx:
  3886                           	opt stack 0
  3887                           tblptru	equ	0xFF8
  3888                           tblptrh	equ	0xFF7
  3889                           tblptrl	equ	0xFF6
  3890                           tablat	equ	0xFF5
  3891                           prodh	equ	0xFF4
  3892                           prodl	equ	0xFF3
  3893                           intcon2	equ	0xFF1
  3894                           indf0	equ	0xFEF
  3895                           postinc0	equ	0xFEE
  3896                           fsr0h	equ	0xFEA
  3897                           fsr0l	equ	0xFE9
  3898                           wreg	equ	0xFE8
  3899                           postdec1	equ	0xFE5
  3900                           fsr1l	equ	0xFE1
  3901                           indf2	equ	0xFDF
  3902                           postinc2	equ	0xFDE
  3903                           postdec2	equ	0xFDD
  3904                           fsr2h	equ	0xFDA
  3905                           fsr2l	equ	0xFD9
  3906                           status	equ	0xFD8
  3907                           
  3908 ;; *************** function _Write_RTC *****************
  3909 ;; Defined at:
  3910 ;;		line 74 in file "../../headers\unmc_rtcc_01.h"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    2
  3931 ;; This function calls:
  3932 ;;		_RtccWrOn
  3933 ;;		_RtccWriteDate
  3934 ;;		_RtccWriteTime
  3935 ;;		___awdiv
  3936 ;; This function is called by:
  3937 ;;		_main
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text19
  3942  001690                     __ptext19:
  3943                           	opt stack 0
  3944  001690                     _Write_RTC:
  3945                           	opt stack 28
  3946                           
  3947                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  3948                           
  3949                           ;incstack = 0
  3950  001690  EC11  F010         	call	_RtccWrOn	;wreg free
  3951                           
  3952                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  3953  001694  80A3               	bsf	4003,0,c	;volatile
  3954                           
  3955                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  3956  001696  C02D  F001         	movff	_segundo,___awdiv@dividend
  3957  00169A  C02E  F002         	movff	_segundo+1,___awdiv@dividend+1
  3958  00169E  0E00               	movlw	0
  3959  0016A0  6E04               	movwf	___awdiv@divisor+1,c
  3960  0016A2  0E0A               	movlw	10
  3961  0016A4  6E03               	movwf	___awdiv@divisor,c
  3962  0016A6  ECB8  F00D         	call	___awdiv	;wreg free
  3963  0016AA  5001               	movf	?___awdiv,w,c
  3964  0016AC  6E46               	movwf	_segundo_d,c
  3965                           
  3966                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  3967  0016AE  5046               	movf	_segundo_d,w,c
  3968  0016B0  0D0A               	mullw	10
  3969  0016B2  50F3               	movf	prodl,w,c
  3970  0016B4  0800               	sublw	0
  3971  0016B6  242D               	addwf	_segundo,w,c
  3972  0016B8  6E47               	movwf	_segundo_u,c
  3973                           
  3974                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  3975  0016BA  5046               	movf	_segundo_d,w,c
  3976  0016BC  0D10               	mullw	16
  3977  0016BE  50F3               	movf	prodl,w,c
  3978  0016C0  2447               	addwf	_segundo_u,w,c
  3979  0016C2  6E4D               	movwf	_RtccTime+1,c
  3980                           
  3981                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  3982  0016C4  C050  F001         	movff	_minuto,___awdiv@dividend
  3983  0016C8  C051  F002         	movff	_minuto+1,___awdiv@dividend+1
  3984  0016CC  0E00               	movlw	0
  3985  0016CE  6E04               	movwf	___awdiv@divisor+1,c
  3986  0016D0  0E0A               	movlw	10
  3987  0016D2  6E03               	movwf	___awdiv@divisor,c
  3988  0016D4  ECB8  F00D         	call	___awdiv	;wreg free
  3989  0016D8  5001               	movf	?___awdiv,w,c
  3990  0016DA  6E44               	movwf	_minuto_d,c
  3991                           
  3992                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  3993  0016DC  5044               	movf	_minuto_d,w,c
  3994  0016DE  0D0A               	mullw	10
  3995  0016E0  50F3               	movf	prodl,w,c
  3996  0016E2  0800               	sublw	0
  3997  0016E4  2450               	addwf	_minuto,w,c
  3998  0016E6  6E45               	movwf	_minuto_u,c
  3999                           
  4000                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  4001  0016E8  5044               	movf	_minuto_d,w,c
  4002  0016EA  0D10               	mullw	16
  4003  0016EC  50F3               	movf	prodl,w,c
  4004  0016EE  2445               	addwf	_minuto_u,w,c
  4005  0016F0  6E4E               	movwf	_RtccTime+2,c
  4006                           
  4007                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  4008  0016F2  C052  F001         	movff	_hora,___awdiv@dividend
  4009  0016F6  C053  F002         	movff	_hora+1,___awdiv@dividend+1
  4010  0016FA  0E00               	movlw	0
  4011  0016FC  6E04               	movwf	___awdiv@divisor+1,c
  4012  0016FE  0E0A               	movlw	10
  4013  001700  6E03               	movwf	___awdiv@divisor,c
  4014  001702  ECB8  F00D         	call	___awdiv	;wreg free
  4015  001706  5001               	movf	?___awdiv,w,c
  4016  001708  6E42               	movwf	_hora_d,c
  4017                           
  4018                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  4019  00170A  5042               	movf	_hora_d,w,c
  4020  00170C  0D0A               	mullw	10
  4021  00170E  50F3               	movf	prodl,w,c
  4022  001710  0800               	sublw	0
  4023  001712  2452               	addwf	_hora,w,c
  4024  001714  6E43               	movwf	_hora_u,c
  4025                           
  4026                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  4027  001716  5042               	movf	_hora_d,w,c
  4028  001718  0D10               	mullw	16
  4029  00171A  50F3               	movf	prodl,w,c
  4030  00171C  2443               	addwf	_hora_u,w,c
  4031  00171E  6E4F               	movwf	_RtccTime+3,c
  4032                           
  4033                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  4034  001720  C05A  F001         	movff	_anio,___awdiv@dividend
  4035  001724  C05B  F002         	movff	_anio+1,___awdiv@dividend+1
  4036  001728  0E00               	movlw	0
  4037  00172A  6E04               	movwf	___awdiv@divisor+1,c
  4038  00172C  0E0A               	movlw	10
  4039  00172E  6E03               	movwf	___awdiv@divisor,c
  4040  001730  ECB8  F00D         	call	___awdiv	;wreg free
  4041  001734  5001               	movf	?___awdiv,w,c
  4042  001736  6E3B               	movwf	_anio_d,c
  4043                           
  4044                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  4045  001738  503B               	movf	_anio_d,w,c
  4046  00173A  0D0A               	mullw	10
  4047  00173C  50F3               	movf	prodl,w,c
  4048  00173E  0800               	sublw	0
  4049  001740  245A               	addwf	_anio,w,c
  4050  001742  6E3C               	movwf	_anio_u,c
  4051                           
  4052                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  4053  001744  503B               	movf	_anio_d,w,c
  4054  001746  0D10               	mullw	16
  4055  001748  50F3               	movf	prodl,w,c
  4056  00174A  243C               	addwf	_anio_u,w,c
  4057  00174C  6E4B               	movwf	_RtccDate+3,c
  4058                           
  4059                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  4060  00174E  C058  F001         	movff	_mes,___awdiv@dividend
  4061  001752  C059  F002         	movff	_mes+1,___awdiv@dividend+1
  4062  001756  0E00               	movlw	0
  4063  001758  6E04               	movwf	___awdiv@divisor+1,c
  4064  00175A  0E0A               	movlw	10
  4065  00175C  6E03               	movwf	___awdiv@divisor,c
  4066  00175E  ECB8  F00D         	call	___awdiv	;wreg free
  4067  001762  5001               	movf	?___awdiv,w,c
  4068  001764  6E3E               	movwf	_mes_d,c
  4069                           
  4070                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  4071  001766  503E               	movf	_mes_d,w,c
  4072  001768  0D0A               	mullw	10
  4073  00176A  50F3               	movf	prodl,w,c
  4074  00176C  0800               	sublw	0
  4075  00176E  2458               	addwf	_mes,w,c
  4076  001770  6E3F               	movwf	_mes_u,c
  4077                           
  4078                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  4079  001772  503E               	movf	_mes_d,w,c
  4080  001774  0D10               	mullw	16
  4081  001776  50F3               	movf	prodl,w,c
  4082  001778  243F               	addwf	_mes_u,w,c
  4083  00177A  6E4A               	movwf	_RtccDate+2,c
  4084                           
  4085                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  4086  00177C  C054  F001         	movff	_dia,___awdiv@dividend
  4087  001780  C055  F002         	movff	_dia+1,___awdiv@dividend+1
  4088  001784  0E00               	movlw	0
  4089  001786  6E04               	movwf	___awdiv@divisor+1,c
  4090  001788  0E0A               	movlw	10
  4091  00178A  6E03               	movwf	___awdiv@divisor,c
  4092  00178C  ECB8  F00D         	call	___awdiv	;wreg free
  4093  001790  5001               	movf	?___awdiv,w,c
  4094  001792  6E40               	movwf	_fecha_d,c
  4095                           
  4096                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  4097  001794  5040               	movf	_fecha_d,w,c
  4098  001796  0D0A               	mullw	10
  4099  001798  50F3               	movf	prodl,w,c
  4100  00179A  0800               	sublw	0
  4101  00179C  2454               	addwf	_dia,w,c
  4102  00179E  6E41               	movwf	_fecha_u,c
  4103                           
  4104                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  4105  0017A0  5040               	movf	_fecha_d,w,c
  4106  0017A2  0D10               	mullw	16
  4107  0017A4  50F3               	movf	prodl,w,c
  4108  0017A6  2441               	addwf	_fecha_u,w,c
  4109  0017A8  6E49               	movwf	_RtccDate+1,c
  4110                           
  4111                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  4112  0017AA  C056  F03D         	movff	_diasem,_dia_semana
  4113                           
  4114                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  4115  0017AE  C056  F048         	movff	_diasem,_RtccDate
  4116                           
  4117                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  4118  0017B2  0E4C               	movlw	low _RtccTime
  4119  0017B4  6E01               	movwf	RtccWriteTime@pTm,c
  4120  0017B6  0E00               	movlw	high _RtccTime
  4121  0017B8  6E02               	movwf	RtccWriteTime@pTm+1,c
  4122  0017BA  0E01               	movlw	1
  4123  0017BC  6E03               	movwf	RtccWriteTime@di,c
  4124  0017BE  EC87  F00C         	call	_RtccWriteTime	;wreg free
  4125                           
  4126                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  4127  0017C2  0E48               	movlw	low _RtccDate
  4128  0017C4  6E01               	movwf	RtccWriteDate@pDt,c
  4129  0017C6  0E00               	movlw	high _RtccDate
  4130  0017C8  6E02               	movwf	RtccWriteDate@pDt+1,c
  4131  0017CA  0E01               	movlw	1
  4132  0017CC  6E03               	movwf	RtccWriteDate@di,c
  4133  0017CE  ECEC  F00B         	call	_RtccWriteDate	;wreg free
  4134                           
  4135                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  4136  0017D2  010F               	movlb	15	; () banked
  4137  0017D4  8F3F               	bsf	63,7,b	;volatile
  4138                           
  4139                           ; BSR set to: 15
  4140  0017D6  0012               	return		;funcret
  4141  0017D8                     __end_of_Write_RTC:
  4142                           	opt stack 0
  4143                           tblptru	equ	0xFF8
  4144                           tblptrh	equ	0xFF7
  4145                           tblptrl	equ	0xFF6
  4146                           tablat	equ	0xFF5
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           intcon2	equ	0xFF1
  4150                           indf0	equ	0xFEF
  4151                           postinc0	equ	0xFEE
  4152                           fsr0h	equ	0xFEA
  4153                           fsr0l	equ	0xFE9
  4154                           wreg	equ	0xFE8
  4155                           postdec1	equ	0xFE5
  4156                           fsr1l	equ	0xFE1
  4157                           indf2	equ	0xFDF
  4158                           postinc2	equ	0xFDE
  4159                           postdec2	equ	0xFDD
  4160                           fsr2h	equ	0xFDA
  4161                           fsr2l	equ	0xFD9
  4162                           status	equ	0xFD8
  4163                           
  4164 ;; *************** function ___awdiv *****************
  4165 ;; Defined at:
  4166 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  dividend        2    0[COMRAM] int 
  4169 ;;  divisor         2    2[COMRAM] int 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;  quotient        2    6[COMRAM] int 
  4172 ;;  sign            1    5[COMRAM] unsigned char 
  4173 ;;  counter         1    4[COMRAM] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  2    0[COMRAM] int 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4184 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4186 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4187 ;;Total ram usage:        8 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_Write_RTC
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text20
  4197  001B70                     __ptext20:
  4198                           	opt stack 0
  4199  001B70                     ___awdiv:
  4200                           	opt stack 29
  4201                           
  4202                           ; BSR set to: 15
  4203                           ;incstack = 0
  4204  001B70  0E00               	movlw	0
  4205  001B72  6E06               	movwf	___awdiv@sign,c
  4206  001B74  AE04               	btfss	___awdiv@divisor+1,7,c
  4207  001B76  D006               	goto	l590
  4208  001B78  6C03               	negf	___awdiv@divisor,c
  4209  001B7A  1E04               	comf	___awdiv@divisor+1,f,c
  4210  001B7C  B0D8               	btfsc	status,0,c
  4211  001B7E  2A04               	incf	___awdiv@divisor+1,f,c
  4212  001B80  0E01               	movlw	1
  4213  001B82  6E06               	movwf	___awdiv@sign,c
  4214  001B84                     l590:
  4215  001B84  AE02               	btfss	___awdiv@dividend+1,7,c
  4216  001B86  D006               	goto	l591
  4217  001B88  6C01               	negf	___awdiv@dividend,c
  4218  001B8A  1E02               	comf	___awdiv@dividend+1,f,c
  4219  001B8C  B0D8               	btfsc	status,0,c
  4220  001B8E  2A02               	incf	___awdiv@dividend+1,f,c
  4221  001B90  0E01               	movlw	1
  4222  001B92  1A06               	xorwf	___awdiv@sign,f,c
  4223  001B94                     l591:
  4224  001B94  0E00               	movlw	0
  4225  001B96  6E08               	movwf	___awdiv@quotient+1,c
  4226  001B98  0E00               	movlw	0
  4227  001B9A  6E07               	movwf	___awdiv@quotient,c
  4228  001B9C  5003               	movf	___awdiv@divisor,w,c
  4229  001B9E  1004               	iorwf	___awdiv@divisor+1,w,c
  4230  001BA0  B4D8               	btfsc	status,2,c
  4231  001BA2  D01C               	goto	l598
  4232  001BA4  0E01               	movlw	1
  4233  001BA6  6E05               	movwf	___awdiv@counter,c
  4234  001BA8  D004               	goto	l593
  4235  001BAA  90D8               	bcf	status,0,c
  4236  001BAC  3603               	rlcf	___awdiv@divisor,f,c
  4237  001BAE  3604               	rlcf	___awdiv@divisor+1,f,c
  4238  001BB0  2A05               	incf	___awdiv@counter,f,c
  4239  001BB2                     l593:
  4240  001BB2  AE04               	btfss	___awdiv@divisor+1,7,c
  4241  001BB4  D7FA               	goto	l594
  4242  001BB6                     u1990:
  4243  001BB6  90D8               	bcf	status,0,c
  4244  001BB8  3607               	rlcf	___awdiv@quotient,f,c
  4245  001BBA  3608               	rlcf	___awdiv@quotient+1,f,c
  4246  001BBC  5003               	movf	___awdiv@divisor,w,c
  4247  001BBE  5C01               	subwf	___awdiv@dividend,w,c
  4248  001BC0  5004               	movf	___awdiv@divisor+1,w,c
  4249  001BC2  5802               	subwfb	___awdiv@dividend+1,w,c
  4250  001BC4  A0D8               	btfss	status,0,c
  4251  001BC6  D005               	goto	l597
  4252  001BC8  5003               	movf	___awdiv@divisor,w,c
  4253  001BCA  5E01               	subwf	___awdiv@dividend,f,c
  4254  001BCC  5004               	movf	___awdiv@divisor+1,w,c
  4255  001BCE  5A02               	subwfb	___awdiv@dividend+1,f,c
  4256  001BD0  8007               	bsf	___awdiv@quotient,0,c
  4257  001BD2                     l597:
  4258  001BD2  90D8               	bcf	status,0,c
  4259  001BD4  3204               	rrcf	___awdiv@divisor+1,f,c
  4260  001BD6  3203               	rrcf	___awdiv@divisor,f,c
  4261  001BD8  2E05               	decfsz	___awdiv@counter,f,c
  4262  001BDA  D7ED               	goto	u1990
  4263  001BDC                     l598:
  4264  001BDC  5006               	movf	___awdiv@sign,w,c
  4265  001BDE  B4D8               	btfsc	status,2,c
  4266  001BE0  D004               	goto	l599
  4267  001BE2  6C07               	negf	___awdiv@quotient,c
  4268  001BE4  1E08               	comf	___awdiv@quotient+1,f,c
  4269  001BE6  B0D8               	btfsc	status,0,c
  4270  001BE8  2A08               	incf	___awdiv@quotient+1,f,c
  4271  001BEA                     l599:
  4272  001BEA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4273  001BEE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4274  001BF2  0012               	return	
  4275  001BF4                     __end_of___awdiv:
  4276                           	opt stack 0
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           prodh	equ	0xFF4
  4282                           prodl	equ	0xFF3
  4283                           intcon2	equ	0xFF1
  4284                           indf0	equ	0xFEF
  4285                           postinc0	equ	0xFEE
  4286                           fsr0h	equ	0xFEA
  4287                           fsr0l	equ	0xFE9
  4288                           wreg	equ	0xFE8
  4289                           postdec1	equ	0xFE5
  4290                           fsr1l	equ	0xFE1
  4291                           indf2	equ	0xFDF
  4292                           postinc2	equ	0xFDE
  4293                           postdec2	equ	0xFDD
  4294                           fsr2h	equ	0xFDA
  4295                           fsr2l	equ	0xFD9
  4296                           status	equ	0xFD8
  4297                           
  4298 ;; *************** function _RtccWriteTime *****************
  4299 ;; Defined at:
  4300 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  pTm             2    0[COMRAM] PTR const struct .
  4303 ;;		 -> RtccTime(4), 
  4304 ;;  di              1    2[COMRAM] enum E7121
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  tempHourWDay    2    9[COMRAM] struct .
  4307 ;;  tempMinSec      2    7[COMRAM] struct .
  4308 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4309 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4310 ;;  wasOn           1    4[COMRAM] enum E7121
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      enum E6550
  4313 ;; Registers used:
  4314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4320 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4321 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4323 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;Total ram usage:       11 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    1
  4327 ;; This function calls:
  4328 ;;		_RtccWrOn
  4329 ;; This function is called by:
  4330 ;;		_Write_RTC
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333                           
  4334                           	psect	text21
  4335  00190E                     __ptext21:
  4336                           	opt stack 0
  4337  00190E                     _RtccWriteTime:
  4338                           	opt stack 28
  4339                           
  4340                           ;incstack = 0
  4341  00190E  0E00               	movlw	0
  4342  001910  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4343  001912  EE20 F002          	lfsr	2,2
  4344  001916  5001               	movf	RtccWriteTime@pTm,w,c
  4345  001918  26D9               	addwf	fsr2l,f,c
  4346  00191A  5002               	movf	RtccWriteTime@pTm+1,w,c
  4347  00191C  22DA               	addwfc	fsr2h,f,c
  4348  00191E  0E5A               	movlw	90
  4349  001920  60DF               	cpfslt	indf2,c
  4350  001922  0012               	return	
  4351  001924  EE20 F001          	lfsr	2,1
  4352  001928  5001               	movf	RtccWriteTime@pTm,w,c
  4353  00192A  26D9               	addwf	fsr2l,f,c
  4354  00192C  5002               	movf	RtccWriteTime@pTm+1,w,c
  4355  00192E  22DA               	addwfc	fsr2h,f,c
  4356  001930  0E5A               	movlw	90
  4357  001932  60DF               	cpfslt	indf2,c
  4358  001934  0012               	return	
  4359  001936  EE20 F003          	lfsr	2,3
  4360  00193A  5001               	movf	RtccWriteTime@pTm,w,c
  4361  00193C  26D9               	addwf	fsr2l,f,c
  4362  00193E  5002               	movf	RtccWriteTime@pTm+1,w,c
  4363  001940  22DA               	addwfc	fsr2h,f,c
  4364  001942  0E24               	movlw	36
  4365  001944  64DF               	cpfsgt	indf2,c
  4366  001946  D001               	goto	l410
  4367  001948  0012               	return	
  4368  00194A                     l410:
  4369  00194A  EE20 F002          	lfsr	2,2
  4370  00194E  5001               	movf	RtccWriteTime@pTm,w,c
  4371  001950  26D9               	addwf	fsr2l,f,c
  4372  001952  5002               	movf	RtccWriteTime@pTm+1,w,c
  4373  001954  22DA               	addwfc	fsr2h,f,c
  4374  001956  50DF               	movf	indf2,w,c
  4375  001958  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  4376  00195A  EE20 F001          	lfsr	2,1
  4377  00195E  5001               	movf	RtccWriteTime@pTm,w,c
  4378  001960  26D9               	addwf	fsr2l,f,c
  4379  001962  5002               	movf	RtccWriteTime@pTm+1,w,c
  4380  001964  22DA               	addwfc	fsr2h,f,c
  4381  001966  50DF               	movf	indf2,w,c
  4382  001968  6E08               	movwf	RtccWriteTime@tempMinSec,c
  4383  00196A  5003               	movf	RtccWriteTime@di,w,c
  4384  00196C  A4D8               	btfss	status,2,c
  4385  00196E  9CF2               	bcf	intcon,6,c	;volatile
  4386  001970  010F               	movlb	15	; () banked
  4387  001972  0E00               	movlw	0
  4388  001974  BB3F               	btfsc	63,5,b	;volatile
  4389  001976  0E01               	movlw	1
  4390  001978  6E07               	movwf	RtccWriteTime@wasWrEn,c
  4391  00197A  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4392  00197C  B4D8               	btfsc	status,2,c
  4393                           
  4394                           ; BSR set to: 15
  4395  00197E  EC11  F010         	call	_RtccWrOn	;wreg free
  4396  001982  010F               	movlb	15	; () banked
  4397  001984  0E00               	movlw	0
  4398  001986  BF3F               	btfsc	63,7,b	;volatile
  4399  001988  0E01               	movlw	1
  4400  00198A  6E05               	movwf	RtccWriteTime@wasOn,c
  4401  00198C  5005               	movf	RtccWriteTime@wasOn,w,c
  4402  00198E  B4D8               	btfsc	status,2,c
  4403  001990  D006               	goto	l416
  4404                           
  4405                           ; BSR set to: 15
  4406  001992  0E00               	movlw	0
  4407  001994  BE91               	btfsc	3985,7,c	;volatile
  4408  001996  0E01               	movlw	1
  4409  001998  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4410                           
  4411                           ; BSR set to: 15
  4412  00199A  010F               	movlb	15	; () banked
  4413  00199C  9F3F               	bcf	63,7,b	;volatile
  4414  00199E                     l416:
  4415                           
  4416                           ; BSR set to: 15
  4417                           
  4418                           ; BSR set to: 15
  4419  00199E  0EFC               	movlw	252
  4420  0019A0  010F               	movlb	15	; () banked
  4421  0019A2  173F               	andwf	63,f,b	;volatile
  4422  0019A4  010F               	movlb	15	; () banked
  4423  0019A6  813F               	bsf	63,0,b	;volatile
  4424                           
  4425                           ; BSR set to: 15
  4426  0019A8  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  4427                           
  4428                           ; BSR set to: 15
  4429  0019AC  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  4430                           
  4431                           ; BSR set to: 15
  4432  0019B0  EE20 F003          	lfsr	2,3
  4433  0019B4  5001               	movf	RtccWriteTime@pTm,w,c
  4434  0019B6  26D9               	addwf	fsr2l,f,c
  4435  0019B8  5002               	movf	RtccWriteTime@pTm+1,w,c
  4436  0019BA  22DA               	addwfc	fsr2h,f,c
  4437  0019BC  50DF               	movf	indf2,w,c
  4438  0019BE  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  4439                           
  4440                           ; BSR set to: 15
  4441  0019C0  0EFC               	movlw	252
  4442  0019C2  010F               	movlb	15	; () banked
  4443  0019C4  173F               	andwf	63,f,b	;volatile
  4444                           
  4445                           ; BSR set to: 15
  4446  0019C6  010F               	movlb	15	; () banked
  4447  0019C8  813F               	bsf	63,0,b	;volatile
  4448                           
  4449                           ; BSR set to: 15
  4450  0019CA  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  4451                           
  4452                           ; BSR set to: 15
  4453  0019CE  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  4454                           
  4455                           ; BSR set to: 15
  4456  0019D2  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  4457                           
  4458                           ; BSR set to: 15
  4459  0019D6  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  4460                           
  4461                           ; BSR set to: 15
  4462  0019DA  5005               	movf	RtccWriteTime@wasOn,w,c
  4463  0019DC  B4D8               	btfsc	status,2,c
  4464  0019DE  D00B               	goto	l417
  4465                           
  4466                           ; BSR set to: 15
  4467  0019E0  010F               	movlb	15	; () banked
  4468  0019E2  8F3F               	bsf	63,7,b	;volatile
  4469                           
  4470                           ; BSR set to: 15
  4471  0019E4  5006               	movf	RtccWriteTime@wasAlrm,w,c
  4472  0019E6  A4D8               	btfss	status,2,c
  4473                           
  4474                           ; BSR set to: 15
  4475  0019E8  8E91               	bsf	3985,7,c	;volatile
  4476                           
  4477                           ; BSR set to: 15
  4478                           
  4479                           ; BSR set to: 15
  4480  0019EA  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4481  0019EC  B4D8               	btfsc	status,2,c
  4482  0019EE  D008               	goto	l421
  4483                           
  4484                           ; BSR set to: 15
  4485  0019F0  EC11  F010         	call	_RtccWrOn	;wreg free
  4486  0019F4  D005               	goto	l421
  4487  0019F6                     l417:
  4488  0019F6  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4489  0019F8  A4D8               	btfss	status,2,c
  4490  0019FA  D002               	goto	l421
  4491  0019FC  010F               	movlb	15	; () banked
  4492  0019FE  9B3F               	bcf	63,5,b	;volatile
  4493  001A00                     l421:
  4494                           
  4495                           ; BSR set to: 15
  4496                           
  4497                           ; BSR set to: 15
  4498  001A00  5003               	movf	RtccWriteTime@di,w,c
  4499  001A02  B4D8               	btfsc	status,2,c
  4500  001A04  0012               	return	
  4501  001A06  8CF2               	bsf	intcon,6,c	;volatile
  4502  001A08  0012               	return	
  4503  001A0A                     __end_of_RtccWriteTime:
  4504                           	opt stack 0
  4505                           tblptru	equ	0xFF8
  4506                           tblptrh	equ	0xFF7
  4507                           tblptrl	equ	0xFF6
  4508                           tablat	equ	0xFF5
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           intcon2	equ	0xFF1
  4513                           indf0	equ	0xFEF
  4514                           postinc0	equ	0xFEE
  4515                           fsr0h	equ	0xFEA
  4516                           fsr0l	equ	0xFE9
  4517                           wreg	equ	0xFE8
  4518                           postdec1	equ	0xFE5
  4519                           fsr1l	equ	0xFE1
  4520                           indf2	equ	0xFDF
  4521                           postinc2	equ	0xFDE
  4522                           postdec2	equ	0xFDD
  4523                           fsr2h	equ	0xFDA
  4524                           fsr2l	equ	0xFD9
  4525                           status	equ	0xFD8
  4526                           
  4527 ;; *************** function _RtccWriteDate *****************
  4528 ;; Defined at:
  4529 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  pDt             2    0[COMRAM] PTR const struct .
  4532 ;;		 -> RtccDate(4), 
  4533 ;;  di              1    2[COMRAM] enum E7121
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;  tempHourWDay    2   11[COMRAM] struct .
  4536 ;;  tempDayMonth    2    9[COMRAM] struct .
  4537 ;;  tempYear        2    6[COMRAM] struct .
  4538 ;;  wasWrEn         1    8[COMRAM] enum E7121
  4539 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4540 ;;  wasOn           1    4[COMRAM] enum E7121
  4541 ;; Return value:  Size  Location     Type
  4542 ;;                  1    wreg      enum E6550
  4543 ;; Registers used:
  4544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4550 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4554 ;;Total ram usage:       13 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    1
  4557 ;; This function calls:
  4558 ;;		_RtccWrOn
  4559 ;; This function is called by:
  4560 ;;		_Write_RTC
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text22
  4565  0017D8                     __ptext22:
  4566                           	opt stack 0
  4567  0017D8                     _RtccWriteDate:
  4568                           	opt stack 28
  4569                           
  4570                           ;incstack = 0
  4571  0017D8  0E00               	movlw	0
  4572  0017DA  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4573  0017DC  EE20 F002          	lfsr	2,2
  4574  0017E0  5001               	movf	RtccWriteDate@pDt,w,c
  4575  0017E2  26D9               	addwf	fsr2l,f,c
  4576  0017E4  5002               	movf	RtccWriteDate@pDt+1,w,c
  4577  0017E6  22DA               	addwfc	fsr2h,f,c
  4578  0017E8  0E13               	movlw	19
  4579  0017EA  60DF               	cpfslt	indf2,c
  4580  0017EC  0012               	return	
  4581  0017EE  EE20 F002          	lfsr	2,2
  4582  0017F2  5001               	movf	RtccWriteDate@pDt,w,c
  4583  0017F4  26D9               	addwf	fsr2l,f,c
  4584  0017F6  5002               	movf	RtccWriteDate@pDt+1,w,c
  4585  0017F8  22DA               	addwfc	fsr2h,f,c
  4586  0017FA  50DF               	movf	indf2,w,c
  4587  0017FC  B4D8               	btfsc	status,2,c
  4588  0017FE  0012               	return	
  4589  001800  EE20 F001          	lfsr	2,1
  4590  001804  5001               	movf	RtccWriteDate@pDt,w,c
  4591  001806  26D9               	addwf	fsr2l,f,c
  4592  001808  5002               	movf	RtccWriteDate@pDt+1,w,c
  4593  00180A  22DA               	addwfc	fsr2h,f,c
  4594  00180C  0E32               	movlw	50
  4595  00180E  60DF               	cpfslt	indf2,c
  4596  001810  0012               	return	
  4597  001812  EE20 F001          	lfsr	2,1
  4598  001816  5001               	movf	RtccWriteDate@pDt,w,c
  4599  001818  26D9               	addwf	fsr2l,f,c
  4600  00181A  5002               	movf	RtccWriteDate@pDt+1,w,c
  4601  00181C  22DA               	addwfc	fsr2h,f,c
  4602  00181E  50DF               	movf	indf2,w,c
  4603  001820  B4D8               	btfsc	status,2,c
  4604  001822  0012               	return	
  4605  001824  EE20 F003          	lfsr	2,3
  4606  001828  5001               	movf	RtccWriteDate@pDt,w,c
  4607  00182A  26D9               	addwf	fsr2l,f,c
  4608  00182C  5002               	movf	RtccWriteDate@pDt+1,w,c
  4609  00182E  22DA               	addwfc	fsr2h,f,c
  4610  001830  0E99               	movlw	153
  4611  001832  64DF               	cpfsgt	indf2,c
  4612  001834  D001               	goto	l381
  4613  001836  0012               	return	
  4614  001838                     l381:
  4615  001838  EE20 F003          	lfsr	2,3
  4616  00183C  5001               	movf	RtccWriteDate@pDt,w,c
  4617  00183E  26D9               	addwf	fsr2l,f,c
  4618  001840  5002               	movf	RtccWriteDate@pDt+1,w,c
  4619  001842  22DA               	addwfc	fsr2h,f,c
  4620  001844  50DF               	movf	indf2,w,c
  4621  001846  6E07               	movwf	RtccWriteDate@tempYear,c
  4622  001848  EE20 F001          	lfsr	2,1
  4623  00184C  5001               	movf	RtccWriteDate@pDt,w,c
  4624  00184E  26D9               	addwf	fsr2l,f,c
  4625  001850  5002               	movf	RtccWriteDate@pDt+1,w,c
  4626  001852  22DA               	addwfc	fsr2h,f,c
  4627  001854  50DF               	movf	indf2,w,c
  4628  001856  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  4629  001858  EE20 F002          	lfsr	2,2
  4630  00185C  5001               	movf	RtccWriteDate@pDt,w,c
  4631  00185E  26D9               	addwf	fsr2l,f,c
  4632  001860  5002               	movf	RtccWriteDate@pDt+1,w,c
  4633  001862  22DA               	addwfc	fsr2h,f,c
  4634  001864  50DF               	movf	indf2,w,c
  4635  001866  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  4636  001868  5003               	movf	RtccWriteDate@di,w,c
  4637  00186A  A4D8               	btfss	status,2,c
  4638  00186C  9CF2               	bcf	intcon,6,c	;volatile
  4639  00186E  010F               	movlb	15	; () banked
  4640  001870  0E00               	movlw	0
  4641  001872  BB3F               	btfsc	63,5,b	;volatile
  4642  001874  0E01               	movlw	1
  4643  001876  6E09               	movwf	RtccWriteDate@wasWrEn,c
  4644  001878  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4645  00187A  B4D8               	btfsc	status,2,c
  4646                           
  4647                           ; BSR set to: 15
  4648  00187C  EC11  F010         	call	_RtccWrOn	;wreg free
  4649  001880  010F               	movlb	15	; () banked
  4650  001882  0E00               	movlw	0
  4651  001884  BF3F               	btfsc	63,7,b	;volatile
  4652  001886  0E01               	movlw	1
  4653  001888  6E05               	movwf	RtccWriteDate@wasOn,c
  4654  00188A  5005               	movf	RtccWriteDate@wasOn,w,c
  4655  00188C  B4D8               	btfsc	status,2,c
  4656  00188E  D006               	goto	l387
  4657                           
  4658                           ; BSR set to: 15
  4659  001890  0E00               	movlw	0
  4660  001892  BE91               	btfsc	3985,7,c	;volatile
  4661  001894  0E01               	movlw	1
  4662  001896  6E06               	movwf	RtccWriteDate@wasAlrm,c
  4663                           
  4664                           ; BSR set to: 15
  4665  001898  010F               	movlb	15	; () banked
  4666  00189A  9F3F               	bcf	63,7,b	;volatile
  4667  00189C                     l387:
  4668                           
  4669                           ; BSR set to: 15
  4670                           
  4671                           ; BSR set to: 15
  4672  00189C  0EFC               	movlw	252
  4673  00189E  010F               	movlb	15	; () banked
  4674  0018A0  173F               	andwf	63,f,b	;volatile
  4675  0018A2  010F               	movlb	15	; () banked
  4676  0018A4  813F               	bsf	63,0,b	;volatile
  4677                           
  4678                           ; BSR set to: 15
  4679  0018A6  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  4680                           
  4681                           ; BSR set to: 15
  4682  0018AA  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  4683                           
  4684                           ; BSR set to: 15
  4685  0018AE  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  4686  0018B2  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  4687  0018B6  50DF               	movf	indf2,w,c
  4688  0018B8  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  4689                           
  4690                           ; BSR set to: 15
  4691  0018BA  0EFC               	movlw	252
  4692  0018BC  010F               	movlb	15	; () banked
  4693  0018BE  173F               	andwf	63,f,b	;volatile
  4694                           
  4695                           ; BSR set to: 15
  4696  0018C0  0E03               	movlw	3
  4697  0018C2  010F               	movlb	15	; () banked
  4698  0018C4  133F               	iorwf	63,f,b	;volatile
  4699                           
  4700                           ; BSR set to: 15
  4701  0018C6  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  4702                           
  4703                           ; BSR set to: 15
  4704  0018CA  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  4705                           
  4706                           ; BSR set to: 15
  4707  0018CE  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  4708                           
  4709                           ; BSR set to: 15
  4710  0018D2  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  4711                           
  4712                           ; BSR set to: 15
  4713  0018D6  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  4714                           
  4715                           ; BSR set to: 15
  4716  0018DA  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  4717                           
  4718                           ; BSR set to: 15
  4719  0018DE  5005               	movf	RtccWriteDate@wasOn,w,c
  4720  0018E0  B4D8               	btfsc	status,2,c
  4721  0018E2  D00B               	goto	l388
  4722                           
  4723                           ; BSR set to: 15
  4724  0018E4  010F               	movlb	15	; () banked
  4725  0018E6  8F3F               	bsf	63,7,b	;volatile
  4726                           
  4727                           ; BSR set to: 15
  4728  0018E8  5006               	movf	RtccWriteDate@wasAlrm,w,c
  4729  0018EA  A4D8               	btfss	status,2,c
  4730                           
  4731                           ; BSR set to: 15
  4732  0018EC  8E91               	bsf	3985,7,c	;volatile
  4733                           
  4734                           ; BSR set to: 15
  4735                           
  4736                           ; BSR set to: 15
  4737  0018EE  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4738  0018F0  B4D8               	btfsc	status,2,c
  4739  0018F2  D008               	goto	l392
  4740                           
  4741                           ; BSR set to: 15
  4742  0018F4  EC11  F010         	call	_RtccWrOn	;wreg free
  4743  0018F8  D005               	goto	l392
  4744  0018FA                     l388:
  4745  0018FA  5009               	movf	RtccWriteDate@wasWrEn,w,c
  4746  0018FC  A4D8               	btfss	status,2,c
  4747  0018FE  D002               	goto	l392
  4748  001900  010F               	movlb	15	; () banked
  4749  001902  9B3F               	bcf	63,5,b	;volatile
  4750  001904                     l392:
  4751                           
  4752                           ; BSR set to: 15
  4753                           
  4754                           ; BSR set to: 15
  4755  001904  5003               	movf	RtccWriteDate@di,w,c
  4756  001906  B4D8               	btfsc	status,2,c
  4757  001908  0012               	return	
  4758  00190A  9CF2               	bcf	intcon,6,c	;volatile
  4759  00190C  0012               	return	
  4760  00190E                     __end_of_RtccWriteDate:
  4761                           	opt stack 0
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           intcon2	equ	0xFF1
  4770                           indf0	equ	0xFEF
  4771                           postinc0	equ	0xFEE
  4772                           fsr0h	equ	0xFEA
  4773                           fsr0l	equ	0xFE9
  4774                           wreg	equ	0xFE8
  4775                           postdec1	equ	0xFE5
  4776                           fsr1l	equ	0xFE1
  4777                           indf2	equ	0xFDF
  4778                           postinc2	equ	0xFDE
  4779                           postdec2	equ	0xFDD
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function _RtccWrOn *****************
  4785 ;; Defined at:
  4786 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  data            2    0        unsigned int 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  1    wreg      void 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_Write_RTC
  4810 ;;		_RtccWriteDate
  4811 ;;		_RtccWriteTime
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text23
  4816  002022                     __ptext23:
  4817                           	opt stack 0
  4818  002022                     _RtccWrOn:
  4819                           	opt stack 28
  4820                           
  4821                           ;incstack = 0
  4822  002022  9CF2               	bcf	intcon,6,c	;volatile
  4823  002024  0E55               	movlw	85
  4824  002026  6EA7               	movwf	4007,c	;volatile
  4825  002028  0EAA               	movlw	170
  4826  00202A  6EA7               	movwf	4007,c	;volatile
  4827  00202C  010F               	movlb	15	; () banked
  4828  00202E  8B3F               	bsf	63,5,b	;volatile
  4829                           
  4830                           ; BSR set to: 15
  4831  002030  8CF2               	bsf	intcon,6,c	;volatile
  4832                           
  4833                           ; BSR set to: 15
  4834  002032  0012               	return		;funcret
  4835  002034                     __end_of_RtccWrOn:
  4836                           	opt stack 0
  4837                           tblptru	equ	0xFF8
  4838                           tblptrh	equ	0xFF7
  4839                           tblptrl	equ	0xFF6
  4840                           tablat	equ	0xFF5
  4841                           prodh	equ	0xFF4
  4842                           prodl	equ	0xFF3
  4843                           intcon	equ	0xFF2
  4844                           intcon2	equ	0xFF1
  4845                           indf0	equ	0xFEF
  4846                           postinc0	equ	0xFEE
  4847                           fsr0h	equ	0xFEA
  4848                           fsr0l	equ	0xFE9
  4849                           wreg	equ	0xFE8
  4850                           postdec1	equ	0xFE5
  4851                           fsr1l	equ	0xFE1
  4852                           indf2	equ	0xFDF
  4853                           postinc2	equ	0xFDE
  4854                           postdec2	equ	0xFDD
  4855                           fsr2h	equ	0xFDA
  4856                           fsr2l	equ	0xFD9
  4857                           status	equ	0xFD8
  4858                           
  4859 ;; *************** function _Read_RTC *****************
  4860 ;; Defined at:
  4861 ;;		line 111 in file "../../headers\unmc_rtcc_01.h"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;Total ram usage:        0 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    1
  4882 ;; This function calls:
  4883 ;;		_RtccReadDate
  4884 ;;		_RtccReadTime
  4885 ;; This function is called by:
  4886 ;;		_main
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text24
  4891  001A0A                     __ptext24:
  4892                           	opt stack 0
  4893  001A0A                     _Read_RTC:
  4894                           	opt stack 29
  4895                           
  4896                           ;headers\unmc_rtcc_01.h: 114: RtccReadTime(&RtccTime);
  4897                           
  4898                           ; BSR set to: 15
  4899                           ;incstack = 0
  4900  001A0A  0E4C               	movlw	low _RtccTime
  4901  001A0C  6E01               	movwf	RtccReadTime@pTm,c
  4902  001A0E  0E00               	movlw	high _RtccTime
  4903  001A10  6E02               	movwf	RtccReadTime@pTm+1,c
  4904  001A12  EC70  F00E         	call	_RtccReadTime	;wreg free
  4905                           
  4906                           ;headers\unmc_rtcc_01.h: 115: segundo_u=(RtccTime.f.sec & 0x0F);
  4907  001A16  504D               	movf	_RtccTime+1,w,c
  4908  001A18  0B0F               	andlw	15
  4909  001A1A  6E47               	movwf	_segundo_u,c
  4910                           
  4911                           ;headers\unmc_rtcc_01.h: 116: segundo_d=((RtccTime.f.sec & 0xF0)>>4);
  4912  001A1C  384D               	swapf	_RtccTime+1,w,c
  4913  001A1E  0B0F               	andlw	15
  4914  001A20  0B0F               	andlw	15
  4915  001A22  6E46               	movwf	_segundo_d,c
  4916                           
  4917                           ;headers\unmc_rtcc_01.h: 117: minuto_u=(RtccTime.f.min & 0x0F);
  4918  001A24  504E               	movf	_RtccTime+2,w,c
  4919  001A26  0B0F               	andlw	15
  4920  001A28  6E45               	movwf	_minuto_u,c
  4921                           
  4922                           ;headers\unmc_rtcc_01.h: 118: minuto_d=((RtccTime.f.min & 0xF0)>>4);
  4923  001A2A  384E               	swapf	_RtccTime+2,w,c
  4924  001A2C  0B0F               	andlw	15
  4925  001A2E  0B0F               	andlw	15
  4926  001A30  6E44               	movwf	_minuto_d,c
  4927                           
  4928                           ;headers\unmc_rtcc_01.h: 119: hora_u=(RtccTime.f.hour & 0x0F);
  4929  001A32  504F               	movf	_RtccTime+3,w,c
  4930  001A34  0B0F               	andlw	15
  4931  001A36  6E43               	movwf	_hora_u,c
  4932                           
  4933                           ;headers\unmc_rtcc_01.h: 120: hora_d=((RtccTime.f.hour & 0xF0)>>4);
  4934  001A38  384F               	swapf	_RtccTime+3,w,c
  4935  001A3A  0B0F               	andlw	15
  4936  001A3C  0B0F               	andlw	15
  4937  001A3E  6E42               	movwf	_hora_d,c
  4938                           
  4939                           ;headers\unmc_rtcc_01.h: 121: RtccReadDate(&RtccDate);
  4940  001A40  0E48               	movlw	low _RtccDate
  4941  001A42  6E01               	movwf	RtccReadDate@pDt,c
  4942  001A44  0E00               	movlw	high _RtccDate
  4943  001A46  6E02               	movwf	RtccReadDate@pDt+1,c
  4944  001A48  EC71  F00D         	call	_RtccReadDate	;wreg free
  4945                           
  4946                           ;headers\unmc_rtcc_01.h: 122: fecha_u=(RtccDate.f.mday & 0x0F);
  4947  001A4C  5049               	movf	_RtccDate+1,w,c
  4948  001A4E  0B0F               	andlw	15
  4949  001A50  6E41               	movwf	_fecha_u,c
  4950                           
  4951                           ;headers\unmc_rtcc_01.h: 123: fecha_d=((RtccDate.f.mday & 0xF0)>>4);
  4952  001A52  3849               	swapf	_RtccDate+1,w,c
  4953  001A54  0B0F               	andlw	15
  4954  001A56  0B0F               	andlw	15
  4955  001A58  6E40               	movwf	_fecha_d,c
  4956                           
  4957                           ;headers\unmc_rtcc_01.h: 124: mes_u=(RtccDate.f.mon & 0x0F);
  4958  001A5A  504A               	movf	_RtccDate+2,w,c
  4959  001A5C  0B0F               	andlw	15
  4960  001A5E  6E3F               	movwf	_mes_u,c
  4961                           
  4962                           ;headers\unmc_rtcc_01.h: 125: mes_d=((RtccDate.f.mon & 0xF0)>>4);
  4963  001A60  384A               	swapf	_RtccDate+2,w,c
  4964  001A62  0B0F               	andlw	15
  4965  001A64  0B0F               	andlw	15
  4966  001A66  6E3E               	movwf	_mes_d,c
  4967                           
  4968                           ;headers\unmc_rtcc_01.h: 126: dia_semana=RtccDate.f.wday;
  4969  001A68  C048  F03D         	movff	_RtccDate,_dia_semana
  4970                           
  4971                           ;headers\unmc_rtcc_01.h: 127: anio_u=(RtccDate.f.year & 0x0F);
  4972  001A6C  504B               	movf	_RtccDate+3,w,c
  4973  001A6E  0B0F               	andlw	15
  4974  001A70  6E3C               	movwf	_anio_u,c
  4975                           
  4976                           ;headers\unmc_rtcc_01.h: 128: anio_d=((RtccDate.f.year & 0xF0)>>4);
  4977  001A72  384B               	swapf	_RtccDate+3,w,c
  4978  001A74  0B0F               	andlw	15
  4979  001A76  0B0F               	andlw	15
  4980  001A78  6E3B               	movwf	_anio_d,c
  4981                           
  4982                           ;headers\unmc_rtcc_01.h: 130: segundo=segundo_d*10+segundo_u;
  4983  001A7A  5046               	movf	_segundo_d,w,c
  4984  001A7C  0D0A               	mullw	10
  4985  001A7E  5047               	movf	_segundo_u,w,c
  4986  001A80  24F3               	addwf	prodl,w,c
  4987  001A82  6E2D               	movwf	_segundo,c
  4988  001A84  0E00               	movlw	0
  4989  001A86  20F4               	addwfc	prodh,w,c
  4990  001A88  6E2E               	movwf	_segundo+1,c
  4991                           
  4992                           ;headers\unmc_rtcc_01.h: 131: minuto=minuto_d*10+minuto_u;
  4993  001A8A  5044               	movf	_minuto_d,w,c
  4994  001A8C  0D0A               	mullw	10
  4995  001A8E  5045               	movf	_minuto_u,w,c
  4996  001A90  24F3               	addwf	prodl,w,c
  4997  001A92  6E50               	movwf	_minuto,c
  4998  001A94  0E00               	movlw	0
  4999  001A96  20F4               	addwfc	prodh,w,c
  5000  001A98  6E51               	movwf	_minuto+1,c
  5001                           
  5002                           ;headers\unmc_rtcc_01.h: 132: hora=hora_d*10+hora_u;
  5003  001A9A  5042               	movf	_hora_d,w,c
  5004  001A9C  0D0A               	mullw	10
  5005  001A9E  5043               	movf	_hora_u,w,c
  5006  001AA0  24F3               	addwf	prodl,w,c
  5007  001AA2  6E52               	movwf	_hora,c
  5008  001AA4  0E00               	movlw	0
  5009  001AA6  20F4               	addwfc	prodh,w,c
  5010  001AA8  6E53               	movwf	_hora+1,c
  5011                           
  5012                           ;headers\unmc_rtcc_01.h: 133: dia=fecha_d*10+fecha_u;
  5013  001AAA  5040               	movf	_fecha_d,w,c
  5014  001AAC  0D0A               	mullw	10
  5015  001AAE  5041               	movf	_fecha_u,w,c
  5016  001AB0  24F3               	addwf	prodl,w,c
  5017  001AB2  6E54               	movwf	_dia,c
  5018  001AB4  0E00               	movlw	0
  5019  001AB6  20F4               	addwfc	prodh,w,c
  5020  001AB8  6E55               	movwf	_dia+1,c
  5021                           
  5022                           ;headers\unmc_rtcc_01.h: 134: diasem=dia_semana;
  5023  001ABA  C03D  F056         	movff	_dia_semana,_diasem
  5024  001ABE  6A57               	clrf	_diasem+1,c
  5025                           
  5026                           ;headers\unmc_rtcc_01.h: 135: mes=mes_d*10+mes_u;
  5027  001AC0  503E               	movf	_mes_d,w,c
  5028  001AC2  0D0A               	mullw	10
  5029  001AC4  503F               	movf	_mes_u,w,c
  5030  001AC6  24F3               	addwf	prodl,w,c
  5031  001AC8  6E58               	movwf	_mes,c
  5032  001ACA  0E00               	movlw	0
  5033  001ACC  20F4               	addwfc	prodh,w,c
  5034  001ACE  6E59               	movwf	_mes+1,c
  5035                           
  5036                           ;headers\unmc_rtcc_01.h: 136: anio=anio_d*10+anio_u;
  5037  001AD0  503B               	movf	_anio_d,w,c
  5038  001AD2  0D0A               	mullw	10
  5039  001AD4  503C               	movf	_anio_u,w,c
  5040  001AD6  24F3               	addwf	prodl,w,c
  5041  001AD8  6E5A               	movwf	_anio,c
  5042  001ADA  0E00               	movlw	0
  5043  001ADC  20F4               	addwfc	prodh,w,c
  5044  001ADE  6E5B               	movwf	_anio+1,c
  5045  001AE0  0012               	return		;funcret
  5046  001AE2                     __end_of_Read_RTC:
  5047                           	opt stack 0
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           intcon2	equ	0xFF1
  5056                           indf0	equ	0xFEF
  5057                           postinc0	equ	0xFEE
  5058                           fsr0h	equ	0xFEA
  5059                           fsr0l	equ	0xFE9
  5060                           wreg	equ	0xFE8
  5061                           postdec1	equ	0xFE5
  5062                           fsr1l	equ	0xFE1
  5063                           indf2	equ	0xFDF
  5064                           postinc2	equ	0xFDE
  5065                           postdec2	equ	0xFDD
  5066                           fsr2h	equ	0xFDA
  5067                           fsr2l	equ	0xFD9
  5068                           status	equ	0xFD8
  5069                           
  5070 ;; *************** function _RtccReadTime *****************
  5071 ;; Defined at:
  5072 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  pTm             2    0[COMRAM] PTR struct .
  5075 ;;		 -> RtccTime(4), 
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  rTD0            8   10[COMRAM] struct .
  5078 ;;  rTD1            8    2[COMRAM] struct .
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;Total ram usage:       18 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_Read_RTC
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text25
  5102  001CE0                     __ptext25:
  5103                           	opt stack 0
  5104  001CE0                     _RtccReadTime:
  5105                           	opt stack 29
  5106                           
  5107                           ;incstack = 0
  5108  001CE0  0EFC               	movlw	252
  5109  001CE2  010F               	movlb	15	; () banked
  5110  001CE4  173F               	andwf	63,f,b	;volatile
  5111                           
  5112                           ; BSR set to: 15
  5113  001CE6  010F               	movlb	15	; () banked
  5114  001CE8  813F               	bsf	63,0,b	;volatile
  5115                           
  5116                           ; BSR set to: 15
  5117  001CEA  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  5118                           
  5119                           ; BSR set to: 15
  5120  001CEE  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  5121                           
  5122                           ; BSR set to: 15
  5123  001CF2  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  5124                           
  5125                           ; BSR set to: 15
  5126  001CF6  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  5127                           
  5128                           ; BSR set to: 15
  5129  001CFA  0EFC               	movlw	252
  5130  001CFC  010F               	movlb	15	; () banked
  5131  001CFE  173F               	andwf	63,f,b	;volatile
  5132  001D00  010F               	movlb	15	; () banked
  5133  001D02  813F               	bsf	63,0,b	;volatile
  5134                           
  5135                           ; BSR set to: 15
  5136  001D04  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  5137                           
  5138                           ; BSR set to: 15
  5139  001D08  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  5140                           
  5141                           ; BSR set to: 15
  5142  001D0C  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  5143                           
  5144                           ; BSR set to: 15
  5145  001D10  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  5146                           
  5147                           ; BSR set to: 15
  5148  001D14  5009               	movf	RtccReadTime@rTD1+6,w,c
  5149  001D16  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  5150  001D18  A4D8               	btfss	status,2,c
  5151  001D1A  D7E2               	goto	_RtccReadTime
  5152                           
  5153                           ; BSR set to: 15
  5154                           
  5155                           ; BSR set to: 15
  5156  001D1C  EE20 F003          	lfsr	2,3
  5157  001D20  5001               	movf	RtccReadTime@pTm,w,c
  5158  001D22  26D9               	addwf	fsr2l,f,c
  5159  001D24  5002               	movf	RtccReadTime@pTm+1,w,c
  5160  001D26  22DA               	addwfc	fsr2h,f,c
  5161  001D28  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  5162  001D2C  EE20 F002          	lfsr	2,2
  5163  001D30  5001               	movf	RtccReadTime@pTm,w,c
  5164  001D32  26D9               	addwf	fsr2l,f,c
  5165  001D34  5002               	movf	RtccReadTime@pTm+1,w,c
  5166  001D36  22DA               	addwfc	fsr2h,f,c
  5167  001D38  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  5168  001D3C  EE20 F001          	lfsr	2,1
  5169  001D40  5001               	movf	RtccReadTime@pTm,w,c
  5170  001D42  26D9               	addwf	fsr2l,f,c
  5171  001D44  5002               	movf	RtccReadTime@pTm+1,w,c
  5172  001D46  22DA               	addwfc	fsr2h,f,c
  5173  001D48  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  5174                           
  5175                           ; BSR set to: 15
  5176  001D4C  0012               	return		;funcret
  5177  001D4E                     __end_of_RtccReadTime:
  5178                           	opt stack 0
  5179                           tblptru	equ	0xFF8
  5180                           tblptrh	equ	0xFF7
  5181                           tblptrl	equ	0xFF6
  5182                           tablat	equ	0xFF5
  5183                           prodh	equ	0xFF4
  5184                           prodl	equ	0xFF3
  5185                           intcon	equ	0xFF2
  5186                           intcon2	equ	0xFF1
  5187                           indf0	equ	0xFEF
  5188                           postinc0	equ	0xFEE
  5189                           fsr0h	equ	0xFEA
  5190                           fsr0l	equ	0xFE9
  5191                           wreg	equ	0xFE8
  5192                           postdec1	equ	0xFE5
  5193                           fsr1l	equ	0xFE1
  5194                           indf2	equ	0xFDF
  5195                           postinc2	equ	0xFDE
  5196                           postdec2	equ	0xFDD
  5197                           fsr2h	equ	0xFDA
  5198                           fsr2l	equ	0xFD9
  5199                           status	equ	0xFD8
  5200                           
  5201 ;; *************** function _RtccReadDate *****************
  5202 ;; Defined at:
  5203 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
  5204 ;; Parameters:    Size  Location     Type
  5205 ;;  pDt             2    0[COMRAM] PTR struct .
  5206 ;;		 -> RtccDate(4), 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  rTD0            8   10[COMRAM] struct .
  5209 ;;  rTD1            8    2[COMRAM] struct .
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      void 
  5212 ;; Registers used:
  5213 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5220 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;Total ram usage:       18 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_Read_RTC
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text26
  5233  001AE2                     __ptext26:
  5234                           	opt stack 0
  5235  001AE2                     _RtccReadDate:
  5236                           	opt stack 29
  5237                           
  5238                           ; BSR set to: 15
  5239                           ;incstack = 0
  5240  001AE2  0EFC               	movlw	252
  5241  001AE4  010F               	movlb	15	; () banked
  5242  001AE6  173F               	andwf	63,f,b	;volatile
  5243  001AE8  0E03               	movlw	3
  5244  001AEA  010F               	movlb	15	; () banked
  5245  001AEC  133F               	iorwf	63,f,b	;volatile
  5246                           
  5247                           ; BSR set to: 15
  5248  001AEE  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  5249                           
  5250                           ; BSR set to: 15
  5251  001AF2  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  5252                           
  5253                           ; BSR set to: 15
  5254  001AF6  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  5255                           
  5256                           ; BSR set to: 15
  5257  001AFA  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  5258                           
  5259                           ; BSR set to: 15
  5260  001AFE  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  5261                           
  5262                           ; BSR set to: 15
  5263  001B02  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  5264  001B06  0EFC               	movlw	252
  5265  001B08  010F               	movlb	15	; () banked
  5266  001B0A  173F               	andwf	63,f,b	;volatile
  5267  001B0C  0E03               	movlw	3
  5268  001B0E  010F               	movlb	15	; () banked
  5269  001B10  133F               	iorwf	63,f,b	;volatile
  5270                           
  5271                           ; BSR set to: 15
  5272  001B12  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  5273                           
  5274                           ; BSR set to: 15
  5275  001B16  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  5276                           
  5277                           ; BSR set to: 15
  5278  001B1A  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  5279                           
  5280                           ; BSR set to: 15
  5281  001B1E  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  5282                           
  5283                           ; BSR set to: 15
  5284  001B22  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  5285                           
  5286                           ; BSR set to: 15
  5287  001B26  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  5288  001B2A  5005               	movf	RtccReadDate@rTD1+2,w,c
  5289  001B2C  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  5290  001B2E  A4D8               	btfss	status,2,c
  5291  001B30  D7D8               	goto	_RtccReadDate
  5292                           
  5293                           ; BSR set to: 15
  5294                           
  5295                           ; BSR set to: 15
  5296  001B32  EE20 F001          	lfsr	2,1
  5297  001B36  5001               	movf	RtccReadDate@pDt,w,c
  5298  001B38  26D9               	addwf	fsr2l,f,c
  5299  001B3A  5002               	movf	RtccReadDate@pDt+1,w,c
  5300  001B3C  22DA               	addwfc	fsr2h,f,c
  5301  001B3E  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  5302  001B42  EE20 F002          	lfsr	2,2
  5303  001B46  5001               	movf	RtccReadDate@pDt,w,c
  5304  001B48  26D9               	addwf	fsr2l,f,c
  5305  001B4A  5002               	movf	RtccReadDate@pDt+1,w,c
  5306  001B4C  22DA               	addwfc	fsr2h,f,c
  5307  001B4E  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  5308                           
  5309                           ; BSR set to: 15
  5310  001B52  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  5311  001B56  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  5312  001B5A  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  5313                           
  5314                           ; BSR set to: 15
  5315  001B5E  EE20 F003          	lfsr	2,3
  5316  001B62  5001               	movf	RtccReadDate@pDt,w,c
  5317  001B64  26D9               	addwf	fsr2l,f,c
  5318  001B66  5002               	movf	RtccReadDate@pDt+1,w,c
  5319  001B68  22DA               	addwfc	fsr2h,f,c
  5320  001B6A  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  5321                           
  5322                           ; BSR set to: 15
  5323  001B6E  0012               	return		;funcret
  5324  001B70                     __end_of_RtccReadDate:
  5325                           	opt stack 0
  5326                           tblptru	equ	0xFF8
  5327                           tblptrh	equ	0xFF7
  5328                           tblptrl	equ	0xFF6
  5329                           tablat	equ	0xFF5
  5330                           prodh	equ	0xFF4
  5331                           prodl	equ	0xFF3
  5332                           intcon	equ	0xFF2
  5333                           intcon2	equ	0xFF1
  5334                           indf0	equ	0xFEF
  5335                           postinc0	equ	0xFEE
  5336                           fsr0h	equ	0xFEA
  5337                           fsr0l	equ	0xFE9
  5338                           wreg	equ	0xFE8
  5339                           postdec1	equ	0xFE5
  5340                           fsr1l	equ	0xFE1
  5341                           indf2	equ	0xFDF
  5342                           postinc2	equ	0xFDE
  5343                           postdec2	equ	0xFDD
  5344                           fsr2h	equ	0xFDA
  5345                           fsr2l	equ	0xFD9
  5346                           status	equ	0xFD8
  5347                           tblptru	equ	0xFF8
  5348                           tblptrh	equ	0xFF7
  5349                           tblptrl	equ	0xFF6
  5350                           tablat	equ	0xFF5
  5351                           prodh	equ	0xFF4
  5352                           prodl	equ	0xFF3
  5353                           intcon	equ	0xFF2
  5354                           intcon2	equ	0xFF1
  5355                           indf0	equ	0xFEF
  5356                           postinc0	equ	0xFEE
  5357                           fsr0h	equ	0xFEA
  5358                           fsr0l	equ	0xFE9
  5359                           wreg	equ	0xFE8
  5360                           postdec1	equ	0xFE5
  5361                           fsr1l	equ	0xFE1
  5362                           indf2	equ	0xFDF
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           fsr2h	equ	0xFDA
  5366                           fsr2l	equ	0xFD9
  5367                           status	equ	0xFD8
  5368                           
  5369                           	psect	rparam
  5370  0000                     tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           prodh	equ	0xFF4
  5375                           prodl	equ	0xFF3
  5376                           intcon	equ	0xFF2
  5377                           intcon2	equ	0xFF1
  5378                           indf0	equ	0xFEF
  5379                           postinc0	equ	0xFEE
  5380                           fsr0h	equ	0xFEA
  5381                           fsr0l	equ	0xFE9
  5382                           wreg	equ	0xFE8
  5383                           postdec1	equ	0xFE5
  5384                           fsr1l	equ	0xFE1
  5385                           indf2	equ	0xFDF
  5386                           postinc2	equ	0xFDE
  5387                           postdec2	equ	0xFDD
  5388                           fsr2h	equ	0xFDA
  5389                           fsr2l	equ	0xFD9
  5390                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    14
    Data        12
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      92
    BANK0           160      0      44
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[5]), STR_11(CODE[15]), STR_10(CODE[15]), STR_2(CODE[15]), 
		 -> STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[2]), STR_12(CODE[2]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[8]), buffer2(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _setHoraMinutoSegundo->_sprintf
    _setDiaSemana->_lcd_putrs
    _setDiaMesAnio->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Write_RTC->_RtccWriteDate
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   57742
                                             35 COMRAM     5     5      0
                           _Read_RTC
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                      _setDiaMesAnio
                       _setDiaSemana
               _setHoraMinutoSegundo
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   23731
                         _lcd_comand
                           _lcd_init
                      _setDiaMesAnio
                       _setDiaSemana
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (2) _setHoraMinutoSegundo                                 0     0      0    8187
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _setDiaSemana                                         1     1      0    5695
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (2) _setDiaMesAnio                                        0     0      0    8187
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             32    22     10    2492
                                             12 COMRAM    23    13     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _lcd_putrs                                            2     0      2    3778
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (4) _lcd_putc                                             1     1      0    2669
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_gotoxy                                           3     2      1    1917
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     932
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (5) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (6) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _setDiaMesAnio
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setDiaSemana
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
   _setHoraMinutoSegundo
     _lcd_gotoxy
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_putrs
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setup
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _setDiaMesAnio
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _setDiaSemana
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _setHoraMinutoSegundo
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      2C       5       27.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     28      5C       1       96.8%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88       6        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Sep 15 18:49:16 2017

                            _a 0035                              _b 0033                              _c 0031  
                            _i 0039                              _j 0037                              _k 002F  
               ?_lcd_send_byte 0003                   ___awdiv@sign 0006            ___wmul@multiplicand 0003  
                  lcd_comand@d 0005                   __CFG_CP0$OFF 000000                            l200 116A  
                          l201 1172                            l210 11EC                            l211 11F6  
                          l203 118C                            l300 1338                            l140 1572  
                          l212 1264                            l204 1196                            l221 128A  
                          l205 1204                            l310 13DE                            l302 134C  
                          l150 1660                            l142 15A0                            l222 1292  
                          l214 122A                            l303 1346                            l215 1232  
                          l207 11CA                            l320 1474                            l144 15D0  
                          l224 12AC                            l208 11D2                            l321 1498  
                          l225 12B6                            l217 124C                            l410 194A  
                          l330 14C4                            l314 13D8                            l146 1600  
                          l170 12F6                            l218 1256                            l251 1C22  
                          l315 1400                            l219 12C4                            l308 137A  
                          l148 1630                            l180 1062                            l172 1016  
                          l421 1A00                            l253 1C44                            l173 101A  
                          l246 1FA6                            l190 10D6                            l182 107C  
                          l247 1FA8                            l263 1E26                            l319 146C  
                          l191 1144                            l183 1086                            l175 1030  
                          l167 0F7E                            l416 199E                            l264 1DF6  
                          l184 10E4                            l176 1036                            l168 0FBC  
                          l417 19F6                            l329 1516                            l193 110A  
                          l169 0FF6                            l258 1FEE                            l266 1E02  
                          l194 1112                            l186 10AA                            l267 1E0E  
                          l187 10B2                            l179 105A                            l268 1E1A  
                          l284 1DCA                            l196 112C                            l381 1838  
                          l285 1DA2                            l197 1136                            l189 10CC  
                          l198 11A4                            l392 1904                            l624 2046  
                          l387 189C                            l299 131E                            l388 18FA  
                          l590 1B84                            l638 2036                            l591 1B94  
                          l593 1BB2                            l594 1BAA                            l852 1D6C  
                          l597 1BD2                            l853 1D64                            l773 201A  
                          l598 1BDC                            l862 1F1E                            l599 1BEA  
                          l863 1F16                            l856 1D8C                            l857 1D96  
                          l866 1F36                            l867 1F40                            _dia 0054  
                          _mes 0058                            wreg 000FE8                RtccReadDate@pDt 0001  
                  lcd_gotoxy@x 0006                    lcd_gotoxy@y 0005                           l2204 141C  
                         l2532 1C1A                           l2546 1C3C                           STR_1 0F0F  
                         STR_2 0F1E                           STR_3 0F55                           STR_4 0F2D  
                         STR_5 0F3D                           STR_6 0F4D                           STR_7 0F45  
                         STR_8 0F5D                           STR_9 0F35                           u1300 1CC4  
                         u1240 1C76                           u1400 1F22                           u1260 1C8E  
                         u1318 1CC6                           u1280 1CA8                           u1520 14A0  
                         u1258 1C78                           u1370 1D70                           u1530 14BE  
                         u1540 151E                           u1278 1C90                           u1550 1536  
                         u1470 1448                           u1560 1DC2                           u1298 1CAA  
                         u1570 1DEA                           u2507 113C                           u2517 119C  
                         u1567 1DB8                           u2607 1626                           u2527 11FC  
                         u1577 1DE0                           u2617 1656                           u2537 125C  
                         u1930 1C32                           u2627 1686                           u2547 12BC  
                         u2637 2038                           u2557 1308                           u2477 0FB2  
                         u2647 2048                           u2567 1568                           u2487 0FEC  
                         u2577 1596                           u2497 10DC                           u2587 15C6  
                         u2597 15F6                           u1990 1BB6               ?_lcd_send_nibble 0001  
                         _anio 005A                           _flag 02E0                           _main 0F6A  
                         _hora 0052                           fsr0h 000FEA                           indf0 000FEF  
                         fsr2h 000FDA                           fsr0l 000FE9                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                  __CFG_T1DIG$ON 000000  
                         prodh 000FF4                           prodl 000FF3                           start 0000  
                __CFG_IESO$OFF 000000               RtccReadDate@rTD0 000B               RtccReadDate@rTD1 0003  
                 ___param_bank 000000                RtccReadTime@pTm 0001                    _Delay1KTCYx 2034  
                __CFG_PLLDIV$1 000000                          ?_main 0001                __end_of___awdiv 1BF4  
                        STR_10 0F0F                          STR_11 0F1E                          STR_12 0F67  
                        STR_13 0F65                          STR_14 0F19          __size_of_Delay100TCYx 0010  
              ___awdiv@divisor 0003                __end_of___lwdiv 1DA0                __end_of___lwmod 1F4A  
              ___awdiv@counter 0005                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                 __CFG_FCMEN$OFF 000000                __end_of_dpowers 0F0B  
                        _mes_d 003E                          _mes_u 003F                __end_of_isdigit 2022  
                        _setup 1F4A                 __pbitbssCOMRAM 02E0                          tablat 000FF5  
         _setHoraMinutoSegundo 1E80                   lcd_putrs@ptr 0009                          status 000FD8  
              __end_of_sprintf 1544        __CFG_DSWDTOSC$INTOSCREF 000000                __initialization 1E3C  
                 _Delay100TCYx 2044                   __end_of_main 1314                ??_lcd_send_byte 0004  
             RtccReadTime@rTD0 000B               RtccReadTime@rTD1 0003               __end_of_Read_RTC 1AE2  
                       ??_main 0024                  __activetblptr 000002               __end_of_RtccWrOn 2034  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _EECON2 000FA7  
                       _ANCON0 000F48                         _ANCON1 000F49               ___awdiv@dividend 0001  
                       ?_setup 0001          ?_setHoraMinutoSegundo 0001                 __CFG_WDTEN$OFF 000000  
             RtccWriteDate@pDt 0001                         _RTCCFG 000F3F                 __CFG_WPCFG$OFF 000000  
               __CFG_WPDIS$OFF 000000                 __CFG_XINST$OFF 000000               __end_of_lcd_init 1C6A  
             __end_of_lcd_putc 1E3C                         ___wmul 1FBC                      ??___awdiv 0005  
               __CFG_STVREN$ON 000000                         _diasem 0056                         _anio_d 003B  
                       _anio_u 003C                      ??___lwdiv 0005                      ??___lwmod 000C  
                       _hora_d 0042                         _hora_u 0043                         clear_0 1E62  
                       clear_1 1E70               ___awdiv@quotient 0007                         _minuto 0050  
        __end_of_RtccWriteDate 190E          __end_of_RtccWriteTime 1A0A               RtccWriteTime@pTm 0001  
                 __pdataCOMRAM 0050                      ??_isdigit 0001                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                    ??_sprintf 0017                     __accesstop 0060        __end_of__initialization 1E76  
           __size_of_Write_RTC 0148                  ___rparam_used 000001                  ?_setDiaSemana 0001  
               __pcstackCOMRAM 0001                  __end_of_setup 1F8A                __CFG_DSWDTPS$G2 000000  
              __CFG_OSC$INTOSC 000000              lcd_gotoxy@address 0007             __size_of_lcd_putrs 0052  
       ??_setHoraMinutoSegundo 0024                   sprintf@width 0021                        ??_setup 0024  
                   __pbssBANK0 0060                      ?_Read_RTC 0001                     _dia_semana 003D  
    RtccWriteTime@tempHourWDay 000A                 ??_setDiaSemana 000B                      ?_RtccWrOn 0001  
               lcd_send_byte@n 0003                        ?___wmul 0001                  ?_RtccReadDate 0001  
                ?_RtccReadTime 0001                   ?_Delay1KTCYx 0001         __size_of_setDiaMesAnio 0044  
            __end_of_Write_RTC 17D8                     _lcd_comand 2054                     _lcd_gotoxy 1FE2  
                      _RTCVALH 000F99                        _RTCVALL 000F98                      ?_lcd_init 0001  
                    ?_lcd_putc 0001                     ??_Read_RTC 0013                        __Hparam 0000  
                      __Lparam 0000       __size_of_lcd_send_nibble 0076                     ??_RtccWrOn 0001  
               ??_RtccReadDate 0003                 ??_RtccReadTime 0003                        ___awdiv 1B70  
            __end_of_lcd_putrs 1DF2                __size_of___wmul 0026                        ___lwdiv 1D4E  
                      ___lwmod 1F08                   __psmallconst 0F00                    _RtccTimeVal 0029  
                      __pcinit 1E3C                        _fecha_d 0040                        _fecha_u 0041  
                      __ramtop 0F00                        __ptext0 0F6A                        __ptext1 1F4A  
                      __ptext2 1E80                        __ptext3 1544                        __ptext4 1EC4  
                      __ptext5 1314                        __ptext6 2004                        __ptext7 1FBC  
                      __ptext8 1F08                        __ptext9 1D4E                        _buffer2 0078  
                    _T1CONbits 000FCD                        _dpowers 0F01                        _isdigit 2004  
                      _segundo 002D                        _sprintf 1314                     ??_lcd_init 0005  
                   ??_lcd_putc 0008           end_of_initialization 1E76                  _setDiaMesAnio 1EC4  
         lcd_send_byte@address 0004                  __Lmediumconst 0000                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc2 000FDE  
        __end_of_lcd_send_byte 1FBC                      _PORTAbits 000F80               __CFG_DSBOREN$OFF 000000  
         __end_of_setDiaSemana 1690                    ?_lcd_comand 0001               __CFG_CPUDIV$OSC1 000000  
                    _TRISBbits 000F93                    ?_lcd_gotoxy 0005                _LCD_INIT_STRING 0F0B  
               ?_setDiaMesAnio 0001               __CFG_IOL1WAY$OFF 000000      RtccWriteDate@tempDayMonth 000A  
          __CFG_MSSP7B_EN$MSK7 000000               Delay100TCYx@unit 0001                 __end_of___wmul 1FE2  
                __pidataCOMRAM 2062      RtccWriteDate@tempHourWDay 000C              ??_lcd_send_nibble 0001  
         __size_of_Delay1KTCYx 0010               __CFG_DSWDTEN$OFF 000000            start_initialization 1E3C  
         __end_of_RtccReadDate 1B70           __end_of_RtccReadTime 1D4E           RtccWriteTime@wasAlrm 0006  
         RtccWriteTime@wasWrEn 0007         __size_of_RtccWriteDate 0136                RtccWriteDate@di 0003  
       __size_of_RtccWriteTime 00FC              __size_of_Read_RTC 00D8            __size_of_lcd_comand 000E  
          __size_of_lcd_gotoxy 0022                       ??___wmul 0005              __size_of_RtccWrOn 0012  
              RtccWriteTime@di 0003               __CFG_LPT1OSC$OFF 000000                    _ALRMCFGbits 000F91  
      __end_of_LCD_INIT_STRING 0F0F                    __pbssCOMRAM 0029          main@boton_seleccionar 0027  
                    _Write_RTC 1690                ??_setDiaMesAnio 0024                   _isdigit$1745 0002  
              Delay1KTCYx@unit 0001  __size_of_setHoraMinutoSegundo 0044              __size_of_lcd_init 0076  
                  sprintf@flag 001D              __size_of_lcd_putc 004A                    sprintf@prec 0020  
             ___lwdiv@dividend 0001                  ?_Delay100TCYx 0001                       ?___awdiv 0001  
                     ?___lwdiv 0001                       ?___lwmod 0008          __size_of_setDiaSemana 014C  
      RtccWriteTime@tempMinSec 0008                      _lcd_putrs 1DA0        main@boton_centro_estado 0025  
                _RtccWriteDate 17D8                    __smallconst 0F00                  _RtccWriteTime 190E  
                     ?_isdigit 0001           __CFG_RTCOSC$T1OSCREF 000000                     ?_Write_RTC 0001  
             ___lwdiv@quotient 0005                       ?_sprintf 000D                 __size_of_setup 0040  
             _RtccAlrmTimeDate 0068                 ___wmul@product 0005                       _LATBbits 000F8A  
                     _PIE3bits 000FA3                   _setDiaSemana 1544                      _segundo_d 0046  
               ??_Delay100TCYx 0001                      _segundo_u 0047               __CFG_WDTPS$32768 000000  
           RtccWriteDate@wasOn 0005             _Rtcc_read_TimeDate 0060                 ?_RtccWriteDate 0001  
                   ?_lcd_putrs 0009              ___wmul@multiplier 0001                 ?_RtccWriteTime 0001  
                    lcd_init@i 0005          __size_of_RtccReadDate 008E                   ??_lcd_comand 0005  
                    lcd_putc@c 0008          __size_of_RtccReadTime 006E                   ??_lcd_gotoxy 0006  
                  _INTCON2bits 000FF1                      copy_data0 1E50                       _Read_RTC 1A0A  
              _lcd_send_nibble 1C6A                       __Hrparam 0000                       _RtccDate 0048  
                     __Lrparam 0000                       _RtccTime 004C                       _RtccWrOn 2022  
           __end_of_lcd_comand 2062             __end_of_lcd_gotoxy 2004                   _RtccReadDate 1AE2  
             __size_of___awdiv 0084                   _RtccReadTime 1CE0               __size_of___lwdiv 0052  
             __size_of___lwmod 0042                   _RtccTimeDate 0070                     sprintf@val 001E  
             __size_of_isdigit 001E                ___lwdiv@divisor 0003                    ??_Write_RTC 000E  
              ___lwdiv@counter 0007                       __ptext10 1DA0                       __ptext11 1DF2  
                     __ptext20 1B70                       __ptext12 1FE2                       __ptext21 190E  
                     __ptext13 1BF4                       __ptext22 17D8                       __ptext14 2034  
                     __ptext23 2022                       __ptext15 2054                       __ptext24 1A0A  
                     __ptext16 1F8A                       __ptext25 1CE0                       __ptext17 1C6A  
                     __ptext26 1AE2                       __ptext18 2044                       __ptext19 1690  
                     _lcd_init 1BF4                       _lcd_putc 1DF2               __size_of_sprintf 0230  
       __size_of_lcd_send_byte 0032                  __size_of_main 03AA                       _minuto_d 0044  
                     _minuto_u 0045                  ??_Delay1KTCYx 0001                ??_RtccWriteDate 0004  
              ??_RtccWriteTime 0004                    ??_lcd_putrs 000B                    _OSCTUNEbits 000F9B  
                   _INTCONbits 000FF2             RtccWriteTime@wasOn 0005           __end_of_Delay100TCYx 2054  
                     isdigit@c 0003                      sprintf@ap 001B        __end_of_lcd_send_nibble 1CE0  
                    sprintf@sp 000D               ___lwmod@dividend 0008                     _OSCCONbits 000FD3  
        RtccWriteDate@tempYear 0007   __end_of_setHoraMinutoSegundo 1EC4                  _lcd_send_byte 1F8A  
                   _RTCCFGbits 000F3F                       sprintf@c 0023                       sprintf@f 000F  
              ___lwmod@divisor 000A            __end_of_Delay1KTCYx 2044                ___lwmod@counter 000C  
         RtccWriteDate@wasAlrm 0006           RtccWriteDate@wasWrEn 0009          __end_of_setDiaMesAnio 1F08  
        lcd_send_nibble@nibble 0002  
