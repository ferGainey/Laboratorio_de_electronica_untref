

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Oct 06 17:36:51 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 1.43
    48                           ; Generated 25/07/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F26J50 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  002578                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _minuto
    87  002578  001E               	dw	30
    88                           
    89                           ;initializer for _hora
    90  00257A  0012               	dw	18
    91                           
    92                           ;initializer for _dia
    93  00257C  0008               	dw	8
    94                           
    95                           ;initializer for _diasem
    96  00257E  0003               	dw	3
    97                           
    98                           ;initializer for _mes
    99  002580  0009               	dw	9
   100                           
   101                           ;initializer for _anio
   102  002582  000F               	dw	15
   103                           
   104                           	psect	idataBANK0
   105  0024C8                     __pidataBANK0:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _array_seleccionar
   109  0024C8  C8                 	db	low STR_1
   110  0024C9  0F                 	db	high STR_1
   111  0024CA  C3                 	db	low STR_2
   112  0024CB  0F                 	db	high STR_2
   113  0024CC  E6                 	db	low STR_3
   114  0024CD  0F                 	db	high STR_3
   115  0024CE  E1                 	db	low STR_4
   116  0024CF  0F                 	db	high STR_4
   117  0024D0  CD                 	db	low STR_5
   118  0024D1  0F                 	db	high STR_5
   119  0024D2  DC                 	db	low STR_6
   120  0024D3  0F                 	db	high STR_6
   121  0024D4  D7                 	db	low STR_7
   122  0024D5  0F                 	db	high STR_7
   123  0024D6  D2                 	db	low STR_8
   124  0024D7  0F                 	db	high STR_8
   125                           
   126                           ;initializer for _array_boton_seleccionar_accion_cafe
   127  0024D8  3F                 	db	low STR_15
   128  0024D9  0F                 	db	high STR_15
   129  0024DA  51                 	db	low STR_16
   130  0024DB  0F                 	db	high STR_16
   131  0024DC  63                 	db	low STR_17
   132  0024DD  0F                 	db	high STR_17
   133                           
   134                           ;initializer for _array_boton_seleccionar_tamanio_cafe
   135  0024DE  36                 	db	low STR_12
   136  0024DF  0F                 	db	high STR_12
   137  0024E0  5A                 	db	low STR_13
   138  0024E1  0F                 	db	high STR_13
   139  0024E2  48                 	db	low STR_14
   140  0024E3  0F                 	db	high STR_14
   141                           
   142                           ;initializer for _array_boton_seleccionar_tipo_cafe
   143  0024E4  6C                 	db	low STR_9
   144  0024E5  0F                 	db	high STR_9
   145  0024E6  A4                 	db	low STR_10
   146  0024E7  0F                 	db	high STR_10
   147  0024E8  94                 	db	low STR_11
   148  0024E9  0F                 	db	high STR_11
   149                           
   150                           	psect	smallconst
   151  000F00                     __psmallconst:
   152                           	opt stack 0
   153  000F00  00                 	db	0
   154  000F01                     _dpowers:
   155                           	opt stack 0
   156  000F01  0001               	dw	1
   157  000F03  000A               	dw	10
   158  000F05  0064               	dw	100
   159  000F07  03E8               	dw	1000
   160  000F09  2710               	dw	10000
   161  000F0B                     __end_of_dpowers:
   162                           	opt stack 0
   163  000F0B                     _LCD_INIT_STRING:
   164                           	opt stack 0
   165  000F0B  28                 	db	40
   166  000F0C  0C                 	db	12
   167  000F0D  01                 	db	1
   168  000F0E  06                 	db	6
   169  000F0F                     __end_of_LCD_INIT_STRING:
   170                           	opt stack 0
   171  0000                     _RTCCFG	set	3903
   172  0000                     _ANCON1	set	3913
   173  0000                     _ANCON0	set	3912
   174  0000                     _RTCCFGbits	set	3903
   175  0000                     _ALRMCFGbits	set	3985
   176  0000                     _EECON2	set	4007
   177  0000                     _INTCONbits	set	4082
   178  0000                     _RTCVALH	set	3993
   179  0000                     _RTCVALL	set	3992
   180  0000                     _TRISBbits	set	3987
   181  0000                     _LATBbits	set	3978
   182  0000                     _PORTAbits	set	3968
   183  0000                     _T1CONbits	set	4045
   184  0000                     _ADCON1	set	4033
   185  0000                     _ADCON0	set	4034
   186  0000                     _INTCON2bits	set	4081
   187  0000                     _TRISC	set	3988
   188  0000                     _TRISB	set	3987
   189  0000                     _TRISA	set	3986
   190  0000                     _OSCCONbits	set	4051
   191  0000                     _OSCTUNEbits	set	3995
   192  0000                     _PIE3bits	set	4003
   193  000F0F                     STR_25:
   194                           
   195                           ; BSR set to: 15
   196  000F0F  25                 	db	37
   197  000F10  30                 	db	48	;'0'
   198  000F11  32                 	db	50	;'2'
   199  000F12  75                 	db	117	;'u'
   200  000F13  2F                 	db	47
   201  000F14  25                 	db	37
   202  000F15  30                 	db	48	;'0'
   203  000F16  32                 	db	50	;'2'
   204  000F17  75                 	db	117	;'u'
   205  000F18  2F                 	db	47
   206  000F19  25                 	db	37
   207  000F1A  30                 	db	48	;'0'
   208  000F1B  32                 	db	50	;'2'
   209  000F1C  75                 	db	117	;'u'
   210  000F1D  00                 	db	0
   211  000F1E                     STR_26:
   212                           
   213                           ; BSR set to: 15
   214  000F1E  25                 	db	37
   215  000F1F  30                 	db	48	;'0'
   216  000F20  32                 	db	50	;'2'
   217  000F21  75                 	db	117	;'u'
   218  000F22  3A                 	db	58	;':'
   219  000F23  25                 	db	37
   220  000F24  30                 	db	48	;'0'
   221  000F25  32                 	db	50	;'2'
   222  000F26  75                 	db	117	;'u'
   223  000F27  3A                 	db	58	;':'
   224  000F28  25                 	db	37
   225  000F29  30                 	db	48	;'0'
   226  000F2A  32                 	db	50	;'2'
   227  000F2B  75                 	db	117	;'u'
   228  000F2C  00                 	db	0
   229  000F2D                     STR_28:
   230                           
   231                           ; BSR set to: 15
   232  000F2D  20                 	db	32
   233  000F2E  20                 	db	32
   234  000F2F  20                 	db	32
   235  000F30  20                 	db	32
   236  000F31  20                 	db	32
   237  000F32  20                 	db	32
   238  000F33  20                 	db	32
   239  000F34  20                 	db	32
   240  000F35  00                 	db	0
   241  000F36                     STR_12:
   242                           
   243                           ; BSR set to: 15
   244  000F36  43                 	db	67	;'C'
   245  000F37  68                 	db	104	;'h'
   246  000F38  69                 	db	105	;'i'
   247  000F39  63                 	db	99	;'c'
   248  000F3A  6F                 	db	111	;'o'
   249  000F3B  20                 	db	32
   250  000F3C  20                 	db	32
   251  000F3D  20                 	db	32
   252  000F3E  00                 	db	0
   253  000F3F                     STR_15:
   254                           
   255                           ; BSR set to: 15
   256  000F3F  50                 	db	80	;'P'
   257  000F40  65                 	db	101	;'e'
   258  000F41  64                 	db	100	;'d'
   259  000F42  69                 	db	105	;'i'
   260  000F43  72                 	db	114	;'r'
   261  000F44  20                 	db	32
   262  000F45  20                 	db	32
   263  000F46  20                 	db	32
   264  000F47  00                 	db	0
   265  000F48                     STR_14:
   266                           
   267                           ; BSR set to: 15
   268  000F48  47                 	db	71	;'G'
   269  000F49  72                 	db	114	;'r'
   270  000F4A  61                 	db	97	;'a'
   271  000F4B  6E                 	db	110	;'n'
   272  000F4C  64                 	db	100	;'d'
   273  000F4D  65                 	db	101	;'e'
   274  000F4E  20                 	db	32
   275  000F4F  20                 	db	32
   276  000F50  00                 	db	0
   277  000F51                     STR_16:
   278                           
   279                           ; BSR set to: 15
   280  000F51  52                 	db	82	;'R'
   281  000F52  65                 	db	101	;'e'
   282  000F53  70                 	db	112	;'p'
   283  000F54  6F                 	db	111	;'o'
   284  000F55  72                 	db	114	;'r'
   285  000F56  74                 	db	116	;'t'
   286  000F57  65                 	db	101	;'e'
   287  000F58  20                 	db	32
   288  000F59  00                 	db	0
   289  000F5A                     STR_13:
   290                           
   291                           ; BSR set to: 15
   292  000F5A  4D                 	db	77	;'M'
   293  000F5B  65                 	db	101	;'e'
   294  000F5C  64                 	db	100	;'d'
   295  000F5D  69                 	db	105	;'i'
   296  000F5E  61                 	db	97	;'a'
   297  000F5F  6E                 	db	110	;'n'
   298  000F60  6F                 	db	111	;'o'
   299  000F61  20                 	db	32
   300  000F62  00                 	db	0
   301  000F63                     STR_17:
   302                           
   303                           ; BSR set to: 15
   304  000F63  54                 	db	84	;'T'
   305  000F64  65                 	db	101	;'e'
   306  000F65  72                 	db	114	;'r'
   307  000F66  6D                 	db	109	;'m'
   308  000F67  69                 	db	105	;'i'
   309  000F68  6E                 	db	110	;'n'
   310  000F69  61                 	db	97	;'a'
   311  000F6A  72                 	db	114	;'r'
   312  000F6B  00                 	db	0
   313  000F6C                     STR_9:
   314                           
   315                           ; BSR set to: 15
   316  000F6C  53                 	db	83	;'S'
   317  000F6D  6F                 	db	111	;'o'
   318  000F6E  6C                 	db	108	;'l'
   319  000F6F  6F                 	db	111	;'o'
   320  000F70  20                 	db	32
   321  000F71  20                 	db	32
   322  000F72  20                 	db	32
   323  000F73  00                 	db	0
   324  000F74                     STR_19:
   325                           
   326                           ; BSR set to: 15
   327  000F74  4C                 	db	76	;'L'
   328  000F75  75                 	db	117	;'u'
   329  000F76  6E                 	db	110	;'n'
   330  000F77  65                 	db	101	;'e'
   331  000F78  73                 	db	115	;'s'
   332  000F79  20                 	db	32
   333  000F7A  20                 	db	32
   334  000F7B  00                 	db	0
   335  000F7C                     STR_24:
   336                           
   337                           ; BSR set to: 15
   338  000F7C  53                 	db	83	;'S'
   339  000F7D  61                 	db	97	;'a'
   340  000F7E  62                 	db	98	;'b'
   341  000F7F  61                 	db	97	;'a'
   342  000F80  64                 	db	100	;'d'
   343  000F81  6F                 	db	111	;'o'
   344  000F82  20                 	db	32
   345  000F83  00                 	db	0
   346  000F84                     STR_20:
   347                           
   348                           ; BSR set to: 15
   349  000F84  4D                 	db	77	;'M'
   350  000F85  61                 	db	97	;'a'
   351  000F86  72                 	db	114	;'r'
   352  000F87  74                 	db	116	;'t'
   353  000F88  65                 	db	101	;'e'
   354  000F89  73                 	db	115	;'s'
   355  000F8A  20                 	db	32
   356  000F8B  00                 	db	0
   357  000F8C                     STR_22:
   358                           
   359                           ; BSR set to: 15
   360  000F8C  4A                 	db	74	;'J'
   361  000F8D  75                 	db	117	;'u'
   362  000F8E  65                 	db	101	;'e'
   363  000F8F  76                 	db	118	;'v'
   364  000F90  65                 	db	101	;'e'
   365  000F91  73                 	db	115	;'s'
   366  000F92  20                 	db	32
   367  000F93  00                 	db	0
   368  000F94                     STR_11:
   369                           
   370                           ; BSR set to: 15
   371  000F94  43                 	db	67	;'C'
   372  000F95  2F                 	db	47
   373  000F96  4C                 	db	76	;'L'
   374  000F97  65                 	db	101	;'e'
   375  000F98  63                 	db	99	;'c'
   376  000F99  68                 	db	104	;'h'
   377  000F9A  65                 	db	101	;'e'
   378  000F9B  00                 	db	0
   379  000F9C                     STR_21:
   380                           
   381                           ; BSR set to: 15
   382  000F9C  4D                 	db	77	;'M'
   383  000F9D  69                 	db	105	;'i'
   384  000F9E  65                 	db	101	;'e'
   385  000F9F  72                 	db	114	;'r'
   386  000FA0  63                 	db	99	;'c'
   387  000FA1  6F                 	db	111	;'o'
   388  000FA2  6C                 	db	108	;'l'
   389  000FA3  00                 	db	0
   390  000FA4                     STR_10:
   391                           
   392                           ; BSR set to: 15
   393  000FA4  43                 	db	67	;'C'
   394  000FA5  6F                 	db	111	;'o'
   395  000FA6  72                 	db	114	;'r'
   396  000FA7  74                 	db	116	;'t'
   397  000FA8  61                 	db	97	;'a'
   398  000FA9  64                 	db	100	;'d'
   399  000FAA  6F                 	db	111	;'o'
   400  000FAB  00                 	db	0
   401  000FAC                     STR_18:
   402                           
   403                           ; BSR set to: 15
   404  000FAC  44                 	db	68	;'D'
   405  000FAD  6F                 	db	111	;'o'
   406  000FAE  6D                 	db	109	;'m'
   407  000FAF  69                 	db	105	;'i'
   408  000FB0  6E                 	db	110	;'n'
   409  000FB1  67                 	db	103	;'g'
   410  000FB2  6F                 	db	111	;'o'
   411  000FB3  00                 	db	0
   412  000FB4                     STR_23:
   413                           
   414                           ; BSR set to: 15
   415  000FB4  56                 	db	86	;'V'
   416  000FB5  69                 	db	105	;'i'
   417  000FB6  65                 	db	101	;'e'
   418  000FB7  72                 	db	114	;'r'
   419  000FB8  6E                 	db	110	;'n'
   420  000FB9  65                 	db	101	;'e'
   421  000FBA  73                 	db	115	;'s'
   422  000FBB  00                 	db	0
   423  000FBC                     STR_34:
   424                           
   425                           ; BSR set to: 15
   426  000FBC  28                 	db	40
   427  000FBD  6E                 	db	110	;'n'
   428  000FBE  75                 	db	117	;'u'
   429  000FBF  6C                 	db	108	;'l'
   430  000FC0  6C                 	db	108	;'l'
   431  000FC1  29                 	db	41
   432  000FC2  00                 	db	0
   433  000FC3                     STR_2:
   434                           
   435                           ; BSR set to: 15
   436  000FC3  20                 	db	32
   437  000FC4  44                 	db	68	;'D'
   438  000FC5  69                 	db	105	;'i'
   439  000FC6  61                 	db	97	;'a'
   440  000FC7  00                 	db	0
   441  000FC8                     STR_1:
   442                           
   443                           ; BSR set to: 15
   444  000FC8  4E                 	db	78	;'N'
   445  000FC9  64                 	db	100	;'d'
   446  000FCA  69                 	db	105	;'i'
   447  000FCB  61                 	db	97	;'a'
   448  000FCC  00                 	db	0
   449  000FCD                     STR_5:
   450                           
   451                           ; BSR set to: 15
   452  000FCD  48                 	db	72	;'H'
   453  000FCE  6F                 	db	111	;'o'
   454  000FCF  72                 	db	114	;'r'
   455  000FD0  61                 	db	97	;'a'
   456  000FD1  00                 	db	0
   457  000FD2                     STR_8:
   458                           
   459                           ; BSR set to: 15
   460  000FD2  43                 	db	67	;'C'
   461  000FD3  61                 	db	97	;'a'
   462  000FD4  66                 	db	102	;'f'
   463  000FD5  65                 	db	101	;'e'
   464  000FD6  00                 	db	0
   465  000FD7                     STR_7:
   466                           
   467                           ; BSR set to: 15
   468  000FD7  20                 	db	32
   469  000FD8  53                 	db	83	;'S'
   470  000FD9  65                 	db	101	;'e'
   471  000FDA  67                 	db	103	;'g'
   472  000FDB  00                 	db	0
   473  000FDC                     STR_6:
   474                           
   475                           ; BSR set to: 15
   476  000FDC  20                 	db	32
   477  000FDD  4D                 	db	77	;'M'
   478  000FDE  69                 	db	105	;'i'
   479  000FDF  6E                 	db	110	;'n'
   480  000FE0  00                 	db	0
   481  000FE1                     STR_4:
   482                           
   483                           ; BSR set to: 15
   484  000FE1  41                 	db	65	;'A'
   485  000FE2  6E                 	db	110	;'n'
   486  000FE3  69                 	db	105	;'i'
   487  000FE4  6F                 	db	111	;'o'
   488  000FE5  00                 	db	0
   489  000FE6                     STR_3:
   490                           
   491                           ; BSR set to: 15
   492  000FE6  20                 	db	32
   493  000FE7  4D                 	db	77	;'M'
   494  000FE8  65                 	db	101	;'e'
   495  000FE9  73                 	db	115	;'s'
   496  000FEA  00                 	db	0
   497  000FEB                     STR_30:
   498                           
   499                           ; BSR set to: 15
   500  000FEB  25                 	db	37
   501  000FEC  30                 	db	48	;'0'
   502  000FED  31                 	db	49	;'1'
   503  000FEE  75                 	db	117	;'u'
   504  000FEF  00                 	db	0
   505  000FF0                     STR_27:
   506                           
   507                           ; BSR set to: 15
   508  000FF0  45                 	db	69	;'E'
   509  000FF1  64                 	db	100	;'d'
   510  000FF2  74                 	db	116	;'t'
   511  000FF3  00                 	db	0
   512  000FF4                     STR_29:
   513                           
   514                           ; BSR set to: 15
   515  000FF4  25                 	db	37
   516  000FF5  73                 	db	115	;'s'
   517  000FF6  00                 	db	0
   518  0000                     
   519                           ; #config settings
   520  000FF7  00                 	db	0	; dummy byte at the end
   521  0000                     
   522                           	psect	cinit
   523  0021B2                     __pcinit:
   524                           	opt stack 0
   525  0021B2                     start_initialization:
   526                           	opt stack 0
   527  0021B2                     __initialization:
   528                           	opt stack 0
   529                           
   530                           ; Initialize objects allocated to BANK0 (34 bytes)
   531                           ; load TBLPTR registers with __pidataBANK0
   532  0021B2  0EC8               	movlw	low __pidataBANK0
   533  0021B4  6EF6               	movwf	tblptrl,c
   534  0021B6  0E24               	movlw	high __pidataBANK0
   535  0021B8  6EF7               	movwf	tblptrh,c
   536  0021BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   537  0021BC  6EF8               	movwf	tblptru,c
   538  0021BE  EE00  F0D2         	lfsr	0,__pdataBANK0
   539  0021C2  EE10 F022          	lfsr	1,34
   540  0021C6                     copy_data0:
   541  0021C6  0009               	tblrd		*+
   542  0021C8  CFF5 FFEE          	movff	tablat,postinc0
   543  0021CC  50E5               	movf	postdec1,w,c
   544  0021CE  50E1               	movf	fsr1l,w,c
   545  0021D0  E1FA               	bnz	copy_data0
   546                           
   547                           ; Initialize objects allocated to COMRAM (12 bytes)
   548                           ; load TBLPTR registers with __pidataCOMRAM
   549  0021D2  0E78               	movlw	low __pidataCOMRAM
   550  0021D4  6EF6               	movwf	tblptrl,c
   551  0021D6  0E25               	movlw	high __pidataCOMRAM
   552  0021D8  6EF7               	movwf	tblptrh,c
   553  0021DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   554  0021DC  6EF8               	movwf	tblptru,c
   555  0021DE  EE00  F053         	lfsr	0,__pdataCOMRAM
   556  0021E2  EE10 F00C          	lfsr	1,12
   557  0021E6                     copy_data1:
   558  0021E6  0009               	tblrd		*+
   559  0021E8  CFF5 FFEE          	movff	tablat,postinc0
   560  0021EC  50E5               	movf	postdec1,w,c
   561  0021EE  50E1               	movf	fsr1l,w,c
   562  0021F0  E1FA               	bnz	copy_data1
   563                           
   564                           ; Clear objects allocated to BANK1 (40 bytes)
   565  0021F2  EE01  F000         	lfsr	0,__pbssBANK1
   566  0021F6  0E28               	movlw	40
   567  0021F8                     clear_0:
   568  0021F8  6AEE               	clrf	postinc0,c
   569  0021FA  06E8               	decf	wreg,f,c
   570  0021FC  E1FD               	bnz	clear_0
   571                           
   572                           ; Clear objects allocated to BANK0 (114 bytes)
   573  0021FE  EE00  F060         	lfsr	0,__pbssBANK0
   574  002202  0E72               	movlw	114
   575  002204                     clear_1:
   576  002204  6AEE               	clrf	postinc0,c
   577  002206  06E8               	decf	wreg,f,c
   578  002208  E1FD               	bnz	clear_1
   579                           
   580                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   581  00220A  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   582                           
   583                           ; Clear objects allocated to COMRAM (27 bytes)
   584  00220C  EE00  F038         	lfsr	0,__pbssCOMRAM
   585  002210  0E1B               	movlw	27
   586  002212                     clear_2:
   587  002212  6AEE               	clrf	postinc0,c
   588  002214  06E8               	decf	wreg,f,c
   589  002216  E1FD               	bnz	clear_2
   590  002218                     end_of_initialization:
   591                           	opt stack 0
   592  002218                     __end_of__initialization:
   593                           	opt stack 0
   594  002218  0E00               	movlw	low (__Lmediumconst shr (0+16))
   595  00221A  6EF8               	movwf	tblptru,c
   596  00221C  0100               	movlb	0
   597  00221E  EFFC  F007         	goto	_main	;jump to C main() function
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           postdec1	equ	0xFE5
   605                           fsr1l	equ	0xFE1
   606                           
   607                           	psect	bitbssCOMRAM
   608  0002F8                     __pbitbssCOMRAM:
   609                           	opt stack 0
   610  0002F8                     _flag:
   611                           	opt stack 0
   612  0002F8                     	ds	1
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           	psect	bssCOMRAM
   623  000038                     __pbssCOMRAM:
   624                           	opt stack 0
   625  000038                     _segundo:
   626                           	opt stack 0
   627  000038                     	ds	2
   628  00003A                     _j:
   629                           	opt stack 0
   630  00003A                     	ds	2
   631  00003C                     _i:
   632                           	opt stack 0
   633  00003C                     	ds	2
   634  00003E                     _anio_d:
   635                           	opt stack 0
   636  00003E                     	ds	1
   637  00003F                     _anio_u:
   638                           	opt stack 0
   639  00003F                     	ds	1
   640  000040                     _dia_semana:
   641                           	opt stack 0
   642  000040                     	ds	1
   643  000041                     _mes_d:
   644                           	opt stack 0
   645  000041                     	ds	1
   646  000042                     _mes_u:
   647                           	opt stack 0
   648  000042                     	ds	1
   649  000043                     _fecha_d:
   650                           	opt stack 0
   651  000043                     	ds	1
   652  000044                     _fecha_u:
   653                           	opt stack 0
   654  000044                     	ds	1
   655  000045                     _hora_d:
   656                           	opt stack 0
   657  000045                     	ds	1
   658  000046                     _hora_u:
   659                           	opt stack 0
   660  000046                     	ds	1
   661  000047                     _minuto_d:
   662                           	opt stack 0
   663  000047                     	ds	1
   664  000048                     _minuto_u:
   665                           	opt stack 0
   666  000048                     	ds	1
   667  000049                     _segundo_d:
   668                           	opt stack 0
   669  000049                     	ds	1
   670  00004A                     _segundo_u:
   671                           	opt stack 0
   672  00004A                     	ds	1
   673  00004B                     _RtccDate:
   674                           	opt stack 0
   675  00004B                     	ds	4
   676  00004F                     _RtccTime:
   677                           	opt stack 0
   678  00004F                     	ds	4
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           postdec1	equ	0xFE5
   686                           fsr1l	equ	0xFE1
   687                           
   688                           	psect	dataCOMRAM
   689  000053                     __pdataCOMRAM:
   690                           	opt stack 0
   691  000053                     _minuto:
   692                           	opt stack 0
   693  000053                     	ds	2
   694  000055                     _hora:
   695                           	opt stack 0
   696  000055                     	ds	2
   697  000057                     _dia:
   698                           	opt stack 0
   699  000057                     	ds	2
   700  000059                     _diasem:
   701                           	opt stack 0
   702  000059                     	ds	2
   703  00005B                     _mes:
   704                           	opt stack 0
   705  00005B                     	ds	2
   706  00005D                     _anio:
   707                           	opt stack 0
   708  00005D                     	ds	2
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           postdec1	equ	0xFE5
   716                           fsr1l	equ	0xFE1
   717                           
   718                           	psect	bssBANK0
   719  000060                     __pbssBANK0:
   720                           	opt stack 0
   721  000060                     _Rtcc_read_TimeDate:
   722                           	opt stack 0
   723  000060                     	ds	8
   724  000068                     _RtccAlrmTimeDate:
   725                           	opt stack 0
   726  000068                     	ds	8
   727  000070                     _RtccTimeDate:
   728                           	opt stack 0
   729  000070                     	ds	8
   730  000078                     _RtccTimeVal:
   731                           	opt stack 0
   732  000078                     	ds	4
   733  00007C                     _k:
   734                           	opt stack 0
   735  00007C                     	ds	2
   736  00007E                     _c:
   737                           	opt stack 0
   738  00007E                     	ds	2
   739  000080                     _b:
   740                           	opt stack 0
   741  000080                     	ds	2
   742  000082                     _a:
   743                           	opt stack 0
   744  000082                     	ds	2
   745  000084                     _buffer4:
   746                           	opt stack 0
   747  000084                     	ds	20
   748  000098                     _buffer3:
   749                           	opt stack 0
   750  000098                     	ds	20
   751  0000AC                     _buffer2:
   752                           	opt stack 0
   753  0000AC                     	ds	20
   754  0000C0                     _reporte_cafe:
   755                           	opt stack 0
   756  0000C0                     	ds	18
   757                           tblptru	equ	0xFF8
   758                           tblptrh	equ	0xFF7
   759                           tblptrl	equ	0xFF6
   760                           tablat	equ	0xFF5
   761                           postinc0	equ	0xFEE
   762                           wreg	equ	0xFE8
   763                           postdec1	equ	0xFE5
   764                           fsr1l	equ	0xFE1
   765                           
   766                           	psect	dataBANK0
   767  0000D2                     __pdataBANK0:
   768                           	opt stack 0
   769  0000D2                     _array_seleccionar:
   770                           	opt stack 0
   771  0000D2                     	ds	16
   772  0000E2                     _array_boton_seleccionar_accion_cafe:
   773                           	opt stack 0
   774  0000E2                     	ds	6
   775  0000E8                     _array_boton_seleccionar_tamanio_cafe:
   776                           	opt stack 0
   777  0000E8                     	ds	6
   778  0000EE                     _array_boton_seleccionar_tipo_cafe:
   779                           	opt stack 0
   780  0000EE                     	ds	6
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           postinc0	equ	0xFEE
   786                           wreg	equ	0xFE8
   787                           postdec1	equ	0xFE5
   788                           fsr1l	equ	0xFE1
   789                           
   790                           	psect	bssBANK1
   791  000100                     __pbssBANK1:
   792                           	opt stack 0
   793  000100                     _buffer1:
   794                           	opt stack 0
   795  000100                     	ds	20
   796  000114                     _buffer5:
   797                           	opt stack 0
   798  000114                     	ds	20
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           postdec1	equ	0xFE5
   806                           fsr1l	equ	0xFE1
   807                           
   808                           	psect	cstackCOMRAM
   809  000001                     __pcstackCOMRAM:
   810                           	opt stack 0
   811  000001                     ??_isdigit:
   812  000001                     ??_lcd_send_nibble:
   813  000001                     ?___wmul:
   814                           	opt stack 0
   815  000001                     ?___awdiv:
   816                           	opt stack 0
   817  000001                     ?___lwdiv:
   818                           	opt stack 0
   819  000001                     Delay100TCYx@unit:
   820                           	opt stack 0
   821  000001                     Delay1KTCYx@unit:
   822                           	opt stack 0
   823  000001                     RtccReadDate@pDt:
   824                           	opt stack 0
   825  000001                     RtccReadTime@pTm:
   826                           	opt stack 0
   827  000001                     RtccWriteDate@pDt:
   828                           	opt stack 0
   829  000001                     RtccWriteTime@pTm:
   830                           	opt stack 0
   831  000001                     ___wmul@multiplier:
   832                           	opt stack 0
   833  000001                     ___awdiv@dividend:
   834                           	opt stack 0
   835  000001                     ___lwdiv@dividend:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x0
   839  000001                     	ds	1
   840  000002                     lcd_send_nibble@nibble:
   841                           	opt stack 0
   842  000002                     _isdigit$1783:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x1
   846  000002                     	ds	1
   847  000003                     lcd_send_byte@n:
   848                           	opt stack 0
   849  000003                     RtccWriteDate@di:
   850                           	opt stack 0
   851  000003                     RtccWriteTime@di:
   852                           	opt stack 0
   853  000003                     isdigit@c:
   854                           	opt stack 0
   855  000003                     ___wmul@multiplicand:
   856                           	opt stack 0
   857  000003                     ___awdiv@divisor:
   858                           	opt stack 0
   859  000003                     ___lwdiv@divisor:
   860                           	opt stack 0
   861  000003                     RtccReadDate@rTD1:
   862                           	opt stack 0
   863  000003                     RtccReadTime@rTD1:
   864                           	opt stack 0
   865                           
   866                           ; 8 bytes @ 0x2
   867  000003                     	ds	1
   868  000004                     lcd_send_byte@address:
   869                           	opt stack 0
   870                           
   871                           ; 1 bytes @ 0x3
   872  000004                     	ds	1
   873  000005                     lcd_init@i:
   874                           	opt stack 0
   875  000005                     lcd_gotoxy@y:
   876                           	opt stack 0
   877  000005                     lcd_comand@d:
   878                           	opt stack 0
   879  000005                     RtccWriteDate@wasOn:
   880                           	opt stack 0
   881  000005                     RtccWriteTime@wasOn:
   882                           	opt stack 0
   883  000005                     ___awdiv@counter:
   884                           	opt stack 0
   885  000005                     ___wmul@product:
   886                           	opt stack 0
   887  000005                     ___lwdiv@quotient:
   888                           	opt stack 0
   889                           
   890                           ; 2 bytes @ 0x4
   891  000005                     	ds	1
   892  000006                     lcd_gotoxy@x:
   893                           	opt stack 0
   894  000006                     RtccWriteDate@wasAlrm:
   895                           	opt stack 0
   896  000006                     RtccWriteTime@wasAlrm:
   897                           	opt stack 0
   898  000006                     ___awdiv@sign:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x5
   902  000006                     	ds	1
   903  000007                     lcd_gotoxy@address:
   904                           	opt stack 0
   905  000007                     RtccWriteTime@wasWrEn:
   906                           	opt stack 0
   907  000007                     ___lwdiv@counter:
   908                           	opt stack 0
   909  000007                     RtccWriteDate@tempYear:
   910                           	opt stack 0
   911  000007                     ___awdiv@quotient:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x6
   915  000007                     	ds	1
   916  000008                     ?___lwmod:
   917                           	opt stack 0
   918  000008                     lcd_putc@c:
   919                           	opt stack 0
   920  000008                     RtccWriteTime@tempMinSec:
   921                           	opt stack 0
   922  000008                     ___lwmod@dividend:
   923                           	opt stack 0
   924                           
   925                           ; 2 bytes @ 0x7
   926  000008                     	ds	1
   927  000009                     RtccWriteDate@wasWrEn:
   928                           	opt stack 0
   929  000009                     lcd_putrs@ptr:
   930                           	opt stack 0
   931                           
   932                           ; 2 bytes @ 0x8
   933  000009                     	ds	1
   934  00000A                     RtccWriteDate@tempDayMonth:
   935                           	opt stack 0
   936  00000A                     RtccWriteTime@tempHourWDay:
   937                           	opt stack 0
   938  00000A                     ___lwmod@divisor:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x9
   942  00000A                     	ds	1
   943  00000B                     ??_setDiaSemana:
   944  00000B                     RtccReadDate@rTD0:
   945                           	opt stack 0
   946  00000B                     RtccReadTime@rTD0:
   947                           	opt stack 0
   948                           
   949                           ; 8 bytes @ 0xA
   950  00000B                     	ds	1
   951  00000C                     ___lwmod@counter:
   952                           	opt stack 0
   953  00000C                     RtccWriteDate@tempHourWDay:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0xB
   957  00000C                     	ds	1
   958  00000D                     ?_sprintf:
   959                           	opt stack 0
   960  00000D                     sprintf@sp:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0xC
   964  00000D                     	ds	1
   965  00000E                     
   966                           ; 1 bytes @ 0xD
   967  00000E                     	ds	1
   968  00000F                     sprintf@f:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0xE
   972  00000F                     	ds	4
   973  000013                     
   974                           ; 1 bytes @ 0x12
   975  000013                     	ds	4
   976  000017                     ??_sprintf:
   977                           
   978                           ; 1 bytes @ 0x16
   979  000017                     	ds	4
   980  00001B                     sprintf@flag:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x1A
   984  00001B                     	ds	1
   985  00001C                     sprintf@val:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x1B
   989  00001C                     	ds	2
   990  00001E                     sprintf@prec:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x1D
   994  00001E                     	ds	1
   995  00001F                     sprintf@ap:
   996                           	opt stack 0
   997                           
   998                           ; 2 bytes @ 0x1E
   999  00001F                     	ds	2
  1000  000021                     sprintf@cp:
  1001                           	opt stack 0
  1002                           
  1003                           ; 2 bytes @ 0x20
  1004  000021                     	ds	2
  1005  000023                     sprintf@len:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x22
  1009  000023                     	ds	2
  1010  000025                     sprintf@width:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x24
  1014  000025                     	ds	2
  1015  000027                     sprintf@c:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x26
  1019  000027                     	ds	1
  1020  000028                     ??_main:
  1021                           
  1022                           ; 1 bytes @ 0x27
  1023  000028                     	ds	2
  1024  00002A                     main@a:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x29
  1028  00002A                     	ds	2
  1029  00002C                     main@boton_centro_estado:
  1030                           	opt stack 0
  1031                           
  1032                           ; 2 bytes @ 0x2B
  1033  00002C                     	ds	2
  1034  00002E                     main@tipo:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x2D
  1038  00002E                     	ds	2
  1039  000030                     main@tamanio:
  1040                           	opt stack 0
  1041                           
  1042                           ; 2 bytes @ 0x2F
  1043  000030                     	ds	2
  1044  000032                     main@boton_seleccionar_cafe:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x31
  1048  000032                     	ds	2
  1049  000034                     main@accion:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x33
  1053  000034                     	ds	2
  1054  000036                     main@boton_seleccionar:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x35
  1058  000036                     	ds	2
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1l	equ	0xFE1
  1067                           
  1068 ;;
  1069 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1070 ;;
  1071 ;; *************** function _main *****************
  1072 ;; Defined at:
  1073 ;;		line 138 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  a               2   41[COMRAM] int 
  1078 ;;  accion          2   51[COMRAM] int 
  1079 ;;  boton_selecc    2   49[COMRAM] int 
  1080 ;;  tamanio         2   47[COMRAM] int 
  1081 ;;  tipo            2   45[COMRAM] int 
  1082 ;;  boton_selecc    2   53[COMRAM] int 
  1083 ;;  boton_centro    2   43[COMRAM] int 
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  2  187[None  ] int 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1096 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1097 ;;Total ram usage:       16 bytes
  1098 ;; Hardware stack levels required when called:    8
  1099 ;; This function calls:
  1100 ;;		_Read_RTC
  1101 ;;		_Write_RTC
  1102 ;;		___wmul
  1103 ;;		_lcd_gotoxy
  1104 ;;		_lcd_putrs
  1105 ;;		_setRelojDigital
  1106 ;;		_setup
  1107 ;;		_sprintf
  1108 ;; This function is called by:
  1109 ;;		Startup code after reset
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text0
  1114  000FF8                     __ptext0:
  1115                           	opt stack 0
  1116  000FF8                     _main:
  1117                           	opt stack 23
  1118                           
  1119                           ;main.c: 139: setup();
  1120                           
  1121                           ;incstack = 0
  1122  000FF8  EC18  F012         	call	_setup	;wreg free
  1123                           
  1124                           ;main.c: 145: int boton_centro_estado = 0;
  1125  000FFC  0E00               	movlw	0
  1126  000FFE  6E2D               	movwf	main@boton_centro_estado+1,c
  1127  001000  0E00               	movlw	0
  1128  001002  6E2C               	movwf	main@boton_centro_estado,c
  1129                           
  1130                           ;main.c: 157: int boton_seleccionar = 0;
  1131  001004  0E00               	movlw	0
  1132  001006  6E37               	movwf	main@boton_seleccionar+1,c
  1133  001008  0E00               	movlw	0
  1134  00100A  6E36               	movwf	main@boton_seleccionar,c
  1135  00100C                     
  1136                           ;main.c: 173: Read_RTC();
  1137  00100C  EC30  F00F         	call	_Read_RTC	;wreg free
  1138                           
  1139                           ;main.c: 175: if (PORTAbits.RA5 == 0 && boton_centro_estado == 0) {
  1140  001010  BA80               	btfsc	3968,5,c	;volatile
  1141  001012  D01B               	goto	l189
  1142  001014  502C               	movf	main@boton_centro_estado,w,c
  1143  001016  102D               	iorwf	main@boton_centro_estado+1,w,c
  1144  001018  A4D8               	btfss	status,2,c
  1145  00101A  D017               	goto	l189
  1146                           
  1147                           ;main.c: 176: boton_centro_estado = 1;
  1148  00101C  0E00               	movlw	0
  1149  00101E  6E2D               	movwf	main@boton_centro_estado+1,c
  1150  001020  0E01               	movlw	1
  1151  001022  6E2C               	movwf	main@boton_centro_estado,c
  1152                           
  1153                           ;main.c: 177: lcd_gotoxy(10, 2);
  1154  001024  0E02               	movlw	2
  1155  001026  6E05               	movwf	lcd_gotoxy@y,c
  1156  001028  0E0A               	movlw	10
  1157  00102A  EC75  F012         	call	_lcd_gotoxy
  1158                           
  1159                           ;main.c: 178: lcd_putrs("Edt");
  1160  00102E  0EF0               	movlw	low STR_27
  1161  001030  6E09               	movwf	lcd_putrs@ptr,c
  1162  001032  0E0F               	movlw	high STR_27
  1163  001034  6E0A               	movwf	lcd_putrs@ptr+1,c
  1164  001036  ECA9  F011         	call	_lcd_putrs	;wreg free
  1165                           
  1166                           ;main.c: 179: _delay((unsigned long)((98)*(8000000/4000.0)));
  1167  00103A  0EFF               	movlw	255
  1168  00103C  6E28               	movwf	??_main& (0+255),c
  1169  00103E  0E8A               	movlw	138
  1170  001040                     u3617:
  1171  001040  2EE8               	decfsz	wreg,f,c
  1172  001042  D7FE               	bra	u3617
  1173  001044  2E28               	decfsz	??_main& (0+255),f,c
  1174  001046  D7FC               	bra	u3617
  1175  001048  D000               	nop2	
  1176  00104A                     l189:
  1177                           
  1178                           ;main.c: 180: }
  1179                           ;main.c: 182: if (PORTAbits.RA5 == 0 && boton_centro_estado == 1) {
  1180  00104A  BA80               	btfsc	3968,5,c	;volatile
  1181  00104C  D01B               	goto	l190
  1182  00104E  042C               	decf	main@boton_centro_estado,w,c
  1183  001050  102D               	iorwf	main@boton_centro_estado+1,w,c
  1184  001052  A4D8               	btfss	status,2,c
  1185  001054  D017               	goto	l190
  1186                           
  1187                           ;main.c: 183: boton_centro_estado = 0;
  1188  001056  0E00               	movlw	0
  1189  001058  6E2D               	movwf	main@boton_centro_estado+1,c
  1190  00105A  0E00               	movlw	0
  1191  00105C  6E2C               	movwf	main@boton_centro_estado,c
  1192                           
  1193                           ;main.c: 184: lcd_gotoxy(10, 2);
  1194  00105E  0E02               	movlw	2
  1195  001060  6E05               	movwf	lcd_gotoxy@y,c
  1196  001062  0E0A               	movlw	10
  1197  001064  EC75  F012         	call	_lcd_gotoxy
  1198                           
  1199                           ;main.c: 185: lcd_putrs("        ");
  1200  001068  0E2D               	movlw	low STR_28
  1201  00106A  6E09               	movwf	lcd_putrs@ptr,c
  1202  00106C  0E0F               	movlw	high STR_28
  1203  00106E  6E0A               	movwf	lcd_putrs@ptr+1,c
  1204  001070  ECA9  F011         	call	_lcd_putrs	;wreg free
  1205                           
  1206                           ;main.c: 186: _delay((unsigned long)((98)*(8000000/4000.0)));
  1207  001074  0EFF               	movlw	255
  1208  001076  6E28               	movwf	??_main& (0+255),c
  1209  001078  0E8A               	movlw	138
  1210  00107A                     u3627:
  1211  00107A  2EE8               	decfsz	wreg,f,c
  1212  00107C  D7FE               	bra	u3627
  1213  00107E  2E28               	decfsz	??_main& (0+255),f,c
  1214  001080  D7FC               	bra	u3627
  1215  001082  D000               	nop2	
  1216  001084                     l190:
  1217                           
  1218                           ;main.c: 187: }
  1219                           ;main.c: 189: if (boton_centro_estado == 1) {
  1220  001084  042C               	decf	main@boton_centro_estado,w,c
  1221  001086  102D               	iorwf	main@boton_centro_estado+1,w,c
  1222  001088  A4D8               	btfss	status,2,c
  1223  00108A  D2FE               	goto	l352
  1224                           
  1225                           ;main.c: 191: if (PORTAbits.RA2 == 0) {
  1226  00108C  B480               	btfsc	3968,2,c	;volatile
  1227  00108E  D00E               	goto	u2740
  1228                           
  1229                           ;main.c: 192: if (boton_seleccionar == 7) {
  1230  001090  0E07               	movlw	7
  1231  001092  1836               	xorwf	main@boton_seleccionar,w,c
  1232  001094  1037               	iorwf	main@boton_seleccionar+1,w,c
  1233  001096  A4D8               	btfss	status,2,c
  1234  001098  D005               	goto	l193
  1235                           
  1236                           ;main.c: 193: boton_seleccionar = 0;
  1237  00109A  0E00               	movlw	0
  1238  00109C  6E37               	movwf	main@boton_seleccionar+1,c
  1239  00109E  0E00               	movlw	0
  1240  0010A0  6E36               	movwf	main@boton_seleccionar,c
  1241                           
  1242                           ;main.c: 194: } else {
  1243  0010A2  D002               	goto	l194
  1244  0010A4                     l193:
  1245                           
  1246                           ;main.c: 195: boton_seleccionar++;
  1247  0010A4  4A36               	infsnz	main@boton_seleccionar,f,c
  1248  0010A6  2A37               	incf	main@boton_seleccionar+1,f,c
  1249  0010A8                     l194:
  1250                           
  1251                           ;main.c: 196: }
  1252                           ;main.c: 197: while (PORTAbits.RA2 == 0);
  1253  0010A8  A480               	btfss	3968,2,c	;volatile
  1254  0010AA  D7FE               	goto	l194
  1255  0010AC                     u2740:
  1256                           
  1257                           ;main.c: 198: }
  1258                           ;main.c: 200: if (PORTAbits.RA7 == 0) {
  1259  0010AC  BE80               	btfsc	3968,7,c	;volatile
  1260  0010AE  D00E               	goto	u2770
  1261                           
  1262                           ;main.c: 201: if (boton_seleccionar == 0) {
  1263  0010B0  5036               	movf	main@boton_seleccionar,w,c
  1264  0010B2  1037               	iorwf	main@boton_seleccionar+1,w,c
  1265  0010B4  A4D8               	btfss	status,2,c
  1266  0010B6  D005               	goto	l199
  1267                           
  1268                           ;main.c: 202: boton_seleccionar = 7;
  1269  0010B8  0E00               	movlw	0
  1270  0010BA  6E37               	movwf	main@boton_seleccionar+1,c
  1271  0010BC  0E07               	movlw	7
  1272  0010BE  6E36               	movwf	main@boton_seleccionar,c
  1273                           
  1274                           ;main.c: 203: } else {
  1275  0010C0  D003               	goto	l200
  1276  0010C2                     l199:
  1277                           
  1278                           ;main.c: 204: boton_seleccionar--;
  1279  0010C2  0636               	decf	main@boton_seleccionar,f,c
  1280  0010C4  A0D8               	btfss	status,0,c
  1281  0010C6  0637               	decf	main@boton_seleccionar+1,f,c
  1282  0010C8                     l200:
  1283                           
  1284                           ;main.c: 205: }
  1285                           ;main.c: 206: while (PORTAbits.RA7 == 0);
  1286  0010C8  AE80               	btfss	3968,7,c	;volatile
  1287  0010CA  D7FE               	goto	l200
  1288  0010CC                     u2770:
  1289                           
  1290                           ;main.c: 207: }
  1291                           ;main.c: 209: sprintf(buffer2, "%s", array_seleccionar[boton_seleccionar]);
  1292  0010CC  0EAC               	movlw	low _buffer2
  1293  0010CE  6E0D               	movwf	sprintf@sp,c
  1294  0010D0  0E00               	movlw	high _buffer2
  1295  0010D2  6E0E               	movwf	sprintf@sp+1,c
  1296  0010D4  0EF4               	movlw	low STR_29
  1297  0010D6  6E0F               	movwf	sprintf@f,c
  1298  0010D8  0E0F               	movlw	high STR_29
  1299  0010DA  6E10               	movwf	sprintf@f+1,c
  1300  0010DC  90D8               	bcf	status,0,c
  1301  0010DE  3436               	rlcf	main@boton_seleccionar,w,c
  1302  0010E0  6ED9               	movwf	fsr2l,c
  1303  0010E2  3437               	rlcf	main@boton_seleccionar+1,w,c
  1304  0010E4  6EDA               	movwf	fsr2h,c
  1305  0010E6  0ED2               	movlw	low _array_seleccionar
  1306  0010E8  26D9               	addwf	fsr2l,f,c
  1307  0010EA  0E00               	movlw	high _array_seleccionar
  1308  0010EC  22DA               	addwfc	fsr2h,f,c
  1309  0010EE  CFDE F011          	movff	postinc2,?_sprintf+4
  1310  0010F2  CFDD F012          	movff	postdec2,?_sprintf+5
  1311  0010F6  EC4F  F00B         	call	_sprintf	;wreg free
  1312                           
  1313                           ;main.c: 210: lcd_gotoxy(13, 2);
  1314  0010FA  0E02               	movlw	2
  1315  0010FC  6E05               	movwf	lcd_gotoxy@y,c
  1316  0010FE  0E0D               	movlw	13
  1317  001100  EC75  F012         	call	_lcd_gotoxy
  1318                           
  1319                           ;main.c: 211: lcd_putrs(buffer2);
  1320  001104  0EAC               	movlw	low _buffer2
  1321  001106  6E09               	movwf	lcd_putrs@ptr,c
  1322  001108  0E00               	movlw	high _buffer2
  1323  00110A  6E0A               	movwf	lcd_putrs@ptr+1,c
  1324  00110C  ECA9  F011         	call	_lcd_putrs	;wreg free
  1325                           
  1326                           ;main.c: 214: if (boton_seleccionar == 0) {
  1327  001110  5036               	movf	main@boton_seleccionar,w,c
  1328  001112  1037               	iorwf	main@boton_seleccionar+1,w,c
  1329  001114  A4D8               	btfss	status,2,c
  1330  001116  D028               	goto	u2840
  1331                           
  1332                           ;main.c: 216: if (PORTAbits.RA3 == 0) {
  1333  001118  B680               	btfsc	3968,3,c	;volatile
  1334  00111A  D012               	goto	u2810
  1335                           
  1336                           ;main.c: 217: if (diasem == 6) {
  1337  00111C  0E06               	movlw	6
  1338  00111E  1859               	xorwf	_diasem,w,c
  1339  001120  105A               	iorwf	_diasem+1,w,c
  1340  001122  A4D8               	btfss	status,2,c
  1341  001124  D007               	goto	l206
  1342                           
  1343                           ;main.c: 218: diasem = 0;
  1344  001126  0E00               	movlw	0
  1345  001128  6E5A               	movwf	_diasem+1,c
  1346  00112A  0E00               	movlw	0
  1347  00112C  6E59               	movwf	_diasem,c
  1348                           
  1349                           ;main.c: 219: Write_RTC();
  1350  00112E  EC73  F00D         	call	_Write_RTC	;wreg free
  1351                           
  1352                           ;main.c: 220: } else {
  1353  001132  D004               	goto	l207
  1354  001134                     l206:
  1355                           
  1356                           ;main.c: 221: diasem++;
  1357  001134  4A59               	infsnz	_diasem,f,c
  1358  001136  2A5A               	incf	_diasem+1,f,c
  1359                           
  1360                           ;main.c: 222: Write_RTC();
  1361  001138  EC73  F00D         	call	_Write_RTC	;wreg free
  1362  00113C                     l207:
  1363                           
  1364                           ;main.c: 223: }
  1365                           ;main.c: 224: while (PORTAbits.RA3 == 0);
  1366  00113C  A680               	btfss	3968,3,c	;volatile
  1367  00113E  D7FE               	goto	l207
  1368  001140                     u2810:
  1369                           
  1370                           ;main.c: 225: }
  1371                           ;main.c: 227: if (PORTAbits.RA6 == 0) {
  1372  001140  BC80               	btfsc	3968,6,c	;volatile
  1373  001142  D012               	goto	u2840
  1374                           
  1375                           ;main.c: 228: if (diasem == 0) {
  1376  001144  5059               	movf	_diasem,w,c
  1377  001146  105A               	iorwf	_diasem+1,w,c
  1378  001148  A4D8               	btfss	status,2,c
  1379  00114A  D007               	goto	l212
  1380                           
  1381                           ;main.c: 229: diasem = 6;
  1382  00114C  0E00               	movlw	0
  1383  00114E  6E5A               	movwf	_diasem+1,c
  1384  001150  0E06               	movlw	6
  1385  001152  6E59               	movwf	_diasem,c
  1386                           
  1387                           ;main.c: 230: Write_RTC();
  1388  001154  EC73  F00D         	call	_Write_RTC	;wreg free
  1389                           
  1390                           ;main.c: 231: } else {
  1391  001158  D005               	goto	l213
  1392  00115A                     l212:
  1393                           
  1394                           ;main.c: 232: diasem--;
  1395  00115A  0659               	decf	_diasem,f,c
  1396  00115C  A0D8               	btfss	status,0,c
  1397  00115E  065A               	decf	_diasem+1,f,c
  1398                           
  1399                           ;main.c: 233: Write_RTC();
  1400  001160  EC73  F00D         	call	_Write_RTC	;wreg free
  1401  001164                     l213:
  1402                           
  1403                           ;main.c: 234: }
  1404                           ;main.c: 235: while (PORTAbits.RA6 == 0);
  1405  001164  AC80               	btfss	3968,6,c	;volatile
  1406  001166  D7FE               	goto	l213
  1407  001168                     u2840:
  1408                           
  1409                           ;main.c: 236: }
  1410                           ;main.c: 237: }
  1411                           ;main.c: 240: if (boton_seleccionar == 1) {
  1412  001168  0436               	decf	main@boton_seleccionar,w,c
  1413  00116A  1037               	iorwf	main@boton_seleccionar+1,w,c
  1414  00116C  A4D8               	btfss	status,2,c
  1415  00116E  D02F               	goto	l217
  1416                           
  1417                           ;main.c: 242: if (PORTAbits.RA3 == 0) {
  1418  001170  B680               	btfsc	3968,3,c	;volatile
  1419  001172  D012               	goto	u2880
  1420                           
  1421                           ;main.c: 243: if (dia == 31) {
  1422  001174  0E1F               	movlw	31
  1423  001176  1857               	xorwf	_dia,w,c
  1424  001178  1058               	iorwf	_dia+1,w,c
  1425  00117A  A4D8               	btfss	status,2,c
  1426  00117C  D007               	goto	l219
  1427                           
  1428                           ;main.c: 244: dia = 1;
  1429  00117E  0E00               	movlw	0
  1430  001180  6E58               	movwf	_dia+1,c
  1431  001182  0E01               	movlw	1
  1432  001184  6E57               	movwf	_dia,c
  1433                           
  1434                           ;main.c: 245: Write_RTC();
  1435  001186  EC73  F00D         	call	_Write_RTC	;wreg free
  1436                           
  1437                           ;main.c: 246: } else {
  1438  00118A  D004               	goto	l220
  1439  00118C                     l219:
  1440                           
  1441                           ;main.c: 247: dia++;
  1442  00118C  4A57               	infsnz	_dia,f,c
  1443  00118E  2A58               	incf	_dia+1,f,c
  1444                           
  1445                           ;main.c: 248: Write_RTC();
  1446  001190  EC73  F00D         	call	_Write_RTC	;wreg free
  1447  001194                     l220:
  1448                           
  1449                           ;main.c: 249: }
  1450                           ;main.c: 250: while (PORTAbits.RA3 == 0);
  1451  001194  A680               	btfss	3968,3,c	;volatile
  1452  001196  D7FE               	goto	l220
  1453  001198                     u2880:
  1454                           
  1455                           ;main.c: 251: }
  1456                           ;main.c: 253: if (PORTAbits.RA6 == 0) {
  1457  001198  BC80               	btfsc	3968,6,c	;volatile
  1458  00119A  D012               	goto	u2910
  1459                           
  1460                           ;main.c: 254: if (dia == 1) {
  1461  00119C  0457               	decf	_dia,w,c
  1462  00119E  1058               	iorwf	_dia+1,w,c
  1463  0011A0  A4D8               	btfss	status,2,c
  1464  0011A2  D007               	goto	l225
  1465                           
  1466                           ;main.c: 255: dia = 31;
  1467  0011A4  0E00               	movlw	0
  1468  0011A6  6E58               	movwf	_dia+1,c
  1469  0011A8  0E1F               	movlw	31
  1470  0011AA  6E57               	movwf	_dia,c
  1471                           
  1472                           ;main.c: 256: Write_RTC();
  1473  0011AC  EC73  F00D         	call	_Write_RTC	;wreg free
  1474                           
  1475                           ;main.c: 257: } else {
  1476  0011B0  D005               	goto	l226
  1477  0011B2                     l225:
  1478                           
  1479                           ;main.c: 258: dia--;
  1480  0011B2  0657               	decf	_dia,f,c
  1481  0011B4  A0D8               	btfss	status,0,c
  1482  0011B6  0658               	decf	_dia+1,f,c
  1483                           
  1484                           ;main.c: 259: Write_RTC();
  1485  0011B8  EC73  F00D         	call	_Write_RTC	;wreg free
  1486  0011BC                     l226:
  1487                           
  1488                           ;main.c: 260: }
  1489                           ;main.c: 261: while (PORTAbits.RA6 == 0);
  1490  0011BC  AC80               	btfss	3968,6,c	;volatile
  1491  0011BE  D7FE               	goto	l226
  1492  0011C0                     u2910:
  1493                           
  1494                           ;main.c: 262: }
  1495                           ;main.c: 264: _delay((unsigned long)((50)*(8000000/4000.0)));
  1496  0011C0  0E82               	movlw	130
  1497  0011C2  6E28               	movwf	??_main& (0+255),c
  1498  0011C4  0EDE               	movlw	222
  1499  0011C6                     u3637:
  1500  0011C6  2EE8               	decfsz	wreg,f,c
  1501  0011C8  D7FE               	bra	u3637
  1502  0011CA  2E28               	decfsz	??_main& (0+255),f,c
  1503  0011CC  D7FC               	bra	u3637
  1504  0011CE                     l217:
  1505                           
  1506                           ;main.c: 265: }
  1507                           ;main.c: 268: if (boton_seleccionar == 2) {
  1508  0011CE  0E02               	movlw	2
  1509  0011D0  1836               	xorwf	main@boton_seleccionar,w,c
  1510  0011D2  1037               	iorwf	main@boton_seleccionar+1,w,c
  1511  0011D4  A4D8               	btfss	status,2,c
  1512  0011D6  D02F               	goto	l230
  1513                           
  1514                           ;main.c: 270: if (PORTAbits.RA3 == 0) {
  1515  0011D8  B680               	btfsc	3968,3,c	;volatile
  1516  0011DA  D012               	goto	u2950
  1517                           
  1518                           ;main.c: 271: if (mes == 12) {
  1519  0011DC  0E0C               	movlw	12
  1520  0011DE  185B               	xorwf	_mes,w,c
  1521  0011E0  105C               	iorwf	_mes+1,w,c
  1522  0011E2  A4D8               	btfss	status,2,c
  1523  0011E4  D007               	goto	l232
  1524                           
  1525                           ;main.c: 272: mes = 1;
  1526  0011E6  0E00               	movlw	0
  1527  0011E8  6E5C               	movwf	_mes+1,c
  1528  0011EA  0E01               	movlw	1
  1529  0011EC  6E5B               	movwf	_mes,c
  1530                           
  1531                           ;main.c: 273: Write_RTC();
  1532  0011EE  EC73  F00D         	call	_Write_RTC	;wreg free
  1533                           
  1534                           ;main.c: 274: } else {
  1535  0011F2  D004               	goto	l233
  1536  0011F4                     l232:
  1537                           
  1538                           ;main.c: 275: mes++;
  1539  0011F4  4A5B               	infsnz	_mes,f,c
  1540  0011F6  2A5C               	incf	_mes+1,f,c
  1541                           
  1542                           ;main.c: 276: Write_RTC();
  1543  0011F8  EC73  F00D         	call	_Write_RTC	;wreg free
  1544  0011FC                     l233:
  1545                           
  1546                           ;main.c: 277: }
  1547                           ;main.c: 278: while (PORTAbits.RA3 == 0);
  1548  0011FC  A680               	btfss	3968,3,c	;volatile
  1549  0011FE  D7FE               	goto	l233
  1550  001200                     u2950:
  1551                           
  1552                           ;main.c: 279: }
  1553                           ;main.c: 281: if (PORTAbits.RA6 == 0) {
  1554  001200  BC80               	btfsc	3968,6,c	;volatile
  1555  001202  D012               	goto	u2980
  1556                           
  1557                           ;main.c: 282: if (mes == 1) {
  1558  001204  045B               	decf	_mes,w,c
  1559  001206  105C               	iorwf	_mes+1,w,c
  1560  001208  A4D8               	btfss	status,2,c
  1561  00120A  D007               	goto	l238
  1562                           
  1563                           ;main.c: 283: mes = 12;
  1564  00120C  0E00               	movlw	0
  1565  00120E  6E5C               	movwf	_mes+1,c
  1566  001210  0E0C               	movlw	12
  1567  001212  6E5B               	movwf	_mes,c
  1568                           
  1569                           ;main.c: 284: Write_RTC();
  1570  001214  EC73  F00D         	call	_Write_RTC	;wreg free
  1571                           
  1572                           ;main.c: 285: } else {
  1573  001218  D005               	goto	l239
  1574  00121A                     l238:
  1575                           
  1576                           ;main.c: 286: mes--;
  1577  00121A  065B               	decf	_mes,f,c
  1578  00121C  A0D8               	btfss	status,0,c
  1579  00121E  065C               	decf	_mes+1,f,c
  1580                           
  1581                           ;main.c: 287: Write_RTC();
  1582  001220  EC73  F00D         	call	_Write_RTC	;wreg free
  1583  001224                     l239:
  1584                           
  1585                           ;main.c: 288: }
  1586                           ;main.c: 289: while (PORTAbits.RA6 == 0);
  1587  001224  AC80               	btfss	3968,6,c	;volatile
  1588  001226  D7FE               	goto	l239
  1589  001228                     u2980:
  1590                           
  1591                           ;main.c: 290: }
  1592                           ;main.c: 292: _delay((unsigned long)((50)*(8000000/4000.0)));
  1593  001228  0E82               	movlw	130
  1594  00122A  6E28               	movwf	??_main& (0+255),c
  1595  00122C  0EDE               	movlw	222
  1596  00122E                     u3647:
  1597  00122E  2EE8               	decfsz	wreg,f,c
  1598  001230  D7FE               	bra	u3647
  1599  001232  2E28               	decfsz	??_main& (0+255),f,c
  1600  001234  D7FC               	bra	u3647
  1601  001236                     l230:
  1602                           
  1603                           ;main.c: 293: }
  1604                           ;main.c: 296: if (boton_seleccionar == 3) {
  1605  001236  0E03               	movlw	3
  1606  001238  1836               	xorwf	main@boton_seleccionar,w,c
  1607  00123A  1037               	iorwf	main@boton_seleccionar+1,w,c
  1608  00123C  A4D8               	btfss	status,2,c
  1609  00123E  D02F               	goto	l243
  1610                           
  1611                           ;main.c: 298: if (PORTAbits.RA3 == 0) {
  1612  001240  B680               	btfsc	3968,3,c	;volatile
  1613  001242  D012               	goto	u3020
  1614                           
  1615                           ;main.c: 299: if (anio == 99) {
  1616  001244  0E63               	movlw	99
  1617  001246  185D               	xorwf	_anio,w,c
  1618  001248  105E               	iorwf	_anio+1,w,c
  1619  00124A  A4D8               	btfss	status,2,c
  1620  00124C  D007               	goto	l245
  1621                           
  1622                           ;main.c: 300: anio = 0;
  1623  00124E  0E00               	movlw	0
  1624  001250  6E5E               	movwf	_anio+1,c
  1625  001252  0E00               	movlw	0
  1626  001254  6E5D               	movwf	_anio,c
  1627                           
  1628                           ;main.c: 301: Write_RTC();
  1629  001256  EC73  F00D         	call	_Write_RTC	;wreg free
  1630                           
  1631                           ;main.c: 302: } else {
  1632  00125A  D004               	goto	l246
  1633  00125C                     l245:
  1634                           
  1635                           ;main.c: 303: anio++;
  1636  00125C  4A5D               	infsnz	_anio,f,c
  1637  00125E  2A5E               	incf	_anio+1,f,c
  1638                           
  1639                           ;main.c: 304: Write_RTC();
  1640  001260  EC73  F00D         	call	_Write_RTC	;wreg free
  1641  001264                     l246:
  1642                           
  1643                           ;main.c: 305: }
  1644                           ;main.c: 306: while (PORTAbits.RA3 == 0);
  1645  001264  A680               	btfss	3968,3,c	;volatile
  1646  001266  D7FE               	goto	l246
  1647  001268                     u3020:
  1648                           
  1649                           ;main.c: 307: }
  1650                           ;main.c: 309: if (PORTAbits.RA6 == 0) {
  1651  001268  BC80               	btfsc	3968,6,c	;volatile
  1652  00126A  D012               	goto	u3050
  1653                           
  1654                           ;main.c: 310: if (anio == 0) {
  1655  00126C  505D               	movf	_anio,w,c
  1656  00126E  105E               	iorwf	_anio+1,w,c
  1657  001270  A4D8               	btfss	status,2,c
  1658  001272  D007               	goto	l251
  1659                           
  1660                           ;main.c: 311: anio = 99;
  1661  001274  0E00               	movlw	0
  1662  001276  6E5E               	movwf	_anio+1,c
  1663  001278  0E63               	movlw	99
  1664  00127A  6E5D               	movwf	_anio,c
  1665                           
  1666                           ;main.c: 312: Write_RTC();
  1667  00127C  EC73  F00D         	call	_Write_RTC	;wreg free
  1668                           
  1669                           ;main.c: 313: } else {
  1670  001280  D005               	goto	l252
  1671  001282                     l251:
  1672                           
  1673                           ;main.c: 314: anio--;
  1674  001282  065D               	decf	_anio,f,c
  1675  001284  A0D8               	btfss	status,0,c
  1676  001286  065E               	decf	_anio+1,f,c
  1677                           
  1678                           ;main.c: 315: Write_RTC();
  1679  001288  EC73  F00D         	call	_Write_RTC	;wreg free
  1680  00128C                     l252:
  1681                           
  1682                           ;main.c: 316: }
  1683                           ;main.c: 317: while (PORTAbits.RA6 == 0);
  1684  00128C  AC80               	btfss	3968,6,c	;volatile
  1685  00128E  D7FE               	goto	l252
  1686  001290                     u3050:
  1687                           
  1688                           ;main.c: 318: }
  1689                           ;main.c: 320: _delay((unsigned long)((50)*(8000000/4000.0)));
  1690  001290  0E82               	movlw	130
  1691  001292  6E28               	movwf	??_main& (0+255),c
  1692  001294  0EDE               	movlw	222
  1693  001296                     u3657:
  1694  001296  2EE8               	decfsz	wreg,f,c
  1695  001298  D7FE               	bra	u3657
  1696  00129A  2E28               	decfsz	??_main& (0+255),f,c
  1697  00129C  D7FC               	bra	u3657
  1698  00129E                     l243:
  1699                           
  1700                           ;main.c: 321: }
  1701                           ;main.c: 324: if (boton_seleccionar == 4) {
  1702  00129E  0E04               	movlw	4
  1703  0012A0  1836               	xorwf	main@boton_seleccionar,w,c
  1704  0012A2  1037               	iorwf	main@boton_seleccionar+1,w,c
  1705  0012A4  A4D8               	btfss	status,2,c
  1706  0012A6  D02F               	goto	l256
  1707                           
  1708                           ;main.c: 326: if (PORTAbits.RA3 == 0) {
  1709  0012A8  B680               	btfsc	3968,3,c	;volatile
  1710  0012AA  D012               	goto	u3090
  1711                           
  1712                           ;main.c: 327: if (hora == 59) {
  1713  0012AC  0E3B               	movlw	59
  1714  0012AE  1855               	xorwf	_hora,w,c
  1715  0012B0  1056               	iorwf	_hora+1,w,c
  1716  0012B2  A4D8               	btfss	status,2,c
  1717  0012B4  D007               	goto	l258
  1718                           
  1719                           ;main.c: 328: hora = 0;
  1720  0012B6  0E00               	movlw	0
  1721  0012B8  6E56               	movwf	_hora+1,c
  1722  0012BA  0E00               	movlw	0
  1723  0012BC  6E55               	movwf	_hora,c
  1724                           
  1725                           ;main.c: 329: Write_RTC();
  1726  0012BE  EC73  F00D         	call	_Write_RTC	;wreg free
  1727                           
  1728                           ;main.c: 330: } else {
  1729  0012C2  D004               	goto	l259
  1730  0012C4                     l258:
  1731                           
  1732                           ;main.c: 331: hora++;
  1733  0012C4  4A55               	infsnz	_hora,f,c
  1734  0012C6  2A56               	incf	_hora+1,f,c
  1735                           
  1736                           ;main.c: 332: Write_RTC();
  1737  0012C8  EC73  F00D         	call	_Write_RTC	;wreg free
  1738  0012CC                     l259:
  1739                           
  1740                           ;main.c: 333: }
  1741                           ;main.c: 334: while (PORTAbits.RA3 == 0);
  1742  0012CC  A680               	btfss	3968,3,c	;volatile
  1743  0012CE  D7FE               	goto	l259
  1744  0012D0                     u3090:
  1745                           
  1746                           ;main.c: 335: }
  1747                           ;main.c: 337: if (PORTAbits.RA6 == 0) {
  1748  0012D0  BC80               	btfsc	3968,6,c	;volatile
  1749  0012D2  D012               	goto	u3120
  1750                           
  1751                           ;main.c: 338: if (hora == 0) {
  1752  0012D4  5055               	movf	_hora,w,c
  1753  0012D6  1056               	iorwf	_hora+1,w,c
  1754  0012D8  A4D8               	btfss	status,2,c
  1755  0012DA  D007               	goto	l264
  1756                           
  1757                           ;main.c: 339: hora = 59;
  1758  0012DC  0E00               	movlw	0
  1759  0012DE  6E56               	movwf	_hora+1,c
  1760  0012E0  0E3B               	movlw	59
  1761  0012E2  6E55               	movwf	_hora,c
  1762                           
  1763                           ;main.c: 340: Write_RTC();
  1764  0012E4  EC73  F00D         	call	_Write_RTC	;wreg free
  1765                           
  1766                           ;main.c: 341: } else {
  1767  0012E8  D005               	goto	l265
  1768  0012EA                     l264:
  1769                           
  1770                           ;main.c: 342: hora--;
  1771  0012EA  0655               	decf	_hora,f,c
  1772  0012EC  A0D8               	btfss	status,0,c
  1773  0012EE  0656               	decf	_hora+1,f,c
  1774                           
  1775                           ;main.c: 343: Write_RTC();
  1776  0012F0  EC73  F00D         	call	_Write_RTC	;wreg free
  1777  0012F4                     l265:
  1778                           
  1779                           ;main.c: 344: }
  1780                           ;main.c: 345: while (PORTAbits.RA6 == 0);
  1781  0012F4  AC80               	btfss	3968,6,c	;volatile
  1782  0012F6  D7FE               	goto	l265
  1783  0012F8                     u3120:
  1784                           
  1785                           ;main.c: 346: }
  1786                           ;main.c: 348: _delay((unsigned long)((50)*(8000000/4000.0)));
  1787  0012F8  0E82               	movlw	130
  1788  0012FA  6E28               	movwf	??_main& (0+255),c
  1789  0012FC  0EDE               	movlw	222
  1790  0012FE                     u3667:
  1791  0012FE  2EE8               	decfsz	wreg,f,c
  1792  001300  D7FE               	bra	u3667
  1793  001302  2E28               	decfsz	??_main& (0+255),f,c
  1794  001304  D7FC               	bra	u3667
  1795  001306                     l256:
  1796                           
  1797                           ;main.c: 349: }
  1798                           ;main.c: 352: if (boton_seleccionar == 5) {
  1799  001306  0E05               	movlw	5
  1800  001308  1836               	xorwf	main@boton_seleccionar,w,c
  1801  00130A  1037               	iorwf	main@boton_seleccionar+1,w,c
  1802  00130C  A4D8               	btfss	status,2,c
  1803  00130E  D02F               	goto	l269
  1804                           
  1805                           ;main.c: 354: if (PORTAbits.RA3 == 0) {
  1806  001310  B680               	btfsc	3968,3,c	;volatile
  1807  001312  D012               	goto	u3160
  1808                           
  1809                           ;main.c: 355: if (minuto == 59) {
  1810  001314  0E3B               	movlw	59
  1811  001316  1853               	xorwf	_minuto,w,c
  1812  001318  1054               	iorwf	_minuto+1,w,c
  1813  00131A  A4D8               	btfss	status,2,c
  1814  00131C  D007               	goto	l271
  1815                           
  1816                           ;main.c: 356: minuto = 0;
  1817  00131E  0E00               	movlw	0
  1818  001320  6E54               	movwf	_minuto+1,c
  1819  001322  0E00               	movlw	0
  1820  001324  6E53               	movwf	_minuto,c
  1821                           
  1822                           ;main.c: 357: Write_RTC();
  1823  001326  EC73  F00D         	call	_Write_RTC	;wreg free
  1824                           
  1825                           ;main.c: 358: } else {
  1826  00132A  D004               	goto	l272
  1827  00132C                     l271:
  1828                           
  1829                           ;main.c: 359: minuto++;
  1830  00132C  4A53               	infsnz	_minuto,f,c
  1831  00132E  2A54               	incf	_minuto+1,f,c
  1832                           
  1833                           ;main.c: 360: Write_RTC();
  1834  001330  EC73  F00D         	call	_Write_RTC	;wreg free
  1835  001334                     l272:
  1836                           
  1837                           ;main.c: 361: }
  1838                           ;main.c: 362: while (PORTAbits.RA3 == 0);
  1839  001334  A680               	btfss	3968,3,c	;volatile
  1840  001336  D7FE               	goto	l272
  1841  001338                     u3160:
  1842                           
  1843                           ;main.c: 363: }
  1844                           ;main.c: 365: if (PORTAbits.RA6 == 0) {
  1845  001338  BC80               	btfsc	3968,6,c	;volatile
  1846  00133A  D012               	goto	u3190
  1847                           
  1848                           ;main.c: 366: if (minuto == 0) {
  1849  00133C  5053               	movf	_minuto,w,c
  1850  00133E  1054               	iorwf	_minuto+1,w,c
  1851  001340  A4D8               	btfss	status,2,c
  1852  001342  D007               	goto	l277
  1853                           
  1854                           ;main.c: 367: minuto = 59;
  1855  001344  0E00               	movlw	0
  1856  001346  6E54               	movwf	_minuto+1,c
  1857  001348  0E3B               	movlw	59
  1858  00134A  6E53               	movwf	_minuto,c
  1859                           
  1860                           ;main.c: 368: Write_RTC();
  1861  00134C  EC73  F00D         	call	_Write_RTC	;wreg free
  1862                           
  1863                           ;main.c: 369: } else {
  1864  001350  D005               	goto	l278
  1865  001352                     l277:
  1866                           
  1867                           ;main.c: 370: minuto--;
  1868  001352  0653               	decf	_minuto,f,c
  1869  001354  A0D8               	btfss	status,0,c
  1870  001356  0654               	decf	_minuto+1,f,c
  1871                           
  1872                           ;main.c: 371: Write_RTC();
  1873  001358  EC73  F00D         	call	_Write_RTC	;wreg free
  1874  00135C                     l278:
  1875                           
  1876                           ;main.c: 372: }
  1877                           ;main.c: 373: while (PORTAbits.RA6 == 0);
  1878  00135C  AC80               	btfss	3968,6,c	;volatile
  1879  00135E  D7FE               	goto	l278
  1880  001360                     u3190:
  1881                           
  1882                           ;main.c: 374: }
  1883                           ;main.c: 376: _delay((unsigned long)((50)*(8000000/4000.0)));
  1884  001360  0E82               	movlw	130
  1885  001362  6E28               	movwf	??_main& (0+255),c
  1886  001364  0EDE               	movlw	222
  1887  001366                     u3677:
  1888  001366  2EE8               	decfsz	wreg,f,c
  1889  001368  D7FE               	bra	u3677
  1890  00136A  2E28               	decfsz	??_main& (0+255),f,c
  1891  00136C  D7FC               	bra	u3677
  1892  00136E                     l269:
  1893                           
  1894                           ;main.c: 377: }
  1895                           ;main.c: 380: if (boton_seleccionar == 6) {
  1896  00136E  0E06               	movlw	6
  1897  001370  1836               	xorwf	main@boton_seleccionar,w,c
  1898  001372  1037               	iorwf	main@boton_seleccionar+1,w,c
  1899  001374  A4D8               	btfss	status,2,c
  1900  001376  D02F               	goto	l282
  1901                           
  1902                           ;main.c: 382: if (PORTAbits.RA3 == 0) {
  1903  001378  B680               	btfsc	3968,3,c	;volatile
  1904  00137A  D012               	goto	u3230
  1905                           
  1906                           ;main.c: 383: if (segundo == 59) {
  1907  00137C  0E3B               	movlw	59
  1908  00137E  1838               	xorwf	_segundo,w,c
  1909  001380  1039               	iorwf	_segundo+1,w,c
  1910  001382  A4D8               	btfss	status,2,c
  1911  001384  D007               	goto	l284
  1912                           
  1913                           ;main.c: 384: segundo = 0;
  1914  001386  0E00               	movlw	0
  1915  001388  6E39               	movwf	_segundo+1,c
  1916  00138A  0E00               	movlw	0
  1917  00138C  6E38               	movwf	_segundo,c
  1918                           
  1919                           ;main.c: 385: Write_RTC();
  1920  00138E  EC73  F00D         	call	_Write_RTC	;wreg free
  1921                           
  1922                           ;main.c: 386: } else {
  1923  001392  D004               	goto	l285
  1924  001394                     l284:
  1925                           
  1926                           ;main.c: 387: segundo++;
  1927  001394  4A38               	infsnz	_segundo,f,c
  1928  001396  2A39               	incf	_segundo+1,f,c
  1929                           
  1930                           ;main.c: 388: Write_RTC();
  1931  001398  EC73  F00D         	call	_Write_RTC	;wreg free
  1932  00139C                     l285:
  1933                           
  1934                           ;main.c: 389: }
  1935                           ;main.c: 390: while (PORTAbits.RA3 == 0);
  1936  00139C  A680               	btfss	3968,3,c	;volatile
  1937  00139E  D7FE               	goto	l285
  1938  0013A0                     u3230:
  1939                           
  1940                           ;main.c: 391: }
  1941                           ;main.c: 393: if (PORTAbits.RA6 == 0) {
  1942  0013A0  BC80               	btfsc	3968,6,c	;volatile
  1943  0013A2  D012               	goto	u3260
  1944                           
  1945                           ;main.c: 394: if (segundo == 0) {
  1946  0013A4  5038               	movf	_segundo,w,c
  1947  0013A6  1039               	iorwf	_segundo+1,w,c
  1948  0013A8  A4D8               	btfss	status,2,c
  1949  0013AA  D007               	goto	l290
  1950                           
  1951                           ;main.c: 395: segundo = 59;
  1952  0013AC  0E00               	movlw	0
  1953  0013AE  6E39               	movwf	_segundo+1,c
  1954  0013B0  0E3B               	movlw	59
  1955  0013B2  6E38               	movwf	_segundo,c
  1956                           
  1957                           ;main.c: 396: Write_RTC();
  1958  0013B4  EC73  F00D         	call	_Write_RTC	;wreg free
  1959                           
  1960                           ;main.c: 397: } else {
  1961  0013B8  D005               	goto	l291
  1962  0013BA                     l290:
  1963                           
  1964                           ;main.c: 398: segundo--;
  1965  0013BA  0638               	decf	_segundo,f,c
  1966  0013BC  A0D8               	btfss	status,0,c
  1967  0013BE  0639               	decf	_segundo+1,f,c
  1968                           
  1969                           ;main.c: 399: Write_RTC();
  1970  0013C0  EC73  F00D         	call	_Write_RTC	;wreg free
  1971  0013C4                     l291:
  1972                           
  1973                           ;main.c: 400: }
  1974                           ;main.c: 401: while (PORTAbits.RA6 == 0);
  1975  0013C4  AC80               	btfss	3968,6,c	;volatile
  1976  0013C6  D7FE               	goto	l291
  1977  0013C8                     u3260:
  1978                           
  1979                           ;main.c: 402: }
  1980                           ;main.c: 404: _delay((unsigned long)((50)*(8000000/4000.0)));
  1981  0013C8  0E82               	movlw	130
  1982  0013CA  6E28               	movwf	??_main& (0+255),c
  1983  0013CC  0EDE               	movlw	222
  1984  0013CE                     u3687:
  1985  0013CE  2EE8               	decfsz	wreg,f,c
  1986  0013D0  D7FE               	bra	u3687
  1987  0013D2  2E28               	decfsz	??_main& (0+255),f,c
  1988  0013D4  D7FC               	bra	u3687
  1989  0013D6                     l282:
  1990                           
  1991                           ;main.c: 405: }
  1992                           ;main.c: 408: if (boton_seleccionar == 7) {
  1993  0013D6  0E07               	movlw	7
  1994  0013D8  1836               	xorwf	main@boton_seleccionar,w,c
  1995  0013DA  1037               	iorwf	main@boton_seleccionar+1,w,c
  1996  0013DC  A4D8               	btfss	status,2,c
  1997  0013DE  D154               	goto	l352
  1998                           
  1999                           ;main.c: 410: boton_seleccionar = 0;
  2000  0013E0  0E00               	movlw	0
  2001  0013E2  6E37               	movwf	main@boton_seleccionar+1,c
  2002  0013E4  0E00               	movlw	0
  2003  0013E6  6E36               	movwf	main@boton_seleccionar,c
  2004                           
  2005                           ;main.c: 411: int boton_seleccionar_cafe = 0;
  2006  0013E8  0E00               	movlw	0
  2007  0013EA  6E33               	movwf	main@boton_seleccionar_cafe+1,c
  2008  0013EC  0E00               	movlw	0
  2009  0013EE  6E32               	movwf	main@boton_seleccionar_cafe,c
  2010                           
  2011                           ;main.c: 412: int tipo = 0;
  2012  0013F0  0E00               	movlw	0
  2013  0013F2  6E2F               	movwf	main@tipo+1,c
  2014  0013F4  0E00               	movlw	0
  2015  0013F6  6E2E               	movwf	main@tipo,c
  2016                           
  2017                           ;main.c: 413: int tamanio = 0;
  2018  0013F8  0E00               	movlw	0
  2019  0013FA  6E31               	movwf	main@tamanio+1,c
  2020  0013FC  0E00               	movlw	0
  2021  0013FE  6E30               	movwf	main@tamanio,c
  2022                           
  2023                           ;main.c: 414: int accion = 0;
  2024  001400  0E00               	movlw	0
  2025  001402  6E35               	movwf	main@accion+1,c
  2026  001404  0E00               	movlw	0
  2027  001406  6E34               	movwf	main@accion,c
  2028  001408                     
  2029                           ;main.c: 418: if (PORTAbits.RA2 == 0) {
  2030  001408  B480               	btfsc	3968,2,c	;volatile
  2031  00140A  D00E               	goto	u3300
  2032                           
  2033                           ;main.c: 419: if (boton_seleccionar_cafe == 2) {
  2034  00140C  0E02               	movlw	2
  2035  00140E  1832               	xorwf	main@boton_seleccionar_cafe,w,c
  2036  001410  1033               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2037  001412  A4D8               	btfss	status,2,c
  2038  001414  D005               	goto	l298
  2039                           
  2040                           ;main.c: 420: boton_seleccionar_cafe = 0;
  2041  001416  0E00               	movlw	0
  2042  001418  6E33               	movwf	main@boton_seleccionar_cafe+1,c
  2043  00141A  0E00               	movlw	0
  2044  00141C  6E32               	movwf	main@boton_seleccionar_cafe,c
  2045                           
  2046                           ;main.c: 421: } else {
  2047  00141E  D002               	goto	l299
  2048  001420                     l298:
  2049                           
  2050                           ;main.c: 422: boton_seleccionar_cafe++;
  2051  001420  4A32               	infsnz	main@boton_seleccionar_cafe,f,c
  2052  001422  2A33               	incf	main@boton_seleccionar_cafe+1,f,c
  2053  001424                     l299:
  2054                           
  2055                           ;main.c: 423: }
  2056                           ;main.c: 424: while (PORTAbits.RA2 == 0);
  2057  001424  A480               	btfss	3968,2,c	;volatile
  2058  001426  D7FE               	goto	l299
  2059  001428                     u3300:
  2060                           
  2061                           ;main.c: 425: }
  2062                           ;main.c: 427: if (PORTAbits.RA7 == 0) {
  2063  001428  BE80               	btfsc	3968,7,c	;volatile
  2064  00142A  D00E               	goto	u3330
  2065                           
  2066                           ;main.c: 428: if (boton_seleccionar_cafe == 0) {
  2067  00142C  5032               	movf	main@boton_seleccionar_cafe,w,c
  2068  00142E  1033               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2069  001430  A4D8               	btfss	status,2,c
  2070  001432  D005               	goto	l304
  2071                           
  2072                           ;main.c: 429: boton_seleccionar_cafe = 2;
  2073  001434  0E00               	movlw	0
  2074  001436  6E33               	movwf	main@boton_seleccionar_cafe+1,c
  2075  001438  0E02               	movlw	2
  2076  00143A  6E32               	movwf	main@boton_seleccionar_cafe,c
  2077                           
  2078                           ;main.c: 430: } else {
  2079  00143C  D003               	goto	l305
  2080  00143E                     l304:
  2081                           
  2082                           ;main.c: 431: boton_seleccionar_cafe--;
  2083  00143E  0632               	decf	main@boton_seleccionar_cafe,f,c
  2084  001440  A0D8               	btfss	status,0,c
  2085  001442  0633               	decf	main@boton_seleccionar_cafe+1,f,c
  2086  001444                     l305:
  2087                           
  2088                           ;main.c: 432: }
  2089                           ;main.c: 433: while (PORTAbits.RA7 == 0);
  2090  001444  AE80               	btfss	3968,7,c	;volatile
  2091  001446  D7FE               	goto	l305
  2092  001448                     u3330:
  2093                           
  2094                           ;main.c: 434: }
  2095                           ;main.c: 436: if (boton_seleccionar_cafe == 0) {
  2096  001448  5032               	movf	main@boton_seleccionar_cafe,w,c
  2097  00144A  1033               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2098  00144C  A4D8               	btfss	status,2,c
  2099  00144E  D020               	goto	u3400
  2100                           
  2101                           ;main.c: 438: if (PORTAbits.RA3 == 0) {
  2102  001450  B680               	btfsc	3968,3,c	;volatile
  2103  001452  D00E               	goto	u3370
  2104                           
  2105                           ;main.c: 439: if (tipo == 2) {
  2106  001454  0E02               	movlw	2
  2107  001456  182E               	xorwf	main@tipo,w,c
  2108  001458  102F               	iorwf	main@tipo+1,w,c
  2109  00145A  A4D8               	btfss	status,2,c
  2110  00145C  D005               	goto	l311
  2111                           
  2112                           ;main.c: 440: tipo = 0;
  2113  00145E  0E00               	movlw	0
  2114  001460  6E2F               	movwf	main@tipo+1,c
  2115  001462  0E00               	movlw	0
  2116  001464  6E2E               	movwf	main@tipo,c
  2117                           
  2118                           ;main.c: 441: } else {
  2119  001466  D002               	goto	l312
  2120  001468                     l311:
  2121                           
  2122                           ;main.c: 442: tipo++;
  2123  001468  4A2E               	infsnz	main@tipo,f,c
  2124  00146A  2A2F               	incf	main@tipo+1,f,c
  2125  00146C                     l312:
  2126                           
  2127                           ;main.c: 444: }
  2128                           ;main.c: 445: while (PORTAbits.RA3 == 0);
  2129  00146C  A680               	btfss	3968,3,c	;volatile
  2130  00146E  D7FE               	goto	l312
  2131  001470                     u3370:
  2132                           
  2133                           ;main.c: 446: }
  2134                           ;main.c: 449: if (PORTAbits.RA6 == 0) {
  2135  001470  BC80               	btfsc	3968,6,c	;volatile
  2136  001472  D00E               	goto	u3400
  2137                           
  2138                           ;main.c: 450: if (tipo == 0) {
  2139  001474  502E               	movf	main@tipo,w,c
  2140  001476  102F               	iorwf	main@tipo+1,w,c
  2141  001478  A4D8               	btfss	status,2,c
  2142  00147A  D005               	goto	l317
  2143                           
  2144                           ;main.c: 451: tipo = 2;
  2145  00147C  0E00               	movlw	0
  2146  00147E  6E2F               	movwf	main@tipo+1,c
  2147  001480  0E02               	movlw	2
  2148  001482  6E2E               	movwf	main@tipo,c
  2149                           
  2150                           ;main.c: 453: } else {
  2151  001484  D003               	goto	l318
  2152  001486                     l317:
  2153                           
  2154                           ;main.c: 454: tipo--;
  2155  001486  062E               	decf	main@tipo,f,c
  2156  001488  A0D8               	btfss	status,0,c
  2157  00148A  062F               	decf	main@tipo+1,f,c
  2158  00148C                     l318:
  2159                           
  2160                           ;main.c: 456: }
  2161                           ;main.c: 457: while (PORTAbits.RA6 == 0);
  2162  00148C  AC80               	btfss	3968,6,c	;volatile
  2163  00148E  D7FE               	goto	l318
  2164  001490                     u3400:
  2165                           
  2166                           ;main.c: 458: }
  2167                           ;main.c: 459: }
  2168                           ;main.c: 461: if (boton_seleccionar_cafe == 1) {
  2169  001490  0432               	decf	main@boton_seleccionar_cafe,w,c
  2170  001492  1033               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2171  001494  A4D8               	btfss	status,2,c
  2172  001496  D020               	goto	u3470
  2173                           
  2174                           ;main.c: 463: if (PORTAbits.RA3 == 0) {
  2175  001498  B680               	btfsc	3968,3,c	;volatile
  2176  00149A  D00E               	goto	u3440
  2177                           
  2178                           ;main.c: 464: if (tamanio == 2) {
  2179  00149C  0E02               	movlw	2
  2180  00149E  1830               	xorwf	main@tamanio,w,c
  2181  0014A0  1031               	iorwf	main@tamanio+1,w,c
  2182  0014A2  A4D8               	btfss	status,2,c
  2183  0014A4  D005               	goto	l324
  2184                           
  2185                           ;main.c: 465: tamanio = 0;
  2186  0014A6  0E00               	movlw	0
  2187  0014A8  6E31               	movwf	main@tamanio+1,c
  2188  0014AA  0E00               	movlw	0
  2189  0014AC  6E30               	movwf	main@tamanio,c
  2190                           
  2191                           ;main.c: 466: } else {
  2192  0014AE  D002               	goto	l325
  2193  0014B0                     l324:
  2194                           
  2195                           ;main.c: 467: tamanio++;
  2196  0014B0  4A30               	infsnz	main@tamanio,f,c
  2197  0014B2  2A31               	incf	main@tamanio+1,f,c
  2198  0014B4                     l325:
  2199                           
  2200                           ;main.c: 468: }
  2201                           ;main.c: 469: while (PORTAbits.RA3 == 0);
  2202  0014B4  A680               	btfss	3968,3,c	;volatile
  2203  0014B6  D7FE               	goto	l325
  2204  0014B8                     u3440:
  2205                           
  2206                           ;main.c: 470: }
  2207                           ;main.c: 472: if (PORTAbits.RA6 == 0) {
  2208  0014B8  BC80               	btfsc	3968,6,c	;volatile
  2209  0014BA  D00E               	goto	u3470
  2210                           
  2211                           ;main.c: 473: if (tamanio == 0) {
  2212  0014BC  5030               	movf	main@tamanio,w,c
  2213  0014BE  1031               	iorwf	main@tamanio+1,w,c
  2214  0014C0  A4D8               	btfss	status,2,c
  2215  0014C2  D005               	goto	l330
  2216                           
  2217                           ;main.c: 474: tamanio = 2;
  2218  0014C4  0E00               	movlw	0
  2219  0014C6  6E31               	movwf	main@tamanio+1,c
  2220  0014C8  0E02               	movlw	2
  2221  0014CA  6E30               	movwf	main@tamanio,c
  2222                           
  2223                           ;main.c: 475: } else {
  2224  0014CC  D003               	goto	l331
  2225  0014CE                     l330:
  2226                           
  2227                           ;main.c: 476: tamanio--;
  2228  0014CE  0630               	decf	main@tamanio,f,c
  2229  0014D0  A0D8               	btfss	status,0,c
  2230  0014D2  0631               	decf	main@tamanio+1,f,c
  2231  0014D4                     l331:
  2232                           
  2233                           ;main.c: 477: }
  2234                           ;main.c: 478: while (PORTAbits.RA6 == 0);
  2235  0014D4  AC80               	btfss	3968,6,c	;volatile
  2236  0014D6  D7FE               	goto	l331
  2237  0014D8                     u3470:
  2238                           
  2239                           ;main.c: 479: }
  2240                           ;main.c: 480: }
  2241                           ;main.c: 482: if (boton_seleccionar_cafe == 2) {
  2242  0014D8  0E02               	movlw	2
  2243  0014DA  1832               	xorwf	main@boton_seleccionar_cafe,w,c
  2244  0014DC  1033               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2245  0014DE  A4D8               	btfss	status,2,c
  2246  0014E0  D06C               	goto	u3590
  2247                           
  2248                           ;main.c: 483: if (PORTAbits.RA3 == 0) {
  2249  0014E2  B680               	btfsc	3968,3,c	;volatile
  2250  0014E4  D00D               	goto	u3510
  2251                           
  2252                           ;main.c: 484: if (accion == 1) {
  2253  0014E6  0434               	decf	main@accion,w,c
  2254  0014E8  1035               	iorwf	main@accion+1,w,c
  2255  0014EA  A4D8               	btfss	status,2,c
  2256  0014EC  D005               	goto	l337
  2257                           
  2258                           ;main.c: 485: accion = 0;
  2259  0014EE  0E00               	movlw	0
  2260  0014F0  6E35               	movwf	main@accion+1,c
  2261  0014F2  0E00               	movlw	0
  2262  0014F4  6E34               	movwf	main@accion,c
  2263                           
  2264                           ;main.c: 486: } else {
  2265  0014F6  D002               	goto	l338
  2266  0014F8                     l337:
  2267                           
  2268                           ;main.c: 487: accion++;
  2269  0014F8  4A34               	infsnz	main@accion,f,c
  2270  0014FA  2A35               	incf	main@accion+1,f,c
  2271  0014FC                     l338:
  2272                           
  2273                           ;main.c: 488: }
  2274                           ;main.c: 489: while (PORTAbits.RA3 == 0);
  2275  0014FC  A680               	btfss	3968,3,c	;volatile
  2276  0014FE  D7FE               	goto	l338
  2277  001500                     u3510:
  2278                           
  2279                           ;main.c: 490: }
  2280                           ;main.c: 492: if (PORTAbits.RA6 == 0) {
  2281  001500  BC80               	btfsc	3968,6,c	;volatile
  2282  001502  D00E               	goto	u3540
  2283                           
  2284                           ;main.c: 493: if (accion == 0) {
  2285  001504  5034               	movf	main@accion,w,c
  2286  001506  1035               	iorwf	main@accion+1,w,c
  2287  001508  A4D8               	btfss	status,2,c
  2288  00150A  D005               	goto	l343
  2289                           
  2290                           ;main.c: 494: accion = 1;
  2291  00150C  0E00               	movlw	0
  2292  00150E  6E35               	movwf	main@accion+1,c
  2293  001510  0E01               	movlw	1
  2294  001512  6E34               	movwf	main@accion,c
  2295                           
  2296                           ;main.c: 495: } else {
  2297  001514  D003               	goto	l344
  2298  001516                     l343:
  2299                           
  2300                           ;main.c: 496: accion--;
  2301  001516  0634               	decf	main@accion,f,c
  2302  001518  A0D8               	btfss	status,0,c
  2303  00151A  0635               	decf	main@accion+1,f,c
  2304  00151C                     l344:
  2305                           
  2306                           ;main.c: 497: }
  2307                           ;main.c: 498: while (PORTAbits.RA6 == 0);
  2308  00151C  AC80               	btfss	3968,6,c	;volatile
  2309  00151E  D7FE               	goto	l344
  2310  001520                     u3540:
  2311                           
  2312                           ;main.c: 499: }
  2313                           ;main.c: 501: if (PORTAbits.RA5 == 0) {
  2314  001520  BA80               	btfsc	3968,5,c	;volatile
  2315  001522  D04B               	goto	u3590
  2316                           
  2317                           ;main.c: 502: if (accion == 0) {
  2318  001524  5034               	movf	main@accion,w,c
  2319  001526  1035               	iorwf	main@accion+1,w,c
  2320  001528  A4D8               	btfss	status,2,c
  2321  00152A  D01F               	goto	l349
  2322                           
  2323                           ;main.c: 504: reporte_cafe[tipo][tamanio] ++;
  2324  00152C  C02E  F001         	movff	main@tipo,___wmul@multiplier
  2325  001530  C02F  F002         	movff	main@tipo+1,___wmul@multiplier+1
  2326  001534  0E00               	movlw	0
  2327  001536  6E04               	movwf	___wmul@multiplicand+1,c
  2328  001538  0E06               	movlw	6
  2329  00153A  6E03               	movwf	___wmul@multiplicand,c
  2330  00153C  EC51  F012         	call	___wmul	;wreg free
  2331  001540  0EC0               	movlw	low _reporte_cafe
  2332  001542  6E28               	movwf	??_main& (0+255),c
  2333  001544  0E00               	movlw	high _reporte_cafe
  2334  001546  6E29               	movwf	(??_main+1)& (0+255),c
  2335  001548  5001               	movf	?___wmul,w,c
  2336  00154A  2628               	addwf	??_main,f,c
  2337  00154C  5002               	movf	?___wmul+1,w,c
  2338  00154E  2229               	addwfc	??_main+1,f,c
  2339  001550  90D8               	bcf	status,0,c
  2340  001552  3430               	rlcf	main@tamanio,w,c
  2341  001554  6ED9               	movwf	fsr2l,c
  2342  001556  3431               	rlcf	main@tamanio+1,w,c
  2343  001558  6EDA               	movwf	fsr2h,c
  2344  00155A  5028               	movf	??_main,w,c
  2345  00155C  26D9               	addwf	fsr2l,f,c
  2346  00155E  5029               	movf	??_main+1,w,c
  2347  001560  22DA               	addwfc	fsr2h,f,c
  2348  001562  0E02               	movlw	2
  2349  001564  26DE               	addwf	postinc2,f,c
  2350  001566  0E00               	movlw	0
  2351  001568  22DD               	addwfc	postdec2,f,c
  2352  00156A                     l349:
  2353                           
  2354                           ;main.c: 506: }
  2355                           ;main.c: 508: if (accion == 1) {
  2356  00156A  0434               	decf	main@accion,w,c
  2357  00156C  1035               	iorwf	main@accion+1,w,c
  2358  00156E  A4D8               	btfss	status,2,c
  2359  001570  D01D               	goto	l350
  2360                           
  2361                           ;main.c: 509: int a = 0;
  2362  001572  0E00               	movlw	0
  2363  001574  6E2B               	movwf	main@a+1,c
  2364  001576  0E00               	movlw	0
  2365  001578  6E2A               	movwf	main@a,c
  2366                           
  2367                           ;main.c: 510: sprintf(buffer2, "%01u", reporte_cafe[0][0]);
  2368  00157A  0EAC               	movlw	low _buffer2
  2369  00157C  6E0D               	movwf	sprintf@sp,c
  2370  00157E  0E00               	movlw	high _buffer2
  2371  001580  6E0E               	movwf	sprintf@sp+1,c
  2372  001582  0EEB               	movlw	low STR_30
  2373  001584  6E0F               	movwf	sprintf@f,c
  2374  001586  0E0F               	movlw	high STR_30
  2375  001588  6E10               	movwf	sprintf@f+1,c
  2376  00158A  C0C0  F011         	movff	_reporte_cafe,?_sprintf+4
  2377  00158E  C0C1  F012         	movff	_reporte_cafe+1,?_sprintf+5
  2378  001592  EC4F  F00B         	call	_sprintf	;wreg free
  2379                           
  2380                           ;main.c: 511: lcd_gotoxy(13, 2);
  2381  001596  0E02               	movlw	2
  2382  001598  6E05               	movwf	lcd_gotoxy@y,c
  2383  00159A  0E0D               	movlw	13
  2384  00159C  EC75  F012         	call	_lcd_gotoxy
  2385                           
  2386                           ;main.c: 512: lcd_putrs(buffer2);
  2387  0015A0  0EAC               	movlw	low _buffer2
  2388  0015A2  6E09               	movwf	lcd_putrs@ptr,c
  2389  0015A4  0E00               	movlw	high _buffer2
  2390  0015A6  6E0A               	movwf	lcd_putrs@ptr+1,c
  2391  0015A8  ECA9  F011         	call	_lcd_putrs	;wreg free
  2392  0015AC                     l350:
  2393                           
  2394                           ;main.c: 514: }
  2395                           ;main.c: 516: if (accion == 2) {
  2396  0015AC  0E02               	movlw	2
  2397  0015AE  1834               	xorwf	main@accion,w,c
  2398  0015B0  1035               	iorwf	main@accion+1,w,c
  2399  0015B2  B4D8               	btfsc	status,2,c
  2400  0015B4  D069               	goto	l352
  2401  0015B6                     
  2402                           ;main.c: 518: }
  2403                           ;main.c: 520: while (PORTAbits.RA5 == 1);
  2404  0015B6  BA80               	btfsc	3968,5,c	;volatile
  2405  0015B8  D7FE               	goto	l351
  2406  0015BA                     u3590:
  2407                           
  2408                           ;main.c: 521: }
  2409                           ;main.c: 522: }
  2410                           ;main.c: 525: sprintf(buffer3, "%s", array_boton_seleccionar_tipo_cafe[tipo]);
  2411  0015BA  0E98               	movlw	low _buffer3
  2412  0015BC  6E0D               	movwf	sprintf@sp,c
  2413  0015BE  0E00               	movlw	high _buffer3
  2414  0015C0  6E0E               	movwf	sprintf@sp+1,c
  2415  0015C2  0EF4               	movlw	low STR_29
  2416  0015C4  6E0F               	movwf	sprintf@f,c
  2417  0015C6  0E0F               	movlw	high STR_29
  2418  0015C8  6E10               	movwf	sprintf@f+1,c
  2419  0015CA  90D8               	bcf	status,0,c
  2420  0015CC  342E               	rlcf	main@tipo,w,c
  2421  0015CE  6ED9               	movwf	fsr2l,c
  2422  0015D0  342F               	rlcf	main@tipo+1,w,c
  2423  0015D2  6EDA               	movwf	fsr2h,c
  2424  0015D4  0EEE               	movlw	low _array_boton_seleccionar_tipo_cafe
  2425  0015D6  26D9               	addwf	fsr2l,f,c
  2426  0015D8  0E00               	movlw	high _array_boton_seleccionar_tipo_cafe
  2427  0015DA  22DA               	addwfc	fsr2h,f,c
  2428  0015DC  CFDE F011          	movff	postinc2,?_sprintf+4
  2429  0015E0  CFDD F012          	movff	postdec2,?_sprintf+5
  2430  0015E4  EC4F  F00B         	call	_sprintf	;wreg free
  2431                           
  2432                           ;main.c: 526: lcd_gotoxy(1, 1);
  2433  0015E8  0E01               	movlw	1
  2434  0015EA  6E05               	movwf	lcd_gotoxy@y,c
  2435  0015EC  0E01               	movlw	1
  2436  0015EE  EC75  F012         	call	_lcd_gotoxy
  2437                           
  2438                           ;main.c: 527: lcd_putrs(buffer3);
  2439  0015F2  0E98               	movlw	low _buffer3
  2440  0015F4  6E09               	movwf	lcd_putrs@ptr,c
  2441  0015F6  0E00               	movlw	high _buffer3
  2442  0015F8  6E0A               	movwf	lcd_putrs@ptr+1,c
  2443  0015FA  ECA9  F011         	call	_lcd_putrs	;wreg free
  2444                           
  2445                           ;main.c: 529: sprintf(buffer4, "%s", array_boton_seleccionar_tamanio_cafe[tamanio]);
  2446  0015FE  0E84               	movlw	low _buffer4
  2447  001600  6E0D               	movwf	sprintf@sp,c
  2448  001602  0E00               	movlw	high _buffer4
  2449  001604  6E0E               	movwf	sprintf@sp+1,c
  2450  001606  0EF4               	movlw	low STR_29
  2451  001608  6E0F               	movwf	sprintf@f,c
  2452  00160A  0E0F               	movlw	high STR_29
  2453  00160C  6E10               	movwf	sprintf@f+1,c
  2454  00160E  90D8               	bcf	status,0,c
  2455  001610  3430               	rlcf	main@tamanio,w,c
  2456  001612  6ED9               	movwf	fsr2l,c
  2457  001614  3431               	rlcf	main@tamanio+1,w,c
  2458  001616  6EDA               	movwf	fsr2h,c
  2459  001618  0EE8               	movlw	low _array_boton_seleccionar_tamanio_cafe
  2460  00161A  26D9               	addwf	fsr2l,f,c
  2461  00161C  0E00               	movlw	high _array_boton_seleccionar_tamanio_cafe
  2462  00161E  22DA               	addwfc	fsr2h,f,c
  2463  001620  CFDE F011          	movff	postinc2,?_sprintf+4
  2464  001624  CFDD F012          	movff	postdec2,?_sprintf+5
  2465  001628  EC4F  F00B         	call	_sprintf	;wreg free
  2466                           
  2467                           ;main.c: 530: lcd_gotoxy(9, 1);
  2468  00162C  0E01               	movlw	1
  2469  00162E  6E05               	movwf	lcd_gotoxy@y,c
  2470  001630  0E09               	movlw	9
  2471  001632  EC75  F012         	call	_lcd_gotoxy
  2472                           
  2473                           ;main.c: 531: lcd_putrs(buffer4);
  2474  001636  0E84               	movlw	low _buffer4
  2475  001638  6E09               	movwf	lcd_putrs@ptr,c
  2476  00163A  0E00               	movlw	high _buffer4
  2477  00163C  6E0A               	movwf	lcd_putrs@ptr+1,c
  2478  00163E  ECA9  F011         	call	_lcd_putrs	;wreg free
  2479                           
  2480                           ;main.c: 533: sprintf(buffer5, "%s", array_boton_seleccionar_accion_cafe[accion]);
  2481  001642  0E14               	movlw	low _buffer5
  2482  001644  6E0D               	movwf	sprintf@sp,c
  2483  001646  0E01               	movlw	high _buffer5
  2484  001648  6E0E               	movwf	sprintf@sp+1,c
  2485  00164A  0EF4               	movlw	low STR_29
  2486  00164C  6E0F               	movwf	sprintf@f,c
  2487  00164E  0E0F               	movlw	high STR_29
  2488  001650  6E10               	movwf	sprintf@f+1,c
  2489  001652  90D8               	bcf	status,0,c
  2490  001654  3434               	rlcf	main@accion,w,c
  2491  001656  6ED9               	movwf	fsr2l,c
  2492  001658  3435               	rlcf	main@accion+1,w,c
  2493  00165A  6EDA               	movwf	fsr2h,c
  2494  00165C  0EE2               	movlw	low _array_boton_seleccionar_accion_cafe
  2495  00165E  26D9               	addwf	fsr2l,f,c
  2496  001660  0E00               	movlw	high _array_boton_seleccionar_accion_cafe
  2497  001662  22DA               	addwfc	fsr2h,f,c
  2498  001664  CFDE F011          	movff	postinc2,?_sprintf+4
  2499  001668  CFDD F012          	movff	postdec2,?_sprintf+5
  2500  00166C  EC4F  F00B         	call	_sprintf	;wreg free
  2501                           
  2502                           ;main.c: 534: lcd_gotoxy(1, 2);
  2503  001670  0E02               	movlw	2
  2504  001672  6E05               	movwf	lcd_gotoxy@y,c
  2505  001674  0E01               	movlw	1
  2506  001676  EC75  F012         	call	_lcd_gotoxy
  2507                           
  2508                           ;main.c: 535: lcd_putrs(buffer5);
  2509  00167A  0E14               	movlw	low _buffer5
  2510  00167C  6E09               	movwf	lcd_putrs@ptr,c
  2511  00167E  0E01               	movlw	high _buffer5
  2512  001680  6E0A               	movwf	lcd_putrs@ptr+1,c
  2513  001682  ECA9  F011         	call	_lcd_putrs	;wreg free
  2514  001686  D6C0               	goto	l296
  2515  001688                     l352:
  2516                           
  2517                           ;main.c: 537: }
  2518                           ;main.c: 538: }
  2519                           ;main.c: 541: }
  2520                           ;main.c: 543: setRelojDigital();
  2521  001688  ECAE  F012         	call	_setRelojDigital	;wreg free
  2522                           
  2523                           ;main.c: 544: _delay((unsigned long)((98)*(8000000/4000.0)));
  2524  00168C  0EFF               	movlw	255
  2525  00168E  6E28               	movwf	??_main& (0+255),c
  2526  001690  0E8A               	movlw	138
  2527  001692                     u3697:
  2528  001692  2EE8               	decfsz	wreg,f,c
  2529  001694  D7FE               	bra	u3697
  2530  001696  2E28               	decfsz	??_main& (0+255),f,c
  2531  001698  D7FC               	bra	u3697
  2532  00169A  D000               	nop2	
  2533  00169C  D4B7               	goto	l188
  2534  00169E                     __end_of_main:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           postdec1	equ	0xFE5
  2543                           fsr1l	equ	0xFE1
  2544                           postinc2	equ	0xFDE
  2545                           postdec2	equ	0xFDD
  2546                           fsr2h	equ	0xFDA
  2547                           fsr2l	equ	0xFD9
  2548                           status	equ	0xFD8
  2549                           
  2550 ;; *************** function _setup *****************
  2551 ;; Defined at:
  2552 ;;		line 109 in file "main.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    7
  2573 ;; This function calls:
  2574 ;;		_Write_RTC
  2575 ;;		_lcd_comand
  2576 ;;		_lcd_init
  2577 ;;		_setRelojDigital
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text1
  2584  002430                     __ptext1:
  2585                           	opt stack 0
  2586  002430                     _setup:
  2587                           	opt stack 23
  2588                           
  2589                           ;main.c: 110: OSCTUNEbits.INTSRC = 1;
  2590                           
  2591                           ;incstack = 0
  2592  002430  8E9B               	bsf	3995,7,c	;volatile
  2593                           
  2594                           ;main.c: 111: OSCTUNEbits.PLLEN = 0;
  2595  002432  9C9B               	bcf	3995,6,c	;volatile
  2596                           
  2597                           ;main.c: 112: OSCCONbits.IRCF0 = 1;
  2598  002434  88D3               	bsf	4051,4,c	;volatile
  2599                           
  2600                           ;main.c: 113: OSCCONbits.IRCF1 = 1;
  2601  002436  8AD3               	bsf	4051,5,c	;volatile
  2602                           
  2603                           ;main.c: 114: OSCCONbits.IRCF2 = 1;
  2604  002438  8CD3               	bsf	4051,6,c	;volatile
  2605                           
  2606                           ;main.c: 115: OSCCONbits.SCS0 = 0;
  2607  00243A  90D3               	bcf	4051,0,c	;volatile
  2608                           
  2609                           ;main.c: 116: OSCCONbits.SCS1 = 0;
  2610  00243C  92D3               	bcf	4051,1,c	;volatile
  2611                           
  2612                           ;main.c: 117: TRISA = 0b11111111;
  2613  00243E  6892               	setf	3986,c	;volatile
  2614                           
  2615                           ;main.c: 118: TRISB = 0;
  2616  002440  0E00               	movlw	0
  2617  002442  6E93               	movwf	3987,c	;volatile
  2618                           
  2619                           ;main.c: 119: TRISC = 0b00000111;
  2620  002444  0E07               	movlw	7
  2621  002446  6E94               	movwf	3988,c	;volatile
  2622                           
  2623                           ;main.c: 120: INTCON2bits.RBPU = 1;
  2624  002448  8EF1               	bsf	intcon2,7,c	;volatile
  2625                           
  2626                           ;main.c: 121: ANCON0 = 0b11111111;
  2627  00244A  010F               	movlb	15	; () banked
  2628  00244C  6948               	setf	72,b	;volatile
  2629                           
  2630                           ;main.c: 122: ANCON1 = 0b10010111;
  2631  00244E  0E97               	movlw	151
  2632  002450  010F               	movlb	15	; () banked
  2633  002452  6F49               	movwf	73,b	;volatile
  2634                           
  2635                           ;main.c: 123: ADCON0 = 0b00111111;
  2636  002454  0E3F               	movlw	63
  2637  002456  6EC2               	movwf	4034,c	;volatile
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;main.c: 124: ADCON1 = 0b11111111;
  2641  002458  68C1               	setf	4033,c	;volatile
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;main.c: 127: T1CONbits.T1OSCEN = 1;
  2645  00245A  86CD               	bsf	4045,3,c	;volatile
  2646                           
  2647                           ; BSR set to: 15
  2648                           ;main.c: 129: lcd_init();
  2649  00245C  EC63  F010         	call	_lcd_init	;wreg free
  2650                           
  2651                           ;main.c: 130: lcd_comand(0b00001100);
  2652  002460  0E0C               	movlw	12
  2653  002462  ECB5  F012         	call	_lcd_comand
  2654                           
  2655                           ;main.c: 132: setRelojDigital();
  2656  002466  ECAE  F012         	call	_setRelojDigital	;wreg free
  2657                           
  2658                           ;main.c: 133: Write_RTC();
  2659  00246A  EC73  F00D         	call	_Write_RTC	;wreg free
  2660  00246E  0012               	return		;funcret
  2661  002470                     __end_of_setup:
  2662                           	opt stack 0
  2663                           tblptru	equ	0xFF8
  2664                           tblptrh	equ	0xFF7
  2665                           tblptrl	equ	0xFF6
  2666                           tablat	equ	0xFF5
  2667                           intcon2	equ	0xFF1
  2668                           postinc0	equ	0xFEE
  2669                           wreg	equ	0xFE8
  2670                           postdec1	equ	0xFE5
  2671                           fsr1l	equ	0xFE1
  2672                           postinc2	equ	0xFDE
  2673                           postdec2	equ	0xFDD
  2674                           fsr2h	equ	0xFDA
  2675                           fsr2l	equ	0xFD9
  2676                           status	equ	0xFD8
  2677                           
  2678 ;; *************** function _setRelojDigital *****************
  2679 ;; Defined at:
  2680 ;;		line 101 in file "main.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;                  1    wreg      void 
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    6
  2701 ;; This function calls:
  2702 ;;		_setDiaMesAnio
  2703 ;;		_setDiaSemana
  2704 ;;		_setHoraMinutoSegundo
  2705 ;; This function is called by:
  2706 ;;		_setup
  2707 ;;		_main
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text2
  2712  00255C                     __ptext2:
  2713                           	opt stack 0
  2714  00255C                     _setRelojDigital:
  2715                           	opt stack 23
  2716                           
  2717                           ;main.c: 102: setDiaSemana();
  2718                           
  2719                           ;incstack = 0
  2720  00255C  ECCD  F00C         	call	_setDiaSemana	;wreg free
  2721                           
  2722                           ;main.c: 103: setDiaMesAnio();
  2723  002560  EC25  F010         	call	_setDiaMesAnio	;wreg free
  2724                           
  2725                           ;main.c: 104: setHoraMinutoSegundo();
  2726  002564  EC11  F011         	call	_setHoraMinutoSegundo	;wreg free
  2727  002568  0012               	return		;funcret
  2728  00256A                     __end_of_setRelojDigital:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           intcon2	equ	0xFF1
  2735                           postinc0	equ	0xFEE
  2736                           wreg	equ	0xFE8
  2737                           postdec1	equ	0xFE5
  2738                           fsr1l	equ	0xFE1
  2739                           postinc2	equ	0xFDE
  2740                           postdec2	equ	0xFDD
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8
  2744                           
  2745 ;; *************** function _setHoraMinutoSegundo *****************
  2746 ;; Defined at:
  2747 ;;		line 88 in file "main.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;Total ram usage:        0 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    5
  2768 ;; This function calls:
  2769 ;;		_Write_RTC
  2770 ;;		_lcd_gotoxy
  2771 ;;		_lcd_putrs
  2772 ;;		_sprintf
  2773 ;; This function is called by:
  2774 ;;		_setRelojDigital
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text3
  2779  002222                     __ptext3:
  2780                           	opt stack 0
  2781  002222                     _setHoraMinutoSegundo:
  2782                           	opt stack 23
  2783                           
  2784                           ;main.c: 89: if (hora >= 24) {
  2785                           
  2786                           ;incstack = 0
  2787  002222  BE56               	btfsc	_hora+1,7,c
  2788  002224  D014               	goto	l176
  2789  002226  5056               	movf	_hora+1,w,c
  2790  002228  E104               	bnz	u2600
  2791  00222A  0E18               	movlw	24
  2792  00222C  5C55               	subwf	_hora,w,c
  2793  00222E  A0D8               	btfss	status,0,c
  2794  002230  D00E               	goto	l176
  2795  002232                     u2600:
  2796                           
  2797                           ;main.c: 90: hora = 0;
  2798  002232  0E00               	movlw	0
  2799  002234  6E56               	movwf	_hora+1,c
  2800  002236  0E00               	movlw	0
  2801  002238  6E55               	movwf	_hora,c
  2802                           
  2803                           ;main.c: 91: minuto = 0;
  2804  00223A  0E00               	movlw	0
  2805  00223C  6E54               	movwf	_minuto+1,c
  2806  00223E  0E00               	movlw	0
  2807  002240  6E53               	movwf	_minuto,c
  2808                           
  2809                           ;main.c: 92: segundo = 0;
  2810  002242  0E00               	movlw	0
  2811  002244  6E39               	movwf	_segundo+1,c
  2812  002246  0E00               	movlw	0
  2813  002248  6E38               	movwf	_segundo,c
  2814                           
  2815                           ;main.c: 93: Write_RTC();
  2816  00224A  EC73  F00D         	call	_Write_RTC	;wreg free
  2817  00224E                     l176:
  2818                           
  2819                           ;main.c: 94: }
  2820                           ;main.c: 96: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  2821  00224E  0EAC               	movlw	low _buffer2
  2822  002250  6E0D               	movwf	sprintf@sp,c
  2823  002252  0E00               	movlw	high _buffer2
  2824  002254  6E0E               	movwf	sprintf@sp+1,c
  2825  002256  0E1E               	movlw	low STR_26
  2826  002258  6E0F               	movwf	sprintf@f,c
  2827  00225A  0E0F               	movlw	high STR_26
  2828  00225C  6E10               	movwf	sprintf@f+1,c
  2829  00225E  C055  F011         	movff	_hora,?_sprintf+4
  2830  002262  C056  F012         	movff	_hora+1,?_sprintf+5
  2831  002266  C053  F013         	movff	_minuto,?_sprintf+6
  2832  00226A  C054  F014         	movff	_minuto+1,?_sprintf+7
  2833  00226E  C038  F015         	movff	_segundo,?_sprintf+8
  2834  002272  C039  F016         	movff	_segundo+1,?_sprintf+9
  2835  002276  EC4F  F00B         	call	_sprintf	;wreg free
  2836                           
  2837                           ;main.c: 97: lcd_gotoxy(1, 2);
  2838  00227A  0E02               	movlw	2
  2839  00227C  6E05               	movwf	lcd_gotoxy@y,c
  2840  00227E  0E01               	movlw	1
  2841  002280  EC75  F012         	call	_lcd_gotoxy
  2842                           
  2843                           ;main.c: 98: lcd_putrs(buffer2);
  2844  002284  0EAC               	movlw	low _buffer2
  2845  002286  6E09               	movwf	lcd_putrs@ptr,c
  2846  002288  0E00               	movlw	high _buffer2
  2847  00228A  6E0A               	movwf	lcd_putrs@ptr+1,c
  2848  00228C  ECA9  F011         	call	_lcd_putrs	;wreg free
  2849  002290  0012               	return		;funcret
  2850  002292                     __end_of_setHoraMinutoSegundo:
  2851                           	opt stack 0
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           intcon2	equ	0xFF1
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           postdec1	equ	0xFE5
  2860                           fsr1l	equ	0xFE1
  2861                           postinc2	equ	0xFDE
  2862                           postdec2	equ	0xFDD
  2863                           fsr2h	equ	0xFDA
  2864                           fsr2l	equ	0xFD9
  2865                           status	equ	0xFD8
  2866                           
  2867 ;; *************** function _setDiaSemana *****************
  2868 ;; Defined at:
  2869 ;;		line 40 in file "main.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      void 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;Total ram usage:        1 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    5
  2890 ;; This function calls:
  2891 ;;		_lcd_gotoxy
  2892 ;;		_lcd_putrs
  2893 ;; This function is called by:
  2894 ;;		_setRelojDigital
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text4
  2899  00199A                     __ptext4:
  2900                           	opt stack 0
  2901  00199A                     _setDiaSemana:
  2902                           	opt stack 23
  2903                           
  2904                           ;main.c: 41: if (diasem == 0) {
  2905                           
  2906                           ;incstack = 0
  2907  00199A  5059               	movf	_diasem,w,c
  2908  00199C  105A               	iorwf	_diasem+1,w,c
  2909  00199E  A4D8               	btfss	status,2,c
  2910  0019A0  D013               	goto	l155
  2911                           
  2912                           ;main.c: 42: lcd_gotoxy(1, 1);
  2913  0019A2  0E01               	movlw	1
  2914  0019A4  6E05               	movwf	lcd_gotoxy@y,c
  2915  0019A6  0E01               	movlw	1
  2916  0019A8  EC75  F012         	call	_lcd_gotoxy
  2917                           
  2918                           ;main.c: 43: lcd_putrs("Domingo");
  2919  0019AC  0EAC               	movlw	low STR_18
  2920  0019AE  6E09               	movwf	lcd_putrs@ptr,c
  2921  0019B0  0E0F               	movlw	high STR_18
  2922  0019B2  6E0A               	movwf	lcd_putrs@ptr+1,c
  2923  0019B4  ECA9  F011         	call	_lcd_putrs	;wreg free
  2924                           
  2925                           ;main.c: 44: _delay((unsigned long)((50)*(8000000/4000.0)));
  2926  0019B8  0E82               	movlw	130
  2927  0019BA  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2928  0019BC  0EDE               	movlw	222
  2929  0019BE                     u3707:
  2930  0019BE  2EE8               	decfsz	wreg,f,c
  2931  0019C0  D7FE               	bra	u3707
  2932  0019C2  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2933  0019C4  D7FC               	bra	u3707
  2934                           
  2935                           ;main.c: 45: } else if (diasem == 1) {
  2936  0019C6  0012               	return	
  2937  0019C8                     l155:
  2938  0019C8  0459               	decf	_diasem,w,c
  2939  0019CA  105A               	iorwf	_diasem+1,w,c
  2940  0019CC  A4D8               	btfss	status,2,c
  2941  0019CE  D013               	goto	l157
  2942                           
  2943                           ;main.c: 46: lcd_gotoxy(1, 1);
  2944  0019D0  0E01               	movlw	1
  2945  0019D2  6E05               	movwf	lcd_gotoxy@y,c
  2946  0019D4  0E01               	movlw	1
  2947  0019D6  EC75  F012         	call	_lcd_gotoxy
  2948                           
  2949                           ;main.c: 47: lcd_putrs("Lunes  ");
  2950  0019DA  0E74               	movlw	low STR_19
  2951  0019DC  6E09               	movwf	lcd_putrs@ptr,c
  2952  0019DE  0E0F               	movlw	high STR_19
  2953  0019E0  6E0A               	movwf	lcd_putrs@ptr+1,c
  2954  0019E2  ECA9  F011         	call	_lcd_putrs	;wreg free
  2955                           
  2956                           ;main.c: 48: _delay((unsigned long)((50)*(8000000/4000.0)));
  2957  0019E6  0E82               	movlw	130
  2958  0019E8  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2959  0019EA  0EDE               	movlw	222
  2960  0019EC                     u3717:
  2961  0019EC  2EE8               	decfsz	wreg,f,c
  2962  0019EE  D7FE               	bra	u3717
  2963  0019F0  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2964  0019F2  D7FC               	bra	u3717
  2965                           
  2966                           ;main.c: 49: } else if (diasem == 2) {
  2967  0019F4  0012               	return	
  2968  0019F6                     l157:
  2969  0019F6  0E02               	movlw	2
  2970  0019F8  1859               	xorwf	_diasem,w,c
  2971  0019FA  105A               	iorwf	_diasem+1,w,c
  2972  0019FC  A4D8               	btfss	status,2,c
  2973  0019FE  D013               	goto	l159
  2974                           
  2975                           ;main.c: 50: lcd_gotoxy(1, 1);
  2976  001A00  0E01               	movlw	1
  2977  001A02  6E05               	movwf	lcd_gotoxy@y,c
  2978  001A04  0E01               	movlw	1
  2979  001A06  EC75  F012         	call	_lcd_gotoxy
  2980                           
  2981                           ;main.c: 51: lcd_putrs("Martes ");
  2982  001A0A  0E84               	movlw	low STR_20
  2983  001A0C  6E09               	movwf	lcd_putrs@ptr,c
  2984  001A0E  0E0F               	movlw	high STR_20
  2985  001A10  6E0A               	movwf	lcd_putrs@ptr+1,c
  2986  001A12  ECA9  F011         	call	_lcd_putrs	;wreg free
  2987                           
  2988                           ;main.c: 52: _delay((unsigned long)((50)*(8000000/4000.0)));
  2989  001A16  0E82               	movlw	130
  2990  001A18  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2991  001A1A  0EDE               	movlw	222
  2992  001A1C                     u3727:
  2993  001A1C  2EE8               	decfsz	wreg,f,c
  2994  001A1E  D7FE               	bra	u3727
  2995  001A20  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2996  001A22  D7FC               	bra	u3727
  2997                           
  2998                           ;main.c: 53: } else if (diasem == 3) {
  2999  001A24  0012               	return	
  3000  001A26                     l159:
  3001  001A26  0E03               	movlw	3
  3002  001A28  1859               	xorwf	_diasem,w,c
  3003  001A2A  105A               	iorwf	_diasem+1,w,c
  3004  001A2C  A4D8               	btfss	status,2,c
  3005  001A2E  D013               	goto	l161
  3006                           
  3007                           ;main.c: 54: lcd_gotoxy(1, 1);
  3008  001A30  0E01               	movlw	1
  3009  001A32  6E05               	movwf	lcd_gotoxy@y,c
  3010  001A34  0E01               	movlw	1
  3011  001A36  EC75  F012         	call	_lcd_gotoxy
  3012                           
  3013                           ;main.c: 55: lcd_putrs("Miercol");
  3014  001A3A  0E9C               	movlw	low STR_21
  3015  001A3C  6E09               	movwf	lcd_putrs@ptr,c
  3016  001A3E  0E0F               	movlw	high STR_21
  3017  001A40  6E0A               	movwf	lcd_putrs@ptr+1,c
  3018  001A42  ECA9  F011         	call	_lcd_putrs	;wreg free
  3019                           
  3020                           ;main.c: 56: _delay((unsigned long)((50)*(8000000/4000.0)));
  3021  001A46  0E82               	movlw	130
  3022  001A48  6E0B               	movwf	??_setDiaSemana& (0+255),c
  3023  001A4A  0EDE               	movlw	222
  3024  001A4C                     u3737:
  3025  001A4C  2EE8               	decfsz	wreg,f,c
  3026  001A4E  D7FE               	bra	u3737
  3027  001A50  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  3028  001A52  D7FC               	bra	u3737
  3029                           
  3030                           ;main.c: 57: } else if (diasem == 4) {
  3031  001A54  0012               	return	
  3032  001A56                     l161:
  3033  001A56  0E04               	movlw	4
  3034  001A58  1859               	xorwf	_diasem,w,c
  3035  001A5A  105A               	iorwf	_diasem+1,w,c
  3036  001A5C  A4D8               	btfss	status,2,c
  3037  001A5E  D013               	goto	l163
  3038                           
  3039                           ;main.c: 58: lcd_gotoxy(1, 1);
  3040  001A60  0E01               	movlw	1
  3041  001A62  6E05               	movwf	lcd_gotoxy@y,c
  3042  001A64  0E01               	movlw	1
  3043  001A66  EC75  F012         	call	_lcd_gotoxy
  3044                           
  3045                           ;main.c: 59: lcd_putrs("Jueves ");
  3046  001A6A  0E8C               	movlw	low STR_22
  3047  001A6C  6E09               	movwf	lcd_putrs@ptr,c
  3048  001A6E  0E0F               	movlw	high STR_22
  3049  001A70  6E0A               	movwf	lcd_putrs@ptr+1,c
  3050  001A72  ECA9  F011         	call	_lcd_putrs	;wreg free
  3051                           
  3052                           ;main.c: 60: _delay((unsigned long)((50)*(8000000/4000.0)));
  3053  001A76  0E82               	movlw	130
  3054  001A78  6E0B               	movwf	??_setDiaSemana& (0+255),c
  3055  001A7A  0EDE               	movlw	222
  3056  001A7C                     u3747:
  3057  001A7C  2EE8               	decfsz	wreg,f,c
  3058  001A7E  D7FE               	bra	u3747
  3059  001A80  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  3060  001A82  D7FC               	bra	u3747
  3061                           
  3062                           ;main.c: 61: } else if (diasem == 5) {
  3063  001A84  0012               	return	
  3064  001A86                     l163:
  3065  001A86  0E05               	movlw	5
  3066  001A88  1859               	xorwf	_diasem,w,c
  3067  001A8A  105A               	iorwf	_diasem+1,w,c
  3068  001A8C  A4D8               	btfss	status,2,c
  3069  001A8E  D013               	goto	l165
  3070                           
  3071                           ;main.c: 62: lcd_gotoxy(1, 1);
  3072  001A90  0E01               	movlw	1
  3073  001A92  6E05               	movwf	lcd_gotoxy@y,c
  3074  001A94  0E01               	movlw	1
  3075  001A96  EC75  F012         	call	_lcd_gotoxy
  3076                           
  3077                           ;main.c: 63: lcd_putrs("Viernes");
  3078  001A9A  0EB4               	movlw	low STR_23
  3079  001A9C  6E09               	movwf	lcd_putrs@ptr,c
  3080  001A9E  0E0F               	movlw	high STR_23
  3081  001AA0  6E0A               	movwf	lcd_putrs@ptr+1,c
  3082  001AA2  ECA9  F011         	call	_lcd_putrs	;wreg free
  3083                           
  3084                           ;main.c: 64: _delay((unsigned long)((50)*(8000000/4000.0)));
  3085  001AA6  0E82               	movlw	130
  3086  001AA8  6E0B               	movwf	??_setDiaSemana& (0+255),c
  3087  001AAA  0EDE               	movlw	222
  3088  001AAC                     u3757:
  3089  001AAC  2EE8               	decfsz	wreg,f,c
  3090  001AAE  D7FE               	bra	u3757
  3091  001AB0  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  3092  001AB2  D7FC               	bra	u3757
  3093                           
  3094                           ;main.c: 65: } else if (diasem == 6) {
  3095  001AB4  0012               	return	
  3096  001AB6                     l165:
  3097  001AB6  0E06               	movlw	6
  3098  001AB8  1859               	xorwf	_diasem,w,c
  3099  001ABA  105A               	iorwf	_diasem+1,w,c
  3100  001ABC  A4D8               	btfss	status,2,c
  3101  001ABE  0012               	return	
  3102                           
  3103                           ;main.c: 66: lcd_gotoxy(1, 1);
  3104  001AC0  0E01               	movlw	1
  3105  001AC2  6E05               	movwf	lcd_gotoxy@y,c
  3106  001AC4  0E01               	movlw	1
  3107  001AC6  EC75  F012         	call	_lcd_gotoxy
  3108                           
  3109                           ;main.c: 67: lcd_putrs("Sabado ");
  3110  001ACA  0E7C               	movlw	low STR_24
  3111  001ACC  6E09               	movwf	lcd_putrs@ptr,c
  3112  001ACE  0E0F               	movlw	high STR_24
  3113  001AD0  6E0A               	movwf	lcd_putrs@ptr+1,c
  3114  001AD2  ECA9  F011         	call	_lcd_putrs	;wreg free
  3115                           
  3116                           ;main.c: 68: _delay((unsigned long)((50)*(8000000/4000.0)));
  3117  001AD6  0E82               	movlw	130
  3118  001AD8  6E0B               	movwf	??_setDiaSemana& (0+255),c
  3119  001ADA  0EDE               	movlw	222
  3120  001ADC                     u3767:
  3121  001ADC  2EE8               	decfsz	wreg,f,c
  3122  001ADE  D7FE               	bra	u3767
  3123  001AE0  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  3124  001AE2  D7FC               	bra	u3767
  3125  001AE4  0012               	return	
  3126  001AE6                     __end_of_setDiaSemana:
  3127                           	opt stack 0
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           intcon2	equ	0xFF1
  3133                           postinc0	equ	0xFEE
  3134                           wreg	equ	0xFE8
  3135                           postdec1	equ	0xFE5
  3136                           fsr1l	equ	0xFE1
  3137                           postinc2	equ	0xFDE
  3138                           postdec2	equ	0xFDD
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           
  3143 ;; *************** function _setDiaMesAnio *****************
  3144 ;; Defined at:
  3145 ;;		line 72 in file "main.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3163 ;;Total ram usage:        0 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    5
  3166 ;; This function calls:
  3167 ;;		_Write_RTC
  3168 ;;		_lcd_gotoxy
  3169 ;;		_lcd_putrs
  3170 ;;		_sprintf
  3171 ;; This function is called by:
  3172 ;;		_setRelojDigital
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text5
  3177  00204A                     __ptext5:
  3178                           	opt stack 0
  3179  00204A                     _setDiaMesAnio:
  3180                           	opt stack 23
  3181                           
  3182                           ;main.c: 73: if (dia > 31) {
  3183                           
  3184                           ;incstack = 0
  3185  00204A  BE58               	btfsc	_dia+1,7,c
  3186  00204C  D00C               	goto	l171
  3187  00204E  5058               	movf	_dia+1,w,c
  3188  002050  E104               	bnz	u2580
  3189  002052  0E20               	movlw	32
  3190  002054  5C57               	subwf	_dia,w,c
  3191  002056  A0D8               	btfss	status,0,c
  3192  002058  D006               	goto	l171
  3193  00205A                     u2580:
  3194                           
  3195                           ;main.c: 74: dia = 1;
  3196  00205A  0E00               	movlw	0
  3197  00205C  6E58               	movwf	_dia+1,c
  3198  00205E  0E01               	movlw	1
  3199  002060  6E57               	movwf	_dia,c
  3200                           
  3201                           ;main.c: 75: Write_RTC();
  3202  002062  EC73  F00D         	call	_Write_RTC	;wreg free
  3203  002066                     l171:
  3204                           
  3205                           ;main.c: 76: }
  3206                           ;main.c: 78: if (mes > 12) {
  3207  002066  BE5C               	btfsc	_mes+1,7,c
  3208  002068  D00C               	goto	l172
  3209  00206A  505C               	movf	_mes+1,w,c
  3210  00206C  E104               	bnz	u2590
  3211  00206E  0E0D               	movlw	13
  3212  002070  5C5B               	subwf	_mes,w,c
  3213  002072  A0D8               	btfss	status,0,c
  3214  002074  D006               	goto	l172
  3215  002076                     u2590:
  3216                           
  3217                           ;main.c: 79: mes = 1;
  3218  002076  0E00               	movlw	0
  3219  002078  6E5C               	movwf	_mes+1,c
  3220  00207A  0E01               	movlw	1
  3221  00207C  6E5B               	movwf	_mes,c
  3222                           
  3223                           ;main.c: 80: Write_RTC();
  3224  00207E  EC73  F00D         	call	_Write_RTC	;wreg free
  3225  002082                     l172:
  3226                           
  3227                           ;main.c: 81: }
  3228                           ;main.c: 83: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  3229  002082  0EAC               	movlw	low _buffer2
  3230  002084  6E0D               	movwf	sprintf@sp,c
  3231  002086  0E00               	movlw	high _buffer2
  3232  002088  6E0E               	movwf	sprintf@sp+1,c
  3233  00208A  0E0F               	movlw	low STR_25
  3234  00208C  6E0F               	movwf	sprintf@f,c
  3235  00208E  0E0F               	movlw	high STR_25
  3236  002090  6E10               	movwf	sprintf@f+1,c
  3237  002092  C057  F011         	movff	_dia,?_sprintf+4
  3238  002096  C058  F012         	movff	_dia+1,?_sprintf+5
  3239  00209A  C05B  F013         	movff	_mes,?_sprintf+6
  3240  00209E  C05C  F014         	movff	_mes+1,?_sprintf+7
  3241  0020A2  C05D  F015         	movff	_anio,?_sprintf+8
  3242  0020A6  C05E  F016         	movff	_anio+1,?_sprintf+9
  3243  0020AA  EC4F  F00B         	call	_sprintf	;wreg free
  3244                           
  3245                           ;main.c: 84: lcd_gotoxy(9, 1);
  3246  0020AE  0E01               	movlw	1
  3247  0020B0  6E05               	movwf	lcd_gotoxy@y,c
  3248  0020B2  0E09               	movlw	9
  3249  0020B4  EC75  F012         	call	_lcd_gotoxy
  3250                           
  3251                           ;main.c: 85: lcd_putrs(buffer2);
  3252  0020B8  0EAC               	movlw	low _buffer2
  3253  0020BA  6E09               	movwf	lcd_putrs@ptr,c
  3254  0020BC  0E00               	movlw	high _buffer2
  3255  0020BE  6E0A               	movwf	lcd_putrs@ptr+1,c
  3256  0020C0  ECA9  F011         	call	_lcd_putrs	;wreg free
  3257  0020C4  0012               	return		;funcret
  3258  0020C6                     __end_of_setDiaMesAnio:
  3259                           	opt stack 0
  3260                           tblptru	equ	0xFF8
  3261                           tblptrh	equ	0xFF7
  3262                           tblptrl	equ	0xFF6
  3263                           tablat	equ	0xFF5
  3264                           intcon2	equ	0xFF1
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           postdec1	equ	0xFE5
  3268                           fsr1l	equ	0xFE1
  3269                           postinc2	equ	0xFDE
  3270                           postdec2	equ	0xFDD
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _sprintf *****************
  3276 ;; Defined at:
  3277 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3280 ;;		 -> buffer5(20), buffer4(20), buffer3(20), buffer2(20), 
  3281 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3282 ;;		 -> STR_33(3), STR_32(3), STR_31(3), STR_30(5), 
  3283 ;;		 -> STR_29(3), STR_26(15), STR_25(15), 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  tmpval          4    0        struct .
  3286 ;;  width           2   36[COMRAM] int 
  3287 ;;  len             2   34[COMRAM] unsigned int 
  3288 ;;  cp              2   32[COMRAM] PTR const unsigned char 
  3289 ;;		 -> STR_34(7), NULL(0), STR_17(9), STR_16(9), 
  3290 ;;		 -> STR_15(9), STR_14(9), STR_13(9), STR_12(9), 
  3291 ;;		 -> STR_11(8), STR_10(8), STR_9(8), STR_8(5), 
  3292 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_4(5), 
  3293 ;;		 -> STR_3(5), STR_2(5), STR_1(5), 
  3294 ;;  ap              2   30[COMRAM] PTR void [1]
  3295 ;;		 -> ?_sprintf(2), 
  3296 ;;  val             2   27[COMRAM] unsigned int 
  3297 ;;  c               1   38[COMRAM] char 
  3298 ;;  prec            1   29[COMRAM] char 
  3299 ;;  flag            1   26[COMRAM] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  2   12[COMRAM] int 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3309 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3310 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;Total ram usage:       27 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; Hardware stack levels required when called:    1
  3316 ;; This function calls:
  3317 ;;		___lwdiv
  3318 ;;		___lwmod
  3319 ;;		___wmul
  3320 ;;		_isdigit
  3321 ;; This function is called by:
  3322 ;;		_setDiaMesAnio
  3323 ;;		_setHoraMinutoSegundo
  3324 ;;		_main
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text6
  3329  00169E                     __ptext6:
  3330                           	opt stack 0
  3331  00169E                     _sprintf:
  3332                           	opt stack 29
  3333                           
  3334                           ;doprnt.c: 494: va_list ap;
  3335                           ;doprnt.c: 499: signed char c;
  3336                           ;doprnt.c: 501: int width;
  3337                           ;doprnt.c: 506: signed char prec;
  3338                           ;doprnt.c: 508: unsigned char flag;
  3339                           ;doprnt.c: 523: union {
  3340                           ;doprnt.c: 524: unsigned long vd;
  3341                           ;doprnt.c: 525: double integ;
  3342                           ;doprnt.c: 526: } tmpval;
  3343                           ;doprnt.c: 528: unsigned int val;
  3344                           ;doprnt.c: 529: unsigned len;
  3345                           ;doprnt.c: 530: const char * cp;
  3346                           ;doprnt.c: 533: *ap = __va_start();
  3347                           
  3348                           ;incstack = 0
  3349  00169E  0E11               	movlw	low (?_sprintf+4)
  3350  0016A0  6E1F               	movwf	sprintf@ap,c
  3351  0016A2  0E00               	movlw	high (?_sprintf+4)
  3352  0016A4  6E20               	movwf	sprintf@ap+1,c
  3353                           
  3354                           ;doprnt.c: 536: while(c = *f++) {
  3355  0016A6  D166               	goto	u2490
  3356  0016A8                     
  3357                           ;doprnt.c: 538: if(c != '%')
  3358  0016A8  0E25               	movlw	37
  3359  0016AA  1827               	xorwf	sprintf@c,w,c
  3360  0016AC  B4D8               	btfsc	status,2,c
  3361  0016AE  D009               	goto	l431
  3362                           
  3363                           ;doprnt.c: 540: {
  3364                           ;doprnt.c: 541: ((*sp++ = (c)));
  3365  0016B0  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3366  0016B4  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3367  0016B8  C027  FFDF         	movff	sprintf@c,indf2
  3368  0016BC  4A0D               	infsnz	sprintf@sp,f,c
  3369  0016BE  2A0E               	incf	sprintf@sp+1,f,c
  3370                           
  3371                           ;doprnt.c: 542: continue;
  3372  0016C0  D159               	goto	u2490
  3373  0016C2                     l431:
  3374                           
  3375                           ;doprnt.c: 543: }
  3376                           ;doprnt.c: 546: width = 0;
  3377  0016C2  0E00               	movlw	0
  3378  0016C4  6E26               	movwf	sprintf@width+1,c
  3379  0016C6  0E00               	movlw	0
  3380  0016C8  6E25               	movwf	sprintf@width,c
  3381                           
  3382                           ;doprnt.c: 548: flag = 0;
  3383  0016CA  0E00               	movlw	0
  3384  0016CC  6E1B               	movwf	sprintf@flag,c
  3385                           
  3386                           ;doprnt.c: 551: switch(*f) {
  3387                           
  3388                           ;doprnt.c: 550: for(;;) {
  3389  0016CE  D003               	goto	l433
  3390  0016D0                     
  3391                           ;doprnt.c: 580: flag |= 0x04;
  3392  0016D0  841B               	bsf	sprintf@flag,2,c
  3393                           
  3394                           ;doprnt.c: 581: f++;
  3395  0016D2  4A0F               	infsnz	sprintf@f,f,c
  3396  0016D4  2A10               	incf	sprintf@f+1,f,c
  3397  0016D6                     l433:
  3398  0016D6  C00F  FFF6         	movff	sprintf@f,tblptrl
  3399  0016DA  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3400  0016DE                     	if	0	;tblptru may be non-zero
  3401  0016DE                     	endif
  3402  0016DE                     	if	0	;tblptru may be non-zero
  3403  0016DE                     	endif
  3404  0016DE  0008               	tblrd		*
  3405  0016E0  50F5               	movf	tablat,w,c
  3406                           
  3407                           ; Switch size 1, requested type "space"
  3408                           ; Number of cases is 1, Range of values is 48 to 48
  3409                           ; switch strategies available:
  3410                           ; Name         Instructions Cycles
  3411                           ; simple_byte            4     3 (average)
  3412                           ;	Chosen strategy is simple_byte
  3413  0016E2  0A30               	xorlw	48	; case 48
  3414  0016E4  B4D8               	btfsc	status,2,c
  3415  0016E6  D7F4               	goto	l434
  3416                           
  3417                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3418                           
  3419                           ;doprnt.c: 586: }
  3420                           
  3421                           ;doprnt.c: 585: break;
  3422  0016E8  C00F  FFF6         	movff	sprintf@f,tblptrl
  3423  0016EC  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3424  0016F0                     	if	0	;tblptru may be non-zero
  3425  0016F0                     	endif
  3426  0016F0                     	if	0	;tblptru may be non-zero
  3427  0016F0                     	endif
  3428  0016F0  0008               	tblrd		*
  3429  0016F2  50F5               	movf	tablat,w,c
  3430  0016F4  EC86  F012         	call	_isdigit
  3431  0016F8  A0D8               	btfss	status,0,c
  3432  0016FA  D099               	goto	l441
  3433                           
  3434                           ;doprnt.c: 598: width = 0;
  3435  0016FC  0E00               	movlw	0
  3436  0016FE  6E26               	movwf	sprintf@width+1,c
  3437  001700  0E00               	movlw	0
  3438  001702  6E25               	movwf	sprintf@width,c
  3439  001704                     
  3440                           ;doprnt.c: 600: width *= 10;
  3441  001704  C025  F001         	movff	sprintf@width,___wmul@multiplier
  3442  001708  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  3443  00170C  0E00               	movlw	0
  3444  00170E  6E04               	movwf	___wmul@multiplicand+1,c
  3445  001710  0E0A               	movlw	10
  3446  001712  6E03               	movwf	___wmul@multiplicand,c
  3447  001714  EC51  F012         	call	___wmul	;wreg free
  3448  001718  C001  F025         	movff	?___wmul,sprintf@width
  3449  00171C  C002  F026         	movff	?___wmul+1,sprintf@width+1
  3450                           
  3451                           ;doprnt.c: 601: width += *f++ - '0';
  3452  001720  0ED0               	movlw	208
  3453  001722  6E17               	movwf	??_sprintf& (0+255),c
  3454  001724  0EFF               	movlw	255
  3455  001726  6E18               	movwf	(??_sprintf+1)& (0+255),c
  3456  001728  C00F  FFF6         	movff	sprintf@f,tblptrl
  3457  00172C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3458  001730                     	if	0	;tblptru may be non-zero
  3459  001730                     	endif
  3460  001730                     	if	0	;tblptru may be non-zero
  3461  001730                     	endif
  3462  001730  0008               	tblrd		*
  3463  001732  50F5               	movf	tablat,w,c
  3464  001734  6E19               	movwf	(??_sprintf+2)& (0+255),c
  3465  001736  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  3466  001738  5017               	movf	??_sprintf,w,c
  3467  00173A  2619               	addwf	??_sprintf+2,f,c
  3468  00173C  5018               	movf	??_sprintf+1,w,c
  3469  00173E  221A               	addwfc	??_sprintf+3,f,c
  3470  001740  5019               	movf	??_sprintf+2,w,c
  3471  001742  2625               	addwf	sprintf@width,f,c
  3472  001744  501A               	movf	??_sprintf+3,w,c
  3473  001746  2226               	addwfc	sprintf@width+1,f,c
  3474  001748  4A0F               	infsnz	sprintf@f,f,c
  3475  00174A  2A10               	incf	sprintf@f+1,f,c
  3476                           
  3477                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3478  00174C  C00F  FFF6         	movff	sprintf@f,tblptrl
  3479  001750  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3480  001754                     	if	0	;tblptru may be non-zero
  3481  001754                     	endif
  3482  001754                     	if	0	;tblptru may be non-zero
  3483  001754                     	endif
  3484  001754  0008               	tblrd		*
  3485  001756  50F5               	movf	tablat,w,c
  3486  001758  EC86  F012         	call	_isdigit
  3487  00175C  A0D8               	btfss	status,0,c
  3488  00175E  D067               	goto	l441
  3489  001760  D7D1               	goto	l439
  3490  001762                     
  3491                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3492  001762  C01F  FFD9         	movff	sprintf@ap,fsr2l
  3493  001766  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  3494  00176A  CFDE F021          	movff	postinc2,sprintf@cp
  3495  00176E  CFDD F022          	movff	postdec2,sprintf@cp+1
  3496  001772  0E02               	movlw	2
  3497  001774  261F               	addwf	sprintf@ap,f,c
  3498  001776  0E00               	movlw	0
  3499  001778  2220               	addwfc	sprintf@ap+1,f,c
  3500                           
  3501                           ;doprnt.c: 740: if(!cp)
  3502  00177A  5021               	movf	sprintf@cp,w,c
  3503  00177C  1022               	iorwf	sprintf@cp+1,w,c
  3504  00177E  A4D8               	btfss	status,2,c
  3505  001780  D004               	goto	l445
  3506                           
  3507                           ;doprnt.c: 741: cp = "(null)";
  3508  001782  0EBC               	movlw	low STR_34
  3509  001784  6E21               	movwf	sprintf@cp,c
  3510  001786  0E0F               	movlw	high STR_34
  3511  001788  6E22               	movwf	sprintf@cp+1,c
  3512  00178A                     l445:
  3513                           
  3514                           ;doprnt.c: 745: len = 0;
  3515  00178A  0E00               	movlw	0
  3516  00178C  6E24               	movwf	sprintf@len+1,c
  3517  00178E  0E00               	movlw	0
  3518  001790  6E23               	movwf	sprintf@len,c
  3519                           
  3520                           ;doprnt.c: 746: while(cp[len])
  3521  001792  D002               	goto	l446
  3522  001794                     
  3523                           ;doprnt.c: 747: len++;
  3524  001794  4A23               	infsnz	sprintf@len,f,c
  3525  001796  2A24               	incf	sprintf@len+1,f,c
  3526  001798                     l446:
  3527  001798  5023               	movf	sprintf@len,w,c
  3528  00179A  2421               	addwf	sprintf@cp,w,c
  3529  00179C  6E17               	movwf	??_sprintf& (0+255),c
  3530  00179E  5024               	movf	sprintf@len+1,w,c
  3531  0017A0  2022               	addwfc	sprintf@cp+1,w,c
  3532  0017A2  6E18               	movwf	(??_sprintf+1)& (0+255),c
  3533  0017A4  C017  FFF6         	movff	??_sprintf,tblptrl
  3534  0017A8  C018  FFF7         	movff	??_sprintf+1,tblptrh
  3535  0017AC                     	if	0	;tblptru may be non-zero
  3536  0017AC                     	endif
  3537  0017AC                     	if	0	;tblptru may be non-zero
  3538  0017AC                     	endif
  3539  0017AC  0008               	tblrd		*
  3540  0017AE  50F5               	movf	tablat,w,c
  3541  0017B0  0900               	iorlw	0
  3542  0017B2  A4D8               	btfss	status,2,c
  3543  0017B4  D7EF               	goto	l447
  3544                           
  3545                           ;doprnt.c: 757: if(width > len)
  3546  0017B6  5025               	movf	sprintf@width,w,c
  3547  0017B8  5C23               	subwf	sprintf@len,w,c
  3548  0017BA  5026               	movf	sprintf@width+1,w,c
  3549  0017BC  5824               	subwfb	sprintf@len+1,w,c
  3550  0017BE  B0D8               	btfsc	status,0,c
  3551  0017C0  D005               	goto	l449
  3552                           
  3553                           ;doprnt.c: 758: width -= len;
  3554  0017C2  5023               	movf	sprintf@len,w,c
  3555  0017C4  5E25               	subwf	sprintf@width,f,c
  3556  0017C6  5024               	movf	sprintf@len+1,w,c
  3557  0017C8  5A26               	subwfb	sprintf@width+1,f,c
  3558  0017CA  D00D               	goto	l451
  3559  0017CC                     l449:
  3560                           
  3561                           ;doprnt.c: 759: else
  3562                           ;doprnt.c: 760: width = 0;
  3563  0017CC  0E00               	movlw	0
  3564  0017CE  6E26               	movwf	sprintf@width+1,c
  3565  0017D0  0E00               	movlw	0
  3566  0017D2  6E25               	movwf	sprintf@width,c
  3567                           
  3568                           ;doprnt.c: 764: while(width--)
  3569  0017D4  D008               	goto	l451
  3570  0017D6                     l2708:
  3571                           
  3572                           ;doprnt.c: 765: ((*sp++ = (' ')));
  3573  0017D6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3574  0017DA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3575  0017DE  0E20               	movlw	32
  3576  0017E0  6EDF               	movwf	indf2,c
  3577  0017E2  4A0D               	infsnz	sprintf@sp,f,c
  3578  0017E4  2A0E               	incf	sprintf@sp+1,f,c
  3579  0017E6                     l451:
  3580  0017E6  0625               	decf	sprintf@width,f,c
  3581  0017E8  A0D8               	btfss	status,0,c
  3582  0017EA  0626               	decf	sprintf@width+1,f,c
  3583  0017EC  2825               	incf	sprintf@width,w,c
  3584  0017EE  E1F3               	bnz	l2708
  3585  0017F0  2826               	incf	sprintf@width+1,w,c
  3586  0017F2  B4D8               	btfsc	status,2,c
  3587  0017F4  D010               	goto	l454
  3588  0017F6  D7EF               	goto	l452
  3589  0017F8                     l2714:
  3590                           
  3591                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  3592  0017F8  C021  FFF6         	movff	sprintf@cp,tblptrl
  3593  0017FC  C022  FFF7         	movff	sprintf@cp+1,tblptrh
  3594  001800                     	if	0	;tblptru may be non-zero
  3595  001800                     	endif
  3596  001800                     	if	0	;tblptru may be non-zero
  3597  001800                     	endif
  3598  001800  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3599  001804  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3600  001808  0008               	tblrd		*
  3601  00180A  CFF5 FFDF          	movff	tablat,indf2
  3602  00180E  4A21               	infsnz	sprintf@cp,f,c
  3603  001810  2A22               	incf	sprintf@cp+1,f,c
  3604  001812  4A0D               	infsnz	sprintf@sp,f,c
  3605  001814  2A0E               	incf	sprintf@sp+1,f,c
  3606  001816                     l454:
  3607  001816  0623               	decf	sprintf@len,f,c
  3608  001818  A0D8               	btfss	status,0,c
  3609  00181A  0624               	decf	sprintf@len+1,f,c
  3610  00181C  2823               	incf	sprintf@len,w,c
  3611  00181E  E1EC               	bnz	l2714
  3612  001820  2824               	incf	sprintf@len+1,w,c
  3613  001822  B4D8               	btfsc	status,2,c
  3614  001824  D0A7               	goto	u2490
  3615  001826  D7E8               	goto	l455
  3616  001828                     
  3617                           ;doprnt.c: 818: flag |= 0xC0;
  3618  001828  0EC0               	movlw	192
  3619  00182A  121B               	iorwf	sprintf@flag,f,c
  3620                           
  3621                           ;doprnt.c: 822: }
  3622                           
  3623                           ;doprnt.c: 819: break;
  3624  00182C  D014               	goto	l459
  3625  00182E                     l441:
  3626  00182E  C00F  FFF6         	movff	sprintf@f,tblptrl
  3627  001832  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3628  001836  4A0F               	infsnz	sprintf@f,f,c
  3629  001838  2A10               	incf	sprintf@f+1,f,c
  3630  00183A                     	if	0	;tblptru may be non-zero
  3631  00183A                     	endif
  3632  00183A                     	if	0	;tblptru may be non-zero
  3633  00183A                     	endif
  3634  00183A  0008               	tblrd		*
  3635  00183C  CFF5 F027          	movff	tablat,sprintf@c
  3636  001840  5027               	movf	sprintf@c,w,c
  3637                           
  3638                           ; Switch size 1, requested type "space"
  3639                           ; Number of cases is 3, Range of values is 0 to 117
  3640                           ; switch strategies available:
  3641                           ; Name         Instructions Cycles
  3642                           ; simple_byte           10     6 (average)
  3643                           ;	Chosen strategy is simple_byte
  3644  001842  0A00               	xorlw	0	; case 0
  3645  001844  B4D8               	btfsc	status,2,c
  3646  001846  D0A2               	goto	u2500
  3647  001848  0A73               	xorlw	115	; case 115
  3648  00184A  B4D8               	btfsc	status,2,c
  3649  00184C  D78A               	goto	l444
  3650  00184E  0A06               	xorlw	6	; case 117
  3651  001850  B4D8               	btfsc	status,2,c
  3652  001852  D7EA               	goto	l458
  3653  001854  D08F               	goto	u2490
  3654  001856                     l459:
  3655                           
  3656                           ;doprnt.c: 1273: {
  3657                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3658  001856  C01F  FFD9         	movff	sprintf@ap,fsr2l
  3659  00185A  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  3660  00185E  CFDE F01C          	movff	postinc2,sprintf@val
  3661  001862  CFDD F01D          	movff	postdec2,sprintf@val+1
  3662  001866  0E02               	movlw	2
  3663  001868  261F               	addwf	sprintf@ap,f,c
  3664  00186A  0E00               	movlw	0
  3665  00186C  2220               	addwfc	sprintf@ap+1,f,c
  3666                           
  3667                           ;doprnt.c: 1287: }
  3668                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3669  00186E  0E01               	movlw	1
  3670  001870  6E27               	movwf	sprintf@c,c
  3671  001872                     l2734:
  3672  001872  0E05               	movlw	5
  3673  001874  1827               	xorwf	sprintf@c,w,c
  3674  001876  B4D8               	btfsc	status,2,c
  3675  001878  D012               	goto	u2420
  3676                           
  3677                           ;doprnt.c: 1306: if(val < dpowers[c])
  3678  00187A  5027               	movf	sprintf@c,w,c
  3679  00187C  0D02               	mullw	2
  3680  00187E  0E01               	movlw	low _dpowers
  3681  001880  24F3               	addwf	prodl,w,c
  3682  001882  6EF6               	movwf	tblptrl,c
  3683  001884  0E0F               	movlw	high _dpowers
  3684  001886  20F4               	addwfc	prodh,w,c
  3685  001888  6EF7               	movwf	tblptrh,c
  3686  00188A                     	if	0	;There are less than 3 active tblptr bytes
  3687  00188A                     	endif
  3688  00188A  0009               	tblrd		*+
  3689  00188C  50F5               	movf	tablat,w,c
  3690  00188E  5C1C               	subwf	sprintf@val,w,c
  3691  001890  0009               	tblrd		*+
  3692  001892  50F5               	movf	tablat,w,c
  3693  001894  581D               	subwfb	sprintf@val+1,w,c
  3694  001896  A0D8               	btfss	status,0,c
  3695  001898  D002               	goto	u2420
  3696                           
  3697                           ;doprnt.c: 1307: break;
  3698  00189A  2A27               	incf	sprintf@c,f,c
  3699  00189C  D7EA               	goto	l2734
  3700  00189E                     u2420:
  3701                           
  3702                           ;doprnt.c: 1381: if(width > c)
  3703  00189E  0E80               	movlw	128
  3704  0018A0  BE27               	btfsc	sprintf@c,7,c
  3705  0018A2  0E7F               	movlw	127
  3706  0018A4  6E17               	movwf	??_sprintf& (0+255),c
  3707  0018A6  5025               	movf	sprintf@width,w,c
  3708  0018A8  5C27               	subwf	sprintf@c,w,c
  3709  0018AA  5026               	movf	sprintf@width+1,w,c
  3710  0018AC  0A80               	xorlw	128
  3711  0018AE  5817               	subwfb	??_sprintf& (0+255),w,c
  3712  0018B0  B0D8               	btfsc	status,0,c
  3713  0018B2  D007               	goto	l463
  3714                           
  3715                           ;doprnt.c: 1382: width -= c;
  3716  0018B4  5027               	movf	sprintf@c,w,c
  3717  0018B6  5E25               	subwf	sprintf@width,f,c
  3718  0018B8  0E00               	movlw	0
  3719  0018BA  BE27               	btfsc	sprintf@c,7,c
  3720  0018BC  0EFF               	movlw	255
  3721  0018BE  5A26               	subwfb	sprintf@width+1,f,c
  3722  0018C0  D004               	goto	l464
  3723  0018C2                     l463:
  3724                           
  3725                           ;doprnt.c: 1383: else
  3726                           ;doprnt.c: 1384: width = 0;
  3727  0018C2  0E00               	movlw	0
  3728  0018C4  6E26               	movwf	sprintf@width+1,c
  3729  0018C6  0E00               	movlw	0
  3730  0018C8  6E25               	movwf	sprintf@width,c
  3731  0018CA                     l464:
  3732                           
  3733                           ;doprnt.c: 1387: if(flag & 0x04) {
  3734  0018CA  A41B               	btfss	sprintf@flag,2,c
  3735  0018CC  D010               	goto	l465
  3736  0018CE                     
  3737                           ;doprnt.c: 1415: if(width)
  3738  0018CE  5025               	movf	sprintf@width,w,c
  3739  0018D0  1026               	iorwf	sprintf@width+1,w,c
  3740  0018D2  B4D8               	btfsc	status,2,c
  3741  0018D4  D01F               	goto	u2480
  3742                           
  3743                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  3744                           
  3745                           ;doprnt.c: 1416: do
  3746  0018D6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3747  0018DA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3748  0018DE  0E30               	movlw	48
  3749  0018E0  6EDF               	movwf	indf2,c
  3750  0018E2  4A0D               	infsnz	sprintf@sp,f,c
  3751  0018E4  2A0E               	incf	sprintf@sp+1,f,c
  3752                           
  3753                           ;doprnt.c: 1418: while(--width);
  3754  0018E6  0625               	decf	sprintf@width,f,c
  3755  0018E8  A0D8               	btfss	status,0,c
  3756  0018EA  0626               	decf	sprintf@width+1,f,c
  3757  0018EC  D7F0               	goto	L2
  3758  0018EE                     l465:
  3759                           
  3760                           ;doprnt.c: 1422: {
  3761                           ;doprnt.c: 1424: if(width
  3762                           ;doprnt.c: 1428: )
  3763  0018EE  5025               	movf	sprintf@width,w,c
  3764  0018F0  1026               	iorwf	sprintf@width+1,w,c
  3765  0018F2  B4D8               	btfsc	status,2,c
  3766  0018F4  D00F               	goto	u2480
  3767  0018F6                     u2470:
  3768                           
  3769                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3770                           
  3771                           ;doprnt.c: 1429: do
  3772  0018F6  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3773  0018FA  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3774  0018FE  0E20               	movlw	32
  3775  001900  6EDF               	movwf	indf2,c
  3776  001902  4A0D               	infsnz	sprintf@sp,f,c
  3777  001904  2A0E               	incf	sprintf@sp+1,f,c
  3778                           
  3779                           ;doprnt.c: 1431: while(--width);
  3780  001906  0625               	decf	sprintf@width,f,c
  3781  001908  A0D8               	btfss	status,0,c
  3782  00190A  0626               	decf	sprintf@width+1,f,c
  3783  00190C  5025               	movf	sprintf@width,w,c
  3784  00190E  1026               	iorwf	sprintf@width+1,w,c
  3785  001910  A4D8               	btfss	status,2,c
  3786  001912  D7F1               	goto	u2470
  3787  001914                     u2480:
  3788                           
  3789                           ;doprnt.c: 1469: }
  3790                           ;doprnt.c: 1472: prec = c;
  3791  001914  C027  F01E         	movff	sprintf@c,sprintf@prec
  3792                           
  3793                           ;doprnt.c: 1474: while(prec--) {
  3794  001918  D029               	goto	l473
  3795  00191A                     
  3796                           ;doprnt.c: 1478: {
  3797                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3798  00191A  501E               	movf	sprintf@prec,w,c
  3799  00191C  0D02               	mullw	2
  3800  00191E  0E01               	movlw	low _dpowers
  3801  001920  24F3               	addwf	prodl,w,c
  3802  001922  6EF6               	movwf	tblptrl,c
  3803  001924  0E0F               	movlw	high _dpowers
  3804  001926  20F4               	addwfc	prodh,w,c
  3805  001928  6EF7               	movwf	tblptrh,c
  3806  00192A                     	if	0	;There are less than 3 active tblptr bytes
  3807  00192A                     	endif
  3808  00192A  0009               	tblrd		*+
  3809  00192C  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3810  001930  000A               	tblrd		*-
  3811  001932  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3812  001936  C01C  F001         	movff	sprintf@val,___lwdiv@dividend
  3813  00193A  C01D  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3814  00193E  EC80  F011         	call	___lwdiv	;wreg free
  3815  001942  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3816  001946  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3817  00194A  0E00               	movlw	0
  3818  00194C  6E0B               	movwf	___lwmod@divisor+1,c
  3819  00194E  0E0A               	movlw	10
  3820  001950  6E0A               	movwf	___lwmod@divisor,c
  3821  001952  ECF7  F011         	call	___lwmod	;wreg free
  3822  001956  5008               	movf	?___lwmod,w,c
  3823  001958  0F30               	addlw	48
  3824  00195A  6E27               	movwf	sprintf@c,c
  3825                           
  3826                           ;doprnt.c: 1523: }
  3827                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3828  00195C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3829  001960  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3830  001964  C027  FFDF         	movff	sprintf@c,indf2
  3831  001968  4A0D               	infsnz	sprintf@sp,f,c
  3832  00196A  2A0E               	incf	sprintf@sp+1,f,c
  3833  00196C                     l473:
  3834  00196C  061E               	decf	sprintf@prec,f,c
  3835  00196E  281E               	incf	sprintf@prec,w,c
  3836  001970  A4D8               	btfss	status,2,c
  3837  001972  D7D3               	goto	l474
  3838  001974                     u2490:
  3839  001974  C00F  FFF6         	movff	sprintf@f,tblptrl
  3840  001978  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3841  00197C  4A0F               	infsnz	sprintf@f,f,c
  3842  00197E  2A10               	incf	sprintf@f+1,f,c
  3843  001980                     	if	0	;tblptru may be non-zero
  3844  001980                     	endif
  3845  001980                     	if	0	;tblptru may be non-zero
  3846  001980                     	endif
  3847  001980  0008               	tblrd		*
  3848  001982  CFF5 F027          	movff	tablat,sprintf@c
  3849  001986  5027               	movf	sprintf@c,w,c
  3850  001988  A4D8               	btfss	status,2,c
  3851  00198A  D68E               	goto	l430
  3852  00198C                     u2500:
  3853                           
  3854                           ;doprnt.c: 1538: *sp = 0;
  3855                           
  3856                           ;doprnt.c: 1525: }
  3857                           ;doprnt.c: 1533: }
  3858                           ;doprnt.c: 1535: alldone:
  3859  00198C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3860  001990  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3861  001994  0E00               	movlw	0
  3862  001996  6EDF               	movwf	indf2,c
  3863  001998  0012               	return	
  3864  00199A                     __end_of_sprintf:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           prodh	equ	0xFF4
  3871                           prodl	equ	0xFF3
  3872                           intcon2	equ	0xFF1
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           postdec1	equ	0xFE5
  3876                           fsr1l	equ	0xFE1
  3877                           indf2	equ	0xFDF
  3878                           postinc2	equ	0xFDE
  3879                           postdec2	equ	0xFDD
  3880                           fsr2h	equ	0xFDA
  3881                           fsr2l	equ	0xFD9
  3882                           status	equ	0xFD8
  3883                           
  3884 ;; *************** function _isdigit *****************
  3885 ;; Defined at:
  3886 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  c               1    wreg     unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  c               1    2[COMRAM] unsigned char 
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3904 ;;Total ram usage:        3 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_sprintf
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text7
  3914  00250C                     __ptext7:
  3915                           	opt stack 0
  3916  00250C                     _isdigit:
  3917                           	opt stack 29
  3918                           
  3919                           ;incstack = 0
  3920                           ;isdigit@c stored from wreg
  3921  00250C  6E03               	movwf	isdigit@c,c
  3922  00250E  0E00               	movlw	0
  3923  002510  6E02               	movwf	_isdigit$1783,c
  3924  002512  0E3A               	movlw	58
  3925  002514  6003               	cpfslt	isdigit@c,c
  3926  002516  D005               	goto	l917
  3927  002518  0E2F               	movlw	47
  3928  00251A  6403               	cpfsgt	isdigit@c,c
  3929  00251C  D002               	goto	l917
  3930  00251E  0E01               	movlw	1
  3931  002520  6E02               	movwf	_isdigit$1783,c
  3932  002522                     l917:
  3933  002522  C002  F001         	movff	_isdigit$1783,??_isdigit
  3934  002526  3001               	rrcf	??_isdigit,w,c
  3935  002528  0012               	return	
  3936  00252A                     __end_of_isdigit:
  3937                           	opt stack 0
  3938                           tblptru	equ	0xFF8
  3939                           tblptrh	equ	0xFF7
  3940                           tblptrl	equ	0xFF6
  3941                           tablat	equ	0xFF5
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon2	equ	0xFF1
  3945                           postinc0	equ	0xFEE
  3946                           wreg	equ	0xFE8
  3947                           postdec1	equ	0xFE5
  3948                           fsr1l	equ	0xFE1
  3949                           indf2	equ	0xFDF
  3950                           postinc2	equ	0xFDE
  3951                           postdec2	equ	0xFDD
  3952                           fsr2h	equ	0xFDA
  3953                           fsr2l	equ	0xFD9
  3954                           status	equ	0xFD8
  3955                           
  3956 ;; *************** function ___wmul *****************
  3957 ;; Defined at:
  3958 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  multiplier      2    0[COMRAM] unsigned int 
  3961 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  product         2    4[COMRAM] unsigned int 
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  2    0[COMRAM] unsigned int 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0, prodl, prodh
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3973 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3976 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3977 ;;Total ram usage:        6 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; This function calls:
  3980 ;;		Nothing
  3981 ;; This function is called by:
  3982 ;;		_main
  3983 ;;		_sprintf
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text8
  3988  0024A2                     __ptext8:
  3989                           	opt stack 0
  3990  0024A2                     ___wmul:
  3991                           	opt stack 29
  3992                           
  3993                           ;incstack = 0
  3994  0024A2  5001               	movf	___wmul@multiplier,w,c
  3995  0024A4  0203               	mulwf	___wmul@multiplicand,c
  3996  0024A6  CFF3 F005          	movff	prodl,___wmul@product
  3997  0024AA  CFF4 F006          	movff	prodh,___wmul@product+1
  3998  0024AE  5001               	movf	___wmul@multiplier,w,c
  3999  0024B0  0204               	mulwf	___wmul@multiplicand+1,c
  4000  0024B2  50F3               	movf	prodl,w,c
  4001  0024B4  2606               	addwf	___wmul@product+1,f,c
  4002  0024B6  5002               	movf	___wmul@multiplier+1,w,c
  4003  0024B8  0203               	mulwf	___wmul@multiplicand,c
  4004  0024BA  50F3               	movf	prodl,w,c
  4005  0024BC  2606               	addwf	___wmul@product+1,f,c
  4006  0024BE  C005  F001         	movff	___wmul@product,?___wmul
  4007  0024C2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  4008  0024C6  0012               	return	
  4009  0024C8                     __end_of___wmul:
  4010                           	opt stack 0
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           intcon2	equ	0xFF1
  4018                           postinc0	equ	0xFEE
  4019                           wreg	equ	0xFE8
  4020                           postdec1	equ	0xFE5
  4021                           fsr1l	equ	0xFE1
  4022                           indf2	equ	0xFDF
  4023                           postinc2	equ	0xFDE
  4024                           postdec2	equ	0xFDD
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function ___lwmod *****************
  4030 ;; Defined at:
  4031 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  dividend        2    7[COMRAM] unsigned int 
  4034 ;;  divisor         2    9[COMRAM] unsigned int 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  counter         1   11[COMRAM] unsigned char 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    7[COMRAM] unsigned int 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4049 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4050 ;;Total ram usage:        5 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_sprintf
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           	psect	text9
  4060  0023EE                     __ptext9:
  4061                           	opt stack 0
  4062  0023EE                     ___lwmod:
  4063                           	opt stack 29
  4064                           
  4065                           ;incstack = 0
  4066  0023EE  500A               	movf	___lwmod@divisor,w,c
  4067  0023F0  100B               	iorwf	___lwmod@divisor+1,w,c
  4068  0023F2  B4D8               	btfsc	status,2,c
  4069  0023F4  D018               	goto	l1011
  4070  0023F6  0E01               	movlw	1
  4071  0023F8  6E0C               	movwf	___lwmod@counter,c
  4072  0023FA  D004               	goto	l1006
  4073  0023FC  90D8               	bcf	status,0,c
  4074  0023FE  360A               	rlcf	___lwmod@divisor,f,c
  4075  002400  360B               	rlcf	___lwmod@divisor+1,f,c
  4076  002402  2A0C               	incf	___lwmod@counter,f,c
  4077  002404                     l1006:
  4078  002404  AE0B               	btfss	___lwmod@divisor+1,7,c
  4079  002406  D7FA               	goto	l1007
  4080  002408                     u2270:
  4081  002408  500A               	movf	___lwmod@divisor,w,c
  4082  00240A  5C08               	subwf	___lwmod@dividend,w,c
  4083  00240C  500B               	movf	___lwmod@divisor+1,w,c
  4084  00240E  5809               	subwfb	___lwmod@dividend+1,w,c
  4085  002410  A0D8               	btfss	status,0,c
  4086  002412  D004               	goto	l1010
  4087  002414  500A               	movf	___lwmod@divisor,w,c
  4088  002416  5E08               	subwf	___lwmod@dividend,f,c
  4089  002418  500B               	movf	___lwmod@divisor+1,w,c
  4090  00241A  5A09               	subwfb	___lwmod@dividend+1,f,c
  4091  00241C                     l1010:
  4092  00241C  90D8               	bcf	status,0,c
  4093  00241E  320B               	rrcf	___lwmod@divisor+1,f,c
  4094  002420  320A               	rrcf	___lwmod@divisor,f,c
  4095  002422  2E0C               	decfsz	___lwmod@counter,f,c
  4096  002424  D7F1               	goto	u2270
  4097  002426                     l1011:
  4098  002426  C008  F008         	movff	___lwmod@dividend,?___lwmod
  4099  00242A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  4100  00242E  0012               	return		;funcret
  4101  002430                     __end_of___lwmod:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           prodh	equ	0xFF4
  4108                           prodl	equ	0xFF3
  4109                           intcon2	equ	0xFF1
  4110                           postinc0	equ	0xFEE
  4111                           wreg	equ	0xFE8
  4112                           postdec1	equ	0xFE5
  4113                           fsr1l	equ	0xFE1
  4114                           indf2	equ	0xFDF
  4115                           postinc2	equ	0xFDE
  4116                           postdec2	equ	0xFDD
  4117                           fsr2h	equ	0xFDA
  4118                           fsr2l	equ	0xFD9
  4119                           status	equ	0xFD8
  4120                           
  4121 ;; *************** function ___lwdiv *****************
  4122 ;; Defined at:
  4123 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  dividend        2    0[COMRAM] unsigned int 
  4126 ;;  divisor         2    2[COMRAM] unsigned int 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  quotient        2    4[COMRAM] unsigned int 
  4129 ;;  counter         1    6[COMRAM] unsigned char 
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  2    0[COMRAM] unsigned int 
  4132 ;; Registers used:
  4133 ;;		wreg, status,2, status,0
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;Total ram usage:        7 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_sprintf
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text10
  4153  002300                     __ptext10:
  4154                           	opt stack 0
  4155  002300                     ___lwdiv:
  4156                           	opt stack 29
  4157                           
  4158                           ;incstack = 0
  4159  002300  0E00               	movlw	0
  4160  002302  6E06               	movwf	___lwdiv@quotient+1,c
  4161  002304  0E00               	movlw	0
  4162  002306  6E05               	movwf	___lwdiv@quotient,c
  4163  002308  5003               	movf	___lwdiv@divisor,w,c
  4164  00230A  1004               	iorwf	___lwdiv@divisor+1,w,c
  4165  00230C  B4D8               	btfsc	status,2,c
  4166  00230E  D01C               	goto	l1001
  4167  002310  0E01               	movlw	1
  4168  002312  6E07               	movwf	___lwdiv@counter,c
  4169  002314  D004               	goto	l996
  4170  002316  90D8               	bcf	status,0,c
  4171  002318  3603               	rlcf	___lwdiv@divisor,f,c
  4172  00231A  3604               	rlcf	___lwdiv@divisor+1,f,c
  4173  00231C  2A07               	incf	___lwdiv@counter,f,c
  4174  00231E                     l996:
  4175  00231E  AE04               	btfss	___lwdiv@divisor+1,7,c
  4176  002320  D7FA               	goto	l997
  4177  002322                     u2240:
  4178  002322  90D8               	bcf	status,0,c
  4179  002324  3605               	rlcf	___lwdiv@quotient,f,c
  4180  002326  3606               	rlcf	___lwdiv@quotient+1,f,c
  4181  002328  5003               	movf	___lwdiv@divisor,w,c
  4182  00232A  5C01               	subwf	___lwdiv@dividend,w,c
  4183  00232C  5004               	movf	___lwdiv@divisor+1,w,c
  4184  00232E  5802               	subwfb	___lwdiv@dividend+1,w,c
  4185  002330  A0D8               	btfss	status,0,c
  4186  002332  D005               	goto	l1000
  4187  002334  5003               	movf	___lwdiv@divisor,w,c
  4188  002336  5E01               	subwf	___lwdiv@dividend,f,c
  4189  002338  5004               	movf	___lwdiv@divisor+1,w,c
  4190  00233A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  4191  00233C  8005               	bsf	___lwdiv@quotient,0,c
  4192  00233E                     l1000:
  4193  00233E  90D8               	bcf	status,0,c
  4194  002340  3204               	rrcf	___lwdiv@divisor+1,f,c
  4195  002342  3203               	rrcf	___lwdiv@divisor,f,c
  4196  002344  2E07               	decfsz	___lwdiv@counter,f,c
  4197  002346  D7ED               	goto	u2240
  4198  002348                     l1001:
  4199  002348  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4200  00234C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4201  002350  0012               	return		;funcret
  4202  002352                     __end_of___lwdiv:
  4203                           	opt stack 0
  4204                           tblptru	equ	0xFF8
  4205                           tblptrh	equ	0xFF7
  4206                           tblptrl	equ	0xFF6
  4207                           tablat	equ	0xFF5
  4208                           prodh	equ	0xFF4
  4209                           prodl	equ	0xFF3
  4210                           intcon2	equ	0xFF1
  4211                           postinc0	equ	0xFEE
  4212                           wreg	equ	0xFE8
  4213                           postdec1	equ	0xFE5
  4214                           fsr1l	equ	0xFE1
  4215                           indf2	equ	0xFDF
  4216                           postinc2	equ	0xFDE
  4217                           postdec2	equ	0xFDD
  4218                           fsr2h	equ	0xFDA
  4219                           fsr2l	equ	0xFD9
  4220                           status	equ	0xFD8
  4221                           
  4222 ;; *************** function _lcd_putrs *****************
  4223 ;; Defined at:
  4224 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  4227 ;;		 -> buffer5(20), buffer4(20), buffer3(20), STR_28(9), 
  4228 ;;		 -> STR_27(4), buffer2(20), STR_24(8), STR_23(8), 
  4229 ;;		 -> STR_22(8), STR_21(8), STR_20(8), STR_19(8), 
  4230 ;;		 -> STR_18(8), 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4246 ;;Total ram usage:        2 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    4
  4249 ;; This function calls:
  4250 ;;		_lcd_putc
  4251 ;; This function is called by:
  4252 ;;		_setDiaSemana
  4253 ;;		_setDiaMesAnio
  4254 ;;		_setHoraMinutoSegundo
  4255 ;;		_main
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text11
  4260  002352                     __ptext11:
  4261                           	opt stack 0
  4262  002352                     _lcd_putrs:
  4263                           	opt stack 23
  4264                           
  4265                           ;unmc_lcd_216.c: 223: while(*ptr){
  4266                           
  4267                           ;incstack = 0
  4268  002352  D014               	goto	l415
  4269  002354                     
  4270                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  4271  002354  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4272  002358  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4273  00235C  6AF8               	clrf	tblptru,c
  4274  00235E  0E0E               	movlw	(high __ramtop+-1)
  4275  002360  64F7               	cpfsgt	tblptrh,c
  4276  002362  D003               	bra	u2297
  4277  002364  0008               	tblrd		*
  4278  002366  50F5               	movf	tablat,w,c
  4279  002368  D005               	bra	u2290
  4280  00236A                     u2297:
  4281  00236A  CFF6 FFE9          	movff	tblptrl,fsr0l
  4282  00236E  CFF7 FFEA          	movff	tblptrh,fsr0h
  4283  002372  50EF               	movf	indf0,w,c
  4284  002374                     u2290:
  4285  002374  ECD2  F011         	call	_lcd_putc
  4286  002378  4A09               	infsnz	lcd_putrs@ptr,f,c
  4287  00237A  2A0A               	incf	lcd_putrs@ptr+1,f,c
  4288  00237C                     l415:
  4289  00237C  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4290  002380  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4291  002384  6AF8               	clrf	tblptru,c
  4292  002386  0E0E               	movlw	(high __ramtop+-1)
  4293  002388  64F7               	cpfsgt	tblptrh,c
  4294  00238A  D003               	bra	u2307
  4295  00238C  0008               	tblrd		*
  4296  00238E  50F5               	movf	tablat,w,c
  4297  002390  D005               	bra	u2300
  4298  002392                     u2307:
  4299  002392  CFF6 FFE9          	movff	tblptrl,fsr0l
  4300  002396  CFF7 FFEA          	movff	tblptrh,fsr0h
  4301  00239A  50EF               	movf	indf0,w,c
  4302  00239C                     u2300:
  4303  00239C  0900               	iorlw	0
  4304  00239E  B4D8               	btfsc	status,2,c
  4305  0023A0  0012               	return	
  4306  0023A2  D7D8               	goto	l416
  4307  0023A4                     __end_of_lcd_putrs:
  4308                           	opt stack 0
  4309                           tblptru	equ	0xFF8
  4310                           tblptrh	equ	0xFF7
  4311                           tblptrl	equ	0xFF6
  4312                           tablat	equ	0xFF5
  4313                           prodh	equ	0xFF4
  4314                           prodl	equ	0xFF3
  4315                           intcon2	equ	0xFF1
  4316                           indf0	equ	0xFEF
  4317                           postinc0	equ	0xFEE
  4318                           fsr0h	equ	0xFEA
  4319                           fsr0l	equ	0xFE9
  4320                           wreg	equ	0xFE8
  4321                           postdec1	equ	0xFE5
  4322                           fsr1l	equ	0xFE1
  4323                           indf2	equ	0xFDF
  4324                           postinc2	equ	0xFDE
  4325                           postdec2	equ	0xFDD
  4326                           fsr2h	equ	0xFDA
  4327                           fsr2l	equ	0xFD9
  4328                           status	equ	0xFD8
  4329                           
  4330 ;; *************** function _lcd_putc *****************
  4331 ;; Defined at:
  4332 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4333 ;; Parameters:    Size  Location     Type
  4334 ;;  c               1    wreg     unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  c               1    7[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      void 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2, status,0, cstack
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;Total ram usage:        1 bytes
  4351 ;; Hardware stack levels used:    1
  4352 ;; Hardware stack levels required when called:    3
  4353 ;; This function calls:
  4354 ;;		_lcd_gotoxy
  4355 ;;		_lcd_send_byte
  4356 ;; This function is called by:
  4357 ;;		_lcd_putrs
  4358 ;;		_lcd_puts
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text12
  4363  0023A4                     __ptext12:
  4364                           	opt stack 0
  4365  0023A4                     _lcd_putc:
  4366                           	opt stack 23
  4367                           
  4368                           ;incstack = 0
  4369                           ;lcd_putc@c stored from wreg
  4370  0023A4  6E08               	movwf	lcd_putc@c,c
  4371                           
  4372                           ;unmc_lcd_216.c: 173: switch(c){
  4373  0023A6  D018               	goto	l394
  4374  0023A8                     
  4375                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  4376  0023A8  0E01               	movlw	1
  4377  0023AA  6E03               	movwf	lcd_send_byte@n,c
  4378  0023AC  0E00               	movlw	0
  4379  0023AE  EC38  F012         	call	_lcd_send_byte
  4380                           
  4381                           ;unmc_lcd_216.c: 176: break;
  4382  0023B2  0012               	return	
  4383  0023B4                     
  4384                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  4385  0023B4  0E02               	movlw	2
  4386  0023B6  6E05               	movwf	lcd_gotoxy@y,c
  4387  0023B8  0E01               	movlw	1
  4388  0023BA  EC75  F012         	call	_lcd_gotoxy
  4389                           
  4390                           ;unmc_lcd_216.c: 179: break;
  4391  0023BE  0012               	return	
  4392  0023C0                     
  4393                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  4394  0023C0  0E10               	movlw	16
  4395  0023C2  6E03               	movwf	lcd_send_byte@n,c
  4396  0023C4  0E00               	movlw	0
  4397  0023C6  EC38  F012         	call	_lcd_send_byte
  4398                           
  4399                           ;unmc_lcd_216.c: 182: break;
  4400  0023CA  0012               	return	
  4401  0023CC                     
  4402                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  4403  0023CC  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  4404  0023D0  0E01               	movlw	1
  4405  0023D2  EC38  F012         	call	_lcd_send_byte
  4406                           
  4407                           ;unmc_lcd_216.c: 186: }
  4408                           
  4409                           ;unmc_lcd_216.c: 185: break;
  4410  0023D6  0012               	return	
  4411  0023D8                     l394:
  4412  0023D8  5008               	movf	lcd_putc@c,w,c
  4413                           
  4414                           ; Switch size 1, requested type "space"
  4415                           ; Number of cases is 3, Range of values is 8 to 12
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte           10     6 (average)
  4419                           ;	Chosen strategy is simple_byte
  4420  0023DA  0A08               	xorlw	8	; case 8
  4421  0023DC  B4D8               	btfsc	status,2,c
  4422  0023DE  D7F0               	goto	l398
  4423  0023E0  0A02               	xorlw	2	; case 10
  4424  0023E2  B4D8               	btfsc	status,2,c
  4425  0023E4  D7E7               	goto	l397
  4426  0023E6  0A06               	xorlw	6	; case 12
  4427  0023E8  B4D8               	btfsc	status,2,c
  4428  0023EA  D7DE               	goto	l395
  4429  0023EC  D7EF               	goto	l399
  4430  0023EE                     __end_of_lcd_putc:
  4431                           	opt stack 0
  4432                           tblptru	equ	0xFF8
  4433                           tblptrh	equ	0xFF7
  4434                           tblptrl	equ	0xFF6
  4435                           tablat	equ	0xFF5
  4436                           prodh	equ	0xFF4
  4437                           prodl	equ	0xFF3
  4438                           intcon2	equ	0xFF1
  4439                           indf0	equ	0xFEF
  4440                           postinc0	equ	0xFEE
  4441                           fsr0h	equ	0xFEA
  4442                           fsr0l	equ	0xFE9
  4443                           wreg	equ	0xFE8
  4444                           postdec1	equ	0xFE5
  4445                           fsr1l	equ	0xFE1
  4446                           indf2	equ	0xFDF
  4447                           postinc2	equ	0xFDE
  4448                           postdec2	equ	0xFDD
  4449                           fsr2h	equ	0xFDA
  4450                           fsr2l	equ	0xFD9
  4451                           status	equ	0xFD8
  4452                           
  4453 ;; *************** function _lcd_gotoxy *****************
  4454 ;; Defined at:
  4455 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  x               1    wreg     unsigned char 
  4458 ;;  y               1    4[COMRAM] unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  x               1    5[COMRAM] unsigned char 
  4461 ;;  address         1    6[COMRAM] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4474 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;Total ram usage:        3 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    2
  4478 ;; This function calls:
  4479 ;;		_lcd_send_byte
  4480 ;; This function is called by:
  4481 ;;		_setDiaSemana
  4482 ;;		_setDiaMesAnio
  4483 ;;		_setHoraMinutoSegundo
  4484 ;;		_main
  4485 ;;		_lcd_putc
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text13
  4490  0024EA                     __ptext13:
  4491                           	opt stack 0
  4492  0024EA                     _lcd_gotoxy:
  4493                           	opt stack 23
  4494                           
  4495                           ;incstack = 0
  4496                           ;lcd_gotoxy@x stored from wreg
  4497  0024EA  6E06               	movwf	lcd_gotoxy@x,c
  4498                           
  4499                           ;unmc_lcd_216.c: 159: int8 address;
  4500                           ;unmc_lcd_216.c: 161: if(y != 1)
  4501  0024EC  0405               	decf	lcd_gotoxy@y,w,c
  4502  0024EE  B4D8               	btfsc	status,2,c
  4503  0024F0  D002               	goto	l389
  4504                           
  4505                           ;unmc_lcd_216.c: 162: address = 0x40;
  4506  0024F2  0E40               	movlw	64
  4507  0024F4  D001               	goto	L1
  4508  0024F6                     l389:
  4509                           
  4510                           ;unmc_lcd_216.c: 163: else
  4511                           ;unmc_lcd_216.c: 164: address=0;
  4512  0024F6  0E00               	movlw	0
  4513  0024F8                     L1:
  4514  0024F8  6E07               	movwf	lcd_gotoxy@address,c
  4515                           
  4516                           ;unmc_lcd_216.c: 166: address += x-1;
  4517  0024FA  0406               	decf	lcd_gotoxy@x,w,c
  4518  0024FC  2607               	addwf	lcd_gotoxy@address,f,c
  4519                           
  4520                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  4521  0024FE  5007               	movf	lcd_gotoxy@address,w,c
  4522  002500  0980               	iorlw	128
  4523  002502  6E03               	movwf	lcd_send_byte@n,c
  4524  002504  0E00               	movlw	0
  4525  002506  EC38  F012         	call	_lcd_send_byte
  4526  00250A  0012               	return		;funcret
  4527  00250C                     __end_of_lcd_gotoxy:
  4528                           	opt stack 0
  4529                           tblptru	equ	0xFF8
  4530                           tblptrh	equ	0xFF7
  4531                           tblptrl	equ	0xFF6
  4532                           tablat	equ	0xFF5
  4533                           prodh	equ	0xFF4
  4534                           prodl	equ	0xFF3
  4535                           intcon2	equ	0xFF1
  4536                           indf0	equ	0xFEF
  4537                           postinc0	equ	0xFEE
  4538                           fsr0h	equ	0xFEA
  4539                           fsr0l	equ	0xFE9
  4540                           wreg	equ	0xFE8
  4541                           postdec1	equ	0xFE5
  4542                           fsr1l	equ	0xFE1
  4543                           indf2	equ	0xFDF
  4544                           postinc2	equ	0xFDE
  4545                           postdec2	equ	0xFDD
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8
  4549                           
  4550 ;; *************** function _Write_RTC *****************
  4551 ;; Defined at:
  4552 ;;		line 76 in file "../../headers\unmc_rtcc_01.h"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4570 ;;Total ram usage:        0 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    2
  4573 ;; This function calls:
  4574 ;;		_RtccWrOn
  4575 ;;		_RtccWriteDate
  4576 ;;		_RtccWriteTime
  4577 ;;		___awdiv
  4578 ;; This function is called by:
  4579 ;;		_setDiaMesAnio
  4580 ;;		_setHoraMinutoSegundo
  4581 ;;		_setup
  4582 ;;		_main
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text14
  4587  001AE6                     __ptext14:
  4588                           	opt stack 0
  4589  001AE6                     _Write_RTC:
  4590                           	opt stack 25
  4591                           
  4592                           ;headers\unmc_rtcc_01.h: 77: RtccWrOn();
  4593                           
  4594                           ;incstack = 0
  4595  001AE6  EC95  F012         	call	_RtccWrOn	;wreg free
  4596                           
  4597                           ;headers\unmc_rtcc_01.h: 79: PIE3bits.RTCCIE = 1;
  4598  001AEA  80A3               	bsf	4003,0,c	;volatile
  4599                           
  4600                           ;headers\unmc_rtcc_01.h: 80: segundo_d = segundo / 10;
  4601  001AEC  C038  F001         	movff	_segundo,___awdiv@dividend
  4602  001AF0  C039  F002         	movff	_segundo+1,___awdiv@dividend+1
  4603  001AF4  0E00               	movlw	0
  4604  001AF6  6E04               	movwf	___awdiv@divisor+1,c
  4605  001AF8  0E0A               	movlw	10
  4606  001AFA  6E03               	movwf	___awdiv@divisor,c
  4607  001AFC  ECE3  F00F         	call	___awdiv	;wreg free
  4608  001B00  5001               	movf	?___awdiv,w,c
  4609  001B02  6E49               	movwf	_segundo_d,c
  4610                           
  4611                           ;headers\unmc_rtcc_01.h: 81: segundo_u = segundo - segundo_d * 10;
  4612  001B04  5049               	movf	_segundo_d,w,c
  4613  001B06  0D0A               	mullw	10
  4614  001B08  50F3               	movf	prodl,w,c
  4615  001B0A  0800               	sublw	0
  4616  001B0C  2438               	addwf	_segundo,w,c
  4617  001B0E  6E4A               	movwf	_segundo_u,c
  4618                           
  4619                           ;headers\unmc_rtcc_01.h: 82: RtccTime.f.sec = segundo_d * 16 + segundo_u;
  4620  001B10  5049               	movf	_segundo_d,w,c
  4621  001B12  0D10               	mullw	16
  4622  001B14  50F3               	movf	prodl,w,c
  4623  001B16  244A               	addwf	_segundo_u,w,c
  4624  001B18  6E50               	movwf	_RtccTime+1,c
  4625                           
  4626                           ;headers\unmc_rtcc_01.h: 83: minuto_d = minuto / 10;
  4627  001B1A  C053  F001         	movff	_minuto,___awdiv@dividend
  4628  001B1E  C054  F002         	movff	_minuto+1,___awdiv@dividend+1
  4629  001B22  0E00               	movlw	0
  4630  001B24  6E04               	movwf	___awdiv@divisor+1,c
  4631  001B26  0E0A               	movlw	10
  4632  001B28  6E03               	movwf	___awdiv@divisor,c
  4633  001B2A  ECE3  F00F         	call	___awdiv	;wreg free
  4634  001B2E  5001               	movf	?___awdiv,w,c
  4635  001B30  6E47               	movwf	_minuto_d,c
  4636                           
  4637                           ;headers\unmc_rtcc_01.h: 84: minuto_u = minuto - minuto_d * 10;
  4638  001B32  5047               	movf	_minuto_d,w,c
  4639  001B34  0D0A               	mullw	10
  4640  001B36  50F3               	movf	prodl,w,c
  4641  001B38  0800               	sublw	0
  4642  001B3A  2453               	addwf	_minuto,w,c
  4643  001B3C  6E48               	movwf	_minuto_u,c
  4644                           
  4645                           ;headers\unmc_rtcc_01.h: 85: RtccTime.f.min = minuto_d * 16 + minuto_u;
  4646  001B3E  5047               	movf	_minuto_d,w,c
  4647  001B40  0D10               	mullw	16
  4648  001B42  50F3               	movf	prodl,w,c
  4649  001B44  2448               	addwf	_minuto_u,w,c
  4650  001B46  6E51               	movwf	_RtccTime+2,c
  4651                           
  4652                           ;headers\unmc_rtcc_01.h: 86: hora_d = hora / 10;
  4653  001B48  C055  F001         	movff	_hora,___awdiv@dividend
  4654  001B4C  C056  F002         	movff	_hora+1,___awdiv@dividend+1
  4655  001B50  0E00               	movlw	0
  4656  001B52  6E04               	movwf	___awdiv@divisor+1,c
  4657  001B54  0E0A               	movlw	10
  4658  001B56  6E03               	movwf	___awdiv@divisor,c
  4659  001B58  ECE3  F00F         	call	___awdiv	;wreg free
  4660  001B5C  5001               	movf	?___awdiv,w,c
  4661  001B5E  6E45               	movwf	_hora_d,c
  4662                           
  4663                           ;headers\unmc_rtcc_01.h: 87: hora_u = hora - hora_d * 10;
  4664  001B60  5045               	movf	_hora_d,w,c
  4665  001B62  0D0A               	mullw	10
  4666  001B64  50F3               	movf	prodl,w,c
  4667  001B66  0800               	sublw	0
  4668  001B68  2455               	addwf	_hora,w,c
  4669  001B6A  6E46               	movwf	_hora_u,c
  4670                           
  4671                           ;headers\unmc_rtcc_01.h: 88: RtccTime.f.hour = hora_d * 16 + hora_u;
  4672  001B6C  5045               	movf	_hora_d,w,c
  4673  001B6E  0D10               	mullw	16
  4674  001B70  50F3               	movf	prodl,w,c
  4675  001B72  2446               	addwf	_hora_u,w,c
  4676  001B74  6E52               	movwf	_RtccTime+3,c
  4677                           
  4678                           ;headers\unmc_rtcc_01.h: 89: anio_d = anio / 10;
  4679  001B76  C05D  F001         	movff	_anio,___awdiv@dividend
  4680  001B7A  C05E  F002         	movff	_anio+1,___awdiv@dividend+1
  4681  001B7E  0E00               	movlw	0
  4682  001B80  6E04               	movwf	___awdiv@divisor+1,c
  4683  001B82  0E0A               	movlw	10
  4684  001B84  6E03               	movwf	___awdiv@divisor,c
  4685  001B86  ECE3  F00F         	call	___awdiv	;wreg free
  4686  001B8A  5001               	movf	?___awdiv,w,c
  4687  001B8C  6E3E               	movwf	_anio_d,c
  4688                           
  4689                           ;headers\unmc_rtcc_01.h: 90: anio_u = anio - anio_d * 10;
  4690  001B8E  503E               	movf	_anio_d,w,c
  4691  001B90  0D0A               	mullw	10
  4692  001B92  50F3               	movf	prodl,w,c
  4693  001B94  0800               	sublw	0
  4694  001B96  245D               	addwf	_anio,w,c
  4695  001B98  6E3F               	movwf	_anio_u,c
  4696                           
  4697                           ;headers\unmc_rtcc_01.h: 91: RtccDate.f.year = anio_d * 16 + anio_u;
  4698  001B9A  503E               	movf	_anio_d,w,c
  4699  001B9C  0D10               	mullw	16
  4700  001B9E  50F3               	movf	prodl,w,c
  4701  001BA0  243F               	addwf	_anio_u,w,c
  4702  001BA2  6E4E               	movwf	_RtccDate+3,c
  4703                           
  4704                           ;headers\unmc_rtcc_01.h: 92: mes_d = mes / 10;
  4705  001BA4  C05B  F001         	movff	_mes,___awdiv@dividend
  4706  001BA8  C05C  F002         	movff	_mes+1,___awdiv@dividend+1
  4707  001BAC  0E00               	movlw	0
  4708  001BAE  6E04               	movwf	___awdiv@divisor+1,c
  4709  001BB0  0E0A               	movlw	10
  4710  001BB2  6E03               	movwf	___awdiv@divisor,c
  4711  001BB4  ECE3  F00F         	call	___awdiv	;wreg free
  4712  001BB8  5001               	movf	?___awdiv,w,c
  4713  001BBA  6E41               	movwf	_mes_d,c
  4714                           
  4715                           ;headers\unmc_rtcc_01.h: 93: mes_u = mes - mes_d * 10;
  4716  001BBC  5041               	movf	_mes_d,w,c
  4717  001BBE  0D0A               	mullw	10
  4718  001BC0  50F3               	movf	prodl,w,c
  4719  001BC2  0800               	sublw	0
  4720  001BC4  245B               	addwf	_mes,w,c
  4721  001BC6  6E42               	movwf	_mes_u,c
  4722                           
  4723                           ;headers\unmc_rtcc_01.h: 94: RtccDate.f.mon = mes_d * 16 + mes_u;
  4724  001BC8  5041               	movf	_mes_d,w,c
  4725  001BCA  0D10               	mullw	16
  4726  001BCC  50F3               	movf	prodl,w,c
  4727  001BCE  2442               	addwf	_mes_u,w,c
  4728  001BD0  6E4D               	movwf	_RtccDate+2,c
  4729                           
  4730                           ;headers\unmc_rtcc_01.h: 95: fecha_d = dia / 10;
  4731  001BD2  C057  F001         	movff	_dia,___awdiv@dividend
  4732  001BD6  C058  F002         	movff	_dia+1,___awdiv@dividend+1
  4733  001BDA  0E00               	movlw	0
  4734  001BDC  6E04               	movwf	___awdiv@divisor+1,c
  4735  001BDE  0E0A               	movlw	10
  4736  001BE0  6E03               	movwf	___awdiv@divisor,c
  4737  001BE2  ECE3  F00F         	call	___awdiv	;wreg free
  4738  001BE6  5001               	movf	?___awdiv,w,c
  4739  001BE8  6E43               	movwf	_fecha_d,c
  4740                           
  4741                           ;headers\unmc_rtcc_01.h: 96: fecha_u = dia - fecha_d * 10;
  4742  001BEA  5043               	movf	_fecha_d,w,c
  4743  001BEC  0D0A               	mullw	10
  4744  001BEE  50F3               	movf	prodl,w,c
  4745  001BF0  0800               	sublw	0
  4746  001BF2  2457               	addwf	_dia,w,c
  4747  001BF4  6E44               	movwf	_fecha_u,c
  4748                           
  4749                           ;headers\unmc_rtcc_01.h: 97: RtccDate.f.mday = fecha_d * 16 + fecha_u;
  4750  001BF6  5043               	movf	_fecha_d,w,c
  4751  001BF8  0D10               	mullw	16
  4752  001BFA  50F3               	movf	prodl,w,c
  4753  001BFC  2444               	addwf	_fecha_u,w,c
  4754  001BFE  6E4C               	movwf	_RtccDate+1,c
  4755                           
  4756                           ;headers\unmc_rtcc_01.h: 98: dia_semana = diasem;
  4757  001C00  C059  F040         	movff	_diasem,_dia_semana
  4758                           
  4759                           ;headers\unmc_rtcc_01.h: 99: RtccDate.f.wday = diasem;
  4760  001C04  C059  F04B         	movff	_diasem,_RtccDate
  4761                           
  4762                           ;headers\unmc_rtcc_01.h: 100: RtccWriteTime(&RtccTime, 1);
  4763  001C08  0E4F               	movlw	low _RtccTime
  4764  001C0A  6E01               	movwf	RtccWriteTime@pTm,c
  4765  001C0C  0E00               	movlw	high _RtccTime
  4766  001C0E  6E02               	movwf	RtccWriteTime@pTm+1,c
  4767  001C10  0E01               	movlw	1
  4768  001C12  6E03               	movwf	RtccWriteTime@di,c
  4769  001C14  ECB2  F00E         	call	_RtccWriteTime	;wreg free
  4770                           
  4771                           ;headers\unmc_rtcc_01.h: 101: RtccWriteDate(&RtccDate, 1);
  4772  001C18  0E4B               	movlw	low _RtccDate
  4773  001C1A  6E01               	movwf	RtccWriteDate@pDt,c
  4774  001C1C  0E00               	movlw	high _RtccDate
  4775  001C1E  6E02               	movwf	RtccWriteDate@pDt+1,c
  4776  001C20  0E01               	movlw	1
  4777  001C22  6E03               	movwf	RtccWriteDate@di,c
  4778  001C24  EC17  F00E         	call	_RtccWriteDate	;wreg free
  4779                           
  4780                           ;headers\unmc_rtcc_01.h: 102: (RTCCFGbits.RTCEN=1);
  4781  001C28  010F               	movlb	15	; () banked
  4782  001C2A  8F3F               	bsf	63,7,b	;volatile
  4783                           
  4784                           ; BSR set to: 15
  4785  001C2C  0012               	return		;funcret
  4786  001C2E                     __end_of_Write_RTC:
  4787                           	opt stack 0
  4788                           tblptru	equ	0xFF8
  4789                           tblptrh	equ	0xFF7
  4790                           tblptrl	equ	0xFF6
  4791                           tablat	equ	0xFF5
  4792                           prodh	equ	0xFF4
  4793                           prodl	equ	0xFF3
  4794                           intcon2	equ	0xFF1
  4795                           indf0	equ	0xFEF
  4796                           postinc0	equ	0xFEE
  4797                           fsr0h	equ	0xFEA
  4798                           fsr0l	equ	0xFE9
  4799                           wreg	equ	0xFE8
  4800                           postdec1	equ	0xFE5
  4801                           fsr1l	equ	0xFE1
  4802                           indf2	equ	0xFDF
  4803                           postinc2	equ	0xFDE
  4804                           postdec2	equ	0xFDD
  4805                           fsr2h	equ	0xFDA
  4806                           fsr2l	equ	0xFD9
  4807                           status	equ	0xFD8
  4808                           
  4809 ;; *************** function ___awdiv *****************
  4810 ;; Defined at:
  4811 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4812 ;; Parameters:    Size  Location     Type
  4813 ;;  dividend        2    0[COMRAM] int 
  4814 ;;  divisor         2    2[COMRAM] int 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  quotient        2    6[COMRAM] int 
  4817 ;;  sign            1    5[COMRAM] unsigned char 
  4818 ;;  counter         1    4[COMRAM] unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  2    0[COMRAM] int 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4829 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4831 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4832 ;;Total ram usage:        8 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_Write_RTC
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text15
  4842  001FC6                     __ptext15:
  4843                           	opt stack 0
  4844  001FC6                     ___awdiv:
  4845                           	opt stack 26
  4846                           
  4847                           ; BSR set to: 15
  4848                           ;incstack = 0
  4849  001FC6  0E00               	movlw	0
  4850  001FC8  6E06               	movwf	___awdiv@sign,c
  4851  001FCA  AE04               	btfss	___awdiv@divisor+1,7,c
  4852  001FCC  D006               	goto	l734
  4853  001FCE  6C03               	negf	___awdiv@divisor,c
  4854  001FD0  1E04               	comf	___awdiv@divisor+1,f,c
  4855  001FD2  B0D8               	btfsc	status,0,c
  4856  001FD4  2A04               	incf	___awdiv@divisor+1,f,c
  4857  001FD6  0E01               	movlw	1
  4858  001FD8  6E06               	movwf	___awdiv@sign,c
  4859  001FDA                     l734:
  4860  001FDA  AE02               	btfss	___awdiv@dividend+1,7,c
  4861  001FDC  D006               	goto	l735
  4862  001FDE  6C01               	negf	___awdiv@dividend,c
  4863  001FE0  1E02               	comf	___awdiv@dividend+1,f,c
  4864  001FE2  B0D8               	btfsc	status,0,c
  4865  001FE4  2A02               	incf	___awdiv@dividend+1,f,c
  4866  001FE6  0E01               	movlw	1
  4867  001FE8  1A06               	xorwf	___awdiv@sign,f,c
  4868  001FEA                     l735:
  4869  001FEA  0E00               	movlw	0
  4870  001FEC  6E08               	movwf	___awdiv@quotient+1,c
  4871  001FEE  0E00               	movlw	0
  4872  001FF0  6E07               	movwf	___awdiv@quotient,c
  4873  001FF2  5003               	movf	___awdiv@divisor,w,c
  4874  001FF4  1004               	iorwf	___awdiv@divisor+1,w,c
  4875  001FF6  B4D8               	btfsc	status,2,c
  4876  001FF8  D01C               	goto	l742
  4877  001FFA  0E01               	movlw	1
  4878  001FFC  6E05               	movwf	___awdiv@counter,c
  4879  001FFE  D004               	goto	l737
  4880  002000  90D8               	bcf	status,0,c
  4881  002002  3603               	rlcf	___awdiv@divisor,f,c
  4882  002004  3604               	rlcf	___awdiv@divisor+1,f,c
  4883  002006  2A05               	incf	___awdiv@counter,f,c
  4884  002008                     l737:
  4885  002008  AE04               	btfss	___awdiv@divisor+1,7,c
  4886  00200A  D7FA               	goto	l738
  4887  00200C                     u2200:
  4888  00200C  90D8               	bcf	status,0,c
  4889  00200E  3607               	rlcf	___awdiv@quotient,f,c
  4890  002010  3608               	rlcf	___awdiv@quotient+1,f,c
  4891  002012  5003               	movf	___awdiv@divisor,w,c
  4892  002014  5C01               	subwf	___awdiv@dividend,w,c
  4893  002016  5004               	movf	___awdiv@divisor+1,w,c
  4894  002018  5802               	subwfb	___awdiv@dividend+1,w,c
  4895  00201A  A0D8               	btfss	status,0,c
  4896  00201C  D005               	goto	l741
  4897  00201E  5003               	movf	___awdiv@divisor,w,c
  4898  002020  5E01               	subwf	___awdiv@dividend,f,c
  4899  002022  5004               	movf	___awdiv@divisor+1,w,c
  4900  002024  5A02               	subwfb	___awdiv@dividend+1,f,c
  4901  002026  8007               	bsf	___awdiv@quotient,0,c
  4902  002028                     l741:
  4903  002028  90D8               	bcf	status,0,c
  4904  00202A  3204               	rrcf	___awdiv@divisor+1,f,c
  4905  00202C  3203               	rrcf	___awdiv@divisor,f,c
  4906  00202E  2E05               	decfsz	___awdiv@counter,f,c
  4907  002030  D7ED               	goto	u2200
  4908  002032                     l742:
  4909  002032  5006               	movf	___awdiv@sign,w,c
  4910  002034  B4D8               	btfsc	status,2,c
  4911  002036  D004               	goto	l743
  4912  002038  6C07               	negf	___awdiv@quotient,c
  4913  00203A  1E08               	comf	___awdiv@quotient+1,f,c
  4914  00203C  B0D8               	btfsc	status,0,c
  4915  00203E  2A08               	incf	___awdiv@quotient+1,f,c
  4916  002040                     l743:
  4917  002040  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4918  002044  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4919  002048  0012               	return	
  4920  00204A                     __end_of___awdiv:
  4921                           	opt stack 0
  4922                           tblptru	equ	0xFF8
  4923                           tblptrh	equ	0xFF7
  4924                           tblptrl	equ	0xFF6
  4925                           tablat	equ	0xFF5
  4926                           prodh	equ	0xFF4
  4927                           prodl	equ	0xFF3
  4928                           intcon2	equ	0xFF1
  4929                           indf0	equ	0xFEF
  4930                           postinc0	equ	0xFEE
  4931                           fsr0h	equ	0xFEA
  4932                           fsr0l	equ	0xFE9
  4933                           wreg	equ	0xFE8
  4934                           postdec1	equ	0xFE5
  4935                           fsr1l	equ	0xFE1
  4936                           indf2	equ	0xFDF
  4937                           postinc2	equ	0xFDE
  4938                           postdec2	equ	0xFDD
  4939                           fsr2h	equ	0xFDA
  4940                           fsr2l	equ	0xFD9
  4941                           status	equ	0xFD8
  4942                           
  4943 ;; *************** function _RtccWriteTime *****************
  4944 ;; Defined at:
  4945 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  pTm             2    0[COMRAM] PTR const struct .
  4948 ;;		 -> RtccTime(4), 
  4949 ;;  di              1    2[COMRAM] enum E7121
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  tempHourWDay    2    9[COMRAM] struct .
  4952 ;;  tempMinSec      2    7[COMRAM] struct .
  4953 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4954 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4955 ;;  wasOn           1    4[COMRAM] enum E7121
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      enum E6550
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4965 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4968 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;Total ram usage:       11 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    1
  4972 ;; This function calls:
  4973 ;;		_RtccWrOn
  4974 ;; This function is called by:
  4975 ;;		_Write_RTC
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text16
  4980  001D64                     __ptext16:
  4981                           	opt stack 0
  4982  001D64                     _RtccWriteTime:
  4983                           	opt stack 25
  4984                           
  4985                           ;incstack = 0
  4986  001D64  0E00               	movlw	0
  4987  001D66  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4988  001D68  EE20 F002          	lfsr	2,2
  4989  001D6C  5001               	movf	RtccWriteTime@pTm,w,c
  4990  001D6E  26D9               	addwf	fsr2l,f,c
  4991  001D70  5002               	movf	RtccWriteTime@pTm+1,w,c
  4992  001D72  22DA               	addwfc	fsr2h,f,c
  4993  001D74  0E5A               	movlw	90
  4994  001D76  60DF               	cpfslt	indf2,c
  4995  001D78  0012               	return	
  4996  001D7A  EE20 F001          	lfsr	2,1
  4997  001D7E  5001               	movf	RtccWriteTime@pTm,w,c
  4998  001D80  26D9               	addwf	fsr2l,f,c
  4999  001D82  5002               	movf	RtccWriteTime@pTm+1,w,c
  5000  001D84  22DA               	addwfc	fsr2h,f,c
  5001  001D86  0E5A               	movlw	90
  5002  001D88  60DF               	cpfslt	indf2,c
  5003  001D8A  0012               	return	
  5004  001D8C  EE20 F003          	lfsr	2,3
  5005  001D90  5001               	movf	RtccWriteTime@pTm,w,c
  5006  001D92  26D9               	addwf	fsr2l,f,c
  5007  001D94  5002               	movf	RtccWriteTime@pTm+1,w,c
  5008  001D96  22DA               	addwfc	fsr2h,f,c
  5009  001D98  0E24               	movlw	36
  5010  001D9A  64DF               	cpfsgt	indf2,c
  5011  001D9C  D001               	goto	l554
  5012  001D9E  0012               	return	
  5013  001DA0                     l554:
  5014  001DA0  EE20 F002          	lfsr	2,2
  5015  001DA4  5001               	movf	RtccWriteTime@pTm,w,c
  5016  001DA6  26D9               	addwf	fsr2l,f,c
  5017  001DA8  5002               	movf	RtccWriteTime@pTm+1,w,c
  5018  001DAA  22DA               	addwfc	fsr2h,f,c
  5019  001DAC  50DF               	movf	indf2,w,c
  5020  001DAE  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  5021  001DB0  EE20 F001          	lfsr	2,1
  5022  001DB4  5001               	movf	RtccWriteTime@pTm,w,c
  5023  001DB6  26D9               	addwf	fsr2l,f,c
  5024  001DB8  5002               	movf	RtccWriteTime@pTm+1,w,c
  5025  001DBA  22DA               	addwfc	fsr2h,f,c
  5026  001DBC  50DF               	movf	indf2,w,c
  5027  001DBE  6E08               	movwf	RtccWriteTime@tempMinSec,c
  5028  001DC0  5003               	movf	RtccWriteTime@di,w,c
  5029  001DC2  A4D8               	btfss	status,2,c
  5030  001DC4  9CF2               	bcf	intcon,6,c	;volatile
  5031  001DC6  010F               	movlb	15	; () banked
  5032  001DC8  0E00               	movlw	0
  5033  001DCA  BB3F               	btfsc	63,5,b	;volatile
  5034  001DCC  0E01               	movlw	1
  5035  001DCE  6E07               	movwf	RtccWriteTime@wasWrEn,c
  5036  001DD0  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5037  001DD2  B4D8               	btfsc	status,2,c
  5038                           
  5039                           ; BSR set to: 15
  5040  001DD4  EC95  F012         	call	_RtccWrOn	;wreg free
  5041  001DD8  010F               	movlb	15	; () banked
  5042  001DDA  0E00               	movlw	0
  5043  001DDC  BF3F               	btfsc	63,7,b	;volatile
  5044  001DDE  0E01               	movlw	1
  5045  001DE0  6E05               	movwf	RtccWriteTime@wasOn,c
  5046  001DE2  5005               	movf	RtccWriteTime@wasOn,w,c
  5047  001DE4  B4D8               	btfsc	status,2,c
  5048  001DE6  D006               	goto	l560
  5049                           
  5050                           ; BSR set to: 15
  5051  001DE8  0E00               	movlw	0
  5052  001DEA  BE91               	btfsc	3985,7,c	;volatile
  5053  001DEC  0E01               	movlw	1
  5054  001DEE  6E06               	movwf	RtccWriteTime@wasAlrm,c
  5055                           
  5056                           ; BSR set to: 15
  5057  001DF0  010F               	movlb	15	; () banked
  5058  001DF2  9F3F               	bcf	63,7,b	;volatile
  5059  001DF4                     l560:
  5060                           
  5061                           ; BSR set to: 15
  5062                           
  5063                           ; BSR set to: 15
  5064  001DF4  0EFC               	movlw	252
  5065  001DF6  010F               	movlb	15	; () banked
  5066  001DF8  173F               	andwf	63,f,b	;volatile
  5067  001DFA  010F               	movlb	15	; () banked
  5068  001DFC  813F               	bsf	63,0,b	;volatile
  5069                           
  5070                           ; BSR set to: 15
  5071  001DFE  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  5072                           
  5073                           ; BSR set to: 15
  5074  001E02  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  5075                           
  5076                           ; BSR set to: 15
  5077  001E06  EE20 F003          	lfsr	2,3
  5078  001E0A  5001               	movf	RtccWriteTime@pTm,w,c
  5079  001E0C  26D9               	addwf	fsr2l,f,c
  5080  001E0E  5002               	movf	RtccWriteTime@pTm+1,w,c
  5081  001E10  22DA               	addwfc	fsr2h,f,c
  5082  001E12  50DF               	movf	indf2,w,c
  5083  001E14  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  5084                           
  5085                           ; BSR set to: 15
  5086  001E16  0EFC               	movlw	252
  5087  001E18  010F               	movlb	15	; () banked
  5088  001E1A  173F               	andwf	63,f,b	;volatile
  5089                           
  5090                           ; BSR set to: 15
  5091  001E1C  010F               	movlb	15	; () banked
  5092  001E1E  813F               	bsf	63,0,b	;volatile
  5093                           
  5094                           ; BSR set to: 15
  5095  001E20  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  5096                           
  5097                           ; BSR set to: 15
  5098  001E24  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  5099                           
  5100                           ; BSR set to: 15
  5101  001E28  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  5102                           
  5103                           ; BSR set to: 15
  5104  001E2C  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  5105                           
  5106                           ; BSR set to: 15
  5107  001E30  5005               	movf	RtccWriteTime@wasOn,w,c
  5108  001E32  B4D8               	btfsc	status,2,c
  5109  001E34  D00B               	goto	l561
  5110                           
  5111                           ; BSR set to: 15
  5112  001E36  010F               	movlb	15	; () banked
  5113  001E38  8F3F               	bsf	63,7,b	;volatile
  5114                           
  5115                           ; BSR set to: 15
  5116  001E3A  5006               	movf	RtccWriteTime@wasAlrm,w,c
  5117  001E3C  A4D8               	btfss	status,2,c
  5118                           
  5119                           ; BSR set to: 15
  5120  001E3E  8E91               	bsf	3985,7,c	;volatile
  5121                           
  5122                           ; BSR set to: 15
  5123                           
  5124                           ; BSR set to: 15
  5125  001E40  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5126  001E42  B4D8               	btfsc	status,2,c
  5127  001E44  D008               	goto	l565
  5128                           
  5129                           ; BSR set to: 15
  5130  001E46  EC95  F012         	call	_RtccWrOn	;wreg free
  5131  001E4A  D005               	goto	l565
  5132  001E4C                     l561:
  5133  001E4C  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5134  001E4E  A4D8               	btfss	status,2,c
  5135  001E50  D002               	goto	l565
  5136  001E52  010F               	movlb	15	; () banked
  5137  001E54  9B3F               	bcf	63,5,b	;volatile
  5138  001E56                     l565:
  5139                           
  5140                           ; BSR set to: 15
  5141                           
  5142                           ; BSR set to: 15
  5143  001E56  5003               	movf	RtccWriteTime@di,w,c
  5144  001E58  B4D8               	btfsc	status,2,c
  5145  001E5A  0012               	return	
  5146  001E5C  8CF2               	bsf	intcon,6,c	;volatile
  5147  001E5E  0012               	return	
  5148  001E60                     __end_of_RtccWriteTime:
  5149                           	opt stack 0
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           intcon2	equ	0xFF1
  5158                           indf0	equ	0xFEF
  5159                           postinc0	equ	0xFEE
  5160                           fsr0h	equ	0xFEA
  5161                           fsr0l	equ	0xFE9
  5162                           wreg	equ	0xFE8
  5163                           postdec1	equ	0xFE5
  5164                           fsr1l	equ	0xFE1
  5165                           indf2	equ	0xFDF
  5166                           postinc2	equ	0xFDE
  5167                           postdec2	equ	0xFDD
  5168                           fsr2h	equ	0xFDA
  5169                           fsr2l	equ	0xFD9
  5170                           status	equ	0xFD8
  5171                           
  5172 ;; *************** function _RtccWriteDate *****************
  5173 ;; Defined at:
  5174 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  pDt             2    0[COMRAM] PTR const struct .
  5177 ;;		 -> RtccDate(4), 
  5178 ;;  di              1    2[COMRAM] enum E7121
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  tempHourWDay    2   11[COMRAM] struct .
  5181 ;;  tempDayMonth    2    9[COMRAM] struct .
  5182 ;;  tempYear        2    6[COMRAM] struct .
  5183 ;;  wasWrEn         1    8[COMRAM] enum E7121
  5184 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5185 ;;  wasOn           1    4[COMRAM] enum E7121
  5186 ;; Return value:  Size  Location     Type
  5187 ;;                  1    wreg      enum E6550
  5188 ;; Registers used:
  5189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5190 ;; Tracked objects:
  5191 ;;		On entry : 0/0
  5192 ;;		On exit  : 0/0
  5193 ;;		Unchanged: 0/0
  5194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5195 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;Total ram usage:       13 bytes
  5200 ;; Hardware stack levels used:    1
  5201 ;; Hardware stack levels required when called:    1
  5202 ;; This function calls:
  5203 ;;		_RtccWrOn
  5204 ;; This function is called by:
  5205 ;;		_Write_RTC
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text17
  5210  001C2E                     __ptext17:
  5211                           	opt stack 0
  5212  001C2E                     _RtccWriteDate:
  5213                           	opt stack 25
  5214                           
  5215                           ;incstack = 0
  5216  001C2E  0E00               	movlw	0
  5217  001C30  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5218  001C32  EE20 F002          	lfsr	2,2
  5219  001C36  5001               	movf	RtccWriteDate@pDt,w,c
  5220  001C38  26D9               	addwf	fsr2l,f,c
  5221  001C3A  5002               	movf	RtccWriteDate@pDt+1,w,c
  5222  001C3C  22DA               	addwfc	fsr2h,f,c
  5223  001C3E  0E13               	movlw	19
  5224  001C40  60DF               	cpfslt	indf2,c
  5225  001C42  0012               	return	
  5226  001C44  EE20 F002          	lfsr	2,2
  5227  001C48  5001               	movf	RtccWriteDate@pDt,w,c
  5228  001C4A  26D9               	addwf	fsr2l,f,c
  5229  001C4C  5002               	movf	RtccWriteDate@pDt+1,w,c
  5230  001C4E  22DA               	addwfc	fsr2h,f,c
  5231  001C50  50DF               	movf	indf2,w,c
  5232  001C52  B4D8               	btfsc	status,2,c
  5233  001C54  0012               	return	
  5234  001C56  EE20 F001          	lfsr	2,1
  5235  001C5A  5001               	movf	RtccWriteDate@pDt,w,c
  5236  001C5C  26D9               	addwf	fsr2l,f,c
  5237  001C5E  5002               	movf	RtccWriteDate@pDt+1,w,c
  5238  001C60  22DA               	addwfc	fsr2h,f,c
  5239  001C62  0E32               	movlw	50
  5240  001C64  60DF               	cpfslt	indf2,c
  5241  001C66  0012               	return	
  5242  001C68  EE20 F001          	lfsr	2,1
  5243  001C6C  5001               	movf	RtccWriteDate@pDt,w,c
  5244  001C6E  26D9               	addwf	fsr2l,f,c
  5245  001C70  5002               	movf	RtccWriteDate@pDt+1,w,c
  5246  001C72  22DA               	addwfc	fsr2h,f,c
  5247  001C74  50DF               	movf	indf2,w,c
  5248  001C76  B4D8               	btfsc	status,2,c
  5249  001C78  0012               	return	
  5250  001C7A  EE20 F003          	lfsr	2,3
  5251  001C7E  5001               	movf	RtccWriteDate@pDt,w,c
  5252  001C80  26D9               	addwf	fsr2l,f,c
  5253  001C82  5002               	movf	RtccWriteDate@pDt+1,w,c
  5254  001C84  22DA               	addwfc	fsr2h,f,c
  5255  001C86  0E99               	movlw	153
  5256  001C88  64DF               	cpfsgt	indf2,c
  5257  001C8A  D001               	goto	l525
  5258  001C8C  0012               	return	
  5259  001C8E                     l525:
  5260  001C8E  EE20 F003          	lfsr	2,3
  5261  001C92  5001               	movf	RtccWriteDate@pDt,w,c
  5262  001C94  26D9               	addwf	fsr2l,f,c
  5263  001C96  5002               	movf	RtccWriteDate@pDt+1,w,c
  5264  001C98  22DA               	addwfc	fsr2h,f,c
  5265  001C9A  50DF               	movf	indf2,w,c
  5266  001C9C  6E07               	movwf	RtccWriteDate@tempYear,c
  5267  001C9E  EE20 F001          	lfsr	2,1
  5268  001CA2  5001               	movf	RtccWriteDate@pDt,w,c
  5269  001CA4  26D9               	addwf	fsr2l,f,c
  5270  001CA6  5002               	movf	RtccWriteDate@pDt+1,w,c
  5271  001CA8  22DA               	addwfc	fsr2h,f,c
  5272  001CAA  50DF               	movf	indf2,w,c
  5273  001CAC  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  5274  001CAE  EE20 F002          	lfsr	2,2
  5275  001CB2  5001               	movf	RtccWriteDate@pDt,w,c
  5276  001CB4  26D9               	addwf	fsr2l,f,c
  5277  001CB6  5002               	movf	RtccWriteDate@pDt+1,w,c
  5278  001CB8  22DA               	addwfc	fsr2h,f,c
  5279  001CBA  50DF               	movf	indf2,w,c
  5280  001CBC  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  5281  001CBE  5003               	movf	RtccWriteDate@di,w,c
  5282  001CC0  A4D8               	btfss	status,2,c
  5283  001CC2  9CF2               	bcf	intcon,6,c	;volatile
  5284  001CC4  010F               	movlb	15	; () banked
  5285  001CC6  0E00               	movlw	0
  5286  001CC8  BB3F               	btfsc	63,5,b	;volatile
  5287  001CCA  0E01               	movlw	1
  5288  001CCC  6E09               	movwf	RtccWriteDate@wasWrEn,c
  5289  001CCE  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5290  001CD0  B4D8               	btfsc	status,2,c
  5291                           
  5292                           ; BSR set to: 15
  5293  001CD2  EC95  F012         	call	_RtccWrOn	;wreg free
  5294  001CD6  010F               	movlb	15	; () banked
  5295  001CD8  0E00               	movlw	0
  5296  001CDA  BF3F               	btfsc	63,7,b	;volatile
  5297  001CDC  0E01               	movlw	1
  5298  001CDE  6E05               	movwf	RtccWriteDate@wasOn,c
  5299  001CE0  5005               	movf	RtccWriteDate@wasOn,w,c
  5300  001CE2  B4D8               	btfsc	status,2,c
  5301  001CE4  D006               	goto	l531
  5302                           
  5303                           ; BSR set to: 15
  5304  001CE6  0E00               	movlw	0
  5305  001CE8  BE91               	btfsc	3985,7,c	;volatile
  5306  001CEA  0E01               	movlw	1
  5307  001CEC  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5308                           
  5309                           ; BSR set to: 15
  5310  001CEE  010F               	movlb	15	; () banked
  5311  001CF0  9F3F               	bcf	63,7,b	;volatile
  5312  001CF2                     l531:
  5313                           
  5314                           ; BSR set to: 15
  5315                           
  5316                           ; BSR set to: 15
  5317  001CF2  0EFC               	movlw	252
  5318  001CF4  010F               	movlb	15	; () banked
  5319  001CF6  173F               	andwf	63,f,b	;volatile
  5320  001CF8  010F               	movlb	15	; () banked
  5321  001CFA  813F               	bsf	63,0,b	;volatile
  5322                           
  5323                           ; BSR set to: 15
  5324  001CFC  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  5325                           
  5326                           ; BSR set to: 15
  5327  001D00  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  5328                           
  5329                           ; BSR set to: 15
  5330  001D04  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  5331  001D08  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  5332  001D0C  50DF               	movf	indf2,w,c
  5333  001D0E  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  5334                           
  5335                           ; BSR set to: 15
  5336  001D10  0EFC               	movlw	252
  5337  001D12  010F               	movlb	15	; () banked
  5338  001D14  173F               	andwf	63,f,b	;volatile
  5339                           
  5340                           ; BSR set to: 15
  5341  001D16  0E03               	movlw	3
  5342  001D18  010F               	movlb	15	; () banked
  5343  001D1A  133F               	iorwf	63,f,b	;volatile
  5344                           
  5345                           ; BSR set to: 15
  5346  001D1C  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  5347                           
  5348                           ; BSR set to: 15
  5349  001D20  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  5350                           
  5351                           ; BSR set to: 15
  5352  001D24  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  5353                           
  5354                           ; BSR set to: 15
  5355  001D28  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  5356                           
  5357                           ; BSR set to: 15
  5358  001D2C  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  5359                           
  5360                           ; BSR set to: 15
  5361  001D30  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  5362                           
  5363                           ; BSR set to: 15
  5364  001D34  5005               	movf	RtccWriteDate@wasOn,w,c
  5365  001D36  B4D8               	btfsc	status,2,c
  5366  001D38  D00B               	goto	l532
  5367                           
  5368                           ; BSR set to: 15
  5369  001D3A  010F               	movlb	15	; () banked
  5370  001D3C  8F3F               	bsf	63,7,b	;volatile
  5371                           
  5372                           ; BSR set to: 15
  5373  001D3E  5006               	movf	RtccWriteDate@wasAlrm,w,c
  5374  001D40  A4D8               	btfss	status,2,c
  5375                           
  5376                           ; BSR set to: 15
  5377  001D42  8E91               	bsf	3985,7,c	;volatile
  5378                           
  5379                           ; BSR set to: 15
  5380                           
  5381                           ; BSR set to: 15
  5382  001D44  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5383  001D46  B4D8               	btfsc	status,2,c
  5384  001D48  D008               	goto	l536
  5385                           
  5386                           ; BSR set to: 15
  5387  001D4A  EC95  F012         	call	_RtccWrOn	;wreg free
  5388  001D4E  D005               	goto	l536
  5389  001D50                     l532:
  5390  001D50  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5391  001D52  A4D8               	btfss	status,2,c
  5392  001D54  D002               	goto	l536
  5393  001D56  010F               	movlb	15	; () banked
  5394  001D58  9B3F               	bcf	63,5,b	;volatile
  5395  001D5A                     l536:
  5396                           
  5397                           ; BSR set to: 15
  5398                           
  5399                           ; BSR set to: 15
  5400  001D5A  5003               	movf	RtccWriteDate@di,w,c
  5401  001D5C  B4D8               	btfsc	status,2,c
  5402  001D5E  0012               	return	
  5403  001D60  9CF2               	bcf	intcon,6,c	;volatile
  5404  001D62  0012               	return	
  5405  001D64                     __end_of_RtccWriteDate:
  5406                           	opt stack 0
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           intcon2	equ	0xFF1
  5415                           indf0	equ	0xFEF
  5416                           postinc0	equ	0xFEE
  5417                           fsr0h	equ	0xFEA
  5418                           fsr0l	equ	0xFE9
  5419                           wreg	equ	0xFE8
  5420                           postdec1	equ	0xFE5
  5421                           fsr1l	equ	0xFE1
  5422                           indf2	equ	0xFDF
  5423                           postinc2	equ	0xFDE
  5424                           postdec2	equ	0xFDD
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function _RtccWrOn *****************
  5430 ;; Defined at:
  5431 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  data            2    0        unsigned int 
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  1    wreg      void 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;Total ram usage:        0 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_Write_RTC
  5455 ;;		_RtccWriteDate
  5456 ;;		_RtccWriteTime
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text18
  5461  00252A                     __ptext18:
  5462                           	opt stack 0
  5463  00252A                     _RtccWrOn:
  5464                           	opt stack 25
  5465                           
  5466                           ;incstack = 0
  5467  00252A  9CF2               	bcf	intcon,6,c	;volatile
  5468  00252C  0E55               	movlw	85
  5469  00252E  6EA7               	movwf	4007,c	;volatile
  5470  002530  0EAA               	movlw	170
  5471  002532  6EA7               	movwf	4007,c	;volatile
  5472  002534  010F               	movlb	15	; () banked
  5473  002536  8B3F               	bsf	63,5,b	;volatile
  5474                           
  5475                           ; BSR set to: 15
  5476  002538  8CF2               	bsf	intcon,6,c	;volatile
  5477                           
  5478                           ; BSR set to: 15
  5479  00253A  0012               	return		;funcret
  5480  00253C                     __end_of_RtccWrOn:
  5481                           	opt stack 0
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           intcon	equ	0xFF2
  5489                           intcon2	equ	0xFF1
  5490                           indf0	equ	0xFEF
  5491                           postinc0	equ	0xFEE
  5492                           fsr0h	equ	0xFEA
  5493                           fsr0l	equ	0xFE9
  5494                           wreg	equ	0xFE8
  5495                           postdec1	equ	0xFE5
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           postdec2	equ	0xFDD
  5500                           fsr2h	equ	0xFDA
  5501                           fsr2l	equ	0xFD9
  5502                           status	equ	0xFD8
  5503                           
  5504 ;; *************** function _lcd_init *****************
  5505 ;; Defined at:
  5506 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5507 ;; Parameters:    Size  Location     Type
  5508 ;;		None
  5509 ;; Auto vars:     Size  Location     Type
  5510 ;;  i               1    4[COMRAM] unsigned char 
  5511 ;; Return value:  Size  Location     Type
  5512 ;;                  1    wreg      void 
  5513 ;; Registers used:
  5514 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5515 ;; Tracked objects:
  5516 ;;		On entry : 0/0
  5517 ;;		On exit  : 0/0
  5518 ;;		Unchanged: 0/0
  5519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;Total ram usage:        1 bytes
  5525 ;; Hardware stack levels used:    1
  5526 ;; Hardware stack levels required when called:    2
  5527 ;; This function calls:
  5528 ;;		_Delay1KTCYx
  5529 ;;		_lcd_send_byte
  5530 ;;		_lcd_send_nibble
  5531 ;; This function is called by:
  5532 ;;		_setup
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           	psect	text19
  5537  0020C6                     __ptext19:
  5538                           	opt stack 0
  5539  0020C6                     _lcd_init:
  5540                           	opt stack 27
  5541                           
  5542                           ;unmc_lcd_216.c: 120: int8 i;
  5543                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  5544                           
  5545                           ; BSR set to: 15
  5546                           ;incstack = 0
  5547  0020C6  9693               	bcf	3987,3,c	;volatile
  5548                           
  5549                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  5550  0020C8  9493               	bcf	3987,2,c	;volatile
  5551                           
  5552                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  5553  0020CA  968A               	bcf	3978,3,c	;volatile
  5554                           
  5555                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  5556  0020CC  948A               	bcf	3978,2,c	;volatile
  5557                           
  5558                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  5559  0020CE  9893               	bcf	3987,4,c	;volatile
  5560                           
  5561                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  5562  0020D0  9A93               	bcf	3987,5,c	;volatile
  5563                           
  5564                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  5565  0020D2  9C93               	bcf	3987,6,c	;volatile
  5566                           
  5567                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  5568  0020D4  9E93               	bcf	3987,7,c	;volatile
  5569                           
  5570                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  5571  0020D6  0E0A               	movlw	10
  5572  0020D8  EC9E  F012         	call	_Delay1KTCYx
  5573                           
  5574                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  5575  0020DC  0E0A               	movlw	10
  5576  0020DE  EC9E  F012         	call	_Delay1KTCYx
  5577                           
  5578                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  5579  0020E2  0E0A               	movlw	10
  5580  0020E4  EC9E  F012         	call	_Delay1KTCYx
  5581                           
  5582                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  5583  0020E8  0E00               	movlw	0
  5584  0020EA  6E05               	movwf	lcd_init@i,c
  5585  0020EC                     l2944:
  5586  0020EC  0E02               	movlw	2
  5587  0020EE  6405               	cpfsgt	lcd_init@i,c
  5588  0020F0  D001               	goto	l382
  5589  0020F2  D008               	goto	u2640
  5590  0020F4                     l382:
  5591                           
  5592                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  5593  0020F4  0E03               	movlw	3
  5594  0020F6  EC9E  F010         	call	_lcd_send_nibble
  5595                           
  5596                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  5597  0020FA  0E0A               	movlw	10
  5598  0020FC  EC9E  F012         	call	_Delay1KTCYx
  5599  002100  2A05               	incf	lcd_init@i,f,c
  5600  002102  D7F4               	goto	l2944
  5601  002104                     u2640:
  5602                           
  5603                           ;unmc_lcd_216.c: 146: }
  5604                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  5605  002104  0E02               	movlw	2
  5606  002106  EC9E  F010         	call	_lcd_send_nibble
  5607                           
  5608                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  5609  00210A  0E00               	movlw	0
  5610  00210C  6E05               	movwf	lcd_init@i,c
  5611  00210E                     l2958:
  5612  00210E  0E03               	movlw	3
  5613  002110  6405               	cpfsgt	lcd_init@i,c
  5614  002112  D001               	goto	l384
  5615  002114  0012               	return	
  5616  002116                     l384:
  5617                           
  5618                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  5619  002116  5005               	movf	lcd_init@i,w,c
  5620  002118  0D01               	mullw	1
  5621  00211A  0E0B               	movlw	low _LCD_INIT_STRING
  5622  00211C  24F3               	addwf	prodl,w,c
  5623  00211E  6EF6               	movwf	tblptrl,c
  5624  002120  0E0F               	movlw	high _LCD_INIT_STRING
  5625  002122  20F4               	addwfc	prodh,w,c
  5626  002124  6EF7               	movwf	tblptrh,c
  5627  002126                     	if	0	;There are less than 3 active tblptr bytes
  5628  002126                     	endif
  5629  002126  0008               	tblrd		*
  5630  002128  CFF5 F003          	movff	tablat,lcd_send_byte@n
  5631  00212C  0E00               	movlw	0
  5632  00212E  EC38  F012         	call	_lcd_send_byte
  5633                           
  5634                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  5635  002132  0E0A               	movlw	10
  5636  002134  EC9E  F012         	call	_Delay1KTCYx
  5637  002138  2A05               	incf	lcd_init@i,f,c
  5638  00213A  D7E9               	goto	l2958
  5639  00213C                     __end_of_lcd_init:
  5640                           	opt stack 0
  5641                           tblptru	equ	0xFF8
  5642                           tblptrh	equ	0xFF7
  5643                           tblptrl	equ	0xFF6
  5644                           tablat	equ	0xFF5
  5645                           prodh	equ	0xFF4
  5646                           prodl	equ	0xFF3
  5647                           intcon	equ	0xFF2
  5648                           intcon2	equ	0xFF1
  5649                           indf0	equ	0xFEF
  5650                           postinc0	equ	0xFEE
  5651                           fsr0h	equ	0xFEA
  5652                           fsr0l	equ	0xFE9
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1l	equ	0xFE1
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           fsr2h	equ	0xFDA
  5660                           fsr2l	equ	0xFD9
  5661                           status	equ	0xFD8
  5662                           
  5663 ;; *************** function _Delay1KTCYx *****************
  5664 ;; Defined at:
  5665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  unit            1    wreg     unsigned char 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  unit            1    0[COMRAM] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5683 ;;Total ram usage:        1 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_lcd_init
  5689 ;;		_DelayPORXLCD
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text20
  5694  00253C                     __ptext20:
  5695                           	opt stack 0
  5696  00253C                     _Delay1KTCYx:
  5697                           	opt stack 28
  5698                           
  5699                           ;incstack = 0
  5700                           ;Delay1KTCYx@unit stored from wreg
  5701  00253C  6E01               	movwf	Delay1KTCYx@unit,c
  5702  00253E                     l782:
  5703  00253E  0EC8               	movlw	200
  5704  002540                     u3777:
  5705  002540  D000               	nop2	
  5706  002542  2EE8               	decfsz	wreg,f,c
  5707  002544  D7FD               	bra	u3777
  5708  002546  2E01               	decfsz	Delay1KTCYx@unit,f,c
  5709  002548  D7FA               	goto	l782
  5710  00254A  0012               	return	
  5711  00254C                     __end_of_Delay1KTCYx:
  5712                           	opt stack 0
  5713                           tblptru	equ	0xFF8
  5714                           tblptrh	equ	0xFF7
  5715                           tblptrl	equ	0xFF6
  5716                           tablat	equ	0xFF5
  5717                           prodh	equ	0xFF4
  5718                           prodl	equ	0xFF3
  5719                           intcon	equ	0xFF2
  5720                           intcon2	equ	0xFF1
  5721                           indf0	equ	0xFEF
  5722                           postinc0	equ	0xFEE
  5723                           fsr0h	equ	0xFEA
  5724                           fsr0l	equ	0xFE9
  5725                           wreg	equ	0xFE8
  5726                           postdec1	equ	0xFE5
  5727                           fsr1l	equ	0xFE1
  5728                           indf2	equ	0xFDF
  5729                           postinc2	equ	0xFDE
  5730                           postdec2	equ	0xFDD
  5731                           fsr2h	equ	0xFDA
  5732                           fsr2l	equ	0xFD9
  5733                           status	equ	0xFD8
  5734                           
  5735 ;; *************** function _lcd_comand *****************
  5736 ;; Defined at:
  5737 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  d               1    wreg     unsigned char 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  d               1    4[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5755 ;;Total ram usage:        1 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    2
  5758 ;; This function calls:
  5759 ;;		_lcd_send_byte
  5760 ;; This function is called by:
  5761 ;;		_setup
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text21
  5766  00256A                     __ptext21:
  5767                           	opt stack 0
  5768  00256A                     _lcd_comand:
  5769                           	opt stack 27
  5770                           
  5771                           ;incstack = 0
  5772                           ;lcd_comand@d stored from wreg
  5773  00256A  6E05               	movwf	lcd_comand@d,c
  5774                           
  5775                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  5776  00256C  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  5777  002570  0E00               	movlw	0
  5778  002572  EC38  F012         	call	_lcd_send_byte
  5779  002576  0012               	return		;funcret
  5780  002578                     __end_of_lcd_comand:
  5781                           	opt stack 0
  5782                           tblptru	equ	0xFF8
  5783                           tblptrh	equ	0xFF7
  5784                           tblptrl	equ	0xFF6
  5785                           tablat	equ	0xFF5
  5786                           prodh	equ	0xFF4
  5787                           prodl	equ	0xFF3
  5788                           intcon	equ	0xFF2
  5789                           intcon2	equ	0xFF1
  5790                           indf0	equ	0xFEF
  5791                           postinc0	equ	0xFEE
  5792                           fsr0h	equ	0xFEA
  5793                           fsr0l	equ	0xFE9
  5794                           wreg	equ	0xFE8
  5795                           postdec1	equ	0xFE5
  5796                           fsr1l	equ	0xFE1
  5797                           indf2	equ	0xFDF
  5798                           postinc2	equ	0xFDE
  5799                           postdec2	equ	0xFDD
  5800                           fsr2h	equ	0xFDA
  5801                           fsr2l	equ	0xFD9
  5802                           status	equ	0xFD8
  5803                           
  5804 ;; *************** function _lcd_send_byte *****************
  5805 ;; Defined at:
  5806 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  address         1    wreg     unsigned char 
  5809 ;;  n               1    2[COMRAM] unsigned char 
  5810 ;; Auto vars:     Size  Location     Type
  5811 ;;  address         1    3[COMRAM] unsigned char 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg, status,2, status,0, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5821 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5825 ;;Total ram usage:        2 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    1
  5828 ;; This function calls:
  5829 ;;		_Delay100TCYx
  5830 ;;		_lcd_send_nibble
  5831 ;; This function is called by:
  5832 ;;		_lcd_init
  5833 ;;		_lcd_gotoxy
  5834 ;;		_lcd_putc
  5835 ;;		_lcd_comand
  5836 ;;		_lcd_setcursor_vb
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text22
  5841  002470                     __ptext22:
  5842                           	opt stack 0
  5843  002470                     _lcd_send_byte:
  5844                           	opt stack 24
  5845                           
  5846                           ;incstack = 0
  5847                           ;lcd_send_byte@address stored from wreg
  5848  002470  6E04               	movwf	lcd_send_byte@address,c
  5849                           
  5850                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  5851  002472  968A               	bcf	3978,3,c	;volatile
  5852                           
  5853                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  5854  002474  0E02               	movlw	2
  5855  002476  ECA6  F012         	call	_Delay100TCYx
  5856                           
  5857                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  5858  00247A  9893               	bcf	3987,4,c	;volatile
  5859                           
  5860                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  5861  00247C  9A93               	bcf	3987,5,c	;volatile
  5862                           
  5863                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  5864  00247E  9C93               	bcf	3987,6,c	;volatile
  5865                           
  5866                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5867  002480  9E93               	bcf	3987,7,c	;volatile
  5868                           
  5869                           ;unmc_lcd_216.c: 101: if(address)
  5870  002482  5004               	movf	lcd_send_byte@address,w,c
  5871  002484  B4D8               	btfsc	status,2,c
  5872  002486  D002               	goto	l377
  5873                           
  5874                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5875  002488  868A               	bsf	3978,3,c	;volatile
  5876  00248A  D001               	goto	l378
  5877  00248C                     l377:
  5878                           
  5879                           ;unmc_lcd_216.c: 103: else
  5880                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5881  00248C  968A               	bcf	3978,3,c	;volatile
  5882  00248E                     l378:
  5883                           
  5884                           ;unmc_lcd_216.c: 106: __nop();
  5885  00248E  F000               	nop	
  5886                           
  5887                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  5888  002490  3803               	swapf	lcd_send_byte@n,w,c
  5889  002492  0B0F               	andlw	15
  5890  002494  EC9E  F010         	call	_lcd_send_nibble
  5891                           
  5892                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  5893  002498  5003               	movf	lcd_send_byte@n,w,c
  5894  00249A  0B0F               	andlw	15
  5895  00249C  EC9E  F010         	call	_lcd_send_nibble
  5896  0024A0  0012               	return		;funcret
  5897  0024A2                     __end_of_lcd_send_byte:
  5898                           	opt stack 0
  5899                           tblptru	equ	0xFF8
  5900                           tblptrh	equ	0xFF7
  5901                           tblptrl	equ	0xFF6
  5902                           tablat	equ	0xFF5
  5903                           prodh	equ	0xFF4
  5904                           prodl	equ	0xFF3
  5905                           intcon	equ	0xFF2
  5906                           intcon2	equ	0xFF1
  5907                           indf0	equ	0xFEF
  5908                           postinc0	equ	0xFEE
  5909                           fsr0h	equ	0xFEA
  5910                           fsr0l	equ	0xFE9
  5911                           wreg	equ	0xFE8
  5912                           postdec1	equ	0xFE5
  5913                           fsr1l	equ	0xFE1
  5914                           indf2	equ	0xFDF
  5915                           postinc2	equ	0xFDE
  5916                           postdec2	equ	0xFDD
  5917                           fsr2h	equ	0xFDA
  5918                           fsr2l	equ	0xFD9
  5919                           status	equ	0xFD8
  5920                           
  5921 ;; *************** function _lcd_send_nibble *****************
  5922 ;; Defined at:
  5923 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  nibble          1    wreg     unsigned char 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  nibble          1    1[COMRAM] unsigned char 
  5928 ;; Return value:  Size  Location     Type
  5929 ;;                  1    wreg      void 
  5930 ;; Registers used:
  5931 ;;		wreg, status,2, status,0
  5932 ;; Tracked objects:
  5933 ;;		On entry : 0/0
  5934 ;;		On exit  : 0/0
  5935 ;;		Unchanged: 0/0
  5936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5940 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5941 ;;Total ram usage:        2 bytes
  5942 ;; Hardware stack levels used:    1
  5943 ;; This function calls:
  5944 ;;		Nothing
  5945 ;; This function is called by:
  5946 ;;		_lcd_send_byte
  5947 ;;		_lcd_init
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text23
  5952  00213C                     __ptext23:
  5953                           	opt stack 0
  5954  00213C                     _lcd_send_nibble:
  5955                           	opt stack 24
  5956                           
  5957                           ;incstack = 0
  5958                           ;lcd_send_nibble@nibble stored from wreg
  5959  00213C  6E02               	movwf	lcd_send_nibble@nibble,c
  5960                           
  5961                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  5962  00213E  A002               	btfss	lcd_send_nibble@nibble,0,c
  5963  002140  D003               	goto	u1810
  5964  002142  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5965  002144  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5966  002146  D001               	goto	u1828
  5967  002148                     u1810:
  5968  002148  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5969  00214A                     u1828:
  5970  00214A  3A01               	swapf	??_lcd_send_nibble,f,c
  5971  00214C  508A               	movf	3978,w,c	;volatile
  5972  00214E  1801               	xorwf	??_lcd_send_nibble,w,c
  5973  002150  0BEF               	andlw	-17
  5974  002152  1801               	xorwf	??_lcd_send_nibble,w,c
  5975  002154  6E8A               	movwf	3978,c	;volatile
  5976                           
  5977                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  5978  002156  A202               	btfss	lcd_send_nibble@nibble,1,c
  5979  002158  D003               	goto	u1830
  5980  00215A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5981  00215C  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5982  00215E  D001               	goto	u1848
  5983  002160                     u1830:
  5984  002160  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5985  002162                     u1848:
  5986  002162  3A01               	swapf	??_lcd_send_nibble,f,c
  5987  002164  4601               	rlncf	??_lcd_send_nibble,f,c
  5988  002166  508A               	movf	3978,w,c	;volatile
  5989  002168  1801               	xorwf	??_lcd_send_nibble,w,c
  5990  00216A  0BDF               	andlw	-33
  5991  00216C  1801               	xorwf	??_lcd_send_nibble,w,c
  5992  00216E  6E8A               	movwf	3978,c	;volatile
  5993                           
  5994                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  5995  002170  A402               	btfss	lcd_send_nibble@nibble,2,c
  5996  002172  D003               	goto	u1850
  5997  002174  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5998  002176  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5999  002178  D001               	goto	u1868
  6000  00217A                     u1850:
  6001  00217A  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6002  00217C                     u1868:
  6003  00217C  3A01               	swapf	??_lcd_send_nibble,f,c
  6004  00217E  4601               	rlncf	??_lcd_send_nibble,f,c
  6005  002180  4601               	rlncf	??_lcd_send_nibble,f,c
  6006  002182  508A               	movf	3978,w,c	;volatile
  6007  002184  1801               	xorwf	??_lcd_send_nibble,w,c
  6008  002186  0BBF               	andlw	-65
  6009  002188  1801               	xorwf	??_lcd_send_nibble,w,c
  6010  00218A  6E8A               	movwf	3978,c	;volatile
  6011                           
  6012                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  6013  00218C  A602               	btfss	lcd_send_nibble@nibble,3,c
  6014  00218E  D003               	goto	u1870
  6015  002190  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6016  002192  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  6017  002194  D001               	goto	u1888
  6018  002196                     u1870:
  6019  002196  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  6020  002198                     u1888:
  6021  002198  3201               	rrcf	??_lcd_send_nibble,f,c
  6022  00219A  3201               	rrcf	??_lcd_send_nibble,f,c
  6023  00219C  508A               	movf	3978,w,c	;volatile
  6024  00219E  1801               	xorwf	??_lcd_send_nibble,w,c
  6025  0021A0  0B7F               	andlw	-129
  6026  0021A2  1801               	xorwf	??_lcd_send_nibble,w,c
  6027  0021A4  6E8A               	movwf	3978,c	;volatile
  6028                           
  6029                           ;unmc_lcd_216.c: 32: __nop();
  6030  0021A6  F000               	nop	
  6031                           
  6032                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  6033  0021A8  848A               	bsf	3978,2,c	;volatile
  6034                           
  6035                           ;unmc_lcd_216.c: 34: __nop();__nop();
  6036  0021AA  F000               	nop	
  6037  0021AC  F000               	nop	
  6038                           
  6039                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  6040  0021AE  948A               	bcf	3978,2,c	;volatile
  6041  0021B0  0012               	return		;funcret
  6042  0021B2                     __end_of_lcd_send_nibble:
  6043                           	opt stack 0
  6044                           tblptru	equ	0xFF8
  6045                           tblptrh	equ	0xFF7
  6046                           tblptrl	equ	0xFF6
  6047                           tablat	equ	0xFF5
  6048                           prodh	equ	0xFF4
  6049                           prodl	equ	0xFF3
  6050                           intcon	equ	0xFF2
  6051                           intcon2	equ	0xFF1
  6052                           indf0	equ	0xFEF
  6053                           postinc0	equ	0xFEE
  6054                           fsr0h	equ	0xFEA
  6055                           fsr0l	equ	0xFE9
  6056                           wreg	equ	0xFE8
  6057                           postdec1	equ	0xFE5
  6058                           fsr1l	equ	0xFE1
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function _Delay100TCYx *****************
  6067 ;; Defined at:
  6068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  unit            1    wreg     unsigned char 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  unit            1    0[COMRAM] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		wreg
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;Total ram usage:        1 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_lcd_send_byte
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text24
  6096  00254C                     __ptext24:
  6097                           	opt stack 0
  6098  00254C                     _Delay100TCYx:
  6099                           	opt stack 24
  6100                           
  6101                           ;incstack = 0
  6102                           ;Delay100TCYx@unit stored from wreg
  6103  00254C  6E01               	movwf	Delay100TCYx@unit,c
  6104  00254E                     l768:
  6105  00254E  0E21               	movlw	33
  6106  002550                     u3787:
  6107  002550  2EE8               	decfsz	wreg,f,c
  6108  002552  D7FE               	bra	u3787
  6109  002554  F000               	nop	
  6110  002556  2E01               	decfsz	Delay100TCYx@unit,f,c
  6111  002558  D7FA               	goto	l768
  6112  00255A  0012               	return	
  6113  00255C                     __end_of_Delay100TCYx:
  6114                           	opt stack 0
  6115                           tblptru	equ	0xFF8
  6116                           tblptrh	equ	0xFF7
  6117                           tblptrl	equ	0xFF6
  6118                           tablat	equ	0xFF5
  6119                           prodh	equ	0xFF4
  6120                           prodl	equ	0xFF3
  6121                           intcon	equ	0xFF2
  6122                           intcon2	equ	0xFF1
  6123                           indf0	equ	0xFEF
  6124                           postinc0	equ	0xFEE
  6125                           fsr0h	equ	0xFEA
  6126                           fsr0l	equ	0xFE9
  6127                           wreg	equ	0xFE8
  6128                           postdec1	equ	0xFE5
  6129                           fsr1l	equ	0xFE1
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           fsr2h	equ	0xFDA
  6134                           fsr2l	equ	0xFD9
  6135                           status	equ	0xFD8
  6136                           
  6137 ;; *************** function _Read_RTC *****************
  6138 ;; Defined at:
  6139 ;;		line 112 in file "../../headers\unmc_rtcc_01.h"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    1
  6160 ;; This function calls:
  6161 ;;		_RtccReadDate
  6162 ;;		_RtccReadTime
  6163 ;; This function is called by:
  6164 ;;		_main
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text25
  6169  001E60                     __ptext25:
  6170                           	opt stack 0
  6171  001E60                     _Read_RTC:
  6172                           	opt stack 29
  6173                           
  6174                           ;headers\unmc_rtcc_01.h: 115: RtccReadTime(&RtccTime);
  6175                           
  6176                           ;incstack = 0
  6177  001E60  0E4F               	movlw	low _RtccTime
  6178  001E62  6E01               	movwf	RtccReadTime@pTm,c
  6179  001E64  0E00               	movlw	high _RtccTime
  6180  001E66  6E02               	movwf	RtccReadTime@pTm+1,c
  6181  001E68  EC49  F011         	call	_RtccReadTime	;wreg free
  6182                           
  6183                           ;headers\unmc_rtcc_01.h: 116: segundo_u = (RtccTime.f.sec & 0x0F);
  6184  001E6C  5050               	movf	_RtccTime+1,w,c
  6185  001E6E  0B0F               	andlw	15
  6186  001E70  6E4A               	movwf	_segundo_u,c
  6187                           
  6188                           ;headers\unmc_rtcc_01.h: 117: segundo_d = ((RtccTime.f.sec & 0xF0) >> 4);
  6189  001E72  3850               	swapf	_RtccTime+1,w,c
  6190  001E74  0B0F               	andlw	15
  6191  001E76  0B0F               	andlw	15
  6192  001E78  6E49               	movwf	_segundo_d,c
  6193                           
  6194                           ;headers\unmc_rtcc_01.h: 118: minuto_u = (RtccTime.f.min & 0x0F);
  6195  001E7A  5051               	movf	_RtccTime+2,w,c
  6196  001E7C  0B0F               	andlw	15
  6197  001E7E  6E48               	movwf	_minuto_u,c
  6198                           
  6199                           ;headers\unmc_rtcc_01.h: 119: minuto_d = ((RtccTime.f.min & 0xF0) >> 4);
  6200  001E80  3851               	swapf	_RtccTime+2,w,c
  6201  001E82  0B0F               	andlw	15
  6202  001E84  0B0F               	andlw	15
  6203  001E86  6E47               	movwf	_minuto_d,c
  6204                           
  6205                           ;headers\unmc_rtcc_01.h: 120: hora_u = (RtccTime.f.hour & 0x0F);
  6206  001E88  5052               	movf	_RtccTime+3,w,c
  6207  001E8A  0B0F               	andlw	15
  6208  001E8C  6E46               	movwf	_hora_u,c
  6209                           
  6210                           ;headers\unmc_rtcc_01.h: 121: hora_d = ((RtccTime.f.hour & 0xF0) >> 4);
  6211  001E8E  3852               	swapf	_RtccTime+3,w,c
  6212  001E90  0B0F               	andlw	15
  6213  001E92  0B0F               	andlw	15
  6214  001E94  6E45               	movwf	_hora_d,c
  6215                           
  6216                           ;headers\unmc_rtcc_01.h: 122: RtccReadDate(&RtccDate);
  6217  001E96  0E4B               	movlw	low _RtccDate
  6218  001E98  6E01               	movwf	RtccReadDate@pDt,c
  6219  001E9A  0E00               	movlw	high _RtccDate
  6220  001E9C  6E02               	movwf	RtccReadDate@pDt+1,c
  6221  001E9E  EC9C  F00F         	call	_RtccReadDate	;wreg free
  6222                           
  6223                           ;headers\unmc_rtcc_01.h: 123: fecha_u = (RtccDate.f.mday & 0x0F);
  6224  001EA2  504C               	movf	_RtccDate+1,w,c
  6225  001EA4  0B0F               	andlw	15
  6226  001EA6  6E44               	movwf	_fecha_u,c
  6227                           
  6228                           ;headers\unmc_rtcc_01.h: 124: fecha_d = ((RtccDate.f.mday & 0xF0) >> 4);
  6229  001EA8  384C               	swapf	_RtccDate+1,w,c
  6230  001EAA  0B0F               	andlw	15
  6231  001EAC  0B0F               	andlw	15
  6232  001EAE  6E43               	movwf	_fecha_d,c
  6233                           
  6234                           ;headers\unmc_rtcc_01.h: 125: mes_u = (RtccDate.f.mon & 0x0F);
  6235  001EB0  504D               	movf	_RtccDate+2,w,c
  6236  001EB2  0B0F               	andlw	15
  6237  001EB4  6E42               	movwf	_mes_u,c
  6238                           
  6239                           ;headers\unmc_rtcc_01.h: 126: mes_d = ((RtccDate.f.mon & 0xF0) >> 4);
  6240  001EB6  384D               	swapf	_RtccDate+2,w,c
  6241  001EB8  0B0F               	andlw	15
  6242  001EBA  0B0F               	andlw	15
  6243  001EBC  6E41               	movwf	_mes_d,c
  6244                           
  6245                           ;headers\unmc_rtcc_01.h: 127: dia_semana = RtccDate.f.wday;
  6246  001EBE  C04B  F040         	movff	_RtccDate,_dia_semana
  6247                           
  6248                           ;headers\unmc_rtcc_01.h: 128: anio_u = (RtccDate.f.year & 0x0F);
  6249  001EC2  504E               	movf	_RtccDate+3,w,c
  6250  001EC4  0B0F               	andlw	15
  6251  001EC6  6E3F               	movwf	_anio_u,c
  6252                           
  6253                           ;headers\unmc_rtcc_01.h: 129: anio_d = ((RtccDate.f.year & 0xF0) >> 4);
  6254  001EC8  384E               	swapf	_RtccDate+3,w,c
  6255  001ECA  0B0F               	andlw	15
  6256  001ECC  0B0F               	andlw	15
  6257  001ECE  6E3E               	movwf	_anio_d,c
  6258                           
  6259                           ;headers\unmc_rtcc_01.h: 131: segundo = segundo_d * 10 + segundo_u;
  6260  001ED0  5049               	movf	_segundo_d,w,c
  6261  001ED2  0D0A               	mullw	10
  6262  001ED4  504A               	movf	_segundo_u,w,c
  6263  001ED6  24F3               	addwf	prodl,w,c
  6264  001ED8  6E38               	movwf	_segundo,c
  6265  001EDA  0E00               	movlw	0
  6266  001EDC  20F4               	addwfc	prodh,w,c
  6267  001EDE  6E39               	movwf	_segundo+1,c
  6268                           
  6269                           ;headers\unmc_rtcc_01.h: 132: minuto = minuto_d * 10 + minuto_u;
  6270  001EE0  5047               	movf	_minuto_d,w,c
  6271  001EE2  0D0A               	mullw	10
  6272  001EE4  5048               	movf	_minuto_u,w,c
  6273  001EE6  24F3               	addwf	prodl,w,c
  6274  001EE8  6E53               	movwf	_minuto,c
  6275  001EEA  0E00               	movlw	0
  6276  001EEC  20F4               	addwfc	prodh,w,c
  6277  001EEE  6E54               	movwf	_minuto+1,c
  6278                           
  6279                           ;headers\unmc_rtcc_01.h: 133: hora = hora_d * 10 + hora_u;
  6280  001EF0  5045               	movf	_hora_d,w,c
  6281  001EF2  0D0A               	mullw	10
  6282  001EF4  5046               	movf	_hora_u,w,c
  6283  001EF6  24F3               	addwf	prodl,w,c
  6284  001EF8  6E55               	movwf	_hora,c
  6285  001EFA  0E00               	movlw	0
  6286  001EFC  20F4               	addwfc	prodh,w,c
  6287  001EFE  6E56               	movwf	_hora+1,c
  6288                           
  6289                           ;headers\unmc_rtcc_01.h: 134: dia = fecha_d * 10 + fecha_u;
  6290  001F00  5043               	movf	_fecha_d,w,c
  6291  001F02  0D0A               	mullw	10
  6292  001F04  5044               	movf	_fecha_u,w,c
  6293  001F06  24F3               	addwf	prodl,w,c
  6294  001F08  6E57               	movwf	_dia,c
  6295  001F0A  0E00               	movlw	0
  6296  001F0C  20F4               	addwfc	prodh,w,c
  6297  001F0E  6E58               	movwf	_dia+1,c
  6298                           
  6299                           ;headers\unmc_rtcc_01.h: 135: diasem = dia_semana;
  6300  001F10  C040  F059         	movff	_dia_semana,_diasem
  6301  001F14  6A5A               	clrf	_diasem+1,c
  6302                           
  6303                           ;headers\unmc_rtcc_01.h: 136: mes = mes_d * 10 + mes_u;
  6304  001F16  5041               	movf	_mes_d,w,c
  6305  001F18  0D0A               	mullw	10
  6306  001F1A  5042               	movf	_mes_u,w,c
  6307  001F1C  24F3               	addwf	prodl,w,c
  6308  001F1E  6E5B               	movwf	_mes,c
  6309  001F20  0E00               	movlw	0
  6310  001F22  20F4               	addwfc	prodh,w,c
  6311  001F24  6E5C               	movwf	_mes+1,c
  6312                           
  6313                           ;headers\unmc_rtcc_01.h: 137: anio = anio_d * 10 + anio_u;
  6314  001F26  503E               	movf	_anio_d,w,c
  6315  001F28  0D0A               	mullw	10
  6316  001F2A  503F               	movf	_anio_u,w,c
  6317  001F2C  24F3               	addwf	prodl,w,c
  6318  001F2E  6E5D               	movwf	_anio,c
  6319  001F30  0E00               	movlw	0
  6320  001F32  20F4               	addwfc	prodh,w,c
  6321  001F34  6E5E               	movwf	_anio+1,c
  6322  001F36  0012               	return		;funcret
  6323  001F38                     __end_of_Read_RTC:
  6324                           	opt stack 0
  6325                           tblptru	equ	0xFF8
  6326                           tblptrh	equ	0xFF7
  6327                           tblptrl	equ	0xFF6
  6328                           tablat	equ	0xFF5
  6329                           prodh	equ	0xFF4
  6330                           prodl	equ	0xFF3
  6331                           intcon	equ	0xFF2
  6332                           intcon2	equ	0xFF1
  6333                           indf0	equ	0xFEF
  6334                           postinc0	equ	0xFEE
  6335                           fsr0h	equ	0xFEA
  6336                           fsr0l	equ	0xFE9
  6337                           wreg	equ	0xFE8
  6338                           postdec1	equ	0xFE5
  6339                           fsr1l	equ	0xFE1
  6340                           indf2	equ	0xFDF
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           fsr2h	equ	0xFDA
  6344                           fsr2l	equ	0xFD9
  6345                           status	equ	0xFD8
  6346                           
  6347 ;; *************** function _RtccReadTime *****************
  6348 ;; Defined at:
  6349 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  pTm             2    0[COMRAM] PTR struct .
  6352 ;;		 -> RtccTime(4), 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  rTD0            8   10[COMRAM] struct .
  6355 ;;  rTD1            8    2[COMRAM] struct .
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6369 ;;Total ram usage:       18 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_Read_RTC
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text26
  6379  002292                     __ptext26:
  6380                           	opt stack 0
  6381  002292                     _RtccReadTime:
  6382                           	opt stack 29
  6383                           
  6384                           ;incstack = 0
  6385  002292  0EFC               	movlw	252
  6386  002294  010F               	movlb	15	; () banked
  6387  002296  173F               	andwf	63,f,b	;volatile
  6388                           
  6389                           ; BSR set to: 15
  6390  002298  010F               	movlb	15	; () banked
  6391  00229A  813F               	bsf	63,0,b	;volatile
  6392                           
  6393                           ; BSR set to: 15
  6394  00229C  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  6395                           
  6396                           ; BSR set to: 15
  6397  0022A0  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  6398                           
  6399                           ; BSR set to: 15
  6400  0022A4  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  6401                           
  6402                           ; BSR set to: 15
  6403  0022A8  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  6404                           
  6405                           ; BSR set to: 15
  6406  0022AC  0EFC               	movlw	252
  6407  0022AE  010F               	movlb	15	; () banked
  6408  0022B0  173F               	andwf	63,f,b	;volatile
  6409  0022B2  010F               	movlb	15	; () banked
  6410  0022B4  813F               	bsf	63,0,b	;volatile
  6411                           
  6412                           ; BSR set to: 15
  6413  0022B6  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  6414                           
  6415                           ; BSR set to: 15
  6416  0022BA  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  6417                           
  6418                           ; BSR set to: 15
  6419  0022BE  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  6420                           
  6421                           ; BSR set to: 15
  6422  0022C2  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  6423                           
  6424                           ; BSR set to: 15
  6425  0022C6  5009               	movf	RtccReadTime@rTD1+6,w,c
  6426  0022C8  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  6427  0022CA  A4D8               	btfss	status,2,c
  6428  0022CC  D7E2               	goto	_RtccReadTime
  6429                           
  6430                           ; BSR set to: 15
  6431                           
  6432                           ; BSR set to: 15
  6433  0022CE  EE20 F003          	lfsr	2,3
  6434  0022D2  5001               	movf	RtccReadTime@pTm,w,c
  6435  0022D4  26D9               	addwf	fsr2l,f,c
  6436  0022D6  5002               	movf	RtccReadTime@pTm+1,w,c
  6437  0022D8  22DA               	addwfc	fsr2h,f,c
  6438  0022DA  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  6439  0022DE  EE20 F002          	lfsr	2,2
  6440  0022E2  5001               	movf	RtccReadTime@pTm,w,c
  6441  0022E4  26D9               	addwf	fsr2l,f,c
  6442  0022E6  5002               	movf	RtccReadTime@pTm+1,w,c
  6443  0022E8  22DA               	addwfc	fsr2h,f,c
  6444  0022EA  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  6445  0022EE  EE20 F001          	lfsr	2,1
  6446  0022F2  5001               	movf	RtccReadTime@pTm,w,c
  6447  0022F4  26D9               	addwf	fsr2l,f,c
  6448  0022F6  5002               	movf	RtccReadTime@pTm+1,w,c
  6449  0022F8  22DA               	addwfc	fsr2h,f,c
  6450  0022FA  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  6451                           
  6452                           ; BSR set to: 15
  6453  0022FE  0012               	return		;funcret
  6454  002300                     __end_of_RtccReadTime:
  6455                           	opt stack 0
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           indf0	equ	0xFEF
  6465                           postinc0	equ	0xFEE
  6466                           fsr0h	equ	0xFEA
  6467                           fsr0l	equ	0xFE9
  6468                           wreg	equ	0xFE8
  6469                           postdec1	equ	0xFE5
  6470                           fsr1l	equ	0xFE1
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _RtccReadDate *****************
  6479 ;; Defined at:
  6480 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  pDt             2    0[COMRAM] PTR struct .
  6483 ;;		 -> RtccDate(4), 
  6484 ;; Auto vars:     Size  Location     Type
  6485 ;;  rTD0            8   10[COMRAM] struct .
  6486 ;;  rTD1            8    2[COMRAM] struct .
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;Total ram usage:       18 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; This function calls:
  6503 ;;		Nothing
  6504 ;; This function is called by:
  6505 ;;		_Read_RTC
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text27
  6510  001F38                     __ptext27:
  6511                           	opt stack 0
  6512  001F38                     _RtccReadDate:
  6513                           	opt stack 29
  6514                           
  6515                           ; BSR set to: 15
  6516                           ;incstack = 0
  6517  001F38  0EFC               	movlw	252
  6518  001F3A  010F               	movlb	15	; () banked
  6519  001F3C  173F               	andwf	63,f,b	;volatile
  6520  001F3E  0E03               	movlw	3
  6521  001F40  010F               	movlb	15	; () banked
  6522  001F42  133F               	iorwf	63,f,b	;volatile
  6523                           
  6524                           ; BSR set to: 15
  6525  001F44  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  6526                           
  6527                           ; BSR set to: 15
  6528  001F48  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  6529                           
  6530                           ; BSR set to: 15
  6531  001F4C  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  6532                           
  6533                           ; BSR set to: 15
  6534  001F50  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  6535                           
  6536                           ; BSR set to: 15
  6537  001F54  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  6538                           
  6539                           ; BSR set to: 15
  6540  001F58  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  6541  001F5C  0EFC               	movlw	252
  6542  001F5E  010F               	movlb	15	; () banked
  6543  001F60  173F               	andwf	63,f,b	;volatile
  6544  001F62  0E03               	movlw	3
  6545  001F64  010F               	movlb	15	; () banked
  6546  001F66  133F               	iorwf	63,f,b	;volatile
  6547                           
  6548                           ; BSR set to: 15
  6549  001F68  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  6550                           
  6551                           ; BSR set to: 15
  6552  001F6C  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  6553                           
  6554                           ; BSR set to: 15
  6555  001F70  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  6556                           
  6557                           ; BSR set to: 15
  6558  001F74  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  6559                           
  6560                           ; BSR set to: 15
  6561  001F78  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  6562                           
  6563                           ; BSR set to: 15
  6564  001F7C  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  6565  001F80  5005               	movf	RtccReadDate@rTD1+2,w,c
  6566  001F82  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  6567  001F84  A4D8               	btfss	status,2,c
  6568  001F86  D7D8               	goto	_RtccReadDate
  6569                           
  6570                           ; BSR set to: 15
  6571                           
  6572                           ; BSR set to: 15
  6573  001F88  EE20 F001          	lfsr	2,1
  6574  001F8C  5001               	movf	RtccReadDate@pDt,w,c
  6575  001F8E  26D9               	addwf	fsr2l,f,c
  6576  001F90  5002               	movf	RtccReadDate@pDt+1,w,c
  6577  001F92  22DA               	addwfc	fsr2h,f,c
  6578  001F94  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  6579  001F98  EE20 F002          	lfsr	2,2
  6580  001F9C  5001               	movf	RtccReadDate@pDt,w,c
  6581  001F9E  26D9               	addwf	fsr2l,f,c
  6582  001FA0  5002               	movf	RtccReadDate@pDt+1,w,c
  6583  001FA2  22DA               	addwfc	fsr2h,f,c
  6584  001FA4  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  6585                           
  6586                           ; BSR set to: 15
  6587  001FA8  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  6588  001FAC  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  6589  001FB0  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  6590                           
  6591                           ; BSR set to: 15
  6592  001FB4  EE20 F003          	lfsr	2,3
  6593  001FB8  5001               	movf	RtccReadDate@pDt,w,c
  6594  001FBA  26D9               	addwf	fsr2l,f,c
  6595  001FBC  5002               	movf	RtccReadDate@pDt+1,w,c
  6596  001FBE  22DA               	addwfc	fsr2h,f,c
  6597  001FC0  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  6598                           
  6599                           ; BSR set to: 15
  6600  001FC4  0012               	return		;funcret
  6601  001FC6                     __end_of_RtccReadDate:
  6602                           	opt stack 0
  6603                           tblptru	equ	0xFF8
  6604                           tblptrh	equ	0xFF7
  6605                           tblptrl	equ	0xFF6
  6606                           tablat	equ	0xFF5
  6607                           prodh	equ	0xFF4
  6608                           prodl	equ	0xFF3
  6609                           intcon	equ	0xFF2
  6610                           intcon2	equ	0xFF1
  6611                           indf0	equ	0xFEF
  6612                           postinc0	equ	0xFEE
  6613                           fsr0h	equ	0xFEA
  6614                           fsr0l	equ	0xFE9
  6615                           wreg	equ	0xFE8
  6616                           postdec1	equ	0xFE5
  6617                           fsr1l	equ	0xFE1
  6618                           indf2	equ	0xFDF
  6619                           postinc2	equ	0xFDE
  6620                           postdec2	equ	0xFDD
  6621                           fsr2h	equ	0xFDA
  6622                           fsr2l	equ	0xFD9
  6623                           status	equ	0xFD8
  6624                           tblptru	equ	0xFF8
  6625                           tblptrh	equ	0xFF7
  6626                           tblptrl	equ	0xFF6
  6627                           tablat	equ	0xFF5
  6628                           prodh	equ	0xFF4
  6629                           prodl	equ	0xFF3
  6630                           intcon	equ	0xFF2
  6631                           intcon2	equ	0xFF1
  6632                           indf0	equ	0xFEF
  6633                           postinc0	equ	0xFEE
  6634                           fsr0h	equ	0xFEA
  6635                           fsr0l	equ	0xFE9
  6636                           wreg	equ	0xFE8
  6637                           postdec1	equ	0xFE5
  6638                           fsr1l	equ	0xFE1
  6639                           indf2	equ	0xFDF
  6640                           postinc2	equ	0xFDE
  6641                           postdec2	equ	0xFDD
  6642                           fsr2h	equ	0xFDA
  6643                           fsr2l	equ	0xFD9
  6644                           status	equ	0xFD8
  6645                           
  6646                           	psect	rparam
  6647  0000                     tblptru	equ	0xFF8
  6648                           tblptrh	equ	0xFF7
  6649                           tblptrl	equ	0xFF6
  6650                           tablat	equ	0xFF5
  6651                           prodh	equ	0xFF4
  6652                           prodl	equ	0xFF3
  6653                           intcon	equ	0xFF2
  6654                           intcon2	equ	0xFF1
  6655                           indf0	equ	0xFEF
  6656                           postinc0	equ	0xFEE
  6657                           fsr0h	equ	0xFEA
  6658                           fsr0l	equ	0xFE9
  6659                           wreg	equ	0xFE8
  6660                           postdec1	equ	0xFE5
  6661                           fsr1l	equ	0xFE1
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8


Data Sizes:
    Strings     232
    Constant    14
    Data        46
    BSS         181
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      95
    BANK0           160      0     148
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    main$2140	PTR int  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    main$2136	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[8]), STR_10(CODE[8]), 
		 -> STR_9(CODE[8]), STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_34(CODE[7]), NULL(NULL[0]), STR_17(CODE[9]), STR_16(CODE[9]), 
		 -> STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[9]), STR_12(CODE[9]), 
		 -> STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[5]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_33(CODE[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[5]), 
		 -> STR_29(CODE[3]), STR_26(CODE[15]), STR_25(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer5(BANK1[20]), buffer4(BANK0[20]), buffer3(BANK0[20]), buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer5(BANK1[20]), buffer4(BANK0[20]), buffer3(BANK0[20]), STR_28(CODE[9]), 
		 -> STR_27(CODE[4]), buffer2(BANK0[20]), STR_24(CODE[8]), STR_23(CODE[8]), 
		 -> STR_22(CODE[8]), STR_21(CODE[8]), STR_20(CODE[8]), STR_19(CODE[8]), 
		 -> STR_18(CODE[8]), 

    reporte_cafe	PTR int [3][3] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    array_boton_seleccionar_accion_cafe	PTR unsigned char [3] size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_16(CODE[9]), STR_15(CODE[9]), 

    array_boton_seleccionar_tamanio_cafe	PTR unsigned char [3] size(2) Largest target is 9
		 -> STR_14(CODE[9]), STR_13(CODE[9]), STR_12(CODE[9]), 

    array_boton_seleccionar_tipo_cafe	PTR unsigned char [3] size(2) Largest target is 8
		 -> STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), 

    array_seleccionar	PTR unsigned char [8] size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _setHoraMinutoSegundo->_sprintf
    _setDiaSemana->_lcd_putrs
    _setDiaMesAnio->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _Write_RTC->_RtccWriteDate
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   84454
                                             39 COMRAM    16    16      0
                           _Read_RTC
                          _Write_RTC
                             ___wmul
                         _lcd_gotoxy
                          _lcd_putrs
                    _setRelojDigital
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   36166
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                    _setRelojDigital
 ---------------------------------------------------------------------------------
 (2) _setRelojDigital                                      0     0      0   32035
                      _setDiaMesAnio
                       _setDiaSemana
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (3) _setHoraMinutoSegundo                                 0     0      0   12942
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _setDiaSemana                                         1     1      0    6151
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _setDiaMesAnio                                        0     0      0   12942
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    4322
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1563
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    4082
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    2821
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    2069
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (5) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     932
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   ___wmul
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _setRelojDigital
     _setDiaMesAnio
       _Write_RTC
         _RtccWrOn
         _RtccWriteDate
           _RtccWrOn
         _RtccWriteTime
           _RtccWrOn
         ___awdiv
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _setDiaSemana
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _setHoraMinutoSegundo
       _Write_RTC
         _RtccWrOn
         _RtccWriteDate
           _RtccWrOn
         _RtccWriteTime
           _RtccWrOn
         ___awdiv
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _setRelojDigital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _setDiaSemana
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      28       8       15.6%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      94       5       92.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     37      5F       1      100.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B       6        0.0%
DATA                 0      0     11B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Oct 06 17:36:51 2017

                                   _a 0082                                     _b 0080  
                                   _c 007E                                     _i 003C  
                                   _j 003A                                     _k 007C  
                      ?_lcd_send_byte 0003                          ___awdiv@sign 0006  
                 ___wmul@multiplicand 0003                           lcd_comand@d 0005  
                        __CFG_CP0$OFF 000000              __size_of_setRelojDigital 000E  
                                 l200 10C8                                   l220 1194  
                                 l212 115A                                   l213 1164  
                                 l230 1236                                   l206 1134  
                                 l311 1468                                   l207 113C  
                                 l312 146C                                   l304 143E  
                                 l232 11F4                                   l161 1A56  
                                 l305 1444                                   l233 11FC  
                                 l217 11CE                                   l225 11B2  
                                 l330 14CE                                   l226 11BC  
                                 l171 2066                                   l163 1A86  
                                 l155 19C8                                   l331 14D4  
                                 l243 129E                                   l251 1282  
                                 l219 118C                                   l172 2082  
                                 l324 14B0                                   l252 128C  
                                 l165 1AB6                                   l157 19F6  
                                 l325 14B4                                   l317 1486  
                                 l245 125C                                   l430 16A8  
                                 l350 15AC                                   l318 148C  
                                 l246 1264                                   l238 121A  
                                 l190 1084                                   l415 237C  
                                 l431 16C2                                   l159 1A26  
                                 l351 15B6                                   l343 1516  
                                 l271 132C                                   l239 1224  
                                 l416 2354                                   l176 224E  
                                 l352 1688                                   l344 151C  
                                 l272 1334                                   l256 1306  
                                 l264 12EA                                   l441 182E  
                                 l433 16D6                                   l337 14F8  
                                 l265 12F4                                   l193 10A4  
                                 l434 16D0                                   l338 14FC  
                                 l282 13D6                                   l290 13BA  
                                 l258 12C4                                   l194 10A8  
                                 l531 1CF2                                   l451 17E6  
                                 l291 13C4                                   l259 12CC  
                                 l532 1D50                                   l452 17D6  
                                 l444 1762                                   l284 1394  
                                 l188 100C                                   l525 1C8E  
                                 l445 178A                                   l349 156A  
                                 l285 139C                                   l269 136E  
                                 l277 1352                                   l189 104A  
                                 l382 20F4                                   l454 1816  
                                 l446 1798                                   l278 135C  
                                 l463 18C2                                   l455 17F8  
                                 l447 1794                                   l439 1704  
                                 l199 10C2                                   l384 2116  
                                 l536 1D5A                                   l560 1DF4  
                                 l464 18CA                                   l296 1408  
                                 l377 248C                                   l561 1E4C  
                                 l473 196C                                   l465 18EE  
                                 l449 17CC                                   l378 248E  
                                 l554 1DA0                                   l394 23D8  
                                 l474 191A                                   l458 1828  
                                 l298 1420                                   l395 23A8  
                                 l459 1856                                   l299 1424  
                                 l565 1E56                                   l741 2028  
                                 l389 24F6                                   l397 23B4  
                                 l742 2032                                   l734 1FDA  
                                 l398 23C0                                   l743 2040  
                                 l735 1FEA                                   l399 23CC  
                                 l737 2008                                   l738 2000  
                                 l917 2522                                   l782 253E  
                                 l768 254E                                   l996 231E  
                                 l997 2316                                   _dia 0057  
                                 _mes 005B                                   wreg 000FE8  
                     RtccReadDate@pDt 0001                           lcd_gotoxy@x 0006  
                         lcd_gotoxy@y 0005                                  l1000 233E  
                                l1001 2348                                  l1010 241C  
                                l1011 2426                                  l1006 2404  
                                l1007 23FC                                  l2714 17F8  
                                l2708 17D6                                  l2734 1872  
                                l2944 20EC                                  l2958 210E  
                                STR_1 0FC8                                  STR_2 0FC3  
                                STR_3 0FE6                                  STR_4 0FE1  
                                STR_5 0FCD                                  STR_6 0FDC  
                                STR_7 0FD7                                  STR_8 0FD2  
                                STR_9 0F6C                                  u2200 200C  
                                u2300 239C                                  u3020 1268  
                                u2240 2322                                  u3120 12F8  
                                u3050 1290                                  u2307 2392  
                                u2500 198C                                  u2420 189E  
                                u3300 1428                                  u2270 2408  
                                u3230 13A0                                  u2600 2232  
                                u3400 1490                                  u3160 1338  
                                u1810 2148                                  u2290 2374  
                                u3330 1448                                  u3090 12D0  
                                u3260 13C8                                  u1830 2160  
                                u2470 18F6                                  u3510 1500  
                                u3190 1360                                  u2640 2104  
                                u2480 1914                                  u3440 14B8  
                                u2297 236A                                  u1850 217A  
                                u2490 1974                                  u3370 1470  
                                u2810 1140                                  u1828 214A  
                                u2580 205A                                  u3540 1520  
                                u2740 10AC                                  u1870 2196  
                                u2590 2076                                  u3470 14D8  
                                u2910 11C0                                  u1848 2162  
                                u2840 1168                                  u3617 1040  
                                u2770 10CC                                  u3707 19BE  
                                u3627 107A                                  u1868 217C  
                                u3717 19EC                                  u3637 11C6  
                                u3590 15BA                                  u2950 1200  
                                u3727 1A1C                                  u3647 122E  
                                u1888 2198                                  u2880 1198  
                                u3737 1A4C                                  u3657 1296  
                                u3747 1A7C                                  u3667 12FE  
                                u2980 1228                                  u3757 1AAC  
                                u3677 1366                                  u3767 1ADC  
                                u3687 13CE                                  u3777 2540  
                                u3697 1692                                  u3787 2550  
          main@boton_seleccionar_cafe 0032                      ?_lcd_send_nibble 0001  
                         main@tamanio 0030                                  _anio 005D  
                                _flag 02F8                                  _main 0FF8  
                                _hora 0055                                  fsr0h 000FEA  
                                indf0 000FEF                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                       __CFG_T1DIG$ON 000000                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                       __CFG_IESO$OFF 000000                      RtccReadDate@rTD0 000B  
                    RtccReadDate@rTD1 0003                          ___param_bank 000000  
                     RtccReadTime@pTm 0001                           _Delay1KTCYx 253C  
                       __CFG_PLLDIV$1 000000                                 ?_main 0001  
                     __end_of___awdiv 204A                                 STR_10 0FA4  
                               STR_11 0F94                                 STR_20 0F84  
                               STR_12 0F36                                 STR_21 0F9C  
                               STR_13 0F5A                                 STR_30 0FEB  
                               STR_22 0F8C                                 STR_14 0F48  
                               STR_31 0FF4                                 STR_23 0FB4  
                               STR_15 0F3F                                 STR_32 0FF4  
                               STR_24 0F7C                                 STR_16 0F51  
                               STR_33 0FF4                                 STR_25 0F0F  
                               STR_17 0F63                                 STR_34 0FBC  
                               STR_18 0FAC                                 STR_26 0F1E  
                               STR_27 0FF0                                 STR_19 0F74  
                               STR_28 0F2D                                 STR_29 0FF4  
               __size_of_Delay100TCYx 0010                       ___awdiv@divisor 0003  
                     __end_of___lwdiv 2352                       __end_of___lwmod 2430  
                     ___awdiv@counter 0005                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                      __CFG_FCMEN$OFF 000000  _array_boton_seleccionar_tamanio_cafe 00E8  
                     __end_of_dpowers 0F0B                                 _mes_d 0041  
                               _mes_u 0042                       __end_of_isdigit 252A  
                               _setup 2430                                 main@a 002A  
                      __pbitbssCOMRAM 02F8                                 tablat 000FF5  
                _setHoraMinutoSegundo 2222                          lcd_putrs@ptr 0009  
                               status 000FD8                       __end_of_sprintf 199A  
             __CFG_DSWDTOSC$INTOSCREF 000000                       __initialization 21B2  
                        _Delay100TCYx 254C                          __end_of_main 169E  
                     ??_lcd_send_byte 0004                      RtccReadTime@rTD0 000B  
                    RtccReadTime@rTD1 0003                      __end_of_Read_RTC 1F38  
                              ??_main 0028                         __activetblptr 000002  
                    __end_of_RtccWrOn 253C                     ??_setRelojDigital 0028  
                              _ADCON0 000FC2                                _ADCON1 000FC1  
                              _EECON2 000FA7                                _ANCON0 000F48  
                              _ANCON1 000F49                      ___awdiv@dividend 0001  
                              ?_setup 0001                 ?_setHoraMinutoSegundo 0001  
                      __CFG_WDTEN$OFF 000000                      RtccWriteDate@pDt 0001  
                              _RTCCFG 000F3F                        __CFG_WPCFG$OFF 000000  
                      __CFG_WPDIS$OFF 000000                        __CFG_XINST$OFF 000000  
                    __end_of_lcd_init 213C                      __end_of_lcd_putc 23EE  
                              ___wmul 24A2                             ??___awdiv 0005  
                      __CFG_STVREN$ON 000000                                _diasem 0059  
                              _anio_d 003E                                _anio_u 003F  
                           ??___lwdiv 0005                             ??___lwmod 000C  
                              _hora_d 0045                                _hora_u 0046  
                              clear_0 21F8                                clear_1 2204  
                              clear_2 2212                      ___awdiv@quotient 0007  
                              _minuto 0053                 __end_of_RtccWriteDate 1D64  
               __end_of_RtccWriteTime 1E60                      RtccWriteTime@pTm 0001  
                        __pdataCOMRAM 0053                             ??_isdigit 0001  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
                           ??_sprintf 0017                            __accesstop 0060  
             __end_of__initialization 2218                    __size_of_Write_RTC 0148  
                       ___rparam_used 000001                         ?_setDiaSemana 0001  
                      __pcstackCOMRAM 0001                          __pidataBANK0 24C8  
                       __end_of_setup 2470                       __CFG_DSWDTPS$G2 000000  
                     __CFG_OSC$INTOSC 000000                     lcd_gotoxy@address 0007  
                  __size_of_lcd_putrs 0052                ??_setHoraMinutoSegundo 0028  
                        sprintf@width 0025                               ??_setup 0028  
                          __pbssBANK0 0060                            __pbssBANK1 0100  
                           ?_Read_RTC 0001                            _dia_semana 0040  
           RtccWriteTime@tempHourWDay 000A                        ??_setDiaSemana 000B  
                           ?_RtccWrOn 0001                        lcd_send_byte@n 0003  
                             ?___wmul 0001                         ?_RtccReadDate 0001  
                       ?_RtccReadTime 0001                          ?_Delay1KTCYx 0001  
              __size_of_setDiaMesAnio 007C                     __end_of_Write_RTC 1C2E  
                          _lcd_comand 256A                            _lcd_gotoxy 24EA  
                             _RTCVALH 000F99                               _RTCVALL 000F98  
                           ?_lcd_init 0001                             ?_lcd_putc 0001  
                          ??_Read_RTC 0013                               __Hparam 0000  
                             __Lparam 0000              __size_of_lcd_send_nibble 0076  
                          ??_RtccWrOn 0001                        ??_RtccReadDate 0003  
                      ??_RtccReadTime 0003                               ___awdiv 1FC6  
                   __end_of_lcd_putrs 23A4                       __size_of___wmul 0026  
                             ___lwdiv 2300                               ___lwmod 23EE  
                        __psmallconst 0F00                           _RtccTimeVal 0078  
                             __pcinit 21B2                               _fecha_d 0043  
                     _setRelojDigital 255C                               _fecha_u 0044  
                             __ramtop 0F00                               __ptext0 0FF8  
                             __ptext1 2430                               __ptext2 255C  
                             __ptext3 2222                               __ptext4 199A  
                             __ptext5 204A                               __ptext6 169E  
                             __ptext7 250C                               __ptext8 24A2  
                             __ptext9 23EE                               _buffer1 0100  
                             _buffer2 00AC                               _buffer3 0098  
                             _buffer4 0084                               _buffer5 0114  
                           _T1CONbits 000FCD                               _dpowers 0F01  
 _array_boton_seleccionar_accion_cafe 00E2                               _isdigit 250C  
                             _segundo 0038                               _sprintf 169E  
                          ??_lcd_init 0005                            ??_lcd_putc 0008  
                end_of_initialization 2218                         _setDiaMesAnio 204A  
                lcd_send_byte@address 0004                         __Lmediumconst 0000  
                             postdec1 000FE5                               postdec2 000FDD  
                             postinc0 000FEE                               postinc2 000FDE  
               __end_of_lcd_send_byte 24A2                             _PORTAbits 000F80  
                    __CFG_DSBOREN$OFF 000000                  __end_of_setDiaSemana 1AE6  
                         ?_lcd_comand 0001                      __CFG_CPUDIV$OSC1 000000  
                           _TRISBbits 000F93                           ?_lcd_gotoxy 0005  
                     _LCD_INIT_STRING 0F0B                        ?_setDiaMesAnio 0001  
                          main@accion 0034                      __CFG_IOL1WAY$OFF 000000  
           RtccWriteDate@tempDayMonth 000A               __end_of_setRelojDigital 256A  
                 __CFG_MSSP7B_EN$MSK7 000000                      Delay100TCYx@unit 0001  
                      __end_of___wmul 24C8                         __pidataCOMRAM 2578  
           RtccWriteDate@tempHourWDay 000C                     ??_lcd_send_nibble 0001  
                __size_of_Delay1KTCYx 0010                      __CFG_DSWDTEN$OFF 000000  
                 start_initialization 21B2                  __end_of_RtccReadDate 1FC6  
                __end_of_RtccReadTime 2300                  RtccWriteTime@wasAlrm 0006  
                RtccWriteTime@wasWrEn 0007                __size_of_RtccWriteDate 0136  
                     RtccWriteDate@di 0003                __size_of_RtccWriteTime 00FC  
                   __size_of_Read_RTC 00D8                   __size_of_lcd_comand 000E  
                 __size_of_lcd_gotoxy 0022                              ??___wmul 0005  
                         __pdataBANK0 00D2                     __size_of_RtccWrOn 0012  
                     RtccWriteTime@di 0003                      __CFG_LPT1OSC$OFF 000000  
                         _ALRMCFGbits 000F91               __end_of_LCD_INIT_STRING 0F0F  
                         __pbssCOMRAM 0038                 main@boton_seleccionar 0036  
                           _Write_RTC 1AE6                       ??_setDiaMesAnio 0028  
                        _isdigit$1783 0002                       Delay1KTCYx@unit 0001  
       __size_of_setHoraMinutoSegundo 0070                     __size_of_lcd_init 0076  
                         sprintf@flag 001B                     __size_of_lcd_putc 004A  
                         sprintf@prec 001E                      ___lwdiv@dividend 0001  
                    ?_setRelojDigital 0001                         ?_Delay100TCYx 0001  
                            ?___awdiv 0001                              ?___lwdiv 0001  
                            ?___lwmod 0008                 __size_of_setDiaSemana 014C  
             RtccWriteTime@tempMinSec 0008                             _lcd_putrs 2352  
             main@boton_centro_estado 002C                         _RtccWriteDate 1C2E  
                         __smallconst 0F00                         _RtccWriteTime 1D64  
                            ?_isdigit 0001                  __CFG_RTCOSC$T1OSCREF 000000  
                          ?_Write_RTC 0001                      ___lwdiv@quotient 0005  
                            ?_sprintf 000D                        __size_of_setup 0040  
                    _RtccAlrmTimeDate 0068                        ___wmul@product 0005  
                            _LATBbits 000F8A                              _PIE3bits 000FA3  
                        _setDiaSemana 199A                             _segundo_d 0049  
                      ??_Delay100TCYx 0001                             _segundo_u 004A  
                    __CFG_WDTPS$32768 000000                    RtccWriteDate@wasOn 0005  
                  _Rtcc_read_TimeDate 0060                        ?_RtccWriteDate 0001  
                          ?_lcd_putrs 0009                     ___wmul@multiplier 0001  
                      ?_RtccWriteTime 0001                             lcd_init@i 0005  
               __size_of_RtccReadDate 008E                          ??_lcd_comand 0005  
                           lcd_putc@c 0008                 __size_of_RtccReadTime 006E  
                        ??_lcd_gotoxy 0006                           _INTCON2bits 000FF1  
                           copy_data0 21C6                             copy_data1 21E6  
                            _Read_RTC 1E60                     _array_seleccionar 00D2  
                     _lcd_send_nibble 213C                              __Hrparam 0000  
                            _RtccDate 004B                              __Lrparam 0000  
                            _RtccTime 004F                              _RtccWrOn 252A  
                  __end_of_lcd_comand 2578                    __end_of_lcd_gotoxy 250C  
                        _RtccReadDate 1F38                      __size_of___awdiv 0084  
                        _RtccReadTime 2292     _array_boton_seleccionar_tipo_cafe 00EE  
                    __size_of___lwdiv 0052                      __size_of___lwmod 0042  
                        _RtccTimeDate 0070                            sprintf@len 0023  
                          sprintf@val 001C                      __size_of_isdigit 001E  
                     ___lwdiv@divisor 0003                           ??_Write_RTC 000E  
                     ___lwdiv@counter 0007                              __ptext10 2300  
                            __ptext11 2352                              __ptext20 253C  
                            __ptext12 23A4                              __ptext21 256A  
                            __ptext13 24EA                              __ptext22 2470  
                            __ptext14 1AE6                              __ptext23 213C  
                            __ptext15 1FC6                              __ptext24 254C  
                            __ptext16 1D64                              __ptext25 1E60  
                            __ptext17 1C2E                              __ptext26 2292  
                            __ptext18 252A                              __ptext27 1F38  
                            __ptext19 20C6                              _lcd_init 20C6  
                            _lcd_putc 23A4                      __size_of_sprintf 02FC  
              __size_of_lcd_send_byte 0032                         __size_of_main 06A6  
                            _minuto_d 0047                              _minuto_u 0048  
                       ??_Delay1KTCYx 0001                       ??_RtccWriteDate 0004  
                     ??_RtccWriteTime 0004                              main@tipo 002E  
                         ??_lcd_putrs 000B                          _reporte_cafe 00C0  
                         _OSCTUNEbits 000F9B                            _INTCONbits 000FF2  
                  RtccWriteTime@wasOn 0005                  __end_of_Delay100TCYx 255C  
                            isdigit@c 0003                             sprintf@ap 001F  
                           sprintf@cp 0021               __end_of_lcd_send_nibble 21B2  
                           sprintf@sp 000D                      ___lwmod@dividend 0008  
                          _OSCCONbits 000FD3                 RtccWriteDate@tempYear 0007  
        __end_of_setHoraMinutoSegundo 2292                         _lcd_send_byte 2470  
                          _RTCCFGbits 000F3F                              sprintf@c 0027  
                            sprintf@f 000F                       ___lwmod@divisor 000A  
                 __end_of_Delay1KTCYx 254C                       ___lwmod@counter 000C  
                RtccWriteDate@wasAlrm 0006                  RtccWriteDate@wasWrEn 0009  
               __end_of_setDiaMesAnio 20C6                 lcd_send_nibble@nibble 0002  
