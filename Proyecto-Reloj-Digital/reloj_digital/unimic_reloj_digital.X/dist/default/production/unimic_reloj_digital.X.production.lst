

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Sep 15 01:19:23 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31  0000                     
    32                           ; Version 1.43
    33                           ; Generated 25/07/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F26J50 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  001E4E                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _minuto
    72  001E4E  001E               	dw	30
    73                           
    74                           ;initializer for _hora
    75  001E50  0012               	dw	18
    76                           
    77                           ;initializer for _dia
    78  001E52  0008               	dw	8
    79                           
    80                           ;initializer for _diasem
    81  001E54  0003               	dw	3
    82                           
    83                           ;initializer for _mes
    84  001E56  0009               	dw	9
    85                           
    86                           ;initializer for _anio
    87  001E58  000F               	dw	15
    88                           
    89                           	psect	smallconst
    90  000F00                     __psmallconst:
    91                           	opt stack 0
    92  000F00  00                 	db	0
    93  000F01                     _LCD_INIT_STRING:
    94                           	opt stack 0
    95  000F01  28                 	db	40
    96  000F02  0C                 	db	12
    97  000F03  01                 	db	1
    98  000F04  06                 	db	6
    99  000F05                     __end_of_LCD_INIT_STRING:
   100                           	opt stack 0
   101  0000                     _RTCCFG	set	3903
   102  0000                     _ANCON1	set	3913
   103  0000                     _ANCON0	set	3912
   104  0000                     _RTCCFGbits	set	3903
   105  0000                     _ALRMCFGbits	set	3985
   106  0000                     _EECON2	set	4007
   107  0000                     _INTCONbits	set	4082
   108  0000                     _RTCVALH	set	3993
   109  0000                     _RTCVALL	set	3992
   110  0000                     _TRISBbits	set	3987
   111  0000                     _LATBbits	set	3978
   112  0000                     _PORTAbits	set	3968
   113  0000                     _T1CONbits	set	4045
   114  0000                     _ADCON1	set	4033
   115  0000                     _ADCON0	set	4034
   116  0000                     _INTCON2bits	set	4081
   117  0000                     _TRISC	set	3988
   118  0000                     _TRISB	set	3987
   119  0000                     _TRISA	set	3986
   120  0000                     _OSCCONbits	set	4051
   121  0000                     _OSCTUNEbits	set	3995
   122  0000                     _PIE3bits	set	4003
   123  000F05                     STR_5:
   124  000F05  4C                 	db	76	;'L'
   125  000F06  75                 	db	117	;'u'
   126  000F07  6E                 	db	110	;'n'
   127  000F08  65                 	db	101	;'e'
   128  000F09  73                 	db	115	;'s'
   129  000F0A  20                 	db	32
   130  000F0B  20                 	db	32
   131  000F0C  00                 	db	0
   132  000F0D                     STR_10:
   133  000F0D  53                 	db	83	;'S'
   134  000F0E  61                 	db	97	;'a'
   135  000F0F  62                 	db	98	;'b'
   136  000F10  61                 	db	97	;'a'
   137  000F11  64                 	db	100	;'d'
   138  000F12  6F                 	db	111	;'o'
   139  000F13  20                 	db	32
   140  000F14  00                 	db	0
   141  000F15                     STR_6:
   142  000F15  4D                 	db	77	;'M'
   143  000F16  61                 	db	97	;'a'
   144  000F17  72                 	db	114	;'r'
   145  000F18  74                 	db	116	;'t'
   146  000F19  65                 	db	101	;'e'
   147  000F1A  73                 	db	115	;'s'
   148  000F1B  20                 	db	32
   149  000F1C  00                 	db	0
   150  000F1D                     STR_8:
   151  000F1D  4A                 	db	74	;'J'
   152  000F1E  75                 	db	117	;'u'
   153  000F1F  65                 	db	101	;'e'
   154  000F20  76                 	db	118	;'v'
   155  000F21  65                 	db	101	;'e'
   156  000F22  73                 	db	115	;'s'
   157  000F23  20                 	db	32
   158  000F24  00                 	db	0
   159  000F25                     STR_7:
   160  000F25  4D                 	db	77	;'M'
   161  000F26  69                 	db	105	;'i'
   162  000F27  65                 	db	101	;'e'
   163  000F28  72                 	db	114	;'r'
   164  000F29  63                 	db	99	;'c'
   165  000F2A  6F                 	db	111	;'o'
   166  000F2B  6C                 	db	108	;'l'
   167  000F2C  00                 	db	0
   168  000F2D                     STR_4:
   169  000F2D  44                 	db	68	;'D'
   170  000F2E  6F                 	db	111	;'o'
   171  000F2F  6D                 	db	109	;'m'
   172  000F30  69                 	db	105	;'i'
   173  000F31  6E                 	db	110	;'n'
   174  000F32  67                 	db	103	;'g'
   175  000F33  6F                 	db	111	;'o'
   176  000F34  00                 	db	0
   177  000F35                     STR_9:
   178  000F35  56                 	db	86	;'V'
   179  000F36  69                 	db	105	;'i'
   180  000F37  65                 	db	101	;'e'
   181  000F38  72                 	db	114	;'r'
   182  000F39  6E                 	db	110	;'n'
   183  000F3A  65                 	db	101	;'e'
   184  000F3B  73                 	db	115	;'s'
   185  000F3C  00                 	db	0
   186  000F3D                     STR_11:
   187  000F3D  2F                 	db	47
   188  000F3E  00                 	db	0
   189  000F3F                     STR_2:
   190  000F3F  30                 	db	48	;'0'
   191  000F40  00                 	db	0
   192  000F41                     STR_1:
   193  000F41  31                 	db	49	;'1'
   194  000F42  00                 	db	0
   195  000F43                     STR_17:
   196  000F43  3A                 	db	58	;':'
   197  000F44  00                 	db	0
   198  0000                     
   199                           ; #config settings
   200  000F45  00                 	db	0	; dummy byte at the end
   201  0000                     
   202                           	psect	cinit
   203  001D08                     __pcinit:
   204                           	opt stack 0
   205  001D08                     start_initialization:
   206                           	opt stack 0
   207  001D08                     __initialization:
   208                           	opt stack 0
   209                           
   210                           ; Initialize objects allocated to COMRAM (12 bytes)
   211                           ; load TBLPTR registers with __pidataCOMRAM
   212  001D08  0E4E               	movlw	low __pidataCOMRAM
   213  001D0A  6EF6               	movwf	tblptrl,c
   214  001D0C  0E1E               	movlw	high __pidataCOMRAM
   215  001D0E  6EF7               	movwf	tblptrh,c
   216  001D10  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   217  001D12  6EF8               	movwf	tblptru,c
   218  001D14  EE00  F04C         	lfsr	0,__pdataCOMRAM
   219  001D18  EE10 F00C          	lfsr	1,12
   220  001D1C                     copy_data0:
   221  001D1C  0009               	tblrd		*+
   222  001D1E  CFF5 FFEE          	movff	tablat,postinc0
   223  001D22  50E5               	movf	postdec1,w,c
   224  001D24  50E1               	movf	fsr1l,w,c
   225  001D26  E1FA               	bnz	copy_data0
   226                           
   227                           ; Clear objects allocated to BANK0 (28 bytes)
   228  001D28  EE00  F060         	lfsr	0,__pbssBANK0
   229  001D2C  0E1C               	movlw	28
   230  001D2E                     clear_0:
   231  001D2E  6AEE               	clrf	postinc0,c
   232  001D30  06E8               	decf	wreg,f,c
   233  001D32  E1FD               	bnz	clear_0
   234                           
   235                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   236  001D34  6A58               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   237                           
   238                           ; Clear objects allocated to COMRAM (55 bytes)
   239  001D36  EE00  F001         	lfsr	0,__pbssCOMRAM
   240  001D3A  0E37               	movlw	55
   241  001D3C                     clear_1:
   242  001D3C  6AEE               	clrf	postinc0,c
   243  001D3E  06E8               	decf	wreg,f,c
   244  001D40  E1FD               	bnz	clear_1
   245  001D42                     end_of_initialization:
   246                           	opt stack 0
   247  001D42                     __end_of__initialization:
   248                           	opt stack 0
   249  001D42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   250  001D44  6EF8               	movwf	tblptru,c
   251  001D46  0100               	movlb	0
   252  001D48  EFA3  F007         	goto	_main	;jump to C main() function
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           postdec1	equ	0xFE5
   260                           fsr1l	equ	0xFE1
   261                           
   262                           	psect	bitbssCOMRAM
   263  0002C0                     __pbitbssCOMRAM:
   264                           	opt stack 0
   265  0002C0                     _flag:
   266                           	opt stack 0
   267  0002C0                     	ds	1
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           postinc0	equ	0xFEE
   273                           wreg	equ	0xFE8
   274                           postdec1	equ	0xFE5
   275                           fsr1l	equ	0xFE1
   276                           
   277                           	psect	bssCOMRAM
   278  000001                     __pbssCOMRAM:
   279                           	opt stack 0
   280  000001                     _RtccAlrmTimeDate:
   281                           	opt stack 0
   282  000001                     	ds	8
   283  000009                     _RtccTimeDate:
   284                           	opt stack 0
   285  000009                     	ds	8
   286  000011                     _RtccTimeVal:
   287                           	opt stack 0
   288  000011                     	ds	4
   289  000015                     _segundo:
   290                           	opt stack 0
   291  000015                     	ds	2
   292  000017                     _k:
   293                           	opt stack 0
   294  000017                     	ds	2
   295  000019                     _c:
   296                           	opt stack 0
   297  000019                     	ds	2
   298  00001B                     _b:
   299                           	opt stack 0
   300  00001B                     	ds	2
   301  00001D                     _a:
   302                           	opt stack 0
   303  00001D                     	ds	2
   304  00001F                     _j:
   305                           	opt stack 0
   306  00001F                     	ds	2
   307  000021                     _i:
   308                           	opt stack 0
   309  000021                     	ds	2
   310  000023                     _anio_d:
   311                           	opt stack 0
   312  000023                     	ds	1
   313  000024                     _anio_u:
   314                           	opt stack 0
   315  000024                     	ds	1
   316  000025                     _dia_semana:
   317                           	opt stack 0
   318  000025                     	ds	1
   319  000026                     _mes_d:
   320                           	opt stack 0
   321  000026                     	ds	1
   322  000027                     _mes_u:
   323                           	opt stack 0
   324  000027                     	ds	1
   325  000028                     _fecha_d:
   326                           	opt stack 0
   327  000028                     	ds	1
   328  000029                     _fecha_u:
   329                           	opt stack 0
   330  000029                     	ds	1
   331  00002A                     _hora_d:
   332                           	opt stack 0
   333  00002A                     	ds	1
   334  00002B                     _hora_u:
   335                           	opt stack 0
   336  00002B                     	ds	1
   337  00002C                     _minuto_d:
   338                           	opt stack 0
   339  00002C                     	ds	1
   340  00002D                     _minuto_u:
   341                           	opt stack 0
   342  00002D                     	ds	1
   343  00002E                     _segundo_d:
   344                           	opt stack 0
   345  00002E                     	ds	1
   346  00002F                     _segundo_u:
   347                           	opt stack 0
   348  00002F                     	ds	1
   349  000030                     _RtccDate:
   350                           	opt stack 0
   351  000030                     	ds	4
   352  000034                     _RtccTime:
   353                           	opt stack 0
   354  000034                     	ds	4
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           postinc0	equ	0xFEE
   360                           wreg	equ	0xFE8
   361                           postdec1	equ	0xFE5
   362                           fsr1l	equ	0xFE1
   363                           
   364                           	psect	dataCOMRAM
   365  00004C                     __pdataCOMRAM:
   366                           	opt stack 0
   367  00004C                     _minuto:
   368                           	opt stack 0
   369  00004C                     	ds	2
   370  00004E                     _hora:
   371                           	opt stack 0
   372  00004E                     	ds	2
   373  000050                     _dia:
   374                           	opt stack 0
   375  000050                     	ds	2
   376  000052                     _diasem:
   377                           	opt stack 0
   378  000052                     	ds	2
   379  000054                     _mes:
   380                           	opt stack 0
   381  000054                     	ds	2
   382  000056                     _anio:
   383                           	opt stack 0
   384  000056                     	ds	2
   385                           tblptru	equ	0xFF8
   386                           tblptrh	equ	0xFF7
   387                           tblptrl	equ	0xFF6
   388                           tablat	equ	0xFF5
   389                           postinc0	equ	0xFEE
   390                           wreg	equ	0xFE8
   391                           postdec1	equ	0xFE5
   392                           fsr1l	equ	0xFE1
   393                           
   394                           	psect	bssBANK0
   395  000060                     __pbssBANK0:
   396                           	opt stack 0
   397  000060                     _buffer2:
   398                           	opt stack 0
   399  000060                     	ds	20
   400  000074                     _Rtcc_read_TimeDate:
   401                           	opt stack 0
   402  000074                     	ds	8
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412                           	psect	cstackCOMRAM
   413  000038                     __pcstackCOMRAM:
   414                           	opt stack 0
   415  000038                     ??_lcd_send_nibble:
   416  000038                     ?___awdiv:
   417                           	opt stack 0
   418  000038                     Delay100TCYx@unit:
   419                           	opt stack 0
   420  000038                     Delay1KTCYx@unit:
   421                           	opt stack 0
   422  000038                     RtccWriteDate@pDt:
   423                           	opt stack 0
   424  000038                     RtccWriteTime@pTm:
   425                           	opt stack 0
   426  000038                     ___awdiv@dividend:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x0
   430  000038                     	ds	1
   431  000039                     lcd_send_nibble@nibble:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x1
   435  000039                     	ds	1
   436  00003A                     lcd_send_byte@n:
   437                           	opt stack 0
   438  00003A                     RtccWriteDate@di:
   439                           	opt stack 0
   440  00003A                     RtccWriteTime@di:
   441                           	opt stack 0
   442  00003A                     ___awdiv@divisor:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446  00003A                     	ds	1
   447  00003B                     lcd_send_byte@address:
   448                           	opt stack 0
   449                           
   450                           ; 1 bytes @ 0x3
   451  00003B                     	ds	1
   452  00003C                     lcd_init@i:
   453                           	opt stack 0
   454  00003C                     lcd_gotoxy@y:
   455                           	opt stack 0
   456  00003C                     lcd_comand@d:
   457                           	opt stack 0
   458  00003C                     RtccWriteDate@wasOn:
   459                           	opt stack 0
   460  00003C                     RtccWriteTime@wasOn:
   461                           	opt stack 0
   462  00003C                     ___awdiv@counter:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0x4
   466  00003C                     	ds	1
   467  00003D                     lcd_gotoxy@x:
   468                           	opt stack 0
   469  00003D                     RtccWriteDate@wasAlrm:
   470                           	opt stack 0
   471  00003D                     RtccWriteTime@wasAlrm:
   472                           	opt stack 0
   473  00003D                     ___awdiv@sign:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x5
   477  00003D                     	ds	1
   478  00003E                     lcd_gotoxy@address:
   479                           	opt stack 0
   480  00003E                     RtccWriteTime@wasWrEn:
   481                           	opt stack 0
   482  00003E                     RtccWriteDate@tempYear:
   483                           	opt stack 0
   484  00003E                     ___awdiv@quotient:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x6
   488  00003E                     	ds	1
   489  00003F                     lcd_putc@c:
   490                           	opt stack 0
   491  00003F                     RtccWriteTime@tempMinSec:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x7
   495  00003F                     	ds	1
   496  000040                     RtccWriteDate@wasWrEn:
   497                           	opt stack 0
   498  000040                     lcd_putrs@ptr:
   499                           	opt stack 0
   500                           
   501                           ; 3 bytes @ 0x8
   502  000040                     	ds	1
   503  000041                     RtccWriteDate@tempDayMonth:
   504                           	opt stack 0
   505  000041                     RtccWriteTime@tempHourWDay:
   506                           	opt stack 0
   507                           
   508                           ; 2 bytes @ 0x9
   509  000041                     	ds	2
   510  000043                     RtccWriteDate@tempHourWDay:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0xB
   514  000043                     	ds	2
   515  000045                     ??_main:
   516                           
   517                           ; 1 bytes @ 0xD
   518  000045                     	ds	3
   519  000048                     main@boton_centro_estado:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x10
   523  000048                     	ds	2
   524  00004A                     main@boton_seleccionar:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x12
   528  00004A                     	ds	2
   529                           tblptru	equ	0xFF8
   530                           tblptrh	equ	0xFF7
   531                           tblptrl	equ	0xFF6
   532                           tablat	equ	0xFF5
   533                           postinc0	equ	0xFEE
   534                           wreg	equ	0xFE8
   535                           postdec1	equ	0xFE5
   536                           fsr1l	equ	0xFE1
   537                           
   538 ;;
   539 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   540 ;;
   541 ;; *************** function _main *****************
   542 ;; Defined at:
   543 ;;		line 46 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  boton_selecc    2   18[COMRAM] int 
   548 ;;  boton_centro    2   16[COMRAM] int 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  2  139[None  ] int 
   551 ;; Registers used:
   552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   559 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   560 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   561 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   562 ;;Total ram usage:        7 bytes
   563 ;; Hardware stack levels required when called:    5
   564 ;; This function calls:
   565 ;;		_Setup
   566 ;;		_Write_RTC
   567 ;;		_lcd_gotoxy
   568 ;;		_lcd_putrs
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text0
   575  000F46                     __ptext0:
   576                           	opt stack 0
   577  000F46                     _main:
   578                           	opt stack 26
   579                           
   580                           ;main.c: 47: Setup();
   581                           
   582                           ;incstack = 0
   583  000F46  ECC3  F00E         	call	_Setup	;wreg free
   584                           
   585                           ;main.c: 54: int boton_centro_estado = 0;
   586  000F4A  0E00               	movlw	0
   587  000F4C  6E49               	movwf	main@boton_centro_estado+1,c
   588  000F4E  0E00               	movlw	0
   589  000F50  6E48               	movwf	main@boton_centro_estado,c
   590                           
   591                           ;main.c: 66: int boton_seleccionar = 0;
   592  000F52  0E00               	movlw	0
   593  000F54  6E4B               	movwf	main@boton_seleccionar+1,c
   594  000F56  0E00               	movlw	0
   595  000F58  6E4A               	movwf	main@boton_seleccionar,c
   596  000F5A                     
   597                           ;main.c: 70: if (PORTAbits.RA5 == 0 && boton_centro_estado == 0) {
   598  000F5A  BA80               	btfsc	3968,5,c	;volatile
   599  000F5C  D020               	goto	l141
   600  000F5E  5048               	movf	main@boton_centro_estado,w,c
   601  000F60  1049               	iorwf	main@boton_centro_estado+1,w,c
   602  000F62  A4D8               	btfss	status,2,c
   603  000F64  D01C               	goto	l141
   604                           
   605                           ;main.c: 71: boton_centro_estado = 1;
   606  000F66  0E00               	movlw	0
   607  000F68  6E49               	movwf	main@boton_centro_estado+1,c
   608  000F6A  0E01               	movlw	1
   609  000F6C  6E48               	movwf	main@boton_centro_estado,c
   610                           
   611                           ;main.c: 72: lcd_gotoxy(14, 2);
   612  000F6E  0E02               	movlw	2
   613  000F70  6E3C               	movwf	lcd_gotoxy@y,c
   614  000F72  0E0E               	movlw	14
   615  000F74  ECF6  F00E         	call	_lcd_gotoxy
   616                           
   617                           ;main.c: 73: lcd_putrs("1");
   618  000F78  0E41               	movlw	low STR_1
   619  000F7A  6E40               	movwf	lcd_putrs@ptr,c
   620  000F7C  0E0F               	movlw	high STR_1
   621  000F7E  6E41               	movwf	lcd_putrs@ptr+1,c
   622  000F80  5040               	movf	lcd_putrs@ptr,w,c
   623  000F82  1041               	iorwf	lcd_putrs@ptr+1,w,c
   624  000F84  A4D8               	btfss	status,2,c
   625  000F86  0E00               	movlw	low (__mediumconst shr (0+16))
   626  000F88  6E42               	movwf	lcd_putrs@ptr+2,c
   627  000F8A  ECA6  F00E         	call	_lcd_putrs	;wreg free
   628                           
   629                           ;main.c: 74: _delay((unsigned long)((98)*(8000000/4000.0)));
   630  000F8E  0EFF               	movlw	255
   631  000F90  6E45               	movwf	??_main& (0+255),c
   632  000F92  0E8A               	movlw	138
   633  000F94                     u1877:
   634  000F94  2EE8               	decfsz	wreg,f,c
   635  000F96  D7FE               	bra	u1877
   636  000F98  2E45               	decfsz	??_main& (0+255),f,c
   637  000F9A  D7FC               	bra	u1877
   638  000F9C  D000               	nop2	
   639  000F9E                     l141:
   640                           
   641                           ;main.c: 75: }
   642                           ;main.c: 77: if (PORTAbits.RA5 == 0 && boton_centro_estado == 1) {
   643  000F9E  BA80               	btfsc	3968,5,c	;volatile
   644  000FA0  D020               	goto	l142
   645  000FA2  0448               	decf	main@boton_centro_estado,w,c
   646  000FA4  1049               	iorwf	main@boton_centro_estado+1,w,c
   647  000FA6  A4D8               	btfss	status,2,c
   648  000FA8  D01C               	goto	l142
   649                           
   650                           ;main.c: 78: boton_centro_estado = 0;
   651  000FAA  0E00               	movlw	0
   652  000FAC  6E49               	movwf	main@boton_centro_estado+1,c
   653  000FAE  0E00               	movlw	0
   654  000FB0  6E48               	movwf	main@boton_centro_estado,c
   655                           
   656                           ;main.c: 79: lcd_gotoxy(14, 2);
   657  000FB2  0E02               	movlw	2
   658  000FB4  6E3C               	movwf	lcd_gotoxy@y,c
   659  000FB6  0E0E               	movlw	14
   660  000FB8  ECF6  F00E         	call	_lcd_gotoxy
   661                           
   662                           ;main.c: 80: lcd_putrs("0");
   663  000FBC  0E3F               	movlw	low STR_2
   664  000FBE  6E40               	movwf	lcd_putrs@ptr,c
   665  000FC0  0E0F               	movlw	high STR_2
   666  000FC2  6E41               	movwf	lcd_putrs@ptr+1,c
   667  000FC4  5040               	movf	lcd_putrs@ptr,w,c
   668  000FC6  1041               	iorwf	lcd_putrs@ptr+1,w,c
   669  000FC8  A4D8               	btfss	status,2,c
   670  000FCA  0E00               	movlw	low (__mediumconst shr (0+16))
   671  000FCC  6E42               	movwf	lcd_putrs@ptr+2,c
   672  000FCE  ECA6  F00E         	call	_lcd_putrs	;wreg free
   673                           
   674                           ;main.c: 81: _delay((unsigned long)((98)*(8000000/4000.0)));
   675  000FD2  0EFF               	movlw	255
   676  000FD4  6E45               	movwf	??_main& (0+255),c
   677  000FD6  0E8A               	movlw	138
   678  000FD8                     u1887:
   679  000FD8  2EE8               	decfsz	wreg,f,c
   680  000FDA  D7FE               	bra	u1887
   681  000FDC  2E45               	decfsz	??_main& (0+255),f,c
   682  000FDE  D7FC               	bra	u1887
   683  000FE0  D000               	nop2	
   684  000FE2                     l142:
   685                           
   686                           ;main.c: 82: }
   687                           ;main.c: 84: if (boton_centro_estado == 1) {
   688  000FE2  0448               	decf	main@boton_centro_estado,w,c
   689  000FE4  1049               	iorwf	main@boton_centro_estado+1,w,c
   690  000FE6  A4D8               	btfss	status,2,c
   691  000FE8  D3EB               	goto	l205
   692                           
   693                           ;main.c: 86: if (PORTAbits.RA2 == 0) {
   694  000FEA  B480               	btfsc	3968,2,c	;volatile
   695  000FEC  D01C               	goto	l146
   696                           
   697                           ;main.c: 87: if (boton_seleccionar == 2) {
   698  000FEE  0E02               	movlw	2
   699  000FF0  184A               	xorwf	main@boton_seleccionar,w,c
   700  000FF2  104B               	iorwf	main@boton_seleccionar+1,w,c
   701  000FF4  A4D8               	btfss	status,2,c
   702  000FF6  D015               	goto	l145
   703                           
   704                           ;main.c: 88: boton_seleccionar = 0;
   705  000FF8  0E00               	movlw	0
   706  000FFA  6E4B               	movwf	main@boton_seleccionar+1,c
   707  000FFC  0E00               	movlw	0
   708  000FFE  6E4A               	movwf	main@boton_seleccionar,c
   709                           
   710                           ;main.c: 89: lcd_gotoxy(15, 2);
   711  001000  0E02               	movlw	2
   712  001002  6E3C               	movwf	lcd_gotoxy@y,c
   713  001004  0E0F               	movlw	15
   714  001006  ECF6  F00E         	call	_lcd_gotoxy
   715                           
   716                           ;main.c: 90: lcd_putrs("0");
   717  00100A  0E3F               	movlw	low STR_2
   718  00100C  6E40               	movwf	lcd_putrs@ptr,c
   719  00100E  0E0F               	movlw	high STR_2
   720  001010  6E41               	movwf	lcd_putrs@ptr+1,c
   721  001012  5040               	movf	lcd_putrs@ptr,w,c
   722  001014  1041               	iorwf	lcd_putrs@ptr+1,w,c
   723  001016  A4D8               	btfss	status,2,c
   724  001018  0E00               	movlw	low (__mediumconst shr (0+16))
   725  00101A  6E42               	movwf	lcd_putrs@ptr+2,c
   726  00101C  ECA6  F00E         	call	_lcd_putrs	;wreg free
   727                           
   728                           ;main.c: 91: } else {
   729  001020  D002               	goto	l146
   730  001022                     l145:
   731                           
   732                           ;main.c: 92: boton_seleccionar++;
   733  001022  4A4A               	infsnz	main@boton_seleccionar,f,c
   734  001024  2A4B               	incf	main@boton_seleccionar+1,f,c
   735  001026                     l146:
   736                           
   737                           ;main.c: 93: }
   738                           ;main.c: 94: }
   739                           ;main.c: 96: if (PORTAbits.RA7 == 0) {
   740  001026  BE80               	btfsc	3968,7,c	;volatile
   741  001028  D00C               	goto	l149
   742                           
   743                           ;main.c: 97: if (boton_seleccionar == 0) {
   744  00102A  504A               	movf	main@boton_seleccionar,w,c
   745  00102C  104B               	iorwf	main@boton_seleccionar+1,w,c
   746  00102E  A4D8               	btfss	status,2,c
   747  001030  D005               	goto	l148
   748                           
   749                           ;main.c: 98: boton_seleccionar = 2;
   750  001032  0E00               	movlw	0
   751  001034  6E4B               	movwf	main@boton_seleccionar+1,c
   752  001036  0E02               	movlw	2
   753  001038  6E4A               	movwf	main@boton_seleccionar,c
   754                           
   755                           ;main.c: 99: } else {
   756  00103A  D003               	goto	l149
   757  00103C                     l148:
   758                           
   759                           ;main.c: 100: boton_seleccionar--;
   760  00103C  064A               	decf	main@boton_seleccionar,f,c
   761  00103E  A0D8               	btfss	status,0,c
   762  001040  064B               	decf	main@boton_seleccionar+1,f,c
   763  001042                     l149:
   764                           
   765                           ;main.c: 101: }
   766                           ;main.c: 102: }
   767                           ;main.c: 105: if (boton_seleccionar == 0) {
   768  001042  504A               	movf	main@boton_seleccionar,w,c
   769  001044  104B               	iorwf	main@boton_seleccionar+1,w,c
   770  001046  A4D8               	btfss	status,2,c
   771  001048  D0EC               	goto	l169
   772                           
   773                           ;main.c: 107: if (PORTAbits.RA3 == 0) {
   774  00104A  B680               	btfsc	3968,3,c	;volatile
   775  00104C  D010               	goto	l153
   776                           
   777                           ;main.c: 108: if (diasem == 6) {
   778  00104E  0E06               	movlw	6
   779  001050  1852               	xorwf	_diasem,w,c
   780  001052  1053               	iorwf	_diasem+1,w,c
   781  001054  A4D8               	btfss	status,2,c
   782  001056  D007               	goto	l152
   783                           
   784                           ;main.c: 109: diasem = 0;
   785  001058  0E00               	movlw	0
   786  00105A  6E53               	movwf	_diasem+1,c
   787  00105C  0E00               	movlw	0
   788  00105E  6E52               	movwf	_diasem,c
   789                           
   790                           ;main.c: 110: Write_RTC();
   791  001060  ECEA  F00B         	call	_Write_RTC	;wreg free
   792                           
   793                           ;main.c: 111: } else {
   794  001064  D004               	goto	l153
   795  001066                     l152:
   796                           
   797                           ;main.c: 112: diasem++;
   798  001066  4A52               	infsnz	_diasem,f,c
   799  001068  2A53               	incf	_diasem+1,f,c
   800                           
   801                           ;main.c: 113: Write_RTC();
   802  00106A  ECEA  F00B         	call	_Write_RTC	;wreg free
   803  00106E                     l153:
   804                           
   805                           ;main.c: 114: }
   806                           ;main.c: 115: }
   807                           ;main.c: 117: if (PORTAbits.RA6 == 0) {
   808  00106E  BC80               	btfsc	3968,6,c	;volatile
   809  001070  D010               	goto	l156
   810                           
   811                           ;main.c: 118: if (diasem == 0) {
   812  001072  5052               	movf	_diasem,w,c
   813  001074  1053               	iorwf	_diasem+1,w,c
   814  001076  A4D8               	btfss	status,2,c
   815  001078  D007               	goto	l155
   816                           
   817                           ;main.c: 119: diasem = 6;
   818  00107A  0E00               	movlw	0
   819  00107C  6E53               	movwf	_diasem+1,c
   820  00107E  0E06               	movlw	6
   821  001080  6E52               	movwf	_diasem,c
   822                           
   823                           ;main.c: 120: Write_RTC();
   824  001082  ECEA  F00B         	call	_Write_RTC	;wreg free
   825                           
   826                           ;main.c: 121: } else {
   827  001086  D005               	goto	l156
   828  001088                     l155:
   829                           
   830                           ;main.c: 122: diasem--;
   831  001088  0652               	decf	_diasem,f,c
   832  00108A  A0D8               	btfss	status,0,c
   833  00108C  0653               	decf	_diasem+1,f,c
   834                           
   835                           ;main.c: 123: Write_RTC();
   836  00108E  ECEA  F00B         	call	_Write_RTC	;wreg free
   837  001092                     l156:
   838                           
   839                           ;main.c: 124: }
   840                           ;main.c: 125: }
   841                           ;main.c: 127: if (diasem == 0) {
   842  001092  5052               	movf	_diasem,w,c
   843  001094  1053               	iorwf	_diasem+1,w,c
   844  001096  A4D8               	btfss	status,2,c
   845  001098  D018               	goto	l157
   846                           
   847                           ;main.c: 128: lcd_gotoxy(1, 1);
   848  00109A  0E01               	movlw	1
   849  00109C  6E3C               	movwf	lcd_gotoxy@y,c
   850  00109E  0E01               	movlw	1
   851  0010A0  ECF6  F00E         	call	_lcd_gotoxy
   852                           
   853                           ;main.c: 129: lcd_putrs("Domingo");
   854  0010A4  0E2D               	movlw	low STR_4
   855  0010A6  6E40               	movwf	lcd_putrs@ptr,c
   856  0010A8  0E0F               	movlw	high STR_4
   857  0010AA  6E41               	movwf	lcd_putrs@ptr+1,c
   858  0010AC  5040               	movf	lcd_putrs@ptr,w,c
   859  0010AE  1041               	iorwf	lcd_putrs@ptr+1,w,c
   860  0010B0  A4D8               	btfss	status,2,c
   861  0010B2  0E00               	movlw	low (__mediumconst shr (0+16))
   862  0010B4  6E42               	movwf	lcd_putrs@ptr+2,c
   863  0010B6  ECA6  F00E         	call	_lcd_putrs	;wreg free
   864                           
   865                           ;main.c: 130: _delay((unsigned long)((50)*(8000000/4000.0)));
   866  0010BA  0E82               	movlw	130
   867  0010BC  6E45               	movwf	??_main& (0+255),c
   868  0010BE  0EDE               	movlw	222
   869  0010C0                     u1897:
   870  0010C0  2EE8               	decfsz	wreg,f,c
   871  0010C2  D7FE               	bra	u1897
   872  0010C4  2E45               	decfsz	??_main& (0+255),f,c
   873  0010C6  D7FC               	bra	u1897
   874                           
   875                           ;main.c: 131: } else if (diasem == 1) {
   876  0010C8  D0AC               	goto	l169
   877  0010CA                     l157:
   878  0010CA  0452               	decf	_diasem,w,c
   879  0010CC  1053               	iorwf	_diasem+1,w,c
   880  0010CE  A4D8               	btfss	status,2,c
   881  0010D0  D018               	goto	l159
   882                           
   883                           ;main.c: 132: lcd_gotoxy(1, 1);
   884  0010D2  0E01               	movlw	1
   885  0010D4  6E3C               	movwf	lcd_gotoxy@y,c
   886  0010D6  0E01               	movlw	1
   887  0010D8  ECF6  F00E         	call	_lcd_gotoxy
   888                           
   889                           ;main.c: 133: lcd_putrs("Lunes  ");
   890  0010DC  0E05               	movlw	low STR_5
   891  0010DE  6E40               	movwf	lcd_putrs@ptr,c
   892  0010E0  0E0F               	movlw	high STR_5
   893  0010E2  6E41               	movwf	lcd_putrs@ptr+1,c
   894  0010E4  5040               	movf	lcd_putrs@ptr,w,c
   895  0010E6  1041               	iorwf	lcd_putrs@ptr+1,w,c
   896  0010E8  A4D8               	btfss	status,2,c
   897  0010EA  0E00               	movlw	low (__mediumconst shr (0+16))
   898  0010EC  6E42               	movwf	lcd_putrs@ptr+2,c
   899  0010EE  ECA6  F00E         	call	_lcd_putrs	;wreg free
   900                           
   901                           ;main.c: 134: _delay((unsigned long)((50)*(8000000/4000.0)));
   902  0010F2  0E82               	movlw	130
   903  0010F4  6E45               	movwf	??_main& (0+255),c
   904  0010F6  0EDE               	movlw	222
   905  0010F8                     u1907:
   906  0010F8  2EE8               	decfsz	wreg,f,c
   907  0010FA  D7FE               	bra	u1907
   908  0010FC  2E45               	decfsz	??_main& (0+255),f,c
   909  0010FE  D7FC               	bra	u1907
   910                           
   911                           ;main.c: 135: } else if (diasem == 2) {
   912  001100  D090               	goto	l169
   913  001102                     l159:
   914  001102  0E02               	movlw	2
   915  001104  1852               	xorwf	_diasem,w,c
   916  001106  1053               	iorwf	_diasem+1,w,c
   917  001108  A4D8               	btfss	status,2,c
   918  00110A  D018               	goto	l161
   919                           
   920                           ;main.c: 136: lcd_gotoxy(1, 1);
   921  00110C  0E01               	movlw	1
   922  00110E  6E3C               	movwf	lcd_gotoxy@y,c
   923  001110  0E01               	movlw	1
   924  001112  ECF6  F00E         	call	_lcd_gotoxy
   925                           
   926                           ;main.c: 137: lcd_putrs("Martes ");
   927  001116  0E15               	movlw	low STR_6
   928  001118  6E40               	movwf	lcd_putrs@ptr,c
   929  00111A  0E0F               	movlw	high STR_6
   930  00111C  6E41               	movwf	lcd_putrs@ptr+1,c
   931  00111E  5040               	movf	lcd_putrs@ptr,w,c
   932  001120  1041               	iorwf	lcd_putrs@ptr+1,w,c
   933  001122  A4D8               	btfss	status,2,c
   934  001124  0E00               	movlw	low (__mediumconst shr (0+16))
   935  001126  6E42               	movwf	lcd_putrs@ptr+2,c
   936  001128  ECA6  F00E         	call	_lcd_putrs	;wreg free
   937                           
   938                           ;main.c: 138: _delay((unsigned long)((50)*(8000000/4000.0)));
   939  00112C  0E82               	movlw	130
   940  00112E  6E45               	movwf	??_main& (0+255),c
   941  001130  0EDE               	movlw	222
   942  001132                     u1917:
   943  001132  2EE8               	decfsz	wreg,f,c
   944  001134  D7FE               	bra	u1917
   945  001136  2E45               	decfsz	??_main& (0+255),f,c
   946  001138  D7FC               	bra	u1917
   947                           
   948                           ;main.c: 139: } else if (diasem == 3) {
   949  00113A  D073               	goto	l169
   950  00113C                     l161:
   951  00113C  0E03               	movlw	3
   952  00113E  1852               	xorwf	_diasem,w,c
   953  001140  1053               	iorwf	_diasem+1,w,c
   954  001142  A4D8               	btfss	status,2,c
   955  001144  D018               	goto	l163
   956                           
   957                           ;main.c: 140: lcd_gotoxy(1, 1);
   958  001146  0E01               	movlw	1
   959  001148  6E3C               	movwf	lcd_gotoxy@y,c
   960  00114A  0E01               	movlw	1
   961  00114C  ECF6  F00E         	call	_lcd_gotoxy
   962                           
   963                           ;main.c: 141: lcd_putrs("Miercol");
   964  001150  0E25               	movlw	low STR_7
   965  001152  6E40               	movwf	lcd_putrs@ptr,c
   966  001154  0E0F               	movlw	high STR_7
   967  001156  6E41               	movwf	lcd_putrs@ptr+1,c
   968  001158  5040               	movf	lcd_putrs@ptr,w,c
   969  00115A  1041               	iorwf	lcd_putrs@ptr+1,w,c
   970  00115C  A4D8               	btfss	status,2,c
   971  00115E  0E00               	movlw	low (__mediumconst shr (0+16))
   972  001160  6E42               	movwf	lcd_putrs@ptr+2,c
   973  001162  ECA6  F00E         	call	_lcd_putrs	;wreg free
   974                           
   975                           ;main.c: 142: _delay((unsigned long)((50)*(8000000/4000.0)));
   976  001166  0E82               	movlw	130
   977  001168  6E45               	movwf	??_main& (0+255),c
   978  00116A  0EDE               	movlw	222
   979  00116C                     u1927:
   980  00116C  2EE8               	decfsz	wreg,f,c
   981  00116E  D7FE               	bra	u1927
   982  001170  2E45               	decfsz	??_main& (0+255),f,c
   983  001172  D7FC               	bra	u1927
   984                           
   985                           ;main.c: 143: } else if (diasem == 4) {
   986  001174  D056               	goto	l169
   987  001176                     l163:
   988  001176  0E04               	movlw	4
   989  001178  1852               	xorwf	_diasem,w,c
   990  00117A  1053               	iorwf	_diasem+1,w,c
   991  00117C  A4D8               	btfss	status,2,c
   992  00117E  D018               	goto	l165
   993                           
   994                           ;main.c: 144: lcd_gotoxy(1, 1);
   995  001180  0E01               	movlw	1
   996  001182  6E3C               	movwf	lcd_gotoxy@y,c
   997  001184  0E01               	movlw	1
   998  001186  ECF6  F00E         	call	_lcd_gotoxy
   999                           
  1000                           ;main.c: 145: lcd_putrs("Jueves ");
  1001  00118A  0E1D               	movlw	low STR_8
  1002  00118C  6E40               	movwf	lcd_putrs@ptr,c
  1003  00118E  0E0F               	movlw	high STR_8
  1004  001190  6E41               	movwf	lcd_putrs@ptr+1,c
  1005  001192  5040               	movf	lcd_putrs@ptr,w,c
  1006  001194  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1007  001196  A4D8               	btfss	status,2,c
  1008  001198  0E00               	movlw	low (__mediumconst shr (0+16))
  1009  00119A  6E42               	movwf	lcd_putrs@ptr+2,c
  1010  00119C  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1011                           
  1012                           ;main.c: 146: _delay((unsigned long)((50)*(8000000/4000.0)));
  1013  0011A0  0E82               	movlw	130
  1014  0011A2  6E45               	movwf	??_main& (0+255),c
  1015  0011A4  0EDE               	movlw	222
  1016  0011A6                     u1937:
  1017  0011A6  2EE8               	decfsz	wreg,f,c
  1018  0011A8  D7FE               	bra	u1937
  1019  0011AA  2E45               	decfsz	??_main& (0+255),f,c
  1020  0011AC  D7FC               	bra	u1937
  1021                           
  1022                           ;main.c: 147: } else if (diasem == 5) {
  1023  0011AE  D039               	goto	l169
  1024  0011B0                     l165:
  1025  0011B0  0E05               	movlw	5
  1026  0011B2  1852               	xorwf	_diasem,w,c
  1027  0011B4  1053               	iorwf	_diasem+1,w,c
  1028  0011B6  A4D8               	btfss	status,2,c
  1029  0011B8  D018               	goto	l167
  1030                           
  1031                           ;main.c: 148: lcd_gotoxy(1, 1);
  1032  0011BA  0E01               	movlw	1
  1033  0011BC  6E3C               	movwf	lcd_gotoxy@y,c
  1034  0011BE  0E01               	movlw	1
  1035  0011C0  ECF6  F00E         	call	_lcd_gotoxy
  1036                           
  1037                           ;main.c: 149: lcd_putrs("Viernes");
  1038  0011C4  0E35               	movlw	low STR_9
  1039  0011C6  6E40               	movwf	lcd_putrs@ptr,c
  1040  0011C8  0E0F               	movlw	high STR_9
  1041  0011CA  6E41               	movwf	lcd_putrs@ptr+1,c
  1042  0011CC  5040               	movf	lcd_putrs@ptr,w,c
  1043  0011CE  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1044  0011D0  A4D8               	btfss	status,2,c
  1045  0011D2  0E00               	movlw	low (__mediumconst shr (0+16))
  1046  0011D4  6E42               	movwf	lcd_putrs@ptr+2,c
  1047  0011D6  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1048                           
  1049                           ;main.c: 150: _delay((unsigned long)((50)*(8000000/4000.0)));
  1050  0011DA  0E82               	movlw	130
  1051  0011DC  6E45               	movwf	??_main& (0+255),c
  1052  0011DE  0EDE               	movlw	222
  1053  0011E0                     u1947:
  1054  0011E0  2EE8               	decfsz	wreg,f,c
  1055  0011E2  D7FE               	bra	u1947
  1056  0011E4  2E45               	decfsz	??_main& (0+255),f,c
  1057  0011E6  D7FC               	bra	u1947
  1058                           
  1059                           ;main.c: 151: } else if (diasem == 6) {
  1060  0011E8  D01C               	goto	l169
  1061  0011EA                     l167:
  1062  0011EA  0E06               	movlw	6
  1063  0011EC  1852               	xorwf	_diasem,w,c
  1064  0011EE  1053               	iorwf	_diasem+1,w,c
  1065  0011F0  A4D8               	btfss	status,2,c
  1066  0011F2  D017               	goto	l169
  1067                           
  1068                           ;main.c: 152: lcd_gotoxy(1, 1);
  1069  0011F4  0E01               	movlw	1
  1070  0011F6  6E3C               	movwf	lcd_gotoxy@y,c
  1071  0011F8  0E01               	movlw	1
  1072  0011FA  ECF6  F00E         	call	_lcd_gotoxy
  1073                           
  1074                           ;main.c: 153: lcd_putrs("Sabado ");
  1075  0011FE  0E0D               	movlw	low STR_10
  1076  001200  6E40               	movwf	lcd_putrs@ptr,c
  1077  001202  0E0F               	movlw	high STR_10
  1078  001204  6E41               	movwf	lcd_putrs@ptr+1,c
  1079  001206  5040               	movf	lcd_putrs@ptr,w,c
  1080  001208  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1081  00120A  A4D8               	btfss	status,2,c
  1082  00120C  0E00               	movlw	low (__mediumconst shr (0+16))
  1083  00120E  6E42               	movwf	lcd_putrs@ptr+2,c
  1084  001210  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1085                           
  1086                           ;main.c: 154: _delay((unsigned long)((50)*(8000000/4000.0)));
  1087  001214  0E82               	movlw	130
  1088  001216  6E45               	movwf	??_main& (0+255),c
  1089  001218  0EDE               	movlw	222
  1090  00121A                     u1957:
  1091  00121A  2EE8               	decfsz	wreg,f,c
  1092  00121C  D7FE               	bra	u1957
  1093  00121E  2E45               	decfsz	??_main& (0+255),f,c
  1094  001220  D7FC               	bra	u1957
  1095  001222                     l169:
  1096                           
  1097                           ;main.c: 155: }
  1098                           ;main.c: 156: }
  1099                           ;main.c: 159: if (boton_seleccionar == 1) {
  1100  001222  044A               	decf	main@boton_seleccionar,w,c
  1101  001224  104B               	iorwf	main@boton_seleccionar+1,w,c
  1102  001226  A4D8               	btfss	status,2,c
  1103  001228  D073               	goto	l170
  1104                           
  1105                           ;main.c: 161: if (PORTAbits.RA3 == 0) {
  1106  00122A  B680               	btfsc	3968,3,c	;volatile
  1107  00122C  D010               	goto	l173
  1108                           
  1109                           ;main.c: 162: if (dia == 30) {
  1110  00122E  0E1E               	movlw	30
  1111  001230  1850               	xorwf	_dia,w,c
  1112  001232  1051               	iorwf	_dia+1,w,c
  1113  001234  A4D8               	btfss	status,2,c
  1114  001236  D007               	goto	l172
  1115                           
  1116                           ;main.c: 163: dia = 0;
  1117  001238  0E00               	movlw	0
  1118  00123A  6E51               	movwf	_dia+1,c
  1119  00123C  0E00               	movlw	0
  1120  00123E  6E50               	movwf	_dia,c
  1121                           
  1122                           ;main.c: 164: Write_RTC();
  1123  001240  ECEA  F00B         	call	_Write_RTC	;wreg free
  1124                           
  1125                           ;main.c: 165: } else {
  1126  001244  D004               	goto	l173
  1127  001246                     l172:
  1128                           
  1129                           ;main.c: 166: dia++;
  1130  001246  4A50               	infsnz	_dia,f,c
  1131  001248  2A51               	incf	_dia+1,f,c
  1132                           
  1133                           ;main.c: 167: Write_RTC();
  1134  00124A  ECEA  F00B         	call	_Write_RTC	;wreg free
  1135  00124E                     l173:
  1136                           
  1137                           ;main.c: 168: }
  1138                           ;main.c: 169: }
  1139                           ;main.c: 171: if (PORTAbits.RA6 == 0) {
  1140  00124E  BC80               	btfsc	3968,6,c	;volatile
  1141  001250  D010               	goto	l176
  1142                           
  1143                           ;main.c: 172: if (dia == 0) {
  1144  001252  5050               	movf	_dia,w,c
  1145  001254  1051               	iorwf	_dia+1,w,c
  1146  001256  A4D8               	btfss	status,2,c
  1147  001258  D007               	goto	l175
  1148                           
  1149                           ;main.c: 173: dia = 30;
  1150  00125A  0E00               	movlw	0
  1151  00125C  6E51               	movwf	_dia+1,c
  1152  00125E  0E1E               	movlw	30
  1153  001260  6E50               	movwf	_dia,c
  1154                           
  1155                           ;main.c: 174: Write_RTC();
  1156  001262  ECEA  F00B         	call	_Write_RTC	;wreg free
  1157                           
  1158                           ;main.c: 175: } else {
  1159  001266  D005               	goto	l176
  1160  001268                     l175:
  1161                           
  1162                           ;main.c: 176: dia--;
  1163  001268  0650               	decf	_dia,f,c
  1164  00126A  A0D8               	btfss	status,0,c
  1165  00126C  0651               	decf	_dia+1,f,c
  1166                           
  1167                           ;main.c: 177: Write_RTC();
  1168  00126E  ECEA  F00B         	call	_Write_RTC	;wreg free
  1169  001272                     l176:
  1170                           
  1171                           ;main.c: 178: }
  1172                           ;main.c: 179: }
  1173                           ;main.c: 182: lcd_gotoxy(9, 1);
  1174  001272  0E01               	movlw	1
  1175  001274  6E3C               	movwf	lcd_gotoxy@y,c
  1176  001276  0E09               	movlw	9
  1177  001278  ECF6  F00E         	call	_lcd_gotoxy
  1178                           
  1179                           ;main.c: 184: lcd_putrs(dia);
  1180  00127C  C050  F045         	movff	_dia,??_main
  1181  001280  C051  F046         	movff	_dia+1,??_main+1
  1182  001284  6A47               	clrf	(??_main+2)& (0+255),c
  1183  001286  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1184  001288  6847               	setf	(??_main+2)& (0+255),c
  1185  00128A  C045  F040         	movff	??_main,lcd_putrs@ptr
  1186  00128E  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1187  001292  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1188  001296  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1189                           
  1190                           ;main.c: 185: lcd_putrs("/");
  1191  00129A  0E3D               	movlw	low STR_11
  1192  00129C  6E40               	movwf	lcd_putrs@ptr,c
  1193  00129E  0E0F               	movlw	high STR_11
  1194  0012A0  6E41               	movwf	lcd_putrs@ptr+1,c
  1195  0012A2  5040               	movf	lcd_putrs@ptr,w,c
  1196  0012A4  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1197  0012A6  A4D8               	btfss	status,2,c
  1198  0012A8  0E00               	movlw	low (__mediumconst shr (0+16))
  1199  0012AA  6E42               	movwf	lcd_putrs@ptr+2,c
  1200  0012AC  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1201                           
  1202                           ;main.c: 186: lcd_putrs(mes);
  1203  0012B0  C054  F045         	movff	_mes,??_main
  1204  0012B4  C055  F046         	movff	_mes+1,??_main+1
  1205  0012B8  6A47               	clrf	(??_main+2)& (0+255),c
  1206  0012BA  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1207  0012BC  6847               	setf	(??_main+2)& (0+255),c
  1208  0012BE  C045  F040         	movff	??_main,lcd_putrs@ptr
  1209  0012C2  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1210  0012C6  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1211  0012CA  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1212                           
  1213                           ;main.c: 187: lcd_putrs("/");
  1214  0012CE  0E3D               	movlw	low STR_11
  1215  0012D0  6E40               	movwf	lcd_putrs@ptr,c
  1216  0012D2  0E0F               	movlw	high STR_11
  1217  0012D4  6E41               	movwf	lcd_putrs@ptr+1,c
  1218  0012D6  5040               	movf	lcd_putrs@ptr,w,c
  1219  0012D8  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1220  0012DA  A4D8               	btfss	status,2,c
  1221  0012DC  0E00               	movlw	low (__mediumconst shr (0+16))
  1222  0012DE  6E42               	movwf	lcd_putrs@ptr+2,c
  1223  0012E0  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1224                           
  1225                           ;main.c: 188: lcd_putrs(anio);
  1226  0012E4  C056  F045         	movff	_anio,??_main
  1227  0012E8  C057  F046         	movff	_anio+1,??_main+1
  1228  0012EC  6A47               	clrf	(??_main+2)& (0+255),c
  1229  0012EE  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1230  0012F0  6847               	setf	(??_main+2)& (0+255),c
  1231  0012F2  C045  F040         	movff	??_main,lcd_putrs@ptr
  1232  0012F6  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1233  0012FA  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1234  0012FE  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1235                           
  1236                           ;main.c: 190: _delay((unsigned long)((50)*(8000000/4000.0)));
  1237  001302  0E82               	movlw	130
  1238  001304  6E45               	movwf	??_main& (0+255),c
  1239  001306  0EDE               	movlw	222
  1240  001308                     u1967:
  1241  001308  2EE8               	decfsz	wreg,f,c
  1242  00130A  D7FE               	bra	u1967
  1243  00130C  2E45               	decfsz	??_main& (0+255),f,c
  1244  00130E  D7FC               	bra	u1967
  1245  001310                     l170:
  1246                           
  1247                           ;main.c: 191: }
  1248                           ;main.c: 194: if (boton_seleccionar == 2) {
  1249  001310  0E02               	movlw	2
  1250  001312  184A               	xorwf	main@boton_seleccionar,w,c
  1251  001314  104B               	iorwf	main@boton_seleccionar+1,w,c
  1252  001316  A4D8               	btfss	status,2,c
  1253  001318  D073               	goto	l177
  1254                           
  1255                           ;main.c: 196: if (PORTAbits.RA3 == 0) {
  1256  00131A  B680               	btfsc	3968,3,c	;volatile
  1257  00131C  D010               	goto	l180
  1258                           
  1259                           ;main.c: 197: if (mes == 12) {
  1260  00131E  0E0C               	movlw	12
  1261  001320  1854               	xorwf	_mes,w,c
  1262  001322  1055               	iorwf	_mes+1,w,c
  1263  001324  A4D8               	btfss	status,2,c
  1264  001326  D007               	goto	l179
  1265                           
  1266                           ;main.c: 198: mes = 1;
  1267  001328  0E00               	movlw	0
  1268  00132A  6E55               	movwf	_mes+1,c
  1269  00132C  0E01               	movlw	1
  1270  00132E  6E54               	movwf	_mes,c
  1271                           
  1272                           ;main.c: 199: Write_RTC();
  1273  001330  ECEA  F00B         	call	_Write_RTC	;wreg free
  1274                           
  1275                           ;main.c: 200: } else {
  1276  001334  D004               	goto	l180
  1277  001336                     l179:
  1278                           
  1279                           ;main.c: 201: mes++;
  1280  001336  4A54               	infsnz	_mes,f,c
  1281  001338  2A55               	incf	_mes+1,f,c
  1282                           
  1283                           ;main.c: 202: Write_RTC();
  1284  00133A  ECEA  F00B         	call	_Write_RTC	;wreg free
  1285  00133E                     l180:
  1286                           
  1287                           ;main.c: 203: }
  1288                           ;main.c: 204: }
  1289                           ;main.c: 206: if (PORTAbits.RA6 == 0) {
  1290  00133E  BC80               	btfsc	3968,6,c	;volatile
  1291  001340  D010               	goto	l183
  1292                           
  1293                           ;main.c: 207: if (mes == 1) {
  1294  001342  0454               	decf	_mes,w,c
  1295  001344  1055               	iorwf	_mes+1,w,c
  1296  001346  A4D8               	btfss	status,2,c
  1297  001348  D007               	goto	l182
  1298                           
  1299                           ;main.c: 208: mes = 12;
  1300  00134A  0E00               	movlw	0
  1301  00134C  6E55               	movwf	_mes+1,c
  1302  00134E  0E0C               	movlw	12
  1303  001350  6E54               	movwf	_mes,c
  1304                           
  1305                           ;main.c: 209: Write_RTC();
  1306  001352  ECEA  F00B         	call	_Write_RTC	;wreg free
  1307                           
  1308                           ;main.c: 210: } else {
  1309  001356  D005               	goto	l183
  1310  001358                     l182:
  1311                           
  1312                           ;main.c: 211: mes--;
  1313  001358  0654               	decf	_mes,f,c
  1314  00135A  A0D8               	btfss	status,0,c
  1315  00135C  0655               	decf	_mes+1,f,c
  1316                           
  1317                           ;main.c: 212: Write_RTC();
  1318  00135E  ECEA  F00B         	call	_Write_RTC	;wreg free
  1319  001362                     l183:
  1320                           
  1321                           ;main.c: 213: }
  1322                           ;main.c: 214: }
  1323                           ;main.c: 216: lcd_gotoxy(9, 1);
  1324  001362  0E01               	movlw	1
  1325  001364  6E3C               	movwf	lcd_gotoxy@y,c
  1326  001366  0E09               	movlw	9
  1327  001368  ECF6  F00E         	call	_lcd_gotoxy
  1328                           
  1329                           ;main.c: 217: lcd_putrs(dia);
  1330  00136C  C050  F045         	movff	_dia,??_main
  1331  001370  C051  F046         	movff	_dia+1,??_main+1
  1332  001374  6A47               	clrf	(??_main+2)& (0+255),c
  1333  001376  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1334  001378  6847               	setf	(??_main+2)& (0+255),c
  1335  00137A  C045  F040         	movff	??_main,lcd_putrs@ptr
  1336  00137E  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1337  001382  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1338  001386  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1339                           
  1340                           ;main.c: 218: lcd_putrs("/");
  1341  00138A  0E3D               	movlw	low STR_11
  1342  00138C  6E40               	movwf	lcd_putrs@ptr,c
  1343  00138E  0E0F               	movlw	high STR_11
  1344  001390  6E41               	movwf	lcd_putrs@ptr+1,c
  1345  001392  5040               	movf	lcd_putrs@ptr,w,c
  1346  001394  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1347  001396  A4D8               	btfss	status,2,c
  1348  001398  0E00               	movlw	low (__mediumconst shr (0+16))
  1349  00139A  6E42               	movwf	lcd_putrs@ptr+2,c
  1350  00139C  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1351                           
  1352                           ;main.c: 219: lcd_putrs(mes);
  1353  0013A0  C054  F045         	movff	_mes,??_main
  1354  0013A4  C055  F046         	movff	_mes+1,??_main+1
  1355  0013A8  6A47               	clrf	(??_main+2)& (0+255),c
  1356  0013AA  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1357  0013AC  6847               	setf	(??_main+2)& (0+255),c
  1358  0013AE  C045  F040         	movff	??_main,lcd_putrs@ptr
  1359  0013B2  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1360  0013B6  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1361  0013BA  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1362                           
  1363                           ;main.c: 220: lcd_putrs("/");
  1364  0013BE  0E3D               	movlw	low STR_11
  1365  0013C0  6E40               	movwf	lcd_putrs@ptr,c
  1366  0013C2  0E0F               	movlw	high STR_11
  1367  0013C4  6E41               	movwf	lcd_putrs@ptr+1,c
  1368  0013C6  5040               	movf	lcd_putrs@ptr,w,c
  1369  0013C8  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1370  0013CA  A4D8               	btfss	status,2,c
  1371  0013CC  0E00               	movlw	low (__mediumconst shr (0+16))
  1372  0013CE  6E42               	movwf	lcd_putrs@ptr+2,c
  1373  0013D0  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1374                           
  1375                           ;main.c: 221: lcd_putrs(anio);
  1376  0013D4  C056  F045         	movff	_anio,??_main
  1377  0013D8  C057  F046         	movff	_anio+1,??_main+1
  1378  0013DC  6A47               	clrf	(??_main+2)& (0+255),c
  1379  0013DE  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1380  0013E0  6847               	setf	(??_main+2)& (0+255),c
  1381  0013E2  C045  F040         	movff	??_main,lcd_putrs@ptr
  1382  0013E6  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1383  0013EA  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1384  0013EE  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1385                           
  1386                           ;main.c: 223: _delay((unsigned long)((50)*(8000000/4000.0)));
  1387  0013F2  0E82               	movlw	130
  1388  0013F4  6E45               	movwf	??_main& (0+255),c
  1389  0013F6  0EDE               	movlw	222
  1390  0013F8                     u1977:
  1391  0013F8  2EE8               	decfsz	wreg,f,c
  1392  0013FA  D7FE               	bra	u1977
  1393  0013FC  2E45               	decfsz	??_main& (0+255),f,c
  1394  0013FE  D7FC               	bra	u1977
  1395  001400                     l177:
  1396                           
  1397                           ;main.c: 224: }
  1398                           ;main.c: 227: if (boton_seleccionar == 3) {
  1399  001400  0E03               	movlw	3
  1400  001402  184A               	xorwf	main@boton_seleccionar,w,c
  1401  001404  104B               	iorwf	main@boton_seleccionar+1,w,c
  1402  001406  A4D8               	btfss	status,2,c
  1403  001408  D073               	goto	l184
  1404                           
  1405                           ;main.c: 229: if (PORTAbits.RA3 == 0) {
  1406  00140A  B680               	btfsc	3968,3,c	;volatile
  1407  00140C  D010               	goto	l187
  1408                           
  1409                           ;main.c: 230: if (anio == 99) {
  1410  00140E  0E63               	movlw	99
  1411  001410  1856               	xorwf	_anio,w,c
  1412  001412  1057               	iorwf	_anio+1,w,c
  1413  001414  A4D8               	btfss	status,2,c
  1414  001416  D007               	goto	l186
  1415                           
  1416                           ;main.c: 231: anio = 0;
  1417  001418  0E00               	movlw	0
  1418  00141A  6E57               	movwf	_anio+1,c
  1419  00141C  0E00               	movlw	0
  1420  00141E  6E56               	movwf	_anio,c
  1421                           
  1422                           ;main.c: 232: Write_RTC();
  1423  001420  ECEA  F00B         	call	_Write_RTC	;wreg free
  1424                           
  1425                           ;main.c: 233: } else {
  1426  001424  D004               	goto	l187
  1427  001426                     l186:
  1428                           
  1429                           ;main.c: 234: anio++;
  1430  001426  4A56               	infsnz	_anio,f,c
  1431  001428  2A57               	incf	_anio+1,f,c
  1432                           
  1433                           ;main.c: 235: Write_RTC();
  1434  00142A  ECEA  F00B         	call	_Write_RTC	;wreg free
  1435  00142E                     l187:
  1436                           
  1437                           ;main.c: 236: }
  1438                           ;main.c: 237: }
  1439                           ;main.c: 239: if (PORTAbits.RA6 == 0) {
  1440  00142E  BC80               	btfsc	3968,6,c	;volatile
  1441  001430  D010               	goto	l190
  1442                           
  1443                           ;main.c: 240: if (anio == 0) {
  1444  001432  5056               	movf	_anio,w,c
  1445  001434  1057               	iorwf	_anio+1,w,c
  1446  001436  A4D8               	btfss	status,2,c
  1447  001438  D007               	goto	l189
  1448                           
  1449                           ;main.c: 241: anio = 99;
  1450  00143A  0E00               	movlw	0
  1451  00143C  6E57               	movwf	_anio+1,c
  1452  00143E  0E63               	movlw	99
  1453  001440  6E56               	movwf	_anio,c
  1454                           
  1455                           ;main.c: 242: Write_RTC();
  1456  001442  ECEA  F00B         	call	_Write_RTC	;wreg free
  1457                           
  1458                           ;main.c: 243: } else {
  1459  001446  D005               	goto	l190
  1460  001448                     l189:
  1461                           
  1462                           ;main.c: 244: anio--;
  1463  001448  0656               	decf	_anio,f,c
  1464  00144A  A0D8               	btfss	status,0,c
  1465  00144C  0657               	decf	_anio+1,f,c
  1466                           
  1467                           ;main.c: 245: Write_RTC();
  1468  00144E  ECEA  F00B         	call	_Write_RTC	;wreg free
  1469  001452                     l190:
  1470                           
  1471                           ;main.c: 246: }
  1472                           ;main.c: 247: }
  1473                           ;main.c: 249: lcd_gotoxy(9, 1);
  1474  001452  0E01               	movlw	1
  1475  001454  6E3C               	movwf	lcd_gotoxy@y,c
  1476  001456  0E09               	movlw	9
  1477  001458  ECF6  F00E         	call	_lcd_gotoxy
  1478                           
  1479                           ;main.c: 250: lcd_putrs(dia);
  1480  00145C  C050  F045         	movff	_dia,??_main
  1481  001460  C051  F046         	movff	_dia+1,??_main+1
  1482  001464  6A47               	clrf	(??_main+2)& (0+255),c
  1483  001466  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1484  001468  6847               	setf	(??_main+2)& (0+255),c
  1485  00146A  C045  F040         	movff	??_main,lcd_putrs@ptr
  1486  00146E  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1487  001472  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1488  001476  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1489                           
  1490                           ;main.c: 251: lcd_putrs("/");
  1491  00147A  0E3D               	movlw	low STR_11
  1492  00147C  6E40               	movwf	lcd_putrs@ptr,c
  1493  00147E  0E0F               	movlw	high STR_11
  1494  001480  6E41               	movwf	lcd_putrs@ptr+1,c
  1495  001482  5040               	movf	lcd_putrs@ptr,w,c
  1496  001484  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1497  001486  A4D8               	btfss	status,2,c
  1498  001488  0E00               	movlw	low (__mediumconst shr (0+16))
  1499  00148A  6E42               	movwf	lcd_putrs@ptr+2,c
  1500  00148C  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1501                           
  1502                           ;main.c: 252: lcd_putrs(mes);
  1503  001490  C054  F045         	movff	_mes,??_main
  1504  001494  C055  F046         	movff	_mes+1,??_main+1
  1505  001498  6A47               	clrf	(??_main+2)& (0+255),c
  1506  00149A  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1507  00149C  6847               	setf	(??_main+2)& (0+255),c
  1508  00149E  C045  F040         	movff	??_main,lcd_putrs@ptr
  1509  0014A2  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1510  0014A6  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1511  0014AA  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1512                           
  1513                           ;main.c: 253: lcd_putrs("/");
  1514  0014AE  0E3D               	movlw	low STR_11
  1515  0014B0  6E40               	movwf	lcd_putrs@ptr,c
  1516  0014B2  0E0F               	movlw	high STR_11
  1517  0014B4  6E41               	movwf	lcd_putrs@ptr+1,c
  1518  0014B6  5040               	movf	lcd_putrs@ptr,w,c
  1519  0014B8  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1520  0014BA  A4D8               	btfss	status,2,c
  1521  0014BC  0E00               	movlw	low (__mediumconst shr (0+16))
  1522  0014BE  6E42               	movwf	lcd_putrs@ptr+2,c
  1523  0014C0  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1524                           
  1525                           ;main.c: 254: lcd_putrs(anio);
  1526  0014C4  C056  F045         	movff	_anio,??_main
  1527  0014C8  C057  F046         	movff	_anio+1,??_main+1
  1528  0014CC  6A47               	clrf	(??_main+2)& (0+255),c
  1529  0014CE  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1530  0014D0  6847               	setf	(??_main+2)& (0+255),c
  1531  0014D2  C045  F040         	movff	??_main,lcd_putrs@ptr
  1532  0014D6  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1533  0014DA  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1534  0014DE  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1535                           
  1536                           ;main.c: 256: _delay((unsigned long)((50)*(8000000/4000.0)));
  1537  0014E2  0E82               	movlw	130
  1538  0014E4  6E45               	movwf	??_main& (0+255),c
  1539  0014E6  0EDE               	movlw	222
  1540  0014E8                     u1987:
  1541  0014E8  2EE8               	decfsz	wreg,f,c
  1542  0014EA  D7FE               	bra	u1987
  1543  0014EC  2E45               	decfsz	??_main& (0+255),f,c
  1544  0014EE  D7FC               	bra	u1987
  1545  0014F0                     l184:
  1546                           
  1547                           ;main.c: 257: }
  1548                           ;main.c: 260: if (boton_seleccionar == 4) {
  1549  0014F0  0E04               	movlw	4
  1550  0014F2  184A               	xorwf	main@boton_seleccionar,w,c
  1551  0014F4  104B               	iorwf	main@boton_seleccionar+1,w,c
  1552  0014F6  A4D8               	btfss	status,2,c
  1553  0014F8  D073               	goto	l191
  1554                           
  1555                           ;main.c: 262: if (PORTAbits.RA3 == 0) {
  1556  0014FA  B680               	btfsc	3968,3,c	;volatile
  1557  0014FC  D010               	goto	l194
  1558                           
  1559                           ;main.c: 263: if (hora == 59) {
  1560  0014FE  0E3B               	movlw	59
  1561  001500  184E               	xorwf	_hora,w,c
  1562  001502  104F               	iorwf	_hora+1,w,c
  1563  001504  A4D8               	btfss	status,2,c
  1564  001506  D007               	goto	l193
  1565                           
  1566                           ;main.c: 264: hora = 0;
  1567  001508  0E00               	movlw	0
  1568  00150A  6E4F               	movwf	_hora+1,c
  1569  00150C  0E00               	movlw	0
  1570  00150E  6E4E               	movwf	_hora,c
  1571                           
  1572                           ;main.c: 265: Write_RTC();
  1573  001510  ECEA  F00B         	call	_Write_RTC	;wreg free
  1574                           
  1575                           ;main.c: 266: } else {
  1576  001514  D004               	goto	l194
  1577  001516                     l193:
  1578                           
  1579                           ;main.c: 267: hora++;
  1580  001516  4A4E               	infsnz	_hora,f,c
  1581  001518  2A4F               	incf	_hora+1,f,c
  1582                           
  1583                           ;main.c: 268: Write_RTC();
  1584  00151A  ECEA  F00B         	call	_Write_RTC	;wreg free
  1585  00151E                     l194:
  1586                           
  1587                           ;main.c: 269: }
  1588                           ;main.c: 270: }
  1589                           ;main.c: 272: if (PORTAbits.RA6 == 0) {
  1590  00151E  BC80               	btfsc	3968,6,c	;volatile
  1591  001520  D010               	goto	l197
  1592                           
  1593                           ;main.c: 273: if (hora == 0) {
  1594  001522  504E               	movf	_hora,w,c
  1595  001524  104F               	iorwf	_hora+1,w,c
  1596  001526  A4D8               	btfss	status,2,c
  1597  001528  D007               	goto	l196
  1598                           
  1599                           ;main.c: 274: hora = 59;
  1600  00152A  0E00               	movlw	0
  1601  00152C  6E4F               	movwf	_hora+1,c
  1602  00152E  0E3B               	movlw	59
  1603  001530  6E4E               	movwf	_hora,c
  1604                           
  1605                           ;main.c: 275: Write_RTC();
  1606  001532  ECEA  F00B         	call	_Write_RTC	;wreg free
  1607                           
  1608                           ;main.c: 276: } else {
  1609  001536  D005               	goto	l197
  1610  001538                     l196:
  1611                           
  1612                           ;main.c: 277: hora--;
  1613  001538  064E               	decf	_hora,f,c
  1614  00153A  A0D8               	btfss	status,0,c
  1615  00153C  064F               	decf	_hora+1,f,c
  1616                           
  1617                           ;main.c: 278: Write_RTC();
  1618  00153E  ECEA  F00B         	call	_Write_RTC	;wreg free
  1619  001542                     l197:
  1620                           
  1621                           ;main.c: 279: }
  1622                           ;main.c: 280: }
  1623                           ;main.c: 282: lcd_gotoxy(1, 2);
  1624  001542  0E02               	movlw	2
  1625  001544  6E3C               	movwf	lcd_gotoxy@y,c
  1626  001546  0E01               	movlw	1
  1627  001548  ECF6  F00E         	call	_lcd_gotoxy
  1628                           
  1629                           ;main.c: 283: lcd_putrs(hora);
  1630  00154C  C04E  F045         	movff	_hora,??_main
  1631  001550  C04F  F046         	movff	_hora+1,??_main+1
  1632  001554  6A47               	clrf	(??_main+2)& (0+255),c
  1633  001556  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1634  001558  6847               	setf	(??_main+2)& (0+255),c
  1635  00155A  C045  F040         	movff	??_main,lcd_putrs@ptr
  1636  00155E  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1637  001562  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1638  001566  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1639                           
  1640                           ;main.c: 284: lcd_putrs(":");
  1641  00156A  0E43               	movlw	low STR_17
  1642  00156C  6E40               	movwf	lcd_putrs@ptr,c
  1643  00156E  0E0F               	movlw	high STR_17
  1644  001570  6E41               	movwf	lcd_putrs@ptr+1,c
  1645  001572  5040               	movf	lcd_putrs@ptr,w,c
  1646  001574  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1647  001576  A4D8               	btfss	status,2,c
  1648  001578  0E00               	movlw	low (__mediumconst shr (0+16))
  1649  00157A  6E42               	movwf	lcd_putrs@ptr+2,c
  1650  00157C  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1651                           
  1652                           ;main.c: 285: lcd_putrs(minuto);
  1653  001580  C04C  F045         	movff	_minuto,??_main
  1654  001584  C04D  F046         	movff	_minuto+1,??_main+1
  1655  001588  6A47               	clrf	(??_main+2)& (0+255),c
  1656  00158A  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1657  00158C  6847               	setf	(??_main+2)& (0+255),c
  1658  00158E  C045  F040         	movff	??_main,lcd_putrs@ptr
  1659  001592  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1660  001596  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1661  00159A  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1662                           
  1663                           ;main.c: 286: lcd_putrs(":");
  1664  00159E  0E43               	movlw	low STR_17
  1665  0015A0  6E40               	movwf	lcd_putrs@ptr,c
  1666  0015A2  0E0F               	movlw	high STR_17
  1667  0015A4  6E41               	movwf	lcd_putrs@ptr+1,c
  1668  0015A6  5040               	movf	lcd_putrs@ptr,w,c
  1669  0015A8  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1670  0015AA  A4D8               	btfss	status,2,c
  1671  0015AC  0E00               	movlw	low (__mediumconst shr (0+16))
  1672  0015AE  6E42               	movwf	lcd_putrs@ptr+2,c
  1673  0015B0  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1674                           
  1675                           ;main.c: 287: lcd_putrs(segundo);
  1676  0015B4  C015  F045         	movff	_segundo,??_main
  1677  0015B8  C016  F046         	movff	_segundo+1,??_main+1
  1678  0015BC  6A47               	clrf	(??_main+2)& (0+255),c
  1679  0015BE  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1680  0015C0  6847               	setf	(??_main+2)& (0+255),c
  1681  0015C2  C045  F040         	movff	??_main,lcd_putrs@ptr
  1682  0015C6  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1683  0015CA  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1684  0015CE  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1685                           
  1686                           ;main.c: 289: _delay((unsigned long)((50)*(8000000/4000.0)));
  1687  0015D2  0E82               	movlw	130
  1688  0015D4  6E45               	movwf	??_main& (0+255),c
  1689  0015D6  0EDE               	movlw	222
  1690  0015D8                     u1997:
  1691  0015D8  2EE8               	decfsz	wreg,f,c
  1692  0015DA  D7FE               	bra	u1997
  1693  0015DC  2E45               	decfsz	??_main& (0+255),f,c
  1694  0015DE  D7FC               	bra	u1997
  1695  0015E0                     l191:
  1696                           
  1697                           ;main.c: 290: }
  1698                           ;main.c: 293: if (boton_seleccionar == 5) {
  1699  0015E0  0E05               	movlw	5
  1700  0015E2  184A               	xorwf	main@boton_seleccionar,w,c
  1701  0015E4  104B               	iorwf	main@boton_seleccionar+1,w,c
  1702  0015E6  A4D8               	btfss	status,2,c
  1703  0015E8  D073               	goto	l198
  1704                           
  1705                           ;main.c: 295: if (PORTAbits.RA3 == 0) {
  1706  0015EA  B680               	btfsc	3968,3,c	;volatile
  1707  0015EC  D010               	goto	l201
  1708                           
  1709                           ;main.c: 296: if (minuto == 59) {
  1710  0015EE  0E3B               	movlw	59
  1711  0015F0  184C               	xorwf	_minuto,w,c
  1712  0015F2  104D               	iorwf	_minuto+1,w,c
  1713  0015F4  A4D8               	btfss	status,2,c
  1714  0015F6  D007               	goto	l200
  1715                           
  1716                           ;main.c: 297: minuto = 0;
  1717  0015F8  0E00               	movlw	0
  1718  0015FA  6E4D               	movwf	_minuto+1,c
  1719  0015FC  0E00               	movlw	0
  1720  0015FE  6E4C               	movwf	_minuto,c
  1721                           
  1722                           ;main.c: 298: Write_RTC();
  1723  001600  ECEA  F00B         	call	_Write_RTC	;wreg free
  1724                           
  1725                           ;main.c: 299: } else {
  1726  001604  D004               	goto	l201
  1727  001606                     l200:
  1728                           
  1729                           ;main.c: 300: hora++;
  1730  001606  4A4E               	infsnz	_hora,f,c
  1731  001608  2A4F               	incf	_hora+1,f,c
  1732                           
  1733                           ;main.c: 301: Write_RTC();
  1734  00160A  ECEA  F00B         	call	_Write_RTC	;wreg free
  1735  00160E                     l201:
  1736                           
  1737                           ;main.c: 302: }
  1738                           ;main.c: 303: }
  1739                           ;main.c: 305: if (PORTAbits.RA6 == 0) {
  1740  00160E  BC80               	btfsc	3968,6,c	;volatile
  1741  001610  D010               	goto	l204
  1742                           
  1743                           ;main.c: 306: if (minuto == 0) {
  1744  001612  504C               	movf	_minuto,w,c
  1745  001614  104D               	iorwf	_minuto+1,w,c
  1746  001616  A4D8               	btfss	status,2,c
  1747  001618  D007               	goto	l203
  1748                           
  1749                           ;main.c: 307: minuto = 59;
  1750  00161A  0E00               	movlw	0
  1751  00161C  6E4D               	movwf	_minuto+1,c
  1752  00161E  0E3B               	movlw	59
  1753  001620  6E4C               	movwf	_minuto,c
  1754                           
  1755                           ;main.c: 308: Write_RTC();
  1756  001622  ECEA  F00B         	call	_Write_RTC	;wreg free
  1757                           
  1758                           ;main.c: 309: } else {
  1759  001626  D005               	goto	l204
  1760  001628                     l203:
  1761                           
  1762                           ;main.c: 310: minuto--;
  1763  001628  064C               	decf	_minuto,f,c
  1764  00162A  A0D8               	btfss	status,0,c
  1765  00162C  064D               	decf	_minuto+1,f,c
  1766                           
  1767                           ;main.c: 311: Write_RTC();
  1768  00162E  ECEA  F00B         	call	_Write_RTC	;wreg free
  1769  001632                     l204:
  1770                           
  1771                           ;main.c: 312: }
  1772                           ;main.c: 313: }
  1773                           ;main.c: 315: lcd_gotoxy(1, 2);
  1774  001632  0E02               	movlw	2
  1775  001634  6E3C               	movwf	lcd_gotoxy@y,c
  1776  001636  0E01               	movlw	1
  1777  001638  ECF6  F00E         	call	_lcd_gotoxy
  1778                           
  1779                           ;main.c: 316: lcd_putrs(hora);
  1780  00163C  C04E  F045         	movff	_hora,??_main
  1781  001640  C04F  F046         	movff	_hora+1,??_main+1
  1782  001644  6A47               	clrf	(??_main+2)& (0+255),c
  1783  001646  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1784  001648  6847               	setf	(??_main+2)& (0+255),c
  1785  00164A  C045  F040         	movff	??_main,lcd_putrs@ptr
  1786  00164E  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1787  001652  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1788  001656  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1789                           
  1790                           ;main.c: 317: lcd_putrs(":");
  1791  00165A  0E43               	movlw	low STR_17
  1792  00165C  6E40               	movwf	lcd_putrs@ptr,c
  1793  00165E  0E0F               	movlw	high STR_17
  1794  001660  6E41               	movwf	lcd_putrs@ptr+1,c
  1795  001662  5040               	movf	lcd_putrs@ptr,w,c
  1796  001664  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1797  001666  A4D8               	btfss	status,2,c
  1798  001668  0E00               	movlw	low (__mediumconst shr (0+16))
  1799  00166A  6E42               	movwf	lcd_putrs@ptr+2,c
  1800  00166C  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1801                           
  1802                           ;main.c: 318: lcd_putrs(minuto);
  1803  001670  C04C  F045         	movff	_minuto,??_main
  1804  001674  C04D  F046         	movff	_minuto+1,??_main+1
  1805  001678  6A47               	clrf	(??_main+2)& (0+255),c
  1806  00167A  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1807  00167C  6847               	setf	(??_main+2)& (0+255),c
  1808  00167E  C045  F040         	movff	??_main,lcd_putrs@ptr
  1809  001682  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1810  001686  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1811  00168A  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1812                           
  1813                           ;main.c: 319: lcd_putrs(":");
  1814  00168E  0E43               	movlw	low STR_17
  1815  001690  6E40               	movwf	lcd_putrs@ptr,c
  1816  001692  0E0F               	movlw	high STR_17
  1817  001694  6E41               	movwf	lcd_putrs@ptr+1,c
  1818  001696  5040               	movf	lcd_putrs@ptr,w,c
  1819  001698  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1820  00169A  A4D8               	btfss	status,2,c
  1821  00169C  0E00               	movlw	low (__mediumconst shr (0+16))
  1822  00169E  6E42               	movwf	lcd_putrs@ptr+2,c
  1823  0016A0  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1824                           
  1825                           ;main.c: 320: lcd_putrs(segundo);
  1826  0016A4  C015  F045         	movff	_segundo,??_main
  1827  0016A8  C016  F046         	movff	_segundo+1,??_main+1
  1828  0016AC  6A47               	clrf	(??_main+2)& (0+255),c
  1829  0016AE  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1830  0016B0  6847               	setf	(??_main+2)& (0+255),c
  1831  0016B2  C045  F040         	movff	??_main,lcd_putrs@ptr
  1832  0016B6  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1833  0016BA  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1834  0016BE  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1835                           
  1836                           ;main.c: 322: _delay((unsigned long)((50)*(8000000/4000.0)));
  1837  0016C2  0E82               	movlw	130
  1838  0016C4  6E45               	movwf	??_main& (0+255),c
  1839  0016C6  0EDE               	movlw	222
  1840  0016C8                     u2007:
  1841  0016C8  2EE8               	decfsz	wreg,f,c
  1842  0016CA  D7FE               	bra	u2007
  1843  0016CC  2E45               	decfsz	??_main& (0+255),f,c
  1844  0016CE  D7FC               	bra	u2007
  1845  0016D0                     l198:
  1846                           
  1847                           ;main.c: 323: }
  1848                           ;main.c: 326: if (boton_seleccionar == 6) {
  1849  0016D0  0E06               	movlw	6
  1850  0016D2  184A               	xorwf	main@boton_seleccionar,w,c
  1851  0016D4  104B               	iorwf	main@boton_seleccionar+1,w,c
  1852  0016D6  A4D8               	btfss	status,2,c
  1853  0016D8  D073               	goto	l205
  1854                           
  1855                           ;main.c: 328: if (PORTAbits.RA3 == 0) {
  1856  0016DA  B680               	btfsc	3968,3,c	;volatile
  1857  0016DC  D010               	goto	l208
  1858                           
  1859                           ;main.c: 329: if (segundo == 59) {
  1860  0016DE  0E3B               	movlw	59
  1861  0016E0  1815               	xorwf	_segundo,w,c
  1862  0016E2  1016               	iorwf	_segundo+1,w,c
  1863  0016E4  A4D8               	btfss	status,2,c
  1864  0016E6  D007               	goto	l207
  1865                           
  1866                           ;main.c: 330: segundo = 0;
  1867  0016E8  0E00               	movlw	0
  1868  0016EA  6E16               	movwf	_segundo+1,c
  1869  0016EC  0E00               	movlw	0
  1870  0016EE  6E15               	movwf	_segundo,c
  1871                           
  1872                           ;main.c: 331: Write_RTC();
  1873  0016F0  ECEA  F00B         	call	_Write_RTC	;wreg free
  1874                           
  1875                           ;main.c: 332: } else {
  1876  0016F4  D004               	goto	l208
  1877  0016F6                     l207:
  1878                           
  1879                           ;main.c: 333: segundo++;
  1880  0016F6  4A15               	infsnz	_segundo,f,c
  1881  0016F8  2A16               	incf	_segundo+1,f,c
  1882                           
  1883                           ;main.c: 334: Write_RTC();
  1884  0016FA  ECEA  F00B         	call	_Write_RTC	;wreg free
  1885  0016FE                     l208:
  1886                           
  1887                           ;main.c: 335: }
  1888                           ;main.c: 336: }
  1889                           ;main.c: 338: if (PORTAbits.RA6 == 0) {
  1890  0016FE  BC80               	btfsc	3968,6,c	;volatile
  1891  001700  D010               	goto	l211
  1892                           
  1893                           ;main.c: 339: if (segundo == 0) {
  1894  001702  5015               	movf	_segundo,w,c
  1895  001704  1016               	iorwf	_segundo+1,w,c
  1896  001706  A4D8               	btfss	status,2,c
  1897  001708  D007               	goto	l210
  1898                           
  1899                           ;main.c: 340: segundo = 59;
  1900  00170A  0E00               	movlw	0
  1901  00170C  6E16               	movwf	_segundo+1,c
  1902  00170E  0E3B               	movlw	59
  1903  001710  6E15               	movwf	_segundo,c
  1904                           
  1905                           ;main.c: 341: Write_RTC();
  1906  001712  ECEA  F00B         	call	_Write_RTC	;wreg free
  1907                           
  1908                           ;main.c: 342: } else {
  1909  001716  D005               	goto	l211
  1910  001718                     l210:
  1911                           
  1912                           ;main.c: 343: segundo--;
  1913  001718  0615               	decf	_segundo,f,c
  1914  00171A  A0D8               	btfss	status,0,c
  1915  00171C  0616               	decf	_segundo+1,f,c
  1916                           
  1917                           ;main.c: 344: Write_RTC();
  1918  00171E  ECEA  F00B         	call	_Write_RTC	;wreg free
  1919  001722                     l211:
  1920                           
  1921                           ;main.c: 345: }
  1922                           ;main.c: 346: }
  1923                           ;main.c: 348: lcd_gotoxy(1, 2);
  1924  001722  0E02               	movlw	2
  1925  001724  6E3C               	movwf	lcd_gotoxy@y,c
  1926  001726  0E01               	movlw	1
  1927  001728  ECF6  F00E         	call	_lcd_gotoxy
  1928                           
  1929                           ;main.c: 349: lcd_putrs(hora);
  1930  00172C  C04E  F045         	movff	_hora,??_main
  1931  001730  C04F  F046         	movff	_hora+1,??_main+1
  1932  001734  6A47               	clrf	(??_main+2)& (0+255),c
  1933  001736  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1934  001738  6847               	setf	(??_main+2)& (0+255),c
  1935  00173A  C045  F040         	movff	??_main,lcd_putrs@ptr
  1936  00173E  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1937  001742  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1938  001746  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1939                           
  1940                           ;main.c: 350: lcd_putrs(":");
  1941  00174A  0E43               	movlw	low STR_17
  1942  00174C  6E40               	movwf	lcd_putrs@ptr,c
  1943  00174E  0E0F               	movlw	high STR_17
  1944  001750  6E41               	movwf	lcd_putrs@ptr+1,c
  1945  001752  5040               	movf	lcd_putrs@ptr,w,c
  1946  001754  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1947  001756  A4D8               	btfss	status,2,c
  1948  001758  0E00               	movlw	low (__mediumconst shr (0+16))
  1949  00175A  6E42               	movwf	lcd_putrs@ptr+2,c
  1950  00175C  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1951                           
  1952                           ;main.c: 351: lcd_putrs(minuto);
  1953  001760  C04C  F045         	movff	_minuto,??_main
  1954  001764  C04D  F046         	movff	_minuto+1,??_main+1
  1955  001768  6A47               	clrf	(??_main+2)& (0+255),c
  1956  00176A  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1957  00176C  6847               	setf	(??_main+2)& (0+255),c
  1958  00176E  C045  F040         	movff	??_main,lcd_putrs@ptr
  1959  001772  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1960  001776  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1961  00177A  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1962                           
  1963                           ;main.c: 352: lcd_putrs(":");
  1964  00177E  0E43               	movlw	low STR_17
  1965  001780  6E40               	movwf	lcd_putrs@ptr,c
  1966  001782  0E0F               	movlw	high STR_17
  1967  001784  6E41               	movwf	lcd_putrs@ptr+1,c
  1968  001786  5040               	movf	lcd_putrs@ptr,w,c
  1969  001788  1041               	iorwf	lcd_putrs@ptr+1,w,c
  1970  00178A  A4D8               	btfss	status,2,c
  1971  00178C  0E00               	movlw	low (__mediumconst shr (0+16))
  1972  00178E  6E42               	movwf	lcd_putrs@ptr+2,c
  1973  001790  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1974                           
  1975                           ;main.c: 353: lcd_putrs(segundo);
  1976  001794  C015  F045         	movff	_segundo,??_main
  1977  001798  C016  F046         	movff	_segundo+1,??_main+1
  1978  00179C  6A47               	clrf	(??_main+2)& (0+255),c
  1979  00179E  BE46               	btfsc	(??_main+1)& (0+255),7,c
  1980  0017A0  6847               	setf	(??_main+2)& (0+255),c
  1981  0017A2  C045  F040         	movff	??_main,lcd_putrs@ptr
  1982  0017A6  C046  F041         	movff	??_main+1,lcd_putrs@ptr+1
  1983  0017AA  C047  F042         	movff	??_main+2,lcd_putrs@ptr+2
  1984  0017AE  ECA6  F00E         	call	_lcd_putrs	;wreg free
  1985                           
  1986                           ;main.c: 355: _delay((unsigned long)((50)*(8000000/4000.0)));
  1987  0017B2  0E82               	movlw	130
  1988  0017B4  6E45               	movwf	??_main& (0+255),c
  1989  0017B6  0EDE               	movlw	222
  1990  0017B8                     u2017:
  1991  0017B8  2EE8               	decfsz	wreg,f,c
  1992  0017BA  D7FE               	bra	u2017
  1993  0017BC  2E45               	decfsz	??_main& (0+255),f,c
  1994  0017BE  D7FC               	bra	u2017
  1995  0017C0                     l205:
  1996                           
  1997                           ;main.c: 356: }
  1998                           ;main.c: 358: }
  1999                           ;main.c: 360: _delay((unsigned long)((98)*(8000000/4000.0)));
  2000  0017C0  0EFF               	movlw	255
  2001  0017C2  6E45               	movwf	??_main& (0+255),c
  2002  0017C4  0E8A               	movlw	138
  2003  0017C6                     u2027:
  2004  0017C6  2EE8               	decfsz	wreg,f,c
  2005  0017C8  D7FE               	bra	u2027
  2006  0017CA  2E45               	decfsz	??_main& (0+255),f,c
  2007  0017CC  D7FC               	bra	u2027
  2008  0017CE  D000               	nop2	
  2009  0017D0  EFAD  F007         	goto	l140
  2010  0017D4                     __end_of_main:
  2011                           	opt stack 0
  2012                           tblptru	equ	0xFF8
  2013                           tblptrh	equ	0xFF7
  2014                           tblptrl	equ	0xFF6
  2015                           tablat	equ	0xFF5
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           postdec1	equ	0xFE5
  2019                           fsr1l	equ	0xFE1
  2020                           status	equ	0xFD8
  2021                           
  2022 ;; *************** function _lcd_putrs *****************
  2023 ;; Defined at:
  2024 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  ptr             3    8[COMRAM] PTR const unsigned char 
  2027 ;;		 -> STR_22(2), STR_21(2), STR_20(2), STR_19(2), 
  2028 ;;		 -> STR_18(2), STR_17(2), STR_16(2), STR_15(2), 
  2029 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2030 ;;		 -> ROM(65527), STR_10(8), STR_9(8), STR_8(8), 
  2031 ;;		 -> STR_7(8), STR_6(8), STR_5(8), STR_4(8), 
  2032 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;		None
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2044 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2047 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;Total ram usage:        3 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    4
  2051 ;; This function calls:
  2052 ;;		_lcd_putc
  2053 ;; This function is called by:
  2054 ;;		_main
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text1
  2059  001D4C                     __ptext1:
  2060                           	opt stack 0
  2061  001D4C                     _lcd_putrs:
  2062                           	opt stack 26
  2063                           
  2064                           ;unmc_lcd_216.c: 223: while(*ptr){
  2065                           
  2066                           ;incstack = 0
  2067  001D4C  D010               	goto	l270
  2068  001D4E                     
  2069                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  2070  001D4E  C040  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2071  001D52  C041  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2072  001D56  C042  FFF8         	movff	lcd_putrs@ptr+2,tblptru
  2073  001D5A  0008               	tblrd		*
  2074  001D5C  50F5               	movf	tablat,w,c
  2075  001D5E  EC5F  F00E         	call	_lcd_putc
  2076  001D62  0E01               	movlw	1
  2077  001D64  2640               	addwf	lcd_putrs@ptr,f,c
  2078  001D66  0E00               	movlw	0
  2079  001D68  2241               	addwfc	lcd_putrs@ptr+1,f,c
  2080  001D6A  0E00               	movlw	0
  2081  001D6C  2242               	addwfc	lcd_putrs@ptr+2,f,c
  2082  001D6E                     l270:
  2083  001D6E  C040  FFF6         	movff	lcd_putrs@ptr,tblptrl
  2084  001D72  C041  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  2085  001D76  C042  FFF8         	movff	lcd_putrs@ptr+2,tblptru
  2086  001D7A  0008               	tblrd		*
  2087  001D7C  50F5               	movf	tablat,w,c
  2088  001D7E  0900               	iorlw	0
  2089  001D80  B4D8               	btfsc	status,2,c
  2090  001D82  0012               	return	
  2091  001D84  D7E4               	goto	l271
  2092  001D86                     __end_of_lcd_putrs:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           tblptrh	equ	0xFF7
  2096                           tblptrl	equ	0xFF6
  2097                           tablat	equ	0xFF5
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           postdec1	equ	0xFE5
  2101                           fsr1l	equ	0xFE1
  2102                           status	equ	0xFD8
  2103                           
  2104 ;; *************** function _lcd_putc *****************
  2105 ;; Defined at:
  2106 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  c               1    wreg     unsigned char 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  c               1    7[COMRAM] unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;Total ram usage:        1 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    3
  2127 ;; This function calls:
  2128 ;;		_lcd_gotoxy
  2129 ;;		_lcd_send_byte
  2130 ;; This function is called by:
  2131 ;;		_lcd_putrs
  2132 ;;		_lcd_puts
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text2
  2137  001CBE                     __ptext2:
  2138                           	opt stack 0
  2139  001CBE                     _lcd_putc:
  2140                           	opt stack 26
  2141                           
  2142                           ;incstack = 0
  2143                           ;lcd_putc@c stored from wreg
  2144  001CBE  6E3F               	movwf	lcd_putc@c,c
  2145                           
  2146                           ;unmc_lcd_216.c: 173: switch(c){
  2147  001CC0  D018               	goto	l249
  2148  001CC2                     
  2149                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  2150  001CC2  0E01               	movlw	1
  2151  001CC4  6E3A               	movwf	lcd_send_byte@n,c
  2152  001CC6  0E00               	movlw	0
  2153  001CC8  ECDD  F00E         	call	_lcd_send_byte
  2154                           
  2155                           ;unmc_lcd_216.c: 176: break;
  2156  001CCC  0012               	return	
  2157  001CCE                     
  2158                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  2159  001CCE  0E02               	movlw	2
  2160  001CD0  6E3C               	movwf	lcd_gotoxy@y,c
  2161  001CD2  0E01               	movlw	1
  2162  001CD4  ECF6  F00E         	call	_lcd_gotoxy
  2163                           
  2164                           ;unmc_lcd_216.c: 179: break;
  2165  001CD8  0012               	return	
  2166  001CDA                     
  2167                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  2168  001CDA  0E10               	movlw	16
  2169  001CDC  6E3A               	movwf	lcd_send_byte@n,c
  2170  001CDE  0E00               	movlw	0
  2171  001CE0  ECDD  F00E         	call	_lcd_send_byte
  2172                           
  2173                           ;unmc_lcd_216.c: 182: break;
  2174  001CE4  0012               	return	
  2175  001CE6                     
  2176                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  2177  001CE6  C03F  F03A         	movff	lcd_putc@c,lcd_send_byte@n
  2178  001CEA  0E01               	movlw	1
  2179  001CEC  ECDD  F00E         	call	_lcd_send_byte
  2180                           
  2181                           ;unmc_lcd_216.c: 186: }
  2182                           
  2183                           ;unmc_lcd_216.c: 185: break;
  2184  001CF0  0012               	return	
  2185  001CF2                     l249:
  2186  001CF2  503F               	movf	lcd_putc@c,w,c
  2187                           
  2188                           ; Switch size 1, requested type "space"
  2189                           ; Number of cases is 3, Range of values is 8 to 12
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte           10     6 (average)
  2193                           ;	Chosen strategy is simple_byte
  2194  001CF4  0A08               	xorlw	8	; case 8
  2195  001CF6  B4D8               	btfsc	status,2,c
  2196  001CF8  D7F0               	goto	l253
  2197  001CFA  0A02               	xorlw	2	; case 10
  2198  001CFC  B4D8               	btfsc	status,2,c
  2199  001CFE  D7E7               	goto	l252
  2200  001D00  0A06               	xorlw	6	; case 12
  2201  001D02  B4D8               	btfsc	status,2,c
  2202  001D04  D7DE               	goto	l250
  2203  001D06  D7EF               	goto	l254
  2204  001D08                     __end_of_lcd_putc:
  2205                           	opt stack 0
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           postdec1	equ	0xFE5
  2213                           fsr1l	equ	0xFE1
  2214                           status	equ	0xFD8
  2215                           
  2216 ;; *************** function _lcd_gotoxy *****************
  2217 ;; Defined at:
  2218 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  x               1    wreg     unsigned char 
  2221 ;;  y               1    4[COMRAM] unsigned char 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  x               1    5[COMRAM] unsigned char 
  2224 ;;  address         1    6[COMRAM] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2234 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2238 ;;Total ram usage:        3 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    2
  2241 ;; This function calls:
  2242 ;;		_lcd_send_byte
  2243 ;; This function is called by:
  2244 ;;		_main
  2245 ;;		_lcd_putc
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text3
  2250  001DEC                     __ptext3:
  2251                           	opt stack 0
  2252  001DEC                     _lcd_gotoxy:
  2253                           	opt stack 26
  2254                           
  2255                           ;incstack = 0
  2256                           ;lcd_gotoxy@x stored from wreg
  2257  001DEC  6E3D               	movwf	lcd_gotoxy@x,c
  2258                           
  2259                           ;unmc_lcd_216.c: 159: int8 address;
  2260                           ;unmc_lcd_216.c: 161: if(y != 1)
  2261  001DEE  043C               	decf	lcd_gotoxy@y,w,c
  2262  001DF0  B4D8               	btfsc	status,2,c
  2263  001DF2  D002               	goto	l244
  2264                           
  2265                           ;unmc_lcd_216.c: 162: address = 0x40;
  2266  001DF4  0E40               	movlw	64
  2267  001DF6  D001               	goto	L1
  2268  001DF8                     l244:
  2269                           
  2270                           ;unmc_lcd_216.c: 163: else
  2271                           ;unmc_lcd_216.c: 164: address=0;
  2272  001DF8  0E00               	movlw	0
  2273  001DFA                     L1:
  2274  001DFA  6E3E               	movwf	lcd_gotoxy@address,c
  2275                           
  2276                           ;unmc_lcd_216.c: 166: address += x-1;
  2277  001DFC  043D               	decf	lcd_gotoxy@x,w,c
  2278  001DFE  263E               	addwf	lcd_gotoxy@address,f,c
  2279                           
  2280                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  2281  001E00  503E               	movf	lcd_gotoxy@address,w,c
  2282  001E02  0980               	iorlw	128
  2283  001E04  6E3A               	movwf	lcd_send_byte@n,c
  2284  001E06  0E00               	movlw	0
  2285  001E08  ECDD  F00E         	call	_lcd_send_byte
  2286  001E0C  0012               	return		;funcret
  2287  001E0E                     __end_of_lcd_gotoxy:
  2288                           	opt stack 0
  2289                           tblptru	equ	0xFF8
  2290                           tblptrh	equ	0xFF7
  2291                           tblptrl	equ	0xFF6
  2292                           tablat	equ	0xFF5
  2293                           postinc0	equ	0xFEE
  2294                           wreg	equ	0xFE8
  2295                           postdec1	equ	0xFE5
  2296                           fsr1l	equ	0xFE1
  2297                           status	equ	0xFD8
  2298                           
  2299 ;; *************** function _Write_RTC *****************
  2300 ;; Defined at:
  2301 ;;		line 74 in file "../../headers\unmc_rtcc_01.h"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    2
  2322 ;; This function calls:
  2323 ;;		_RtccWrOn
  2324 ;;		_RtccWriteDate
  2325 ;;		_RtccWriteTime
  2326 ;;		___awdiv
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text4
  2333  0017D4                     __ptext4:
  2334                           	opt stack 0
  2335  0017D4                     _Write_RTC:
  2336                           	opt stack 28
  2337                           
  2338                           ;headers\unmc_rtcc_01.h: 76: RtccWrOn();
  2339                           
  2340                           ;incstack = 0
  2341  0017D4  EC07  F00F         	call	_RtccWrOn	;wreg free
  2342                           
  2343                           ;headers\unmc_rtcc_01.h: 78: PIE3bits.RTCCIE=1;
  2344  0017D8  80A3               	bsf	4003,0,c	;volatile
  2345                           
  2346                           ;headers\unmc_rtcc_01.h: 79: segundo_d=segundo/10;
  2347  0017DA  C015  F038         	movff	_segundo,___awdiv@dividend
  2348  0017DE  C016  F039         	movff	_segundo+1,___awdiv@dividend+1
  2349  0017E2  0E00               	movlw	0
  2350  0017E4  6E3B               	movwf	___awdiv@divisor+1,c
  2351  0017E6  0E0A               	movlw	10
  2352  0017E8  6E3A               	movwf	___awdiv@divisor,c
  2353  0017EA  ECA7  F00D         	call	___awdiv	;wreg free
  2354  0017EE  5038               	movf	?___awdiv,w,c
  2355  0017F0  6E2E               	movwf	_segundo_d,c
  2356                           
  2357                           ;headers\unmc_rtcc_01.h: 80: segundo_u=segundo-segundo_d*10;
  2358  0017F2  502E               	movf	_segundo_d,w,c
  2359  0017F4  0D0A               	mullw	10
  2360  0017F6  50F3               	movf	prodl,w,c
  2361  0017F8  0800               	sublw	0
  2362  0017FA  2415               	addwf	_segundo,w,c
  2363  0017FC  6E2F               	movwf	_segundo_u,c
  2364                           
  2365                           ;headers\unmc_rtcc_01.h: 81: RtccTime.f.sec =segundo_d*16+segundo_u;
  2366  0017FE  502E               	movf	_segundo_d,w,c
  2367  001800  0D10               	mullw	16
  2368  001802  50F3               	movf	prodl,w,c
  2369  001804  242F               	addwf	_segundo_u,w,c
  2370  001806  6E35               	movwf	_RtccTime+1,c
  2371                           
  2372                           ;headers\unmc_rtcc_01.h: 82: minuto_d=minuto/10;
  2373  001808  C04C  F038         	movff	_minuto,___awdiv@dividend
  2374  00180C  C04D  F039         	movff	_minuto+1,___awdiv@dividend+1
  2375  001810  0E00               	movlw	0
  2376  001812  6E3B               	movwf	___awdiv@divisor+1,c
  2377  001814  0E0A               	movlw	10
  2378  001816  6E3A               	movwf	___awdiv@divisor,c
  2379  001818  ECA7  F00D         	call	___awdiv	;wreg free
  2380  00181C  5038               	movf	?___awdiv,w,c
  2381  00181E  6E2C               	movwf	_minuto_d,c
  2382                           
  2383                           ;headers\unmc_rtcc_01.h: 83: minuto_u=minuto-minuto_d*10;
  2384  001820  502C               	movf	_minuto_d,w,c
  2385  001822  0D0A               	mullw	10
  2386  001824  50F3               	movf	prodl,w,c
  2387  001826  0800               	sublw	0
  2388  001828  244C               	addwf	_minuto,w,c
  2389  00182A  6E2D               	movwf	_minuto_u,c
  2390                           
  2391                           ;headers\unmc_rtcc_01.h: 84: RtccTime.f.min =minuto_d*16+minuto_u;
  2392  00182C  502C               	movf	_minuto_d,w,c
  2393  00182E  0D10               	mullw	16
  2394  001830  50F3               	movf	prodl,w,c
  2395  001832  242D               	addwf	_minuto_u,w,c
  2396  001834  6E36               	movwf	_RtccTime+2,c
  2397                           
  2398                           ;headers\unmc_rtcc_01.h: 85: hora_d=hora/10;
  2399  001836  C04E  F038         	movff	_hora,___awdiv@dividend
  2400  00183A  C04F  F039         	movff	_hora+1,___awdiv@dividend+1
  2401  00183E  0E00               	movlw	0
  2402  001840  6E3B               	movwf	___awdiv@divisor+1,c
  2403  001842  0E0A               	movlw	10
  2404  001844  6E3A               	movwf	___awdiv@divisor,c
  2405  001846  ECA7  F00D         	call	___awdiv	;wreg free
  2406  00184A  5038               	movf	?___awdiv,w,c
  2407  00184C  6E2A               	movwf	_hora_d,c
  2408                           
  2409                           ;headers\unmc_rtcc_01.h: 86: hora_u=hora-hora_d*10;
  2410  00184E  502A               	movf	_hora_d,w,c
  2411  001850  0D0A               	mullw	10
  2412  001852  50F3               	movf	prodl,w,c
  2413  001854  0800               	sublw	0
  2414  001856  244E               	addwf	_hora,w,c
  2415  001858  6E2B               	movwf	_hora_u,c
  2416                           
  2417                           ;headers\unmc_rtcc_01.h: 87: RtccTime.f.hour=hora_d*16+hora_u;
  2418  00185A  502A               	movf	_hora_d,w,c
  2419  00185C  0D10               	mullw	16
  2420  00185E  50F3               	movf	prodl,w,c
  2421  001860  242B               	addwf	_hora_u,w,c
  2422  001862  6E37               	movwf	_RtccTime+3,c
  2423                           
  2424                           ;headers\unmc_rtcc_01.h: 88: anio_d=anio/10;
  2425  001864  C056  F038         	movff	_anio,___awdiv@dividend
  2426  001868  C057  F039         	movff	_anio+1,___awdiv@dividend+1
  2427  00186C  0E00               	movlw	0
  2428  00186E  6E3B               	movwf	___awdiv@divisor+1,c
  2429  001870  0E0A               	movlw	10
  2430  001872  6E3A               	movwf	___awdiv@divisor,c
  2431  001874  ECA7  F00D         	call	___awdiv	;wreg free
  2432  001878  5038               	movf	?___awdiv,w,c
  2433  00187A  6E23               	movwf	_anio_d,c
  2434                           
  2435                           ;headers\unmc_rtcc_01.h: 89: anio_u=anio-anio_d*10;
  2436  00187C  5023               	movf	_anio_d,w,c
  2437  00187E  0D0A               	mullw	10
  2438  001880  50F3               	movf	prodl,w,c
  2439  001882  0800               	sublw	0
  2440  001884  2456               	addwf	_anio,w,c
  2441  001886  6E24               	movwf	_anio_u,c
  2442                           
  2443                           ;headers\unmc_rtcc_01.h: 90: RtccDate.f.year=anio_d*16+anio_u;
  2444  001888  5023               	movf	_anio_d,w,c
  2445  00188A  0D10               	mullw	16
  2446  00188C  50F3               	movf	prodl,w,c
  2447  00188E  2424               	addwf	_anio_u,w,c
  2448  001890  6E33               	movwf	_RtccDate+3,c
  2449                           
  2450                           ;headers\unmc_rtcc_01.h: 91: mes_d=mes/10;
  2451  001892  C054  F038         	movff	_mes,___awdiv@dividend
  2452  001896  C055  F039         	movff	_mes+1,___awdiv@dividend+1
  2453  00189A  0E00               	movlw	0
  2454  00189C  6E3B               	movwf	___awdiv@divisor+1,c
  2455  00189E  0E0A               	movlw	10
  2456  0018A0  6E3A               	movwf	___awdiv@divisor,c
  2457  0018A2  ECA7  F00D         	call	___awdiv	;wreg free
  2458  0018A6  5038               	movf	?___awdiv,w,c
  2459  0018A8  6E26               	movwf	_mes_d,c
  2460                           
  2461                           ;headers\unmc_rtcc_01.h: 92: mes_u=mes-mes_d*10;
  2462  0018AA  5026               	movf	_mes_d,w,c
  2463  0018AC  0D0A               	mullw	10
  2464  0018AE  50F3               	movf	prodl,w,c
  2465  0018B0  0800               	sublw	0
  2466  0018B2  2454               	addwf	_mes,w,c
  2467  0018B4  6E27               	movwf	_mes_u,c
  2468                           
  2469                           ;headers\unmc_rtcc_01.h: 93: RtccDate.f.mon=mes_d*16+mes_u;
  2470  0018B6  5026               	movf	_mes_d,w,c
  2471  0018B8  0D10               	mullw	16
  2472  0018BA  50F3               	movf	prodl,w,c
  2473  0018BC  2427               	addwf	_mes_u,w,c
  2474  0018BE  6E32               	movwf	_RtccDate+2,c
  2475                           
  2476                           ;headers\unmc_rtcc_01.h: 94: fecha_d=dia/10;
  2477  0018C0  C050  F038         	movff	_dia,___awdiv@dividend
  2478  0018C4  C051  F039         	movff	_dia+1,___awdiv@dividend+1
  2479  0018C8  0E00               	movlw	0
  2480  0018CA  6E3B               	movwf	___awdiv@divisor+1,c
  2481  0018CC  0E0A               	movlw	10
  2482  0018CE  6E3A               	movwf	___awdiv@divisor,c
  2483  0018D0  ECA7  F00D         	call	___awdiv	;wreg free
  2484  0018D4  5038               	movf	?___awdiv,w,c
  2485  0018D6  6E28               	movwf	_fecha_d,c
  2486                           
  2487                           ;headers\unmc_rtcc_01.h: 95: fecha_u=dia-fecha_d*10;
  2488  0018D8  5028               	movf	_fecha_d,w,c
  2489  0018DA  0D0A               	mullw	10
  2490  0018DC  50F3               	movf	prodl,w,c
  2491  0018DE  0800               	sublw	0
  2492  0018E0  2450               	addwf	_dia,w,c
  2493  0018E2  6E29               	movwf	_fecha_u,c
  2494                           
  2495                           ;headers\unmc_rtcc_01.h: 96: RtccDate.f.mday=fecha_d*16+fecha_u;
  2496  0018E4  5028               	movf	_fecha_d,w,c
  2497  0018E6  0D10               	mullw	16
  2498  0018E8  50F3               	movf	prodl,w,c
  2499  0018EA  2429               	addwf	_fecha_u,w,c
  2500  0018EC  6E31               	movwf	_RtccDate+1,c
  2501                           
  2502                           ;headers\unmc_rtcc_01.h: 97: dia_semana=diasem;
  2503  0018EE  C052  F025         	movff	_diasem,_dia_semana
  2504                           
  2505                           ;headers\unmc_rtcc_01.h: 98: RtccDate.f.wday =diasem;
  2506  0018F2  C052  F030         	movff	_diasem,_RtccDate
  2507                           
  2508                           ;headers\unmc_rtcc_01.h: 99: RtccWriteTime(&RtccTime,1);
  2509  0018F6  0E34               	movlw	low _RtccTime
  2510  0018F8  6E38               	movwf	RtccWriteTime@pTm,c
  2511  0018FA  0E00               	movlw	high _RtccTime
  2512  0018FC  6E39               	movwf	RtccWriteTime@pTm+1,c
  2513  0018FE  0E01               	movlw	1
  2514  001900  6E3A               	movwf	RtccWriteTime@di,c
  2515  001902  EC29  F00D         	call	_RtccWriteTime	;wreg free
  2516                           
  2517                           ;headers\unmc_rtcc_01.h: 100: RtccWriteDate(&RtccDate,1);
  2518  001906  0E30               	movlw	low _RtccDate
  2519  001908  6E38               	movwf	RtccWriteDate@pDt,c
  2520  00190A  0E00               	movlw	high _RtccDate
  2521  00190C  6E39               	movwf	RtccWriteDate@pDt+1,c
  2522  00190E  0E01               	movlw	1
  2523  001910  6E3A               	movwf	RtccWriteDate@di,c
  2524  001912  EC8E  F00C         	call	_RtccWriteDate	;wreg free
  2525                           
  2526                           ;headers\unmc_rtcc_01.h: 101: (RTCCFGbits.RTCEN=1);
  2527  001916  010F               	movlb	15	; () banked
  2528  001918  8F3F               	bsf	63,7,b	;volatile
  2529                           
  2530                           ; BSR set to: 15
  2531  00191A  0012               	return		;funcret
  2532  00191C                     __end_of_Write_RTC:
  2533                           	opt stack 0
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           prodl	equ	0xFF3
  2539                           postinc0	equ	0xFEE
  2540                           wreg	equ	0xFE8
  2541                           postdec1	equ	0xFE5
  2542                           fsr1l	equ	0xFE1
  2543                           status	equ	0xFD8
  2544                           
  2545 ;; *************** function ___awdiv *****************
  2546 ;; Defined at:
  2547 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  dividend        2    0[COMRAM] int 
  2550 ;;  divisor         2    2[COMRAM] int 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  quotient        2    6[COMRAM] int 
  2553 ;;  sign            1    5[COMRAM] unsigned char 
  2554 ;;  counter         1    4[COMRAM] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  2    0[COMRAM] int 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2564 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2568 ;;Total ram usage:        8 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_Write_RTC
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text5
  2578  001B4E                     __ptext5:
  2579                           	opt stack 0
  2580  001B4E                     ___awdiv:
  2581                           	opt stack 29
  2582                           
  2583                           ; BSR set to: 15
  2584                           ;incstack = 0
  2585  001B4E  0E00               	movlw	0
  2586  001B50  6E3D               	movwf	___awdiv@sign,c
  2587  001B52  AE3B               	btfss	___awdiv@divisor+1,7,c
  2588  001B54  D006               	goto	l530
  2589  001B56  6C3A               	negf	___awdiv@divisor,c
  2590  001B58  1E3B               	comf	___awdiv@divisor+1,f,c
  2591  001B5A  B0D8               	btfsc	status,0,c
  2592  001B5C  2A3B               	incf	___awdiv@divisor+1,f,c
  2593  001B5E  0E01               	movlw	1
  2594  001B60  6E3D               	movwf	___awdiv@sign,c
  2595  001B62                     l530:
  2596  001B62  AE39               	btfss	___awdiv@dividend+1,7,c
  2597  001B64  D006               	goto	l531
  2598  001B66  6C38               	negf	___awdiv@dividend,c
  2599  001B68  1E39               	comf	___awdiv@dividend+1,f,c
  2600  001B6A  B0D8               	btfsc	status,0,c
  2601  001B6C  2A39               	incf	___awdiv@dividend+1,f,c
  2602  001B6E  0E01               	movlw	1
  2603  001B70  1A3D               	xorwf	___awdiv@sign,f,c
  2604  001B72                     l531:
  2605  001B72  0E00               	movlw	0
  2606  001B74  6E3F               	movwf	___awdiv@quotient+1,c
  2607  001B76  0E00               	movlw	0
  2608  001B78  6E3E               	movwf	___awdiv@quotient,c
  2609  001B7A  503A               	movf	___awdiv@divisor,w,c
  2610  001B7C  103B               	iorwf	___awdiv@divisor+1,w,c
  2611  001B7E  B4D8               	btfsc	status,2,c
  2612  001B80  D01C               	goto	l538
  2613  001B82  0E01               	movlw	1
  2614  001B84  6E3C               	movwf	___awdiv@counter,c
  2615  001B86  D004               	goto	l533
  2616  001B88  90D8               	bcf	status,0,c
  2617  001B8A  363A               	rlcf	___awdiv@divisor,f,c
  2618  001B8C  363B               	rlcf	___awdiv@divisor+1,f,c
  2619  001B8E  2A3C               	incf	___awdiv@counter,f,c
  2620  001B90                     l533:
  2621  001B90  AE3B               	btfss	___awdiv@divisor+1,7,c
  2622  001B92  D7FA               	goto	l534
  2623  001B94                     u1310:
  2624  001B94  90D8               	bcf	status,0,c
  2625  001B96  363E               	rlcf	___awdiv@quotient,f,c
  2626  001B98  363F               	rlcf	___awdiv@quotient+1,f,c
  2627  001B9A  503A               	movf	___awdiv@divisor,w,c
  2628  001B9C  5C38               	subwf	___awdiv@dividend,w,c
  2629  001B9E  503B               	movf	___awdiv@divisor+1,w,c
  2630  001BA0  5839               	subwfb	___awdiv@dividend+1,w,c
  2631  001BA2  A0D8               	btfss	status,0,c
  2632  001BA4  D005               	goto	l537
  2633  001BA6  503A               	movf	___awdiv@divisor,w,c
  2634  001BA8  5E38               	subwf	___awdiv@dividend,f,c
  2635  001BAA  503B               	movf	___awdiv@divisor+1,w,c
  2636  001BAC  5A39               	subwfb	___awdiv@dividend+1,f,c
  2637  001BAE  803E               	bsf	___awdiv@quotient,0,c
  2638  001BB0                     l537:
  2639  001BB0  90D8               	bcf	status,0,c
  2640  001BB2  323B               	rrcf	___awdiv@divisor+1,f,c
  2641  001BB4  323A               	rrcf	___awdiv@divisor,f,c
  2642  001BB6  2E3C               	decfsz	___awdiv@counter,f,c
  2643  001BB8  D7ED               	goto	u1310
  2644  001BBA                     l538:
  2645  001BBA  503D               	movf	___awdiv@sign,w,c
  2646  001BBC  B4D8               	btfsc	status,2,c
  2647  001BBE  D004               	goto	l539
  2648  001BC0  6C3E               	negf	___awdiv@quotient,c
  2649  001BC2  1E3F               	comf	___awdiv@quotient+1,f,c
  2650  001BC4  B0D8               	btfsc	status,0,c
  2651  001BC6  2A3F               	incf	___awdiv@quotient+1,f,c
  2652  001BC8                     l539:
  2653  001BC8  C03E  F038         	movff	___awdiv@quotient,?___awdiv
  2654  001BCC  C03F  F039         	movff	___awdiv@quotient+1,?___awdiv+1
  2655  001BD0  0012               	return	
  2656  001BD2                     __end_of___awdiv:
  2657                           	opt stack 0
  2658                           tblptru	equ	0xFF8
  2659                           tblptrh	equ	0xFF7
  2660                           tblptrl	equ	0xFF6
  2661                           tablat	equ	0xFF5
  2662                           prodl	equ	0xFF3
  2663                           postinc0	equ	0xFEE
  2664                           wreg	equ	0xFE8
  2665                           postdec1	equ	0xFE5
  2666                           fsr1l	equ	0xFE1
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _RtccWriteTime *****************
  2670 ;; Defined at:
  2671 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  pTm             2    0[COMRAM] PTR const struct .
  2674 ;;		 -> RtccTime(4), 
  2675 ;;  di              1    2[COMRAM] enum E7121
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  tempHourWDay    2    9[COMRAM] struct .
  2678 ;;  tempMinSec      2    7[COMRAM] struct .
  2679 ;;  wasWrEn         1    6[COMRAM] enum E7121
  2680 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2681 ;;  wasOn           1    4[COMRAM] enum E7121
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      enum E6550
  2684 ;; Registers used:
  2685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2691 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2694 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2695 ;;Total ram usage:       11 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:    1
  2698 ;; This function calls:
  2699 ;;		_RtccWrOn
  2700 ;; This function is called by:
  2701 ;;		_Write_RTC
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text6
  2706  001A52                     __ptext6:
  2707                           	opt stack 0
  2708  001A52                     _RtccWriteTime:
  2709                           	opt stack 28
  2710                           
  2711                           ;incstack = 0
  2712  001A52  0E00               	movlw	0
  2713  001A54  6E3D               	movwf	RtccWriteTime@wasAlrm,c
  2714  001A56  EE20 F002          	lfsr	2,2
  2715  001A5A  5038               	movf	RtccWriteTime@pTm,w,c
  2716  001A5C  26D9               	addwf	fsr2l,f,c
  2717  001A5E  5039               	movf	RtccWriteTime@pTm+1,w,c
  2718  001A60  22DA               	addwfc	fsr2h,f,c
  2719  001A62  0E5A               	movlw	90
  2720  001A64  60DF               	cpfslt	indf2,c
  2721  001A66  0012               	return	
  2722  001A68  EE20 F001          	lfsr	2,1
  2723  001A6C  5038               	movf	RtccWriteTime@pTm,w,c
  2724  001A6E  26D9               	addwf	fsr2l,f,c
  2725  001A70  5039               	movf	RtccWriteTime@pTm+1,w,c
  2726  001A72  22DA               	addwfc	fsr2h,f,c
  2727  001A74  0E5A               	movlw	90
  2728  001A76  60DF               	cpfslt	indf2,c
  2729  001A78  0012               	return	
  2730  001A7A  EE20 F003          	lfsr	2,3
  2731  001A7E  5038               	movf	RtccWriteTime@pTm,w,c
  2732  001A80  26D9               	addwf	fsr2l,f,c
  2733  001A82  5039               	movf	RtccWriteTime@pTm+1,w,c
  2734  001A84  22DA               	addwfc	fsr2h,f,c
  2735  001A86  0E24               	movlw	36
  2736  001A88  64DF               	cpfsgt	indf2,c
  2737  001A8A  D001               	goto	l350
  2738  001A8C  0012               	return	
  2739  001A8E                     l350:
  2740  001A8E  EE20 F002          	lfsr	2,2
  2741  001A92  5038               	movf	RtccWriteTime@pTm,w,c
  2742  001A94  26D9               	addwf	fsr2l,f,c
  2743  001A96  5039               	movf	RtccWriteTime@pTm+1,w,c
  2744  001A98  22DA               	addwfc	fsr2h,f,c
  2745  001A9A  50DF               	movf	indf2,w,c
  2746  001A9C  6E40               	movwf	RtccWriteTime@tempMinSec+1,c
  2747  001A9E  EE20 F001          	lfsr	2,1
  2748  001AA2  5038               	movf	RtccWriteTime@pTm,w,c
  2749  001AA4  26D9               	addwf	fsr2l,f,c
  2750  001AA6  5039               	movf	RtccWriteTime@pTm+1,w,c
  2751  001AA8  22DA               	addwfc	fsr2h,f,c
  2752  001AAA  50DF               	movf	indf2,w,c
  2753  001AAC  6E3F               	movwf	RtccWriteTime@tempMinSec,c
  2754  001AAE  503A               	movf	RtccWriteTime@di,w,c
  2755  001AB0  A4D8               	btfss	status,2,c
  2756  001AB2  9CF2               	bcf	intcon,6,c	;volatile
  2757  001AB4  010F               	movlb	15	; () banked
  2758  001AB6  0E00               	movlw	0
  2759  001AB8  BB3F               	btfsc	63,5,b	;volatile
  2760  001ABA  0E01               	movlw	1
  2761  001ABC  6E3E               	movwf	RtccWriteTime@wasWrEn,c
  2762  001ABE  503E               	movf	RtccWriteTime@wasWrEn,w,c
  2763  001AC0  B4D8               	btfsc	status,2,c
  2764                           
  2765                           ; BSR set to: 15
  2766  001AC2  EC07  F00F         	call	_RtccWrOn	;wreg free
  2767  001AC6  010F               	movlb	15	; () banked
  2768  001AC8  0E00               	movlw	0
  2769  001ACA  BF3F               	btfsc	63,7,b	;volatile
  2770  001ACC  0E01               	movlw	1
  2771  001ACE  6E3C               	movwf	RtccWriteTime@wasOn,c
  2772  001AD0  503C               	movf	RtccWriteTime@wasOn,w,c
  2773  001AD2  B4D8               	btfsc	status,2,c
  2774  001AD4  D006               	goto	l356
  2775                           
  2776                           ; BSR set to: 15
  2777  001AD6  0E00               	movlw	0
  2778  001AD8  BE91               	btfsc	3985,7,c	;volatile
  2779  001ADA  0E01               	movlw	1
  2780  001ADC  6E3D               	movwf	RtccWriteTime@wasAlrm,c
  2781                           
  2782                           ; BSR set to: 15
  2783  001ADE  010F               	movlb	15	; () banked
  2784  001AE0  9F3F               	bcf	63,7,b	;volatile
  2785  001AE2                     l356:
  2786                           
  2787                           ; BSR set to: 15
  2788                           
  2789                           ; BSR set to: 15
  2790  001AE2  0EFC               	movlw	252
  2791  001AE4  010F               	movlb	15	; () banked
  2792  001AE6  173F               	andwf	63,f,b	;volatile
  2793  001AE8  010F               	movlb	15	; () banked
  2794  001AEA  813F               	bsf	63,0,b	;volatile
  2795                           
  2796                           ; BSR set to: 15
  2797  001AEC  CF98 F041          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  2798                           
  2799                           ; BSR set to: 15
  2800  001AF0  CF99 F042          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  2801                           
  2802                           ; BSR set to: 15
  2803  001AF4  EE20 F003          	lfsr	2,3
  2804  001AF8  5038               	movf	RtccWriteTime@pTm,w,c
  2805  001AFA  26D9               	addwf	fsr2l,f,c
  2806  001AFC  5039               	movf	RtccWriteTime@pTm+1,w,c
  2807  001AFE  22DA               	addwfc	fsr2h,f,c
  2808  001B00  50DF               	movf	indf2,w,c
  2809  001B02  6E41               	movwf	RtccWriteTime@tempHourWDay,c
  2810                           
  2811                           ; BSR set to: 15
  2812  001B04  0EFC               	movlw	252
  2813  001B06  010F               	movlb	15	; () banked
  2814  001B08  173F               	andwf	63,f,b	;volatile
  2815                           
  2816                           ; BSR set to: 15
  2817  001B0A  010F               	movlb	15	; () banked
  2818  001B0C  813F               	bsf	63,0,b	;volatile
  2819                           
  2820                           ; BSR set to: 15
  2821  001B0E  C041  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824  001B12  C042  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  2825                           
  2826                           ; BSR set to: 15
  2827  001B16  C03F  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  2828                           
  2829                           ; BSR set to: 15
  2830  001B1A  C040  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  2831                           
  2832                           ; BSR set to: 15
  2833  001B1E  503C               	movf	RtccWriteTime@wasOn,w,c
  2834  001B20  B4D8               	btfsc	status,2,c
  2835  001B22  D00B               	goto	l357
  2836                           
  2837                           ; BSR set to: 15
  2838  001B24  010F               	movlb	15	; () banked
  2839  001B26  8F3F               	bsf	63,7,b	;volatile
  2840                           
  2841                           ; BSR set to: 15
  2842  001B28  503D               	movf	RtccWriteTime@wasAlrm,w,c
  2843  001B2A  A4D8               	btfss	status,2,c
  2844                           
  2845                           ; BSR set to: 15
  2846  001B2C  8E91               	bsf	3985,7,c	;volatile
  2847                           
  2848                           ; BSR set to: 15
  2849                           
  2850                           ; BSR set to: 15
  2851  001B2E  503E               	movf	RtccWriteTime@wasWrEn,w,c
  2852  001B30  B4D8               	btfsc	status,2,c
  2853  001B32  D008               	goto	l361
  2854                           
  2855                           ; BSR set to: 15
  2856  001B34  EC07  F00F         	call	_RtccWrOn	;wreg free
  2857  001B38  D005               	goto	l361
  2858  001B3A                     l357:
  2859  001B3A  503E               	movf	RtccWriteTime@wasWrEn,w,c
  2860  001B3C  A4D8               	btfss	status,2,c
  2861  001B3E  D002               	goto	l361
  2862  001B40  010F               	movlb	15	; () banked
  2863  001B42  9B3F               	bcf	63,5,b	;volatile
  2864  001B44                     l361:
  2865                           
  2866                           ; BSR set to: 15
  2867                           
  2868                           ; BSR set to: 15
  2869  001B44  503A               	movf	RtccWriteTime@di,w,c
  2870  001B46  B4D8               	btfsc	status,2,c
  2871  001B48  0012               	return	
  2872  001B4A  8CF2               	bsf	intcon,6,c	;volatile
  2873  001B4C  0012               	return	
  2874  001B4E                     __end_of_RtccWriteTime:
  2875                           	opt stack 0
  2876                           tblptru	equ	0xFF8
  2877                           tblptrh	equ	0xFF7
  2878                           tblptrl	equ	0xFF6
  2879                           tablat	equ	0xFF5
  2880                           prodl	equ	0xFF3
  2881                           intcon	equ	0xFF2
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           postdec1	equ	0xFE5
  2885                           fsr1l	equ	0xFE1
  2886                           indf2	equ	0xFDF
  2887                           fsr2h	equ	0xFDA
  2888                           fsr2l	equ	0xFD9
  2889                           status	equ	0xFD8
  2890                           
  2891 ;; *************** function _RtccWriteDate *****************
  2892 ;; Defined at:
  2893 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;  pDt             2    0[COMRAM] PTR const struct .
  2896 ;;		 -> RtccDate(4), 
  2897 ;;  di              1    2[COMRAM] enum E7121
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  tempHourWDay    2   11[COMRAM] struct .
  2900 ;;  tempDayMonth    2    9[COMRAM] struct .
  2901 ;;  tempYear        2    6[COMRAM] struct .
  2902 ;;  wasWrEn         1    8[COMRAM] enum E7121
  2903 ;;  wasAlrm         1    5[COMRAM] enum E7121
  2904 ;;  wasOn           1    4[COMRAM] enum E7121
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      enum E6550
  2907 ;; Registers used:
  2908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2915 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2917 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2918 ;;Total ram usage:       13 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; Hardware stack levels required when called:    1
  2921 ;; This function calls:
  2922 ;;		_RtccWrOn
  2923 ;; This function is called by:
  2924 ;;		_Write_RTC
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text7
  2929  00191C                     __ptext7:
  2930                           	opt stack 0
  2931  00191C                     _RtccWriteDate:
  2932                           	opt stack 28
  2933                           
  2934                           ;incstack = 0
  2935  00191C  0E00               	movlw	0
  2936  00191E  6E3D               	movwf	RtccWriteDate@wasAlrm,c
  2937  001920  EE20 F002          	lfsr	2,2
  2938  001924  5038               	movf	RtccWriteDate@pDt,w,c
  2939  001926  26D9               	addwf	fsr2l,f,c
  2940  001928  5039               	movf	RtccWriteDate@pDt+1,w,c
  2941  00192A  22DA               	addwfc	fsr2h,f,c
  2942  00192C  0E13               	movlw	19
  2943  00192E  60DF               	cpfslt	indf2,c
  2944  001930  0012               	return	
  2945  001932  EE20 F002          	lfsr	2,2
  2946  001936  5038               	movf	RtccWriteDate@pDt,w,c
  2947  001938  26D9               	addwf	fsr2l,f,c
  2948  00193A  5039               	movf	RtccWriteDate@pDt+1,w,c
  2949  00193C  22DA               	addwfc	fsr2h,f,c
  2950  00193E  50DF               	movf	indf2,w,c
  2951  001940  B4D8               	btfsc	status,2,c
  2952  001942  0012               	return	
  2953  001944  EE20 F001          	lfsr	2,1
  2954  001948  5038               	movf	RtccWriteDate@pDt,w,c
  2955  00194A  26D9               	addwf	fsr2l,f,c
  2956  00194C  5039               	movf	RtccWriteDate@pDt+1,w,c
  2957  00194E  22DA               	addwfc	fsr2h,f,c
  2958  001950  0E32               	movlw	50
  2959  001952  60DF               	cpfslt	indf2,c
  2960  001954  0012               	return	
  2961  001956  EE20 F001          	lfsr	2,1
  2962  00195A  5038               	movf	RtccWriteDate@pDt,w,c
  2963  00195C  26D9               	addwf	fsr2l,f,c
  2964  00195E  5039               	movf	RtccWriteDate@pDt+1,w,c
  2965  001960  22DA               	addwfc	fsr2h,f,c
  2966  001962  50DF               	movf	indf2,w,c
  2967  001964  B4D8               	btfsc	status,2,c
  2968  001966  0012               	return	
  2969  001968  EE20 F003          	lfsr	2,3
  2970  00196C  5038               	movf	RtccWriteDate@pDt,w,c
  2971  00196E  26D9               	addwf	fsr2l,f,c
  2972  001970  5039               	movf	RtccWriteDate@pDt+1,w,c
  2973  001972  22DA               	addwfc	fsr2h,f,c
  2974  001974  0E99               	movlw	153
  2975  001976  64DF               	cpfsgt	indf2,c
  2976  001978  D001               	goto	l321
  2977  00197A  0012               	return	
  2978  00197C                     l321:
  2979  00197C  EE20 F003          	lfsr	2,3
  2980  001980  5038               	movf	RtccWriteDate@pDt,w,c
  2981  001982  26D9               	addwf	fsr2l,f,c
  2982  001984  5039               	movf	RtccWriteDate@pDt+1,w,c
  2983  001986  22DA               	addwfc	fsr2h,f,c
  2984  001988  50DF               	movf	indf2,w,c
  2985  00198A  6E3E               	movwf	RtccWriteDate@tempYear,c
  2986  00198C  EE20 F001          	lfsr	2,1
  2987  001990  5038               	movf	RtccWriteDate@pDt,w,c
  2988  001992  26D9               	addwf	fsr2l,f,c
  2989  001994  5039               	movf	RtccWriteDate@pDt+1,w,c
  2990  001996  22DA               	addwfc	fsr2h,f,c
  2991  001998  50DF               	movf	indf2,w,c
  2992  00199A  6E41               	movwf	RtccWriteDate@tempDayMonth,c
  2993  00199C  EE20 F002          	lfsr	2,2
  2994  0019A0  5038               	movf	RtccWriteDate@pDt,w,c
  2995  0019A2  26D9               	addwf	fsr2l,f,c
  2996  0019A4  5039               	movf	RtccWriteDate@pDt+1,w,c
  2997  0019A6  22DA               	addwfc	fsr2h,f,c
  2998  0019A8  50DF               	movf	indf2,w,c
  2999  0019AA  6E42               	movwf	RtccWriteDate@tempDayMonth+1,c
  3000  0019AC  503A               	movf	RtccWriteDate@di,w,c
  3001  0019AE  A4D8               	btfss	status,2,c
  3002  0019B0  9CF2               	bcf	intcon,6,c	;volatile
  3003  0019B2  010F               	movlb	15	; () banked
  3004  0019B4  0E00               	movlw	0
  3005  0019B6  BB3F               	btfsc	63,5,b	;volatile
  3006  0019B8  0E01               	movlw	1
  3007  0019BA  6E40               	movwf	RtccWriteDate@wasWrEn,c
  3008  0019BC  5040               	movf	RtccWriteDate@wasWrEn,w,c
  3009  0019BE  B4D8               	btfsc	status,2,c
  3010                           
  3011                           ; BSR set to: 15
  3012  0019C0  EC07  F00F         	call	_RtccWrOn	;wreg free
  3013  0019C4  010F               	movlb	15	; () banked
  3014  0019C6  0E00               	movlw	0
  3015  0019C8  BF3F               	btfsc	63,7,b	;volatile
  3016  0019CA  0E01               	movlw	1
  3017  0019CC  6E3C               	movwf	RtccWriteDate@wasOn,c
  3018  0019CE  503C               	movf	RtccWriteDate@wasOn,w,c
  3019  0019D0  B4D8               	btfsc	status,2,c
  3020  0019D2  D006               	goto	l327
  3021                           
  3022                           ; BSR set to: 15
  3023  0019D4  0E00               	movlw	0
  3024  0019D6  BE91               	btfsc	3985,7,c	;volatile
  3025  0019D8  0E01               	movlw	1
  3026  0019DA  6E3D               	movwf	RtccWriteDate@wasAlrm,c
  3027                           
  3028                           ; BSR set to: 15
  3029  0019DC  010F               	movlb	15	; () banked
  3030  0019DE  9F3F               	bcf	63,7,b	;volatile
  3031  0019E0                     l327:
  3032                           
  3033                           ; BSR set to: 15
  3034                           
  3035                           ; BSR set to: 15
  3036  0019E0  0EFC               	movlw	252
  3037  0019E2  010F               	movlb	15	; () banked
  3038  0019E4  173F               	andwf	63,f,b	;volatile
  3039  0019E6  010F               	movlb	15	; () banked
  3040  0019E8  813F               	bsf	63,0,b	;volatile
  3041                           
  3042                           ; BSR set to: 15
  3043  0019EA  CF98 F043          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  3044                           
  3045                           ; BSR set to: 15
  3046  0019EE  CF99 F044          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  3047                           
  3048                           ; BSR set to: 15
  3049  0019F2  C038  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  3050  0019F6  C039  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  3051  0019FA  50DF               	movf	indf2,w,c
  3052  0019FC  6E44               	movwf	RtccWriteDate@tempHourWDay+1,c
  3053                           
  3054                           ; BSR set to: 15
  3055  0019FE  0EFC               	movlw	252
  3056  001A00  010F               	movlb	15	; () banked
  3057  001A02  173F               	andwf	63,f,b	;volatile
  3058                           
  3059                           ; BSR set to: 15
  3060  001A04  0E03               	movlw	3
  3061  001A06  010F               	movlb	15	; () banked
  3062  001A08  133F               	iorwf	63,f,b	;volatile
  3063                           
  3064                           ; BSR set to: 15
  3065  001A0A  C03E  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  3066                           
  3067                           ; BSR set to: 15
  3068  001A0E  C03F  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  3069                           
  3070                           ; BSR set to: 15
  3071  001A12  C041  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  3072                           
  3073                           ; BSR set to: 15
  3074  001A16  C042  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  3075                           
  3076                           ; BSR set to: 15
  3077  001A1A  C043  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  3078                           
  3079                           ; BSR set to: 15
  3080  001A1E  C044  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  3081                           
  3082                           ; BSR set to: 15
  3083  001A22  503C               	movf	RtccWriteDate@wasOn,w,c
  3084  001A24  B4D8               	btfsc	status,2,c
  3085  001A26  D00B               	goto	l328
  3086                           
  3087                           ; BSR set to: 15
  3088  001A28  010F               	movlb	15	; () banked
  3089  001A2A  8F3F               	bsf	63,7,b	;volatile
  3090                           
  3091                           ; BSR set to: 15
  3092  001A2C  503D               	movf	RtccWriteDate@wasAlrm,w,c
  3093  001A2E  A4D8               	btfss	status,2,c
  3094                           
  3095                           ; BSR set to: 15
  3096  001A30  8E91               	bsf	3985,7,c	;volatile
  3097                           
  3098                           ; BSR set to: 15
  3099                           
  3100                           ; BSR set to: 15
  3101  001A32  5040               	movf	RtccWriteDate@wasWrEn,w,c
  3102  001A34  B4D8               	btfsc	status,2,c
  3103  001A36  D008               	goto	l332
  3104                           
  3105                           ; BSR set to: 15
  3106  001A38  EC07  F00F         	call	_RtccWrOn	;wreg free
  3107  001A3C  D005               	goto	l332
  3108  001A3E                     l328:
  3109  001A3E  5040               	movf	RtccWriteDate@wasWrEn,w,c
  3110  001A40  A4D8               	btfss	status,2,c
  3111  001A42  D002               	goto	l332
  3112  001A44  010F               	movlb	15	; () banked
  3113  001A46  9B3F               	bcf	63,5,b	;volatile
  3114  001A48                     l332:
  3115                           
  3116                           ; BSR set to: 15
  3117                           
  3118                           ; BSR set to: 15
  3119  001A48  503A               	movf	RtccWriteDate@di,w,c
  3120  001A4A  B4D8               	btfsc	status,2,c
  3121  001A4C  0012               	return	
  3122  001A4E  9CF2               	bcf	intcon,6,c	;volatile
  3123  001A50  0012               	return	
  3124  001A52                     __end_of_RtccWriteDate:
  3125                           	opt stack 0
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           prodl	equ	0xFF3
  3131                           intcon	equ	0xFF2
  3132                           postinc0	equ	0xFEE
  3133                           wreg	equ	0xFE8
  3134                           postdec1	equ	0xFE5
  3135                           fsr1l	equ	0xFE1
  3136                           indf2	equ	0xFDF
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function _RtccWrOn *****************
  3142 ;; Defined at:
  3143 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  data            2    0        unsigned int 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3161 ;;Total ram usage:        0 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_Write_RTC
  3167 ;;		_RtccWriteDate
  3168 ;;		_RtccWriteTime
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text8
  3173  001E0E                     __ptext8:
  3174                           	opt stack 0
  3175  001E0E                     _RtccWrOn:
  3176                           	opt stack 28
  3177                           
  3178                           ;incstack = 0
  3179  001E0E  9CF2               	bcf	intcon,6,c	;volatile
  3180  001E10  0E55               	movlw	85
  3181  001E12  6EA7               	movwf	4007,c	;volatile
  3182  001E14  0EAA               	movlw	170
  3183  001E16  6EA7               	movwf	4007,c	;volatile
  3184  001E18  010F               	movlb	15	; () banked
  3185  001E1A  8B3F               	bsf	63,5,b	;volatile
  3186                           
  3187                           ; BSR set to: 15
  3188  001E1C  8CF2               	bsf	intcon,6,c	;volatile
  3189                           
  3190                           ; BSR set to: 15
  3191  001E1E  0012               	return		;funcret
  3192  001E20                     __end_of_RtccWrOn:
  3193                           	opt stack 0
  3194                           tblptru	equ	0xFF8
  3195                           tblptrh	equ	0xFF7
  3196                           tblptrl	equ	0xFF6
  3197                           tablat	equ	0xFF5
  3198                           prodl	equ	0xFF3
  3199                           intcon	equ	0xFF2
  3200                           postinc0	equ	0xFEE
  3201                           wreg	equ	0xFE8
  3202                           postdec1	equ	0xFE5
  3203                           fsr1l	equ	0xFE1
  3204                           indf2	equ	0xFDF
  3205                           fsr2h	equ	0xFDA
  3206                           fsr2l	equ	0xFD9
  3207                           status	equ	0xFD8
  3208                           
  3209 ;; *************** function _Setup *****************
  3210 ;; Defined at:
  3211 ;;		line 19 in file "main.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    3
  3232 ;; This function calls:
  3233 ;;		_lcd_comand
  3234 ;;		_lcd_init
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text9
  3241  001D86                     __ptext9:
  3242                           	opt stack 0
  3243  001D86                     _Setup:
  3244                           	opt stack 27
  3245                           
  3246                           ;main.c: 20: OSCTUNEbits.INTSRC = 1;
  3247                           
  3248                           ; BSR set to: 15
  3249                           ;incstack = 0
  3250  001D86  8E9B               	bsf	3995,7,c	;volatile
  3251                           
  3252                           ;main.c: 21: OSCTUNEbits.PLLEN = 0;
  3253  001D88  9C9B               	bcf	3995,6,c	;volatile
  3254                           
  3255                           ;main.c: 22: OSCCONbits.IRCF0 = 1;
  3256  001D8A  88D3               	bsf	4051,4,c	;volatile
  3257                           
  3258                           ;main.c: 23: OSCCONbits.IRCF1 = 1;
  3259  001D8C  8AD3               	bsf	4051,5,c	;volatile
  3260                           
  3261                           ;main.c: 24: OSCCONbits.IRCF2 = 1;
  3262  001D8E  8CD3               	bsf	4051,6,c	;volatile
  3263                           
  3264                           ;main.c: 25: OSCCONbits.SCS0 = 0;
  3265  001D90  90D3               	bcf	4051,0,c	;volatile
  3266                           
  3267                           ;main.c: 26: OSCCONbits.SCS1 = 0;
  3268  001D92  92D3               	bcf	4051,1,c	;volatile
  3269                           
  3270                           ;main.c: 27: TRISA = 0b11111111;
  3271  001D94  6892               	setf	3986,c	;volatile
  3272                           
  3273                           ;main.c: 28: TRISB = 0;
  3274  001D96  0E00               	movlw	0
  3275  001D98  6E93               	movwf	3987,c	;volatile
  3276                           
  3277                           ;main.c: 29: TRISC = 0b00000111;
  3278  001D9A  0E07               	movlw	7
  3279  001D9C  6E94               	movwf	3988,c	;volatile
  3280                           
  3281                           ;main.c: 30: INTCON2bits.RBPU = 1;
  3282  001D9E  8EF1               	bsf	intcon2,7,c	;volatile
  3283                           
  3284                           ;main.c: 31: ANCON0 = 0b11111111;
  3285  001DA0  010F               	movlb	15	; () banked
  3286  001DA2  6948               	setf	72,b	;volatile
  3287                           
  3288                           ; BSR set to: 15
  3289                           ;main.c: 32: ANCON1 = 0b11111111;
  3290  001DA4  010F               	movlb	15	; () banked
  3291  001DA6  6949               	setf	73,b	;volatile
  3292                           
  3293                           ; BSR set to: 15
  3294                           ;main.c: 33: ADCON0 = 0b11111111;
  3295  001DA8  68C2               	setf	4034,c	;volatile
  3296                           
  3297                           ; BSR set to: 15
  3298                           ;main.c: 34: ADCON1 = 0b11111111;
  3299  001DAA  68C1               	setf	4033,c	;volatile
  3300                           
  3301                           ; BSR set to: 15
  3302                           ;main.c: 37: T1CONbits.T1OSCEN = 1;
  3303  001DAC  86CD               	bsf	4045,3,c	;volatile
  3304                           
  3305                           ; BSR set to: 15
  3306                           ;main.c: 39: lcd_init();
  3307  001DAE  ECE9  F00D         	call	_lcd_init	;wreg free
  3308                           
  3309                           ;main.c: 40: lcd_comand(0b00001100);
  3310  001DB2  0E0C               	movlw	12
  3311  001DB4  EC20  F00F         	call	_lcd_comand
  3312  001DB8  0012               	return		;funcret
  3313  001DBA                     __end_of_Setup:
  3314                           	opt stack 0
  3315                           tblptru	equ	0xFF8
  3316                           tblptrh	equ	0xFF7
  3317                           tblptrl	equ	0xFF6
  3318                           tablat	equ	0xFF5
  3319                           prodl	equ	0xFF3
  3320                           intcon	equ	0xFF2
  3321                           intcon2	equ	0xFF1
  3322                           postinc0	equ	0xFEE
  3323                           wreg	equ	0xFE8
  3324                           postdec1	equ	0xFE5
  3325                           fsr1l	equ	0xFE1
  3326                           indf2	equ	0xFDF
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function _lcd_init *****************
  3332 ;; Defined at:
  3333 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  i               1    4[COMRAM] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;Total ram usage:        1 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    2
  3354 ;; This function calls:
  3355 ;;		_Delay1KTCYx
  3356 ;;		_lcd_send_byte
  3357 ;;		_lcd_send_nibble
  3358 ;; This function is called by:
  3359 ;;		_Setup
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text10
  3364  001BD2                     __ptext10:
  3365                           	opt stack 0
  3366  001BD2                     _lcd_init:
  3367                           	opt stack 27
  3368                           
  3369                           ;unmc_lcd_216.c: 120: int8 i;
  3370                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  3371                           
  3372                           ;incstack = 0
  3373  001BD2  9693               	bcf	3987,3,c	;volatile
  3374                           
  3375                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  3376  001BD4  9493               	bcf	3987,2,c	;volatile
  3377                           
  3378                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  3379  001BD6  968A               	bcf	3978,3,c	;volatile
  3380                           
  3381                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  3382  001BD8  948A               	bcf	3978,2,c	;volatile
  3383                           
  3384                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  3385  001BDA  9893               	bcf	3987,4,c	;volatile
  3386                           
  3387                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  3388  001BDC  9A93               	bcf	3987,5,c	;volatile
  3389                           
  3390                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  3391  001BDE  9C93               	bcf	3987,6,c	;volatile
  3392                           
  3393                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  3394  001BE0  9E93               	bcf	3987,7,c	;volatile
  3395                           
  3396                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  3397  001BE2  0E0A               	movlw	10
  3398  001BE4  EC10  F00F         	call	_Delay1KTCYx
  3399                           
  3400                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  3401  001BE8  0E0A               	movlw	10
  3402  001BEA  EC10  F00F         	call	_Delay1KTCYx
  3403                           
  3404                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  3405  001BEE  0E0A               	movlw	10
  3406  001BF0  EC10  F00F         	call	_Delay1KTCYx
  3407                           
  3408                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  3409  001BF4  0E00               	movlw	0
  3410  001BF6  6E3C               	movwf	lcd_init@i,c
  3411  001BF8                     l1969:
  3412  001BF8  0E02               	movlw	2
  3413  001BFA  643C               	cpfsgt	lcd_init@i,c
  3414  001BFC  D001               	goto	l237
  3415  001BFE  D008               	goto	u1250
  3416  001C00                     l237:
  3417                           
  3418                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  3419  001C00  0E03               	movlw	3
  3420  001C02  EC24  F00E         	call	_lcd_send_nibble
  3421                           
  3422                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  3423  001C06  0E0A               	movlw	10
  3424  001C08  EC10  F00F         	call	_Delay1KTCYx
  3425  001C0C  2A3C               	incf	lcd_init@i,f,c
  3426  001C0E  D7F4               	goto	l1969
  3427  001C10                     u1250:
  3428                           
  3429                           ;unmc_lcd_216.c: 146: }
  3430                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  3431  001C10  0E02               	movlw	2
  3432  001C12  EC24  F00E         	call	_lcd_send_nibble
  3433                           
  3434                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  3435  001C16  0E00               	movlw	0
  3436  001C18  6E3C               	movwf	lcd_init@i,c
  3437  001C1A                     l1983:
  3438  001C1A  0E03               	movlw	3
  3439  001C1C  643C               	cpfsgt	lcd_init@i,c
  3440  001C1E  D001               	goto	l239
  3441  001C20  0012               	return	
  3442  001C22                     l239:
  3443                           
  3444                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  3445  001C22  503C               	movf	lcd_init@i,w,c
  3446  001C24  0D01               	mullw	1
  3447  001C26  0E01               	movlw	low _LCD_INIT_STRING
  3448  001C28  24F3               	addwf	prodl,w,c
  3449  001C2A  6EF6               	movwf	tblptrl,c
  3450  001C2C  0E0F               	movlw	high _LCD_INIT_STRING
  3451  001C2E  20F4               	addwfc	prodh,w,c
  3452  001C30  6EF7               	movwf	tblptrh,c
  3453  001C32                     	if	0	;There are less than 3 active tblptr bytes
  3454  001C32                     	endif
  3455  001C32  0008               	tblrd		*
  3456  001C34  CFF5 F03A          	movff	tablat,lcd_send_byte@n
  3457  001C38  0E00               	movlw	0
  3458  001C3A  ECDD  F00E         	call	_lcd_send_byte
  3459                           
  3460                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  3461  001C3E  0E0A               	movlw	10
  3462  001C40  EC10  F00F         	call	_Delay1KTCYx
  3463  001C44  2A3C               	incf	lcd_init@i,f,c
  3464  001C46  D7E9               	goto	l1983
  3465  001C48                     __end_of_lcd_init:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           intcon	equ	0xFF2
  3474                           intcon2	equ	0xFF1
  3475                           postinc0	equ	0xFEE
  3476                           wreg	equ	0xFE8
  3477                           postdec1	equ	0xFE5
  3478                           fsr1l	equ	0xFE1
  3479                           indf2	equ	0xFDF
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _Delay1KTCYx *****************
  3485 ;; Defined at:
  3486 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  unit            1    wreg     unsigned char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  unit            1    0[COMRAM] unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3504 ;;Total ram usage:        1 bytes
  3505 ;; Hardware stack levels used:    1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_lcd_init
  3510 ;;		_DelayPORXLCD
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text11
  3515  001E20                     __ptext11:
  3516                           	opt stack 0
  3517  001E20                     _Delay1KTCYx:
  3518                           	opt stack 28
  3519                           
  3520                           ;incstack = 0
  3521                           ;Delay1KTCYx@unit stored from wreg
  3522  001E20  6E38               	movwf	Delay1KTCYx@unit,c
  3523  001E22                     l578:
  3524  001E22  0EC8               	movlw	200
  3525  001E24                     u2037:
  3526  001E24  D000               	nop2	
  3527  001E26  2EE8               	decfsz	wreg,f,c
  3528  001E28  D7FD               	bra	u2037
  3529  001E2A  2E38               	decfsz	Delay1KTCYx@unit,f,c
  3530  001E2C  D7FA               	goto	l578
  3531  001E2E  0012               	return	
  3532  001E30                     __end_of_Delay1KTCYx:
  3533                           	opt stack 0
  3534                           tblptru	equ	0xFF8
  3535                           tblptrh	equ	0xFF7
  3536                           tblptrl	equ	0xFF6
  3537                           tablat	equ	0xFF5
  3538                           prodh	equ	0xFF4
  3539                           prodl	equ	0xFF3
  3540                           intcon	equ	0xFF2
  3541                           intcon2	equ	0xFF1
  3542                           postinc0	equ	0xFEE
  3543                           wreg	equ	0xFE8
  3544                           postdec1	equ	0xFE5
  3545                           fsr1l	equ	0xFE1
  3546                           indf2	equ	0xFDF
  3547                           fsr2h	equ	0xFDA
  3548                           fsr2l	equ	0xFD9
  3549                           status	equ	0xFD8
  3550                           
  3551 ;; *************** function _lcd_comand *****************
  3552 ;; Defined at:
  3553 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  d               1    wreg     unsigned char 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  d               1    4[COMRAM] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3571 ;;Total ram usage:        1 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    2
  3574 ;; This function calls:
  3575 ;;		_lcd_send_byte
  3576 ;; This function is called by:
  3577 ;;		_Setup
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text12
  3582  001E40                     __ptext12:
  3583                           	opt stack 0
  3584  001E40                     _lcd_comand:
  3585                           	opt stack 27
  3586                           
  3587                           ;incstack = 0
  3588                           ;lcd_comand@d stored from wreg
  3589  001E40  6E3C               	movwf	lcd_comand@d,c
  3590                           
  3591                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  3592  001E42  C03C  F03A         	movff	lcd_comand@d,lcd_send_byte@n
  3593  001E46  0E00               	movlw	0
  3594  001E48  ECDD  F00E         	call	_lcd_send_byte
  3595  001E4C  0012               	return		;funcret
  3596  001E4E                     __end_of_lcd_comand:
  3597                           	opt stack 0
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           prodh	equ	0xFF4
  3603                           prodl	equ	0xFF3
  3604                           intcon	equ	0xFF2
  3605                           intcon2	equ	0xFF1
  3606                           postinc0	equ	0xFEE
  3607                           wreg	equ	0xFE8
  3608                           postdec1	equ	0xFE5
  3609                           fsr1l	equ	0xFE1
  3610                           indf2	equ	0xFDF
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8
  3614                           
  3615 ;; *************** function _lcd_send_byte *****************
  3616 ;; Defined at:
  3617 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  address         1    wreg     unsigned char 
  3620 ;;  n               1    2[COMRAM] unsigned char 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  address         1    3[COMRAM] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0, cstack
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3636 ;;Total ram usage:        2 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    1
  3639 ;; This function calls:
  3640 ;;		_Delay100TCYx
  3641 ;;		_lcd_send_nibble
  3642 ;; This function is called by:
  3643 ;;		_lcd_init
  3644 ;;		_lcd_gotoxy
  3645 ;;		_lcd_putc
  3646 ;;		_lcd_comand
  3647 ;;		_lcd_setcursor_vb
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text13
  3652  001DBA                     __ptext13:
  3653                           	opt stack 0
  3654  001DBA                     _lcd_send_byte:
  3655                           	opt stack 27
  3656                           
  3657                           ;incstack = 0
  3658                           ;lcd_send_byte@address stored from wreg
  3659  001DBA  6E3B               	movwf	lcd_send_byte@address,c
  3660                           
  3661                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  3662  001DBC  968A               	bcf	3978,3,c	;volatile
  3663                           
  3664                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  3665  001DBE  0E02               	movlw	2
  3666  001DC0  EC18  F00F         	call	_Delay100TCYx
  3667                           
  3668                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  3669  001DC4  9893               	bcf	3987,4,c	;volatile
  3670                           
  3671                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  3672  001DC6  9A93               	bcf	3987,5,c	;volatile
  3673                           
  3674                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  3675  001DC8  9C93               	bcf	3987,6,c	;volatile
  3676                           
  3677                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  3678  001DCA  9E93               	bcf	3987,7,c	;volatile
  3679                           
  3680                           ;unmc_lcd_216.c: 101: if(address)
  3681  001DCC  503B               	movf	lcd_send_byte@address,w,c
  3682  001DCE  B4D8               	btfsc	status,2,c
  3683  001DD0  D002               	goto	l232
  3684                           
  3685                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  3686  001DD2  868A               	bsf	3978,3,c	;volatile
  3687  001DD4  D001               	goto	l233
  3688  001DD6                     l232:
  3689                           
  3690                           ;unmc_lcd_216.c: 103: else
  3691                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  3692  001DD6  968A               	bcf	3978,3,c	;volatile
  3693  001DD8                     l233:
  3694                           
  3695                           ;unmc_lcd_216.c: 106: __nop();
  3696  001DD8  F000               	nop	
  3697                           
  3698                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  3699  001DDA  383A               	swapf	lcd_send_byte@n,w,c
  3700  001DDC  0B0F               	andlw	15
  3701  001DDE  EC24  F00E         	call	_lcd_send_nibble
  3702                           
  3703                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  3704  001DE2  503A               	movf	lcd_send_byte@n,w,c
  3705  001DE4  0B0F               	andlw	15
  3706  001DE6  EC24  F00E         	call	_lcd_send_nibble
  3707  001DEA  0012               	return		;funcret
  3708  001DEC                     __end_of_lcd_send_byte:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           intcon2	equ	0xFF1
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           postdec1	equ	0xFE5
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8
  3726                           
  3727 ;; *************** function _lcd_send_nibble *****************
  3728 ;; Defined at:
  3729 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  nibble          1    wreg     unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  nibble          1    1[COMRAM] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_lcd_send_byte
  3753 ;;		_lcd_init
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text14
  3758  001C48                     __ptext14:
  3759                           	opt stack 0
  3760  001C48                     _lcd_send_nibble:
  3761                           	opt stack 27
  3762                           
  3763                           ;incstack = 0
  3764                           ;lcd_send_nibble@nibble stored from wreg
  3765  001C48  6E39               	movwf	lcd_send_nibble@nibble,c
  3766                           
  3767                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  3768  001C4A  A039               	btfss	lcd_send_nibble@nibble,0,c
  3769  001C4C  D003               	goto	u10
  3770  001C4E  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3771  001C50  2A38               	incf	??_lcd_send_nibble& (0+255),f,c
  3772  001C52  D001               	goto	u28
  3773  001C54                     u10:
  3774  001C54  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3775  001C56                     u28:
  3776  001C56  3A38               	swapf	??_lcd_send_nibble,f,c
  3777  001C58  508A               	movf	3978,w,c	;volatile
  3778  001C5A  1838               	xorwf	??_lcd_send_nibble,w,c
  3779  001C5C  0BEF               	andlw	-17
  3780  001C5E  1838               	xorwf	??_lcd_send_nibble,w,c
  3781  001C60  6E8A               	movwf	3978,c	;volatile
  3782                           
  3783                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  3784  001C62  A239               	btfss	lcd_send_nibble@nibble,1,c
  3785  001C64  D003               	goto	u30
  3786  001C66  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3787  001C68  2A38               	incf	??_lcd_send_nibble& (0+255),f,c
  3788  001C6A  D001               	goto	u48
  3789  001C6C                     u30:
  3790  001C6C  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3791  001C6E                     u48:
  3792  001C6E  3A38               	swapf	??_lcd_send_nibble,f,c
  3793  001C70  4638               	rlncf	??_lcd_send_nibble,f,c
  3794  001C72  508A               	movf	3978,w,c	;volatile
  3795  001C74  1838               	xorwf	??_lcd_send_nibble,w,c
  3796  001C76  0BDF               	andlw	-33
  3797  001C78  1838               	xorwf	??_lcd_send_nibble,w,c
  3798  001C7A  6E8A               	movwf	3978,c	;volatile
  3799                           
  3800                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  3801  001C7C  A439               	btfss	lcd_send_nibble@nibble,2,c
  3802  001C7E  D003               	goto	u50
  3803  001C80  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3804  001C82  2A38               	incf	??_lcd_send_nibble& (0+255),f,c
  3805  001C84  D001               	goto	u68
  3806  001C86                     u50:
  3807  001C86  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3808  001C88                     u68:
  3809  001C88  3A38               	swapf	??_lcd_send_nibble,f,c
  3810  001C8A  4638               	rlncf	??_lcd_send_nibble,f,c
  3811  001C8C  4638               	rlncf	??_lcd_send_nibble,f,c
  3812  001C8E  508A               	movf	3978,w,c	;volatile
  3813  001C90  1838               	xorwf	??_lcd_send_nibble,w,c
  3814  001C92  0BBF               	andlw	-65
  3815  001C94  1838               	xorwf	??_lcd_send_nibble,w,c
  3816  001C96  6E8A               	movwf	3978,c	;volatile
  3817                           
  3818                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  3819  001C98  A639               	btfss	lcd_send_nibble@nibble,3,c
  3820  001C9A  D003               	goto	u70
  3821  001C9C  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3822  001C9E  2A38               	incf	??_lcd_send_nibble& (0+255),f,c
  3823  001CA0  D001               	goto	u88
  3824  001CA2                     u70:
  3825  001CA2  6A38               	clrf	??_lcd_send_nibble& (0+255),c
  3826  001CA4                     u88:
  3827  001CA4  3238               	rrcf	??_lcd_send_nibble,f,c
  3828  001CA6  3238               	rrcf	??_lcd_send_nibble,f,c
  3829  001CA8  508A               	movf	3978,w,c	;volatile
  3830  001CAA  1838               	xorwf	??_lcd_send_nibble,w,c
  3831  001CAC  0B7F               	andlw	-129
  3832  001CAE  1838               	xorwf	??_lcd_send_nibble,w,c
  3833  001CB0  6E8A               	movwf	3978,c	;volatile
  3834                           
  3835                           ;unmc_lcd_216.c: 32: __nop();
  3836  001CB2  F000               	nop	
  3837                           
  3838                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  3839  001CB4  848A               	bsf	3978,2,c	;volatile
  3840                           
  3841                           ;unmc_lcd_216.c: 34: __nop();__nop();
  3842  001CB6  F000               	nop	
  3843  001CB8  F000               	nop	
  3844                           
  3845                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  3846  001CBA  948A               	bcf	3978,2,c	;volatile
  3847  001CBC  0012               	return		;funcret
  3848  001CBE                     __end_of_lcd_send_nibble:
  3849                           	opt stack 0
  3850                           tblptru	equ	0xFF8
  3851                           tblptrh	equ	0xFF7
  3852                           tblptrl	equ	0xFF6
  3853                           tablat	equ	0xFF5
  3854                           prodh	equ	0xFF4
  3855                           prodl	equ	0xFF3
  3856                           intcon	equ	0xFF2
  3857                           intcon2	equ	0xFF1
  3858                           postinc0	equ	0xFEE
  3859                           wreg	equ	0xFE8
  3860                           postdec1	equ	0xFE5
  3861                           fsr1l	equ	0xFE1
  3862                           indf2	equ	0xFDF
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function _Delay100TCYx *****************
  3868 ;; Defined at:
  3869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  unit            1    wreg     unsigned char 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;  unit            1    0[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3887 ;;Total ram usage:        1 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_lcd_send_byte
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text15
  3897  001E30                     __ptext15:
  3898                           	opt stack 0
  3899  001E30                     _Delay100TCYx:
  3900                           	opt stack 27
  3901                           
  3902                           ;incstack = 0
  3903                           ;Delay100TCYx@unit stored from wreg
  3904  001E30  6E38               	movwf	Delay100TCYx@unit,c
  3905  001E32                     l564:
  3906  001E32  0E21               	movlw	33
  3907  001E34                     u2047:
  3908  001E34  2EE8               	decfsz	wreg,f,c
  3909  001E36  D7FE               	bra	u2047
  3910  001E38  F000               	nop	
  3911  001E3A  2E38               	decfsz	Delay100TCYx@unit,f,c
  3912  001E3C  D7FA               	goto	l564
  3913  001E3E  0012               	return	
  3914  001E40                     __end_of_Delay100TCYx:
  3915                           	opt stack 0
  3916                           tblptru	equ	0xFF8
  3917                           tblptrh	equ	0xFF7
  3918                           tblptrl	equ	0xFF6
  3919                           tablat	equ	0xFF5
  3920                           prodh	equ	0xFF4
  3921                           prodl	equ	0xFF3
  3922                           intcon	equ	0xFF2
  3923                           intcon2	equ	0xFF1
  3924                           postinc0	equ	0xFEE
  3925                           wreg	equ	0xFE8
  3926                           postdec1	equ	0xFE5
  3927                           fsr1l	equ	0xFE1
  3928                           indf2	equ	0xFDF
  3929                           fsr2h	equ	0xFDA
  3930                           fsr2l	equ	0xFD9
  3931                           status	equ	0xFD8
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           intcon2	equ	0xFF1
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           postdec1	equ	0xFE5
  3943                           fsr1l	equ	0xFE1
  3944                           indf2	equ	0xFDF
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949                           	psect	rparam
  3950  0000                     tblptru	equ	0xFF8
  3951                           tblptrh	equ	0xFF7
  3952                           tblptrl	equ	0xFF6
  3953                           tablat	equ	0xFF5
  3954                           prodh	equ	0xFF4
  3955                           prodl	equ	0xFF3
  3956                           intcon	equ	0xFF2
  3957                           intcon2	equ	0xFF1
  3958                           postinc0	equ	0xFEE
  3959                           wreg	equ	0xFE8
  3960                           postdec1	equ	0xFE5
  3961                           fsr1l	equ	0xFE1
  3962                           indf2	equ	0xFDF
  3963                           fsr2h	equ	0xFDA
  3964                           fsr2l	equ	0xFD9
  3965                           status	equ	0xFD8


Data Sizes:
    Strings     64
    Constant    4
    Data        12
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      88
    BANK0           160      0      28
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    lcd_putrs@ptr	PTR const unsigned char  size(3) Largest target is 65527
		 -> STR_22(CODE[2]), STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> ROM(CODE[65527]), STR_10(CODE[8]), STR_9(CODE[8]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[8]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _Write_RTC->_RtccWriteDate
    _Setup->_lcd_comand
    _Setup->_lcd_init
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   12168
                                             13 COMRAM     7     7      0
                              _Setup
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (1) _lcd_putrs                                            3     0      3    5836
                                              8 COMRAM     3     0      3
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    2751
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    2034
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (2) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (3) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0    1557
                         _lcd_comand
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     862
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     695
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1     673
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _Delay100TCYx                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1C       5       17.5%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     14      58       1       92.6%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74       6        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Sep 15 01:19:23 2017

                        _a 001D                          _b 001B                          _c 0019  
                        _i 0021                          _j 001F                          _k 0017  
                       u10 1C54                         u30 1C6C                         u50 1C86  
                       u28 1C56                         u70 1CA2                         u48 1C6E  
           ?_lcd_send_byte 003A                         u68 1C88                         u88 1CA4  
             ___awdiv@sign 003D                lcd_comand@d 003C               __CFG_CP0$OFF 000000  
                      l200 1606                        l201 160E                        l210 1718  
                      l211 1722                        l203 1628                        l204 1632  
                      l140 0F5A                        l205 17C0                        l141 0F9E  
                      l142 0FE2                        l207 16F6                        l232 1DD6  
                      l208 16FE                        l152 1066                        l233 1DD8  
                      l321 197C                        l161 113C                        l153 106E  
                      l145 1022                        l250 1CC2                        l170 1310  
                      l146 1026                        l163 1176                        l155 1088  
                      l332 1A48                        l244 1DF8                        l252 1CCE  
                      l180 133E                        l172 1246                        l156 1092  
                      l148 103C                        l237 1C00                        l253 1CDA  
                      l173 124E                        l165 11B0                        l157 10CA  
                      l149 1042                        l350 1A8E                        l254 1CE6  
                      l270 1D6E                        l190 1452                        l182 1358  
                      l239 1C22                        l327 19E0                        l271 1D4E  
                      l191 15E0                        l183 1362                        l175 1268  
                      l167 11EA                        l159 1102                        l328 1A3E  
                      l184 14F0                        l176 1272                        l361 1B44  
                      l249 1CF2                        l193 1516                        l177 1400  
                      l169 1222                        l530 1B62                        l194 151E  
                      l186 1426                        l531 1B72                        l187 142E  
                      l179 1336                        l356 1AE2                        l196 1538  
                      l357 1B3A                        l533 1B90                        l197 1542  
                      l189 1448                        l534 1B88                        l198 16D0  
                      l537 1BB0                        l538 1BBA                        l539 1BC8  
                      l564 1E32                        l578 1E22                        _dia 0050  
                      _mes 0054                        wreg 000FE8                lcd_gotoxy@x 003D  
              lcd_gotoxy@y 003C                       l1983 1C1A                       l1969 1BF8  
                     STR_1 0F41                       STR_2 0F3F                       STR_3 0F3F  
                     STR_4 0F2D                       STR_5 0F05                       STR_6 0F15  
                     STR_7 0F25                       STR_8 0F1D                       STR_9 0F35  
                     u1310 1B94                       u2007 16C8                       u2017 17B8  
                     u1250 1C10                       u2027 17C6                       u2037 1E24  
                     u2047 1E34                       u1907 10F8                       u1917 1132  
                     u1927 116C                       u1937 11A6                       u1947 11E0  
                     u1957 121A                       u1877 0F94                       u1967 1308  
                     u1887 0FD8                       u1977 13F8                       u1897 10C0  
                     u1987 14E8                       u1997 15D8           ?_lcd_send_nibble 0038  
                     _anio 0056                       _flag 02C0                       _main 0F46  
                     _hora 004E                       fsr2h 000FDA                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9              __CFG_T1DIG$ON 000000  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
            __CFG_IESO$OFF 000000               ___param_bank 000000                _Delay1KTCYx 1E20  
            __CFG_PLLDIV$1 000000                      ?_main 0038            __end_of___awdiv 1BD2  
                    STR_10 0F0D                      STR_11 0F3D                      STR_12 0F3D  
                    STR_20 0F43                      STR_13 0F3D                      STR_21 0F43  
                    STR_14 0F3D                      STR_22 0F43                      STR_15 0F3D  
                    STR_16 0F3D                      STR_17 0F43                      STR_18 0F43  
                    STR_19 0F43      __size_of_Delay100TCYx 0010            ___awdiv@divisor 003A  
          ___awdiv@counter 003C                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94             __CFG_FCMEN$OFF 000000                      _Setup 1D86  
                    _mes_d 0026                      _mes_u 0027             __pbitbssCOMRAM 02C0  
                    tablat 000FF5               lcd_putrs@ptr 0040                      status 000FD8  
  __CFG_DSWDTOSC$INTOSCREF 000000            __initialization 1D08               _Delay100TCYx 1E30  
             __end_of_main 17D4            ??_lcd_send_byte 003B                     ??_main 0045  
            __activetblptr 000002           __end_of_RtccWrOn 1E20                     ?_Setup 0038  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _EECON2 000FA7  
                   _ANCON0 000F48                     _ANCON1 000F49           ___awdiv@dividend 0038  
           __CFG_WDTEN$OFF 000000           RtccWriteDate@pDt 0038                     _RTCCFG 000F3F  
           __CFG_WPCFG$OFF 000000             __CFG_WPDIS$OFF 000000             __CFG_XINST$OFF 000000  
         __end_of_lcd_init 1C48           __end_of_lcd_putc 1D08                  ??___awdiv 003C  
           __CFG_STVREN$ON 000000                     _diasem 0052                     _anio_d 0023  
                   _anio_u 0024                     _hora_d 002A                     _hora_u 002B  
                   clear_0 1D2E                     clear_1 1D3C           ___awdiv@quotient 003E  
                   _minuto 004C      __end_of_RtccWriteDate 1A52      __end_of_RtccWriteTime 1B4E  
         RtccWriteTime@pTm 0038               __pdataCOMRAM 004C               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0060    __end_of__initialization 1D42         __size_of_Write_RTC 0148  
            ___rparam_used 000001             __pcstackCOMRAM 0038              __end_of_Setup 1DBA  
          __CFG_DSWDTPS$G2 000000            __CFG_OSC$INTOSC 000000                    ??_Setup 003D  
        lcd_gotoxy@address 003E         __size_of_lcd_putrs 003A                 __pbssBANK0 0060  
               _dia_semana 0025  RtccWriteTime@tempHourWDay 0041                  ?_RtccWrOn 0038  
           lcd_send_byte@n 003A               ?_Delay1KTCYx 0038          __end_of_Write_RTC 191C  
               _lcd_comand 1E40                 _lcd_gotoxy 1DEC                    _RTCVALH 000F99  
                  _RTCVALL 000F98                  ?_lcd_init 0038                  ?_lcd_putc 0038  
                  __Hparam 0000                    __Lparam 0000   __size_of_lcd_send_nibble 0076  
               ??_RtccWrOn 0038                    ___awdiv 1B4E          __end_of_lcd_putrs 1D86  
             __psmallconst 0F00                _RtccTimeVal 0011                    __pcinit 1D08  
                  _fecha_d 0028                    _fecha_u 0029                    __ramtop 0F00  
                  __ptext0 0F46                    __ptext1 1D4C                    __ptext2 1CBE  
                  __ptext3 1DEC                    __ptext4 17D4                    __ptext5 1B4E  
                  __ptext6 1A52                    __ptext7 191C                    __ptext8 1E0E  
                  __ptext9 1D86                    _buffer2 0060                  _T1CONbits 000FCD  
                  _segundo 0015                 ??_lcd_init 003C                 ??_lcd_putc 003F  
     end_of_initialization 1D42       lcd_send_byte@address 003B              __Lmediumconst 0000  
                  postdec1 000FE5                    postinc0 000FEE      __end_of_lcd_send_byte 1DEC  
                _PORTAbits 000F80           __CFG_DSBOREN$OFF 000000                ?_lcd_comand 0038  
         __CFG_CPUDIV$OSC1 000000                  _TRISBbits 000F93                ?_lcd_gotoxy 003C  
          _LCD_INIT_STRING 0F01           __CFG_IOL1WAY$OFF 000000  RtccWriteDate@tempDayMonth 0041  
      __CFG_MSSP7B_EN$MSK7 000000           Delay100TCYx@unit 0038              __pidataCOMRAM 1E4E  
RtccWriteDate@tempHourWDay 0043          ??_lcd_send_nibble 0038       __size_of_Delay1KTCYx 0010  
         __CFG_DSWDTEN$OFF 000000        start_initialization 1D08       RtccWriteTime@wasAlrm 003D  
     RtccWriteTime@wasWrEn 003E     __size_of_RtccWriteDate 0136            RtccWriteDate@di 003A  
   __size_of_RtccWriteTime 00FC        __size_of_lcd_comand 000E        __size_of_lcd_gotoxy 0022  
        __size_of_RtccWrOn 0012            RtccWriteTime@di 003A           __CFG_LPT1OSC$OFF 000000  
              _ALRMCFGbits 000F91    __end_of_LCD_INIT_STRING 0F05                __pbssCOMRAM 0001  
    main@boton_seleccionar 004A                  _Write_RTC 17D4            Delay1KTCYx@unit 0038  
        __size_of_lcd_init 0076          __size_of_lcd_putc 004A              ?_Delay100TCYx 0038  
                 ?___awdiv 0038    RtccWriteTime@tempMinSec 003F                  _lcd_putrs 1D4C  
  main@boton_centro_estado 0048              _RtccWriteDate 191C                __smallconst 0F00  
            _RtccWriteTime 1A52       __CFG_RTCOSC$T1OSCREF 000000             __size_of_Setup 0034  
               ?_Write_RTC 0038           _RtccAlrmTimeDate 0001                   _LATBbits 000F8A  
                 _PIE3bits 000FA3                  _segundo_d 002E             ??_Delay100TCYx 0038  
                _segundo_u 002F           __CFG_WDTPS$32768 000000         RtccWriteDate@wasOn 003C  
       _Rtcc_read_TimeDate 0074             ?_RtccWriteDate 0038                 ?_lcd_putrs 0040  
           ?_RtccWriteTime 0038                  lcd_init@i 003C               ??_lcd_comand 003C  
                lcd_putc@c 003F               ??_lcd_gotoxy 003D                _INTCON2bits 000FF1  
                copy_data0 1D1C            _lcd_send_nibble 1C48                   __Hrparam 0000  
                 _RtccDate 0030                   __Lrparam 0000                   _RtccTime 0034  
                 _RtccWrOn 1E0E         __end_of_lcd_comand 1E4E         __end_of_lcd_gotoxy 1E0E  
         __size_of___awdiv 0084               _RtccTimeDate 0009                ??_Write_RTC 0045  
                 __ptext10 1BD2                   __ptext11 1E20                   __ptext12 1E40  
                 __ptext13 1DBA                   __ptext14 1C48                   __ptext15 1E30  
                 _lcd_init 1BD2                   _lcd_putc 1CBE     __size_of_lcd_send_byte 0032  
            __size_of_main 088E                   _minuto_d 002C                   _minuto_u 002D  
            ??_Delay1KTCYx 0038            ??_RtccWriteDate 003B            ??_RtccWriteTime 003B  
              ??_lcd_putrs 0043                _OSCTUNEbits 000F9B                 _INTCONbits 000FF2  
       RtccWriteTime@wasOn 003C       __end_of_Delay100TCYx 1E40    __end_of_lcd_send_nibble 1CBE  
               _OSCCONbits 000FD3      RtccWriteDate@tempYear 003E              _lcd_send_byte 1DBA  
               _RTCCFGbits 000F3F        __end_of_Delay1KTCYx 1E30       RtccWriteDate@wasAlrm 003D  
     RtccWriteDate@wasWrEn 0040      lcd_send_nibble@nibble 0039  
