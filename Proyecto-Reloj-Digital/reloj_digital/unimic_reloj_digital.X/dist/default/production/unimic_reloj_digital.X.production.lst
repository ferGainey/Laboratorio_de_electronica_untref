

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Fri Sep 22 20:46:43 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46  0000                     
    47                           ; Version 1.43
    48                           ; Generated 25/07/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F26J50 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     
    82                           	psect	idataCOMRAM
    83  0024E6                     __pidataCOMRAM:
    84                           	opt stack 0
    85                           
    86                           ;initializer for _minuto
    87  0024E6  001E               	dw	30
    88                           
    89                           ;initializer for _hora
    90  0024E8  0012               	dw	18
    91                           
    92                           ;initializer for _dia
    93  0024EA  0008               	dw	8
    94                           
    95                           ;initializer for _diasem
    96  0024EC  0003               	dw	3
    97                           
    98                           ;initializer for _mes
    99  0024EE  0009               	dw	9
   100                           
   101                           ;initializer for _anio
   102  0024F0  000F               	dw	15
   103                           
   104                           	psect	idataBANK0
   105  00245A                     __pidataBANK0:
   106                           	opt stack 0
   107                           
   108                           ;initializer for _array_seleccionar
   109  00245A  BF                 	db	low STR_1
   110  00245B  0F                 	db	high STR_1
   111  00245C  BA                 	db	low STR_2
   112  00245D  0F                 	db	high STR_2
   113  00245E  DD                 	db	low STR_3
   114  00245F  0F                 	db	high STR_3
   115  002460  D8                 	db	low STR_4
   116  002461  0F                 	db	high STR_4
   117  002462  C4                 	db	low STR_5
   118  002463  0F                 	db	high STR_5
   119  002464  D3                 	db	low STR_6
   120  002465  0F                 	db	high STR_6
   121  002466  CE                 	db	low STR_7
   122  002467  0F                 	db	high STR_7
   123  002468  C9                 	db	low STR_8
   124  002469  0F                 	db	high STR_8
   125                           
   126                           ;initializer for _array_boton_seleccionar_tamanio_cafe
   127  00246A  36                 	db	low STR_12
   128  00246B  0F                 	db	high STR_12
   129  00246C  51                 	db	low STR_13
   130  00246D  0F                 	db	high STR_13
   131  00246E  48                 	db	low STR_14
   132  00246F  0F                 	db	high STR_14
   133                           
   134                           ;initializer for _array_boton_seleccionar_tipo_cafe
   135  002470  9B                 	db	low STR_9
   136  002471  0F                 	db	high STR_9
   137  002472  63                 	db	low STR_10
   138  002473  0F                 	db	high STR_10
   139  002474  8B                 	db	low STR_11
   140  002475  0F                 	db	high STR_11
   141                           
   142                           ;initializer for _array_boton_seleccionar_accion_cafe
   143  002476  3F                 	db	low STR_15
   144  002477  0F                 	db	high STR_15
   145  002478  5A                 	db	low STR_16
   146  002479  0F                 	db	high STR_16
   147                           
   148                           	psect	smallconst
   149  000F00                     __psmallconst:
   150                           	opt stack 0
   151  000F00  00                 	db	0
   152  000F01                     _dpowers:
   153                           	opt stack 0
   154  000F01  0001               	dw	1
   155  000F03  000A               	dw	10
   156  000F05  0064               	dw	100
   157  000F07  03E8               	dw	1000
   158  000F09  2710               	dw	10000
   159  000F0B                     __end_of_dpowers:
   160                           	opt stack 0
   161  000F0B                     _LCD_INIT_STRING:
   162                           	opt stack 0
   163  000F0B  28                 	db	40
   164  000F0C  0C                 	db	12
   165  000F0D  01                 	db	1
   166  000F0E  06                 	db	6
   167  000F0F                     __end_of_LCD_INIT_STRING:
   168                           	opt stack 0
   169  0000                     _RTCCFG	set	3903
   170  0000                     _ANCON1	set	3913
   171  0000                     _ANCON0	set	3912
   172  0000                     _RTCCFGbits	set	3903
   173  0000                     _ALRMCFGbits	set	3985
   174  0000                     _EECON2	set	4007
   175  0000                     _INTCONbits	set	4082
   176  0000                     _RTCVALH	set	3993
   177  0000                     _RTCVALL	set	3992
   178  0000                     _TRISBbits	set	3987
   179  0000                     _LATBbits	set	3978
   180  0000                     _PORTAbits	set	3968
   181  0000                     _T1CONbits	set	4045
   182  0000                     _ADCON1	set	4033
   183  0000                     _ADCON0	set	4034
   184  0000                     _INTCON2bits	set	4081
   185  0000                     _TRISC	set	3988
   186  0000                     _TRISB	set	3987
   187  0000                     _TRISA	set	3986
   188  0000                     _OSCCONbits	set	4051
   189  0000                     _OSCTUNEbits	set	3995
   190  0000                     _PIE3bits	set	4003
   191  000F0F                     STR_24:
   192                           
   193                           ; BSR set to: 15
   194  000F0F  25                 	db	37
   195  000F10  30                 	db	48	;'0'
   196  000F11  32                 	db	50	;'2'
   197  000F12  75                 	db	117	;'u'
   198  000F13  2F                 	db	47
   199  000F14  25                 	db	37
   200  000F15  30                 	db	48	;'0'
   201  000F16  32                 	db	50	;'2'
   202  000F17  75                 	db	117	;'u'
   203  000F18  2F                 	db	47
   204  000F19  25                 	db	37
   205  000F1A  30                 	db	48	;'0'
   206  000F1B  32                 	db	50	;'2'
   207  000F1C  75                 	db	117	;'u'
   208  000F1D  00                 	db	0
   209  000F1E                     STR_25:
   210                           
   211                           ; BSR set to: 15
   212  000F1E  25                 	db	37
   213  000F1F  30                 	db	48	;'0'
   214  000F20  32                 	db	50	;'2'
   215  000F21  75                 	db	117	;'u'
   216  000F22  3A                 	db	58	;':'
   217  000F23  25                 	db	37
   218  000F24  30                 	db	48	;'0'
   219  000F25  32                 	db	50	;'2'
   220  000F26  75                 	db	117	;'u'
   221  000F27  3A                 	db	58	;':'
   222  000F28  25                 	db	37
   223  000F29  30                 	db	48	;'0'
   224  000F2A  32                 	db	50	;'2'
   225  000F2B  75                 	db	117	;'u'
   226  000F2C  00                 	db	0
   227  000F2D                     STR_27:
   228                           
   229                           ; BSR set to: 15
   230  000F2D  20                 	db	32
   231  000F2E  20                 	db	32
   232  000F2F  20                 	db	32
   233  000F30  20                 	db	32
   234  000F31  20                 	db	32
   235  000F32  20                 	db	32
   236  000F33  20                 	db	32
   237  000F34  20                 	db	32
   238  000F35  00                 	db	0
   239  000F36                     STR_12:
   240                           
   241                           ; BSR set to: 15
   242  000F36  43                 	db	67	;'C'
   243  000F37  68                 	db	104	;'h'
   244  000F38  69                 	db	105	;'i'
   245  000F39  63                 	db	99	;'c'
   246  000F3A  6F                 	db	111	;'o'
   247  000F3B  20                 	db	32
   248  000F3C  20                 	db	32
   249  000F3D  20                 	db	32
   250  000F3E  00                 	db	0
   251  000F3F                     STR_15:
   252                           
   253                           ; BSR set to: 15
   254  000F3F  50                 	db	80	;'P'
   255  000F40  65                 	db	101	;'e'
   256  000F41  64                 	db	100	;'d'
   257  000F42  69                 	db	105	;'i'
   258  000F43  72                 	db	114	;'r'
   259  000F44  20                 	db	32
   260  000F45  20                 	db	32
   261  000F46  20                 	db	32
   262  000F47  00                 	db	0
   263  000F48                     STR_14:
   264                           
   265                           ; BSR set to: 15
   266  000F48  47                 	db	71	;'G'
   267  000F49  72                 	db	114	;'r'
   268  000F4A  61                 	db	97	;'a'
   269  000F4B  6E                 	db	110	;'n'
   270  000F4C  64                 	db	100	;'d'
   271  000F4D  65                 	db	101	;'e'
   272  000F4E  20                 	db	32
   273  000F4F  20                 	db	32
   274  000F50  00                 	db	0
   275  000F51                     STR_13:
   276                           
   277                           ; BSR set to: 15
   278  000F51  4D                 	db	77	;'M'
   279  000F52  65                 	db	101	;'e'
   280  000F53  64                 	db	100	;'d'
   281  000F54  69                 	db	105	;'i'
   282  000F55  61                 	db	97	;'a'
   283  000F56  6E                 	db	110	;'n'
   284  000F57  6F                 	db	111	;'o'
   285  000F58  20                 	db	32
   286  000F59  00                 	db	0
   287  000F5A                     STR_16:
   288                           
   289                           ; BSR set to: 15
   290  000F5A  54                 	db	84	;'T'
   291  000F5B  65                 	db	101	;'e'
   292  000F5C  72                 	db	114	;'r'
   293  000F5D  6D                 	db	109	;'m'
   294  000F5E  69                 	db	105	;'i'
   295  000F5F  6E                 	db	110	;'n'
   296  000F60  61                 	db	97	;'a'
   297  000F61  72                 	db	114	;'r'
   298  000F62  00                 	db	0
   299  000F63                     STR_10:
   300                           
   301                           ; BSR set to: 15
   302  000F63  53                 	db	83	;'S'
   303  000F64  6F                 	db	111	;'o'
   304  000F65  6C                 	db	108	;'l'
   305  000F66  6F                 	db	111	;'o'
   306  000F67  20                 	db	32
   307  000F68  20                 	db	32
   308  000F69  20                 	db	32
   309  000F6A  00                 	db	0
   310  000F6B                     STR_18:
   311                           
   312                           ; BSR set to: 15
   313  000F6B  4C                 	db	76	;'L'
   314  000F6C  75                 	db	117	;'u'
   315  000F6D  6E                 	db	110	;'n'
   316  000F6E  65                 	db	101	;'e'
   317  000F6F  73                 	db	115	;'s'
   318  000F70  20                 	db	32
   319  000F71  20                 	db	32
   320  000F72  00                 	db	0
   321  000F73                     STR_23:
   322                           
   323                           ; BSR set to: 15
   324  000F73  53                 	db	83	;'S'
   325  000F74  61                 	db	97	;'a'
   326  000F75  62                 	db	98	;'b'
   327  000F76  61                 	db	97	;'a'
   328  000F77  64                 	db	100	;'d'
   329  000F78  6F                 	db	111	;'o'
   330  000F79  20                 	db	32
   331  000F7A  00                 	db	0
   332  000F7B                     STR_19:
   333                           
   334                           ; BSR set to: 15
   335  000F7B  4D                 	db	77	;'M'
   336  000F7C  61                 	db	97	;'a'
   337  000F7D  72                 	db	114	;'r'
   338  000F7E  74                 	db	116	;'t'
   339  000F7F  65                 	db	101	;'e'
   340  000F80  73                 	db	115	;'s'
   341  000F81  20                 	db	32
   342  000F82  00                 	db	0
   343  000F83                     STR_21:
   344                           
   345                           ; BSR set to: 15
   346  000F83  4A                 	db	74	;'J'
   347  000F84  75                 	db	117	;'u'
   348  000F85  65                 	db	101	;'e'
   349  000F86  76                 	db	118	;'v'
   350  000F87  65                 	db	101	;'e'
   351  000F88  73                 	db	115	;'s'
   352  000F89  20                 	db	32
   353  000F8A  00                 	db	0
   354  000F8B                     STR_11:
   355                           
   356                           ; BSR set to: 15
   357  000F8B  43                 	db	67	;'C'
   358  000F8C  2F                 	db	47
   359  000F8D  4C                 	db	76	;'L'
   360  000F8E  65                 	db	101	;'e'
   361  000F8F  63                 	db	99	;'c'
   362  000F90  68                 	db	104	;'h'
   363  000F91  65                 	db	101	;'e'
   364  000F92  00                 	db	0
   365  000F93                     STR_20:
   366                           
   367                           ; BSR set to: 15
   368  000F93  4D                 	db	77	;'M'
   369  000F94  69                 	db	105	;'i'
   370  000F95  65                 	db	101	;'e'
   371  000F96  72                 	db	114	;'r'
   372  000F97  63                 	db	99	;'c'
   373  000F98  6F                 	db	111	;'o'
   374  000F99  6C                 	db	108	;'l'
   375  000F9A  00                 	db	0
   376  000F9B                     STR_9:
   377                           
   378                           ; BSR set to: 15
   379  000F9B  43                 	db	67	;'C'
   380  000F9C  6F                 	db	111	;'o'
   381  000F9D  72                 	db	114	;'r'
   382  000F9E  74                 	db	116	;'t'
   383  000F9F  61                 	db	97	;'a'
   384  000FA0  64                 	db	100	;'d'
   385  000FA1  6F                 	db	111	;'o'
   386  000FA2  00                 	db	0
   387  000FA3                     STR_17:
   388                           
   389                           ; BSR set to: 15
   390  000FA3  44                 	db	68	;'D'
   391  000FA4  6F                 	db	111	;'o'
   392  000FA5  6D                 	db	109	;'m'
   393  000FA6  69                 	db	105	;'i'
   394  000FA7  6E                 	db	110	;'n'
   395  000FA8  67                 	db	103	;'g'
   396  000FA9  6F                 	db	111	;'o'
   397  000FAA  00                 	db	0
   398  000FAB                     STR_22:
   399                           
   400                           ; BSR set to: 15
   401  000FAB  56                 	db	86	;'V'
   402  000FAC  69                 	db	105	;'i'
   403  000FAD  65                 	db	101	;'e'
   404  000FAE  72                 	db	114	;'r'
   405  000FAF  6E                 	db	110	;'n'
   406  000FB0  65                 	db	101	;'e'
   407  000FB1  73                 	db	115	;'s'
   408  000FB2  00                 	db	0
   409  000FB3                     STR_32:
   410                           
   411                           ; BSR set to: 15
   412  000FB3  28                 	db	40
   413  000FB4  6E                 	db	110	;'n'
   414  000FB5  75                 	db	117	;'u'
   415  000FB6  6C                 	db	108	;'l'
   416  000FB7  6C                 	db	108	;'l'
   417  000FB8  29                 	db	41
   418  000FB9  00                 	db	0
   419  000FBA                     STR_2:
   420                           
   421                           ; BSR set to: 15
   422  000FBA  20                 	db	32
   423  000FBB  44                 	db	68	;'D'
   424  000FBC  69                 	db	105	;'i'
   425  000FBD  61                 	db	97	;'a'
   426  000FBE  00                 	db	0
   427  000FBF                     STR_1:
   428                           
   429                           ; BSR set to: 15
   430  000FBF  4E                 	db	78	;'N'
   431  000FC0  64                 	db	100	;'d'
   432  000FC1  69                 	db	105	;'i'
   433  000FC2  61                 	db	97	;'a'
   434  000FC3  00                 	db	0
   435  000FC4                     STR_5:
   436                           
   437                           ; BSR set to: 15
   438  000FC4  48                 	db	72	;'H'
   439  000FC5  6F                 	db	111	;'o'
   440  000FC6  72                 	db	114	;'r'
   441  000FC7  61                 	db	97	;'a'
   442  000FC8  00                 	db	0
   443  000FC9                     STR_8:
   444                           
   445                           ; BSR set to: 15
   446  000FC9  43                 	db	67	;'C'
   447  000FCA  61                 	db	97	;'a'
   448  000FCB  66                 	db	102	;'f'
   449  000FCC  65                 	db	101	;'e'
   450  000FCD  00                 	db	0
   451  000FCE                     STR_7:
   452                           
   453                           ; BSR set to: 15
   454  000FCE  20                 	db	32
   455  000FCF  53                 	db	83	;'S'
   456  000FD0  65                 	db	101	;'e'
   457  000FD1  67                 	db	103	;'g'
   458  000FD2  00                 	db	0
   459  000FD3                     STR_6:
   460                           
   461                           ; BSR set to: 15
   462  000FD3  20                 	db	32
   463  000FD4  4D                 	db	77	;'M'
   464  000FD5  69                 	db	105	;'i'
   465  000FD6  6E                 	db	110	;'n'
   466  000FD7  00                 	db	0
   467  000FD8                     STR_4:
   468                           
   469                           ; BSR set to: 15
   470  000FD8  41                 	db	65	;'A'
   471  000FD9  6E                 	db	110	;'n'
   472  000FDA  69                 	db	105	;'i'
   473  000FDB  6F                 	db	111	;'o'
   474  000FDC  00                 	db	0
   475  000FDD                     STR_3:
   476                           
   477                           ; BSR set to: 15
   478  000FDD  20                 	db	32
   479  000FDE  4D                 	db	77	;'M'
   480  000FDF  65                 	db	101	;'e'
   481  000FE0  73                 	db	115	;'s'
   482  000FE1  00                 	db	0
   483  000FE2                     STR_26:
   484                           
   485                           ; BSR set to: 15
   486  000FE2  45                 	db	69	;'E'
   487  000FE3  64                 	db	100	;'d'
   488  000FE4  74                 	db	116	;'t'
   489  000FE5  00                 	db	0
   490  000FE6                     STR_28:
   491                           
   492                           ; BSR set to: 15
   493  000FE6  25                 	db	37
   494  000FE7  73                 	db	115	;'s'
   495  000FE8  00                 	db	0
   496  0000                     
   497                           ; #config settings
   498  000FE9  00                 	db	0	; dummy byte at the end
   499  0000                     
   500                           	psect	cinit
   501  002122                     __pcinit:
   502                           	opt stack 0
   503  002122                     start_initialization:
   504                           	opt stack 0
   505  002122                     __initialization:
   506                           	opt stack 0
   507                           
   508                           ; Initialize objects allocated to BANK0 (32 bytes)
   509                           ; load TBLPTR registers with __pidataBANK0
   510  002122  0E5A               	movlw	low __pidataBANK0
   511  002124  6EF6               	movwf	tblptrl,c
   512  002126  0E24               	movlw	high __pidataBANK0
   513  002128  6EF7               	movwf	tblptrh,c
   514  00212A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   515  00212C  6EF8               	movwf	tblptru,c
   516  00212E  EE00  F0D2         	lfsr	0,__pdataBANK0
   517  002132  EE10 F020          	lfsr	1,32
   518  002136                     copy_data0:
   519  002136  0009               	tblrd		*+
   520  002138  CFF5 FFEE          	movff	tablat,postinc0
   521  00213C  50E5               	movf	postdec1,w,c
   522  00213E  50E1               	movf	fsr1l,w,c
   523  002140  E1FA               	bnz	copy_data0
   524                           
   525                           ; Initialize objects allocated to COMRAM (12 bytes)
   526                           ; load TBLPTR registers with __pidataCOMRAM
   527  002142  0EE6               	movlw	low __pidataCOMRAM
   528  002144  6EF6               	movwf	tblptrl,c
   529  002146  0E24               	movlw	high __pidataCOMRAM
   530  002148  6EF7               	movwf	tblptrh,c
   531  00214A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   532  00214C  6EF8               	movwf	tblptru,c
   533  00214E  EE00  F052         	lfsr	0,__pdataCOMRAM
   534  002152  EE10 F00C          	lfsr	1,12
   535  002156                     copy_data1:
   536  002156  0009               	tblrd		*+
   537  002158  CFF5 FFEE          	movff	tablat,postinc0
   538  00215C  50E5               	movf	postdec1,w,c
   539  00215E  50E1               	movf	fsr1l,w,c
   540  002160  E1FA               	bnz	copy_data1
   541                           
   542                           ; Clear objects allocated to BANK1 (20 bytes)
   543  002162  EE01  F000         	lfsr	0,__pbssBANK1
   544  002166  0E14               	movlw	20
   545  002168                     clear_0:
   546  002168  6AEE               	clrf	postinc0,c
   547  00216A  06E8               	decf	wreg,f,c
   548  00216C  E1FD               	bnz	clear_0
   549                           
   550                           ; Clear objects allocated to BANK0 (114 bytes)
   551  00216E  EE00  F060         	lfsr	0,__pbssBANK0
   552  002172  0E72               	movlw	114
   553  002174                     clear_1:
   554  002174  6AEE               	clrf	postinc0,c
   555  002176  06E8               	decf	wreg,f,c
   556  002178  E1FD               	bnz	clear_1
   557                           
   558                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   559  00217A  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   560                           
   561                           ; Clear objects allocated to COMRAM (29 bytes)
   562  00217C  EE00  F035         	lfsr	0,__pbssCOMRAM
   563  002180  0E1D               	movlw	29
   564  002182                     clear_2:
   565  002182  6AEE               	clrf	postinc0,c
   566  002184  06E8               	decf	wreg,f,c
   567  002186  E1FD               	bnz	clear_2
   568  002188                     end_of_initialization:
   569                           	opt stack 0
   570  002188                     __end_of__initialization:
   571                           	opt stack 0
   572  002188  0E00               	movlw	low (__Lmediumconst shr (0+16))
   573  00218A  6EF8               	movwf	tblptru,c
   574  00218C  0100               	movlb	0
   575  00218E  EFF5  F007         	goto	_main	;jump to C main() function
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           postinc0	equ	0xFEE
   581                           wreg	equ	0xFE8
   582                           postdec1	equ	0xFE5
   583                           fsr1l	equ	0xFE1
   584                           
   585                           	psect	bitbssCOMRAM
   586  0002F0                     __pbitbssCOMRAM:
   587                           	opt stack 0
   588  0002F0                     _flag:
   589                           	opt stack 0
   590  0002F0                     	ds	1
   591                           tblptru	equ	0xFF8
   592                           tblptrh	equ	0xFF7
   593                           tblptrl	equ	0xFF6
   594                           tablat	equ	0xFF5
   595                           postinc0	equ	0xFEE
   596                           wreg	equ	0xFE8
   597                           postdec1	equ	0xFE5
   598                           fsr1l	equ	0xFE1
   599                           
   600                           	psect	bssCOMRAM
   601  000035                     __pbssCOMRAM:
   602                           	opt stack 0
   603  000035                     _segundo:
   604                           	opt stack 0
   605  000035                     	ds	2
   606  000037                     _a:
   607                           	opt stack 0
   608  000037                     	ds	2
   609  000039                     _j:
   610                           	opt stack 0
   611  000039                     	ds	2
   612  00003B                     _i:
   613                           	opt stack 0
   614  00003B                     	ds	2
   615  00003D                     _anio_d:
   616                           	opt stack 0
   617  00003D                     	ds	1
   618  00003E                     _anio_u:
   619                           	opt stack 0
   620  00003E                     	ds	1
   621  00003F                     _dia_semana:
   622                           	opt stack 0
   623  00003F                     	ds	1
   624  000040                     _mes_d:
   625                           	opt stack 0
   626  000040                     	ds	1
   627  000041                     _mes_u:
   628                           	opt stack 0
   629  000041                     	ds	1
   630  000042                     _fecha_d:
   631                           	opt stack 0
   632  000042                     	ds	1
   633  000043                     _fecha_u:
   634                           	opt stack 0
   635  000043                     	ds	1
   636  000044                     _hora_d:
   637                           	opt stack 0
   638  000044                     	ds	1
   639  000045                     _hora_u:
   640                           	opt stack 0
   641  000045                     	ds	1
   642  000046                     _minuto_d:
   643                           	opt stack 0
   644  000046                     	ds	1
   645  000047                     _minuto_u:
   646                           	opt stack 0
   647  000047                     	ds	1
   648  000048                     _segundo_d:
   649                           	opt stack 0
   650  000048                     	ds	1
   651  000049                     _segundo_u:
   652                           	opt stack 0
   653  000049                     	ds	1
   654  00004A                     _RtccDate:
   655                           	opt stack 0
   656  00004A                     	ds	4
   657  00004E                     _RtccTime:
   658                           	opt stack 0
   659  00004E                     	ds	4
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           
   669                           	psect	dataCOMRAM
   670  000052                     __pdataCOMRAM:
   671                           	opt stack 0
   672  000052                     _minuto:
   673                           	opt stack 0
   674  000052                     	ds	2
   675  000054                     _hora:
   676                           	opt stack 0
   677  000054                     	ds	2
   678  000056                     _dia:
   679                           	opt stack 0
   680  000056                     	ds	2
   681  000058                     _diasem:
   682                           	opt stack 0
   683  000058                     	ds	2
   684  00005A                     _mes:
   685                           	opt stack 0
   686  00005A                     	ds	2
   687  00005C                     _anio:
   688                           	opt stack 0
   689  00005C                     	ds	2
   690                           tblptru	equ	0xFF8
   691                           tblptrh	equ	0xFF7
   692                           tblptrl	equ	0xFF6
   693                           tablat	equ	0xFF5
   694                           postinc0	equ	0xFEE
   695                           wreg	equ	0xFE8
   696                           postdec1	equ	0xFE5
   697                           fsr1l	equ	0xFE1
   698                           
   699                           	psect	bssBANK0
   700  000060                     __pbssBANK0:
   701                           	opt stack 0
   702  000060                     _Rtcc_read_TimeDate:
   703                           	opt stack 0
   704  000060                     	ds	8
   705  000068                     _RtccAlrmTimeDate:
   706                           	opt stack 0
   707  000068                     	ds	8
   708  000070                     _RtccTimeDate:
   709                           	opt stack 0
   710  000070                     	ds	8
   711  000078                     _RtccTimeVal:
   712                           	opt stack 0
   713  000078                     	ds	4
   714  00007C                     _k:
   715                           	opt stack 0
   716  00007C                     	ds	2
   717  00007E                     _c:
   718                           	opt stack 0
   719  00007E                     	ds	2
   720  000080                     _b:
   721                           	opt stack 0
   722  000080                     	ds	2
   723  000082                     _buffer5:
   724                           	opt stack 0
   725  000082                     	ds	20
   726  000096                     _buffer4:
   727                           	opt stack 0
   728  000096                     	ds	20
   729  0000AA                     _buffer3:
   730                           	opt stack 0
   731  0000AA                     	ds	20
   732  0000BE                     _buffer2:
   733                           	opt stack 0
   734  0000BE                     	ds	20
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           postinc0	equ	0xFEE
   740                           wreg	equ	0xFE8
   741                           postdec1	equ	0xFE5
   742                           fsr1l	equ	0xFE1
   743                           
   744                           	psect	dataBANK0
   745  0000D2                     __pdataBANK0:
   746                           	opt stack 0
   747  0000D2                     _array_seleccionar:
   748                           	opt stack 0
   749  0000D2                     	ds	16
   750  0000E2                     _array_boton_seleccionar_tamanio_cafe:
   751                           	opt stack 0
   752  0000E2                     	ds	6
   753  0000E8                     _array_boton_seleccionar_tipo_cafe:
   754                           	opt stack 0
   755  0000E8                     	ds	6
   756  0000EE                     _array_boton_seleccionar_accion_cafe:
   757                           	opt stack 0
   758  0000EE                     	ds	4
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           postdec1	equ	0xFE5
   766                           fsr1l	equ	0xFE1
   767                           
   768                           	psect	bssBANK1
   769  000100                     __pbssBANK1:
   770                           	opt stack 0
   771  000100                     _buffer1:
   772                           	opt stack 0
   773  000100                     	ds	20
   774                           tblptru	equ	0xFF8
   775                           tblptrh	equ	0xFF7
   776                           tblptrl	equ	0xFF6
   777                           tablat	equ	0xFF5
   778                           postinc0	equ	0xFEE
   779                           wreg	equ	0xFE8
   780                           postdec1	equ	0xFE5
   781                           fsr1l	equ	0xFE1
   782                           
   783                           	psect	cstackCOMRAM
   784  000001                     __pcstackCOMRAM:
   785                           	opt stack 0
   786  000001                     ??_isdigit:
   787  000001                     ??_lcd_send_nibble:
   788  000001                     ?___wmul:
   789                           	opt stack 0
   790  000001                     ?___awdiv:
   791                           	opt stack 0
   792  000001                     ?___lwdiv:
   793                           	opt stack 0
   794  000001                     Delay100TCYx@unit:
   795                           	opt stack 0
   796  000001                     Delay1KTCYx@unit:
   797                           	opt stack 0
   798  000001                     RtccReadDate@pDt:
   799                           	opt stack 0
   800  000001                     RtccReadTime@pTm:
   801                           	opt stack 0
   802  000001                     RtccWriteDate@pDt:
   803                           	opt stack 0
   804  000001                     RtccWriteTime@pTm:
   805                           	opt stack 0
   806  000001                     ___wmul@multiplier:
   807                           	opt stack 0
   808  000001                     ___awdiv@dividend:
   809                           	opt stack 0
   810  000001                     ___lwdiv@dividend:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x0
   814  000001                     	ds	1
   815  000002                     lcd_send_nibble@nibble:
   816                           	opt stack 0
   817  000002                     _isdigit$1777:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0x1
   821  000002                     	ds	1
   822  000003                     lcd_send_byte@n:
   823                           	opt stack 0
   824  000003                     RtccWriteDate@di:
   825                           	opt stack 0
   826  000003                     RtccWriteTime@di:
   827                           	opt stack 0
   828  000003                     isdigit@c:
   829                           	opt stack 0
   830  000003                     ___wmul@multiplicand:
   831                           	opt stack 0
   832  000003                     ___awdiv@divisor:
   833                           	opt stack 0
   834  000003                     ___lwdiv@divisor:
   835                           	opt stack 0
   836  000003                     RtccReadDate@rTD1:
   837                           	opt stack 0
   838  000003                     RtccReadTime@rTD1:
   839                           	opt stack 0
   840                           
   841                           ; 8 bytes @ 0x2
   842  000003                     	ds	1
   843  000004                     lcd_send_byte@address:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x3
   847  000004                     	ds	1
   848  000005                     lcd_init@i:
   849                           	opt stack 0
   850  000005                     lcd_gotoxy@y:
   851                           	opt stack 0
   852  000005                     lcd_comand@d:
   853                           	opt stack 0
   854  000005                     RtccWriteDate@wasOn:
   855                           	opt stack 0
   856  000005                     RtccWriteTime@wasOn:
   857                           	opt stack 0
   858  000005                     ___awdiv@counter:
   859                           	opt stack 0
   860  000005                     ___wmul@product:
   861                           	opt stack 0
   862  000005                     ___lwdiv@quotient:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x4
   866  000005                     	ds	1
   867  000006                     lcd_gotoxy@x:
   868                           	opt stack 0
   869  000006                     RtccWriteDate@wasAlrm:
   870                           	opt stack 0
   871  000006                     RtccWriteTime@wasAlrm:
   872                           	opt stack 0
   873  000006                     ___awdiv@sign:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x5
   877  000006                     	ds	1
   878  000007                     lcd_gotoxy@address:
   879                           	opt stack 0
   880  000007                     RtccWriteTime@wasWrEn:
   881                           	opt stack 0
   882  000007                     ___lwdiv@counter:
   883                           	opt stack 0
   884  000007                     RtccWriteDate@tempYear:
   885                           	opt stack 0
   886  000007                     ___awdiv@quotient:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x6
   890  000007                     	ds	1
   891  000008                     ?___lwmod:
   892                           	opt stack 0
   893  000008                     lcd_putc@c:
   894                           	opt stack 0
   895  000008                     RtccWriteTime@tempMinSec:
   896                           	opt stack 0
   897  000008                     ___lwmod@dividend:
   898                           	opt stack 0
   899                           
   900                           ; 2 bytes @ 0x7
   901  000008                     	ds	1
   902  000009                     RtccWriteDate@wasWrEn:
   903                           	opt stack 0
   904  000009                     lcd_putrs@ptr:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0x8
   908  000009                     	ds	1
   909  00000A                     RtccWriteDate@tempDayMonth:
   910                           	opt stack 0
   911  00000A                     RtccWriteTime@tempHourWDay:
   912                           	opt stack 0
   913  00000A                     ___lwmod@divisor:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0x9
   917  00000A                     	ds	1
   918  00000B                     ??_setDiaSemana:
   919  00000B                     RtccReadDate@rTD0:
   920                           	opt stack 0
   921  00000B                     RtccReadTime@rTD0:
   922                           	opt stack 0
   923                           
   924                           ; 8 bytes @ 0xA
   925  00000B                     	ds	1
   926  00000C                     ___lwmod@counter:
   927                           	opt stack 0
   928  00000C                     RtccWriteDate@tempHourWDay:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0xB
   932  00000C                     	ds	1
   933  00000D                     ?_sprintf:
   934                           	opt stack 0
   935  00000D                     sprintf@sp:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0xC
   939  00000D                     	ds	1
   940  00000E                     
   941                           ; 1 bytes @ 0xD
   942  00000E                     	ds	1
   943  00000F                     sprintf@f:
   944                           	opt stack 0
   945                           
   946                           ; 2 bytes @ 0xE
   947  00000F                     	ds	4
   948  000013                     
   949                           ; 1 bytes @ 0x12
   950  000013                     	ds	4
   951  000017                     ??_sprintf:
   952                           
   953                           ; 1 bytes @ 0x16
   954  000017                     	ds	4
   955  00001B                     sprintf@flag:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x1A
   959  00001B                     	ds	1
   960  00001C                     sprintf@val:
   961                           	opt stack 0
   962                           
   963                           ; 2 bytes @ 0x1B
   964  00001C                     	ds	2
   965  00001E                     sprintf@prec:
   966                           	opt stack 0
   967                           
   968                           ; 1 bytes @ 0x1D
   969  00001E                     	ds	1
   970  00001F                     sprintf@ap:
   971                           	opt stack 0
   972                           
   973                           ; 2 bytes @ 0x1E
   974  00001F                     	ds	2
   975  000021                     sprintf@cp:
   976                           	opt stack 0
   977                           
   978                           ; 2 bytes @ 0x20
   979  000021                     	ds	2
   980  000023                     sprintf@len:
   981                           	opt stack 0
   982                           
   983                           ; 2 bytes @ 0x22
   984  000023                     	ds	2
   985  000025                     sprintf@width:
   986                           	opt stack 0
   987                           
   988                           ; 2 bytes @ 0x24
   989  000025                     	ds	2
   990  000027                     sprintf@c:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x26
   994  000027                     	ds	1
   995  000028                     ??_main:
   996                           
   997                           ; 1 bytes @ 0x27
   998  000028                     	ds	1
   999  000029                     main@boton_centro_estado:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x28
  1003  000029                     	ds	2
  1004  00002B                     main@tipo:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x2A
  1008  00002B                     	ds	2
  1009  00002D                     main@tamanio:
  1010                           	opt stack 0
  1011                           
  1012                           ; 2 bytes @ 0x2C
  1013  00002D                     	ds	2
  1014  00002F                     main@boton_seleccionar_cafe:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x2E
  1018  00002F                     	ds	2
  1019  000031                     main@accion:
  1020                           	opt stack 0
  1021                           
  1022                           ; 2 bytes @ 0x30
  1023  000031                     	ds	2
  1024  000033                     main@boton_seleccionar:
  1025                           	opt stack 0
  1026                           
  1027                           ; 2 bytes @ 0x32
  1028  000033                     	ds	2
  1029                           tblptru	equ	0xFF8
  1030                           tblptrh	equ	0xFF7
  1031                           tblptrl	equ	0xFF6
  1032                           tablat	equ	0xFF5
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           postdec1	equ	0xFE5
  1036                           fsr1l	equ	0xFE1
  1037                           
  1038 ;;
  1039 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1040 ;;
  1041 ;; *************** function _main *****************
  1042 ;; Defined at:
  1043 ;;		line 137 in file "main.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  accion          2   48[COMRAM] int 
  1048 ;;  boton_selecc    2   46[COMRAM] int 
  1049 ;;  tamanio         2   44[COMRAM] int 
  1050 ;;  tipo            2   42[COMRAM] int 
  1051 ;;  boton_selecc    2   50[COMRAM] int 
  1052 ;;  boton_centro    2   40[COMRAM] int 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  2  185[None  ] int 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1063 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1064 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1065 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1066 ;;Total ram usage:       13 bytes
  1067 ;; Hardware stack levels required when called:    8
  1068 ;; This function calls:
  1069 ;;		_Read_RTC
  1070 ;;		_Write_RTC
  1071 ;;		_lcd_gotoxy
  1072 ;;		_lcd_putrs
  1073 ;;		_setRelojDigital
  1074 ;;		_setup
  1075 ;;		_sprintf
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text0
  1082  000FEA                     __ptext0:
  1083                           	opt stack 0
  1084  000FEA                     _main:
  1085                           	opt stack 23
  1086                           
  1087                           ;main.c: 138: setup();
  1088                           
  1089                           ;incstack = 0
  1090  000FEA  ECD0  F011         	call	_setup	;wreg free
  1091                           
  1092                           ;main.c: 144: int boton_centro_estado = 0;
  1093  000FEE  0E00               	movlw	0
  1094  000FF0  6E2A               	movwf	main@boton_centro_estado+1,c
  1095  000FF2  0E00               	movlw	0
  1096  000FF4  6E29               	movwf	main@boton_centro_estado,c
  1097                           
  1098                           ;main.c: 156: int boton_seleccionar = 0;
  1099  000FF6  0E00               	movlw	0
  1100  000FF8  6E34               	movwf	main@boton_seleccionar+1,c
  1101  000FFA  0E00               	movlw	0
  1102  000FFC  6E33               	movwf	main@boton_seleccionar,c
  1103  000FFE                     
  1104                           ;main.c: 160: Read_RTC();
  1105  000FFE  ECE8  F00E         	call	_Read_RTC	;wreg free
  1106                           
  1107                           ;main.c: 162: if (PORTAbits.RA5 == 0 && boton_centro_estado == 0) {
  1108  001002  BA80               	btfsc	3968,5,c	;volatile
  1109  001004  D01B               	goto	l187
  1110  001006  5029               	movf	main@boton_centro_estado,w,c
  1111  001008  102A               	iorwf	main@boton_centro_estado+1,w,c
  1112  00100A  A4D8               	btfss	status,2,c
  1113  00100C  D017               	goto	l187
  1114                           
  1115                           ;main.c: 163: boton_centro_estado = 1;
  1116  00100E  0E00               	movlw	0
  1117  001010  6E2A               	movwf	main@boton_centro_estado+1,c
  1118  001012  0E01               	movlw	1
  1119  001014  6E29               	movwf	main@boton_centro_estado,c
  1120                           
  1121                           ;main.c: 164: lcd_gotoxy(10, 2);
  1122  001016  0E02               	movlw	2
  1123  001018  6E05               	movwf	lcd_gotoxy@y,c
  1124  00101A  0E0A               	movlw	10
  1125  00101C  EC1C  F012         	call	_lcd_gotoxy
  1126                           
  1127                           ;main.c: 165: lcd_putrs("Edt");
  1128  001020  0EE2               	movlw	low STR_26
  1129  001022  6E09               	movwf	lcd_putrs@ptr,c
  1130  001024  0E0F               	movlw	high STR_26
  1131  001026  6E0A               	movwf	lcd_putrs@ptr+1,c
  1132  001028  EC61  F011         	call	_lcd_putrs	;wreg free
  1133                           
  1134                           ;main.c: 166: _delay((unsigned long)((98)*(8000000/4000.0)));
  1135  00102C  0EFF               	movlw	255
  1136  00102E  6E28               	movwf	??_main& (0+255),c
  1137  001030  0E8A               	movlw	138
  1138  001032                     u3597:
  1139  001032  2EE8               	decfsz	wreg,f,c
  1140  001034  D7FE               	bra	u3597
  1141  001036  2E28               	decfsz	??_main& (0+255),f,c
  1142  001038  D7FC               	bra	u3597
  1143  00103A  D000               	nop2	
  1144  00103C                     l187:
  1145                           
  1146                           ;main.c: 167: }
  1147                           ;main.c: 169: if (PORTAbits.RA5 == 0 && boton_centro_estado == 1) {
  1148  00103C  BA80               	btfsc	3968,5,c	;volatile
  1149  00103E  D01B               	goto	l188
  1150  001040  0429               	decf	main@boton_centro_estado,w,c
  1151  001042  102A               	iorwf	main@boton_centro_estado+1,w,c
  1152  001044  A4D8               	btfss	status,2,c
  1153  001046  D017               	goto	l188
  1154                           
  1155                           ;main.c: 170: boton_centro_estado = 0;
  1156  001048  0E00               	movlw	0
  1157  00104A  6E2A               	movwf	main@boton_centro_estado+1,c
  1158  00104C  0E00               	movlw	0
  1159  00104E  6E29               	movwf	main@boton_centro_estado,c
  1160                           
  1161                           ;main.c: 171: lcd_gotoxy(10, 2);
  1162  001050  0E02               	movlw	2
  1163  001052  6E05               	movwf	lcd_gotoxy@y,c
  1164  001054  0E0A               	movlw	10
  1165  001056  EC1C  F012         	call	_lcd_gotoxy
  1166                           
  1167                           ;main.c: 172: lcd_putrs("        ");
  1168  00105A  0E2D               	movlw	low STR_27
  1169  00105C  6E09               	movwf	lcd_putrs@ptr,c
  1170  00105E  0E0F               	movlw	high STR_27
  1171  001060  6E0A               	movwf	lcd_putrs@ptr+1,c
  1172  001062  EC61  F011         	call	_lcd_putrs	;wreg free
  1173                           
  1174                           ;main.c: 173: _delay((unsigned long)((98)*(8000000/4000.0)));
  1175  001066  0EFF               	movlw	255
  1176  001068  6E28               	movwf	??_main& (0+255),c
  1177  00106A  0E8A               	movlw	138
  1178  00106C                     u3607:
  1179  00106C  2EE8               	decfsz	wreg,f,c
  1180  00106E  D7FE               	bra	u3607
  1181  001070  2E28               	decfsz	??_main& (0+255),f,c
  1182  001072  D7FC               	bra	u3607
  1183  001074  D000               	nop2	
  1184  001076                     l188:
  1185                           
  1186                           ;main.c: 174: }
  1187                           ;main.c: 176: if (boton_centro_estado == 1) {
  1188  001076  0429               	decf	main@boton_centro_estado,w,c
  1189  001078  102A               	iorwf	main@boton_centro_estado+1,w,c
  1190  00107A  A4D8               	btfss	status,2,c
  1191  00107C  D2BD               	goto	l348
  1192                           
  1193                           ;main.c: 178: if (PORTAbits.RA2 == 0) {
  1194  00107E  B480               	btfsc	3968,2,c	;volatile
  1195  001080  D00E               	goto	u2730
  1196                           
  1197                           ;main.c: 179: if (boton_seleccionar == 7) {
  1198  001082  0E07               	movlw	7
  1199  001084  1833               	xorwf	main@boton_seleccionar,w,c
  1200  001086  1034               	iorwf	main@boton_seleccionar+1,w,c
  1201  001088  A4D8               	btfss	status,2,c
  1202  00108A  D005               	goto	l191
  1203                           
  1204                           ;main.c: 180: boton_seleccionar = 0;
  1205  00108C  0E00               	movlw	0
  1206  00108E  6E34               	movwf	main@boton_seleccionar+1,c
  1207  001090  0E00               	movlw	0
  1208  001092  6E33               	movwf	main@boton_seleccionar,c
  1209                           
  1210                           ;main.c: 181: } else {
  1211  001094  D002               	goto	l192
  1212  001096                     l191:
  1213                           
  1214                           ;main.c: 182: boton_seleccionar++;
  1215  001096  4A33               	infsnz	main@boton_seleccionar,f,c
  1216  001098  2A34               	incf	main@boton_seleccionar+1,f,c
  1217  00109A                     l192:
  1218                           
  1219                           ;main.c: 183: }
  1220                           ;main.c: 184: while (PORTAbits.RA2 == 0);
  1221  00109A  A480               	btfss	3968,2,c	;volatile
  1222  00109C  D7FE               	goto	l192
  1223  00109E                     u2730:
  1224                           
  1225                           ;main.c: 185: }
  1226                           ;main.c: 187: if (PORTAbits.RA7 == 0) {
  1227  00109E  BE80               	btfsc	3968,7,c	;volatile
  1228  0010A0  D00E               	goto	u2760
  1229                           
  1230                           ;main.c: 188: if (boton_seleccionar == 0) {
  1231  0010A2  5033               	movf	main@boton_seleccionar,w,c
  1232  0010A4  1034               	iorwf	main@boton_seleccionar+1,w,c
  1233  0010A6  A4D8               	btfss	status,2,c
  1234  0010A8  D005               	goto	l197
  1235                           
  1236                           ;main.c: 189: boton_seleccionar = 7;
  1237  0010AA  0E00               	movlw	0
  1238  0010AC  6E34               	movwf	main@boton_seleccionar+1,c
  1239  0010AE  0E07               	movlw	7
  1240  0010B0  6E33               	movwf	main@boton_seleccionar,c
  1241                           
  1242                           ;main.c: 190: } else {
  1243  0010B2  D003               	goto	l198
  1244  0010B4                     l197:
  1245                           
  1246                           ;main.c: 191: boton_seleccionar--;
  1247  0010B4  0633               	decf	main@boton_seleccionar,f,c
  1248  0010B6  A0D8               	btfss	status,0,c
  1249  0010B8  0634               	decf	main@boton_seleccionar+1,f,c
  1250  0010BA                     l198:
  1251                           
  1252                           ;main.c: 192: }
  1253                           ;main.c: 193: while (PORTAbits.RA7 == 0);
  1254  0010BA  AE80               	btfss	3968,7,c	;volatile
  1255  0010BC  D7FE               	goto	l198
  1256  0010BE                     u2760:
  1257                           
  1258                           ;main.c: 194: }
  1259                           ;main.c: 196: sprintf(buffer2, "%s", array_seleccionar[boton_seleccionar]);
  1260  0010BE  0EBE               	movlw	low _buffer2
  1261  0010C0  6E0D               	movwf	sprintf@sp,c
  1262  0010C2  0E00               	movlw	high _buffer2
  1263  0010C4  6E0E               	movwf	sprintf@sp+1,c
  1264  0010C6  0EE6               	movlw	low STR_28
  1265  0010C8  6E0F               	movwf	sprintf@f,c
  1266  0010CA  0E0F               	movlw	high STR_28
  1267  0010CC  6E10               	movwf	sprintf@f+1,c
  1268  0010CE  90D8               	bcf	status,0,c
  1269  0010D0  3433               	rlcf	main@boton_seleccionar,w,c
  1270  0010D2  6ED9               	movwf	fsr2l,c
  1271  0010D4  3434               	rlcf	main@boton_seleccionar+1,w,c
  1272  0010D6  6EDA               	movwf	fsr2h,c
  1273  0010D8  0ED2               	movlw	low _array_seleccionar
  1274  0010DA  26D9               	addwf	fsr2l,f,c
  1275  0010DC  0E00               	movlw	high _array_seleccionar
  1276  0010DE  22DA               	addwfc	fsr2h,f,c
  1277  0010E0  CFDE F011          	movff	postinc2,?_sprintf+4
  1278  0010E4  CFDD F012          	movff	postdec2,?_sprintf+5
  1279  0010E8  EC07  F00B         	call	_sprintf	;wreg free
  1280                           
  1281                           ;main.c: 197: lcd_gotoxy(13, 2);
  1282  0010EC  0E02               	movlw	2
  1283  0010EE  6E05               	movwf	lcd_gotoxy@y,c
  1284  0010F0  0E0D               	movlw	13
  1285  0010F2  EC1C  F012         	call	_lcd_gotoxy
  1286                           
  1287                           ;main.c: 198: lcd_putrs(buffer2);
  1288  0010F6  0EBE               	movlw	low _buffer2
  1289  0010F8  6E09               	movwf	lcd_putrs@ptr,c
  1290  0010FA  0E00               	movlw	high _buffer2
  1291  0010FC  6E0A               	movwf	lcd_putrs@ptr+1,c
  1292  0010FE  EC61  F011         	call	_lcd_putrs	;wreg free
  1293                           
  1294                           ;main.c: 201: if (boton_seleccionar == 0) {
  1295  001102  5033               	movf	main@boton_seleccionar,w,c
  1296  001104  1034               	iorwf	main@boton_seleccionar+1,w,c
  1297  001106  A4D8               	btfss	status,2,c
  1298  001108  D028               	goto	u2830
  1299                           
  1300                           ;main.c: 203: if (PORTAbits.RA3 == 0) {
  1301  00110A  B680               	btfsc	3968,3,c	;volatile
  1302  00110C  D012               	goto	u2800
  1303                           
  1304                           ;main.c: 204: if (diasem == 6) {
  1305  00110E  0E06               	movlw	6
  1306  001110  1858               	xorwf	_diasem,w,c
  1307  001112  1059               	iorwf	_diasem+1,w,c
  1308  001114  A4D8               	btfss	status,2,c
  1309  001116  D007               	goto	l204
  1310                           
  1311                           ;main.c: 205: diasem = 0;
  1312  001118  0E00               	movlw	0
  1313  00111A  6E59               	movwf	_diasem+1,c
  1314  00111C  0E00               	movlw	0
  1315  00111E  6E58               	movwf	_diasem,c
  1316                           
  1317                           ;main.c: 206: Write_RTC();
  1318  001120  EC2B  F00D         	call	_Write_RTC	;wreg free
  1319                           
  1320                           ;main.c: 207: } else {
  1321  001124  D004               	goto	l205
  1322  001126                     l204:
  1323                           
  1324                           ;main.c: 208: diasem++;
  1325  001126  4A58               	infsnz	_diasem,f,c
  1326  001128  2A59               	incf	_diasem+1,f,c
  1327                           
  1328                           ;main.c: 209: Write_RTC();
  1329  00112A  EC2B  F00D         	call	_Write_RTC	;wreg free
  1330  00112E                     l205:
  1331                           
  1332                           ;main.c: 210: }
  1333                           ;main.c: 211: while (PORTAbits.RA3 == 0);
  1334  00112E  A680               	btfss	3968,3,c	;volatile
  1335  001130  D7FE               	goto	l205
  1336  001132                     u2800:
  1337                           
  1338                           ;main.c: 212: }
  1339                           ;main.c: 214: if (PORTAbits.RA6 == 0) {
  1340  001132  BC80               	btfsc	3968,6,c	;volatile
  1341  001134  D012               	goto	u2830
  1342                           
  1343                           ;main.c: 215: if (diasem == 0) {
  1344  001136  5058               	movf	_diasem,w,c
  1345  001138  1059               	iorwf	_diasem+1,w,c
  1346  00113A  A4D8               	btfss	status,2,c
  1347  00113C  D007               	goto	l210
  1348                           
  1349                           ;main.c: 216: diasem = 6;
  1350  00113E  0E00               	movlw	0
  1351  001140  6E59               	movwf	_diasem+1,c
  1352  001142  0E06               	movlw	6
  1353  001144  6E58               	movwf	_diasem,c
  1354                           
  1355                           ;main.c: 217: Write_RTC();
  1356  001146  EC2B  F00D         	call	_Write_RTC	;wreg free
  1357                           
  1358                           ;main.c: 218: } else {
  1359  00114A  D005               	goto	l211
  1360  00114C                     l210:
  1361                           
  1362                           ;main.c: 219: diasem--;
  1363  00114C  0658               	decf	_diasem,f,c
  1364  00114E  A0D8               	btfss	status,0,c
  1365  001150  0659               	decf	_diasem+1,f,c
  1366                           
  1367                           ;main.c: 220: Write_RTC();
  1368  001152  EC2B  F00D         	call	_Write_RTC	;wreg free
  1369  001156                     l211:
  1370                           
  1371                           ;main.c: 221: }
  1372                           ;main.c: 222: while (PORTAbits.RA6 == 0);
  1373  001156  AC80               	btfss	3968,6,c	;volatile
  1374  001158  D7FE               	goto	l211
  1375  00115A                     u2830:
  1376                           
  1377                           ;main.c: 223: }
  1378                           ;main.c: 224: }
  1379                           ;main.c: 227: if (boton_seleccionar == 1) {
  1380  00115A  0433               	decf	main@boton_seleccionar,w,c
  1381  00115C  1034               	iorwf	main@boton_seleccionar+1,w,c
  1382  00115E  A4D8               	btfss	status,2,c
  1383  001160  D02F               	goto	l215
  1384                           
  1385                           ;main.c: 229: if (PORTAbits.RA3 == 0) {
  1386  001162  B680               	btfsc	3968,3,c	;volatile
  1387  001164  D012               	goto	u2870
  1388                           
  1389                           ;main.c: 230: if (dia == 31) {
  1390  001166  0E1F               	movlw	31
  1391  001168  1856               	xorwf	_dia,w,c
  1392  00116A  1057               	iorwf	_dia+1,w,c
  1393  00116C  A4D8               	btfss	status,2,c
  1394  00116E  D007               	goto	l217
  1395                           
  1396                           ;main.c: 231: dia = 1;
  1397  001170  0E00               	movlw	0
  1398  001172  6E57               	movwf	_dia+1,c
  1399  001174  0E01               	movlw	1
  1400  001176  6E56               	movwf	_dia,c
  1401                           
  1402                           ;main.c: 232: Write_RTC();
  1403  001178  EC2B  F00D         	call	_Write_RTC	;wreg free
  1404                           
  1405                           ;main.c: 233: } else {
  1406  00117C  D004               	goto	l218
  1407  00117E                     l217:
  1408                           
  1409                           ;main.c: 234: dia++;
  1410  00117E  4A56               	infsnz	_dia,f,c
  1411  001180  2A57               	incf	_dia+1,f,c
  1412                           
  1413                           ;main.c: 235: Write_RTC();
  1414  001182  EC2B  F00D         	call	_Write_RTC	;wreg free
  1415  001186                     l218:
  1416                           
  1417                           ;main.c: 236: }
  1418                           ;main.c: 237: while (PORTAbits.RA3 == 0);
  1419  001186  A680               	btfss	3968,3,c	;volatile
  1420  001188  D7FE               	goto	l218
  1421  00118A                     u2870:
  1422                           
  1423                           ;main.c: 238: }
  1424                           ;main.c: 240: if (PORTAbits.RA6 == 0) {
  1425  00118A  BC80               	btfsc	3968,6,c	;volatile
  1426  00118C  D012               	goto	u2900
  1427                           
  1428                           ;main.c: 241: if (dia == 1) {
  1429  00118E  0456               	decf	_dia,w,c
  1430  001190  1057               	iorwf	_dia+1,w,c
  1431  001192  A4D8               	btfss	status,2,c
  1432  001194  D007               	goto	l223
  1433                           
  1434                           ;main.c: 242: dia = 31;
  1435  001196  0E00               	movlw	0
  1436  001198  6E57               	movwf	_dia+1,c
  1437  00119A  0E1F               	movlw	31
  1438  00119C  6E56               	movwf	_dia,c
  1439                           
  1440                           ;main.c: 243: Write_RTC();
  1441  00119E  EC2B  F00D         	call	_Write_RTC	;wreg free
  1442                           
  1443                           ;main.c: 244: } else {
  1444  0011A2  D005               	goto	l224
  1445  0011A4                     l223:
  1446                           
  1447                           ;main.c: 245: dia--;
  1448  0011A4  0656               	decf	_dia,f,c
  1449  0011A6  A0D8               	btfss	status,0,c
  1450  0011A8  0657               	decf	_dia+1,f,c
  1451                           
  1452                           ;main.c: 246: Write_RTC();
  1453  0011AA  EC2B  F00D         	call	_Write_RTC	;wreg free
  1454  0011AE                     l224:
  1455                           
  1456                           ;main.c: 247: }
  1457                           ;main.c: 248: while (PORTAbits.RA6 == 0);
  1458  0011AE  AC80               	btfss	3968,6,c	;volatile
  1459  0011B0  D7FE               	goto	l224
  1460  0011B2                     u2900:
  1461                           
  1462                           ;main.c: 249: }
  1463                           ;main.c: 251: _delay((unsigned long)((50)*(8000000/4000.0)));
  1464  0011B2  0E82               	movlw	130
  1465  0011B4  6E28               	movwf	??_main& (0+255),c
  1466  0011B6  0EDE               	movlw	222
  1467  0011B8                     u3617:
  1468  0011B8  2EE8               	decfsz	wreg,f,c
  1469  0011BA  D7FE               	bra	u3617
  1470  0011BC  2E28               	decfsz	??_main& (0+255),f,c
  1471  0011BE  D7FC               	bra	u3617
  1472  0011C0                     l215:
  1473                           
  1474                           ;main.c: 252: }
  1475                           ;main.c: 255: if (boton_seleccionar == 2) {
  1476  0011C0  0E02               	movlw	2
  1477  0011C2  1833               	xorwf	main@boton_seleccionar,w,c
  1478  0011C4  1034               	iorwf	main@boton_seleccionar+1,w,c
  1479  0011C6  A4D8               	btfss	status,2,c
  1480  0011C8  D02F               	goto	l228
  1481                           
  1482                           ;main.c: 257: if (PORTAbits.RA3 == 0) {
  1483  0011CA  B680               	btfsc	3968,3,c	;volatile
  1484  0011CC  D012               	goto	u2940
  1485                           
  1486                           ;main.c: 258: if (mes == 12) {
  1487  0011CE  0E0C               	movlw	12
  1488  0011D0  185A               	xorwf	_mes,w,c
  1489  0011D2  105B               	iorwf	_mes+1,w,c
  1490  0011D4  A4D8               	btfss	status,2,c
  1491  0011D6  D007               	goto	l230
  1492                           
  1493                           ;main.c: 259: mes = 1;
  1494  0011D8  0E00               	movlw	0
  1495  0011DA  6E5B               	movwf	_mes+1,c
  1496  0011DC  0E01               	movlw	1
  1497  0011DE  6E5A               	movwf	_mes,c
  1498                           
  1499                           ;main.c: 260: Write_RTC();
  1500  0011E0  EC2B  F00D         	call	_Write_RTC	;wreg free
  1501                           
  1502                           ;main.c: 261: } else {
  1503  0011E4  D004               	goto	l231
  1504  0011E6                     l230:
  1505                           
  1506                           ;main.c: 262: mes++;
  1507  0011E6  4A5A               	infsnz	_mes,f,c
  1508  0011E8  2A5B               	incf	_mes+1,f,c
  1509                           
  1510                           ;main.c: 263: Write_RTC();
  1511  0011EA  EC2B  F00D         	call	_Write_RTC	;wreg free
  1512  0011EE                     l231:
  1513                           
  1514                           ;main.c: 264: }
  1515                           ;main.c: 265: while (PORTAbits.RA3 == 0);
  1516  0011EE  A680               	btfss	3968,3,c	;volatile
  1517  0011F0  D7FE               	goto	l231
  1518  0011F2                     u2940:
  1519                           
  1520                           ;main.c: 266: }
  1521                           ;main.c: 268: if (PORTAbits.RA6 == 0) {
  1522  0011F2  BC80               	btfsc	3968,6,c	;volatile
  1523  0011F4  D012               	goto	u2970
  1524                           
  1525                           ;main.c: 269: if (mes == 1) {
  1526  0011F6  045A               	decf	_mes,w,c
  1527  0011F8  105B               	iorwf	_mes+1,w,c
  1528  0011FA  A4D8               	btfss	status,2,c
  1529  0011FC  D007               	goto	l236
  1530                           
  1531                           ;main.c: 270: mes = 12;
  1532  0011FE  0E00               	movlw	0
  1533  001200  6E5B               	movwf	_mes+1,c
  1534  001202  0E0C               	movlw	12
  1535  001204  6E5A               	movwf	_mes,c
  1536                           
  1537                           ;main.c: 271: Write_RTC();
  1538  001206  EC2B  F00D         	call	_Write_RTC	;wreg free
  1539                           
  1540                           ;main.c: 272: } else {
  1541  00120A  D005               	goto	l237
  1542  00120C                     l236:
  1543                           
  1544                           ;main.c: 273: mes--;
  1545  00120C  065A               	decf	_mes,f,c
  1546  00120E  A0D8               	btfss	status,0,c
  1547  001210  065B               	decf	_mes+1,f,c
  1548                           
  1549                           ;main.c: 274: Write_RTC();
  1550  001212  EC2B  F00D         	call	_Write_RTC	;wreg free
  1551  001216                     l237:
  1552                           
  1553                           ;main.c: 275: }
  1554                           ;main.c: 276: while (PORTAbits.RA6 == 0);
  1555  001216  AC80               	btfss	3968,6,c	;volatile
  1556  001218  D7FE               	goto	l237
  1557  00121A                     u2970:
  1558                           
  1559                           ;main.c: 277: }
  1560                           ;main.c: 279: _delay((unsigned long)((50)*(8000000/4000.0)));
  1561  00121A  0E82               	movlw	130
  1562  00121C  6E28               	movwf	??_main& (0+255),c
  1563  00121E  0EDE               	movlw	222
  1564  001220                     u3627:
  1565  001220  2EE8               	decfsz	wreg,f,c
  1566  001222  D7FE               	bra	u3627
  1567  001224  2E28               	decfsz	??_main& (0+255),f,c
  1568  001226  D7FC               	bra	u3627
  1569  001228                     l228:
  1570                           
  1571                           ;main.c: 280: }
  1572                           ;main.c: 283: if (boton_seleccionar == 3) {
  1573  001228  0E03               	movlw	3
  1574  00122A  1833               	xorwf	main@boton_seleccionar,w,c
  1575  00122C  1034               	iorwf	main@boton_seleccionar+1,w,c
  1576  00122E  A4D8               	btfss	status,2,c
  1577  001230  D02F               	goto	l241
  1578                           
  1579                           ;main.c: 285: if (PORTAbits.RA3 == 0) {
  1580  001232  B680               	btfsc	3968,3,c	;volatile
  1581  001234  D012               	goto	u3010
  1582                           
  1583                           ;main.c: 286: if (anio == 99) {
  1584  001236  0E63               	movlw	99
  1585  001238  185C               	xorwf	_anio,w,c
  1586  00123A  105D               	iorwf	_anio+1,w,c
  1587  00123C  A4D8               	btfss	status,2,c
  1588  00123E  D007               	goto	l243
  1589                           
  1590                           ;main.c: 287: anio = 0;
  1591  001240  0E00               	movlw	0
  1592  001242  6E5D               	movwf	_anio+1,c
  1593  001244  0E00               	movlw	0
  1594  001246  6E5C               	movwf	_anio,c
  1595                           
  1596                           ;main.c: 288: Write_RTC();
  1597  001248  EC2B  F00D         	call	_Write_RTC	;wreg free
  1598                           
  1599                           ;main.c: 289: } else {
  1600  00124C  D004               	goto	l244
  1601  00124E                     l243:
  1602                           
  1603                           ;main.c: 290: anio++;
  1604  00124E  4A5C               	infsnz	_anio,f,c
  1605  001250  2A5D               	incf	_anio+1,f,c
  1606                           
  1607                           ;main.c: 291: Write_RTC();
  1608  001252  EC2B  F00D         	call	_Write_RTC	;wreg free
  1609  001256                     l244:
  1610                           
  1611                           ;main.c: 292: }
  1612                           ;main.c: 293: while (PORTAbits.RA3 == 0);
  1613  001256  A680               	btfss	3968,3,c	;volatile
  1614  001258  D7FE               	goto	l244
  1615  00125A                     u3010:
  1616                           
  1617                           ;main.c: 294: }
  1618                           ;main.c: 296: if (PORTAbits.RA6 == 0) {
  1619  00125A  BC80               	btfsc	3968,6,c	;volatile
  1620  00125C  D012               	goto	u3040
  1621                           
  1622                           ;main.c: 297: if (anio == 0) {
  1623  00125E  505C               	movf	_anio,w,c
  1624  001260  105D               	iorwf	_anio+1,w,c
  1625  001262  A4D8               	btfss	status,2,c
  1626  001264  D007               	goto	l249
  1627                           
  1628                           ;main.c: 298: anio = 99;
  1629  001266  0E00               	movlw	0
  1630  001268  6E5D               	movwf	_anio+1,c
  1631  00126A  0E63               	movlw	99
  1632  00126C  6E5C               	movwf	_anio,c
  1633                           
  1634                           ;main.c: 299: Write_RTC();
  1635  00126E  EC2B  F00D         	call	_Write_RTC	;wreg free
  1636                           
  1637                           ;main.c: 300: } else {
  1638  001272  D005               	goto	l250
  1639  001274                     l249:
  1640                           
  1641                           ;main.c: 301: anio--;
  1642  001274  065C               	decf	_anio,f,c
  1643  001276  A0D8               	btfss	status,0,c
  1644  001278  065D               	decf	_anio+1,f,c
  1645                           
  1646                           ;main.c: 302: Write_RTC();
  1647  00127A  EC2B  F00D         	call	_Write_RTC	;wreg free
  1648  00127E                     l250:
  1649                           
  1650                           ;main.c: 303: }
  1651                           ;main.c: 304: while (PORTAbits.RA6 == 0);
  1652  00127E  AC80               	btfss	3968,6,c	;volatile
  1653  001280  D7FE               	goto	l250
  1654  001282                     u3040:
  1655                           
  1656                           ;main.c: 305: }
  1657                           ;main.c: 307: _delay((unsigned long)((50)*(8000000/4000.0)));
  1658  001282  0E82               	movlw	130
  1659  001284  6E28               	movwf	??_main& (0+255),c
  1660  001286  0EDE               	movlw	222
  1661  001288                     u3637:
  1662  001288  2EE8               	decfsz	wreg,f,c
  1663  00128A  D7FE               	bra	u3637
  1664  00128C  2E28               	decfsz	??_main& (0+255),f,c
  1665  00128E  D7FC               	bra	u3637
  1666  001290                     l241:
  1667                           
  1668                           ;main.c: 308: }
  1669                           ;main.c: 311: if (boton_seleccionar == 4) {
  1670  001290  0E04               	movlw	4
  1671  001292  1833               	xorwf	main@boton_seleccionar,w,c
  1672  001294  1034               	iorwf	main@boton_seleccionar+1,w,c
  1673  001296  A4D8               	btfss	status,2,c
  1674  001298  D02F               	goto	l254
  1675                           
  1676                           ;main.c: 313: if (PORTAbits.RA3 == 0) {
  1677  00129A  B680               	btfsc	3968,3,c	;volatile
  1678  00129C  D012               	goto	u3080
  1679                           
  1680                           ;main.c: 314: if (hora == 59) {
  1681  00129E  0E3B               	movlw	59
  1682  0012A0  1854               	xorwf	_hora,w,c
  1683  0012A2  1055               	iorwf	_hora+1,w,c
  1684  0012A4  A4D8               	btfss	status,2,c
  1685  0012A6  D007               	goto	l256
  1686                           
  1687                           ;main.c: 315: hora = 0;
  1688  0012A8  0E00               	movlw	0
  1689  0012AA  6E55               	movwf	_hora+1,c
  1690  0012AC  0E00               	movlw	0
  1691  0012AE  6E54               	movwf	_hora,c
  1692                           
  1693                           ;main.c: 316: Write_RTC();
  1694  0012B0  EC2B  F00D         	call	_Write_RTC	;wreg free
  1695                           
  1696                           ;main.c: 317: } else {
  1697  0012B4  D004               	goto	l257
  1698  0012B6                     l256:
  1699                           
  1700                           ;main.c: 318: hora++;
  1701  0012B6  4A54               	infsnz	_hora,f,c
  1702  0012B8  2A55               	incf	_hora+1,f,c
  1703                           
  1704                           ;main.c: 319: Write_RTC();
  1705  0012BA  EC2B  F00D         	call	_Write_RTC	;wreg free
  1706  0012BE                     l257:
  1707                           
  1708                           ;main.c: 320: }
  1709                           ;main.c: 321: while (PORTAbits.RA3 == 0);
  1710  0012BE  A680               	btfss	3968,3,c	;volatile
  1711  0012C0  D7FE               	goto	l257
  1712  0012C2                     u3080:
  1713                           
  1714                           ;main.c: 322: }
  1715                           ;main.c: 324: if (PORTAbits.RA6 == 0) {
  1716  0012C2  BC80               	btfsc	3968,6,c	;volatile
  1717  0012C4  D012               	goto	u3110
  1718                           
  1719                           ;main.c: 325: if (hora == 0) {
  1720  0012C6  5054               	movf	_hora,w,c
  1721  0012C8  1055               	iorwf	_hora+1,w,c
  1722  0012CA  A4D8               	btfss	status,2,c
  1723  0012CC  D007               	goto	l262
  1724                           
  1725                           ;main.c: 326: hora = 59;
  1726  0012CE  0E00               	movlw	0
  1727  0012D0  6E55               	movwf	_hora+1,c
  1728  0012D2  0E3B               	movlw	59
  1729  0012D4  6E54               	movwf	_hora,c
  1730                           
  1731                           ;main.c: 327: Write_RTC();
  1732  0012D6  EC2B  F00D         	call	_Write_RTC	;wreg free
  1733                           
  1734                           ;main.c: 328: } else {
  1735  0012DA  D005               	goto	l263
  1736  0012DC                     l262:
  1737                           
  1738                           ;main.c: 329: hora--;
  1739  0012DC  0654               	decf	_hora,f,c
  1740  0012DE  A0D8               	btfss	status,0,c
  1741  0012E0  0655               	decf	_hora+1,f,c
  1742                           
  1743                           ;main.c: 330: Write_RTC();
  1744  0012E2  EC2B  F00D         	call	_Write_RTC	;wreg free
  1745  0012E6                     l263:
  1746                           
  1747                           ;main.c: 331: }
  1748                           ;main.c: 332: while (PORTAbits.RA6 == 0);
  1749  0012E6  AC80               	btfss	3968,6,c	;volatile
  1750  0012E8  D7FE               	goto	l263
  1751  0012EA                     u3110:
  1752                           
  1753                           ;main.c: 333: }
  1754                           ;main.c: 335: _delay((unsigned long)((50)*(8000000/4000.0)));
  1755  0012EA  0E82               	movlw	130
  1756  0012EC  6E28               	movwf	??_main& (0+255),c
  1757  0012EE  0EDE               	movlw	222
  1758  0012F0                     u3647:
  1759  0012F0  2EE8               	decfsz	wreg,f,c
  1760  0012F2  D7FE               	bra	u3647
  1761  0012F4  2E28               	decfsz	??_main& (0+255),f,c
  1762  0012F6  D7FC               	bra	u3647
  1763  0012F8                     l254:
  1764                           
  1765                           ;main.c: 336: }
  1766                           ;main.c: 339: if (boton_seleccionar == 5) {
  1767  0012F8  0E05               	movlw	5
  1768  0012FA  1833               	xorwf	main@boton_seleccionar,w,c
  1769  0012FC  1034               	iorwf	main@boton_seleccionar+1,w,c
  1770  0012FE  A4D8               	btfss	status,2,c
  1771  001300  D02F               	goto	l267
  1772                           
  1773                           ;main.c: 341: if (PORTAbits.RA3 == 0) {
  1774  001302  B680               	btfsc	3968,3,c	;volatile
  1775  001304  D012               	goto	u3150
  1776                           
  1777                           ;main.c: 342: if (minuto == 59) {
  1778  001306  0E3B               	movlw	59
  1779  001308  1852               	xorwf	_minuto,w,c
  1780  00130A  1053               	iorwf	_minuto+1,w,c
  1781  00130C  A4D8               	btfss	status,2,c
  1782  00130E  D007               	goto	l269
  1783                           
  1784                           ;main.c: 343: minuto = 0;
  1785  001310  0E00               	movlw	0
  1786  001312  6E53               	movwf	_minuto+1,c
  1787  001314  0E00               	movlw	0
  1788  001316  6E52               	movwf	_minuto,c
  1789                           
  1790                           ;main.c: 344: Write_RTC();
  1791  001318  EC2B  F00D         	call	_Write_RTC	;wreg free
  1792                           
  1793                           ;main.c: 345: } else {
  1794  00131C  D004               	goto	l270
  1795  00131E                     l269:
  1796                           
  1797                           ;main.c: 346: minuto++;
  1798  00131E  4A52               	infsnz	_minuto,f,c
  1799  001320  2A53               	incf	_minuto+1,f,c
  1800                           
  1801                           ;main.c: 347: Write_RTC();
  1802  001322  EC2B  F00D         	call	_Write_RTC	;wreg free
  1803  001326                     l270:
  1804                           
  1805                           ;main.c: 348: }
  1806                           ;main.c: 349: while (PORTAbits.RA3 == 0);
  1807  001326  A680               	btfss	3968,3,c	;volatile
  1808  001328  D7FE               	goto	l270
  1809  00132A                     u3150:
  1810                           
  1811                           ;main.c: 350: }
  1812                           ;main.c: 352: if (PORTAbits.RA6 == 0) {
  1813  00132A  BC80               	btfsc	3968,6,c	;volatile
  1814  00132C  D012               	goto	u3180
  1815                           
  1816                           ;main.c: 353: if (minuto == 0) {
  1817  00132E  5052               	movf	_minuto,w,c
  1818  001330  1053               	iorwf	_minuto+1,w,c
  1819  001332  A4D8               	btfss	status,2,c
  1820  001334  D007               	goto	l275
  1821                           
  1822                           ;main.c: 354: minuto = 59;
  1823  001336  0E00               	movlw	0
  1824  001338  6E53               	movwf	_minuto+1,c
  1825  00133A  0E3B               	movlw	59
  1826  00133C  6E52               	movwf	_minuto,c
  1827                           
  1828                           ;main.c: 355: Write_RTC();
  1829  00133E  EC2B  F00D         	call	_Write_RTC	;wreg free
  1830                           
  1831                           ;main.c: 356: } else {
  1832  001342  D005               	goto	l276
  1833  001344                     l275:
  1834                           
  1835                           ;main.c: 357: minuto--;
  1836  001344  0652               	decf	_minuto,f,c
  1837  001346  A0D8               	btfss	status,0,c
  1838  001348  0653               	decf	_minuto+1,f,c
  1839                           
  1840                           ;main.c: 358: Write_RTC();
  1841  00134A  EC2B  F00D         	call	_Write_RTC	;wreg free
  1842  00134E                     l276:
  1843                           
  1844                           ;main.c: 359: }
  1845                           ;main.c: 360: while (PORTAbits.RA6 == 0);
  1846  00134E  AC80               	btfss	3968,6,c	;volatile
  1847  001350  D7FE               	goto	l276
  1848  001352                     u3180:
  1849                           
  1850                           ;main.c: 361: }
  1851                           ;main.c: 363: _delay((unsigned long)((50)*(8000000/4000.0)));
  1852  001352  0E82               	movlw	130
  1853  001354  6E28               	movwf	??_main& (0+255),c
  1854  001356  0EDE               	movlw	222
  1855  001358                     u3657:
  1856  001358  2EE8               	decfsz	wreg,f,c
  1857  00135A  D7FE               	bra	u3657
  1858  00135C  2E28               	decfsz	??_main& (0+255),f,c
  1859  00135E  D7FC               	bra	u3657
  1860  001360                     l267:
  1861                           
  1862                           ;main.c: 364: }
  1863                           ;main.c: 367: if (boton_seleccionar == 6) {
  1864  001360  0E06               	movlw	6
  1865  001362  1833               	xorwf	main@boton_seleccionar,w,c
  1866  001364  1034               	iorwf	main@boton_seleccionar+1,w,c
  1867  001366  A4D8               	btfss	status,2,c
  1868  001368  D02F               	goto	l280
  1869                           
  1870                           ;main.c: 369: if (PORTAbits.RA3 == 0) {
  1871  00136A  B680               	btfsc	3968,3,c	;volatile
  1872  00136C  D012               	goto	u3220
  1873                           
  1874                           ;main.c: 370: if (segundo == 59) {
  1875  00136E  0E3B               	movlw	59
  1876  001370  1835               	xorwf	_segundo,w,c
  1877  001372  1036               	iorwf	_segundo+1,w,c
  1878  001374  A4D8               	btfss	status,2,c
  1879  001376  D007               	goto	l282
  1880                           
  1881                           ;main.c: 371: segundo = 0;
  1882  001378  0E00               	movlw	0
  1883  00137A  6E36               	movwf	_segundo+1,c
  1884  00137C  0E00               	movlw	0
  1885  00137E  6E35               	movwf	_segundo,c
  1886                           
  1887                           ;main.c: 372: Write_RTC();
  1888  001380  EC2B  F00D         	call	_Write_RTC	;wreg free
  1889                           
  1890                           ;main.c: 373: } else {
  1891  001384  D004               	goto	l283
  1892  001386                     l282:
  1893                           
  1894                           ;main.c: 374: segundo++;
  1895  001386  4A35               	infsnz	_segundo,f,c
  1896  001388  2A36               	incf	_segundo+1,f,c
  1897                           
  1898                           ;main.c: 375: Write_RTC();
  1899  00138A  EC2B  F00D         	call	_Write_RTC	;wreg free
  1900  00138E                     l283:
  1901                           
  1902                           ;main.c: 376: }
  1903                           ;main.c: 377: while (PORTAbits.RA3 == 0);
  1904  00138E  A680               	btfss	3968,3,c	;volatile
  1905  001390  D7FE               	goto	l283
  1906  001392                     u3220:
  1907                           
  1908                           ;main.c: 378: }
  1909                           ;main.c: 380: if (PORTAbits.RA6 == 0) {
  1910  001392  BC80               	btfsc	3968,6,c	;volatile
  1911  001394  D012               	goto	u3250
  1912                           
  1913                           ;main.c: 381: if (segundo == 0) {
  1914  001396  5035               	movf	_segundo,w,c
  1915  001398  1036               	iorwf	_segundo+1,w,c
  1916  00139A  A4D8               	btfss	status,2,c
  1917  00139C  D007               	goto	l288
  1918                           
  1919                           ;main.c: 382: segundo = 59;
  1920  00139E  0E00               	movlw	0
  1921  0013A0  6E36               	movwf	_segundo+1,c
  1922  0013A2  0E3B               	movlw	59
  1923  0013A4  6E35               	movwf	_segundo,c
  1924                           
  1925                           ;main.c: 383: Write_RTC();
  1926  0013A6  EC2B  F00D         	call	_Write_RTC	;wreg free
  1927                           
  1928                           ;main.c: 384: } else {
  1929  0013AA  D005               	goto	l289
  1930  0013AC                     l288:
  1931                           
  1932                           ;main.c: 385: segundo--;
  1933  0013AC  0635               	decf	_segundo,f,c
  1934  0013AE  A0D8               	btfss	status,0,c
  1935  0013B0  0636               	decf	_segundo+1,f,c
  1936                           
  1937                           ;main.c: 386: Write_RTC();
  1938  0013B2  EC2B  F00D         	call	_Write_RTC	;wreg free
  1939  0013B6                     l289:
  1940                           
  1941                           ;main.c: 387: }
  1942                           ;main.c: 388: while (PORTAbits.RA6 == 0);
  1943  0013B6  AC80               	btfss	3968,6,c	;volatile
  1944  0013B8  D7FE               	goto	l289
  1945  0013BA                     u3250:
  1946                           
  1947                           ;main.c: 389: }
  1948                           ;main.c: 391: _delay((unsigned long)((50)*(8000000/4000.0)));
  1949  0013BA  0E82               	movlw	130
  1950  0013BC  6E28               	movwf	??_main& (0+255),c
  1951  0013BE  0EDE               	movlw	222
  1952  0013C0                     u3667:
  1953  0013C0  2EE8               	decfsz	wreg,f,c
  1954  0013C2  D7FE               	bra	u3667
  1955  0013C4  2E28               	decfsz	??_main& (0+255),f,c
  1956  0013C6  D7FC               	bra	u3667
  1957  0013C8                     l280:
  1958                           
  1959                           ;main.c: 392: }
  1960                           ;main.c: 394: if (boton_seleccionar == 7) {
  1961  0013C8  0E07               	movlw	7
  1962  0013CA  1833               	xorwf	main@boton_seleccionar,w,c
  1963  0013CC  1034               	iorwf	main@boton_seleccionar+1,w,c
  1964  0013CE  A4D8               	btfss	status,2,c
  1965  0013D0  D113               	goto	l348
  1966                           
  1967                           ;main.c: 396: boton_seleccionar = 0;
  1968  0013D2  0E00               	movlw	0
  1969  0013D4  6E34               	movwf	main@boton_seleccionar+1,c
  1970  0013D6  0E00               	movlw	0
  1971  0013D8  6E33               	movwf	main@boton_seleccionar,c
  1972                           
  1973                           ;main.c: 397: int boton_seleccionar_cafe = 0;
  1974  0013DA  0E00               	movlw	0
  1975  0013DC  6E30               	movwf	main@boton_seleccionar_cafe+1,c
  1976  0013DE  0E00               	movlw	0
  1977  0013E0  6E2F               	movwf	main@boton_seleccionar_cafe,c
  1978                           
  1979                           ;main.c: 398: int tipo = 0;
  1980  0013E2  0E00               	movlw	0
  1981  0013E4  6E2C               	movwf	main@tipo+1,c
  1982  0013E6  0E00               	movlw	0
  1983  0013E8  6E2B               	movwf	main@tipo,c
  1984                           
  1985                           ;main.c: 399: int tamanio = 0;
  1986  0013EA  0E00               	movlw	0
  1987  0013EC  6E2E               	movwf	main@tamanio+1,c
  1988  0013EE  0E00               	movlw	0
  1989  0013F0  6E2D               	movwf	main@tamanio,c
  1990                           
  1991                           ;main.c: 400: int accion = 0;
  1992  0013F2  0E00               	movlw	0
  1993  0013F4  6E32               	movwf	main@accion+1,c
  1994  0013F6  0E00               	movlw	0
  1995  0013F8  6E31               	movwf	main@accion,c
  1996  0013FA                     
  1997                           ;main.c: 404: if (PORTAbits.RA2 == 0) {
  1998  0013FA  B480               	btfsc	3968,2,c	;volatile
  1999  0013FC  D00E               	goto	u3290
  2000                           
  2001                           ;main.c: 405: if (boton_seleccionar_cafe == 2) {
  2002  0013FE  0E02               	movlw	2
  2003  001400  182F               	xorwf	main@boton_seleccionar_cafe,w,c
  2004  001402  1030               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2005  001404  A4D8               	btfss	status,2,c
  2006  001406  D005               	goto	l296
  2007                           
  2008                           ;main.c: 406: boton_seleccionar_cafe = 0;
  2009  001408  0E00               	movlw	0
  2010  00140A  6E30               	movwf	main@boton_seleccionar_cafe+1,c
  2011  00140C  0E00               	movlw	0
  2012  00140E  6E2F               	movwf	main@boton_seleccionar_cafe,c
  2013                           
  2014                           ;main.c: 407: } else {
  2015  001410  D002               	goto	l297
  2016  001412                     l296:
  2017                           
  2018                           ;main.c: 408: boton_seleccionar_cafe++;
  2019  001412  4A2F               	infsnz	main@boton_seleccionar_cafe,f,c
  2020  001414  2A30               	incf	main@boton_seleccionar_cafe+1,f,c
  2021  001416                     l297:
  2022                           
  2023                           ;main.c: 409: }
  2024                           ;main.c: 410: while (PORTAbits.RA2 == 0);
  2025  001416  A480               	btfss	3968,2,c	;volatile
  2026  001418  D7FE               	goto	l297
  2027  00141A                     u3290:
  2028                           
  2029                           ;main.c: 411: }
  2030                           ;main.c: 413: if (PORTAbits.RA7 == 0) {
  2031  00141A  BE80               	btfsc	3968,7,c	;volatile
  2032  00141C  D00E               	goto	u3320
  2033                           
  2034                           ;main.c: 414: if (boton_seleccionar_cafe == 0) {
  2035  00141E  502F               	movf	main@boton_seleccionar_cafe,w,c
  2036  001420  1030               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2037  001422  A4D8               	btfss	status,2,c
  2038  001424  D005               	goto	l302
  2039                           
  2040                           ;main.c: 415: boton_seleccionar_cafe = 2;
  2041  001426  0E00               	movlw	0
  2042  001428  6E30               	movwf	main@boton_seleccionar_cafe+1,c
  2043  00142A  0E02               	movlw	2
  2044  00142C  6E2F               	movwf	main@boton_seleccionar_cafe,c
  2045                           
  2046                           ;main.c: 416: } else {
  2047  00142E  D003               	goto	l303
  2048  001430                     l302:
  2049                           
  2050                           ;main.c: 417: boton_seleccionar_cafe--;
  2051  001430  062F               	decf	main@boton_seleccionar_cafe,f,c
  2052  001432  A0D8               	btfss	status,0,c
  2053  001434  0630               	decf	main@boton_seleccionar_cafe+1,f,c
  2054  001436                     l303:
  2055                           
  2056                           ;main.c: 418: }
  2057                           ;main.c: 419: while (PORTAbits.RA7 == 0);
  2058  001436  AE80               	btfss	3968,7,c	;volatile
  2059  001438  D7FE               	goto	l303
  2060  00143A                     u3320:
  2061                           
  2062                           ;main.c: 420: }
  2063                           ;main.c: 422: if (boton_seleccionar_cafe == 0) {
  2064  00143A  502F               	movf	main@boton_seleccionar_cafe,w,c
  2065  00143C  1030               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2066  00143E  A4D8               	btfss	status,2,c
  2067  001440  D020               	goto	u3390
  2068                           
  2069                           ;main.c: 424: if (PORTAbits.RA3 == 0) {
  2070  001442  B680               	btfsc	3968,3,c	;volatile
  2071  001444  D00E               	goto	u3360
  2072                           
  2073                           ;main.c: 425: if (tipo == 2) {
  2074  001446  0E02               	movlw	2
  2075  001448  182B               	xorwf	main@tipo,w,c
  2076  00144A  102C               	iorwf	main@tipo+1,w,c
  2077  00144C  A4D8               	btfss	status,2,c
  2078  00144E  D005               	goto	l309
  2079                           
  2080                           ;main.c: 426: tipo = 0;
  2081  001450  0E00               	movlw	0
  2082  001452  6E2C               	movwf	main@tipo+1,c
  2083  001454  0E00               	movlw	0
  2084  001456  6E2B               	movwf	main@tipo,c
  2085                           
  2086                           ;main.c: 427: } else {
  2087  001458  D002               	goto	l310
  2088  00145A                     l309:
  2089                           
  2090                           ;main.c: 428: tipo++;
  2091  00145A  4A2B               	infsnz	main@tipo,f,c
  2092  00145C  2A2C               	incf	main@tipo+1,f,c
  2093  00145E                     l310:
  2094                           
  2095                           ;main.c: 430: }
  2096                           ;main.c: 431: while (PORTAbits.RA3 == 0);
  2097  00145E  A680               	btfss	3968,3,c	;volatile
  2098  001460  D7FE               	goto	l310
  2099  001462                     u3360:
  2100                           
  2101                           ;main.c: 432: }
  2102                           ;main.c: 435: if (PORTAbits.RA6 == 0) {
  2103  001462  BC80               	btfsc	3968,6,c	;volatile
  2104  001464  D00E               	goto	u3390
  2105                           
  2106                           ;main.c: 436: if (tipo == 0) {
  2107  001466  502B               	movf	main@tipo,w,c
  2108  001468  102C               	iorwf	main@tipo+1,w,c
  2109  00146A  A4D8               	btfss	status,2,c
  2110  00146C  D005               	goto	l315
  2111                           
  2112                           ;main.c: 437: tipo = 2;
  2113  00146E  0E00               	movlw	0
  2114  001470  6E2C               	movwf	main@tipo+1,c
  2115  001472  0E02               	movlw	2
  2116  001474  6E2B               	movwf	main@tipo,c
  2117                           
  2118                           ;main.c: 439: } else {
  2119  001476  D003               	goto	l316
  2120  001478                     l315:
  2121                           
  2122                           ;main.c: 440: tipo--;
  2123  001478  062B               	decf	main@tipo,f,c
  2124  00147A  A0D8               	btfss	status,0,c
  2125  00147C  062C               	decf	main@tipo+1,f,c
  2126  00147E                     l316:
  2127                           
  2128                           ;main.c: 442: }
  2129                           ;main.c: 443: while (PORTAbits.RA6 == 0);
  2130  00147E  AC80               	btfss	3968,6,c	;volatile
  2131  001480  D7FE               	goto	l316
  2132  001482                     u3390:
  2133                           
  2134                           ;main.c: 444: }
  2135                           ;main.c: 445: }
  2136                           ;main.c: 447: if (boton_seleccionar_cafe == 1) {
  2137  001482  042F               	decf	main@boton_seleccionar_cafe,w,c
  2138  001484  1030               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2139  001486  A4D8               	btfss	status,2,c
  2140  001488  D020               	goto	u3460
  2141                           
  2142                           ;main.c: 449: if (PORTAbits.RA3 == 0) {
  2143  00148A  B680               	btfsc	3968,3,c	;volatile
  2144  00148C  D00E               	goto	u3430
  2145                           
  2146                           ;main.c: 450: if (tamanio == 2) {
  2147  00148E  0E02               	movlw	2
  2148  001490  182D               	xorwf	main@tamanio,w,c
  2149  001492  102E               	iorwf	main@tamanio+1,w,c
  2150  001494  A4D8               	btfss	status,2,c
  2151  001496  D005               	goto	l322
  2152                           
  2153                           ;main.c: 451: tamanio = 0;
  2154  001498  0E00               	movlw	0
  2155  00149A  6E2E               	movwf	main@tamanio+1,c
  2156  00149C  0E00               	movlw	0
  2157  00149E  6E2D               	movwf	main@tamanio,c
  2158                           
  2159                           ;main.c: 452: } else {
  2160  0014A0  D002               	goto	l323
  2161  0014A2                     l322:
  2162                           
  2163                           ;main.c: 453: tamanio++;
  2164  0014A2  4A2D               	infsnz	main@tamanio,f,c
  2165  0014A4  2A2E               	incf	main@tamanio+1,f,c
  2166  0014A6                     l323:
  2167                           
  2168                           ;main.c: 454: }
  2169                           ;main.c: 455: while (PORTAbits.RA3 == 0);
  2170  0014A6  A680               	btfss	3968,3,c	;volatile
  2171  0014A8  D7FE               	goto	l323
  2172  0014AA                     u3430:
  2173                           
  2174                           ;main.c: 456: }
  2175                           ;main.c: 458: if (PORTAbits.RA6 == 0) {
  2176  0014AA  BC80               	btfsc	3968,6,c	;volatile
  2177  0014AC  D00E               	goto	u3460
  2178                           
  2179                           ;main.c: 459: if (tamanio == 0) {
  2180  0014AE  502D               	movf	main@tamanio,w,c
  2181  0014B0  102E               	iorwf	main@tamanio+1,w,c
  2182  0014B2  A4D8               	btfss	status,2,c
  2183  0014B4  D005               	goto	l328
  2184                           
  2185                           ;main.c: 460: tamanio = 2;
  2186  0014B6  0E00               	movlw	0
  2187  0014B8  6E2E               	movwf	main@tamanio+1,c
  2188  0014BA  0E02               	movlw	2
  2189  0014BC  6E2D               	movwf	main@tamanio,c
  2190                           
  2191                           ;main.c: 461: } else {
  2192  0014BE  D003               	goto	l329
  2193  0014C0                     l328:
  2194                           
  2195                           ;main.c: 462: tamanio--;
  2196  0014C0  062D               	decf	main@tamanio,f,c
  2197  0014C2  A0D8               	btfss	status,0,c
  2198  0014C4  062E               	decf	main@tamanio+1,f,c
  2199  0014C6                     l329:
  2200                           
  2201                           ;main.c: 463: }
  2202                           ;main.c: 464: while (PORTAbits.RA6 == 0);
  2203  0014C6  AC80               	btfss	3968,6,c	;volatile
  2204  0014C8  D7FE               	goto	l329
  2205  0014CA                     u3460:
  2206                           
  2207                           ;main.c: 465: }
  2208                           ;main.c: 466: }
  2209                           ;main.c: 468: if (boton_seleccionar_cafe == 2) {
  2210  0014CA  0E02               	movlw	2
  2211  0014CC  182F               	xorwf	main@boton_seleccionar_cafe,w,c
  2212  0014CE  1030               	iorwf	main@boton_seleccionar_cafe+1,w,c
  2213  0014D0  A4D8               	btfss	status,2,c
  2214  0014D2  D02B               	goto	u3570
  2215                           
  2216                           ;main.c: 469: if (PORTAbits.RA3 == 0) {
  2217  0014D4  B680               	btfsc	3968,3,c	;volatile
  2218  0014D6  D00D               	goto	u3500
  2219                           
  2220                           ;main.c: 470: if (accion == 1) {
  2221  0014D8  0431               	decf	main@accion,w,c
  2222  0014DA  1032               	iorwf	main@accion+1,w,c
  2223  0014DC  A4D8               	btfss	status,2,c
  2224  0014DE  D005               	goto	l335
  2225                           
  2226                           ;main.c: 471: accion = 0;
  2227  0014E0  0E00               	movlw	0
  2228  0014E2  6E32               	movwf	main@accion+1,c
  2229  0014E4  0E00               	movlw	0
  2230  0014E6  6E31               	movwf	main@accion,c
  2231                           
  2232                           ;main.c: 472: } else {
  2233  0014E8  D002               	goto	l336
  2234  0014EA                     l335:
  2235                           
  2236                           ;main.c: 473: accion++;
  2237  0014EA  4A31               	infsnz	main@accion,f,c
  2238  0014EC  2A32               	incf	main@accion+1,f,c
  2239  0014EE                     l336:
  2240                           
  2241                           ;main.c: 474: }
  2242                           ;main.c: 475: while (PORTAbits.RA3 == 0);
  2243  0014EE  A680               	btfss	3968,3,c	;volatile
  2244  0014F0  D7FE               	goto	l336
  2245  0014F2                     u3500:
  2246                           
  2247                           ;main.c: 476: }
  2248                           ;main.c: 478: if (PORTAbits.RA6 == 0) {
  2249  0014F2  BC80               	btfsc	3968,6,c	;volatile
  2250  0014F4  D00E               	goto	u3530
  2251                           
  2252                           ;main.c: 479: if (accion == 0) {
  2253  0014F6  5031               	movf	main@accion,w,c
  2254  0014F8  1032               	iorwf	main@accion+1,w,c
  2255  0014FA  A4D8               	btfss	status,2,c
  2256  0014FC  D005               	goto	l341
  2257                           
  2258                           ;main.c: 480: accion = 1;
  2259  0014FE  0E00               	movlw	0
  2260  001500  6E32               	movwf	main@accion+1,c
  2261  001502  0E01               	movlw	1
  2262  001504  6E31               	movwf	main@accion,c
  2263                           
  2264                           ;main.c: 481: } else {
  2265  001506  D003               	goto	l342
  2266  001508                     l341:
  2267                           
  2268                           ;main.c: 482: accion--;
  2269  001508  0631               	decf	main@accion,f,c
  2270  00150A  A0D8               	btfss	status,0,c
  2271  00150C  0632               	decf	main@accion+1,f,c
  2272  00150E                     l342:
  2273                           
  2274                           ;main.c: 483: }
  2275                           ;main.c: 484: while (PORTAbits.RA6 == 0);
  2276  00150E  AC80               	btfss	3968,6,c	;volatile
  2277  001510  D7FE               	goto	l342
  2278  001512                     u3530:
  2279                           
  2280                           ;main.c: 485: }
  2281                           ;main.c: 487: if (PORTAbits.RA5 == 0) {
  2282  001512  BA80               	btfsc	3968,5,c	;volatile
  2283  001514  D00A               	goto	u3570
  2284                           
  2285                           ;main.c: 488: if (accion == 0) {
  2286  001516  5031               	movf	main@accion,w,c
  2287  001518  1032               	iorwf	main@accion+1,w,c
  2288  00151A  B4D8               	btfsc	status,2,c
  2289  00151C  D06D               	goto	l348
  2290                           
  2291                           ;main.c: 491: }
  2292                           ;main.c: 493: if (accion == 1) {
  2293                           
  2294                           ;main.c: 490: break;
  2295  00151E  0431               	decf	main@accion,w,c
  2296  001520  1032               	iorwf	main@accion+1,w,c
  2297  001522  B4D8               	btfsc	status,2,c
  2298  001524  D069               	goto	l348
  2299  001526                     
  2300                           ;main.c: 495: }
  2301                           ;main.c: 497: while (PORTAbits.RA5 == 1);
  2302  001526  BA80               	btfsc	3968,5,c	;volatile
  2303  001528  D7FE               	goto	l349
  2304  00152A                     u3570:
  2305                           
  2306                           ;main.c: 498: }
  2307                           ;main.c: 499: }
  2308                           ;main.c: 502: sprintf(buffer3, "%s", array_boton_seleccionar_tipo_cafe[tipo]);
  2309  00152A  0EAA               	movlw	low _buffer3
  2310  00152C  6E0D               	movwf	sprintf@sp,c
  2311  00152E  0E00               	movlw	high _buffer3
  2312  001530  6E0E               	movwf	sprintf@sp+1,c
  2313  001532  0EE6               	movlw	low STR_28
  2314  001534  6E0F               	movwf	sprintf@f,c
  2315  001536  0E0F               	movlw	high STR_28
  2316  001538  6E10               	movwf	sprintf@f+1,c
  2317  00153A  90D8               	bcf	status,0,c
  2318  00153C  342B               	rlcf	main@tipo,w,c
  2319  00153E  6ED9               	movwf	fsr2l,c
  2320  001540  342C               	rlcf	main@tipo+1,w,c
  2321  001542  6EDA               	movwf	fsr2h,c
  2322  001544  0EE8               	movlw	low _array_boton_seleccionar_tipo_cafe
  2323  001546  26D9               	addwf	fsr2l,f,c
  2324  001548  0E00               	movlw	high _array_boton_seleccionar_tipo_cafe
  2325  00154A  22DA               	addwfc	fsr2h,f,c
  2326  00154C  CFDE F011          	movff	postinc2,?_sprintf+4
  2327  001550  CFDD F012          	movff	postdec2,?_sprintf+5
  2328  001554  EC07  F00B         	call	_sprintf	;wreg free
  2329                           
  2330                           ;main.c: 503: lcd_gotoxy(1, 1);
  2331  001558  0E01               	movlw	1
  2332  00155A  6E05               	movwf	lcd_gotoxy@y,c
  2333  00155C  0E01               	movlw	1
  2334  00155E  EC1C  F012         	call	_lcd_gotoxy
  2335                           
  2336                           ;main.c: 504: lcd_putrs(buffer3);
  2337  001562  0EAA               	movlw	low _buffer3
  2338  001564  6E09               	movwf	lcd_putrs@ptr,c
  2339  001566  0E00               	movlw	high _buffer3
  2340  001568  6E0A               	movwf	lcd_putrs@ptr+1,c
  2341  00156A  EC61  F011         	call	_lcd_putrs	;wreg free
  2342                           
  2343                           ;main.c: 506: sprintf(buffer4, "%s", array_boton_seleccionar_tamanio_cafe[tamanio]);
  2344  00156E  0E96               	movlw	low _buffer4
  2345  001570  6E0D               	movwf	sprintf@sp,c
  2346  001572  0E00               	movlw	high _buffer4
  2347  001574  6E0E               	movwf	sprintf@sp+1,c
  2348  001576  0EE6               	movlw	low STR_28
  2349  001578  6E0F               	movwf	sprintf@f,c
  2350  00157A  0E0F               	movlw	high STR_28
  2351  00157C  6E10               	movwf	sprintf@f+1,c
  2352  00157E  90D8               	bcf	status,0,c
  2353  001580  342D               	rlcf	main@tamanio,w,c
  2354  001582  6ED9               	movwf	fsr2l,c
  2355  001584  342E               	rlcf	main@tamanio+1,w,c
  2356  001586  6EDA               	movwf	fsr2h,c
  2357  001588  0EE2               	movlw	low _array_boton_seleccionar_tamanio_cafe
  2358  00158A  26D9               	addwf	fsr2l,f,c
  2359  00158C  0E00               	movlw	high _array_boton_seleccionar_tamanio_cafe
  2360  00158E  22DA               	addwfc	fsr2h,f,c
  2361  001590  CFDE F011          	movff	postinc2,?_sprintf+4
  2362  001594  CFDD F012          	movff	postdec2,?_sprintf+5
  2363  001598  EC07  F00B         	call	_sprintf	;wreg free
  2364                           
  2365                           ;main.c: 507: lcd_gotoxy(9, 1);
  2366  00159C  0E01               	movlw	1
  2367  00159E  6E05               	movwf	lcd_gotoxy@y,c
  2368  0015A0  0E09               	movlw	9
  2369  0015A2  EC1C  F012         	call	_lcd_gotoxy
  2370                           
  2371                           ;main.c: 508: lcd_putrs(buffer4);
  2372  0015A6  0E96               	movlw	low _buffer4
  2373  0015A8  6E09               	movwf	lcd_putrs@ptr,c
  2374  0015AA  0E00               	movlw	high _buffer4
  2375  0015AC  6E0A               	movwf	lcd_putrs@ptr+1,c
  2376  0015AE  EC61  F011         	call	_lcd_putrs	;wreg free
  2377                           
  2378                           ;main.c: 510: sprintf(buffer5, "%s", array_boton_seleccionar_accion_cafe[accion]);
  2379  0015B2  0E82               	movlw	low _buffer5
  2380  0015B4  6E0D               	movwf	sprintf@sp,c
  2381  0015B6  0E00               	movlw	high _buffer5
  2382  0015B8  6E0E               	movwf	sprintf@sp+1,c
  2383  0015BA  0EE6               	movlw	low STR_28
  2384  0015BC  6E0F               	movwf	sprintf@f,c
  2385  0015BE  0E0F               	movlw	high STR_28
  2386  0015C0  6E10               	movwf	sprintf@f+1,c
  2387  0015C2  90D8               	bcf	status,0,c
  2388  0015C4  3431               	rlcf	main@accion,w,c
  2389  0015C6  6ED9               	movwf	fsr2l,c
  2390  0015C8  3432               	rlcf	main@accion+1,w,c
  2391  0015CA  6EDA               	movwf	fsr2h,c
  2392  0015CC  0EEE               	movlw	low _array_boton_seleccionar_accion_cafe
  2393  0015CE  26D9               	addwf	fsr2l,f,c
  2394  0015D0  0E00               	movlw	high _array_boton_seleccionar_accion_cafe
  2395  0015D2  22DA               	addwfc	fsr2h,f,c
  2396  0015D4  CFDE F011          	movff	postinc2,?_sprintf+4
  2397  0015D8  CFDD F012          	movff	postdec2,?_sprintf+5
  2398  0015DC  EC07  F00B         	call	_sprintf	;wreg free
  2399                           
  2400                           ;main.c: 511: lcd_gotoxy(1, 2);
  2401  0015E0  0E02               	movlw	2
  2402  0015E2  6E05               	movwf	lcd_gotoxy@y,c
  2403  0015E4  0E01               	movlw	1
  2404  0015E6  EC1C  F012         	call	_lcd_gotoxy
  2405                           
  2406                           ;main.c: 512: lcd_putrs(buffer5);
  2407  0015EA  0E82               	movlw	low _buffer5
  2408  0015EC  6E09               	movwf	lcd_putrs@ptr,c
  2409  0015EE  0E00               	movlw	high _buffer5
  2410  0015F0  6E0A               	movwf	lcd_putrs@ptr+1,c
  2411  0015F2  EC61  F011         	call	_lcd_putrs	;wreg free
  2412  0015F6  D701               	goto	l294
  2413  0015F8                     l348:
  2414                           
  2415                           ;main.c: 514: }
  2416                           ;main.c: 515: }
  2417                           ;main.c: 518: }
  2418                           ;main.c: 520: setRelojDigital();
  2419  0015F8  EC65  F012         	call	_setRelojDigital	;wreg free
  2420                           
  2421                           ;main.c: 521: _delay((unsigned long)((98)*(8000000/4000.0)));
  2422  0015FC  0EFF               	movlw	255
  2423  0015FE  6E28               	movwf	??_main& (0+255),c
  2424  001600  0E8A               	movlw	138
  2425  001602                     u3677:
  2426  001602  2EE8               	decfsz	wreg,f,c
  2427  001604  D7FE               	bra	u3677
  2428  001606  2E28               	decfsz	??_main& (0+255),f,c
  2429  001608  D7FC               	bra	u3677
  2430  00160A  D000               	nop2	
  2431  00160C  D4F8               	goto	l186
  2432  00160E                     __end_of_main:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           postinc0	equ	0xFEE
  2439                           wreg	equ	0xFE8
  2440                           postdec1	equ	0xFE5
  2441                           fsr1l	equ	0xFE1
  2442                           postinc2	equ	0xFDE
  2443                           postdec2	equ	0xFDD
  2444                           fsr2h	equ	0xFDA
  2445                           fsr2l	equ	0xFD9
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _setup *****************
  2449 ;; Defined at:
  2450 ;;		line 108 in file "main.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    7
  2471 ;; This function calls:
  2472 ;;		_Write_RTC
  2473 ;;		_lcd_comand
  2474 ;;		_lcd_init
  2475 ;;		_setRelojDigital
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text1
  2482  0023A0                     __ptext1:
  2483                           	opt stack 0
  2484  0023A0                     _setup:
  2485                           	opt stack 23
  2486                           
  2487                           ;main.c: 109: OSCTUNEbits.INTSRC = 1;
  2488                           
  2489                           ;incstack = 0
  2490  0023A0  8E9B               	bsf	3995,7,c	;volatile
  2491                           
  2492                           ;main.c: 110: OSCTUNEbits.PLLEN = 0;
  2493  0023A2  9C9B               	bcf	3995,6,c	;volatile
  2494                           
  2495                           ;main.c: 111: OSCCONbits.IRCF0 = 1;
  2496  0023A4  88D3               	bsf	4051,4,c	;volatile
  2497                           
  2498                           ;main.c: 112: OSCCONbits.IRCF1 = 1;
  2499  0023A6  8AD3               	bsf	4051,5,c	;volatile
  2500                           
  2501                           ;main.c: 113: OSCCONbits.IRCF2 = 1;
  2502  0023A8  8CD3               	bsf	4051,6,c	;volatile
  2503                           
  2504                           ;main.c: 114: OSCCONbits.SCS0 = 0;
  2505  0023AA  90D3               	bcf	4051,0,c	;volatile
  2506                           
  2507                           ;main.c: 115: OSCCONbits.SCS1 = 0;
  2508  0023AC  92D3               	bcf	4051,1,c	;volatile
  2509                           
  2510                           ;main.c: 116: TRISA = 0b11111111;
  2511  0023AE  6892               	setf	3986,c	;volatile
  2512                           
  2513                           ;main.c: 117: TRISB = 0;
  2514  0023B0  0E00               	movlw	0
  2515  0023B2  6E93               	movwf	3987,c	;volatile
  2516                           
  2517                           ;main.c: 118: TRISC = 0b00000111;
  2518  0023B4  0E07               	movlw	7
  2519  0023B6  6E94               	movwf	3988,c	;volatile
  2520                           
  2521                           ;main.c: 119: INTCON2bits.RBPU = 1;
  2522  0023B8  8EF1               	bsf	intcon2,7,c	;volatile
  2523                           
  2524                           ;main.c: 120: ANCON0 = 0b11111111;
  2525  0023BA  010F               	movlb	15	; () banked
  2526  0023BC  6948               	setf	72,b	;volatile
  2527                           
  2528                           ;main.c: 121: ANCON1 = 0b10010111;
  2529  0023BE  0E97               	movlw	151
  2530  0023C0  010F               	movlb	15	; () banked
  2531  0023C2  6F49               	movwf	73,b	;volatile
  2532                           
  2533                           ;main.c: 122: ADCON0 = 0b00111111;
  2534  0023C4  0E3F               	movlw	63
  2535  0023C6  6EC2               	movwf	4034,c	;volatile
  2536                           
  2537                           ; BSR set to: 15
  2538                           ;main.c: 123: ADCON1 = 0b11111111;
  2539  0023C8  68C1               	setf	4033,c	;volatile
  2540                           
  2541                           ; BSR set to: 15
  2542                           ;main.c: 126: T1CONbits.T1OSCEN = 1;
  2543  0023CA  86CD               	bsf	4045,3,c	;volatile
  2544                           
  2545                           ; BSR set to: 15
  2546                           ;main.c: 128: lcd_init();
  2547  0023CC  EC1B  F010         	call	_lcd_init	;wreg free
  2548                           
  2549                           ;main.c: 129: lcd_comand(0b00001100);
  2550  0023D0  0E0C               	movlw	12
  2551  0023D2  EC6C  F012         	call	_lcd_comand
  2552                           
  2553                           ;main.c: 131: setRelojDigital();
  2554  0023D6  EC65  F012         	call	_setRelojDigital	;wreg free
  2555                           
  2556                           ;main.c: 132: Write_RTC();
  2557  0023DA  EC2B  F00D         	call	_Write_RTC	;wreg free
  2558  0023DE  0012               	return		;funcret
  2559  0023E0                     __end_of_setup:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           intcon2	equ	0xFF1
  2566                           postinc0	equ	0xFEE
  2567                           wreg	equ	0xFE8
  2568                           postdec1	equ	0xFE5
  2569                           fsr1l	equ	0xFE1
  2570                           postinc2	equ	0xFDE
  2571                           postdec2	equ	0xFDD
  2572                           fsr2h	equ	0xFDA
  2573                           fsr2l	equ	0xFD9
  2574                           status	equ	0xFD8
  2575                           
  2576 ;; *************** function _setRelojDigital *****************
  2577 ;; Defined at:
  2578 ;;		line 100 in file "main.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;		None
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;		None
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2596 ;;Total ram usage:        0 bytes
  2597 ;; Hardware stack levels used:    1
  2598 ;; Hardware stack levels required when called:    6
  2599 ;; This function calls:
  2600 ;;		_setDiaMesAnio
  2601 ;;		_setDiaSemana
  2602 ;;		_setHoraMinutoSegundo
  2603 ;; This function is called by:
  2604 ;;		_setup
  2605 ;;		_main
  2606 ;; This function uses a non-reentrant model
  2607 ;;
  2608                           
  2609                           	psect	text2
  2610  0024CA                     __ptext2:
  2611                           	opt stack 0
  2612  0024CA                     _setRelojDigital:
  2613                           	opt stack 23
  2614                           
  2615                           ;main.c: 101: setDiaSemana();
  2616                           
  2617                           ;incstack = 0
  2618  0024CA  EC85  F00C         	call	_setDiaSemana	;wreg free
  2619                           
  2620                           ;main.c: 102: setDiaMesAnio();
  2621  0024CE  ECDD  F00F         	call	_setDiaMesAnio	;wreg free
  2622                           
  2623                           ;main.c: 103: setHoraMinutoSegundo();
  2624  0024D2  ECC9  F010         	call	_setHoraMinutoSegundo	;wreg free
  2625  0024D6  0012               	return		;funcret
  2626  0024D8                     __end_of_setRelojDigital:
  2627                           	opt stack 0
  2628                           tblptru	equ	0xFF8
  2629                           tblptrh	equ	0xFF7
  2630                           tblptrl	equ	0xFF6
  2631                           tablat	equ	0xFF5
  2632                           intcon2	equ	0xFF1
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           postdec1	equ	0xFE5
  2636                           fsr1l	equ	0xFE1
  2637                           postinc2	equ	0xFDE
  2638                           postdec2	equ	0xFDD
  2639                           fsr2h	equ	0xFDA
  2640                           fsr2l	equ	0xFD9
  2641                           status	equ	0xFD8
  2642                           
  2643 ;; *************** function _setHoraMinutoSegundo *****************
  2644 ;; Defined at:
  2645 ;;		line 87 in file "main.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2663 ;;Total ram usage:        0 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    5
  2666 ;; This function calls:
  2667 ;;		_Write_RTC
  2668 ;;		_lcd_gotoxy
  2669 ;;		_lcd_putrs
  2670 ;;		_sprintf
  2671 ;; This function is called by:
  2672 ;;		_setRelojDigital
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text3
  2677  002192                     __ptext3:
  2678                           	opt stack 0
  2679  002192                     _setHoraMinutoSegundo:
  2680                           	opt stack 23
  2681                           
  2682                           ;main.c: 88: if (hora >= 24) {
  2683                           
  2684                           ;incstack = 0
  2685  002192  BE55               	btfsc	_hora+1,7,c
  2686  002194  D014               	goto	l174
  2687  002196  5055               	movf	_hora+1,w,c
  2688  002198  E104               	bnz	u2590
  2689  00219A  0E18               	movlw	24
  2690  00219C  5C54               	subwf	_hora,w,c
  2691  00219E  A0D8               	btfss	status,0,c
  2692  0021A0  D00E               	goto	l174
  2693  0021A2                     u2590:
  2694                           
  2695                           ;main.c: 89: hora = 0;
  2696  0021A2  0E00               	movlw	0
  2697  0021A4  6E55               	movwf	_hora+1,c
  2698  0021A6  0E00               	movlw	0
  2699  0021A8  6E54               	movwf	_hora,c
  2700                           
  2701                           ;main.c: 90: minuto = 0;
  2702  0021AA  0E00               	movlw	0
  2703  0021AC  6E53               	movwf	_minuto+1,c
  2704  0021AE  0E00               	movlw	0
  2705  0021B0  6E52               	movwf	_minuto,c
  2706                           
  2707                           ;main.c: 91: segundo = 0;
  2708  0021B2  0E00               	movlw	0
  2709  0021B4  6E36               	movwf	_segundo+1,c
  2710  0021B6  0E00               	movlw	0
  2711  0021B8  6E35               	movwf	_segundo,c
  2712                           
  2713                           ;main.c: 92: Write_RTC();
  2714  0021BA  EC2B  F00D         	call	_Write_RTC	;wreg free
  2715  0021BE                     l174:
  2716                           
  2717                           ;main.c: 93: }
  2718                           ;main.c: 95: sprintf(buffer2, "%02u:%02u:%02u", hora, minuto, segundo);
  2719  0021BE  0EBE               	movlw	low _buffer2
  2720  0021C0  6E0D               	movwf	sprintf@sp,c
  2721  0021C2  0E00               	movlw	high _buffer2
  2722  0021C4  6E0E               	movwf	sprintf@sp+1,c
  2723  0021C6  0E1E               	movlw	low STR_25
  2724  0021C8  6E0F               	movwf	sprintf@f,c
  2725  0021CA  0E0F               	movlw	high STR_25
  2726  0021CC  6E10               	movwf	sprintf@f+1,c
  2727  0021CE  C054  F011         	movff	_hora,?_sprintf+4
  2728  0021D2  C055  F012         	movff	_hora+1,?_sprintf+5
  2729  0021D6  C052  F013         	movff	_minuto,?_sprintf+6
  2730  0021DA  C053  F014         	movff	_minuto+1,?_sprintf+7
  2731  0021DE  C035  F015         	movff	_segundo,?_sprintf+8
  2732  0021E2  C036  F016         	movff	_segundo+1,?_sprintf+9
  2733  0021E6  EC07  F00B         	call	_sprintf	;wreg free
  2734                           
  2735                           ;main.c: 96: lcd_gotoxy(1, 2);
  2736  0021EA  0E02               	movlw	2
  2737  0021EC  6E05               	movwf	lcd_gotoxy@y,c
  2738  0021EE  0E01               	movlw	1
  2739  0021F0  EC1C  F012         	call	_lcd_gotoxy
  2740                           
  2741                           ;main.c: 97: lcd_putrs(buffer2);
  2742  0021F4  0EBE               	movlw	low _buffer2
  2743  0021F6  6E09               	movwf	lcd_putrs@ptr,c
  2744  0021F8  0E00               	movlw	high _buffer2
  2745  0021FA  6E0A               	movwf	lcd_putrs@ptr+1,c
  2746  0021FC  EC61  F011         	call	_lcd_putrs	;wreg free
  2747  002200  0012               	return		;funcret
  2748  002202                     __end_of_setHoraMinutoSegundo:
  2749                           	opt stack 0
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           intcon2	equ	0xFF1
  2755                           postinc0	equ	0xFEE
  2756                           wreg	equ	0xFE8
  2757                           postdec1	equ	0xFE5
  2758                           fsr1l	equ	0xFE1
  2759                           postinc2	equ	0xFDE
  2760                           postdec2	equ	0xFDD
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function _setDiaSemana *****************
  2766 ;; Defined at:
  2767 ;;		line 39 in file "main.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;		None
  2772 ;; Return value:  Size  Location     Type
  2773 ;;                  1    wreg      void 
  2774 ;; Registers used:
  2775 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2785 ;;Total ram usage:        1 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    5
  2788 ;; This function calls:
  2789 ;;		_lcd_gotoxy
  2790 ;;		_lcd_putrs
  2791 ;; This function is called by:
  2792 ;;		_setRelojDigital
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text4
  2797  00190A                     __ptext4:
  2798                           	opt stack 0
  2799  00190A                     _setDiaSemana:
  2800                           	opt stack 23
  2801                           
  2802                           ;main.c: 40: if (diasem == 0) {
  2803                           
  2804                           ;incstack = 0
  2805  00190A  5058               	movf	_diasem,w,c
  2806  00190C  1059               	iorwf	_diasem+1,w,c
  2807  00190E  A4D8               	btfss	status,2,c
  2808  001910  D013               	goto	l153
  2809                           
  2810                           ;main.c: 41: lcd_gotoxy(1, 1);
  2811  001912  0E01               	movlw	1
  2812  001914  6E05               	movwf	lcd_gotoxy@y,c
  2813  001916  0E01               	movlw	1
  2814  001918  EC1C  F012         	call	_lcd_gotoxy
  2815                           
  2816                           ;main.c: 42: lcd_putrs("Domingo");
  2817  00191C  0EA3               	movlw	low STR_17
  2818  00191E  6E09               	movwf	lcd_putrs@ptr,c
  2819  001920  0E0F               	movlw	high STR_17
  2820  001922  6E0A               	movwf	lcd_putrs@ptr+1,c
  2821  001924  EC61  F011         	call	_lcd_putrs	;wreg free
  2822                           
  2823                           ;main.c: 43: _delay((unsigned long)((50)*(8000000/4000.0)));
  2824  001928  0E82               	movlw	130
  2825  00192A  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2826  00192C  0EDE               	movlw	222
  2827  00192E                     u3687:
  2828  00192E  2EE8               	decfsz	wreg,f,c
  2829  001930  D7FE               	bra	u3687
  2830  001932  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2831  001934  D7FC               	bra	u3687
  2832                           
  2833                           ;main.c: 44: } else if (diasem == 1) {
  2834  001936  0012               	return	
  2835  001938                     l153:
  2836  001938  0458               	decf	_diasem,w,c
  2837  00193A  1059               	iorwf	_diasem+1,w,c
  2838  00193C  A4D8               	btfss	status,2,c
  2839  00193E  D013               	goto	l155
  2840                           
  2841                           ;main.c: 45: lcd_gotoxy(1, 1);
  2842  001940  0E01               	movlw	1
  2843  001942  6E05               	movwf	lcd_gotoxy@y,c
  2844  001944  0E01               	movlw	1
  2845  001946  EC1C  F012         	call	_lcd_gotoxy
  2846                           
  2847                           ;main.c: 46: lcd_putrs("Lunes  ");
  2848  00194A  0E6B               	movlw	low STR_18
  2849  00194C  6E09               	movwf	lcd_putrs@ptr,c
  2850  00194E  0E0F               	movlw	high STR_18
  2851  001950  6E0A               	movwf	lcd_putrs@ptr+1,c
  2852  001952  EC61  F011         	call	_lcd_putrs	;wreg free
  2853                           
  2854                           ;main.c: 47: _delay((unsigned long)((50)*(8000000/4000.0)));
  2855  001956  0E82               	movlw	130
  2856  001958  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2857  00195A  0EDE               	movlw	222
  2858  00195C                     u3697:
  2859  00195C  2EE8               	decfsz	wreg,f,c
  2860  00195E  D7FE               	bra	u3697
  2861  001960  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2862  001962  D7FC               	bra	u3697
  2863                           
  2864                           ;main.c: 48: } else if (diasem == 2) {
  2865  001964  0012               	return	
  2866  001966                     l155:
  2867  001966  0E02               	movlw	2
  2868  001968  1858               	xorwf	_diasem,w,c
  2869  00196A  1059               	iorwf	_diasem+1,w,c
  2870  00196C  A4D8               	btfss	status,2,c
  2871  00196E  D013               	goto	l157
  2872                           
  2873                           ;main.c: 49: lcd_gotoxy(1, 1);
  2874  001970  0E01               	movlw	1
  2875  001972  6E05               	movwf	lcd_gotoxy@y,c
  2876  001974  0E01               	movlw	1
  2877  001976  EC1C  F012         	call	_lcd_gotoxy
  2878                           
  2879                           ;main.c: 50: lcd_putrs("Martes ");
  2880  00197A  0E7B               	movlw	low STR_19
  2881  00197C  6E09               	movwf	lcd_putrs@ptr,c
  2882  00197E  0E0F               	movlw	high STR_19
  2883  001980  6E0A               	movwf	lcd_putrs@ptr+1,c
  2884  001982  EC61  F011         	call	_lcd_putrs	;wreg free
  2885                           
  2886                           ;main.c: 51: _delay((unsigned long)((50)*(8000000/4000.0)));
  2887  001986  0E82               	movlw	130
  2888  001988  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2889  00198A  0EDE               	movlw	222
  2890  00198C                     u3707:
  2891  00198C  2EE8               	decfsz	wreg,f,c
  2892  00198E  D7FE               	bra	u3707
  2893  001990  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2894  001992  D7FC               	bra	u3707
  2895                           
  2896                           ;main.c: 52: } else if (diasem == 3) {
  2897  001994  0012               	return	
  2898  001996                     l157:
  2899  001996  0E03               	movlw	3
  2900  001998  1858               	xorwf	_diasem,w,c
  2901  00199A  1059               	iorwf	_diasem+1,w,c
  2902  00199C  A4D8               	btfss	status,2,c
  2903  00199E  D013               	goto	l159
  2904                           
  2905                           ;main.c: 53: lcd_gotoxy(1, 1);
  2906  0019A0  0E01               	movlw	1
  2907  0019A2  6E05               	movwf	lcd_gotoxy@y,c
  2908  0019A4  0E01               	movlw	1
  2909  0019A6  EC1C  F012         	call	_lcd_gotoxy
  2910                           
  2911                           ;main.c: 54: lcd_putrs("Miercol");
  2912  0019AA  0E93               	movlw	low STR_20
  2913  0019AC  6E09               	movwf	lcd_putrs@ptr,c
  2914  0019AE  0E0F               	movlw	high STR_20
  2915  0019B0  6E0A               	movwf	lcd_putrs@ptr+1,c
  2916  0019B2  EC61  F011         	call	_lcd_putrs	;wreg free
  2917                           
  2918                           ;main.c: 55: _delay((unsigned long)((50)*(8000000/4000.0)));
  2919  0019B6  0E82               	movlw	130
  2920  0019B8  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2921  0019BA  0EDE               	movlw	222
  2922  0019BC                     u3717:
  2923  0019BC  2EE8               	decfsz	wreg,f,c
  2924  0019BE  D7FE               	bra	u3717
  2925  0019C0  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2926  0019C2  D7FC               	bra	u3717
  2927                           
  2928                           ;main.c: 56: } else if (diasem == 4) {
  2929  0019C4  0012               	return	
  2930  0019C6                     l159:
  2931  0019C6  0E04               	movlw	4
  2932  0019C8  1858               	xorwf	_diasem,w,c
  2933  0019CA  1059               	iorwf	_diasem+1,w,c
  2934  0019CC  A4D8               	btfss	status,2,c
  2935  0019CE  D013               	goto	l161
  2936                           
  2937                           ;main.c: 57: lcd_gotoxy(1, 1);
  2938  0019D0  0E01               	movlw	1
  2939  0019D2  6E05               	movwf	lcd_gotoxy@y,c
  2940  0019D4  0E01               	movlw	1
  2941  0019D6  EC1C  F012         	call	_lcd_gotoxy
  2942                           
  2943                           ;main.c: 58: lcd_putrs("Jueves ");
  2944  0019DA  0E83               	movlw	low STR_21
  2945  0019DC  6E09               	movwf	lcd_putrs@ptr,c
  2946  0019DE  0E0F               	movlw	high STR_21
  2947  0019E0  6E0A               	movwf	lcd_putrs@ptr+1,c
  2948  0019E2  EC61  F011         	call	_lcd_putrs	;wreg free
  2949                           
  2950                           ;main.c: 59: _delay((unsigned long)((50)*(8000000/4000.0)));
  2951  0019E6  0E82               	movlw	130
  2952  0019E8  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2953  0019EA  0EDE               	movlw	222
  2954  0019EC                     u3727:
  2955  0019EC  2EE8               	decfsz	wreg,f,c
  2956  0019EE  D7FE               	bra	u3727
  2957  0019F0  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2958  0019F2  D7FC               	bra	u3727
  2959                           
  2960                           ;main.c: 60: } else if (diasem == 5) {
  2961  0019F4  0012               	return	
  2962  0019F6                     l161:
  2963  0019F6  0E05               	movlw	5
  2964  0019F8  1858               	xorwf	_diasem,w,c
  2965  0019FA  1059               	iorwf	_diasem+1,w,c
  2966  0019FC  A4D8               	btfss	status,2,c
  2967  0019FE  D013               	goto	l163
  2968                           
  2969                           ;main.c: 61: lcd_gotoxy(1, 1);
  2970  001A00  0E01               	movlw	1
  2971  001A02  6E05               	movwf	lcd_gotoxy@y,c
  2972  001A04  0E01               	movlw	1
  2973  001A06  EC1C  F012         	call	_lcd_gotoxy
  2974                           
  2975                           ;main.c: 62: lcd_putrs("Viernes");
  2976  001A0A  0EAB               	movlw	low STR_22
  2977  001A0C  6E09               	movwf	lcd_putrs@ptr,c
  2978  001A0E  0E0F               	movlw	high STR_22
  2979  001A10  6E0A               	movwf	lcd_putrs@ptr+1,c
  2980  001A12  EC61  F011         	call	_lcd_putrs	;wreg free
  2981                           
  2982                           ;main.c: 63: _delay((unsigned long)((50)*(8000000/4000.0)));
  2983  001A16  0E82               	movlw	130
  2984  001A18  6E0B               	movwf	??_setDiaSemana& (0+255),c
  2985  001A1A  0EDE               	movlw	222
  2986  001A1C                     u3737:
  2987  001A1C  2EE8               	decfsz	wreg,f,c
  2988  001A1E  D7FE               	bra	u3737
  2989  001A20  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  2990  001A22  D7FC               	bra	u3737
  2991                           
  2992                           ;main.c: 64: } else if (diasem == 6) {
  2993  001A24  0012               	return	
  2994  001A26                     l163:
  2995  001A26  0E06               	movlw	6
  2996  001A28  1858               	xorwf	_diasem,w,c
  2997  001A2A  1059               	iorwf	_diasem+1,w,c
  2998  001A2C  A4D8               	btfss	status,2,c
  2999  001A2E  0012               	return	
  3000                           
  3001                           ;main.c: 65: lcd_gotoxy(1, 1);
  3002  001A30  0E01               	movlw	1
  3003  001A32  6E05               	movwf	lcd_gotoxy@y,c
  3004  001A34  0E01               	movlw	1
  3005  001A36  EC1C  F012         	call	_lcd_gotoxy
  3006                           
  3007                           ;main.c: 66: lcd_putrs("Sabado ");
  3008  001A3A  0E73               	movlw	low STR_23
  3009  001A3C  6E09               	movwf	lcd_putrs@ptr,c
  3010  001A3E  0E0F               	movlw	high STR_23
  3011  001A40  6E0A               	movwf	lcd_putrs@ptr+1,c
  3012  001A42  EC61  F011         	call	_lcd_putrs	;wreg free
  3013                           
  3014                           ;main.c: 67: _delay((unsigned long)((50)*(8000000/4000.0)));
  3015  001A46  0E82               	movlw	130
  3016  001A48  6E0B               	movwf	??_setDiaSemana& (0+255),c
  3017  001A4A  0EDE               	movlw	222
  3018  001A4C                     u3747:
  3019  001A4C  2EE8               	decfsz	wreg,f,c
  3020  001A4E  D7FE               	bra	u3747
  3021  001A50  2E0B               	decfsz	??_setDiaSemana& (0+255),f,c
  3022  001A52  D7FC               	bra	u3747
  3023  001A54  0012               	return	
  3024  001A56                     __end_of_setDiaSemana:
  3025                           	opt stack 0
  3026                           tblptru	equ	0xFF8
  3027                           tblptrh	equ	0xFF7
  3028                           tblptrl	equ	0xFF6
  3029                           tablat	equ	0xFF5
  3030                           intcon2	equ	0xFF1
  3031                           postinc0	equ	0xFEE
  3032                           wreg	equ	0xFE8
  3033                           postdec1	equ	0xFE5
  3034                           fsr1l	equ	0xFE1
  3035                           postinc2	equ	0xFDE
  3036                           postdec2	equ	0xFDD
  3037                           fsr2h	equ	0xFDA
  3038                           fsr2l	equ	0xFD9
  3039                           status	equ	0xFD8
  3040                           
  3041 ;; *************** function _setDiaMesAnio *****************
  3042 ;; Defined at:
  3043 ;;		line 71 in file "main.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;		None
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  1    wreg      void 
  3050 ;; Registers used:
  3051 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3061 ;;Total ram usage:        0 bytes
  3062 ;; Hardware stack levels used:    1
  3063 ;; Hardware stack levels required when called:    5
  3064 ;; This function calls:
  3065 ;;		_Write_RTC
  3066 ;;		_lcd_gotoxy
  3067 ;;		_lcd_putrs
  3068 ;;		_sprintf
  3069 ;; This function is called by:
  3070 ;;		_setRelojDigital
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text5
  3075  001FBA                     __ptext5:
  3076                           	opt stack 0
  3077  001FBA                     _setDiaMesAnio:
  3078                           	opt stack 23
  3079                           
  3080                           ;main.c: 72: if (dia > 31) {
  3081                           
  3082                           ;incstack = 0
  3083  001FBA  BE57               	btfsc	_dia+1,7,c
  3084  001FBC  D00C               	goto	l169
  3085  001FBE  5057               	movf	_dia+1,w,c
  3086  001FC0  E104               	bnz	u2570
  3087  001FC2  0E20               	movlw	32
  3088  001FC4  5C56               	subwf	_dia,w,c
  3089  001FC6  A0D8               	btfss	status,0,c
  3090  001FC8  D006               	goto	l169
  3091  001FCA                     u2570:
  3092                           
  3093                           ;main.c: 73: dia = 1;
  3094  001FCA  0E00               	movlw	0
  3095  001FCC  6E57               	movwf	_dia+1,c
  3096  001FCE  0E01               	movlw	1
  3097  001FD0  6E56               	movwf	_dia,c
  3098                           
  3099                           ;main.c: 74: Write_RTC();
  3100  001FD2  EC2B  F00D         	call	_Write_RTC	;wreg free
  3101  001FD6                     l169:
  3102                           
  3103                           ;main.c: 75: }
  3104                           ;main.c: 77: if (mes > 12) {
  3105  001FD6  BE5B               	btfsc	_mes+1,7,c
  3106  001FD8  D00C               	goto	l170
  3107  001FDA  505B               	movf	_mes+1,w,c
  3108  001FDC  E104               	bnz	u2580
  3109  001FDE  0E0D               	movlw	13
  3110  001FE0  5C5A               	subwf	_mes,w,c
  3111  001FE2  A0D8               	btfss	status,0,c
  3112  001FE4  D006               	goto	l170
  3113  001FE6                     u2580:
  3114                           
  3115                           ;main.c: 78: mes = 1;
  3116  001FE6  0E00               	movlw	0
  3117  001FE8  6E5B               	movwf	_mes+1,c
  3118  001FEA  0E01               	movlw	1
  3119  001FEC  6E5A               	movwf	_mes,c
  3120                           
  3121                           ;main.c: 79: Write_RTC();
  3122  001FEE  EC2B  F00D         	call	_Write_RTC	;wreg free
  3123  001FF2                     l170:
  3124                           
  3125                           ;main.c: 80: }
  3126                           ;main.c: 82: sprintf(buffer2, "%02u/%02u/%02u", dia, mes, anio);
  3127  001FF2  0EBE               	movlw	low _buffer2
  3128  001FF4  6E0D               	movwf	sprintf@sp,c
  3129  001FF6  0E00               	movlw	high _buffer2
  3130  001FF8  6E0E               	movwf	sprintf@sp+1,c
  3131  001FFA  0E0F               	movlw	low STR_24
  3132  001FFC  6E0F               	movwf	sprintf@f,c
  3133  001FFE  0E0F               	movlw	high STR_24
  3134  002000  6E10               	movwf	sprintf@f+1,c
  3135  002002  C056  F011         	movff	_dia,?_sprintf+4
  3136  002006  C057  F012         	movff	_dia+1,?_sprintf+5
  3137  00200A  C05A  F013         	movff	_mes,?_sprintf+6
  3138  00200E  C05B  F014         	movff	_mes+1,?_sprintf+7
  3139  002012  C05C  F015         	movff	_anio,?_sprintf+8
  3140  002016  C05D  F016         	movff	_anio+1,?_sprintf+9
  3141  00201A  EC07  F00B         	call	_sprintf	;wreg free
  3142                           
  3143                           ;main.c: 83: lcd_gotoxy(9, 1);
  3144  00201E  0E01               	movlw	1
  3145  002020  6E05               	movwf	lcd_gotoxy@y,c
  3146  002022  0E09               	movlw	9
  3147  002024  EC1C  F012         	call	_lcd_gotoxy
  3148                           
  3149                           ;main.c: 84: lcd_putrs(buffer2);
  3150  002028  0EBE               	movlw	low _buffer2
  3151  00202A  6E09               	movwf	lcd_putrs@ptr,c
  3152  00202C  0E00               	movlw	high _buffer2
  3153  00202E  6E0A               	movwf	lcd_putrs@ptr+1,c
  3154  002030  EC61  F011         	call	_lcd_putrs	;wreg free
  3155  002034  0012               	return		;funcret
  3156  002036                     __end_of_setDiaMesAnio:
  3157                           	opt stack 0
  3158                           tblptru	equ	0xFF8
  3159                           tblptrh	equ	0xFF7
  3160                           tblptrl	equ	0xFF6
  3161                           tablat	equ	0xFF5
  3162                           intcon2	equ	0xFF1
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           postdec1	equ	0xFE5
  3166                           fsr1l	equ	0xFE1
  3167                           postinc2	equ	0xFDE
  3168                           postdec2	equ	0xFDD
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function _sprintf *****************
  3174 ;; Defined at:
  3175 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3178 ;;		 -> buffer5(20), buffer4(20), buffer3(20), buffer2(20), 
  3179 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3180 ;;		 -> STR_31(3), STR_30(3), STR_29(3), STR_28(3), 
  3181 ;;		 -> STR_25(15), STR_24(15), 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  tmpval          4    0        struct .
  3184 ;;  width           2   36[COMRAM] int 
  3185 ;;  len             2   34[COMRAM] unsigned int 
  3186 ;;  cp              2   32[COMRAM] PTR const unsigned char 
  3187 ;;		 -> STR_32(7), STR_16(9), STR_15(9), STR_14(9), 
  3188 ;;		 -> STR_13(9), STR_12(9), STR_11(8), STR_10(8), 
  3189 ;;		 -> STR_9(8), STR_8(5), STR_7(5), STR_6(5), 
  3190 ;;		 -> STR_5(5), STR_4(5), STR_3(5), STR_2(5), 
  3191 ;;		 -> STR_1(5), 
  3192 ;;  ap              2   30[COMRAM] PTR void [1]
  3193 ;;		 -> ?_sprintf(2), 
  3194 ;;  val             2   27[COMRAM] unsigned int 
  3195 ;;  c               1   38[COMRAM] char 
  3196 ;;  prec            1   29[COMRAM] char 
  3197 ;;  flag            1   26[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  2   12[COMRAM] int 
  3200 ;; Registers used:
  3201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3207 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3208 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3211 ;;Total ram usage:       27 bytes
  3212 ;; Hardware stack levels used:    1
  3213 ;; Hardware stack levels required when called:    1
  3214 ;; This function calls:
  3215 ;;		___lwdiv
  3216 ;;		___lwmod
  3217 ;;		___wmul
  3218 ;;		_isdigit
  3219 ;; This function is called by:
  3220 ;;		_setDiaMesAnio
  3221 ;;		_setHoraMinutoSegundo
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text6
  3227  00160E                     __ptext6:
  3228                           	opt stack 0
  3229  00160E                     _sprintf:
  3230                           	opt stack 29
  3231                           
  3232                           ;doprnt.c: 494: va_list ap;
  3233                           ;doprnt.c: 499: signed char c;
  3234                           ;doprnt.c: 501: int width;
  3235                           ;doprnt.c: 506: signed char prec;
  3236                           ;doprnt.c: 508: unsigned char flag;
  3237                           ;doprnt.c: 523: union {
  3238                           ;doprnt.c: 524: unsigned long vd;
  3239                           ;doprnt.c: 525: double integ;
  3240                           ;doprnt.c: 526: } tmpval;
  3241                           ;doprnt.c: 528: unsigned int val;
  3242                           ;doprnt.c: 529: unsigned len;
  3243                           ;doprnt.c: 530: const char * cp;
  3244                           ;doprnt.c: 533: *ap = __va_start();
  3245                           
  3246                           ;incstack = 0
  3247  00160E  0E11               	movlw	low (?_sprintf+4)
  3248  001610  6E1F               	movwf	sprintf@ap,c
  3249  001612  0E00               	movlw	high (?_sprintf+4)
  3250  001614  6E20               	movwf	sprintf@ap+1,c
  3251                           
  3252                           ;doprnt.c: 536: while(c = *f++) {
  3253  001616  D166               	goto	u2480
  3254  001618                     
  3255                           ;doprnt.c: 538: if(c != '%')
  3256  001618  0E25               	movlw	37
  3257  00161A  1827               	xorwf	sprintf@c,w,c
  3258  00161C  B4D8               	btfsc	status,2,c
  3259  00161E  D009               	goto	l428
  3260                           
  3261                           ;doprnt.c: 540: {
  3262                           ;doprnt.c: 541: ((*sp++ = (c)));
  3263  001620  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3264  001624  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3265  001628  C027  FFDF         	movff	sprintf@c,indf2
  3266  00162C  4A0D               	infsnz	sprintf@sp,f,c
  3267  00162E  2A0E               	incf	sprintf@sp+1,f,c
  3268                           
  3269                           ;doprnt.c: 542: continue;
  3270  001630  D159               	goto	u2480
  3271  001632                     l428:
  3272                           
  3273                           ;doprnt.c: 543: }
  3274                           ;doprnt.c: 546: width = 0;
  3275  001632  0E00               	movlw	0
  3276  001634  6E26               	movwf	sprintf@width+1,c
  3277  001636  0E00               	movlw	0
  3278  001638  6E25               	movwf	sprintf@width,c
  3279                           
  3280                           ;doprnt.c: 548: flag = 0;
  3281  00163A  0E00               	movlw	0
  3282  00163C  6E1B               	movwf	sprintf@flag,c
  3283                           
  3284                           ;doprnt.c: 551: switch(*f) {
  3285                           
  3286                           ;doprnt.c: 550: for(;;) {
  3287  00163E  D003               	goto	l430
  3288  001640                     
  3289                           ;doprnt.c: 580: flag |= 0x04;
  3290  001640  841B               	bsf	sprintf@flag,2,c
  3291                           
  3292                           ;doprnt.c: 581: f++;
  3293  001642  4A0F               	infsnz	sprintf@f,f,c
  3294  001644  2A10               	incf	sprintf@f+1,f,c
  3295  001646                     l430:
  3296  001646  C00F  FFF6         	movff	sprintf@f,tblptrl
  3297  00164A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3298  00164E                     	if	0	;tblptru may be non-zero
  3299  00164E                     	endif
  3300  00164E                     	if	0	;tblptru may be non-zero
  3301  00164E                     	endif
  3302  00164E  0008               	tblrd		*
  3303  001650  50F5               	movf	tablat,w,c
  3304                           
  3305                           ; Switch size 1, requested type "space"
  3306                           ; Number of cases is 1, Range of values is 48 to 48
  3307                           ; switch strategies available:
  3308                           ; Name         Instructions Cycles
  3309                           ; simple_byte            4     3 (average)
  3310                           ;	Chosen strategy is simple_byte
  3311  001652  0A30               	xorlw	48	; case 48
  3312  001654  B4D8               	btfsc	status,2,c
  3313  001656  D7F4               	goto	l431
  3314                           
  3315                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3316                           
  3317                           ;doprnt.c: 586: }
  3318                           
  3319                           ;doprnt.c: 585: break;
  3320  001658  C00F  FFF6         	movff	sprintf@f,tblptrl
  3321  00165C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3322  001660                     	if	0	;tblptru may be non-zero
  3323  001660                     	endif
  3324  001660                     	if	0	;tblptru may be non-zero
  3325  001660                     	endif
  3326  001660  0008               	tblrd		*
  3327  001662  50F5               	movf	tablat,w,c
  3328  001664  EC3D  F012         	call	_isdigit
  3329  001668  A0D8               	btfss	status,0,c
  3330  00166A  D099               	goto	l438
  3331                           
  3332                           ;doprnt.c: 598: width = 0;
  3333  00166C  0E00               	movlw	0
  3334  00166E  6E26               	movwf	sprintf@width+1,c
  3335  001670  0E00               	movlw	0
  3336  001672  6E25               	movwf	sprintf@width,c
  3337  001674                     
  3338                           ;doprnt.c: 600: width *= 10;
  3339  001674  C025  F001         	movff	sprintf@width,___wmul@multiplier
  3340  001678  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  3341  00167C  0E00               	movlw	0
  3342  00167E  6E04               	movwf	___wmul@multiplicand+1,c
  3343  001680  0E0A               	movlw	10
  3344  001682  6E03               	movwf	___wmul@multiplicand,c
  3345  001684  EC09  F012         	call	___wmul	;wreg free
  3346  001688  C001  F025         	movff	?___wmul,sprintf@width
  3347  00168C  C002  F026         	movff	?___wmul+1,sprintf@width+1
  3348                           
  3349                           ;doprnt.c: 601: width += *f++ - '0';
  3350  001690  0ED0               	movlw	208
  3351  001692  6E17               	movwf	??_sprintf& (0+255),c
  3352  001694  0EFF               	movlw	255
  3353  001696  6E18               	movwf	(??_sprintf+1)& (0+255),c
  3354  001698  C00F  FFF6         	movff	sprintf@f,tblptrl
  3355  00169C  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3356  0016A0                     	if	0	;tblptru may be non-zero
  3357  0016A0                     	endif
  3358  0016A0                     	if	0	;tblptru may be non-zero
  3359  0016A0                     	endif
  3360  0016A0  0008               	tblrd		*
  3361  0016A2  50F5               	movf	tablat,w,c
  3362  0016A4  6E19               	movwf	(??_sprintf+2)& (0+255),c
  3363  0016A6  6A1A               	clrf	(??_sprintf+3)& (0+255),c
  3364  0016A8  5017               	movf	??_sprintf,w,c
  3365  0016AA  2619               	addwf	??_sprintf+2,f,c
  3366  0016AC  5018               	movf	??_sprintf+1,w,c
  3367  0016AE  221A               	addwfc	??_sprintf+3,f,c
  3368  0016B0  5019               	movf	??_sprintf+2,w,c
  3369  0016B2  2625               	addwf	sprintf@width,f,c
  3370  0016B4  501A               	movf	??_sprintf+3,w,c
  3371  0016B6  2226               	addwfc	sprintf@width+1,f,c
  3372  0016B8  4A0F               	infsnz	sprintf@f,f,c
  3373  0016BA  2A10               	incf	sprintf@f+1,f,c
  3374                           
  3375                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  3376  0016BC  C00F  FFF6         	movff	sprintf@f,tblptrl
  3377  0016C0  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3378  0016C4                     	if	0	;tblptru may be non-zero
  3379  0016C4                     	endif
  3380  0016C4                     	if	0	;tblptru may be non-zero
  3381  0016C4                     	endif
  3382  0016C4  0008               	tblrd		*
  3383  0016C6  50F5               	movf	tablat,w,c
  3384  0016C8  EC3D  F012         	call	_isdigit
  3385  0016CC  A0D8               	btfss	status,0,c
  3386  0016CE  D067               	goto	l438
  3387  0016D0  D7D1               	goto	l436
  3388  0016D2                     
  3389                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  3390  0016D2  C01F  FFD9         	movff	sprintf@ap,fsr2l
  3391  0016D6  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  3392  0016DA  CFDE F021          	movff	postinc2,sprintf@cp
  3393  0016DE  CFDD F022          	movff	postdec2,sprintf@cp+1
  3394  0016E2  0E02               	movlw	2
  3395  0016E4  261F               	addwf	sprintf@ap,f,c
  3396  0016E6  0E00               	movlw	0
  3397  0016E8  2220               	addwfc	sprintf@ap+1,f,c
  3398                           
  3399                           ;doprnt.c: 740: if(!cp)
  3400  0016EA  5021               	movf	sprintf@cp,w,c
  3401  0016EC  1022               	iorwf	sprintf@cp+1,w,c
  3402  0016EE  A4D8               	btfss	status,2,c
  3403  0016F0  D004               	goto	l442
  3404                           
  3405                           ;doprnt.c: 741: cp = "(null)";
  3406  0016F2  0EB3               	movlw	low STR_32
  3407  0016F4  6E21               	movwf	sprintf@cp,c
  3408  0016F6  0E0F               	movlw	high STR_32
  3409  0016F8  6E22               	movwf	sprintf@cp+1,c
  3410  0016FA                     l442:
  3411                           
  3412                           ;doprnt.c: 745: len = 0;
  3413  0016FA  0E00               	movlw	0
  3414  0016FC  6E24               	movwf	sprintf@len+1,c
  3415  0016FE  0E00               	movlw	0
  3416  001700  6E23               	movwf	sprintf@len,c
  3417                           
  3418                           ;doprnt.c: 746: while(cp[len])
  3419  001702  D002               	goto	l443
  3420  001704                     
  3421                           ;doprnt.c: 747: len++;
  3422  001704  4A23               	infsnz	sprintf@len,f,c
  3423  001706  2A24               	incf	sprintf@len+1,f,c
  3424  001708                     l443:
  3425  001708  5023               	movf	sprintf@len,w,c
  3426  00170A  2421               	addwf	sprintf@cp,w,c
  3427  00170C  6E17               	movwf	??_sprintf& (0+255),c
  3428  00170E  5024               	movf	sprintf@len+1,w,c
  3429  001710  2022               	addwfc	sprintf@cp+1,w,c
  3430  001712  6E18               	movwf	(??_sprintf+1)& (0+255),c
  3431  001714  C017  FFF6         	movff	??_sprintf,tblptrl
  3432  001718  C018  FFF7         	movff	??_sprintf+1,tblptrh
  3433  00171C                     	if	0	;tblptru may be non-zero
  3434  00171C                     	endif
  3435  00171C                     	if	0	;tblptru may be non-zero
  3436  00171C                     	endif
  3437  00171C  0008               	tblrd		*
  3438  00171E  50F5               	movf	tablat,w,c
  3439  001720  0900               	iorlw	0
  3440  001722  A4D8               	btfss	status,2,c
  3441  001724  D7EF               	goto	l444
  3442                           
  3443                           ;doprnt.c: 757: if(width > len)
  3444  001726  5025               	movf	sprintf@width,w,c
  3445  001728  5C23               	subwf	sprintf@len,w,c
  3446  00172A  5026               	movf	sprintf@width+1,w,c
  3447  00172C  5824               	subwfb	sprintf@len+1,w,c
  3448  00172E  B0D8               	btfsc	status,0,c
  3449  001730  D005               	goto	l446
  3450                           
  3451                           ;doprnt.c: 758: width -= len;
  3452  001732  5023               	movf	sprintf@len,w,c
  3453  001734  5E25               	subwf	sprintf@width,f,c
  3454  001736  5024               	movf	sprintf@len+1,w,c
  3455  001738  5A26               	subwfb	sprintf@width+1,f,c
  3456  00173A  D00D               	goto	l448
  3457  00173C                     l446:
  3458                           
  3459                           ;doprnt.c: 759: else
  3460                           ;doprnt.c: 760: width = 0;
  3461  00173C  0E00               	movlw	0
  3462  00173E  6E26               	movwf	sprintf@width+1,c
  3463  001740  0E00               	movlw	0
  3464  001742  6E25               	movwf	sprintf@width,c
  3465                           
  3466                           ;doprnt.c: 764: while(width--)
  3467  001744  D008               	goto	l448
  3468  001746                     l2695:
  3469                           
  3470                           ;doprnt.c: 765: ((*sp++ = (' ')));
  3471  001746  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3472  00174A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3473  00174E  0E20               	movlw	32
  3474  001750  6EDF               	movwf	indf2,c
  3475  001752  4A0D               	infsnz	sprintf@sp,f,c
  3476  001754  2A0E               	incf	sprintf@sp+1,f,c
  3477  001756                     l448:
  3478  001756  0625               	decf	sprintf@width,f,c
  3479  001758  A0D8               	btfss	status,0,c
  3480  00175A  0626               	decf	sprintf@width+1,f,c
  3481  00175C  2825               	incf	sprintf@width,w,c
  3482  00175E  E1F3               	bnz	l2695
  3483  001760  2826               	incf	sprintf@width+1,w,c
  3484  001762  B4D8               	btfsc	status,2,c
  3485  001764  D010               	goto	l451
  3486  001766  D7EF               	goto	l449
  3487  001768                     l2701:
  3488                           
  3489                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  3490  001768  C021  FFF6         	movff	sprintf@cp,tblptrl
  3491  00176C  C022  FFF7         	movff	sprintf@cp+1,tblptrh
  3492  001770                     	if	0	;tblptru may be non-zero
  3493  001770                     	endif
  3494  001770                     	if	0	;tblptru may be non-zero
  3495  001770                     	endif
  3496  001770  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3497  001774  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3498  001778  0008               	tblrd		*
  3499  00177A  CFF5 FFDF          	movff	tablat,indf2
  3500  00177E  4A21               	infsnz	sprintf@cp,f,c
  3501  001780  2A22               	incf	sprintf@cp+1,f,c
  3502  001782  4A0D               	infsnz	sprintf@sp,f,c
  3503  001784  2A0E               	incf	sprintf@sp+1,f,c
  3504  001786                     l451:
  3505  001786  0623               	decf	sprintf@len,f,c
  3506  001788  A0D8               	btfss	status,0,c
  3507  00178A  0624               	decf	sprintf@len+1,f,c
  3508  00178C  2823               	incf	sprintf@len,w,c
  3509  00178E  E1EC               	bnz	l2701
  3510  001790  2824               	incf	sprintf@len+1,w,c
  3511  001792  B4D8               	btfsc	status,2,c
  3512  001794  D0A7               	goto	u2480
  3513  001796  D7E8               	goto	l452
  3514  001798                     
  3515                           ;doprnt.c: 818: flag |= 0xC0;
  3516  001798  0EC0               	movlw	192
  3517  00179A  121B               	iorwf	sprintf@flag,f,c
  3518                           
  3519                           ;doprnt.c: 822: }
  3520                           
  3521                           ;doprnt.c: 819: break;
  3522  00179C  D014               	goto	l456
  3523  00179E                     l438:
  3524  00179E  C00F  FFF6         	movff	sprintf@f,tblptrl
  3525  0017A2  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3526  0017A6  4A0F               	infsnz	sprintf@f,f,c
  3527  0017A8  2A10               	incf	sprintf@f+1,f,c
  3528  0017AA                     	if	0	;tblptru may be non-zero
  3529  0017AA                     	endif
  3530  0017AA                     	if	0	;tblptru may be non-zero
  3531  0017AA                     	endif
  3532  0017AA  0008               	tblrd		*
  3533  0017AC  CFF5 F027          	movff	tablat,sprintf@c
  3534  0017B0  5027               	movf	sprintf@c,w,c
  3535                           
  3536                           ; Switch size 1, requested type "space"
  3537                           ; Number of cases is 3, Range of values is 0 to 117
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte           10     6 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  0017B2  0A00               	xorlw	0	; case 0
  3543  0017B4  B4D8               	btfsc	status,2,c
  3544  0017B6  D0A2               	goto	u2490
  3545  0017B8  0A73               	xorlw	115	; case 115
  3546  0017BA  B4D8               	btfsc	status,2,c
  3547  0017BC  D78A               	goto	l441
  3548  0017BE  0A06               	xorlw	6	; case 117
  3549  0017C0  B4D8               	btfsc	status,2,c
  3550  0017C2  D7EA               	goto	l455
  3551  0017C4  D08F               	goto	u2480
  3552  0017C6                     l456:
  3553                           
  3554                           ;doprnt.c: 1273: {
  3555                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3556  0017C6  C01F  FFD9         	movff	sprintf@ap,fsr2l
  3557  0017CA  C020  FFDA         	movff	sprintf@ap+1,fsr2h
  3558  0017CE  CFDE F01C          	movff	postinc2,sprintf@val
  3559  0017D2  CFDD F01D          	movff	postdec2,sprintf@val+1
  3560  0017D6  0E02               	movlw	2
  3561  0017D8  261F               	addwf	sprintf@ap,f,c
  3562  0017DA  0E00               	movlw	0
  3563  0017DC  2220               	addwfc	sprintf@ap+1,f,c
  3564                           
  3565                           ;doprnt.c: 1287: }
  3566                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3567  0017DE  0E01               	movlw	1
  3568  0017E0  6E27               	movwf	sprintf@c,c
  3569  0017E2                     l2721:
  3570  0017E2  0E05               	movlw	5
  3571  0017E4  1827               	xorwf	sprintf@c,w,c
  3572  0017E6  B4D8               	btfsc	status,2,c
  3573  0017E8  D012               	goto	u2410
  3574                           
  3575                           ;doprnt.c: 1306: if(val < dpowers[c])
  3576  0017EA  5027               	movf	sprintf@c,w,c
  3577  0017EC  0D02               	mullw	2
  3578  0017EE  0E01               	movlw	low _dpowers
  3579  0017F0  24F3               	addwf	prodl,w,c
  3580  0017F2  6EF6               	movwf	tblptrl,c
  3581  0017F4  0E0F               	movlw	high _dpowers
  3582  0017F6  20F4               	addwfc	prodh,w,c
  3583  0017F8  6EF7               	movwf	tblptrh,c
  3584  0017FA                     	if	0	;There are less than 3 active tblptr bytes
  3585  0017FA                     	endif
  3586  0017FA  0009               	tblrd		*+
  3587  0017FC  50F5               	movf	tablat,w,c
  3588  0017FE  5C1C               	subwf	sprintf@val,w,c
  3589  001800  0009               	tblrd		*+
  3590  001802  50F5               	movf	tablat,w,c
  3591  001804  581D               	subwfb	sprintf@val+1,w,c
  3592  001806  A0D8               	btfss	status,0,c
  3593  001808  D002               	goto	u2410
  3594                           
  3595                           ;doprnt.c: 1307: break;
  3596  00180A  2A27               	incf	sprintf@c,f,c
  3597  00180C  D7EA               	goto	l2721
  3598  00180E                     u2410:
  3599                           
  3600                           ;doprnt.c: 1381: if(width > c)
  3601  00180E  0E80               	movlw	128
  3602  001810  BE27               	btfsc	sprintf@c,7,c
  3603  001812  0E7F               	movlw	127
  3604  001814  6E17               	movwf	??_sprintf& (0+255),c
  3605  001816  5025               	movf	sprintf@width,w,c
  3606  001818  5C27               	subwf	sprintf@c,w,c
  3607  00181A  5026               	movf	sprintf@width+1,w,c
  3608  00181C  0A80               	xorlw	128
  3609  00181E  5817               	subwfb	??_sprintf& (0+255),w,c
  3610  001820  B0D8               	btfsc	status,0,c
  3611  001822  D007               	goto	l460
  3612                           
  3613                           ;doprnt.c: 1382: width -= c;
  3614  001824  5027               	movf	sprintf@c,w,c
  3615  001826  5E25               	subwf	sprintf@width,f,c
  3616  001828  0E00               	movlw	0
  3617  00182A  BE27               	btfsc	sprintf@c,7,c
  3618  00182C  0EFF               	movlw	255
  3619  00182E  5A26               	subwfb	sprintf@width+1,f,c
  3620  001830  D004               	goto	l461
  3621  001832                     l460:
  3622                           
  3623                           ;doprnt.c: 1383: else
  3624                           ;doprnt.c: 1384: width = 0;
  3625  001832  0E00               	movlw	0
  3626  001834  6E26               	movwf	sprintf@width+1,c
  3627  001836  0E00               	movlw	0
  3628  001838  6E25               	movwf	sprintf@width,c
  3629  00183A                     l461:
  3630                           
  3631                           ;doprnt.c: 1387: if(flag & 0x04) {
  3632  00183A  A41B               	btfss	sprintf@flag,2,c
  3633  00183C  D010               	goto	l462
  3634  00183E                     
  3635                           ;doprnt.c: 1415: if(width)
  3636  00183E  5025               	movf	sprintf@width,w,c
  3637  001840  1026               	iorwf	sprintf@width+1,w,c
  3638  001842  B4D8               	btfsc	status,2,c
  3639  001844  D01F               	goto	u2470
  3640                           
  3641                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  3642                           
  3643                           ;doprnt.c: 1416: do
  3644  001846  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3645  00184A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3646  00184E  0E30               	movlw	48
  3647  001850  6EDF               	movwf	indf2,c
  3648  001852  4A0D               	infsnz	sprintf@sp,f,c
  3649  001854  2A0E               	incf	sprintf@sp+1,f,c
  3650                           
  3651                           ;doprnt.c: 1418: while(--width);
  3652  001856  0625               	decf	sprintf@width,f,c
  3653  001858  A0D8               	btfss	status,0,c
  3654  00185A  0626               	decf	sprintf@width+1,f,c
  3655  00185C  D7F0               	goto	L2
  3656  00185E                     l462:
  3657                           
  3658                           ;doprnt.c: 1422: {
  3659                           ;doprnt.c: 1424: if(width
  3660                           ;doprnt.c: 1428: )
  3661  00185E  5025               	movf	sprintf@width,w,c
  3662  001860  1026               	iorwf	sprintf@width+1,w,c
  3663  001862  B4D8               	btfsc	status,2,c
  3664  001864  D00F               	goto	u2470
  3665  001866                     u2460:
  3666                           
  3667                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  3668                           
  3669                           ;doprnt.c: 1429: do
  3670  001866  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3671  00186A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3672  00186E  0E20               	movlw	32
  3673  001870  6EDF               	movwf	indf2,c
  3674  001872  4A0D               	infsnz	sprintf@sp,f,c
  3675  001874  2A0E               	incf	sprintf@sp+1,f,c
  3676                           
  3677                           ;doprnt.c: 1431: while(--width);
  3678  001876  0625               	decf	sprintf@width,f,c
  3679  001878  A0D8               	btfss	status,0,c
  3680  00187A  0626               	decf	sprintf@width+1,f,c
  3681  00187C  5025               	movf	sprintf@width,w,c
  3682  00187E  1026               	iorwf	sprintf@width+1,w,c
  3683  001880  A4D8               	btfss	status,2,c
  3684  001882  D7F1               	goto	u2460
  3685  001884                     u2470:
  3686                           
  3687                           ;doprnt.c: 1469: }
  3688                           ;doprnt.c: 1472: prec = c;
  3689  001884  C027  F01E         	movff	sprintf@c,sprintf@prec
  3690                           
  3691                           ;doprnt.c: 1474: while(prec--) {
  3692  001888  D029               	goto	l470
  3693  00188A                     
  3694                           ;doprnt.c: 1478: {
  3695                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3696  00188A  501E               	movf	sprintf@prec,w,c
  3697  00188C  0D02               	mullw	2
  3698  00188E  0E01               	movlw	low _dpowers
  3699  001890  24F3               	addwf	prodl,w,c
  3700  001892  6EF6               	movwf	tblptrl,c
  3701  001894  0E0F               	movlw	high _dpowers
  3702  001896  20F4               	addwfc	prodh,w,c
  3703  001898  6EF7               	movwf	tblptrh,c
  3704  00189A                     	if	0	;There are less than 3 active tblptr bytes
  3705  00189A                     	endif
  3706  00189A  0009               	tblrd		*+
  3707  00189C  CFF5 F003          	movff	tablat,___lwdiv@divisor
  3708  0018A0  000A               	tblrd		*-
  3709  0018A2  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  3710  0018A6  C01C  F001         	movff	sprintf@val,___lwdiv@dividend
  3711  0018AA  C01D  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  3712  0018AE  EC38  F011         	call	___lwdiv	;wreg free
  3713  0018B2  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  3714  0018B6  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  3715  0018BA  0E00               	movlw	0
  3716  0018BC  6E0B               	movwf	___lwmod@divisor+1,c
  3717  0018BE  0E0A               	movlw	10
  3718  0018C0  6E0A               	movwf	___lwmod@divisor,c
  3719  0018C2  ECAF  F011         	call	___lwmod	;wreg free
  3720  0018C6  5008               	movf	?___lwmod,w,c
  3721  0018C8  0F30               	addlw	48
  3722  0018CA  6E27               	movwf	sprintf@c,c
  3723                           
  3724                           ;doprnt.c: 1523: }
  3725                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3726  0018CC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3727  0018D0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3728  0018D4  C027  FFDF         	movff	sprintf@c,indf2
  3729  0018D8  4A0D               	infsnz	sprintf@sp,f,c
  3730  0018DA  2A0E               	incf	sprintf@sp+1,f,c
  3731  0018DC                     l470:
  3732  0018DC  061E               	decf	sprintf@prec,f,c
  3733  0018DE  281E               	incf	sprintf@prec,w,c
  3734  0018E0  A4D8               	btfss	status,2,c
  3735  0018E2  D7D3               	goto	l471
  3736  0018E4                     u2480:
  3737  0018E4  C00F  FFF6         	movff	sprintf@f,tblptrl
  3738  0018E8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  3739  0018EC  4A0F               	infsnz	sprintf@f,f,c
  3740  0018EE  2A10               	incf	sprintf@f+1,f,c
  3741  0018F0                     	if	0	;tblptru may be non-zero
  3742  0018F0                     	endif
  3743  0018F0                     	if	0	;tblptru may be non-zero
  3744  0018F0                     	endif
  3745  0018F0  0008               	tblrd		*
  3746  0018F2  CFF5 F027          	movff	tablat,sprintf@c
  3747  0018F6  5027               	movf	sprintf@c,w,c
  3748  0018F8  A4D8               	btfss	status,2,c
  3749  0018FA  D68E               	goto	l427
  3750  0018FC                     u2490:
  3751                           
  3752                           ;doprnt.c: 1538: *sp = 0;
  3753                           
  3754                           ;doprnt.c: 1525: }
  3755                           ;doprnt.c: 1533: }
  3756                           ;doprnt.c: 1535: alldone:
  3757  0018FC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  3758  001900  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  3759  001904  0E00               	movlw	0
  3760  001906  6EDF               	movwf	indf2,c
  3761  001908  0012               	return	
  3762  00190A                     __end_of_sprintf:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           prodh	equ	0xFF4
  3769                           prodl	equ	0xFF3
  3770                           intcon2	equ	0xFF1
  3771                           postinc0	equ	0xFEE
  3772                           wreg	equ	0xFE8
  3773                           postdec1	equ	0xFE5
  3774                           fsr1l	equ	0xFE1
  3775                           indf2	equ	0xFDF
  3776                           postinc2	equ	0xFDE
  3777                           postdec2	equ	0xFDD
  3778                           fsr2h	equ	0xFDA
  3779                           fsr2l	equ	0xFD9
  3780                           status	equ	0xFD8
  3781                           
  3782 ;; *************** function _isdigit *****************
  3783 ;; Defined at:
  3784 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;  c               1    wreg     unsigned char 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  c               1    2[COMRAM] unsigned char 
  3789 ;; Return value:  Size  Location     Type
  3790 ;;		None               void
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3802 ;;Total ram usage:        3 bytes
  3803 ;; Hardware stack levels used:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_sprintf
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           	psect	text7
  3812  00247A                     __ptext7:
  3813                           	opt stack 0
  3814  00247A                     _isdigit:
  3815                           	opt stack 29
  3816                           
  3817                           ;incstack = 0
  3818                           ;isdigit@c stored from wreg
  3819  00247A  6E03               	movwf	isdigit@c,c
  3820  00247C  0E00               	movlw	0
  3821  00247E  6E02               	movwf	_isdigit$1777,c
  3822  002480  0E3A               	movlw	58
  3823  002482  6003               	cpfslt	isdigit@c,c
  3824  002484  D005               	goto	l914
  3825  002486  0E2F               	movlw	47
  3826  002488  6403               	cpfsgt	isdigit@c,c
  3827  00248A  D002               	goto	l914
  3828  00248C  0E01               	movlw	1
  3829  00248E  6E02               	movwf	_isdigit$1777,c
  3830  002490                     l914:
  3831  002490  C002  F001         	movff	_isdigit$1777,??_isdigit
  3832  002494  3001               	rrcf	??_isdigit,w,c
  3833  002496  0012               	return	
  3834  002498                     __end_of_isdigit:
  3835                           	opt stack 0
  3836                           tblptru	equ	0xFF8
  3837                           tblptrh	equ	0xFF7
  3838                           tblptrl	equ	0xFF6
  3839                           tablat	equ	0xFF5
  3840                           prodh	equ	0xFF4
  3841                           prodl	equ	0xFF3
  3842                           intcon2	equ	0xFF1
  3843                           postinc0	equ	0xFEE
  3844                           wreg	equ	0xFE8
  3845                           postdec1	equ	0xFE5
  3846                           fsr1l	equ	0xFE1
  3847                           indf2	equ	0xFDF
  3848                           postinc2	equ	0xFDE
  3849                           postdec2	equ	0xFDD
  3850                           fsr2h	equ	0xFDA
  3851                           fsr2l	equ	0xFD9
  3852                           status	equ	0xFD8
  3853                           
  3854 ;; *************** function ___wmul *****************
  3855 ;; Defined at:
  3856 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  multiplier      2    0[COMRAM] unsigned int 
  3859 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  product         2    4[COMRAM] unsigned int 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  2    0[COMRAM] unsigned int 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, prodl, prodh
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3871 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3872 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;Total ram usage:        6 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_sprintf
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text8
  3885  002412                     __ptext8:
  3886                           	opt stack 0
  3887  002412                     ___wmul:
  3888                           	opt stack 29
  3889                           
  3890                           ;incstack = 0
  3891  002412  5001               	movf	___wmul@multiplier,w,c
  3892  002414  0203               	mulwf	___wmul@multiplicand,c
  3893  002416  CFF3 F005          	movff	prodl,___wmul@product
  3894  00241A  CFF4 F006          	movff	prodh,___wmul@product+1
  3895  00241E  5001               	movf	___wmul@multiplier,w,c
  3896  002420  0204               	mulwf	___wmul@multiplicand+1,c
  3897  002422  50F3               	movf	prodl,w,c
  3898  002424  2606               	addwf	___wmul@product+1,f,c
  3899  002426  5002               	movf	___wmul@multiplier+1,w,c
  3900  002428  0203               	mulwf	___wmul@multiplicand,c
  3901  00242A  50F3               	movf	prodl,w,c
  3902  00242C  2606               	addwf	___wmul@product+1,f,c
  3903  00242E  C005  F001         	movff	___wmul@product,?___wmul
  3904  002432  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3905  002436  0012               	return	
  3906  002438                     __end_of___wmul:
  3907                           	opt stack 0
  3908                           tblptru	equ	0xFF8
  3909                           tblptrh	equ	0xFF7
  3910                           tblptrl	equ	0xFF6
  3911                           tablat	equ	0xFF5
  3912                           prodh	equ	0xFF4
  3913                           prodl	equ	0xFF3
  3914                           intcon2	equ	0xFF1
  3915                           postinc0	equ	0xFEE
  3916                           wreg	equ	0xFE8
  3917                           postdec1	equ	0xFE5
  3918                           fsr1l	equ	0xFE1
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function ___lwmod *****************
  3927 ;; Defined at:
  3928 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  dividend        2    7[COMRAM] unsigned int 
  3931 ;;  divisor         2    9[COMRAM] unsigned int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  counter         1   11[COMRAM] unsigned char 
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  2    7[COMRAM] unsigned int 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3944 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3947 ;;Total ram usage:        5 bytes
  3948 ;; Hardware stack levels used:    1
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_sprintf
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text9
  3957  00235E                     __ptext9:
  3958                           	opt stack 0
  3959  00235E                     ___lwmod:
  3960                           	opt stack 29
  3961                           
  3962                           ;incstack = 0
  3963  00235E  500A               	movf	___lwmod@divisor,w,c
  3964  002360  100B               	iorwf	___lwmod@divisor+1,w,c
  3965  002362  B4D8               	btfsc	status,2,c
  3966  002364  D018               	goto	l1008
  3967  002366  0E01               	movlw	1
  3968  002368  6E0C               	movwf	___lwmod@counter,c
  3969  00236A  D004               	goto	l1003
  3970  00236C  90D8               	bcf	status,0,c
  3971  00236E  360A               	rlcf	___lwmod@divisor,f,c
  3972  002370  360B               	rlcf	___lwmod@divisor+1,f,c
  3973  002372  2A0C               	incf	___lwmod@counter,f,c
  3974  002374                     l1003:
  3975  002374  AE0B               	btfss	___lwmod@divisor+1,7,c
  3976  002376  D7FA               	goto	l1004
  3977  002378                     u2260:
  3978  002378  500A               	movf	___lwmod@divisor,w,c
  3979  00237A  5C08               	subwf	___lwmod@dividend,w,c
  3980  00237C  500B               	movf	___lwmod@divisor+1,w,c
  3981  00237E  5809               	subwfb	___lwmod@dividend+1,w,c
  3982  002380  A0D8               	btfss	status,0,c
  3983  002382  D004               	goto	l1007
  3984  002384  500A               	movf	___lwmod@divisor,w,c
  3985  002386  5E08               	subwf	___lwmod@dividend,f,c
  3986  002388  500B               	movf	___lwmod@divisor+1,w,c
  3987  00238A  5A09               	subwfb	___lwmod@dividend+1,f,c
  3988  00238C                     l1007:
  3989  00238C  90D8               	bcf	status,0,c
  3990  00238E  320B               	rrcf	___lwmod@divisor+1,f,c
  3991  002390  320A               	rrcf	___lwmod@divisor,f,c
  3992  002392  2E0C               	decfsz	___lwmod@counter,f,c
  3993  002394  D7F1               	goto	u2260
  3994  002396                     l1008:
  3995  002396  C008  F008         	movff	___lwmod@dividend,?___lwmod
  3996  00239A  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  3997  00239E  0012               	return		;funcret
  3998  0023A0                     __end_of___lwmod:
  3999                           	opt stack 0
  4000                           tblptru	equ	0xFF8
  4001                           tblptrh	equ	0xFF7
  4002                           tblptrl	equ	0xFF6
  4003                           tablat	equ	0xFF5
  4004                           prodh	equ	0xFF4
  4005                           prodl	equ	0xFF3
  4006                           intcon2	equ	0xFF1
  4007                           postinc0	equ	0xFEE
  4008                           wreg	equ	0xFE8
  4009                           postdec1	equ	0xFE5
  4010                           fsr1l	equ	0xFE1
  4011                           indf2	equ	0xFDF
  4012                           postinc2	equ	0xFDE
  4013                           postdec2	equ	0xFDD
  4014                           fsr2h	equ	0xFDA
  4015                           fsr2l	equ	0xFD9
  4016                           status	equ	0xFD8
  4017                           
  4018 ;; *************** function ___lwdiv *****************
  4019 ;; Defined at:
  4020 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  dividend        2    0[COMRAM] unsigned int 
  4023 ;;  divisor         2    2[COMRAM] unsigned int 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  quotient        2    4[COMRAM] unsigned int 
  4026 ;;  counter         1    6[COMRAM] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  2    0[COMRAM] unsigned int 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4037 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4039 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4040 ;;Total ram usage:        7 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_sprintf
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text10
  4050  002270                     __ptext10:
  4051                           	opt stack 0
  4052  002270                     ___lwdiv:
  4053                           	opt stack 29
  4054                           
  4055                           ;incstack = 0
  4056  002270  0E00               	movlw	0
  4057  002272  6E06               	movwf	___lwdiv@quotient+1,c
  4058  002274  0E00               	movlw	0
  4059  002276  6E05               	movwf	___lwdiv@quotient,c
  4060  002278  5003               	movf	___lwdiv@divisor,w,c
  4061  00227A  1004               	iorwf	___lwdiv@divisor+1,w,c
  4062  00227C  B4D8               	btfsc	status,2,c
  4063  00227E  D01C               	goto	l998
  4064  002280  0E01               	movlw	1
  4065  002282  6E07               	movwf	___lwdiv@counter,c
  4066  002284  D004               	goto	l993
  4067  002286  90D8               	bcf	status,0,c
  4068  002288  3603               	rlcf	___lwdiv@divisor,f,c
  4069  00228A  3604               	rlcf	___lwdiv@divisor+1,f,c
  4070  00228C  2A07               	incf	___lwdiv@counter,f,c
  4071  00228E                     l993:
  4072  00228E  AE04               	btfss	___lwdiv@divisor+1,7,c
  4073  002290  D7FA               	goto	l994
  4074  002292                     u2230:
  4075  002292  90D8               	bcf	status,0,c
  4076  002294  3605               	rlcf	___lwdiv@quotient,f,c
  4077  002296  3606               	rlcf	___lwdiv@quotient+1,f,c
  4078  002298  5003               	movf	___lwdiv@divisor,w,c
  4079  00229A  5C01               	subwf	___lwdiv@dividend,w,c
  4080  00229C  5004               	movf	___lwdiv@divisor+1,w,c
  4081  00229E  5802               	subwfb	___lwdiv@dividend+1,w,c
  4082  0022A0  A0D8               	btfss	status,0,c
  4083  0022A2  D005               	goto	l997
  4084  0022A4  5003               	movf	___lwdiv@divisor,w,c
  4085  0022A6  5E01               	subwf	___lwdiv@dividend,f,c
  4086  0022A8  5004               	movf	___lwdiv@divisor+1,w,c
  4087  0022AA  5A02               	subwfb	___lwdiv@dividend+1,f,c
  4088  0022AC  8005               	bsf	___lwdiv@quotient,0,c
  4089  0022AE                     l997:
  4090  0022AE  90D8               	bcf	status,0,c
  4091  0022B0  3204               	rrcf	___lwdiv@divisor+1,f,c
  4092  0022B2  3203               	rrcf	___lwdiv@divisor,f,c
  4093  0022B4  2E07               	decfsz	___lwdiv@counter,f,c
  4094  0022B6  D7ED               	goto	u2230
  4095  0022B8                     l998:
  4096  0022B8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  4097  0022BC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4098  0022C0  0012               	return		;funcret
  4099  0022C2                     __end_of___lwdiv:
  4100                           	opt stack 0
  4101                           tblptru	equ	0xFF8
  4102                           tblptrh	equ	0xFF7
  4103                           tblptrl	equ	0xFF6
  4104                           tablat	equ	0xFF5
  4105                           prodh	equ	0xFF4
  4106                           prodl	equ	0xFF3
  4107                           intcon2	equ	0xFF1
  4108                           postinc0	equ	0xFEE
  4109                           wreg	equ	0xFE8
  4110                           postdec1	equ	0xFE5
  4111                           fsr1l	equ	0xFE1
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           postdec2	equ	0xFDD
  4115                           fsr2h	equ	0xFDA
  4116                           fsr2l	equ	0xFD9
  4117                           status	equ	0xFD8
  4118                           
  4119 ;; *************** function _lcd_putrs *****************
  4120 ;; Defined at:
  4121 ;;		line 221 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;  ptr             2    8[COMRAM] PTR const unsigned char 
  4124 ;;		 -> buffer5(20), buffer4(20), buffer3(20), STR_27(9), 
  4125 ;;		 -> STR_26(4), buffer2(20), STR_23(8), STR_22(8), 
  4126 ;;		 -> STR_21(8), STR_20(8), STR_19(8), STR_18(8), 
  4127 ;;		 -> STR_17(8), 
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4143 ;;Total ram usage:        2 bytes
  4144 ;; Hardware stack levels used:    1
  4145 ;; Hardware stack levels required when called:    4
  4146 ;; This function calls:
  4147 ;;		_lcd_putc
  4148 ;; This function is called by:
  4149 ;;		_setDiaSemana
  4150 ;;		_setDiaMesAnio
  4151 ;;		_setHoraMinutoSegundo
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text11
  4157  0022C2                     __ptext11:
  4158                           	opt stack 0
  4159  0022C2                     _lcd_putrs:
  4160                           	opt stack 23
  4161                           
  4162                           ;unmc_lcd_216.c: 223: while(*ptr){
  4163                           
  4164                           ;incstack = 0
  4165  0022C2  D014               	goto	l412
  4166  0022C4                     
  4167                           ;unmc_lcd_216.c: 224: lcd_putc(*ptr++);
  4168  0022C4  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4169  0022C8  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4170  0022CC  6AF8               	clrf	tblptru,c
  4171  0022CE  0E0E               	movlw	(high __ramtop+-1)
  4172  0022D0  64F7               	cpfsgt	tblptrh,c
  4173  0022D2  D003               	bra	u2287
  4174  0022D4  0008               	tblrd		*
  4175  0022D6  50F5               	movf	tablat,w,c
  4176  0022D8  D005               	bra	u2280
  4177  0022DA                     u2287:
  4178  0022DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  4179  0022DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  4180  0022E2  50EF               	movf	indf0,w,c
  4181  0022E4                     u2280:
  4182  0022E4  EC8A  F011         	call	_lcd_putc
  4183  0022E8  4A09               	infsnz	lcd_putrs@ptr,f,c
  4184  0022EA  2A0A               	incf	lcd_putrs@ptr+1,f,c
  4185  0022EC                     l412:
  4186  0022EC  C009  FFF6         	movff	lcd_putrs@ptr,tblptrl
  4187  0022F0  C00A  FFF7         	movff	lcd_putrs@ptr+1,tblptrh
  4188  0022F4  6AF8               	clrf	tblptru,c
  4189  0022F6  0E0E               	movlw	(high __ramtop+-1)
  4190  0022F8  64F7               	cpfsgt	tblptrh,c
  4191  0022FA  D003               	bra	u2297
  4192  0022FC  0008               	tblrd		*
  4193  0022FE  50F5               	movf	tablat,w,c
  4194  002300  D005               	bra	u2290
  4195  002302                     u2297:
  4196  002302  CFF6 FFE9          	movff	tblptrl,fsr0l
  4197  002306  CFF7 FFEA          	movff	tblptrh,fsr0h
  4198  00230A  50EF               	movf	indf0,w,c
  4199  00230C                     u2290:
  4200  00230C  0900               	iorlw	0
  4201  00230E  B4D8               	btfsc	status,2,c
  4202  002310  0012               	return	
  4203  002312  D7D8               	goto	l413
  4204  002314                     __end_of_lcd_putrs:
  4205                           	opt stack 0
  4206                           tblptru	equ	0xFF8
  4207                           tblptrh	equ	0xFF7
  4208                           tblptrl	equ	0xFF6
  4209                           tablat	equ	0xFF5
  4210                           prodh	equ	0xFF4
  4211                           prodl	equ	0xFF3
  4212                           intcon2	equ	0xFF1
  4213                           indf0	equ	0xFEF
  4214                           postinc0	equ	0xFEE
  4215                           fsr0h	equ	0xFEA
  4216                           fsr0l	equ	0xFE9
  4217                           wreg	equ	0xFE8
  4218                           postdec1	equ	0xFE5
  4219                           fsr1l	equ	0xFE1
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           fsr2h	equ	0xFDA
  4224                           fsr2l	equ	0xFD9
  4225                           status	equ	0xFD8
  4226                           
  4227 ;; *************** function _lcd_putc *****************
  4228 ;; Defined at:
  4229 ;;		line 172 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  c               1    wreg     unsigned char 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  c               1    7[COMRAM] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      void 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4246 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4247 ;;Total ram usage:        1 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    3
  4250 ;; This function calls:
  4251 ;;		_lcd_gotoxy
  4252 ;;		_lcd_send_byte
  4253 ;; This function is called by:
  4254 ;;		_lcd_putrs
  4255 ;;		_lcd_puts
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text12
  4260  002314                     __ptext12:
  4261                           	opt stack 0
  4262  002314                     _lcd_putc:
  4263                           	opt stack 23
  4264                           
  4265                           ;incstack = 0
  4266                           ;lcd_putc@c stored from wreg
  4267  002314  6E08               	movwf	lcd_putc@c,c
  4268                           
  4269                           ;unmc_lcd_216.c: 173: switch(c){
  4270  002316  D018               	goto	l391
  4271  002318                     
  4272                           ;unmc_lcd_216.c: 175: lcd_send_byte(0,1);
  4273  002318  0E01               	movlw	1
  4274  00231A  6E03               	movwf	lcd_send_byte@n,c
  4275  00231C  0E00               	movlw	0
  4276  00231E  ECF0  F011         	call	_lcd_send_byte
  4277                           
  4278                           ;unmc_lcd_216.c: 176: break;
  4279  002322  0012               	return	
  4280  002324                     
  4281                           ;unmc_lcd_216.c: 178: lcd_gotoxy(1,2);
  4282  002324  0E02               	movlw	2
  4283  002326  6E05               	movwf	lcd_gotoxy@y,c
  4284  002328  0E01               	movlw	1
  4285  00232A  EC1C  F012         	call	_lcd_gotoxy
  4286                           
  4287                           ;unmc_lcd_216.c: 179: break;
  4288  00232E  0012               	return	
  4289  002330                     
  4290                           ;unmc_lcd_216.c: 181: lcd_send_byte(0,0x10);
  4291  002330  0E10               	movlw	16
  4292  002332  6E03               	movwf	lcd_send_byte@n,c
  4293  002334  0E00               	movlw	0
  4294  002336  ECF0  F011         	call	_lcd_send_byte
  4295                           
  4296                           ;unmc_lcd_216.c: 182: break;
  4297  00233A  0012               	return	
  4298  00233C                     
  4299                           ;unmc_lcd_216.c: 184: lcd_send_byte(1,c);
  4300  00233C  C008  F003         	movff	lcd_putc@c,lcd_send_byte@n
  4301  002340  0E01               	movlw	1
  4302  002342  ECF0  F011         	call	_lcd_send_byte
  4303                           
  4304                           ;unmc_lcd_216.c: 186: }
  4305                           
  4306                           ;unmc_lcd_216.c: 185: break;
  4307  002346  0012               	return	
  4308  002348                     l391:
  4309  002348  5008               	movf	lcd_putc@c,w,c
  4310                           
  4311                           ; Switch size 1, requested type "space"
  4312                           ; Number of cases is 3, Range of values is 8 to 12
  4313                           ; switch strategies available:
  4314                           ; Name         Instructions Cycles
  4315                           ; simple_byte           10     6 (average)
  4316                           ;	Chosen strategy is simple_byte
  4317  00234A  0A08               	xorlw	8	; case 8
  4318  00234C  B4D8               	btfsc	status,2,c
  4319  00234E  D7F0               	goto	l395
  4320  002350  0A02               	xorlw	2	; case 10
  4321  002352  B4D8               	btfsc	status,2,c
  4322  002354  D7E7               	goto	l394
  4323  002356  0A06               	xorlw	6	; case 12
  4324  002358  B4D8               	btfsc	status,2,c
  4325  00235A  D7DE               	goto	l392
  4326  00235C  D7EF               	goto	l396
  4327  00235E                     __end_of_lcd_putc:
  4328                           	opt stack 0
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           prodh	equ	0xFF4
  4334                           prodl	equ	0xFF3
  4335                           intcon2	equ	0xFF1
  4336                           indf0	equ	0xFEF
  4337                           postinc0	equ	0xFEE
  4338                           fsr0h	equ	0xFEA
  4339                           fsr0l	equ	0xFE9
  4340                           wreg	equ	0xFE8
  4341                           postdec1	equ	0xFE5
  4342                           fsr1l	equ	0xFE1
  4343                           indf2	equ	0xFDF
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function _lcd_gotoxy *****************
  4351 ;; Defined at:
  4352 ;;		line 158 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  x               1    wreg     unsigned char 
  4355 ;;  y               1    4[COMRAM] unsigned char 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  x               1    5[COMRAM] unsigned char 
  4358 ;;  address         1    6[COMRAM] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2, status,0, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4368 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4371 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4372 ;;Total ram usage:        3 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    2
  4375 ;; This function calls:
  4376 ;;		_lcd_send_byte
  4377 ;; This function is called by:
  4378 ;;		_setDiaSemana
  4379 ;;		_setDiaMesAnio
  4380 ;;		_setHoraMinutoSegundo
  4381 ;;		_main
  4382 ;;		_lcd_putc
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text13
  4387  002438                     __ptext13:
  4388                           	opt stack 0
  4389  002438                     _lcd_gotoxy:
  4390                           	opt stack 23
  4391                           
  4392                           ;incstack = 0
  4393                           ;lcd_gotoxy@x stored from wreg
  4394  002438  6E06               	movwf	lcd_gotoxy@x,c
  4395                           
  4396                           ;unmc_lcd_216.c: 159: int8 address;
  4397                           ;unmc_lcd_216.c: 161: if(y != 1)
  4398  00243A  0405               	decf	lcd_gotoxy@y,w,c
  4399  00243C  B4D8               	btfsc	status,2,c
  4400  00243E  D002               	goto	l386
  4401                           
  4402                           ;unmc_lcd_216.c: 162: address = 0x40;
  4403  002440  0E40               	movlw	64
  4404  002442  D001               	goto	L1
  4405  002444                     l386:
  4406                           
  4407                           ;unmc_lcd_216.c: 163: else
  4408                           ;unmc_lcd_216.c: 164: address=0;
  4409  002444  0E00               	movlw	0
  4410  002446                     L1:
  4411  002446  6E07               	movwf	lcd_gotoxy@address,c
  4412                           
  4413                           ;unmc_lcd_216.c: 166: address += x-1;
  4414  002448  0406               	decf	lcd_gotoxy@x,w,c
  4415  00244A  2607               	addwf	lcd_gotoxy@address,f,c
  4416                           
  4417                           ;unmc_lcd_216.c: 167: lcd_send_byte(0, 0x80 | address);
  4418  00244C  5007               	movf	lcd_gotoxy@address,w,c
  4419  00244E  0980               	iorlw	128
  4420  002450  6E03               	movwf	lcd_send_byte@n,c
  4421  002452  0E00               	movlw	0
  4422  002454  ECF0  F011         	call	_lcd_send_byte
  4423  002458  0012               	return		;funcret
  4424  00245A                     __end_of_lcd_gotoxy:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           intcon2	equ	0xFF1
  4433                           indf0	equ	0xFEF
  4434                           postinc0	equ	0xFEE
  4435                           fsr0h	equ	0xFEA
  4436                           fsr0l	equ	0xFE9
  4437                           wreg	equ	0xFE8
  4438                           postdec1	equ	0xFE5
  4439                           fsr1l	equ	0xFE1
  4440                           indf2	equ	0xFDF
  4441                           postinc2	equ	0xFDE
  4442                           postdec2	equ	0xFDD
  4443                           fsr2h	equ	0xFDA
  4444                           fsr2l	equ	0xFD9
  4445                           status	equ	0xFD8
  4446                           
  4447 ;; *************** function _Write_RTC *****************
  4448 ;; Defined at:
  4449 ;;		line 76 in file "../../headers\unmc_rtcc_01.h"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4467 ;;Total ram usage:        0 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    2
  4470 ;; This function calls:
  4471 ;;		_RtccWrOn
  4472 ;;		_RtccWriteDate
  4473 ;;		_RtccWriteTime
  4474 ;;		___awdiv
  4475 ;; This function is called by:
  4476 ;;		_setDiaMesAnio
  4477 ;;		_setHoraMinutoSegundo
  4478 ;;		_setup
  4479 ;;		_main
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           	psect	text14
  4484  001A56                     __ptext14:
  4485                           	opt stack 0
  4486  001A56                     _Write_RTC:
  4487                           	opt stack 25
  4488                           
  4489                           ;headers\unmc_rtcc_01.h: 77: RtccWrOn();
  4490                           
  4491                           ;incstack = 0
  4492  001A56  EC4C  F012         	call	_RtccWrOn	;wreg free
  4493                           
  4494                           ;headers\unmc_rtcc_01.h: 79: PIE3bits.RTCCIE = 1;
  4495  001A5A  80A3               	bsf	4003,0,c	;volatile
  4496                           
  4497                           ;headers\unmc_rtcc_01.h: 80: segundo_d = segundo / 10;
  4498  001A5C  C035  F001         	movff	_segundo,___awdiv@dividend
  4499  001A60  C036  F002         	movff	_segundo+1,___awdiv@dividend+1
  4500  001A64  0E00               	movlw	0
  4501  001A66  6E04               	movwf	___awdiv@divisor+1,c
  4502  001A68  0E0A               	movlw	10
  4503  001A6A  6E03               	movwf	___awdiv@divisor,c
  4504  001A6C  EC9B  F00F         	call	___awdiv	;wreg free
  4505  001A70  5001               	movf	?___awdiv,w,c
  4506  001A72  6E48               	movwf	_segundo_d,c
  4507                           
  4508                           ;headers\unmc_rtcc_01.h: 81: segundo_u = segundo - segundo_d * 10;
  4509  001A74  5048               	movf	_segundo_d,w,c
  4510  001A76  0D0A               	mullw	10
  4511  001A78  50F3               	movf	prodl,w,c
  4512  001A7A  0800               	sublw	0
  4513  001A7C  2435               	addwf	_segundo,w,c
  4514  001A7E  6E49               	movwf	_segundo_u,c
  4515                           
  4516                           ;headers\unmc_rtcc_01.h: 82: RtccTime.f.sec = segundo_d * 16 + segundo_u;
  4517  001A80  5048               	movf	_segundo_d,w,c
  4518  001A82  0D10               	mullw	16
  4519  001A84  50F3               	movf	prodl,w,c
  4520  001A86  2449               	addwf	_segundo_u,w,c
  4521  001A88  6E4F               	movwf	_RtccTime+1,c
  4522                           
  4523                           ;headers\unmc_rtcc_01.h: 83: minuto_d = minuto / 10;
  4524  001A8A  C052  F001         	movff	_minuto,___awdiv@dividend
  4525  001A8E  C053  F002         	movff	_minuto+1,___awdiv@dividend+1
  4526  001A92  0E00               	movlw	0
  4527  001A94  6E04               	movwf	___awdiv@divisor+1,c
  4528  001A96  0E0A               	movlw	10
  4529  001A98  6E03               	movwf	___awdiv@divisor,c
  4530  001A9A  EC9B  F00F         	call	___awdiv	;wreg free
  4531  001A9E  5001               	movf	?___awdiv,w,c
  4532  001AA0  6E46               	movwf	_minuto_d,c
  4533                           
  4534                           ;headers\unmc_rtcc_01.h: 84: minuto_u = minuto - minuto_d * 10;
  4535  001AA2  5046               	movf	_minuto_d,w,c
  4536  001AA4  0D0A               	mullw	10
  4537  001AA6  50F3               	movf	prodl,w,c
  4538  001AA8  0800               	sublw	0
  4539  001AAA  2452               	addwf	_minuto,w,c
  4540  001AAC  6E47               	movwf	_minuto_u,c
  4541                           
  4542                           ;headers\unmc_rtcc_01.h: 85: RtccTime.f.min = minuto_d * 16 + minuto_u;
  4543  001AAE  5046               	movf	_minuto_d,w,c
  4544  001AB0  0D10               	mullw	16
  4545  001AB2  50F3               	movf	prodl,w,c
  4546  001AB4  2447               	addwf	_minuto_u,w,c
  4547  001AB6  6E50               	movwf	_RtccTime+2,c
  4548                           
  4549                           ;headers\unmc_rtcc_01.h: 86: hora_d = hora / 10;
  4550  001AB8  C054  F001         	movff	_hora,___awdiv@dividend
  4551  001ABC  C055  F002         	movff	_hora+1,___awdiv@dividend+1
  4552  001AC0  0E00               	movlw	0
  4553  001AC2  6E04               	movwf	___awdiv@divisor+1,c
  4554  001AC4  0E0A               	movlw	10
  4555  001AC6  6E03               	movwf	___awdiv@divisor,c
  4556  001AC8  EC9B  F00F         	call	___awdiv	;wreg free
  4557  001ACC  5001               	movf	?___awdiv,w,c
  4558  001ACE  6E44               	movwf	_hora_d,c
  4559                           
  4560                           ;headers\unmc_rtcc_01.h: 87: hora_u = hora - hora_d * 10;
  4561  001AD0  5044               	movf	_hora_d,w,c
  4562  001AD2  0D0A               	mullw	10
  4563  001AD4  50F3               	movf	prodl,w,c
  4564  001AD6  0800               	sublw	0
  4565  001AD8  2454               	addwf	_hora,w,c
  4566  001ADA  6E45               	movwf	_hora_u,c
  4567                           
  4568                           ;headers\unmc_rtcc_01.h: 88: RtccTime.f.hour = hora_d * 16 + hora_u;
  4569  001ADC  5044               	movf	_hora_d,w,c
  4570  001ADE  0D10               	mullw	16
  4571  001AE0  50F3               	movf	prodl,w,c
  4572  001AE2  2445               	addwf	_hora_u,w,c
  4573  001AE4  6E51               	movwf	_RtccTime+3,c
  4574                           
  4575                           ;headers\unmc_rtcc_01.h: 89: anio_d = anio / 10;
  4576  001AE6  C05C  F001         	movff	_anio,___awdiv@dividend
  4577  001AEA  C05D  F002         	movff	_anio+1,___awdiv@dividend+1
  4578  001AEE  0E00               	movlw	0
  4579  001AF0  6E04               	movwf	___awdiv@divisor+1,c
  4580  001AF2  0E0A               	movlw	10
  4581  001AF4  6E03               	movwf	___awdiv@divisor,c
  4582  001AF6  EC9B  F00F         	call	___awdiv	;wreg free
  4583  001AFA  5001               	movf	?___awdiv,w,c
  4584  001AFC  6E3D               	movwf	_anio_d,c
  4585                           
  4586                           ;headers\unmc_rtcc_01.h: 90: anio_u = anio - anio_d * 10;
  4587  001AFE  503D               	movf	_anio_d,w,c
  4588  001B00  0D0A               	mullw	10
  4589  001B02  50F3               	movf	prodl,w,c
  4590  001B04  0800               	sublw	0
  4591  001B06  245C               	addwf	_anio,w,c
  4592  001B08  6E3E               	movwf	_anio_u,c
  4593                           
  4594                           ;headers\unmc_rtcc_01.h: 91: RtccDate.f.year = anio_d * 16 + anio_u;
  4595  001B0A  503D               	movf	_anio_d,w,c
  4596  001B0C  0D10               	mullw	16
  4597  001B0E  50F3               	movf	prodl,w,c
  4598  001B10  243E               	addwf	_anio_u,w,c
  4599  001B12  6E4D               	movwf	_RtccDate+3,c
  4600                           
  4601                           ;headers\unmc_rtcc_01.h: 92: mes_d = mes / 10;
  4602  001B14  C05A  F001         	movff	_mes,___awdiv@dividend
  4603  001B18  C05B  F002         	movff	_mes+1,___awdiv@dividend+1
  4604  001B1C  0E00               	movlw	0
  4605  001B1E  6E04               	movwf	___awdiv@divisor+1,c
  4606  001B20  0E0A               	movlw	10
  4607  001B22  6E03               	movwf	___awdiv@divisor,c
  4608  001B24  EC9B  F00F         	call	___awdiv	;wreg free
  4609  001B28  5001               	movf	?___awdiv,w,c
  4610  001B2A  6E40               	movwf	_mes_d,c
  4611                           
  4612                           ;headers\unmc_rtcc_01.h: 93: mes_u = mes - mes_d * 10;
  4613  001B2C  5040               	movf	_mes_d,w,c
  4614  001B2E  0D0A               	mullw	10
  4615  001B30  50F3               	movf	prodl,w,c
  4616  001B32  0800               	sublw	0
  4617  001B34  245A               	addwf	_mes,w,c
  4618  001B36  6E41               	movwf	_mes_u,c
  4619                           
  4620                           ;headers\unmc_rtcc_01.h: 94: RtccDate.f.mon = mes_d * 16 + mes_u;
  4621  001B38  5040               	movf	_mes_d,w,c
  4622  001B3A  0D10               	mullw	16
  4623  001B3C  50F3               	movf	prodl,w,c
  4624  001B3E  2441               	addwf	_mes_u,w,c
  4625  001B40  6E4C               	movwf	_RtccDate+2,c
  4626                           
  4627                           ;headers\unmc_rtcc_01.h: 95: fecha_d = dia / 10;
  4628  001B42  C056  F001         	movff	_dia,___awdiv@dividend
  4629  001B46  C057  F002         	movff	_dia+1,___awdiv@dividend+1
  4630  001B4A  0E00               	movlw	0
  4631  001B4C  6E04               	movwf	___awdiv@divisor+1,c
  4632  001B4E  0E0A               	movlw	10
  4633  001B50  6E03               	movwf	___awdiv@divisor,c
  4634  001B52  EC9B  F00F         	call	___awdiv	;wreg free
  4635  001B56  5001               	movf	?___awdiv,w,c
  4636  001B58  6E42               	movwf	_fecha_d,c
  4637                           
  4638                           ;headers\unmc_rtcc_01.h: 96: fecha_u = dia - fecha_d * 10;
  4639  001B5A  5042               	movf	_fecha_d,w,c
  4640  001B5C  0D0A               	mullw	10
  4641  001B5E  50F3               	movf	prodl,w,c
  4642  001B60  0800               	sublw	0
  4643  001B62  2456               	addwf	_dia,w,c
  4644  001B64  6E43               	movwf	_fecha_u,c
  4645                           
  4646                           ;headers\unmc_rtcc_01.h: 97: RtccDate.f.mday = fecha_d * 16 + fecha_u;
  4647  001B66  5042               	movf	_fecha_d,w,c
  4648  001B68  0D10               	mullw	16
  4649  001B6A  50F3               	movf	prodl,w,c
  4650  001B6C  2443               	addwf	_fecha_u,w,c
  4651  001B6E  6E4B               	movwf	_RtccDate+1,c
  4652                           
  4653                           ;headers\unmc_rtcc_01.h: 98: dia_semana = diasem;
  4654  001B70  C058  F03F         	movff	_diasem,_dia_semana
  4655                           
  4656                           ;headers\unmc_rtcc_01.h: 99: RtccDate.f.wday = diasem;
  4657  001B74  C058  F04A         	movff	_diasem,_RtccDate
  4658                           
  4659                           ;headers\unmc_rtcc_01.h: 100: RtccWriteTime(&RtccTime, 1);
  4660  001B78  0E4E               	movlw	low _RtccTime
  4661  001B7A  6E01               	movwf	RtccWriteTime@pTm,c
  4662  001B7C  0E00               	movlw	high _RtccTime
  4663  001B7E  6E02               	movwf	RtccWriteTime@pTm+1,c
  4664  001B80  0E01               	movlw	1
  4665  001B82  6E03               	movwf	RtccWriteTime@di,c
  4666  001B84  EC6A  F00E         	call	_RtccWriteTime	;wreg free
  4667                           
  4668                           ;headers\unmc_rtcc_01.h: 101: RtccWriteDate(&RtccDate, 1);
  4669  001B88  0E4A               	movlw	low _RtccDate
  4670  001B8A  6E01               	movwf	RtccWriteDate@pDt,c
  4671  001B8C  0E00               	movlw	high _RtccDate
  4672  001B8E  6E02               	movwf	RtccWriteDate@pDt+1,c
  4673  001B90  0E01               	movlw	1
  4674  001B92  6E03               	movwf	RtccWriteDate@di,c
  4675  001B94  ECCF  F00D         	call	_RtccWriteDate	;wreg free
  4676                           
  4677                           ;headers\unmc_rtcc_01.h: 102: (RTCCFGbits.RTCEN=1);
  4678  001B98  010F               	movlb	15	; () banked
  4679  001B9A  8F3F               	bsf	63,7,b	;volatile
  4680                           
  4681                           ; BSR set to: 15
  4682  001B9C  0012               	return		;funcret
  4683  001B9E                     __end_of_Write_RTC:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon2	equ	0xFF1
  4692                           indf0	equ	0xFEF
  4693                           postinc0	equ	0xFEE
  4694                           fsr0h	equ	0xFEA
  4695                           fsr0l	equ	0xFE9
  4696                           wreg	equ	0xFE8
  4697                           postdec1	equ	0xFE5
  4698                           fsr1l	equ	0xFE1
  4699                           indf2	equ	0xFDF
  4700                           postinc2	equ	0xFDE
  4701                           postdec2	equ	0xFDD
  4702                           fsr2h	equ	0xFDA
  4703                           fsr2l	equ	0xFD9
  4704                           status	equ	0xFD8
  4705                           
  4706 ;; *************** function ___awdiv *****************
  4707 ;; Defined at:
  4708 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  dividend        2    0[COMRAM] int 
  4711 ;;  divisor         2    2[COMRAM] int 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  quotient        2    6[COMRAM] int 
  4714 ;;  sign            1    5[COMRAM] unsigned char 
  4715 ;;  counter         1    4[COMRAM] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  2    0[COMRAM] int 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4728 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4729 ;;Total ram usage:        8 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_Write_RTC
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text15
  4739  001F36                     __ptext15:
  4740                           	opt stack 0
  4741  001F36                     ___awdiv:
  4742                           	opt stack 26
  4743                           
  4744                           ; BSR set to: 15
  4745                           ;incstack = 0
  4746  001F36  0E00               	movlw	0
  4747  001F38  6E06               	movwf	___awdiv@sign,c
  4748  001F3A  AE04               	btfss	___awdiv@divisor+1,7,c
  4749  001F3C  D006               	goto	l731
  4750  001F3E  6C03               	negf	___awdiv@divisor,c
  4751  001F40  1E04               	comf	___awdiv@divisor+1,f,c
  4752  001F42  B0D8               	btfsc	status,0,c
  4753  001F44  2A04               	incf	___awdiv@divisor+1,f,c
  4754  001F46  0E01               	movlw	1
  4755  001F48  6E06               	movwf	___awdiv@sign,c
  4756  001F4A                     l731:
  4757  001F4A  AE02               	btfss	___awdiv@dividend+1,7,c
  4758  001F4C  D006               	goto	l732
  4759  001F4E  6C01               	negf	___awdiv@dividend,c
  4760  001F50  1E02               	comf	___awdiv@dividend+1,f,c
  4761  001F52  B0D8               	btfsc	status,0,c
  4762  001F54  2A02               	incf	___awdiv@dividend+1,f,c
  4763  001F56  0E01               	movlw	1
  4764  001F58  1A06               	xorwf	___awdiv@sign,f,c
  4765  001F5A                     l732:
  4766  001F5A  0E00               	movlw	0
  4767  001F5C  6E08               	movwf	___awdiv@quotient+1,c
  4768  001F5E  0E00               	movlw	0
  4769  001F60  6E07               	movwf	___awdiv@quotient,c
  4770  001F62  5003               	movf	___awdiv@divisor,w,c
  4771  001F64  1004               	iorwf	___awdiv@divisor+1,w,c
  4772  001F66  B4D8               	btfsc	status,2,c
  4773  001F68  D01C               	goto	l739
  4774  001F6A  0E01               	movlw	1
  4775  001F6C  6E05               	movwf	___awdiv@counter,c
  4776  001F6E  D004               	goto	l734
  4777  001F70  90D8               	bcf	status,0,c
  4778  001F72  3603               	rlcf	___awdiv@divisor,f,c
  4779  001F74  3604               	rlcf	___awdiv@divisor+1,f,c
  4780  001F76  2A05               	incf	___awdiv@counter,f,c
  4781  001F78                     l734:
  4782  001F78  AE04               	btfss	___awdiv@divisor+1,7,c
  4783  001F7A  D7FA               	goto	l735
  4784  001F7C                     u2190:
  4785  001F7C  90D8               	bcf	status,0,c
  4786  001F7E  3607               	rlcf	___awdiv@quotient,f,c
  4787  001F80  3608               	rlcf	___awdiv@quotient+1,f,c
  4788  001F82  5003               	movf	___awdiv@divisor,w,c
  4789  001F84  5C01               	subwf	___awdiv@dividend,w,c
  4790  001F86  5004               	movf	___awdiv@divisor+1,w,c
  4791  001F88  5802               	subwfb	___awdiv@dividend+1,w,c
  4792  001F8A  A0D8               	btfss	status,0,c
  4793  001F8C  D005               	goto	l738
  4794  001F8E  5003               	movf	___awdiv@divisor,w,c
  4795  001F90  5E01               	subwf	___awdiv@dividend,f,c
  4796  001F92  5004               	movf	___awdiv@divisor+1,w,c
  4797  001F94  5A02               	subwfb	___awdiv@dividend+1,f,c
  4798  001F96  8007               	bsf	___awdiv@quotient,0,c
  4799  001F98                     l738:
  4800  001F98  90D8               	bcf	status,0,c
  4801  001F9A  3204               	rrcf	___awdiv@divisor+1,f,c
  4802  001F9C  3203               	rrcf	___awdiv@divisor,f,c
  4803  001F9E  2E05               	decfsz	___awdiv@counter,f,c
  4804  001FA0  D7ED               	goto	u2190
  4805  001FA2                     l739:
  4806  001FA2  5006               	movf	___awdiv@sign,w,c
  4807  001FA4  B4D8               	btfsc	status,2,c
  4808  001FA6  D004               	goto	l740
  4809  001FA8  6C07               	negf	___awdiv@quotient,c
  4810  001FAA  1E08               	comf	___awdiv@quotient+1,f,c
  4811  001FAC  B0D8               	btfsc	status,0,c
  4812  001FAE  2A08               	incf	___awdiv@quotient+1,f,c
  4813  001FB0                     l740:
  4814  001FB0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4815  001FB4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4816  001FB8  0012               	return	
  4817  001FBA                     __end_of___awdiv:
  4818                           	opt stack 0
  4819                           tblptru	equ	0xFF8
  4820                           tblptrh	equ	0xFF7
  4821                           tblptrl	equ	0xFF6
  4822                           tablat	equ	0xFF5
  4823                           prodh	equ	0xFF4
  4824                           prodl	equ	0xFF3
  4825                           intcon2	equ	0xFF1
  4826                           indf0	equ	0xFEF
  4827                           postinc0	equ	0xFEE
  4828                           fsr0h	equ	0xFEA
  4829                           fsr0l	equ	0xFE9
  4830                           wreg	equ	0xFE8
  4831                           postdec1	equ	0xFE5
  4832                           fsr1l	equ	0xFE1
  4833                           indf2	equ	0xFDF
  4834                           postinc2	equ	0xFDE
  4835                           postdec2	equ	0xFDD
  4836                           fsr2h	equ	0xFDA
  4837                           fsr2l	equ	0xFD9
  4838                           status	equ	0xFD8
  4839                           
  4840 ;; *************** function _RtccWriteTime *****************
  4841 ;; Defined at:
  4842 ;;		line 34 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteTime.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  pTm             2    0[COMRAM] PTR const struct .
  4845 ;;		 -> RtccTime(4), 
  4846 ;;  di              1    2[COMRAM] enum E7121
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  tempHourWDay    2    9[COMRAM] struct .
  4849 ;;  tempMinSec      2    7[COMRAM] struct .
  4850 ;;  wasWrEn         1    6[COMRAM] enum E7121
  4851 ;;  wasAlrm         1    5[COMRAM] enum E7121
  4852 ;;  wasOn           1    4[COMRAM] enum E7121
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      enum E6550
  4855 ;; Registers used:
  4856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4862 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4863 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4865 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4866 ;;Total ram usage:       11 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    1
  4869 ;; This function calls:
  4870 ;;		_RtccWrOn
  4871 ;; This function is called by:
  4872 ;;		_Write_RTC
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           	psect	text16
  4877  001CD4                     __ptext16:
  4878                           	opt stack 0
  4879  001CD4                     _RtccWriteTime:
  4880                           	opt stack 25
  4881                           
  4882                           ;incstack = 0
  4883  001CD4  0E00               	movlw	0
  4884  001CD6  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4885  001CD8  EE20 F002          	lfsr	2,2
  4886  001CDC  5001               	movf	RtccWriteTime@pTm,w,c
  4887  001CDE  26D9               	addwf	fsr2l,f,c
  4888  001CE0  5002               	movf	RtccWriteTime@pTm+1,w,c
  4889  001CE2  22DA               	addwfc	fsr2h,f,c
  4890  001CE4  0E5A               	movlw	90
  4891  001CE6  60DF               	cpfslt	indf2,c
  4892  001CE8  0012               	return	
  4893  001CEA  EE20 F001          	lfsr	2,1
  4894  001CEE  5001               	movf	RtccWriteTime@pTm,w,c
  4895  001CF0  26D9               	addwf	fsr2l,f,c
  4896  001CF2  5002               	movf	RtccWriteTime@pTm+1,w,c
  4897  001CF4  22DA               	addwfc	fsr2h,f,c
  4898  001CF6  0E5A               	movlw	90
  4899  001CF8  60DF               	cpfslt	indf2,c
  4900  001CFA  0012               	return	
  4901  001CFC  EE20 F003          	lfsr	2,3
  4902  001D00  5001               	movf	RtccWriteTime@pTm,w,c
  4903  001D02  26D9               	addwf	fsr2l,f,c
  4904  001D04  5002               	movf	RtccWriteTime@pTm+1,w,c
  4905  001D06  22DA               	addwfc	fsr2h,f,c
  4906  001D08  0E24               	movlw	36
  4907  001D0A  64DF               	cpfsgt	indf2,c
  4908  001D0C  D001               	goto	l551
  4909  001D0E  0012               	return	
  4910  001D10                     l551:
  4911  001D10  EE20 F002          	lfsr	2,2
  4912  001D14  5001               	movf	RtccWriteTime@pTm,w,c
  4913  001D16  26D9               	addwf	fsr2l,f,c
  4914  001D18  5002               	movf	RtccWriteTime@pTm+1,w,c
  4915  001D1A  22DA               	addwfc	fsr2h,f,c
  4916  001D1C  50DF               	movf	indf2,w,c
  4917  001D1E  6E09               	movwf	RtccWriteTime@tempMinSec+1,c
  4918  001D20  EE20 F001          	lfsr	2,1
  4919  001D24  5001               	movf	RtccWriteTime@pTm,w,c
  4920  001D26  26D9               	addwf	fsr2l,f,c
  4921  001D28  5002               	movf	RtccWriteTime@pTm+1,w,c
  4922  001D2A  22DA               	addwfc	fsr2h,f,c
  4923  001D2C  50DF               	movf	indf2,w,c
  4924  001D2E  6E08               	movwf	RtccWriteTime@tempMinSec,c
  4925  001D30  5003               	movf	RtccWriteTime@di,w,c
  4926  001D32  A4D8               	btfss	status,2,c
  4927  001D34  9CF2               	bcf	intcon,6,c	;volatile
  4928  001D36  010F               	movlb	15	; () banked
  4929  001D38  0E00               	movlw	0
  4930  001D3A  BB3F               	btfsc	63,5,b	;volatile
  4931  001D3C  0E01               	movlw	1
  4932  001D3E  6E07               	movwf	RtccWriteTime@wasWrEn,c
  4933  001D40  5007               	movf	RtccWriteTime@wasWrEn,w,c
  4934  001D42  B4D8               	btfsc	status,2,c
  4935                           
  4936                           ; BSR set to: 15
  4937  001D44  EC4C  F012         	call	_RtccWrOn	;wreg free
  4938  001D48  010F               	movlb	15	; () banked
  4939  001D4A  0E00               	movlw	0
  4940  001D4C  BF3F               	btfsc	63,7,b	;volatile
  4941  001D4E  0E01               	movlw	1
  4942  001D50  6E05               	movwf	RtccWriteTime@wasOn,c
  4943  001D52  5005               	movf	RtccWriteTime@wasOn,w,c
  4944  001D54  B4D8               	btfsc	status,2,c
  4945  001D56  D006               	goto	l557
  4946                           
  4947                           ; BSR set to: 15
  4948  001D58  0E00               	movlw	0
  4949  001D5A  BE91               	btfsc	3985,7,c	;volatile
  4950  001D5C  0E01               	movlw	1
  4951  001D5E  6E06               	movwf	RtccWriteTime@wasAlrm,c
  4952                           
  4953                           ; BSR set to: 15
  4954  001D60  010F               	movlb	15	; () banked
  4955  001D62  9F3F               	bcf	63,7,b	;volatile
  4956  001D64                     l557:
  4957                           
  4958                           ; BSR set to: 15
  4959                           
  4960                           ; BSR set to: 15
  4961  001D64  0EFC               	movlw	252
  4962  001D66  010F               	movlb	15	; () banked
  4963  001D68  173F               	andwf	63,f,b	;volatile
  4964  001D6A  010F               	movlb	15	; () banked
  4965  001D6C  813F               	bsf	63,0,b	;volatile
  4966                           
  4967                           ; BSR set to: 15
  4968  001D6E  CF98 F00A          	movff	3992,RtccWriteTime@tempHourWDay	;volatile
  4969                           
  4970                           ; BSR set to: 15
  4971  001D72  CF99 F00B          	movff	3993,RtccWriteTime@tempHourWDay+1	;volatile
  4972                           
  4973                           ; BSR set to: 15
  4974  001D76  EE20 F003          	lfsr	2,3
  4975  001D7A  5001               	movf	RtccWriteTime@pTm,w,c
  4976  001D7C  26D9               	addwf	fsr2l,f,c
  4977  001D7E  5002               	movf	RtccWriteTime@pTm+1,w,c
  4978  001D80  22DA               	addwfc	fsr2h,f,c
  4979  001D82  50DF               	movf	indf2,w,c
  4980  001D84  6E0A               	movwf	RtccWriteTime@tempHourWDay,c
  4981                           
  4982                           ; BSR set to: 15
  4983  001D86  0EFC               	movlw	252
  4984  001D88  010F               	movlb	15	; () banked
  4985  001D8A  173F               	andwf	63,f,b	;volatile
  4986                           
  4987                           ; BSR set to: 15
  4988  001D8C  010F               	movlb	15	; () banked
  4989  001D8E  813F               	bsf	63,0,b	;volatile
  4990                           
  4991                           ; BSR set to: 15
  4992  001D90  C00A  FF98         	movff	RtccWriteTime@tempHourWDay,3992	;volatile
  4993                           
  4994                           ; BSR set to: 15
  4995  001D94  C00B  FF99         	movff	RtccWriteTime@tempHourWDay+1,3993	;volatile
  4996                           
  4997                           ; BSR set to: 15
  4998  001D98  C008  FF98         	movff	RtccWriteTime@tempMinSec,3992	;volatile
  4999                           
  5000                           ; BSR set to: 15
  5001  001D9C  C009  FF99         	movff	RtccWriteTime@tempMinSec+1,3993	;volatile
  5002                           
  5003                           ; BSR set to: 15
  5004  001DA0  5005               	movf	RtccWriteTime@wasOn,w,c
  5005  001DA2  B4D8               	btfsc	status,2,c
  5006  001DA4  D00B               	goto	l558
  5007                           
  5008                           ; BSR set to: 15
  5009  001DA6  010F               	movlb	15	; () banked
  5010  001DA8  8F3F               	bsf	63,7,b	;volatile
  5011                           
  5012                           ; BSR set to: 15
  5013  001DAA  5006               	movf	RtccWriteTime@wasAlrm,w,c
  5014  001DAC  A4D8               	btfss	status,2,c
  5015                           
  5016                           ; BSR set to: 15
  5017  001DAE  8E91               	bsf	3985,7,c	;volatile
  5018                           
  5019                           ; BSR set to: 15
  5020                           
  5021                           ; BSR set to: 15
  5022  001DB0  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5023  001DB2  B4D8               	btfsc	status,2,c
  5024  001DB4  D008               	goto	l562
  5025                           
  5026                           ; BSR set to: 15
  5027  001DB6  EC4C  F012         	call	_RtccWrOn	;wreg free
  5028  001DBA  D005               	goto	l562
  5029  001DBC                     l558:
  5030  001DBC  5007               	movf	RtccWriteTime@wasWrEn,w,c
  5031  001DBE  A4D8               	btfss	status,2,c
  5032  001DC0  D002               	goto	l562
  5033  001DC2  010F               	movlb	15	; () banked
  5034  001DC4  9B3F               	bcf	63,5,b	;volatile
  5035  001DC6                     l562:
  5036                           
  5037                           ; BSR set to: 15
  5038                           
  5039                           ; BSR set to: 15
  5040  001DC6  5003               	movf	RtccWriteTime@di,w,c
  5041  001DC8  B4D8               	btfsc	status,2,c
  5042  001DCA  0012               	return	
  5043  001DCC  8CF2               	bsf	intcon,6,c	;volatile
  5044  001DCE  0012               	return	
  5045  001DD0                     __end_of_RtccWriteTime:
  5046                           	opt stack 0
  5047                           tblptru	equ	0xFF8
  5048                           tblptrh	equ	0xFF7
  5049                           tblptrl	equ	0xFF6
  5050                           tablat	equ	0xFF5
  5051                           prodh	equ	0xFF4
  5052                           prodl	equ	0xFF3
  5053                           intcon	equ	0xFF2
  5054                           intcon2	equ	0xFF1
  5055                           indf0	equ	0xFEF
  5056                           postinc0	equ	0xFEE
  5057                           fsr0h	equ	0xFEA
  5058                           fsr0l	equ	0xFE9
  5059                           wreg	equ	0xFE8
  5060                           postdec1	equ	0xFE5
  5061                           fsr1l	equ	0xFE1
  5062                           indf2	equ	0xFDF
  5063                           postinc2	equ	0xFDE
  5064                           postdec2	equ	0xFDD
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _RtccWriteDate *****************
  5070 ;; Defined at:
  5071 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWriteDate.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  pDt             2    0[COMRAM] PTR const struct .
  5074 ;;		 -> RtccDate(4), 
  5075 ;;  di              1    2[COMRAM] enum E7121
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;  tempHourWDay    2   11[COMRAM] struct .
  5078 ;;  tempDayMonth    2    9[COMRAM] struct .
  5079 ;;  tempYear        2    6[COMRAM] struct .
  5080 ;;  wasWrEn         1    8[COMRAM] enum E7121
  5081 ;;  wasAlrm         1    5[COMRAM] enum E7121
  5082 ;;  wasOn           1    4[COMRAM] enum E7121
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      enum E6550
  5085 ;; Registers used:
  5086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5093 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5094 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;Total ram usage:       13 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    1
  5099 ;; This function calls:
  5100 ;;		_RtccWrOn
  5101 ;; This function is called by:
  5102 ;;		_Write_RTC
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text17
  5107  001B9E                     __ptext17:
  5108                           	opt stack 0
  5109  001B9E                     _RtccWriteDate:
  5110                           	opt stack 25
  5111                           
  5112                           ;incstack = 0
  5113  001B9E  0E00               	movlw	0
  5114  001BA0  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5115  001BA2  EE20 F002          	lfsr	2,2
  5116  001BA6  5001               	movf	RtccWriteDate@pDt,w,c
  5117  001BA8  26D9               	addwf	fsr2l,f,c
  5118  001BAA  5002               	movf	RtccWriteDate@pDt+1,w,c
  5119  001BAC  22DA               	addwfc	fsr2h,f,c
  5120  001BAE  0E13               	movlw	19
  5121  001BB0  60DF               	cpfslt	indf2,c
  5122  001BB2  0012               	return	
  5123  001BB4  EE20 F002          	lfsr	2,2
  5124  001BB8  5001               	movf	RtccWriteDate@pDt,w,c
  5125  001BBA  26D9               	addwf	fsr2l,f,c
  5126  001BBC  5002               	movf	RtccWriteDate@pDt+1,w,c
  5127  001BBE  22DA               	addwfc	fsr2h,f,c
  5128  001BC0  50DF               	movf	indf2,w,c
  5129  001BC2  B4D8               	btfsc	status,2,c
  5130  001BC4  0012               	return	
  5131  001BC6  EE20 F001          	lfsr	2,1
  5132  001BCA  5001               	movf	RtccWriteDate@pDt,w,c
  5133  001BCC  26D9               	addwf	fsr2l,f,c
  5134  001BCE  5002               	movf	RtccWriteDate@pDt+1,w,c
  5135  001BD0  22DA               	addwfc	fsr2h,f,c
  5136  001BD2  0E32               	movlw	50
  5137  001BD4  60DF               	cpfslt	indf2,c
  5138  001BD6  0012               	return	
  5139  001BD8  EE20 F001          	lfsr	2,1
  5140  001BDC  5001               	movf	RtccWriteDate@pDt,w,c
  5141  001BDE  26D9               	addwf	fsr2l,f,c
  5142  001BE0  5002               	movf	RtccWriteDate@pDt+1,w,c
  5143  001BE2  22DA               	addwfc	fsr2h,f,c
  5144  001BE4  50DF               	movf	indf2,w,c
  5145  001BE6  B4D8               	btfsc	status,2,c
  5146  001BE8  0012               	return	
  5147  001BEA  EE20 F003          	lfsr	2,3
  5148  001BEE  5001               	movf	RtccWriteDate@pDt,w,c
  5149  001BF0  26D9               	addwf	fsr2l,f,c
  5150  001BF2  5002               	movf	RtccWriteDate@pDt+1,w,c
  5151  001BF4  22DA               	addwfc	fsr2h,f,c
  5152  001BF6  0E99               	movlw	153
  5153  001BF8  64DF               	cpfsgt	indf2,c
  5154  001BFA  D001               	goto	l522
  5155  001BFC  0012               	return	
  5156  001BFE                     l522:
  5157  001BFE  EE20 F003          	lfsr	2,3
  5158  001C02  5001               	movf	RtccWriteDate@pDt,w,c
  5159  001C04  26D9               	addwf	fsr2l,f,c
  5160  001C06  5002               	movf	RtccWriteDate@pDt+1,w,c
  5161  001C08  22DA               	addwfc	fsr2h,f,c
  5162  001C0A  50DF               	movf	indf2,w,c
  5163  001C0C  6E07               	movwf	RtccWriteDate@tempYear,c
  5164  001C0E  EE20 F001          	lfsr	2,1
  5165  001C12  5001               	movf	RtccWriteDate@pDt,w,c
  5166  001C14  26D9               	addwf	fsr2l,f,c
  5167  001C16  5002               	movf	RtccWriteDate@pDt+1,w,c
  5168  001C18  22DA               	addwfc	fsr2h,f,c
  5169  001C1A  50DF               	movf	indf2,w,c
  5170  001C1C  6E0A               	movwf	RtccWriteDate@tempDayMonth,c
  5171  001C1E  EE20 F002          	lfsr	2,2
  5172  001C22  5001               	movf	RtccWriteDate@pDt,w,c
  5173  001C24  26D9               	addwf	fsr2l,f,c
  5174  001C26  5002               	movf	RtccWriteDate@pDt+1,w,c
  5175  001C28  22DA               	addwfc	fsr2h,f,c
  5176  001C2A  50DF               	movf	indf2,w,c
  5177  001C2C  6E0B               	movwf	RtccWriteDate@tempDayMonth+1,c
  5178  001C2E  5003               	movf	RtccWriteDate@di,w,c
  5179  001C30  A4D8               	btfss	status,2,c
  5180  001C32  9CF2               	bcf	intcon,6,c	;volatile
  5181  001C34  010F               	movlb	15	; () banked
  5182  001C36  0E00               	movlw	0
  5183  001C38  BB3F               	btfsc	63,5,b	;volatile
  5184  001C3A  0E01               	movlw	1
  5185  001C3C  6E09               	movwf	RtccWriteDate@wasWrEn,c
  5186  001C3E  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5187  001C40  B4D8               	btfsc	status,2,c
  5188                           
  5189                           ; BSR set to: 15
  5190  001C42  EC4C  F012         	call	_RtccWrOn	;wreg free
  5191  001C46  010F               	movlb	15	; () banked
  5192  001C48  0E00               	movlw	0
  5193  001C4A  BF3F               	btfsc	63,7,b	;volatile
  5194  001C4C  0E01               	movlw	1
  5195  001C4E  6E05               	movwf	RtccWriteDate@wasOn,c
  5196  001C50  5005               	movf	RtccWriteDate@wasOn,w,c
  5197  001C52  B4D8               	btfsc	status,2,c
  5198  001C54  D006               	goto	l528
  5199                           
  5200                           ; BSR set to: 15
  5201  001C56  0E00               	movlw	0
  5202  001C58  BE91               	btfsc	3985,7,c	;volatile
  5203  001C5A  0E01               	movlw	1
  5204  001C5C  6E06               	movwf	RtccWriteDate@wasAlrm,c
  5205                           
  5206                           ; BSR set to: 15
  5207  001C5E  010F               	movlb	15	; () banked
  5208  001C60  9F3F               	bcf	63,7,b	;volatile
  5209  001C62                     l528:
  5210                           
  5211                           ; BSR set to: 15
  5212                           
  5213                           ; BSR set to: 15
  5214  001C62  0EFC               	movlw	252
  5215  001C64  010F               	movlb	15	; () banked
  5216  001C66  173F               	andwf	63,f,b	;volatile
  5217  001C68  010F               	movlb	15	; () banked
  5218  001C6A  813F               	bsf	63,0,b	;volatile
  5219                           
  5220                           ; BSR set to: 15
  5221  001C6C  CF98 F00C          	movff	3992,RtccWriteDate@tempHourWDay	;volatile
  5222                           
  5223                           ; BSR set to: 15
  5224  001C70  CF99 F00D          	movff	3993,RtccWriteDate@tempHourWDay+1	;volatile
  5225                           
  5226                           ; BSR set to: 15
  5227  001C74  C001  FFD9         	movff	RtccWriteDate@pDt,fsr2l
  5228  001C78  C002  FFDA         	movff	RtccWriteDate@pDt+1,fsr2h
  5229  001C7C  50DF               	movf	indf2,w,c
  5230  001C7E  6E0D               	movwf	RtccWriteDate@tempHourWDay+1,c
  5231                           
  5232                           ; BSR set to: 15
  5233  001C80  0EFC               	movlw	252
  5234  001C82  010F               	movlb	15	; () banked
  5235  001C84  173F               	andwf	63,f,b	;volatile
  5236                           
  5237                           ; BSR set to: 15
  5238  001C86  0E03               	movlw	3
  5239  001C88  010F               	movlb	15	; () banked
  5240  001C8A  133F               	iorwf	63,f,b	;volatile
  5241                           
  5242                           ; BSR set to: 15
  5243  001C8C  C007  FF98         	movff	RtccWriteDate@tempYear,3992	;volatile
  5244                           
  5245                           ; BSR set to: 15
  5246  001C90  C008  FF99         	movff	RtccWriteDate@tempYear+1,3993	;volatile
  5247                           
  5248                           ; BSR set to: 15
  5249  001C94  C00A  FF98         	movff	RtccWriteDate@tempDayMonth,3992	;volatile
  5250                           
  5251                           ; BSR set to: 15
  5252  001C98  C00B  FF99         	movff	RtccWriteDate@tempDayMonth+1,3993	;volatile
  5253                           
  5254                           ; BSR set to: 15
  5255  001C9C  C00C  FF98         	movff	RtccWriteDate@tempHourWDay,3992	;volatile
  5256                           
  5257                           ; BSR set to: 15
  5258  001CA0  C00D  FF99         	movff	RtccWriteDate@tempHourWDay+1,3993	;volatile
  5259                           
  5260                           ; BSR set to: 15
  5261  001CA4  5005               	movf	RtccWriteDate@wasOn,w,c
  5262  001CA6  B4D8               	btfsc	status,2,c
  5263  001CA8  D00B               	goto	l529
  5264                           
  5265                           ; BSR set to: 15
  5266  001CAA  010F               	movlb	15	; () banked
  5267  001CAC  8F3F               	bsf	63,7,b	;volatile
  5268                           
  5269                           ; BSR set to: 15
  5270  001CAE  5006               	movf	RtccWriteDate@wasAlrm,w,c
  5271  001CB0  A4D8               	btfss	status,2,c
  5272                           
  5273                           ; BSR set to: 15
  5274  001CB2  8E91               	bsf	3985,7,c	;volatile
  5275                           
  5276                           ; BSR set to: 15
  5277                           
  5278                           ; BSR set to: 15
  5279  001CB4  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5280  001CB6  B4D8               	btfsc	status,2,c
  5281  001CB8  D008               	goto	l533
  5282                           
  5283                           ; BSR set to: 15
  5284  001CBA  EC4C  F012         	call	_RtccWrOn	;wreg free
  5285  001CBE  D005               	goto	l533
  5286  001CC0                     l529:
  5287  001CC0  5009               	movf	RtccWriteDate@wasWrEn,w,c
  5288  001CC2  A4D8               	btfss	status,2,c
  5289  001CC4  D002               	goto	l533
  5290  001CC6  010F               	movlb	15	; () banked
  5291  001CC8  9B3F               	bcf	63,5,b	;volatile
  5292  001CCA                     l533:
  5293                           
  5294                           ; BSR set to: 15
  5295                           
  5296                           ; BSR set to: 15
  5297  001CCA  5003               	movf	RtccWriteDate@di,w,c
  5298  001CCC  B4D8               	btfsc	status,2,c
  5299  001CCE  0012               	return	
  5300  001CD0  9CF2               	bcf	intcon,6,c	;volatile
  5301  001CD2  0012               	return	
  5302  001CD4                     __end_of_RtccWriteDate:
  5303                           	opt stack 0
  5304                           tblptru	equ	0xFF8
  5305                           tblptrh	equ	0xFF7
  5306                           tblptrl	equ	0xFF6
  5307                           tablat	equ	0xFF5
  5308                           prodh	equ	0xFF4
  5309                           prodl	equ	0xFF3
  5310                           intcon	equ	0xFF2
  5311                           intcon2	equ	0xFF1
  5312                           indf0	equ	0xFEF
  5313                           postinc0	equ	0xFEE
  5314                           fsr0h	equ	0xFEA
  5315                           fsr0l	equ	0xFE9
  5316                           wreg	equ	0xFE8
  5317                           postdec1	equ	0xFE5
  5318                           fsr1l	equ	0xFE1
  5319                           indf2	equ	0xFDF
  5320                           postinc2	equ	0xFDE
  5321                           postdec2	equ	0xFDD
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           status	equ	0xFD8
  5325                           
  5326 ;; *************** function _RtccWrOn *****************
  5327 ;; Defined at:
  5328 ;;		line 21 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccWrOn.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  data            2    0        unsigned int 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_Write_RTC
  5352 ;;		_RtccWriteDate
  5353 ;;		_RtccWriteTime
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text18
  5358  002498                     __ptext18:
  5359                           	opt stack 0
  5360  002498                     _RtccWrOn:
  5361                           	opt stack 25
  5362                           
  5363                           ;incstack = 0
  5364  002498  9CF2               	bcf	intcon,6,c	;volatile
  5365  00249A  0E55               	movlw	85
  5366  00249C  6EA7               	movwf	4007,c	;volatile
  5367  00249E  0EAA               	movlw	170
  5368  0024A0  6EA7               	movwf	4007,c	;volatile
  5369  0024A2  010F               	movlb	15	; () banked
  5370  0024A4  8B3F               	bsf	63,5,b	;volatile
  5371                           
  5372                           ; BSR set to: 15
  5373  0024A6  8CF2               	bsf	intcon,6,c	;volatile
  5374                           
  5375                           ; BSR set to: 15
  5376  0024A8  0012               	return		;funcret
  5377  0024AA                     __end_of_RtccWrOn:
  5378                           	opt stack 0
  5379                           tblptru	equ	0xFF8
  5380                           tblptrh	equ	0xFF7
  5381                           tblptrl	equ	0xFF6
  5382                           tablat	equ	0xFF5
  5383                           prodh	equ	0xFF4
  5384                           prodl	equ	0xFF3
  5385                           intcon	equ	0xFF2
  5386                           intcon2	equ	0xFF1
  5387                           indf0	equ	0xFEF
  5388                           postinc0	equ	0xFEE
  5389                           fsr0h	equ	0xFEA
  5390                           fsr0l	equ	0xFE9
  5391                           wreg	equ	0xFE8
  5392                           postdec1	equ	0xFE5
  5393                           fsr1l	equ	0xFE1
  5394                           indf2	equ	0xFDF
  5395                           postinc2	equ	0xFDE
  5396                           postdec2	equ	0xFDD
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _lcd_init *****************
  5402 ;; Defined at:
  5403 ;;		line 119 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  i               1    4[COMRAM] unsigned char 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;Total ram usage:        1 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; Hardware stack levels required when called:    2
  5424 ;; This function calls:
  5425 ;;		_Delay1KTCYx
  5426 ;;		_lcd_send_byte
  5427 ;;		_lcd_send_nibble
  5428 ;; This function is called by:
  5429 ;;		_setup
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           	psect	text19
  5434  002036                     __ptext19:
  5435                           	opt stack 0
  5436  002036                     _lcd_init:
  5437                           	opt stack 27
  5438                           
  5439                           ;unmc_lcd_216.c: 120: int8 i;
  5440                           ;unmc_lcd_216.c: 122: TRISBbits.TRISB3=0;
  5441                           
  5442                           ; BSR set to: 15
  5443                           ;incstack = 0
  5444  002036  9693               	bcf	3987,3,c	;volatile
  5445                           
  5446                           ;unmc_lcd_216.c: 123: TRISBbits.TRISB2=0;
  5447  002038  9493               	bcf	3987,2,c	;volatile
  5448                           
  5449                           ;unmc_lcd_216.c: 128: LATBbits.LATB3=0;
  5450  00203A  968A               	bcf	3978,3,c	;volatile
  5451                           
  5452                           ;unmc_lcd_216.c: 129: LATBbits.LATB2=0;
  5453  00203C  948A               	bcf	3978,2,c	;volatile
  5454                           
  5455                           ;unmc_lcd_216.c: 134: TRISBbits.TRISB4=0;
  5456  00203E  9893               	bcf	3987,4,c	;volatile
  5457                           
  5458                           ;unmc_lcd_216.c: 135: TRISBbits.TRISB5=0;
  5459  002040  9A93               	bcf	3987,5,c	;volatile
  5460                           
  5461                           ;unmc_lcd_216.c: 136: TRISBbits.TRISB6=0;
  5462  002042  9C93               	bcf	3987,6,c	;volatile
  5463                           
  5464                           ;unmc_lcd_216.c: 137: TRISBbits.TRISB7=0;
  5465  002044  9E93               	bcf	3987,7,c	;volatile
  5466                           
  5467                           ;unmc_lcd_216.c: 139: Delay1KTCYx(8000000UL/800000UL);
  5468  002046  0E0A               	movlw	10
  5469  002048  EC55  F012         	call	_Delay1KTCYx
  5470                           
  5471                           ;unmc_lcd_216.c: 140: Delay1KTCYx(8000000UL/800000UL);
  5472  00204C  0E0A               	movlw	10
  5473  00204E  EC55  F012         	call	_Delay1KTCYx
  5474                           
  5475                           ;unmc_lcd_216.c: 141: Delay1KTCYx(8000000UL/800000UL);
  5476  002052  0E0A               	movlw	10
  5477  002054  EC55  F012         	call	_Delay1KTCYx
  5478                           
  5479                           ;unmc_lcd_216.c: 143: for(i=0 ;i < 3; i++){
  5480  002058  0E00               	movlw	0
  5481  00205A  6E05               	movwf	lcd_init@i,c
  5482  00205C                     l2931:
  5483  00205C  0E02               	movlw	2
  5484  00205E  6405               	cpfsgt	lcd_init@i,c
  5485  002060  D001               	goto	l379
  5486  002062  D008               	goto	u2630
  5487  002064                     l379:
  5488                           
  5489                           ;unmc_lcd_216.c: 144: lcd_send_nibble(0x03);
  5490  002064  0E03               	movlw	3
  5491  002066  EC56  F010         	call	_lcd_send_nibble
  5492                           
  5493                           ;unmc_lcd_216.c: 145: Delay1KTCYx(8000000UL/800000UL);
  5494  00206A  0E0A               	movlw	10
  5495  00206C  EC55  F012         	call	_Delay1KTCYx
  5496  002070  2A05               	incf	lcd_init@i,f,c
  5497  002072  D7F4               	goto	l2931
  5498  002074                     u2630:
  5499                           
  5500                           ;unmc_lcd_216.c: 146: }
  5501                           ;unmc_lcd_216.c: 148: lcd_send_nibble(0x02);
  5502  002074  0E02               	movlw	2
  5503  002076  EC56  F010         	call	_lcd_send_nibble
  5504                           
  5505                           ;unmc_lcd_216.c: 150: for(i=0; i < sizeof(LCD_INIT_STRING); i++){
  5506  00207A  0E00               	movlw	0
  5507  00207C  6E05               	movwf	lcd_init@i,c
  5508  00207E                     l2945:
  5509  00207E  0E03               	movlw	3
  5510  002080  6405               	cpfsgt	lcd_init@i,c
  5511  002082  D001               	goto	l381
  5512  002084  0012               	return	
  5513  002086                     l381:
  5514                           
  5515                           ;unmc_lcd_216.c: 151: lcd_send_byte(0, LCD_INIT_STRING[i]);
  5516  002086  5005               	movf	lcd_init@i,w,c
  5517  002088  0D01               	mullw	1
  5518  00208A  0E0B               	movlw	low _LCD_INIT_STRING
  5519  00208C  24F3               	addwf	prodl,w,c
  5520  00208E  6EF6               	movwf	tblptrl,c
  5521  002090  0E0F               	movlw	high _LCD_INIT_STRING
  5522  002092  20F4               	addwfc	prodh,w,c
  5523  002094  6EF7               	movwf	tblptrh,c
  5524  002096                     	if	0	;There are less than 3 active tblptr bytes
  5525  002096                     	endif
  5526  002096  0008               	tblrd		*
  5527  002098  CFF5 F003          	movff	tablat,lcd_send_byte@n
  5528  00209C  0E00               	movlw	0
  5529  00209E  ECF0  F011         	call	_lcd_send_byte
  5530                           
  5531                           ;unmc_lcd_216.c: 153: Delay1KTCYx(8000000UL/800000UL);
  5532  0020A2  0E0A               	movlw	10
  5533  0020A4  EC55  F012         	call	_Delay1KTCYx
  5534  0020A8  2A05               	incf	lcd_init@i,f,c
  5535  0020AA  D7E9               	goto	l2945
  5536  0020AC                     __end_of_lcd_init:
  5537                           	opt stack 0
  5538                           tblptru	equ	0xFF8
  5539                           tblptrh	equ	0xFF7
  5540                           tblptrl	equ	0xFF6
  5541                           tablat	equ	0xFF5
  5542                           prodh	equ	0xFF4
  5543                           prodl	equ	0xFF3
  5544                           intcon	equ	0xFF2
  5545                           intcon2	equ	0xFF1
  5546                           indf0	equ	0xFEF
  5547                           postinc0	equ	0xFEE
  5548                           fsr0h	equ	0xFEA
  5549                           fsr0l	equ	0xFE9
  5550                           wreg	equ	0xFE8
  5551                           postdec1	equ	0xFE5
  5552                           fsr1l	equ	0xFE1
  5553                           indf2	equ	0xFDF
  5554                           postinc2	equ	0xFDE
  5555                           postdec2	equ	0xFDD
  5556                           fsr2h	equ	0xFDA
  5557                           fsr2l	equ	0xFD9
  5558                           status	equ	0xFD8
  5559                           
  5560 ;; *************** function _Delay1KTCYx *****************
  5561 ;; Defined at:
  5562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d1ktcyx.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  unit            1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  unit            1    0[COMRAM] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5580 ;;Total ram usage:        1 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; This function calls:
  5583 ;;		Nothing
  5584 ;; This function is called by:
  5585 ;;		_lcd_init
  5586 ;;		_DelayPORXLCD
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text20
  5591  0024AA                     __ptext20:
  5592                           	opt stack 0
  5593  0024AA                     _Delay1KTCYx:
  5594                           	opt stack 28
  5595                           
  5596                           ;incstack = 0
  5597                           ;Delay1KTCYx@unit stored from wreg
  5598  0024AA  6E01               	movwf	Delay1KTCYx@unit,c
  5599  0024AC                     l779:
  5600  0024AC  0EC8               	movlw	200
  5601  0024AE                     u3757:
  5602  0024AE  D000               	nop2	
  5603  0024B0  2EE8               	decfsz	wreg,f,c
  5604  0024B2  D7FD               	bra	u3757
  5605  0024B4  2E01               	decfsz	Delay1KTCYx@unit,f,c
  5606  0024B6  D7FA               	goto	l779
  5607  0024B8  0012               	return	
  5608  0024BA                     __end_of_Delay1KTCYx:
  5609                           	opt stack 0
  5610                           tblptru	equ	0xFF8
  5611                           tblptrh	equ	0xFF7
  5612                           tblptrl	equ	0xFF6
  5613                           tablat	equ	0xFF5
  5614                           prodh	equ	0xFF4
  5615                           prodl	equ	0xFF3
  5616                           intcon	equ	0xFF2
  5617                           intcon2	equ	0xFF1
  5618                           indf0	equ	0xFEF
  5619                           postinc0	equ	0xFEE
  5620                           fsr0h	equ	0xFEA
  5621                           fsr0l	equ	0xFE9
  5622                           wreg	equ	0xFE8
  5623                           postdec1	equ	0xFE5
  5624                           fsr1l	equ	0xFE1
  5625                           indf2	equ	0xFDF
  5626                           postinc2	equ	0xFDE
  5627                           postdec2	equ	0xFDD
  5628                           fsr2h	equ	0xFDA
  5629                           fsr2l	equ	0xFD9
  5630                           status	equ	0xFD8
  5631                           
  5632 ;; *************** function _lcd_comand *****************
  5633 ;; Defined at:
  5634 ;;		line 189 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  d               1    wreg     unsigned char 
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  d               1    4[COMRAM] unsigned char 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5652 ;;Total ram usage:        1 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; Hardware stack levels required when called:    2
  5655 ;; This function calls:
  5656 ;;		_lcd_send_byte
  5657 ;; This function is called by:
  5658 ;;		_setup
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text21
  5663  0024D8                     __ptext21:
  5664                           	opt stack 0
  5665  0024D8                     _lcd_comand:
  5666                           	opt stack 27
  5667                           
  5668                           ;incstack = 0
  5669                           ;lcd_comand@d stored from wreg
  5670  0024D8  6E05               	movwf	lcd_comand@d,c
  5671                           
  5672                           ;unmc_lcd_216.c: 190: lcd_send_byte(0,d);
  5673  0024DA  C005  F003         	movff	lcd_comand@d,lcd_send_byte@n
  5674  0024DE  0E00               	movlw	0
  5675  0024E0  ECF0  F011         	call	_lcd_send_byte
  5676  0024E4  0012               	return		;funcret
  5677  0024E6                     __end_of_lcd_comand:
  5678                           	opt stack 0
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           prodh	equ	0xFF4
  5684                           prodl	equ	0xFF3
  5685                           intcon	equ	0xFF2
  5686                           intcon2	equ	0xFF1
  5687                           indf0	equ	0xFEF
  5688                           postinc0	equ	0xFEE
  5689                           fsr0h	equ	0xFEA
  5690                           fsr0l	equ	0xFE9
  5691                           wreg	equ	0xFE8
  5692                           postdec1	equ	0xFE5
  5693                           fsr1l	equ	0xFE1
  5694                           indf2	equ	0xFDF
  5695                           postinc2	equ	0xFDE
  5696                           postdec2	equ	0xFDD
  5697                           fsr2h	equ	0xFDA
  5698                           fsr2l	equ	0xFD9
  5699                           status	equ	0xFD8
  5700                           
  5701 ;; *************** function _lcd_send_byte *****************
  5702 ;; Defined at:
  5703 ;;		line 86 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  address         1    wreg     unsigned char 
  5706 ;;  n               1    2[COMRAM] unsigned char 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  address         1    3[COMRAM] unsigned char 
  5709 ;; Return value:  Size  Location     Type
  5710 ;;                  1    wreg      void 
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0, cstack
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5719 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;Total ram usage:        2 bytes
  5723 ;; Hardware stack levels used:    1
  5724 ;; Hardware stack levels required when called:    1
  5725 ;; This function calls:
  5726 ;;		_Delay100TCYx
  5727 ;;		_lcd_send_nibble
  5728 ;; This function is called by:
  5729 ;;		_lcd_init
  5730 ;;		_lcd_gotoxy
  5731 ;;		_lcd_putc
  5732 ;;		_lcd_comand
  5733 ;;		_lcd_setcursor_vb
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text22
  5738  0023E0                     __ptext22:
  5739                           	opt stack 0
  5740  0023E0                     _lcd_send_byte:
  5741                           	opt stack 24
  5742                           
  5743                           ;incstack = 0
  5744                           ;lcd_send_byte@address stored from wreg
  5745  0023E0  6E04               	movwf	lcd_send_byte@address,c
  5746                           
  5747                           ;unmc_lcd_216.c: 88: LATBbits.LATB3=0;
  5748  0023E2  968A               	bcf	3978,3,c	;volatile
  5749                           
  5750                           ;unmc_lcd_216.c: 93: Delay100TCYx(8000000UL/4000000UL);
  5751  0023E4  0E02               	movlw	2
  5752  0023E6  EC5D  F012         	call	_Delay100TCYx
  5753                           
  5754                           ;unmc_lcd_216.c: 96: TRISBbits.TRISB4=0;
  5755  0023EA  9893               	bcf	3987,4,c	;volatile
  5756                           
  5757                           ;unmc_lcd_216.c: 97: TRISBbits.TRISB5=0;
  5758  0023EC  9A93               	bcf	3987,5,c	;volatile
  5759                           
  5760                           ;unmc_lcd_216.c: 98: TRISBbits.TRISB6=0;
  5761  0023EE  9C93               	bcf	3987,6,c	;volatile
  5762                           
  5763                           ;unmc_lcd_216.c: 99: TRISBbits.TRISB7=0;
  5764  0023F0  9E93               	bcf	3987,7,c	;volatile
  5765                           
  5766                           ;unmc_lcd_216.c: 101: if(address)
  5767  0023F2  5004               	movf	lcd_send_byte@address,w,c
  5768  0023F4  B4D8               	btfsc	status,2,c
  5769  0023F6  D002               	goto	l374
  5770                           
  5771                           ;unmc_lcd_216.c: 102: LATBbits.LATB3=1;
  5772  0023F8  868A               	bsf	3978,3,c	;volatile
  5773  0023FA  D001               	goto	l375
  5774  0023FC                     l374:
  5775                           
  5776                           ;unmc_lcd_216.c: 103: else
  5777                           ;unmc_lcd_216.c: 104: LATBbits.LATB3=0;
  5778  0023FC  968A               	bcf	3978,3,c	;volatile
  5779  0023FE                     l375:
  5780                           
  5781                           ;unmc_lcd_216.c: 106: __nop();
  5782  0023FE  F000               	nop	
  5783                           
  5784                           ;unmc_lcd_216.c: 113: lcd_send_nibble(n >> 4);
  5785  002400  3803               	swapf	lcd_send_byte@n,w,c
  5786  002402  0B0F               	andlw	15
  5787  002404  EC56  F010         	call	_lcd_send_nibble
  5788                           
  5789                           ;unmc_lcd_216.c: 114: lcd_send_nibble(n & 0xf);
  5790  002408  5003               	movf	lcd_send_byte@n,w,c
  5791  00240A  0B0F               	andlw	15
  5792  00240C  EC56  F010         	call	_lcd_send_nibble
  5793  002410  0012               	return		;funcret
  5794  002412                     __end_of_lcd_send_byte:
  5795                           	opt stack 0
  5796                           tblptru	equ	0xFF8
  5797                           tblptrh	equ	0xFF7
  5798                           tblptrl	equ	0xFF6
  5799                           tablat	equ	0xFF5
  5800                           prodh	equ	0xFF4
  5801                           prodl	equ	0xFF3
  5802                           intcon	equ	0xFF2
  5803                           intcon2	equ	0xFF1
  5804                           indf0	equ	0xFEF
  5805                           postinc0	equ	0xFEE
  5806                           fsr0h	equ	0xFEA
  5807                           fsr0l	equ	0xFE9
  5808                           wreg	equ	0xFE8
  5809                           postdec1	equ	0xFE5
  5810                           fsr1l	equ	0xFE1
  5811                           indf2	equ	0xFDF
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818 ;; *************** function _lcd_send_nibble *****************
  5819 ;; Defined at:
  5820 ;;		line 25 in file "../../Librerias/Unimic/unmc_01/sources/unmc_lcd_216.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  nibble          1    wreg     unsigned char 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  nibble          1    1[COMRAM] unsigned char 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;Total ram usage:        2 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_lcd_send_byte
  5844 ;;		_lcd_init
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text23
  5849  0020AC                     __ptext23:
  5850                           	opt stack 0
  5851  0020AC                     _lcd_send_nibble:
  5852                           	opt stack 24
  5853                           
  5854                           ;incstack = 0
  5855                           ;lcd_send_nibble@nibble stored from wreg
  5856  0020AC  6E02               	movwf	lcd_send_nibble@nibble,c
  5857                           
  5858                           ;unmc_lcd_216.c: 27: LATBbits.LATB4=!!(nibble & 0x01);
  5859  0020AE  A002               	btfss	lcd_send_nibble@nibble,0,c
  5860  0020B0  D003               	goto	u1800
  5861  0020B2  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5862  0020B4  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5863  0020B6  D001               	goto	u1818
  5864  0020B8                     u1800:
  5865  0020B8  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5866  0020BA                     u1818:
  5867  0020BA  3A01               	swapf	??_lcd_send_nibble,f,c
  5868  0020BC  508A               	movf	3978,w,c	;volatile
  5869  0020BE  1801               	xorwf	??_lcd_send_nibble,w,c
  5870  0020C0  0BEF               	andlw	-17
  5871  0020C2  1801               	xorwf	??_lcd_send_nibble,w,c
  5872  0020C4  6E8A               	movwf	3978,c	;volatile
  5873                           
  5874                           ;unmc_lcd_216.c: 28: LATBbits.LATB5=!!(nibble & 0x02);
  5875  0020C6  A202               	btfss	lcd_send_nibble@nibble,1,c
  5876  0020C8  D003               	goto	u1820
  5877  0020CA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5878  0020CC  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5879  0020CE  D001               	goto	u1838
  5880  0020D0                     u1820:
  5881  0020D0  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5882  0020D2                     u1838:
  5883  0020D2  3A01               	swapf	??_lcd_send_nibble,f,c
  5884  0020D4  4601               	rlncf	??_lcd_send_nibble,f,c
  5885  0020D6  508A               	movf	3978,w,c	;volatile
  5886  0020D8  1801               	xorwf	??_lcd_send_nibble,w,c
  5887  0020DA  0BDF               	andlw	-33
  5888  0020DC  1801               	xorwf	??_lcd_send_nibble,w,c
  5889  0020DE  6E8A               	movwf	3978,c	;volatile
  5890                           
  5891                           ;unmc_lcd_216.c: 29: LATBbits.LATB6=!!(nibble & 0x04);
  5892  0020E0  A402               	btfss	lcd_send_nibble@nibble,2,c
  5893  0020E2  D003               	goto	u1840
  5894  0020E4  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5895  0020E6  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5896  0020E8  D001               	goto	u1858
  5897  0020EA                     u1840:
  5898  0020EA  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5899  0020EC                     u1858:
  5900  0020EC  3A01               	swapf	??_lcd_send_nibble,f,c
  5901  0020EE  4601               	rlncf	??_lcd_send_nibble,f,c
  5902  0020F0  4601               	rlncf	??_lcd_send_nibble,f,c
  5903  0020F2  508A               	movf	3978,w,c	;volatile
  5904  0020F4  1801               	xorwf	??_lcd_send_nibble,w,c
  5905  0020F6  0BBF               	andlw	-65
  5906  0020F8  1801               	xorwf	??_lcd_send_nibble,w,c
  5907  0020FA  6E8A               	movwf	3978,c	;volatile
  5908                           
  5909                           ;unmc_lcd_216.c: 30: LATBbits.LATB7=!!(nibble & 0x08);
  5910  0020FC  A602               	btfss	lcd_send_nibble@nibble,3,c
  5911  0020FE  D003               	goto	u1860
  5912  002100  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5913  002102  2A01               	incf	??_lcd_send_nibble& (0+255),f,c
  5914  002104  D001               	goto	u1878
  5915  002106                     u1860:
  5916  002106  6A01               	clrf	??_lcd_send_nibble& (0+255),c
  5917  002108                     u1878:
  5918  002108  3201               	rrcf	??_lcd_send_nibble,f,c
  5919  00210A  3201               	rrcf	??_lcd_send_nibble,f,c
  5920  00210C  508A               	movf	3978,w,c	;volatile
  5921  00210E  1801               	xorwf	??_lcd_send_nibble,w,c
  5922  002110  0B7F               	andlw	-129
  5923  002112  1801               	xorwf	??_lcd_send_nibble,w,c
  5924  002114  6E8A               	movwf	3978,c	;volatile
  5925                           
  5926                           ;unmc_lcd_216.c: 32: __nop();
  5927  002116  F000               	nop	
  5928                           
  5929                           ;unmc_lcd_216.c: 33: LATBbits.LATB2=1;
  5930  002118  848A               	bsf	3978,2,c	;volatile
  5931                           
  5932                           ;unmc_lcd_216.c: 34: __nop();__nop();
  5933  00211A  F000               	nop	
  5934  00211C  F000               	nop	
  5935                           
  5936                           ;unmc_lcd_216.c: 35: LATBbits.LATB2=0;
  5937  00211E  948A               	bcf	3978,2,c	;volatile
  5938  002120  0012               	return		;funcret
  5939  002122                     __end_of_lcd_send_nibble:
  5940                           	opt stack 0
  5941                           tblptru	equ	0xFF8
  5942                           tblptrh	equ	0xFF7
  5943                           tblptrl	equ	0xFF6
  5944                           tablat	equ	0xFF5
  5945                           prodh	equ	0xFF4
  5946                           prodl	equ	0xFF3
  5947                           intcon	equ	0xFF2
  5948                           intcon2	equ	0xFF1
  5949                           indf0	equ	0xFEF
  5950                           postinc0	equ	0xFEE
  5951                           fsr0h	equ	0xFEA
  5952                           fsr0l	equ	0xFE9
  5953                           wreg	equ	0xFE8
  5954                           postdec1	equ	0xFE5
  5955                           fsr1l	equ	0xFE1
  5956                           indf2	equ	0xFDF
  5957                           postinc2	equ	0xFDE
  5958                           postdec2	equ	0xFDD
  5959                           fsr2h	equ	0xFDA
  5960                           fsr2l	equ	0xFD9
  5961                           status	equ	0xFD8
  5962                           
  5963 ;; *************** function _Delay100TCYx *****************
  5964 ;; Defined at:
  5965 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\d100tcyx.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  unit            1    wreg     unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  unit            1    0[COMRAM] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;Total ram usage:        1 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_lcd_send_byte
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text24
  5993  0024BA                     __ptext24:
  5994                           	opt stack 0
  5995  0024BA                     _Delay100TCYx:
  5996                           	opt stack 24
  5997                           
  5998                           ;incstack = 0
  5999                           ;Delay100TCYx@unit stored from wreg
  6000  0024BA  6E01               	movwf	Delay100TCYx@unit,c
  6001  0024BC                     l765:
  6002  0024BC  0E21               	movlw	33
  6003  0024BE                     u3767:
  6004  0024BE  2EE8               	decfsz	wreg,f,c
  6005  0024C0  D7FE               	bra	u3767
  6006  0024C2  F000               	nop	
  6007  0024C4  2E01               	decfsz	Delay100TCYx@unit,f,c
  6008  0024C6  D7FA               	goto	l765
  6009  0024C8  0012               	return	
  6010  0024CA                     __end_of_Delay100TCYx:
  6011                           	opt stack 0
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           intcon	equ	0xFF2
  6019                           intcon2	equ	0xFF1
  6020                           indf0	equ	0xFEF
  6021                           postinc0	equ	0xFEE
  6022                           fsr0h	equ	0xFEA
  6023                           fsr0l	equ	0xFE9
  6024                           wreg	equ	0xFE8
  6025                           postdec1	equ	0xFE5
  6026                           fsr1l	equ	0xFE1
  6027                           indf2	equ	0xFDF
  6028                           postinc2	equ	0xFDE
  6029                           postdec2	equ	0xFDD
  6030                           fsr2h	equ	0xFDA
  6031                           fsr2l	equ	0xFD9
  6032                           status	equ	0xFD8
  6033                           
  6034 ;; *************** function _Read_RTC *****************
  6035 ;; Defined at:
  6036 ;;		line 112 in file "../../headers\unmc_rtcc_01.h"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6054 ;;Total ram usage:        0 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; Hardware stack levels required when called:    1
  6057 ;; This function calls:
  6058 ;;		_RtccReadDate
  6059 ;;		_RtccReadTime
  6060 ;; This function is called by:
  6061 ;;		_main
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text25
  6066  001DD0                     __ptext25:
  6067                           	opt stack 0
  6068  001DD0                     _Read_RTC:
  6069                           	opt stack 29
  6070                           
  6071                           ;headers\unmc_rtcc_01.h: 115: RtccReadTime(&RtccTime);
  6072                           
  6073                           ;incstack = 0
  6074  001DD0  0E4E               	movlw	low _RtccTime
  6075  001DD2  6E01               	movwf	RtccReadTime@pTm,c
  6076  001DD4  0E00               	movlw	high _RtccTime
  6077  001DD6  6E02               	movwf	RtccReadTime@pTm+1,c
  6078  001DD8  EC01  F011         	call	_RtccReadTime	;wreg free
  6079                           
  6080                           ;headers\unmc_rtcc_01.h: 116: segundo_u = (RtccTime.f.sec & 0x0F);
  6081  001DDC  504F               	movf	_RtccTime+1,w,c
  6082  001DDE  0B0F               	andlw	15
  6083  001DE0  6E49               	movwf	_segundo_u,c
  6084                           
  6085                           ;headers\unmc_rtcc_01.h: 117: segundo_d = ((RtccTime.f.sec & 0xF0) >> 4);
  6086  001DE2  384F               	swapf	_RtccTime+1,w,c
  6087  001DE4  0B0F               	andlw	15
  6088  001DE6  0B0F               	andlw	15
  6089  001DE8  6E48               	movwf	_segundo_d,c
  6090                           
  6091                           ;headers\unmc_rtcc_01.h: 118: minuto_u = (RtccTime.f.min & 0x0F);
  6092  001DEA  5050               	movf	_RtccTime+2,w,c
  6093  001DEC  0B0F               	andlw	15
  6094  001DEE  6E47               	movwf	_minuto_u,c
  6095                           
  6096                           ;headers\unmc_rtcc_01.h: 119: minuto_d = ((RtccTime.f.min & 0xF0) >> 4);
  6097  001DF0  3850               	swapf	_RtccTime+2,w,c
  6098  001DF2  0B0F               	andlw	15
  6099  001DF4  0B0F               	andlw	15
  6100  001DF6  6E46               	movwf	_minuto_d,c
  6101                           
  6102                           ;headers\unmc_rtcc_01.h: 120: hora_u = (RtccTime.f.hour & 0x0F);
  6103  001DF8  5051               	movf	_RtccTime+3,w,c
  6104  001DFA  0B0F               	andlw	15
  6105  001DFC  6E45               	movwf	_hora_u,c
  6106                           
  6107                           ;headers\unmc_rtcc_01.h: 121: hora_d = ((RtccTime.f.hour & 0xF0) >> 4);
  6108  001DFE  3851               	swapf	_RtccTime+3,w,c
  6109  001E00  0B0F               	andlw	15
  6110  001E02  0B0F               	andlw	15
  6111  001E04  6E44               	movwf	_hora_d,c
  6112                           
  6113                           ;headers\unmc_rtcc_01.h: 122: RtccReadDate(&RtccDate);
  6114  001E06  0E4A               	movlw	low _RtccDate
  6115  001E08  6E01               	movwf	RtccReadDate@pDt,c
  6116  001E0A  0E00               	movlw	high _RtccDate
  6117  001E0C  6E02               	movwf	RtccReadDate@pDt+1,c
  6118  001E0E  EC54  F00F         	call	_RtccReadDate	;wreg free
  6119                           
  6120                           ;headers\unmc_rtcc_01.h: 123: fecha_u = (RtccDate.f.mday & 0x0F);
  6121  001E12  504B               	movf	_RtccDate+1,w,c
  6122  001E14  0B0F               	andlw	15
  6123  001E16  6E43               	movwf	_fecha_u,c
  6124                           
  6125                           ;headers\unmc_rtcc_01.h: 124: fecha_d = ((RtccDate.f.mday & 0xF0) >> 4);
  6126  001E18  384B               	swapf	_RtccDate+1,w,c
  6127  001E1A  0B0F               	andlw	15
  6128  001E1C  0B0F               	andlw	15
  6129  001E1E  6E42               	movwf	_fecha_d,c
  6130                           
  6131                           ;headers\unmc_rtcc_01.h: 125: mes_u = (RtccDate.f.mon & 0x0F);
  6132  001E20  504C               	movf	_RtccDate+2,w,c
  6133  001E22  0B0F               	andlw	15
  6134  001E24  6E41               	movwf	_mes_u,c
  6135                           
  6136                           ;headers\unmc_rtcc_01.h: 126: mes_d = ((RtccDate.f.mon & 0xF0) >> 4);
  6137  001E26  384C               	swapf	_RtccDate+2,w,c
  6138  001E28  0B0F               	andlw	15
  6139  001E2A  0B0F               	andlw	15
  6140  001E2C  6E40               	movwf	_mes_d,c
  6141                           
  6142                           ;headers\unmc_rtcc_01.h: 127: dia_semana = RtccDate.f.wday;
  6143  001E2E  C04A  F03F         	movff	_RtccDate,_dia_semana
  6144                           
  6145                           ;headers\unmc_rtcc_01.h: 128: anio_u = (RtccDate.f.year & 0x0F);
  6146  001E32  504D               	movf	_RtccDate+3,w,c
  6147  001E34  0B0F               	andlw	15
  6148  001E36  6E3E               	movwf	_anio_u,c
  6149                           
  6150                           ;headers\unmc_rtcc_01.h: 129: anio_d = ((RtccDate.f.year & 0xF0) >> 4);
  6151  001E38  384D               	swapf	_RtccDate+3,w,c
  6152  001E3A  0B0F               	andlw	15
  6153  001E3C  0B0F               	andlw	15
  6154  001E3E  6E3D               	movwf	_anio_d,c
  6155                           
  6156                           ;headers\unmc_rtcc_01.h: 131: segundo = segundo_d * 10 + segundo_u;
  6157  001E40  5048               	movf	_segundo_d,w,c
  6158  001E42  0D0A               	mullw	10
  6159  001E44  5049               	movf	_segundo_u,w,c
  6160  001E46  24F3               	addwf	prodl,w,c
  6161  001E48  6E35               	movwf	_segundo,c
  6162  001E4A  0E00               	movlw	0
  6163  001E4C  20F4               	addwfc	prodh,w,c
  6164  001E4E  6E36               	movwf	_segundo+1,c
  6165                           
  6166                           ;headers\unmc_rtcc_01.h: 132: minuto = minuto_d * 10 + minuto_u;
  6167  001E50  5046               	movf	_minuto_d,w,c
  6168  001E52  0D0A               	mullw	10
  6169  001E54  5047               	movf	_minuto_u,w,c
  6170  001E56  24F3               	addwf	prodl,w,c
  6171  001E58  6E52               	movwf	_minuto,c
  6172  001E5A  0E00               	movlw	0
  6173  001E5C  20F4               	addwfc	prodh,w,c
  6174  001E5E  6E53               	movwf	_minuto+1,c
  6175                           
  6176                           ;headers\unmc_rtcc_01.h: 133: hora = hora_d * 10 + hora_u;
  6177  001E60  5044               	movf	_hora_d,w,c
  6178  001E62  0D0A               	mullw	10
  6179  001E64  5045               	movf	_hora_u,w,c
  6180  001E66  24F3               	addwf	prodl,w,c
  6181  001E68  6E54               	movwf	_hora,c
  6182  001E6A  0E00               	movlw	0
  6183  001E6C  20F4               	addwfc	prodh,w,c
  6184  001E6E  6E55               	movwf	_hora+1,c
  6185                           
  6186                           ;headers\unmc_rtcc_01.h: 134: dia = fecha_d * 10 + fecha_u;
  6187  001E70  5042               	movf	_fecha_d,w,c
  6188  001E72  0D0A               	mullw	10
  6189  001E74  5043               	movf	_fecha_u,w,c
  6190  001E76  24F3               	addwf	prodl,w,c
  6191  001E78  6E56               	movwf	_dia,c
  6192  001E7A  0E00               	movlw	0
  6193  001E7C  20F4               	addwfc	prodh,w,c
  6194  001E7E  6E57               	movwf	_dia+1,c
  6195                           
  6196                           ;headers\unmc_rtcc_01.h: 135: diasem = dia_semana;
  6197  001E80  C03F  F058         	movff	_dia_semana,_diasem
  6198  001E84  6A59               	clrf	_diasem+1,c
  6199                           
  6200                           ;headers\unmc_rtcc_01.h: 136: mes = mes_d * 10 + mes_u;
  6201  001E86  5040               	movf	_mes_d,w,c
  6202  001E88  0D0A               	mullw	10
  6203  001E8A  5041               	movf	_mes_u,w,c
  6204  001E8C  24F3               	addwf	prodl,w,c
  6205  001E8E  6E5A               	movwf	_mes,c
  6206  001E90  0E00               	movlw	0
  6207  001E92  20F4               	addwfc	prodh,w,c
  6208  001E94  6E5B               	movwf	_mes+1,c
  6209                           
  6210                           ;headers\unmc_rtcc_01.h: 137: anio = anio_d * 10 + anio_u;
  6211  001E96  503D               	movf	_anio_d,w,c
  6212  001E98  0D0A               	mullw	10
  6213  001E9A  503E               	movf	_anio_u,w,c
  6214  001E9C  24F3               	addwf	prodl,w,c
  6215  001E9E  6E5C               	movwf	_anio,c
  6216  001EA0  0E00               	movlw	0
  6217  001EA2  20F4               	addwfc	prodh,w,c
  6218  001EA4  6E5D               	movwf	_anio+1,c
  6219  001EA6  0012               	return		;funcret
  6220  001EA8                     __end_of_Read_RTC:
  6221                           	opt stack 0
  6222                           tblptru	equ	0xFF8
  6223                           tblptrh	equ	0xFF7
  6224                           tblptrl	equ	0xFF6
  6225                           tablat	equ	0xFF5
  6226                           prodh	equ	0xFF4
  6227                           prodl	equ	0xFF3
  6228                           intcon	equ	0xFF2
  6229                           intcon2	equ	0xFF1
  6230                           indf0	equ	0xFEF
  6231                           postinc0	equ	0xFEE
  6232                           fsr0h	equ	0xFEA
  6233                           fsr0l	equ	0xFE9
  6234                           wreg	equ	0xFE8
  6235                           postdec1	equ	0xFE5
  6236                           fsr1l	equ	0xFE1
  6237                           indf2	equ	0xFDF
  6238                           postinc2	equ	0xFDE
  6239                           postdec2	equ	0xFDD
  6240                           fsr2h	equ	0xFDA
  6241                           fsr2l	equ	0xFD9
  6242                           status	equ	0xFD8
  6243                           
  6244 ;; *************** function _RtccReadTime *****************
  6245 ;; Defined at:
  6246 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadTime.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  pTm             2    0[COMRAM] PTR struct .
  6249 ;;		 -> RtccTime(4), 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  rTD0            8   10[COMRAM] struct .
  6252 ;;  rTD1            8    2[COMRAM] struct .
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6263 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6265 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6266 ;;Total ram usage:       18 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_Read_RTC
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text26
  6276  002202                     __ptext26:
  6277                           	opt stack 0
  6278  002202                     _RtccReadTime:
  6279                           	opt stack 29
  6280                           
  6281                           ;incstack = 0
  6282  002202  0EFC               	movlw	252
  6283  002204  010F               	movlb	15	; () banked
  6284  002206  173F               	andwf	63,f,b	;volatile
  6285                           
  6286                           ; BSR set to: 15
  6287  002208  010F               	movlb	15	; () banked
  6288  00220A  813F               	bsf	63,0,b	;volatile
  6289                           
  6290                           ; BSR set to: 15
  6291  00220C  CF98 F00F          	movff	3992,RtccReadTime@rTD0+4	;volatile
  6292                           
  6293                           ; BSR set to: 15
  6294  002210  CF99 F010          	movff	3993,RtccReadTime@rTD0+5	;volatile
  6295                           
  6296                           ; BSR set to: 15
  6297  002214  CF98 F011          	movff	3992,RtccReadTime@rTD0+6	;volatile
  6298                           
  6299                           ; BSR set to: 15
  6300  002218  CF99 F012          	movff	3993,RtccReadTime@rTD0+7	;volatile
  6301                           
  6302                           ; BSR set to: 15
  6303  00221C  0EFC               	movlw	252
  6304  00221E  010F               	movlb	15	; () banked
  6305  002220  173F               	andwf	63,f,b	;volatile
  6306  002222  010F               	movlb	15	; () banked
  6307  002224  813F               	bsf	63,0,b	;volatile
  6308                           
  6309                           ; BSR set to: 15
  6310  002226  CF98 F007          	movff	3992,RtccReadTime@rTD1+4	;volatile
  6311                           
  6312                           ; BSR set to: 15
  6313  00222A  CF99 F008          	movff	3993,RtccReadTime@rTD1+5	;volatile
  6314                           
  6315                           ; BSR set to: 15
  6316  00222E  CF98 F009          	movff	3992,RtccReadTime@rTD1+6	;volatile
  6317                           
  6318                           ; BSR set to: 15
  6319  002232  CF99 F00A          	movff	3993,RtccReadTime@rTD1+7	;volatile
  6320                           
  6321                           ; BSR set to: 15
  6322  002236  5009               	movf	RtccReadTime@rTD1+6,w,c
  6323  002238  1811               	xorwf	RtccReadTime@rTD0+6,w,c
  6324  00223A  A4D8               	btfss	status,2,c
  6325  00223C  D7E2               	goto	_RtccReadTime
  6326                           
  6327                           ; BSR set to: 15
  6328                           
  6329                           ; BSR set to: 15
  6330  00223E  EE20 F003          	lfsr	2,3
  6331  002242  5001               	movf	RtccReadTime@pTm,w,c
  6332  002244  26D9               	addwf	fsr2l,f,c
  6333  002246  5002               	movf	RtccReadTime@pTm+1,w,c
  6334  002248  22DA               	addwfc	fsr2h,f,c
  6335  00224A  C00F  FFDF         	movff	RtccReadTime@rTD0+4,indf2
  6336  00224E  EE20 F002          	lfsr	2,2
  6337  002252  5001               	movf	RtccReadTime@pTm,w,c
  6338  002254  26D9               	addwf	fsr2l,f,c
  6339  002256  5002               	movf	RtccReadTime@pTm+1,w,c
  6340  002258  22DA               	addwfc	fsr2h,f,c
  6341  00225A  C012  FFDF         	movff	RtccReadTime@rTD0+7,indf2
  6342  00225E  EE20 F001          	lfsr	2,1
  6343  002262  5001               	movf	RtccReadTime@pTm,w,c
  6344  002264  26D9               	addwf	fsr2l,f,c
  6345  002266  5002               	movf	RtccReadTime@pTm+1,w,c
  6346  002268  22DA               	addwfc	fsr2h,f,c
  6347  00226A  C011  FFDF         	movff	RtccReadTime@rTD0+6,indf2
  6348                           
  6349                           ; BSR set to: 15
  6350  00226E  0012               	return		;funcret
  6351  002270                     __end_of_RtccReadTime:
  6352                           	opt stack 0
  6353                           tblptru	equ	0xFF8
  6354                           tblptrh	equ	0xFF7
  6355                           tblptrl	equ	0xFF6
  6356                           tablat	equ	0xFF5
  6357                           prodh	equ	0xFF4
  6358                           prodl	equ	0xFF3
  6359                           intcon	equ	0xFF2
  6360                           intcon2	equ	0xFF1
  6361                           indf0	equ	0xFEF
  6362                           postinc0	equ	0xFEE
  6363                           fsr0h	equ	0xFEA
  6364                           fsr0l	equ	0xFE9
  6365                           wreg	equ	0xFE8
  6366                           postdec1	equ	0xFE5
  6367                           fsr1l	equ	0xFE1
  6368                           indf2	equ	0xFDF
  6369                           postinc2	equ	0xFDE
  6370                           postdec2	equ	0xFDD
  6371                           fsr2h	equ	0xFDA
  6372                           fsr2l	equ	0xFD9
  6373                           status	equ	0xFD8
  6374                           
  6375 ;; *************** function _RtccReadDate *****************
  6376 ;; Defined at:
  6377 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\pic18\plib\rtcc\RtccReadDate.c"
  6378 ;; Parameters:    Size  Location     Type
  6379 ;;  pDt             2    0[COMRAM] PTR struct .
  6380 ;;		 -> RtccDate(4), 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  rTD0            8   10[COMRAM] struct .
  6383 ;;  rTD1            8    2[COMRAM] struct .
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  1    wreg      void 
  6386 ;; Registers used:
  6387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6394 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6397 ;;Total ram usage:       18 bytes
  6398 ;; Hardware stack levels used:    1
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_Read_RTC
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text27
  6407  001EA8                     __ptext27:
  6408                           	opt stack 0
  6409  001EA8                     _RtccReadDate:
  6410                           	opt stack 29
  6411                           
  6412                           ; BSR set to: 15
  6413                           ;incstack = 0
  6414  001EA8  0EFC               	movlw	252
  6415  001EAA  010F               	movlb	15	; () banked
  6416  001EAC  173F               	andwf	63,f,b	;volatile
  6417  001EAE  0E03               	movlw	3
  6418  001EB0  010F               	movlb	15	; () banked
  6419  001EB2  133F               	iorwf	63,f,b	;volatile
  6420                           
  6421                           ; BSR set to: 15
  6422  001EB4  CF98 F00B          	movff	3992,RtccReadDate@rTD0	;volatile
  6423                           
  6424                           ; BSR set to: 15
  6425  001EB8  CF99 F00C          	movff	3993,RtccReadDate@rTD0+1	;volatile
  6426                           
  6427                           ; BSR set to: 15
  6428  001EBC  CF98 F00D          	movff	3992,RtccReadDate@rTD0+2	;volatile
  6429                           
  6430                           ; BSR set to: 15
  6431  001EC0  CF99 F00E          	movff	3993,RtccReadDate@rTD0+3	;volatile
  6432                           
  6433                           ; BSR set to: 15
  6434  001EC4  CF98 F00F          	movff	3992,RtccReadDate@rTD0+4	;volatile
  6435                           
  6436                           ; BSR set to: 15
  6437  001EC8  CF99 F010          	movff	3993,RtccReadDate@rTD0+5	;volatile
  6438  001ECC  0EFC               	movlw	252
  6439  001ECE  010F               	movlb	15	; () banked
  6440  001ED0  173F               	andwf	63,f,b	;volatile
  6441  001ED2  0E03               	movlw	3
  6442  001ED4  010F               	movlb	15	; () banked
  6443  001ED6  133F               	iorwf	63,f,b	;volatile
  6444                           
  6445                           ; BSR set to: 15
  6446  001ED8  CF98 F003          	movff	3992,RtccReadDate@rTD1	;volatile
  6447                           
  6448                           ; BSR set to: 15
  6449  001EDC  CF99 F004          	movff	3993,RtccReadDate@rTD1+1	;volatile
  6450                           
  6451                           ; BSR set to: 15
  6452  001EE0  CF98 F005          	movff	3992,RtccReadDate@rTD1+2	;volatile
  6453                           
  6454                           ; BSR set to: 15
  6455  001EE4  CF99 F006          	movff	3993,RtccReadDate@rTD1+3	;volatile
  6456                           
  6457                           ; BSR set to: 15
  6458  001EE8  CF98 F007          	movff	3992,RtccReadDate@rTD1+4	;volatile
  6459                           
  6460                           ; BSR set to: 15
  6461  001EEC  CF99 F008          	movff	3993,RtccReadDate@rTD1+5	;volatile
  6462  001EF0  5005               	movf	RtccReadDate@rTD1+2,w,c
  6463  001EF2  180D               	xorwf	RtccReadDate@rTD0+2,w,c
  6464  001EF4  A4D8               	btfss	status,2,c
  6465  001EF6  D7D8               	goto	_RtccReadDate
  6466                           
  6467                           ; BSR set to: 15
  6468                           
  6469                           ; BSR set to: 15
  6470  001EF8  EE20 F001          	lfsr	2,1
  6471  001EFC  5001               	movf	RtccReadDate@pDt,w,c
  6472  001EFE  26D9               	addwf	fsr2l,f,c
  6473  001F00  5002               	movf	RtccReadDate@pDt+1,w,c
  6474  001F02  22DA               	addwfc	fsr2h,f,c
  6475  001F04  C00D  FFDF         	movff	RtccReadDate@rTD0+2,indf2
  6476  001F08  EE20 F002          	lfsr	2,2
  6477  001F0C  5001               	movf	RtccReadDate@pDt,w,c
  6478  001F0E  26D9               	addwf	fsr2l,f,c
  6479  001F10  5002               	movf	RtccReadDate@pDt+1,w,c
  6480  001F12  22DA               	addwfc	fsr2h,f,c
  6481  001F14  C00E  FFDF         	movff	RtccReadDate@rTD0+3,indf2
  6482                           
  6483                           ; BSR set to: 15
  6484  001F18  C001  FFD9         	movff	RtccReadDate@pDt,fsr2l
  6485  001F1C  C002  FFDA         	movff	RtccReadDate@pDt+1,fsr2h
  6486  001F20  C010  FFDF         	movff	RtccReadDate@rTD0+5,indf2
  6487                           
  6488                           ; BSR set to: 15
  6489  001F24  EE20 F003          	lfsr	2,3
  6490  001F28  5001               	movf	RtccReadDate@pDt,w,c
  6491  001F2A  26D9               	addwf	fsr2l,f,c
  6492  001F2C  5002               	movf	RtccReadDate@pDt+1,w,c
  6493  001F2E  22DA               	addwfc	fsr2h,f,c
  6494  001F30  C00B  FFDF         	movff	RtccReadDate@rTD0,indf2
  6495                           
  6496                           ; BSR set to: 15
  6497  001F34  0012               	return		;funcret
  6498  001F36                     __end_of_RtccReadDate:
  6499                           	opt stack 0
  6500                           tblptru	equ	0xFF8
  6501                           tblptrh	equ	0xFF7
  6502                           tblptrl	equ	0xFF6
  6503                           tablat	equ	0xFF5
  6504                           prodh	equ	0xFF4
  6505                           prodl	equ	0xFF3
  6506                           intcon	equ	0xFF2
  6507                           intcon2	equ	0xFF1
  6508                           indf0	equ	0xFEF
  6509                           postinc0	equ	0xFEE
  6510                           fsr0h	equ	0xFEA
  6511                           fsr0l	equ	0xFE9
  6512                           wreg	equ	0xFE8
  6513                           postdec1	equ	0xFE5
  6514                           fsr1l	equ	0xFE1
  6515                           indf2	equ	0xFDF
  6516                           postinc2	equ	0xFDE
  6517                           postdec2	equ	0xFDD
  6518                           fsr2h	equ	0xFDA
  6519                           fsr2l	equ	0xFD9
  6520                           status	equ	0xFD8
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           intcon	equ	0xFF2
  6528                           intcon2	equ	0xFF1
  6529                           indf0	equ	0xFEF
  6530                           postinc0	equ	0xFEE
  6531                           fsr0h	equ	0xFEA
  6532                           fsr0l	equ	0xFE9
  6533                           wreg	equ	0xFE8
  6534                           postdec1	equ	0xFE5
  6535                           fsr1l	equ	0xFE1
  6536                           indf2	equ	0xFDF
  6537                           postinc2	equ	0xFDE
  6538                           postdec2	equ	0xFDD
  6539                           fsr2h	equ	0xFDA
  6540                           fsr2l	equ	0xFD9
  6541                           status	equ	0xFD8
  6542                           
  6543                           	psect	rparam
  6544  0000                     tblptru	equ	0xFF8
  6545                           tblptrh	equ	0xFF7
  6546                           tblptrl	equ	0xFF6
  6547                           tablat	equ	0xFF5
  6548                           prodh	equ	0xFF4
  6549                           prodl	equ	0xFF3
  6550                           intcon	equ	0xFF2
  6551                           intcon2	equ	0xFF1
  6552                           indf0	equ	0xFEF
  6553                           postinc0	equ	0xFEE
  6554                           fsr0h	equ	0xFEA
  6555                           fsr0l	equ	0xFE9
  6556                           wreg	equ	0xFE8
  6557                           postdec1	equ	0xFE5
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8


Data Sizes:
    Strings     218
    Constant    14
    Data        44
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      94
    BANK0           160      0     146
    BANK1           256      0      20
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    main$2130	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), STR_13(CODE[9]), 
		 -> STR_12(CODE[9]), STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), 
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    RtccWriteTime@pTm	PTR const struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccWriteDate@pDt	PTR const struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    RtccReadTime@pTm	PTR struct . size(2) Largest target is 4
		 -> RtccTime(COMRAM[4]), 

    RtccReadDate@pDt	PTR struct . size(2) Largest target is 4
		 -> RtccDate(COMRAM[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_32(CODE[7]), STR_16(CODE[9]), STR_15(CODE[9]), STR_14(CODE[9]), 
		 -> STR_13(CODE[9]), STR_12(CODE[9]), STR_11(CODE[8]), STR_10(CODE[8]), 
		 -> STR_9(CODE[8]), STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), 
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[5]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_25(CODE[15]), STR_24(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer5(BANK0[20]), buffer4(BANK0[20]), buffer3(BANK0[20]), buffer2(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    lcd_putrs@ptr	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer5(BANK0[20]), buffer4(BANK0[20]), buffer3(BANK0[20]), STR_27(CODE[9]), 
		 -> STR_26(CODE[4]), buffer2(BANK0[20]), STR_23(CODE[8]), STR_22(CODE[8]), 
		 -> STR_21(CODE[8]), STR_20(CODE[8]), STR_19(CODE[8]), STR_18(CODE[8]), 
		 -> STR_17(CODE[8]), 

    array_boton_seleccionar_accion_cafe	PTR unsigned char [2] size(2) Largest target is 9
		 -> STR_16(CODE[9]), STR_15(CODE[9]), 

    array_boton_seleccionar_tamanio_cafe	PTR unsigned char [3] size(2) Largest target is 9
		 -> STR_14(CODE[9]), STR_13(CODE[9]), STR_12(CODE[9]), 

    array_boton_seleccionar_tipo_cafe	PTR unsigned char [3] size(2) Largest target is 8
		 -> STR_11(CODE[8]), STR_10(CODE[8]), STR_9(CODE[8]), 

    array_seleccionar	PTR unsigned char [8] size(2) Largest target is 5
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _setHoraMinutoSegundo->_sprintf
    _setDiaSemana->_lcd_putrs
    _setDiaMesAnio->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_putrs->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _Write_RTC->_RtccWriteDate
    _lcd_init->_lcd_send_byte
    _lcd_comand->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _Read_RTC->_RtccReadDate
    _Read_RTC->_RtccReadTime

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0   76208
                                             39 COMRAM    13    13      0
                           _Read_RTC
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                    _setRelojDigital
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   33474
                          _Write_RTC
                         _lcd_comand
                           _lcd_init
                    _setRelojDigital
 ---------------------------------------------------------------------------------
 (2) _setRelojDigital                                      0     0      0   29343
                      _setDiaMesAnio
                       _setDiaSemana
               _setHoraMinutoSegundo
 ---------------------------------------------------------------------------------
 (3) _setHoraMinutoSegundo                                 0     0      0   11710
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _setDiaSemana                                         1     1      0    5923
                                             10 COMRAM     1     1      0
                         _lcd_gotoxy
                          _lcd_putrs
 ---------------------------------------------------------------------------------
 (3) _setDiaMesAnio                                        0     0      0   11710
                          _Write_RTC
                         _lcd_gotoxy
                          _lcd_putrs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    21     10    3318
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     711
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _lcd_putrs                                            2     0      2    3930
                                              8 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             1     1      0    2745
                                              7 COMRAM     1     1      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    1993
                                              4 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (4) _Write_RTC                                            0     0      0    2469
                           _RtccWrOn
                      _RtccWriteDate
                      _RtccWriteTime
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _RtccWriteTime                                       11     8      3     561
                                              0 COMRAM    11     8      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (5) _RtccWriteDate                                       13    10      3     696
                                              0 COMRAM    13    10      3
                           _RtccWrOn
 ---------------------------------------------------------------------------------
 (6) _RtccWrOn                                             2     2      0       0
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0     932
                                              4 COMRAM     1     1      0
                        _Delay1KTCYx
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_comand                                           1     1      0     730
                                              4 COMRAM     1     1      0
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_send_byte                                        2     1      1     708
                                              2 COMRAM     2     1      1
                       _Delay100TCYx
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (7) _lcd_send_nibble                                      2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Delay100TCYx                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Read_RTC                                             0     0      0     992
                       _RtccReadDate
                       _RtccReadTime
 ---------------------------------------------------------------------------------
 (2) _RtccReadTime                                        18    16      2     449
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (2) _RtccReadDate                                        18    16      2     543
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_RTC
     _RtccReadDate
     _RtccReadTime
   _Write_RTC
     _RtccWrOn
     _RtccWriteDate
       _RtccWrOn
     _RtccWriteTime
       _RtccWrOn
     ___awdiv
   _lcd_gotoxy
     _lcd_send_byte
       _Delay100TCYx
       _lcd_send_nibble
   _lcd_putrs
     _lcd_putc
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
   _setRelojDigital
     _setDiaMesAnio
       _Write_RTC
         _RtccWrOn
         _RtccWriteDate
           _RtccWrOn
         _RtccWriteTime
           _RtccWrOn
         ___awdiv
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _setDiaSemana
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
     _setHoraMinutoSegundo
       _Write_RTC
         _RtccWrOn
         _RtccWriteDate
           _RtccWrOn
         _RtccWriteTime
           _RtccWrOn
         ___awdiv
       _lcd_gotoxy
         _lcd_send_byte
           _Delay100TCYx
           _lcd_send_nibble
       _lcd_putrs
         _lcd_putc
           _lcd_gotoxy
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _setup
     _Write_RTC
       _RtccWrOn
       _RtccWriteDate
         _RtccWrOn
       _RtccWriteTime
         _RtccWrOn
       ___awdiv
     _lcd_comand
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
     _lcd_init
       _Delay1KTCYx
       _lcd_send_byte
         _Delay100TCYx
         _lcd_send_nibble
       _lcd_send_nibble
     _setRelojDigital
       _setDiaMesAnio
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _setDiaSemana
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
       _setHoraMinutoSegundo
         _Write_RTC
           _RtccWrOn
           _RtccWriteDate
             _RtccWrOn
           _RtccWriteTime
             _RtccWrOn
           ___awdiv
         _lcd_gotoxy
           _lcd_send_byte
             _Delay100TCYx
             _lcd_send_nibble
         _lcd_putrs
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _Delay100TCYx
                 _lcd_send_nibble
             _lcd_send_byte
               _Delay100TCYx
               _lcd_send_nibble
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      14       8        7.8%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      92       5       91.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     34      5E       1       98.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104       6        0.0%
DATA                 0      0     104       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Fri Sep 22 20:46:43 2017

                                   _a 0037                                     _b 0080  
                                   _c 007E                                     _i 003B  
                                   _j 0039                                     _k 007C  
                      ?_lcd_send_byte 0003                          ___awdiv@sign 0006  
                 ___wmul@multiplicand 0003                           lcd_comand@d 0005  
                        __CFG_CP0$OFF 000000              __size_of_setRelojDigital 000E  
                                 l210 114C                                   l211 1156  
                                 l204 1126                                   l205 112E  
                                 l310 145E                                   l302 1430  
                                 l230 11E6                                   l303 1436  
                                 l231 11EE                                   l215 11C0  
                                 l223 11A4                                   l224 11AE  
                                 l161 19F6                                   l153 1938  
                                 l241 1290                                   l217 117E  
                                 l170 1FF2                                   l322 14A2  
                                 l250 127E                                   l218 1186  
                                 l163 1A26                                   l155 1966  
                                 l323 14A6                                   l315 1478  
                                 l243 124E                                   l412 22EC  
                                 l316 147E                                   l244 1256  
                                 l228 1228                                   l236 120C  
                                 l413 22C4                                   l157 1996  
                                 l341 1508                                   l309 145A  
                                 l237 1216                                   l430 1646  
                                 l174 21BE                                   l342 150E  
                                 l270 1326                                   l254 12F8  
                                 l262 12DC                                   l431 1640  
                                 l159 19C6                                   l335 14EA  
                                 l263 12E6                                   l191 1096  
                                 l336 14EE                                   l328 14C0  
                                 l280 13C8                                   l256 12B6  
                                 l192 109A                                   l441 16D2  
                                 l169 1FD6                                   l329 14C6  
                                 l257 12BE                                   l249 1274  
                                 l522 1BFE                                   l442 16FA  
                                 l282 1386                                   l186 0FFE  
                                 l451 1786                                   l443 1708  
                                 l427 1618                                   l283 138E  
                                 l267 1360                                   l275 1344  
                                 l187 103C                                   l460 1832  
                                 l452 1768                                   l444 1704  
                                 l436 1674                                   l428 1632  
                                 l348 15F8                                   l276 134E  
                                 l188 1076                                   l381 2086  
                                 l533 1CCA                                   l461 183A  
                                 l349 1526                                   l269 131E  
                                 l197 10B4                                   l374 23FC  
                                 l470 18DC                                   l462 185E  
                                 l438 179E                                   l446 173C  
                                 l294 13FA                                   l198 10BA  
                                 l375 23FE                                   l551 1D10  
                                 l391 2348                                   l471 188A  
                                 l455 1798                                   l528 1C62  
                                 l392 2318                                   l456 17C6  
                                 l448 1756                                   l296 1412  
                                 l288 13AC                                   l529 1CC0  
                                 l449 1746                                   l297 1416  
                                 l289 13B6                                   l562 1DC6  
                                 l386 2444                                   l394 2324  
                                 l379 2064                                   l731 1F4A  
                                 l395 2330                                   l740 1FB0  
                                 l732 1F5A                                   l396 233C  
                                 l557 1D64                                   l558 1DBC  
                                 l734 1F78                                   l735 1F70  
                                 l738 1F98                                   l914 2490  
                                 l739 1FA2                                   l765 24BC  
                                 l779 24AC                                   l993 228E  
                                 l994 2286                                   l997 22AE  
                                 l998 22B8                                   _dia 0056  
                                 _mes 005A                                   wreg 000FE8  
                     RtccReadDate@pDt 0001                           lcd_gotoxy@x 0006  
                         lcd_gotoxy@y 0005                                  l1003 2374  
                                l1004 236C                                  l1007 238C  
                                l1008 2396                                  l2701 1768  
                                l2721 17E2                                  l2931 205C  
                                l2695 1746                                  l2945 207E  
                                STR_1 0FBF                                  STR_2 0FBA  
                                STR_3 0FDD                                  STR_4 0FD8  
                                STR_5 0FC4                                  STR_6 0FD3  
                                STR_7 0FCE                                  STR_8 0FC9  
                                STR_9 0F9B                                  u3010 125A  
                                u2230 2292                                  u3110 12EA  
                                u3040 1282                                  u2410 180E  
                                u2260 2378                                  u3220 1392  
                                u2190 1F7C                                  u3150 132A  
                                u1800 20B8                                  u2280 22E4  
                                u3320 143A                                  u3080 12C2  
                                u2290 230C                                  u3250 13BA  
                                u1820 20D0                                  u2460 1866  
                                u3500 14F2                                  u3180 1352  
                                u2630 2074                                  u2470 1884  
                                u3430 14AA                                  u2287 22DA  
                                u1840 20EA                                  u2480 18E4  
                                u3360 1462                                  u2800 1132  
                                u2297 2302                                  u1818 20BA  
                                u2490 18FC                                  u2570 1FCA  
                                u3530 1512                                  u3290 141A  
                                u2730 109E                                  u1860 2106  
                                u2580 1FE6                                  u3460 14CA  
                                u2900 11B2                                  u1838 20D2  
                                u2590 21A2                                  u3390 1482  
                                u2830 115A                                  u3607 106C  
                                u2760 10BE                                  u3617 11B8  
                                u1858 20EC                                  u3570 152A  
                                u3707 198C                                  u3627 1220  
                                u2940 11F2                                  u3717 19BC  
                                u3637 1288                                  u1878 2108  
                                u2870 118A                                  u3727 19EC  
                                u3647 12F0                                  u3737 1A1C  
                                u3657 1358                                  u2970 121A  
                                u3747 1A4C                                  u3667 13C0  
                                u3757 24AE                                  u3677 1602  
                                u3597 1032                                  u3767 24BE  
                                u3687 192E                                  u3697 195C  
          main@boton_seleccionar_cafe 002F                      ?_lcd_send_nibble 0001  
                         main@tamanio 002D                                  _anio 005C  
                                _flag 02F0                                  _main 0FEA  
                                _hora 0054                                  fsr0h 000FEA  
                                indf0 000FEF                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                       __CFG_T1DIG$ON 000000                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                       __CFG_IESO$OFF 000000                      RtccReadDate@rTD0 000B  
                    RtccReadDate@rTD1 0003                          ___param_bank 000000  
                     RtccReadTime@pTm 0001                           _Delay1KTCYx 24AA  
                       __CFG_PLLDIV$1 000000                                 ?_main 0001  
                     __end_of___awdiv 1FBA                                 STR_10 0F63  
                               STR_11 0F8B                                 STR_20 0F93  
                               STR_12 0F36                                 STR_21 0F83  
                               STR_13 0F51                                 STR_30 0FE6  
                               STR_22 0FAB                                 STR_14 0F48  
                               STR_31 0FE6                                 STR_23 0F73  
                               STR_15 0F3F                                 STR_32 0FB3  
                               STR_24 0F0F                                 STR_16 0F5A  
                               STR_17 0FA3                                 STR_25 0F1E  
                               STR_26 0FE2                                 STR_18 0F6B  
                               STR_19 0F7B                                 STR_27 0F2D  
                               STR_28 0FE6                                 STR_29 0FE6  
               __size_of_Delay100TCYx 0010                       ___awdiv@divisor 0003  
                     __end_of___lwdiv 22C2                       __end_of___lwmod 23A0  
                     ___awdiv@counter 0005                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                      __CFG_FCMEN$OFF 000000  _array_boton_seleccionar_tamanio_cafe 00E2  
                     __end_of_dpowers 0F0B                                 _mes_d 0040  
                               _mes_u 0041                       __end_of_isdigit 2498  
                               _setup 23A0                        __pbitbssCOMRAM 02F0  
                               tablat 000FF5                  _setHoraMinutoSegundo 2192  
                        lcd_putrs@ptr 0009                                 status 000FD8  
                     __end_of_sprintf 190A               __CFG_DSWDTOSC$INTOSCREF 000000  
                     __initialization 2122                          _Delay100TCYx 24BA  
                        __end_of_main 160E                       ??_lcd_send_byte 0004  
                    RtccReadTime@rTD0 000B                      RtccReadTime@rTD1 0003  
                    __end_of_Read_RTC 1EA8                                ??_main 0028  
                       __activetblptr 000002                      __end_of_RtccWrOn 24AA  
                   ??_setRelojDigital 0028                                _ADCON0 000FC2  
                              _ADCON1 000FC1                                _EECON2 000FA7  
                              _ANCON0 000F48                                _ANCON1 000F49  
                    ___awdiv@dividend 0001                                ?_setup 0001  
               ?_setHoraMinutoSegundo 0001                        __CFG_WDTEN$OFF 000000  
                    RtccWriteDate@pDt 0001                                _RTCCFG 000F3F  
                      __CFG_WPCFG$OFF 000000                        __CFG_WPDIS$OFF 000000  
                      __CFG_XINST$OFF 000000                      __end_of_lcd_init 20AC  
                    __end_of_lcd_putc 235E                                ___wmul 2412  
                           ??___awdiv 0005                        __CFG_STVREN$ON 000000  
                              _diasem 0058                                _anio_d 003D  
                              _anio_u 003E                             ??___lwdiv 0005  
                           ??___lwmod 000C                                _hora_d 0044  
                              _hora_u 0045                                clear_0 2168  
                              clear_1 2174                                clear_2 2182  
                    ___awdiv@quotient 0007                                _minuto 0052  
               __end_of_RtccWriteDate 1CD4                 __end_of_RtccWriteTime 1DD0  
                    RtccWriteTime@pTm 0001                          __pdataCOMRAM 0052  
                           ??_isdigit 0001                          __mediumconst 0000  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8                             ??_sprintf 0017  
                          __accesstop 0060               __end_of__initialization 2188  
                  __size_of_Write_RTC 0148                         ___rparam_used 000001  
                       ?_setDiaSemana 0001                        __pcstackCOMRAM 0001  
                        __pidataBANK0 245A                         __end_of_setup 23E0  
                     __CFG_DSWDTPS$G2 000000                       __CFG_OSC$INTOSC 000000  
                   lcd_gotoxy@address 0007                    __size_of_lcd_putrs 0052  
              ??_setHoraMinutoSegundo 0028                          sprintf@width 0025  
                             ??_setup 0028                            __pbssBANK0 0060  
                          __pbssBANK1 0100                             ?_Read_RTC 0001  
                          _dia_semana 003F             RtccWriteTime@tempHourWDay 000A  
                      ??_setDiaSemana 000B                             ?_RtccWrOn 0001  
                      lcd_send_byte@n 0003                               ?___wmul 0001  
                       ?_RtccReadDate 0001                         ?_RtccReadTime 0001  
                        ?_Delay1KTCYx 0001                __size_of_setDiaMesAnio 007C  
                   __end_of_Write_RTC 1B9E                            _lcd_comand 24D8  
                          _lcd_gotoxy 2438                               _RTCVALH 000F99  
                             _RTCVALL 000F98                             ?_lcd_init 0001  
                           ?_lcd_putc 0001                            ??_Read_RTC 0013  
                             __Hparam 0000                               __Lparam 0000  
            __size_of_lcd_send_nibble 0076                            ??_RtccWrOn 0001  
                      ??_RtccReadDate 0003                        ??_RtccReadTime 0003  
                             ___awdiv 1F36                     __end_of_lcd_putrs 2314  
                     __size_of___wmul 0026                               ___lwdiv 2270  
                             ___lwmod 235E                          __psmallconst 0F00  
                         _RtccTimeVal 0078                               __pcinit 2122  
                             _fecha_d 0042                       _setRelojDigital 24CA  
                             _fecha_u 0043                               __ramtop 0F00  
                             __ptext0 0FEA                               __ptext1 23A0  
                             __ptext2 24CA                               __ptext3 2192  
                             __ptext4 190A                               __ptext5 1FBA  
                             __ptext6 160E                               __ptext7 247A  
                             __ptext8 2412                               __ptext9 235E  
                             _buffer1 0100                               _buffer2 00BE  
                             _buffer3 00AA                               _buffer4 0096  
                             _buffer5 0082                             _T1CONbits 000FCD  
                             _dpowers 0F01   _array_boton_seleccionar_accion_cafe 00EE  
                             _isdigit 247A                               _segundo 0035  
                             _sprintf 160E                            ??_lcd_init 0005  
                          ??_lcd_putc 0008                  end_of_initialization 2188  
                       _setDiaMesAnio 1FBA                  lcd_send_byte@address 0004  
                       __Lmediumconst 0000                               postdec1 000FE5  
                             postdec2 000FDD                               postinc0 000FEE  
                             postinc2 000FDE                 __end_of_lcd_send_byte 2412  
                           _PORTAbits 000F80                      __CFG_DSBOREN$OFF 000000  
                __end_of_setDiaSemana 1A56                           ?_lcd_comand 0001  
                    __CFG_CPUDIV$OSC1 000000                             _TRISBbits 000F93  
                         ?_lcd_gotoxy 0005                       _LCD_INIT_STRING 0F0B  
                      ?_setDiaMesAnio 0001                            main@accion 0031  
                    __CFG_IOL1WAY$OFF 000000             RtccWriteDate@tempDayMonth 000A  
             __end_of_setRelojDigital 24D8                   __CFG_MSSP7B_EN$MSK7 000000  
                    Delay100TCYx@unit 0001                        __end_of___wmul 2438  
                       __pidataCOMRAM 24E6             RtccWriteDate@tempHourWDay 000C  
                   ??_lcd_send_nibble 0001                  __size_of_Delay1KTCYx 0010  
                    __CFG_DSWDTEN$OFF 000000                   start_initialization 2122  
                __end_of_RtccReadDate 1F36                  __end_of_RtccReadTime 2270  
                RtccWriteTime@wasAlrm 0006                  RtccWriteTime@wasWrEn 0007  
              __size_of_RtccWriteDate 0136                       RtccWriteDate@di 0003  
              __size_of_RtccWriteTime 00FC                     __size_of_Read_RTC 00D8  
                 __size_of_lcd_comand 000E                   __size_of_lcd_gotoxy 0022  
                            ??___wmul 0005                           __pdataBANK0 00D2  
                   __size_of_RtccWrOn 0012                       RtccWriteTime@di 0003  
                    __CFG_LPT1OSC$OFF 000000                           _ALRMCFGbits 000F91  
             __end_of_LCD_INIT_STRING 0F0F                           __pbssCOMRAM 0035  
               main@boton_seleccionar 0033                             _Write_RTC 1A56  
                     ??_setDiaMesAnio 0028                          _isdigit$1777 0002  
                     Delay1KTCYx@unit 0001         __size_of_setHoraMinutoSegundo 0070  
                   __size_of_lcd_init 0076                           sprintf@flag 001B  
                   __size_of_lcd_putc 004A                           sprintf@prec 001E  
                    ___lwdiv@dividend 0001                      ?_setRelojDigital 0001  
                       ?_Delay100TCYx 0001                              ?___awdiv 0001  
                            ?___lwdiv 0001                              ?___lwmod 0008  
               __size_of_setDiaSemana 014C               RtccWriteTime@tempMinSec 0008  
                           _lcd_putrs 22C2               main@boton_centro_estado 0029  
                       _RtccWriteDate 1B9E                           __smallconst 0F00  
                       _RtccWriteTime 1CD4                              ?_isdigit 0001  
                __CFG_RTCOSC$T1OSCREF 000000                            ?_Write_RTC 0001  
                    ___lwdiv@quotient 0005                              ?_sprintf 000D  
                      __size_of_setup 0040                      _RtccAlrmTimeDate 0068  
                      ___wmul@product 0005                              _LATBbits 000F8A  
                            _PIE3bits 000FA3                          _setDiaSemana 190A  
                           _segundo_d 0048                        ??_Delay100TCYx 0001  
                           _segundo_u 0049                      __CFG_WDTPS$32768 000000  
                  RtccWriteDate@wasOn 0005                    _Rtcc_read_TimeDate 0060  
                      ?_RtccWriteDate 0001                            ?_lcd_putrs 0009  
                   ___wmul@multiplier 0001                        ?_RtccWriteTime 0001  
                           lcd_init@i 0005                 __size_of_RtccReadDate 008E  
                        ??_lcd_comand 0005                             lcd_putc@c 0008  
               __size_of_RtccReadTime 006E                          ??_lcd_gotoxy 0006  
                         _INTCON2bits 000FF1                             copy_data0 2136  
                           copy_data1 2156                              _Read_RTC 1DD0  
                   _array_seleccionar 00D2                       _lcd_send_nibble 20AC  
                            __Hrparam 0000                              _RtccDate 004A  
                            __Lrparam 0000                              _RtccTime 004E  
                            _RtccWrOn 2498                    __end_of_lcd_comand 24E6  
                  __end_of_lcd_gotoxy 245A                          _RtccReadDate 1EA8  
                    __size_of___awdiv 0084                          _RtccReadTime 2202  
   _array_boton_seleccionar_tipo_cafe 00E8                      __size_of___lwdiv 0052  
                    __size_of___lwmod 0042                          _RtccTimeDate 0070  
                          sprintf@len 0023                            sprintf@val 001C  
                    __size_of_isdigit 001E                       ___lwdiv@divisor 0003  
                         ??_Write_RTC 000E                       ___lwdiv@counter 0007  
                            __ptext10 2270                              __ptext11 22C2  
                            __ptext20 24AA                              __ptext12 2314  
                            __ptext21 24D8                              __ptext13 2438  
                            __ptext22 23E0                              __ptext14 1A56  
                            __ptext23 20AC                              __ptext15 1F36  
                            __ptext24 24BA                              __ptext16 1CD4  
                            __ptext25 1DD0                              __ptext17 1B9E  
                            __ptext26 2202                              __ptext18 2498  
                            __ptext27 1EA8                              __ptext19 2036  
                            _lcd_init 2036                              _lcd_putc 2314  
                    __size_of_sprintf 02FC                __size_of_lcd_send_byte 0032  
                       __size_of_main 0624                              _minuto_d 0046  
                            _minuto_u 0047                         ??_Delay1KTCYx 0001  
                     ??_RtccWriteDate 0004                       ??_RtccWriteTime 0004  
                            main@tipo 002B                           ??_lcd_putrs 000B  
                         _OSCTUNEbits 000F9B                            _INTCONbits 000FF2  
                  RtccWriteTime@wasOn 0005                  __end_of_Delay100TCYx 24CA  
                            isdigit@c 0003                             sprintf@ap 001F  
                           sprintf@cp 0021               __end_of_lcd_send_nibble 2122  
                           sprintf@sp 000D                      ___lwmod@dividend 0008  
                          _OSCCONbits 000FD3                 RtccWriteDate@tempYear 0007  
        __end_of_setHoraMinutoSegundo 2202                         _lcd_send_byte 23E0  
                          _RTCCFGbits 000F3F                              sprintf@c 0027  
                            sprintf@f 000F                       ___lwmod@divisor 000A  
                 __end_of_Delay1KTCYx 24BA                       ___lwmod@counter 000C  
                RtccWriteDate@wasAlrm 0006                  RtccWriteDate@wasWrEn 0009  
               __end_of_setDiaMesAnio 2036                 lcd_send_nibble@nibble 0002  
